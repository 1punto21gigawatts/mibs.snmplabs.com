#
# PySNMP MIB module Juniper-Experiment (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-Experiment
# Produced by pysmi-0.3.4 at Wed May  1 11:24:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
juniperUniExperiment, = mibBuilder.importSymbols("Juniper-UNI-SMI", "juniperUniExperiment")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, MibIdentifier, NotificationType, ObjectIdentity, Unsigned32, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Integer32, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "ObjectIdentity", "Unsigned32", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Integer32", "Gauge32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniExperiment = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2))
juniExperiment.setRevisions(('2002-11-13 20:58', '2001-06-20 20:36', '2000-10-24 21:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniExperiment.setRevisionsDescriptions(('Replaced Unisphere names with Juniper names. Added OID for the Internet draft MPLS MIB.', 'Added OID for the Internet draft SONET APS-MIB.', 'The initial release of this management information module.',))
if mibBuilder.loadTexts: juniExperiment.setLastUpdated('200211132058Z')
if mibBuilder.loadTexts: juniExperiment.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniExperiment.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniExperiment.setDescription('The object identifiers for experimental MIBs for the Juniper Networks, Inc. edge router products. This is the top-level object identifier registry for SNMP modules containing experimental MIB definitions. Experimental MIBs are defined as: 1) IETF work-in-process MIBs which have not been assigned a permanent object identifier by the IANA. 2) Juniper work-in-process MIBs that have not achieved final production quality or field experience. NOTE: Support for MIBs under the this OID subtree is temporary and changes to objects may occur without notice.')
juniDvmrpExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2, 1))
if mibBuilder.loadTexts: juniDvmrpExperiment.setStatus('current')
if mibBuilder.loadTexts: juniDvmrpExperiment.setDescription('The object identifier used to anchor the experimental IETF draft for the Distance Vector Multicast Routing Protocol (DVMRP) MIB.')
if mibBuilder.loadTexts: juniDvmrpExperiment.setReference('IETF Inter-Domain Multicast Routing (idmr) Working Group document: draft-ietf-idmr-dvmrp-mib-11.txt.')
juniSonetApsExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2, 2))
if mibBuilder.loadTexts: juniSonetApsExperiment.setStatus('current')
if mibBuilder.loadTexts: juniSonetApsExperiment.setDescription('The object identifier used to anchor the experimental IETF draft for the SONET linear Automatic Protection Switching (APS) MIB.')
if mibBuilder.loadTexts: juniSonetApsExperiment.setReference('IETF AToM MIB (atommib) Working Group document: draft-ietf-atommib-sonetaps-mib-05.txt.')
juniMplsExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2, 3))
if mibBuilder.loadTexts: juniMplsExperiment.setStatus('current')
if mibBuilder.loadTexts: juniMplsExperiment.setDescription('The object identifier used to anchor the experimental IETF drafts for the Multiprotocol Label Switching (MPLS) set of MIBs.')
if mibBuilder.loadTexts: juniMplsExperiment.setReference('IETF Multiprotocol Label Switching (MPLS) Working Group documents: draft-ietf-mpls-tc-mib-03.txt draft-ietf-mpls-lsr-mib-08.txt.')
juniMplsVPNExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2, 4))
if mibBuilder.loadTexts: juniMplsVPNExperiment.setStatus('current')
if mibBuilder.loadTexts: juniMplsVPNExperiment.setDescription('The object identifier used to anchor the experimental IETF drafts for the MPLS/BGP Layer 3 Virtual Private Network Management Information Base.')
if mibBuilder.loadTexts: juniMplsVPNExperiment.setReference('IETF Layer-3 Virtual Private Networks Working Group documents: draft-ietf-l3vpn-mpls-vpn-mib-07.txt.')
juniBFDExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 3, 2, 5))
if mibBuilder.loadTexts: juniBFDExperiment.setStatus('current')
if mibBuilder.loadTexts: juniBFDExperiment.setDescription('The object identifier used to anchor the experimental IETF drafts for BFD Management Information Base.')
if mibBuilder.loadTexts: juniBFDExperiment.setReference('Bidirectional Forwarding Detection Management Information Base draft-ietf-bfd-mib-02.txt ')
mibBuilder.exportSymbols("Juniper-Experiment", juniBFDExperiment=juniBFDExperiment, juniMplsVPNExperiment=juniMplsVPNExperiment, PYSNMP_MODULE_ID=juniExperiment, juniMplsExperiment=juniMplsExperiment, juniExperiment=juniExperiment, juniSonetApsExperiment=juniSonetApsExperiment, juniDvmrpExperiment=juniDvmrpExperiment)
