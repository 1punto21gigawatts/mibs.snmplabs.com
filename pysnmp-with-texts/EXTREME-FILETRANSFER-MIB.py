#
# PySNMP MIB module EXTREME-FILETRANSFER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
TextualConvention, DisplayString, TestAndIncr, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TestAndIncr", "RowStatus")
extremeFileTransfer = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 10))
if mibBuilder.loadTexts: extremeFileTransfer.setLastUpdated('9810211630Z')
if mibBuilder.loadTexts: extremeFileTransfer.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeFileTransfer.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeFileTransfer.setDescription('Extreme File transfer objects')
extremeFileTransferGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1))
extremeFileTransferNextAvailableIndex = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 1), TestAndIncr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFileTransferNextAvailableIndex.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferNextAvailableIndex.setDescription('The index of the next free row in the extremeFileTransferTable.')
extremeFileTransferTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2), )
if mibBuilder.loadTexts: extremeFileTransferTable.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferTable.setDescription('A table of pending and completed file transfers.')
extremeFileTransferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1), ).setIndexNames((0, "EXTREME-FILETRANSFER-MIB", "extremeFileTransferIndex"))
if mibBuilder.loadTexts: extremeFileTransferEntry.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferEntry.setDescription('A table entry containing information on a pending or completed file transfer.')
extremeFileTransferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: extremeFileTransferIndex.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferIndex.setDescription('An index into the file transfer table.')
extremeFileTransferServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferServerAddress.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferServerAddress.setDescription('This is the address of the TFTP server from which to download the image or configuration or upload the configuration.')
extremeFileTransferFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferFileName.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferFileName.setDescription('This is the name of the file to be downloaded or uploaded.')
extremeFileTransferOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("downloadImageToPrimaryImmediate", 1), ("downloadImageToSecondaryImmediate", 2), ("downloadConfigImmediate", 3), ("uploadConfigImmediate", 4), ("scheduleConfigUploadPeriodic", 5), ("scheduleConfigUploadOnce", 6), ("scheduleImageDownloadToPrimaryOnce", 7), ("scheduleImageDownloadToSecondaryOnce", 8), ("scheduleConfigDownloadOnce", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferOperation.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferOperation.setDescription('Indication of the file transfer operation. This object allows configuration of uploads and/or downloads either immediately or at a scheduled time. A value of downloadImageToPrimaryImmediate(1) or downloadImageToSecondaryImmediate(2) describes immediate download of a software image to either the primary or secondary permanent store. A value of downloadConfigImmediate(3) describes immediate download of a configuration file to non-volatile store. A value of uploadConfigImmediate(4) describes the immediate upload of the currently running configuration to the server. A value of scheduleConfigUploadOnce(6) describes a single upload of the current configuration to the server at the time extremeFileTransferScheduledTime. A value of scheduleConfigUploadPeriodic(5) describes daily uploads of the current configuration to the server at the time extremeFileTransferScheduledTime every day. A value of scheduleImageDownloadToPrimaryOnce(7) or scheduleImageDownloadToSecondaryOnce(8) describes a single download of a software image to either the primary or secondary permanent store at the time extremeFileTransferScheduledTime. This object can be modified only if extremeFileTransferStartOperStatus for this entry is idle(1). Note that any attempts to modify this object including row creation which would result in multiple downloads would cause the operation to fail. Managers are strongly recommened to examine the extremeFileTransferStartOperStatus object for the entries in the table to determine the status of downloads before attempting to modify this object.')
extremeFileTransferScheduledTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferScheduledTime.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferScheduledTime.setDescription("The time of the day at which the file transfer operation should be initiated. This object is meaningful only for scheduled file transfers. field octets contents range ----- ------ -------- ----- 1 1-2 year 0..65536 2 3 month 1..12 3 4 day 1..31 4 5 hour 0..23 5 6 minutes 0..59 6 7 seconds 0..60 (use 60 for leap-second) 7 8 deci-seconds 0..9 8 9 direction from UTC '+' / '-' 9 10 hours from UTC 0..11 10 11 minutes from UTC 0..59 For example, Tuesday May 26, 1992 at 1:30:15 PM EDT would be displayed as: 1992-5-26,13:30:15.0,-4:0 Note that if only local time is known, then timezone information (fields 8-10) is not present, and if no time information is known, the null string is returned.")
extremeFileTransferStartAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("cancel", 2))).clone('cancel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferStartAdminStatus.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferStartAdminStatus.setDescription('Writing to this object initiates the upload/download or schedules one. The extremeFileTransferStartOperStatus object should be checked before attempting to set this object. This object cannot be modified while the extremeFileTransferStartOperStatus is inProgress(3). This object can be set start(1) only if the extremeFileTransferStartOperStatus is idle(1). A scheduled upload/download will be cancelled by setting the value of this object to cancel(2).')
extremeFileTransferStartOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("scheduled", 2), ("inProgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFileTransferStartOperStatus.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferStartOperStatus.setDescription('The agent sets this value to reflect the current status of the file transfer operation. Reading this object is meaningful only if the extremeFileTransferRowStatus is active(1). The current status is determined by the agent by examining the values for extremeFileTransferOperation and extremeFileTransferStartAdminStatus.')
extremeFileTransferLastExecutionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("success", 1), ("statusUnknown", 2), ("generalError", 3), ("noResponseFromServer", 4), ("checksumError", 5), ("incompatibleImage", 6), ("tftpFileNotFound", 7), ("tftpAccessViolation", 8), ("fileTooLarge", 9), ("downloadInProgress", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeFileTransferLastExecutionStatus.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferLastExecutionStatus.setDescription('The status of the last file transfer operation. This value is returned as statusUnknown(1) until the extremeFileTransferRowStatus is set to active(1) or when the extremeFileTransferStartOperStatus is inProgress(3). After an upload/download, the agent will update this value with the result of the file transfer. Managers should read this object before modifying extremeFileTransferOperation because the agent would set this value to statusUnknown(2) in such cases.')
extremeFileTransferOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 9), OwnerString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferOwner.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferOwner.setDescription('Indicates the identity of the manager that configured this file transfer entry.')
extremeFileTransferRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 10, 1, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeFileTransferRowStatus.setStatus('current')
if mibBuilder.loadTexts: extremeFileTransferRowStatus.setDescription('The status of this table entry. This object can not be modified while the extremeFileTransferStatus is inProgress(1). Setting this object to notInService(2) or destroy(6) will cancel any scheduled uploads if this entry was configured for one. Note that any attempts to create new rows which would result in multiple downloads would cause the row creation to fail. Similarly, attempting to delete a row while extremeFileTransferStartOperStatus is inProgress(3) would fail. Managers are strongly recommened to examine the extremeFileTransferStartOperStatus object for the entries in the table to determine the status of downloads before attempting row creation/deletion.')
mibBuilder.exportSymbols("EXTREME-FILETRANSFER-MIB", extremeFileTransferStartAdminStatus=extremeFileTransferStartAdminStatus, extremeFileTransferScheduledTime=extremeFileTransferScheduledTime, extremeFileTransferTable=extremeFileTransferTable, extremeFileTransfer=extremeFileTransfer, extremeFileTransferServerAddress=extremeFileTransferServerAddress, extremeFileTransferNextAvailableIndex=extremeFileTransferNextAvailableIndex, PYSNMP_MODULE_ID=extremeFileTransfer, extremeFileTransferStartOperStatus=extremeFileTransferStartOperStatus, extremeFileTransferIndex=extremeFileTransferIndex, extremeFileTransferLastExecutionStatus=extremeFileTransferLastExecutionStatus, extremeFileTransferRowStatus=extremeFileTransferRowStatus, extremeFileTransferEntry=extremeFileTransferEntry, extremeFileTransferGroup=extremeFileTransferGroup, extremeFileTransferFileName=extremeFileTransferFileName, extremeFileTransferOperation=extremeFileTransferOperation, extremeFileTransferOwner=extremeFileTransferOwner)
