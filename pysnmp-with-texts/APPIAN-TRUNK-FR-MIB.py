#
# PySNMP MIB module APPIAN-TRUNK-FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-TRUNK-FR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acTrunks, = mibBuilder.importSymbols("APPIAN-SMI-MIB", "acTrunks")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, IpAddress, Counter32, ObjectIdentity, Gauge32, MibIdentifier, Integer32, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "IpAddress", "Counter32", "ObjectIdentity", "Gauge32", "MibIdentifier", "Integer32", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ModuleIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
acFrTrunk = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2))
acFrTrunk.setRevisions(('1999-11-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: acFrTrunk.setRevisionsDescriptions(('Engineering draft version, not for release.',))
if mibBuilder.loadTexts: acFrTrunk.setLastUpdated('9911100000Z')
if mibBuilder.loadTexts: acFrTrunk.setOrganization('Appian Communications, Inc.')
if mibBuilder.loadTexts: acFrTrunk.setContactInfo('Douglas Theriault')
if mibBuilder.loadTexts: acFrTrunk.setDescription('Appian Communications FrameRelay trunking MIB.')
acFrTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1), )
if mibBuilder.loadTexts: acFrTrunkTable.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkTable.setDescription("Frame Relay trunk table. This table contains the frame relay specific objects of a trunk, if the trunk is a frame relay trunk. A row in this table comes to existence as a frame relay trunk is defined in the common trunk table and the row disappears as the row is removed from the common trunk table. In other words, one doesn't directly create and destroy rows in this table.")
acFrTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1), ).setIndexNames((0, "APPIAN-TRUNK-FR-MIB", "acFrTrunkIndex"))
if mibBuilder.loadTexts: acFrTrunkEntry.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkEntry.setDescription('A row within the frame-relay trunk table which the index to this table entry using a Trunk index.')
acFrTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acFrTrunkIndex.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkIndex.setDescription('The trunk number, a number that uniquely identifies a trunk in a ring. It is used as the index to this table.')
acFrTrunkLmiProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6, 7))).clone(namedValues=NamedValues(("itu", 5), ("ansi", 6), ("auto", 7))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkLmiProtocol.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkLmiProtocol.setDescription('The protocol mode of LMI running on this service instance. Appians supports auto, Q933A(5) and ansi(3).')
acFrTrunkLmiPollingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("polling", 1), ("polled", 2))).clone('polled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkLmiPollingMode.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkLmiPollingMode.setDescription('Defines whether this instance of the service will perform LMI polling, responds to LMI requests, or both.')
acFrTrunkT391 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkT391.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkT391.setDescription('The status enquiry polling interval in seconds. Applicable to polling mode only. Range is valid only from 5 to 30 seconds, default value is 10 seconds.')
acFrTrunkT392 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkT392.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkT392.setDescription('The polling verification timer in seconds. Applicable to polled mode only. Range valid from 5 to 30 seconds, default value is 15 seconds.')
acFrTrunkN391 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkN391.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkN391.setDescription('The number of polling intervals to issue full status enquiry measured in intervals. Range valid from 1 to 255, default set to 6 intervals.')
acFrTrunkN392 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkN392.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkN392.setDescription('The number of errors to occur before declaring the trunk down. Valid range is 1 to 10 LMI intervals with a default set to 3.')
acFrTrunkN393 = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkN393.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkN393.setDescription('The number of monitored events.')
acFrTrunkShared = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 6, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acFrTrunkShared.setStatus('current')
if mibBuilder.loadTexts: acFrTrunkShared.setDescription('Is this trunk shared by multiple OSAPs?')
mibBuilder.exportSymbols("APPIAN-TRUNK-FR-MIB", acFrTrunkN392=acFrTrunkN392, acFrTrunkT391=acFrTrunkT391, acFrTrunkT392=acFrTrunkT392, acFrTrunkN393=acFrTrunkN393, acFrTrunkTable=acFrTrunkTable, acFrTrunk=acFrTrunk, acFrTrunkLmiPollingMode=acFrTrunkLmiPollingMode, acFrTrunkShared=acFrTrunkShared, acFrTrunkIndex=acFrTrunkIndex, PYSNMP_MODULE_ID=acFrTrunk, acFrTrunkEntry=acFrTrunkEntry, acFrTrunkLmiProtocol=acFrTrunkLmiProtocol, acFrTrunkN391=acFrTrunkN391)
