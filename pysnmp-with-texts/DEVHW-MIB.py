#
# PySNMP MIB module DEVHW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEVHW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:41:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
device, = mibBuilder.importSymbols("ANIROOT-MIB", "device")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, IpAddress, Counter64, ModuleIdentity, Counter32, Gauge32, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "IpAddress", "Counter64", "ModuleIdentity", "Counter32", "Gauge32", "NotificationType", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aniDevHardware = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 2, 3))
if mibBuilder.loadTexts: aniDevHardware.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniDevHardware.setOrganization('Aperto Networks')
if mibBuilder.loadTexts: aniDevHardware.setContactInfo(' Postal: Aperto Networks Inc 1637 S Main Street Milpitas, California 95035 Tel: +1 408 719 9977 ')
if mibBuilder.loadTexts: aniDevHardware.setDescription('This group provides information specific to the device hardware. These objects are common to both BSU and SU. ')
aniDevHwRevision = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevHwRevision.setStatus('current')
if mibBuilder.loadTexts: aniDevHwRevision.setDescription('The Hardware Revision Number. ')
aniDevHwSpeed = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevHwSpeed.setStatus('current')
if mibBuilder.loadTexts: aniDevHwSpeed.setDescription('The Hardware Speed. ')
aniDevHwBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevHwBuildDate.setStatus('current')
if mibBuilder.loadTexts: aniDevHwBuildDate.setDescription('The Hardware Date. ')
aniDevHwSerialNum = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevHwSerialNum.setStatus('current')
if mibBuilder.loadTexts: aniDevHwSerialNum.setDescription('Serial Number for the Hardware. ')
aniDevHwBoardRevision = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevHwBoardRevision.setStatus('current')
if mibBuilder.loadTexts: aniDevHwBoardRevision.setDescription('The Revision Number of the board. ')
mibBuilder.exportSymbols("DEVHW-MIB", PYSNMP_MODULE_ID=aniDevHardware, aniDevHwBuildDate=aniDevHwBuildDate, aniDevHwSpeed=aniDevHwSpeed, aniDevHwSerialNum=aniDevHwSerialNum, aniDevHwRevision=aniDevHwRevision, aniDevHardware=aniDevHardware, aniDevHwBoardRevision=aniDevHwBoardRevision)
