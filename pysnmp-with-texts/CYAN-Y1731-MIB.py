#
# PySNMP MIB module CYAN-Y1731-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-Y1731-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
cyanMibModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanMibModules")
CyanNoYesTc, = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanNoYesTc")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Bits, IpAddress, Counter32, Unsigned32, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, iso, ObjectIdentity, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "IpAddress", "Counter32", "Unsigned32", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "iso", "ObjectIdentity", "Counter64", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanY1731Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 40))
cyanY1731Module.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanY1731Module.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanY1731Module.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanY1731Module.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanY1731Module.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanY1731Module.setDescription('MIB module for CYAN Y1731 OAMPM')
cyanY1731MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1))
cyanY1731MepConfigTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1), )
if mibBuilder.loadTexts: cyanY1731MepConfigTable.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigTable.setDescription('A list of Y1731 MEP config entries')
cyanY1731MepConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1), ).setIndexNames((0, "CYAN-Y1731-MIB", "cyanY1731MepConfigShelfId"), (0, "CYAN-Y1731-MIB", "cyanY1731MepConfigModuleId"), (0, "CYAN-Y1731-MIB", "cyanY1731MepConfigMepId"))
if mibBuilder.loadTexts: cyanY1731MepConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigEntry.setDescription('An entry of Y1731 MEP Configuration.')
cyanY1731MepConfigShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanY1731MepConfigShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigShelfId.setDescription('Shelf Id')
cyanY1731MepConfigModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanY1731MepConfigModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigModuleId.setDescription('Module Id')
cyanY1731MepConfigMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanY1731MepConfigMepId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigMepId.setDescription('MEP Id')
cyanY1731MepConfigLMTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigLMTxInterval.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigLMTxInterval.setDescription('Loss OAM PDU Tx Interval in Seconds')
cyanY1731MepConfigDMTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigDMTxInterval.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigDMTxInterval.setDescription('Delay OAM PDU Tx Interval in Seconds')
cyanY1731MepConfigPmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 6), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigPmEnabled.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigPmEnabled.setDescription('PM Enabled')
cyanY1731MepConfigOneWayLossEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 7), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigOneWayLossEnabled.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigOneWayLossEnabled.setDescription('One-way LOSS Enabled')
cyanY1731MepConfigTwoWayDelayEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 8), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigTwoWayDelayEnabled.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigTwoWayDelayEnabled.setDescription('Two-way Delay Enabled')
cyanY1731MepConfigTwoWayJitterEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 1, 1, 9), CyanNoYesTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731MepConfigTwoWayJitterEnabled.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigTwoWayJitterEnabled.setDescription('Two-way Jitter Enabled')
cyanY1731LMTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2), )
if mibBuilder.loadTexts: cyanY1731LMTable.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMTable.setDescription('A list of Y1731 Packet Loss Mesurement(LM) Entries. Each row in this table represents last completed Loss Measurement (LM) for a given MEP. Only the last completed historical bucket is supported. The value of cyanY1731LMIndex is always 1 and this represents last completed historical bucket. ')
cyanY1731LMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1), ).setIndexNames((0, "CYAN-Y1731-MIB", "cyanY1731LMShelfId"), (0, "CYAN-Y1731-MIB", "cyanY1731LMModuleId"), (0, "CYAN-Y1731-MIB", "cyanY1731LMMepId"), (0, "CYAN-Y1731-MIB", "cyanY1731LMIndex"))
if mibBuilder.loadTexts: cyanY1731LMEntry.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMEntry.setDescription('An entry of Y1731 Loss Measurement.')
cyanY1731LMShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanY1731LMShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMShelfId.setDescription('Shelf Id')
cyanY1731LMModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanY1731LMModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMModuleId.setDescription('Module Id')
cyanY1731LMMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanY1731LMMepId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMMepId.setDescription('MEP Id')
cyanY1731LMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 4), Unsigned32())
if mibBuilder.loadTexts: cyanY1731LMIndex.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMIndex.setDescription('Y1731 LM MEP Bucket Index. Currently only one bucket is supported with possible value of 1. Value 1 means that it is the latest historical bucket')
cyanY1731LMNe15MinPmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMNe15MinPmCount.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMNe15MinPmCount.setDescription('Near-end Packet Loss 15 Min Pm Count')
cyanY1731LMNe15MinPmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMNe15MinPmTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMNe15MinPmTimestamp.setDescription('Near-end Packet Loss 15 Min Pm Timestamp')
cyanY1731LMFe15MinPmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMFe15MinPmCount.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMFe15MinPmCount.setDescription('Far-end Packet Loss 15 Min Pm Count')
cyanY1731LMFe15MinPmTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMFe15MinPmTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMFe15MinPmTimestamp.setDescription('Far-end Packet Loss 15 Min Pm Timestamp')
cyanY1731LMRatioNe15MinHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinHighValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinHighValue.setDescription('Near-end Packet Loss Ratio 15 Min High Value')
cyanY1731LMRatioNe15MinLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinLowValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinLowValue.setDescription('Near-end Packet Loss Ratio 15 Min Low Value')
cyanY1731LMRatioNe15MinAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinAvgValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinAvgValue.setDescription('Near-end Packet Loss Ratio 15 Min Avg Value')
cyanY1731LMRatioNe15MinTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioNe15MinTimestamp.setDescription('Near-end Packet Loss Ratio 15 Min Timestamp')
cyanY1731LMRatioFe15MinHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinHighValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinHighValue.setDescription('Far-end Packet Loss Ratio 15 Min High Value')
cyanY1731LMRatioFe15MinLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinLowValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinLowValue.setDescription('Far-end Packet Loss Ratio 15 Min Low Value')
cyanY1731LMRatioFe15MinAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinAvgValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinAvgValue.setDescription('Far-end Packet Loss Ratio 15 Min Avg Value')
cyanY1731LMRatioFe15MinTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMRatioFe15MinTimestamp.setDescription('Far-end Packet Loss Ratio 15 Min Timestamp')
cyanY1731DMTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3), )
if mibBuilder.loadTexts: cyanY1731DMTable.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTable.setDescription('A list of Y1731 Packet Delay Mesurement(DM) Current Entries. Each row in this table represents last completed Delay Measurement (DM) for a given MEP. Only the last completed historical bucket is supported. The value of cyanY1731DMMepIndex is always 1 and this represents last completed historical bucket. ')
cyanY1731DMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1), ).setIndexNames((0, "CYAN-Y1731-MIB", "cyanY1731DMShelfId"), (0, "CYAN-Y1731-MIB", "cyanY1731DMModuleId"), (0, "CYAN-Y1731-MIB", "cyanY1731DMMepId"), (0, "CYAN-Y1731-MIB", "cyanY1731DMMepIndex"))
if mibBuilder.loadTexts: cyanY1731DMEntry.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMEntry.setDescription('An entry of Y1731 Delay Measurement.')
cyanY1731DMShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanY1731DMShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMShelfId.setDescription('Shelf Id')
cyanY1731DMModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanY1731DMModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMModuleId.setDescription('Module Id')
cyanY1731DMMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanY1731DMMepId.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMMepId.setDescription('MEP Id')
cyanY1731DMMepIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 4), Unsigned32())
if mibBuilder.loadTexts: cyanY1731DMMepIndex.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMMepIndex.setDescription('Y1731 DM MEP Bucket Index. Currently only one bucket is supported with possible value of 1. Value 1 means that it is the latest historical bucket')
cyanY1731DMTwoWayDelay15MinHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinHighValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinHighValue.setDescription('Two-way Delay (micro-secs) 15 Min High Value ')
cyanY1731DMTwoWayDelay15MinLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinLowValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinLowValue.setDescription('Two-way Delay (micro-secs) 15 Min Low Value ')
cyanY1731DMTwoWayDelay15MinAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinAvgValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinAvgValue.setDescription('Two-way Delay (micro-secs) 15 Min Avg Value ')
cyanY1731DMTwoWayDelay15MinTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelay15MinTimestamp.setDescription('Two-way Delay (micro-secs) 15 Min Time-stamp ')
cyanY1731DMTwoWayDelayVar15MinHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinHighValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinHighValue.setDescription('Two-way Delay Var (micro-secs) 15 Min High Value ')
cyanY1731DMTwoWayDelayVar15MinLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinLowValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinLowValue.setDescription('Two-way Delay Var (micro-secs) 15 Min Low Value ')
cyanY1731DMTwoWayDelayVar15MinAvgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinAvgValue.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinAvgValue.setDescription('Two-way Delay Var (micro-secs) 15 Min Avg Value ')
cyanY1731DMTwoWayDelayVar15MinTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 40, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinTimestamp.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMTwoWayDelayVar15MinTimestamp.setDescription('Two-way Delay Var (micro-secs) 15 Min Time-stamp ')
cyanY1731MepConfigObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 40, 100)).setObjects(("CYAN-Y1731-MIB", "cyanY1731MepConfigLMTxInterval"), ("CYAN-Y1731-MIB", "cyanY1731MepConfigDMTxInterval"), ("CYAN-Y1731-MIB", "cyanY1731MepConfigPmEnabled"), ("CYAN-Y1731-MIB", "cyanY1731MepConfigOneWayLossEnabled"), ("CYAN-Y1731-MIB", "cyanY1731MepConfigTwoWayDelayEnabled"), ("CYAN-Y1731-MIB", "cyanY1731MepConfigTwoWayJitterEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731MepConfigObjectGroup = cyanY1731MepConfigObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigObjectGroup.setDescription('Group of objects that comes with cyanY1731Config module')
cyanY1731MepConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 40, 101)).setObjects(("CYAN-Y1731-MIB", "cyanY1731MepConfigObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731MepConfigCompliance = cyanY1731MepConfigCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanY1731MepConfigCompliance.setDescription('The basic info needed to be a cyan cyanY1731Config')
cyanY1731LMObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 40, 102)).setObjects(("CYAN-Y1731-MIB", "cyanY1731LMNe15MinPmCount"), ("CYAN-Y1731-MIB", "cyanY1731LMNe15MinPmTimestamp"), ("CYAN-Y1731-MIB", "cyanY1731LMFe15MinPmCount"), ("CYAN-Y1731-MIB", "cyanY1731LMFe15MinPmTimestamp"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioNe15MinHighValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioNe15MinLowValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioNe15MinAvgValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioNe15MinTimestamp"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioFe15MinHighValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioFe15MinLowValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioFe15MinAvgValue"), ("CYAN-Y1731-MIB", "cyanY1731LMRatioFe15MinTimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731LMObjectGroup = cyanY1731LMObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMObjectGroup.setDescription('Group of objects that comes with cyanY1731LM module')
cyanY1731LMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 40, 103)).setObjects(("CYAN-Y1731-MIB", "cyanY1731LMObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731LMCompliance = cyanY1731LMCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanY1731LMCompliance.setDescription('The basic info needed to be a cyan cyanY1731LM')
cyanY1731DMObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 40, 104)).setObjects(("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelay15MinHighValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelay15MinLowValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelay15MinAvgValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelay15MinTimestamp"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelayVar15MinHighValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelayVar15MinLowValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelayVar15MinAvgValue"), ("CYAN-Y1731-MIB", "cyanY1731DMTwoWayDelayVar15MinTimestamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731DMObjectGroup = cyanY1731DMObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMObjectGroup.setDescription('Group of objects that comes with cyanY1731DM module')
cyanY1731DMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 40, 105)).setObjects(("CYAN-Y1731-MIB", "cyanY1731DMObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanY1731DMCompliance = cyanY1731DMCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanY1731DMCompliance.setDescription('The basic info needed to be a cyan cyanY1731DM')
mibBuilder.exportSymbols("CYAN-Y1731-MIB", cyanY1731MepConfigPmEnabled=cyanY1731MepConfigPmEnabled, cyanY1731LMMepId=cyanY1731LMMepId, cyanY1731LMRatioFe15MinTimestamp=cyanY1731LMRatioFe15MinTimestamp, cyanY1731MepConfigDMTxInterval=cyanY1731MepConfigDMTxInterval, cyanY1731LMNe15MinPmTimestamp=cyanY1731LMNe15MinPmTimestamp, cyanY1731LMRatioFe15MinAvgValue=cyanY1731LMRatioFe15MinAvgValue, cyanY1731LMRatioNe15MinLowValue=cyanY1731LMRatioNe15MinLowValue, cyanY1731LMRatioNe15MinTimestamp=cyanY1731LMRatioNe15MinTimestamp, cyanY1731DMMepId=cyanY1731DMMepId, cyanY1731LMObjectGroup=cyanY1731LMObjectGroup, cyanY1731DMCompliance=cyanY1731DMCompliance, cyanY1731MepConfigTwoWayJitterEnabled=cyanY1731MepConfigTwoWayJitterEnabled, cyanY1731LMRatioNe15MinHighValue=cyanY1731LMRatioNe15MinHighValue, cyanY1731DMTwoWayDelayVar15MinTimestamp=cyanY1731DMTwoWayDelayVar15MinTimestamp, cyanY1731MepConfigOneWayLossEnabled=cyanY1731MepConfigOneWayLossEnabled, cyanY1731MepConfigModuleId=cyanY1731MepConfigModuleId, cyanY1731DMEntry=cyanY1731DMEntry, cyanY1731LMNe15MinPmCount=cyanY1731LMNe15MinPmCount, cyanY1731Module=cyanY1731Module, cyanY1731LMIndex=cyanY1731LMIndex, cyanY1731MepConfigShelfId=cyanY1731MepConfigShelfId, cyanY1731MepConfigCompliance=cyanY1731MepConfigCompliance, cyanY1731LMModuleId=cyanY1731LMModuleId, cyanY1731DMModuleId=cyanY1731DMModuleId, cyanY1731DMTwoWayDelay15MinLowValue=cyanY1731DMTwoWayDelay15MinLowValue, cyanY1731MepConfigEntry=cyanY1731MepConfigEntry, cyanY1731MepConfigMepId=cyanY1731MepConfigMepId, cyanY1731MepConfigLMTxInterval=cyanY1731MepConfigLMTxInterval, cyanY1731LMCompliance=cyanY1731LMCompliance, cyanY1731DMTwoWayDelay15MinAvgValue=cyanY1731DMTwoWayDelay15MinAvgValue, cyanY1731DMObjectGroup=cyanY1731DMObjectGroup, cyanY1731LMTable=cyanY1731LMTable, cyanY1731DMTwoWayDelay15MinHighValue=cyanY1731DMTwoWayDelay15MinHighValue, cyanY1731DMTwoWayDelay15MinTimestamp=cyanY1731DMTwoWayDelay15MinTimestamp, cyanY1731LMRatioFe15MinHighValue=cyanY1731LMRatioFe15MinHighValue, PYSNMP_MODULE_ID=cyanY1731Module, cyanY1731LMFe15MinPmCount=cyanY1731LMFe15MinPmCount, cyanY1731LMRatioFe15MinLowValue=cyanY1731LMRatioFe15MinLowValue, cyanY1731DMMepIndex=cyanY1731DMMepIndex, cyanY1731DMTable=cyanY1731DMTable, cyanY1731MibObjects=cyanY1731MibObjects, cyanY1731LMEntry=cyanY1731LMEntry, cyanY1731DMTwoWayDelayVar15MinLowValue=cyanY1731DMTwoWayDelayVar15MinLowValue, cyanY1731MepConfigObjectGroup=cyanY1731MepConfigObjectGroup, cyanY1731LMFe15MinPmTimestamp=cyanY1731LMFe15MinPmTimestamp, cyanY1731LMShelfId=cyanY1731LMShelfId, cyanY1731MepConfigTable=cyanY1731MepConfigTable, cyanY1731DMTwoWayDelayVar15MinAvgValue=cyanY1731DMTwoWayDelayVar15MinAvgValue, cyanY1731MepConfigTwoWayDelayEnabled=cyanY1731MepConfigTwoWayDelayEnabled, cyanY1731DMShelfId=cyanY1731DMShelfId, cyanY1731DMTwoWayDelayVar15MinHighValue=cyanY1731DMTwoWayDelayVar15MinHighValue, cyanY1731LMRatioNe15MinAvgValue=cyanY1731LMRatioNe15MinAvgValue)
