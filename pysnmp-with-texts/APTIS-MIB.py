#
# PySNMP MIB module APTIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Unsigned32, TimeTicks, enterprises, iso, IpAddress, MibIdentifier, Gauge32, Counter64, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Unsigned32", "TimeTicks", "enterprises", "iso", "IpAddress", "MibIdentifier", "Gauge32", "Counter64", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aptisRootModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2637, 1, 1, 1))
if mibBuilder.loadTexts: aptisRootModule.setLastUpdated('0004140000Z')
if mibBuilder.loadTexts: aptisRootModule.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: aptisRootModule.setContactInfo(' Technical Support/Customer Service Nortel Networks Postal: 11 Elizabeth Drive Chelmsford, MA 01824 Tel: In the USA: Dial 1-800-758-4827 to contact a Technical Support engineer. Outside the USA: Contact your Regional Nortel Networks Support Prime. For information about the Nortel Networks Network Access Division, go to the World Wide Web (WWW) site at http://www.nortelnetworks.com.')
if mibBuilder.loadTexts: aptisRootModule.setDescription('Nortel Networks Aptis Enterprise MIB')
class Boolean(TextualConvention, Integer32):
    description = 'A version of TruthValue that makes sense, corresponding to the natural values of true(1) and false(0).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("false", 0), ("true", 1))

aptis = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637))
if mibBuilder.loadTexts: aptis.setStatus('current')
if mibBuilder.loadTexts: aptis.setDescription('The root of the sub-tree assigned to Aptis by the Internet Assigned Numbers Authority (IANA).')
aptis_reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 1)).setLabel("aptis-reg")
if mibBuilder.loadTexts: aptis_reg.setStatus('current')
if mibBuilder.loadTexts: aptis_reg.setDescription('Sub-tree for registrations, including product and individual system boards.')
aptis_generic = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2)).setLabel("aptis-generic")
if mibBuilder.loadTexts: aptis_generic.setStatus('current')
if mibBuilder.loadTexts: aptis_generic.setDescription('Sub-tree for common object and event definitions.')
aptis_products = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 3)).setLabel("aptis-products")
if mibBuilder.loadTexts: aptis_products.setStatus('current')
if mibBuilder.loadTexts: aptis_products.setDescription('Sub-tree for product-specific object and event definitions.')
aptis_config = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 1)).setLabel("aptis-config")
if mibBuilder.loadTexts: aptis_config.setStatus('current')
if mibBuilder.loadTexts: aptis_config.setDescription('The collection of tables that make up the persistent configuration of the system.')
aptis_monitoring = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 2)).setLabel("aptis-monitoring")
if mibBuilder.loadTexts: aptis_monitoring.setStatus('current')
if mibBuilder.loadTexts: aptis_monitoring.setDescription('The collection of tables that allows monitoring of the dynamic state of the system.')
aptis_actions = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 3)).setLabel("aptis-actions")
if mibBuilder.loadTexts: aptis_actions.setStatus('current')
if mibBuilder.loadTexts: aptis_actions.setDescription('This subtree contains variables which allow a management station to invoke certain administrative actions such as file transfers, etc. These variables correspond to action commands in the CLI.')
aptis_exp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 4)).setLabel("aptis-exp")
if mibBuilder.loadTexts: aptis_exp.setStatus('current')
if mibBuilder.loadTexts: aptis_exp.setDescription('This subtree contains variables which are currently being tested and are not yet fully supported.')
aptis_traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 5)).setLabel("aptis-traps")
if mibBuilder.loadTexts: aptis_traps.setStatus('current')
if mibBuilder.loadTexts: aptis_traps.setDescription('This subtree contains the aptis specific traps.')
config_sync = ObjectIdentity((1, 3, 6, 1, 4, 1, 2637, 2, 4, 2)).setLabel("config-sync")
if mibBuilder.loadTexts: config_sync.setStatus('current')
if mibBuilder.loadTexts: config_sync.setDescription('These variables are returned in SNMP Set Reply packets that modify configuration, allowing the NMS to keep its configuration database synchronized with the switch. They describe the state of the config database before and after a transaction that corresponds to an SNMP SET REQUEST. These values only have meaning when appended to a SET-REPLY PDU.')
prevGenNum = MibScalar((1, 3, 6, 1, 4, 1, 2637, 2, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prevGenNum.setStatus('current')
if mibBuilder.loadTexts: prevGenNum.setDescription("The value of the database subtree's GenNum before the transaction was applied.")
deltaCount = MibScalar((1, 3, 6, 1, 4, 1, 2637, 2, 4, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deltaCount.setStatus('current')
if mibBuilder.loadTexts: deltaCount.setDescription("The expected delta to the database subtree's GenNum value as a result of the transaction in question.")
currentGenNum = MibScalar((1, 3, 6, 1, 4, 1, 2637, 2, 4, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentGenNum.setStatus('current')
if mibBuilder.loadTexts: currentGenNum.setDescription("The resulting value of the database subtree's GenNum after the transaction has been applied.")
mibBuilder.exportSymbols("APTIS-MIB", deltaCount=deltaCount, aptisRootModule=aptisRootModule, PYSNMP_MODULE_ID=aptisRootModule, aptis_exp=aptis_exp, aptis_generic=aptis_generic, Boolean=Boolean, prevGenNum=prevGenNum, aptis=aptis, config_sync=config_sync, aptis_traps=aptis_traps, currentGenNum=currentGenNum, aptis_reg=aptis_reg, aptis_products=aptis_products, aptis_monitoring=aptis_monitoring, aptis_actions=aptis_actions, aptis_config=aptis_config)
