#
# PySNMP MIB module DNS-TRAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNS-TRAPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:52:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
bcs, = mibBuilder.importSymbols("BCS-IDENT-MIB", "bcs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Integer32, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, Unsigned32, NotificationType, Counter64, Gauge32, ModuleIdentity, MibIdentifier, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "Unsigned32", "NotificationType", "Counter64", "Gauge32", "ModuleIdentity", "MibIdentifier", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dns = ModuleIdentity((1, 3, 6, 1, 4, 1, 1166, 7, 5))
if mibBuilder.loadTexts: dns.setLastUpdated('200604270000Z')
if mibBuilder.loadTexts: dns.setOrganization('Motorola Connected Home Solutions')
if mibBuilder.loadTexts: dns.setContactInfo('Motorola Technical Response Center Inside USA 1-888-944-HELP (1-888-944-4357) Outside USA 1-215-323-0044 TRC Hours: Monday through Friday 8am - 7pm Eastern Standard Time Saturdays 10am - 5pm Eastern Standard Time')
if mibBuilder.loadTexts: dns.setDescription("The MIB module for the DNS common trap VARIABLES. The MIB tree for this MIB is shown below: revision number sds0.001 - initial version revision number sds0.002 - revised with the changes (1) traps are template defined here, it should be copied to application mib module with correct ENTERPRISE declared. (2) all alarm var.'s SYNTAX use enumeration of severity level definition.")
dnsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 7, 5, 1))
dnsAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2))
alarmConditionNotInList = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmConditionNotInList.setStatus('current')
if mibBuilder.loadTexts: alarmConditionNotInList.setDescription('Alarm which occurs when a clear condition command is issued and there is no such condition in the current condition list. This is a counter for the trap 20.')
alarmConditionAlreadyInList = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmConditionAlreadyInList.setStatus('current')
if mibBuilder.loadTexts: alarmConditionAlreadyInList.setDescription('Alarm which occurs when a set condition command is issued and there is already the same condition in the current condition list. This is a counter for the trap 21.')
alarmConditionListFull = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmConditionListFull.setStatus('current')
if mibBuilder.loadTexts: alarmConditionListFull.setDescription('Alarm which occurs when a set condition command is issued and there is no room in the current condition list. This is a counter for the trap 22.')
alarmInvalidCaseInSwitch = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmInvalidCaseInSwitch.setStatus('current')
if mibBuilder.loadTexts: alarmInvalidCaseInSwitch.setDescription('Alarm which occurs when in a switch statement the default case is reached. This is a counter for the trap 23.')
alarmCannotCreateSemaphore = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCannotCreateSemaphore.setStatus('current')
if mibBuilder.loadTexts: alarmCannotCreateSemaphore.setDescription('Alarm which occurs when a semaphore cannot be created. This is a counter for the trap 24.')
alarmCannotOpenSocket = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCannotOpenSocket.setStatus('current')
if mibBuilder.loadTexts: alarmCannotOpenSocket.setDescription('Alarm which occurs when a socket cannot be opened. This is a counter for the trap 25.')
alarmUnknownMessageReceived = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmUnknownMessageReceived.setStatus('current')
if mibBuilder.loadTexts: alarmUnknownMessageReceived.setDescription('Alarm which occurs when an unknown message is received. This is a counter for the trap 26.')
alarmInvalidMessageReceived = MibScalar((1, 3, 6, 1, 4, 1, 1166, 7, 5, 2, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmInvalidMessageReceived.setStatus('current')
if mibBuilder.loadTexts: alarmInvalidMessageReceived.setDescription('Alarm which occurs when an invalid message is received. This is a counter for the trap 27.')
mibBuilder.exportSymbols("DNS-TRAPS-MIB", PYSNMP_MODULE_ID=dns, alarmUnknownMessageReceived=alarmUnknownMessageReceived, alarmConditionListFull=alarmConditionListFull, dnsAlarms=dnsAlarms, dnsTraps=dnsTraps, alarmConditionNotInList=alarmConditionNotInList, alarmCannotCreateSemaphore=alarmCannotCreateSemaphore, alarmInvalidMessageReceived=alarmInvalidMessageReceived, alarmConditionAlreadyInList=alarmConditionAlreadyInList, dns=dns, alarmCannotOpenSocket=alarmCannotOpenSocket, alarmInvalidCaseInSwitch=alarmInvalidCaseInSwitch)
