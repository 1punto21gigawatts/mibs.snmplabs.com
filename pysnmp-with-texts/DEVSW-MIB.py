#
# PySNMP MIB module DEVSW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEVSW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:42:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
device, = mibBuilder.importSymbols("ANIROOT-MIB", "device")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, Bits, MibIdentifier, Unsigned32, Counter64, NotificationType, iso, Integer32, Counter32, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "Bits", "MibIdentifier", "Unsigned32", "Counter64", "NotificationType", "iso", "Integer32", "Counter32", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aniDevSoftware = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 2, 2))
if mibBuilder.loadTexts: aniDevSoftware.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniDevSoftware.setOrganization('Aperto Networks')
if mibBuilder.loadTexts: aniDevSoftware.setContactInfo(' Postal: Aperto Networks Inc 1637 S Main Street Milpitas, California 95035 Tel: +1 408 719 9977 ')
if mibBuilder.loadTexts: aniDevSoftware.setDescription('This group provides information specific to the software image loaded on to the device and the configuration file downloaded. Most of the objects are applicable to both the BSU and SU. However, a few parameters may be device specific, that is, applicable to only BSU or only SU. For eg. aniDevWSSOperatingSoftware is only valid for BSU and not SU. ')
aniDevSwConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwConfigFile.setStatus('current')
if mibBuilder.loadTexts: aniDevSwConfigFile.setDescription('The name of the device configuration file read from the TFTP server. ')
aniDevSwSystemSoftwareFile = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwSystemSoftwareFile.setStatus('current')
if mibBuilder.loadTexts: aniDevSwSystemSoftwareFile.setDescription('The system software file name.')
aniDevSwWssSoftwareFile = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwWssSoftwareFile.setStatus('current')
if mibBuilder.loadTexts: aniDevSwWssSoftwareFile.setDescription('The WSS software file name for the BSU. This parameter is applicable only for the BSU. When an SNMP Get request is sent on this parameter on a SU, an empty string is returned since it is not supported. Similarly, when BSU is in point to point mode, this parameter is not valid and returns an empty string. Also, for PacketWave 750, this parameter is not valid and displays an empty string.')
aniDevSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwVersion.setStatus('current')
if mibBuilder.loadTexts: aniDevSwVersion.setDescription('The Software Version. ')
aniDevSwBuild = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwBuild.setStatus('current')
if mibBuilder.loadTexts: aniDevSwBuild.setDescription('The Software Build number. ')
aniDevSwBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 4325, 2, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniDevSwBuildDate.setStatus('current')
if mibBuilder.loadTexts: aniDevSwBuildDate.setDescription('The Date of the Software Build. ')
mibBuilder.exportSymbols("DEVSW-MIB", aniDevSwSystemSoftwareFile=aniDevSwSystemSoftwareFile, PYSNMP_MODULE_ID=aniDevSoftware, aniDevSoftware=aniDevSoftware, aniDevSwVersion=aniDevSwVersion, aniDevSwBuildDate=aniDevSwBuildDate, aniDevSwBuild=aniDevSwBuild, aniDevSwConfigFile=aniDevSwConfigFile, aniDevSwWssSoftwareFile=aniDevSwWssSoftwareFile)
