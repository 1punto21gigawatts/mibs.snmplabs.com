#
# PySNMP MIB module PAIRGAIN-ATMTC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PAIRGAIN-ATMTC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:36:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pgAtmTcMIB, = mibBuilder.importSymbols("PAIRGAIN-COMMON-HD-MIB", "pgAtmTcMIB")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Counter32, iso, NotificationType, Integer32, ObjectIdentity, IpAddress, Counter64, TimeTicks, MibIdentifier, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Counter32", "iso", "NotificationType", "Integer32", "ObjectIdentity", "IpAddress", "Counter64", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Bits")
TextualConvention, TimeStamp, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString", "TruthValue", "RowStatus")
pgatmTcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1))
if mibBuilder.loadTexts: pgatmTcMIB.setLastUpdated('0003170000Z')
if mibBuilder.loadTexts: pgatmTcMIB.setOrganization('PairGain Technologies Inc.')
if mibBuilder.loadTexts: pgatmTcMIB.setContactInfo(' 14402 Franklin Avenue Tustin, CA 92780 ')
if mibBuilder.loadTexts: pgatmTcMIB.setDescription('This module defines the ATM TC layer MIB ')
pgatmTcMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1))
pgatmTcLayerTable = MibTable((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1), )
if mibBuilder.loadTexts: pgatmTcLayerTable.setStatus('current')
if mibBuilder.loadTexts: pgatmTcLayerTable.setDescription('This table provides one row for each port. Each row contains the Physical Layer Parameters table for that port.')
pgatmTcLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pgatmTcLayerEntry.setStatus('current')
if mibBuilder.loadTexts: pgatmTcLayerEntry.setDescription('An entry in the pgatmTcLayerTable.')
pgatmTcTxCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcTxCellCount.setStatus('current')
if mibBuilder.loadTexts: pgatmTcTxCellCount.setDescription('Total number of Transmitted cells')
pgatmTcRxCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcRxCellCount.setStatus('current')
if mibBuilder.loadTexts: pgatmTcRxCellCount.setDescription('Total number of Received cells')
pgatmTcNonMatchCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcNonMatchCount.setStatus('current')
if mibBuilder.loadTexts: pgatmTcNonMatchCount.setDescription('Total number Non-matching cells')
pgatmTcLOCDEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcLOCDEventCount.setStatus('current')
if mibBuilder.loadTexts: pgatmTcLOCDEventCount.setDescription('Total number LOCD Events')
pgatmTcCorrHECError = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcCorrHECError.setStatus('current')
if mibBuilder.loadTexts: pgatmTcCorrHECError.setDescription('Total number corrected HEC Errors')
pgatmTcUnCorrHECError = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcUnCorrHECError.setStatus('current')
if mibBuilder.loadTexts: pgatmTcUnCorrHECError.setDescription('Total number un corrected HEC Errors')
pgatmTcLayerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("loopback", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgatmTcLayerMode.setStatus('current')
if mibBuilder.loadTexts: pgatmTcLayerMode.setDescription('The state of the TC layer port normal means operating in normal mode loop means operation in loopback mode')
pgatmTcScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sss", 1), ("dss", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgatmTcScramble.setStatus('current')
if mibBuilder.loadTexts: pgatmTcScramble.setDescription(' off (1) - no cell scrambling. sss (2) - Self-Synchronizing Cell Scrambling (SSS) dss (3) - Distributed Sampler Header Scrambling (DSS) setting are on a per-port basis. ')
pgatmTcClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pgatmTcClearStats.setStatus('current')
if mibBuilder.loadTexts: pgatmTcClearStats.setDescription('Clear statistics counters to zero on this particular port.')
pgatmTcStatsLastCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 927, 1, 9, 16, 1, 1, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pgatmTcStatsLastCleared.setStatus('current')
if mibBuilder.loadTexts: pgatmTcStatsLastCleared.setDescription("The value of MIB II's sysUpTime object at the last time these statistics were cleared. At power on, this value should contain 0. ")
mibBuilder.exportSymbols("PAIRGAIN-ATMTC-MIB", pgatmTcScramble=pgatmTcScramble, pgatmTcClearStats=pgatmTcClearStats, pgatmTcUnCorrHECError=pgatmTcUnCorrHECError, pgatmTcLOCDEventCount=pgatmTcLOCDEventCount, pgatmTcLayerMode=pgatmTcLayerMode, pgatmTcTxCellCount=pgatmTcTxCellCount, pgatmTcNonMatchCount=pgatmTcNonMatchCount, pgatmTcCorrHECError=pgatmTcCorrHECError, pgatmTcLayerTable=pgatmTcLayerTable, pgatmTcMibObjects=pgatmTcMibObjects, pgatmTcRxCellCount=pgatmTcRxCellCount, pgatmTcLayerEntry=pgatmTcLayerEntry, pgatmTcStatsLastCleared=pgatmTcStatsLastCleared, PYSNMP_MODULE_ID=pgatmTcMIB, pgatmTcMIB=pgatmTcMIB)
