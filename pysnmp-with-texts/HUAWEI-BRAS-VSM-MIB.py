#
# PySNMP MIB module HUAWEI-BRAS-VSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-VSM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, Gauge32, MibIdentifier, ObjectIdentity, Unsigned32, Bits, IpAddress, Counter64, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "Gauge32", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Bits", "IpAddress", "Counter64", "TimeTicks", "NotificationType")
RowStatus, MacAddress, DateAndTime, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "DateAndTime", "TextualConvention", "TruthValue", "DisplayString")
hwBRASVsm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9))
if mibBuilder.loadTexts: hwBRASVsm.setLastUpdated('200504181334Z')
if mibBuilder.loadTexts: hwBRASVsm.setOrganization('Huawei Technologies Co., Ltd. ')
if mibBuilder.loadTexts: hwBRASVsm.setContactInfo(' NanJing Institute,Huawei Technologies Co.,Ltd. HuiHong Mansion,No.91 BaiXia Rd. NanJing, P.R. of China Zipcode:210001 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwBRASVsm.setDescription('The MIB contains objects of module VSM.')
hwVsmSetFlowQryTLenTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 1))
hwVsmSetTimeLen = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTimeLen.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTimeLen.setDescription('Flow query time length.')
hwVsmServicePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2), )
if mibBuilder.loadTexts: hwVsmServicePolicyTable.setStatus('current')
if mibBuilder.loadTexts: hwVsmServicePolicyTable.setDescription(' VSM service policy configuration.')
hwVsmServicePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-VSM-MIB", "hwVsmServicePolicyName"))
if mibBuilder.loadTexts: hwVsmServicePolicyEntry.setStatus('current')
if mibBuilder.loadTexts: hwVsmServicePolicyEntry.setDescription(" Service policy entry, service policy name is identified as key word, direct a service policy when create, and don't allow to change. Index item is hwVsmServicePolicyName node. The table is used for configuration of service policy. Operation restriction description 1. must input service policy name when created. 2. if a service is being used for users, can't be deleted. 3. if a service is being used by domain, can't be deleted.")
hwVsmServicePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServicePolicyName.setStatus('current')
if mibBuilder.loadTexts: hwVsmServicePolicyName.setDescription(" The service policy name, is key word, must direct a service policy when create, and don't allow to change.")
hwVsmAcctSchemeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmAcctSchemeName.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctSchemeName.setDescription("The account scheme name, is key word, must direct a service policy when create, and don't allow to change.")
hwVsmTrafficPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTrafficPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwVsmTrafficPolicyName.setDescription(" In traffic policy nameoptional, if bind, must direct an acl policy name. If the acl policy policy ACL has been bound by a service policy, it can't be bound by another service policy. ")
hwVsmSetIdleCutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetIdleCutTime.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetIdleCutTime.setDescription(' The idle cut time, 0 means invalid, units: minute.')
hwVsmSetIdleCutFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 768000)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetIdleCutFlow.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetIdleCutFlow.setDescription(' The idle cut data flow, units: KByte/min, range: 0~100*1024*60/8. ')
hwVsmSevicePolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSevicePolicyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVsmSevicePolicyRowStatus.setDescription(' The row administrator status, supporting add, delete, modify.')
hwVsmOutTrafficPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmOutTrafficPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwVsmOutTrafficPolicyName.setDescription(" The out traffic policy nameoptional, if bind, must direct an acl policy name. If the acl policy policy ACL has been bound by a service policy, it can't be bound by another service policy. ")
hwVsmDaaPolicyFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vas", 0), ("daa", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmDaaPolicyFlag.setStatus('current')
if mibBuilder.loadTexts: hwVsmDaaPolicyFlag.setDescription(' The service policy type : vas(0): normal policy; daa(1): destination add account policy. ')
hwVsmSetTariffLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel1.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel1.setDescription(' The QOS profile of tariff level 1. ')
hwVsmSetTariffLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel2.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel2.setDescription(' The QOS profile of tariff level 2. ')
hwVsmSetTariffLevel3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel3.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel3.setDescription(' The QOS profile of tariff level 3. ')
hwVsmSetTariffLevel4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel4.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel4.setDescription(' The QOS profile of tariff level 4. ')
hwVsmSetTariffLevel5 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel5.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel5.setDescription(' The QOS profile of tariff level 5. ')
hwVsmSetTariffLevel6 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel6.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel6.setDescription(' The QOS profile of tariff level 6. ')
hwVsmSetTariffLevel7 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel7.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel7.setDescription(' The QOS profile of tariff level 7. ')
hwVsmSetTariffLevel8 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmSetTariffLevel8.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetTariffLevel8.setDescription(' The QOS profile of tariff level 8. ')
hwVsmTariffLevel1AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 17), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel1AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel1AcctSwitch.setDescription(' The Account switch of tariff level 1. acct-on (1) acct-off (2) ')
hwVsmTariffLevel2AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 18), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel2AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel2AcctSwitch.setDescription(' The Account switch of tariff level 2. acct-on (1) acct-off (2) ')
hwVsmTariffLevel3AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 19), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel3AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel3AcctSwitch.setDescription(' The Account switch of tariff level 3. acct-on (1) acct-off (2) ')
hwVsmTariffLevel4AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 20), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel4AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel4AcctSwitch.setDescription(' The Account switch of tariff level 4. acct-on (1) acct-off (2) ')
hwVsmTariffLevel5AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 21), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel5AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel5AcctSwitch.setDescription(' The Account switch of tariff level 5. acct-on (1) acct-off (2) ')
hwVsmTariffLevel6AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 22), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel6AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel6AcctSwitch.setDescription(' The Account switch of tariff level 6. acct-on (1) acct-off (2) ')
hwVsmTariffLevel7AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 23), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel7AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel7AcctSwitch.setDescription(' The Account switch of tariff level 7. acct-on (1) acct-off (2) ')
hwVsmTariffLevel8AcctSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 2, 1, 24), EnabledStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmTariffLevel8AcctSwitch.setStatus('current')
if mibBuilder.loadTexts: hwVsmTariffLevel8AcctSwitch.setDescription(' The Account switch of tariff level 8. acct-on (1) acct-off (2) ')
hwVsmValServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3), )
if mibBuilder.loadTexts: hwVsmValServiceTable.setStatus('current')
if mibBuilder.loadTexts: hwVsmValServiceTable.setDescription(' The VSM value-added-service detail. ')
hwVsmValServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-VSM-MIB", "hwVsmServiceID"), (0, "HUAWEI-BRAS-VSM-MIB", "hwVsmServiceSlot"))
if mibBuilder.loadTexts: hwVsmValServiceEntry.setStatus('current')
if mibBuilder.loadTexts: hwVsmValServiceEntry.setDescription(' Value-added-service detail entry, VSM value-added-service detail, service ID is key word.')
hwVsmServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServiceID.setStatus('current')
if mibBuilder.loadTexts: hwVsmServiceID.setDescription(' The value-added-service ID table index. ')
hwVsmUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(4294967295)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmUserID.setStatus('current')
if mibBuilder.loadTexts: hwVsmUserID.setDescription(' The user ID.')
hwVsmFlowNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmFlowNum.setStatus('current')
if mibBuilder.loadTexts: hwVsmFlowNum.setDescription(' The service flow number, maximum 16 flows per service. ')
hwVsmServiceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("vsmSourceDefault", 0), ("vsmSourceSig", 1), ("vsmSourceIptn", 2), ("vsmSourceRadius", 3), ("vsmSourceBod", 4), ("vsmSourceCopsNet", 5), ("vsmSourceCopsNetPm", 6), ("vsmSourceCopsUser", 7), ("vsmSourceCopsPm", 8), ("vsmSourceBmi", 9), ("vsmSourceIpBod", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServiceSource.setStatus('current')
if mibBuilder.loadTexts: hwVsmServiceSource.setDescription(' The value-added-service source: vsmSourceDefault(0): local; vsmSourceSig(1): from sig server; vsmSourceIptn(2): from IPTN server; vsmSourceRadius(3): from Radius server; vsmSourceBod(4): from BOD server; vsmSourceCopsNet(5): from COPS net policy content; vsmSourceCopsNetPm(6): from cops user poicy name; vsmSourceCopsUser(7): from COPS net policy content; vsmSourceCopsPm(8): from COPS user policy name; vsmSourceBmi(9): from BMI server; vsmSourceIpBod(10): from Liangchuang BOD server.')
hwVsmServiceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServiceSlot.setStatus('current')
if mibBuilder.loadTexts: hwVsmServiceSlot.setDescription(' The slot number corresponding slot of service, table index. ')
hwVsmValServicePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmValServicePolicy.setStatus('current')
if mibBuilder.loadTexts: hwVsmValServicePolicy.setDescription(" The value-added-service policy name, optional, if not used , fill '--'. ")
hwVsmAcctMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("none", 2), ("radius", 3), ("cops", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmAcctMethod.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctMethod.setDescription(' The account method, it may be Local,None,Radius,Cops. ')
hwVsmAcctStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmAcctStartTime.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctStartTime.setDescription(" The account start time, optional, if don't account, fill '--'. ")
hwVsmAcctServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmAcctServerName.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctServerName.setDescription(" The account server name show accounting server name. If don't account, show '--'. ")
hwVsmTwoLevelAcctServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmTwoLevelAcctServerName.setStatus('current')
if mibBuilder.loadTexts: hwVsmTwoLevelAcctServerName.setDescription(" The two level account server name, optional, if don't account, show '--'. ")
hwVsmPhyInfoAcctServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmPhyInfoAcctServerName.setStatus('current')
if mibBuilder.loadTexts: hwVsmPhyInfoAcctServerName.setDescription(" The physical information account server name, optional, if don't exist, show '--'. ")
hwVsmServiceIdleCutTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServiceIdleCutTime.setStatus('current')
if mibBuilder.loadTexts: hwVsmServiceIdleCutTime.setDescription(' The value-added-service idle cut time, 0 means invalid, units: minute. ')
hwVsmServiceIdleCutFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 768000)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmServiceIdleCutFlow.setStatus('current')
if mibBuilder.loadTexts: hwVsmServiceIdleCutFlow.setDescription(' The value-added-service idle cut data flow, units: kbyte/min, range: 0~100*1024*60/8. ')
hwVsmUpPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmUpPacketNum.setStatus('current')
if mibBuilder.loadTexts: hwVsmUpPacketNum.setDescription(' The value-added-service up packet number(64 bit). ')
hwVsmUpByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmUpByteNum.setStatus('current')
if mibBuilder.loadTexts: hwVsmUpByteNum.setDescription(' The value-added-service up byte number(64 bit). ')
hwVsmDownPacketNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmDownPacketNum.setStatus('current')
if mibBuilder.loadTexts: hwVsmDownPacketNum.setDescription(' The value-added-service down packet number(64 bit). ')
hwVsmDownByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmDownByteNum.setStatus('current')
if mibBuilder.loadTexts: hwVsmDownByteNum.setDescription(' The value-added-service down byte number(64 bit). ')
hwVsmDownloadServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmDownloadServerName.setStatus('current')
if mibBuilder.loadTexts: hwVsmDownloadServerName.setDescription(' The download policy server name. ')
hwVsmAcctServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 3, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVsmAcctServerType.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctServerType.setDescription(' The account server type. ')
hwVsmAcctServicePolicyEnableTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 5))
hwVsmAcctServicePolicyEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmAcctServicePolicyEnable.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctServicePolicyEnable.setDescription(' The Accounting service Enable. ')
hwVsmAcctServicePolicyDisable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwVsmAcctServicePolicyDisable.setStatus('current')
if mibBuilder.loadTexts: hwVsmAcctServicePolicyDisable.setDescription(' The Accounting service Disable. ')
hwVsmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4))
hwVsmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 1))
hwVsmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 1, 1)).setObjects(("HUAWEI-BRAS-VSM-MIB", "hwVsmSetFlowQryTLenObjectGroup"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmServicePolicyObjectGroup"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmValServiceObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVsmCompliance = hwVsmCompliance.setStatus('current')
if mibBuilder.loadTexts: hwVsmCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwVsmObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 2))
hwVsmSetFlowQryTLenObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 2, 1)).setObjects(("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTimeLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVsmSetFlowQryTLenObjectGroup = hwVsmSetFlowQryTLenObjectGroup.setStatus('current')
if mibBuilder.loadTexts: hwVsmSetFlowQryTLenObjectGroup.setDescription('Flow query time length group.')
hwVsmServicePolicyObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 2, 2)).setObjects(("HUAWEI-BRAS-VSM-MIB", "hwVsmServicePolicyName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmAcctSchemeName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTrafficPolicyName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetIdleCutTime"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetIdleCutFlow"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSevicePolicyRowStatus"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmOutTrafficPolicyName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmDaaPolicyFlag"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel1"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel2"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel3"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel4"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel5"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel6"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel7"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmSetTariffLevel8"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel1AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel2AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel3AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel4AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel5AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel6AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel7AcctSwitch"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTariffLevel8AcctSwitch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVsmServicePolicyObjectGroup = hwVsmServicePolicyObjectGroup.setStatus('current')
if mibBuilder.loadTexts: hwVsmServicePolicyObjectGroup.setDescription('The service policy group.')
hwVsmValServiceObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 9, 4, 2, 3)).setObjects(("HUAWEI-BRAS-VSM-MIB", "hwVsmServiceID"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmUserID"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmFlowNum"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmServiceSource"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmServiceSlot"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmValServicePolicy"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmAcctMethod"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmAcctStartTime"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmAcctServerName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmTwoLevelAcctServerName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmPhyInfoAcctServerName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmServiceIdleCutTime"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmServiceIdleCutFlow"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmUpPacketNum"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmUpByteNum"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmDownPacketNum"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmDownByteNum"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmDownloadServerName"), ("HUAWEI-BRAS-VSM-MIB", "hwVsmAcctServerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwVsmValServiceObjectGroup = hwVsmValServiceObjectGroup.setStatus('current')
if mibBuilder.loadTexts: hwVsmValServiceObjectGroup.setDescription('The VSM value service policy group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-VSM-MIB", hwVsmDownPacketNum=hwVsmDownPacketNum, hwVsmUpByteNum=hwVsmUpByteNum, hwVsmServicePolicyEntry=hwVsmServicePolicyEntry, hwVsmTariffLevel7AcctSwitch=hwVsmTariffLevel7AcctSwitch, hwVsmSetFlowQryTLenObjectGroup=hwVsmSetFlowQryTLenObjectGroup, hwVsmServiceSlot=hwVsmServiceSlot, hwVsmServiceID=hwVsmServiceID, hwVsmSetTariffLevel5=hwVsmSetTariffLevel5, hwVsmTariffLevel3AcctSwitch=hwVsmTariffLevel3AcctSwitch, hwVsmSetTimeLen=hwVsmSetTimeLen, hwVsmAcctSchemeName=hwVsmAcctSchemeName, hwVsmTariffLevel1AcctSwitch=hwVsmTariffLevel1AcctSwitch, hwVsmCompliances=hwVsmCompliances, hwVsmDownloadServerName=hwVsmDownloadServerName, hwVsmTariffLevel2AcctSwitch=hwVsmTariffLevel2AcctSwitch, hwVsmCompliance=hwVsmCompliance, hwVsmOutTrafficPolicyName=hwVsmOutTrafficPolicyName, hwVsmValServicePolicy=hwVsmValServicePolicy, hwVsmValServiceObjectGroup=hwVsmValServiceObjectGroup, hwVsmServiceIdleCutTime=hwVsmServiceIdleCutTime, hwVsmAcctServicePolicyEnableTable=hwVsmAcctServicePolicyEnableTable, hwVsmAcctServerName=hwVsmAcctServerName, hwVsmSetTariffLevel4=hwVsmSetTariffLevel4, hwVsmValServiceEntry=hwVsmValServiceEntry, hwVsmTariffLevel8AcctSwitch=hwVsmTariffLevel8AcctSwitch, hwVsmSetFlowQryTLenTable=hwVsmSetFlowQryTLenTable, hwVsmUserID=hwVsmUserID, PYSNMP_MODULE_ID=hwBRASVsm, hwVsmTwoLevelAcctServerName=hwVsmTwoLevelAcctServerName, hwVsmSetTariffLevel6=hwVsmSetTariffLevel6, hwVsmDaaPolicyFlag=hwVsmDaaPolicyFlag, hwVsmSetTariffLevel7=hwVsmSetTariffLevel7, hwVsmSetTariffLevel3=hwVsmSetTariffLevel3, hwVsmSetIdleCutFlow=hwVsmSetIdleCutFlow, hwVsmSetTariffLevel8=hwVsmSetTariffLevel8, hwVsmSetTariffLevel1=hwVsmSetTariffLevel1, hwVsmPhyInfoAcctServerName=hwVsmPhyInfoAcctServerName, hwVsmAcctServicePolicyDisable=hwVsmAcctServicePolicyDisable, hwVsmConformance=hwVsmConformance, hwVsmAcctServerType=hwVsmAcctServerType, hwVsmAcctMethod=hwVsmAcctMethod, hwVsmSetIdleCutTime=hwVsmSetIdleCutTime, hwBRASVsm=hwBRASVsm, hwVsmServiceSource=hwVsmServiceSource, hwVsmTrafficPolicyName=hwVsmTrafficPolicyName, hwVsmTariffLevel6AcctSwitch=hwVsmTariffLevel6AcctSwitch, hwVsmObjectGroups=hwVsmObjectGroups, hwVsmTariffLevel4AcctSwitch=hwVsmTariffLevel4AcctSwitch, hwVsmServicePolicyTable=hwVsmServicePolicyTable, hwVsmUpPacketNum=hwVsmUpPacketNum, hwVsmSevicePolicyRowStatus=hwVsmSevicePolicyRowStatus, hwVsmAcctStartTime=hwVsmAcctStartTime, hwVsmAcctServicePolicyEnable=hwVsmAcctServicePolicyEnable, hwVsmSetTariffLevel2=hwVsmSetTariffLevel2, hwVsmDownByteNum=hwVsmDownByteNum, hwVsmValServiceTable=hwVsmValServiceTable, hwVsmFlowNum=hwVsmFlowNum, hwVsmServicePolicyObjectGroup=hwVsmServicePolicyObjectGroup, hwVsmTariffLevel5AcctSwitch=hwVsmTariffLevel5AcctSwitch, hwVsmServicePolicyName=hwVsmServicePolicyName, hwVsmServiceIdleCutFlow=hwVsmServiceIdleCutFlow)
