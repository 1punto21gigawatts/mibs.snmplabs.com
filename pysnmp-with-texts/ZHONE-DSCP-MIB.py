#
# PySNMP MIB module ZHONE-DSCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-DSCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:47:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, MibIdentifier, TimeTicks, NotificationType, Gauge32, IpAddress, Counter64, Unsigned32, Counter32, Bits, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "MibIdentifier", "TimeTicks", "NotificationType", "Gauge32", "IpAddress", "Counter64", "Unsigned32", "Counter32", "Bits", "ModuleIdentity", "Integer32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
zhoneIp, = mibBuilder.importSymbols("Zhone", "zhoneIp")
dscpProfile = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22))
if mibBuilder.loadTexts: dscpProfile.setLastUpdated('201006030603Z')
if mibBuilder.loadTexts: dscpProfile.setOrganization('Zhone Technologies, Inc.')
if mibBuilder.loadTexts: dscpProfile.setContactInfo('Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com')
if mibBuilder.loadTexts: dscpProfile.setDescription('This is the Zhone module identifier for the Zhone DSCP (differentiated services code point) definition.')
dscpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1), )
if mibBuilder.loadTexts: dscpProfileTable.setStatus('current')
if mibBuilder.loadTexts: dscpProfileTable.setDescription('Zhone extension table for DSCP rule usage.')
dscpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1), ).setIndexNames((0, "ZHONE-DSCP-MIB", "dscpIndex"))
if mibBuilder.loadTexts: dscpProfileEntry.setStatus('current')
if mibBuilder.loadTexts: dscpProfileEntry.setDescription('Zhone extension entry for DSCP rule usage.')
dscpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: dscpIndex.setStatus('current')
if mibBuilder.loadTexts: dscpIndex.setDescription('Index for the conceptual row associating an entry from this table to a unique DSCP instance.')
dscpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscpProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: dscpProfileRowStatus.setDescription('For creating, modifying, and deleting this row.')
dscp00map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp00map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp00map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 0.')
dscp01map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp01map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp01map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 1.')
dscp02map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp02map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp02map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 2.')
dscp03map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp03map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp03map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 3.')
dscp04map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp04map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp04map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 4.')
dscp05map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp05map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp05map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 5.')
dscp06map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp06map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp06map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 6.')
dscp07map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp07map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp07map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 7.')
dscp08map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp08map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp08map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 8.')
dscp09map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp09map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp09map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 9.')
dscp10map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp10map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp10map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 10.')
dscp11map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp11map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp11map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 11.')
dscp12map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp12map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp12map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 12.')
dscp13map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp13map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp13map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 13.')
dscp14map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp14map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp14map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 14.')
dscp15map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp15map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp15map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 15.')
dscp16map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp16map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp16map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 16.')
dscp17map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp17map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp17map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 17.')
dscp18map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp18map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp18map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 18.')
dscp19map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp19map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp19map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 19.')
dscp20map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp20map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp20map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 20.')
dscp21map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp21map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp21map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 21.')
dscp22map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp22map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp22map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 22.')
dscp23map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp23map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp23map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 23.')
dscp24map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp24map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp24map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 24.')
dscp25map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp25map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp25map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 25.')
dscp26map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp26map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp26map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 26.')
dscp27map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp27map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp27map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 27.')
dscp28map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp28map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp28map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 28.')
dscp29map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp29map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp29map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 29.')
dscp30map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp30map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp30map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 30.')
dscp31map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp31map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp31map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 31.')
dscp32map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp32map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp32map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 32.')
dscp33map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp33map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp33map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 33.')
dscp34map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp34map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp34map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 34.')
dscp35map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp35map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp35map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 35.')
dscp36map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp36map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp36map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 36.')
dscp37map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp37map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp37map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 37.')
dscp38map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp38map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp38map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 38.')
dscp39map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp39map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp39map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 39.')
dscp40map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp40map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp40map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 40.')
dscp41map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp41map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp41map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 41.')
dscp42map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp42map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp42map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 42.')
dscp43map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp43map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp43map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 43.')
dscp44map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp44map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp44map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 44.')
dscp45map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp45map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp45map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 45.')
dscp46map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp46map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp46map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 46.')
dscp47map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp47map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp47map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 47.')
dscp48map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp48map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp48map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 48.')
dscp49map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp49map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp49map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 49.')
dscp50map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp50map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp50map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 50.')
dscp51map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp51map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp51map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 51.')
dscp52map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp52map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp52map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 52.')
dscp53map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp53map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp53map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 53.')
dscp54map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp54map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp54map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 54.')
dscp55map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp55map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp55map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 55.')
dscp56map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp56map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp56map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 56.')
dscp57map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp57map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp57map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 57.')
dscp58map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp58map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp58map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 58.')
dscp59map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp59map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp59map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 59.')
dscp60map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp60map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp60map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 60.')
dscp61map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp61map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp61map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 61.')
dscp62map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp62map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp62map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 62.')
dscp63map8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 1, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dscp63map8021p.setStatus('current')
if mibBuilder.loadTexts: dscp63map8021p.setDescription('The desired 802.1p setting corresponding to DSCP value 63.')
dscpProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 2)).setObjects(("ZHONE-DSCP-MIB", "dscpProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dscpProfileGroup = dscpProfileGroup.setStatus('current')
if mibBuilder.loadTexts: dscpProfileGroup.setDescription('A collection of objects from dscpProfileEntry.')
dscpProfileGroupObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 1, 22, 3)).setObjects(("ZHONE-DSCP-MIB", "dscp00map8021p"), ("ZHONE-DSCP-MIB", "dscp01map8021p"), ("ZHONE-DSCP-MIB", "dscp02map8021p"), ("ZHONE-DSCP-MIB", "dscp03map8021p"), ("ZHONE-DSCP-MIB", "dscp04map8021p"), ("ZHONE-DSCP-MIB", "dscp05map8021p"), ("ZHONE-DSCP-MIB", "dscp06map8021p"), ("ZHONE-DSCP-MIB", "dscp07map8021p"), ("ZHONE-DSCP-MIB", "dscp08map8021p"), ("ZHONE-DSCP-MIB", "dscp09map8021p"), ("ZHONE-DSCP-MIB", "dscp10map8021p"), ("ZHONE-DSCP-MIB", "dscp11map8021p"), ("ZHONE-DSCP-MIB", "dscp12map8021p"), ("ZHONE-DSCP-MIB", "dscp13map8021p"), ("ZHONE-DSCP-MIB", "dscp14map8021p"), ("ZHONE-DSCP-MIB", "dscp15map8021p"), ("ZHONE-DSCP-MIB", "dscp16map8021p"), ("ZHONE-DSCP-MIB", "dscp17map8021p"), ("ZHONE-DSCP-MIB", "dscp18map8021p"), ("ZHONE-DSCP-MIB", "dscp19map8021p"), ("ZHONE-DSCP-MIB", "dscp20map8021p"), ("ZHONE-DSCP-MIB", "dscp21map8021p"), ("ZHONE-DSCP-MIB", "dscp22map8021p"), ("ZHONE-DSCP-MIB", "dscp23map8021p"), ("ZHONE-DSCP-MIB", "dscp24map8021p"), ("ZHONE-DSCP-MIB", "dscp25map8021p"), ("ZHONE-DSCP-MIB", "dscp26map8021p"), ("ZHONE-DSCP-MIB", "dscp27map8021p"), ("ZHONE-DSCP-MIB", "dscp28map8021p"), ("ZHONE-DSCP-MIB", "dscp29map8021p"), ("ZHONE-DSCP-MIB", "dscp30map8021p"), ("ZHONE-DSCP-MIB", "dscp31map8021p"), ("ZHONE-DSCP-MIB", "dscp32map8021p"), ("ZHONE-DSCP-MIB", "dscp33map8021p"), ("ZHONE-DSCP-MIB", "dscp34map8021p"), ("ZHONE-DSCP-MIB", "dscp35map8021p"), ("ZHONE-DSCP-MIB", "dscp36map8021p"), ("ZHONE-DSCP-MIB", "dscp37map8021p"), ("ZHONE-DSCP-MIB", "dscp38map8021p"), ("ZHONE-DSCP-MIB", "dscp39map8021p"), ("ZHONE-DSCP-MIB", "dscp40map8021p"), ("ZHONE-DSCP-MIB", "dscp41map8021p"), ("ZHONE-DSCP-MIB", "dscp42map8021p"), ("ZHONE-DSCP-MIB", "dscp43map8021p"), ("ZHONE-DSCP-MIB", "dscp44map8021p"), ("ZHONE-DSCP-MIB", "dscp45map8021p"), ("ZHONE-DSCP-MIB", "dscp46map8021p"), ("ZHONE-DSCP-MIB", "dscp47map8021p"), ("ZHONE-DSCP-MIB", "dscp48map8021p"), ("ZHONE-DSCP-MIB", "dscp49map8021p"), ("ZHONE-DSCP-MIB", "dscp50map8021p"), ("ZHONE-DSCP-MIB", "dscp51map8021p"), ("ZHONE-DSCP-MIB", "dscp52map8021p"), ("ZHONE-DSCP-MIB", "dscp53map8021p"), ("ZHONE-DSCP-MIB", "dscp54map8021p"), ("ZHONE-DSCP-MIB", "dscp55map8021p"), ("ZHONE-DSCP-MIB", "dscp56map8021p"), ("ZHONE-DSCP-MIB", "dscp57map8021p"), ("ZHONE-DSCP-MIB", "dscp58map8021p"), ("ZHONE-DSCP-MIB", "dscp59map8021p"), ("ZHONE-DSCP-MIB", "dscp60map8021p"), ("ZHONE-DSCP-MIB", "dscp61map8021p"), ("ZHONE-DSCP-MIB", "dscp62map8021p"), ("ZHONE-DSCP-MIB", "dscp63map8021p"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dscpProfileGroupObjectGroup = dscpProfileGroupObjectGroup.setStatus('current')
if mibBuilder.loadTexts: dscpProfileGroupObjectGroup.setDescription('A collection of objects from dscpProfileEntry.')
mibBuilder.exportSymbols("ZHONE-DSCP-MIB", dscp03map8021p=dscp03map8021p, dscp22map8021p=dscp22map8021p, dscp46map8021p=dscp46map8021p, dscp01map8021p=dscp01map8021p, dscp50map8021p=dscp50map8021p, dscp32map8021p=dscp32map8021p, dscp57map8021p=dscp57map8021p, dscp41map8021p=dscp41map8021p, dscp36map8021p=dscp36map8021p, dscp48map8021p=dscp48map8021p, dscp61map8021p=dscp61map8021p, dscp52map8021p=dscp52map8021p, dscp16map8021p=dscp16map8021p, dscp44map8021p=dscp44map8021p, dscp18map8021p=dscp18map8021p, dscpProfileRowStatus=dscpProfileRowStatus, dscp20map8021p=dscp20map8021p, dscp27map8021p=dscp27map8021p, dscp14map8021p=dscp14map8021p, dscpIndex=dscpIndex, dscp30map8021p=dscp30map8021p, dscp21map8021p=dscp21map8021p, dscp49map8021p=dscp49map8021p, dscp62map8021p=dscp62map8021p, dscp47map8021p=dscp47map8021p, dscp23map8021p=dscp23map8021p, dscp26map8021p=dscp26map8021p, dscp31map8021p=dscp31map8021p, dscp39map8021p=dscp39map8021p, dscp13map8021p=dscp13map8021p, dscp58map8021p=dscp58map8021p, dscp59map8021p=dscp59map8021p, dscp05map8021p=dscp05map8021p, dscp02map8021p=dscp02map8021p, dscp37map8021p=dscp37map8021p, dscp00map8021p=dscp00map8021p, dscp55map8021p=dscp55map8021p, dscpProfileGroupObjectGroup=dscpProfileGroupObjectGroup, dscp04map8021p=dscp04map8021p, dscp12map8021p=dscp12map8021p, dscp24map8021p=dscp24map8021p, dscp45map8021p=dscp45map8021p, dscp56map8021p=dscp56map8021p, dscp06map8021p=dscp06map8021p, dscp11map8021p=dscp11map8021p, dscp33map8021p=dscp33map8021p, dscpProfile=dscpProfile, dscp54map8021p=dscp54map8021p, dscp63map8021p=dscp63map8021p, dscp08map8021p=dscp08map8021p, dscp09map8021p=dscp09map8021p, dscp19map8021p=dscp19map8021p, dscp53map8021p=dscp53map8021p, dscp29map8021p=dscp29map8021p, PYSNMP_MODULE_ID=dscpProfile, dscp07map8021p=dscp07map8021p, dscpProfileTable=dscpProfileTable, dscp28map8021p=dscp28map8021p, dscp35map8021p=dscp35map8021p, dscp38map8021p=dscp38map8021p, dscp42map8021p=dscp42map8021p, dscpProfileGroup=dscpProfileGroup, dscp40map8021p=dscp40map8021p, dscp10map8021p=dscp10map8021p, dscp25map8021p=dscp25map8021p, dscpProfileEntry=dscpProfileEntry, dscp60map8021p=dscp60map8021p, dscp15map8021p=dscp15map8021p, dscp43map8021p=dscp43map8021p, dscp17map8021p=dscp17map8021p, dscp51map8021p=dscp51map8021p, dscp34map8021p=dscp34map8021p)
