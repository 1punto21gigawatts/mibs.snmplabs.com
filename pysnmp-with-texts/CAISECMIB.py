#
# PySNMP MIB module CAISECMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CAISECMIB
# Produced by pysmi-0.3.4 at Wed May  1 11:46:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ObjectIdentity, MibIdentifier, Integer32, Gauge32, NotificationType, NotificationType, ModuleIdentity, enterprises, Counter32, IpAddress, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "ObjectIdentity", "MibIdentifier", "Integer32", "Gauge32", "NotificationType", "NotificationType", "ModuleIdentity", "enterprises", "Counter32", "IpAddress", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cai = MibIdentifier((1, 3, 6, 1, 4, 1, 791))
caiSysMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 2))
caiDbMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 3))
caiAppSft = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 4))
caiSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 2, 3))
caiACF2 = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 2, 3, 2))
caiACF2LstMsg = MibScalar((1, 3, 6, 1, 4, 1, 791, 2, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caiACF2LstMsg.setStatus('mandatory')
if mibBuilder.loadTexts: caiACF2LstMsg.setDescription('This object type is used when defining TRAPs to send CA-ACF2 messages in a trap. ')
caiACF2AVT1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1000)).setObjects(("CAISECMIB", "caiACF2LstMsg"))
if mibBuilder.loadTexts: caiACF2AVT1.setDescription("Reason: A dataset violation occurred Msgref: ACF99913 Values: Value definition LOGINID - MVS user's 8 character logonID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source SEVERITY - 'VIO' literal ACCESS - 'EXEC', 'READ', 'UPDATE', 'ALLOC' literals DSN - Data set name for which access disallowed. member name if avail in parens. 52 char max. VOL - Volume serial number on which the data set resides PROGRAM - Current program under which the violation occurred RMRC - Return code from CA-ACF2 data set validation MAJOR - Numeric identifier of the CA-ACF2 component through which access is attempted ")
caiACF2AVT2 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1001)).setObjects(("CAISECMIB", "caiACF2LstMsg"))
if mibBuilder.loadTexts: caiACF2AVT2.setDescription("Reason: A resource violation occurred Msgref: ACF04056 Values: Value definition LOGINID - MVS user's 8 character logonID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source SEVERITY - 'VIO' literal ACCESS - 'EXEC', 'READ', 'UPDATE', 'ALLOC' literals RESOURCE - Resource name: if it exceeds 64 characters, it will be truncated: truncation will be indicated by three periods '...', trailing the resource name CLASS - Resource class name RMC - Rule manager return code: 0 == record resident 4 == record obtained from database 8 == record not found INT - Rule interpreter return code, includes: 16 == rule prevents access 20 == no rule applies ")
caiACF2PVT1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1020)).setObjects(("CAISECMIB", "caiACF2LstMsg"))
if mibBuilder.loadTexts: caiACF2PVT1.setDescription("Reason: A password violation occurred Msgref: ACF01200 Values: Value definition LOGINID - MVS user's 8 character logonID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source TYPE - 'VIO' for entry violation, 'LOG' for entry logging PROGRAM - Current program under which the violation occurred CODE - Numeric value representing the violation reason: append this value to message ID 'ACF01...' to determine the reason for the violation. This value will be zero '0' for entry logging. ")
caiACF2USP1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1030)).setObjects(("CAISECMIB", "caiACF2LstMsg"))
if mibBuilder.loadTexts: caiACF2USP1.setDescription("Reason: User suspended Msgref: Values: Value definition LOGINID - MVS user's 8 character logonID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source TYPE - 'ENTRY' for entry violations, 'DSN' Dataset VIO, 'RES' resource vio, 'ADMIN' by administrative action. PROGRAM - Current program under which the violation occurred CODE - Numeric value representing the violation reason: append this value to message ID 'ACF01...' to determine the reason for the violation. This value will be zero '0' for entry logging. ")
caiTSS = MibIdentifier((1, 3, 6, 1, 4, 1, 791, 2, 3, 3))
caiTSSLstMsg = MibScalar((1, 3, 6, 1, 4, 1, 791, 2, 3, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: caiTSSLstMsg.setStatus('mandatory')
if mibBuilder.loadTexts: caiTSSLstMsg.setDescription('This object type is used when defining TRAPs to send CA-ACF2 messages in a trap. ')
caiTSSAVT1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1100)).setObjects(("CAISECMIB", "caiTSSLstMsg"))
if mibBuilder.loadTexts: caiTSSAVT1.setDescription("Reason: A volume violation occurred Msgref: TSS7200E Values: Value definition ACID - MVS user's 8 character accessor ID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source FACILITY - SEVERITY - 'VIO' literal ACCESS - 'EXEC', 'READ', 'UPDATE', 'ALLOC' literals VOL - Volume serial number on which the data set resides PROGRAM - Current program under which the violation occurred CODES - ? ")
caiTSSAVT2 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1101)).setObjects(("CAISECMIB", "caiTSSLstMsg"))
if mibBuilder.loadTexts: caiTSSAVT2.setDescription("Reason: A DATASET violation occurred Msgref: TSS7220E ACID - MVS user's 8 character accessor ID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source FACILITY - SEVERITY - 'VIO' literal ACCESS - 'EXEC', 'READ', 'UPDATE', 'ALLOC' literals DSN - Data set name for which access disallowed. member name if avail in parens. 52 char max. PROGRAM - Current program under which the violation occurred CODES - ? ")
caiTSSAVT3 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1102)).setObjects(("CAISECMIB", "caiTSSLstMsg"))
if mibBuilder.loadTexts: caiTSSAVT3.setDescription("Reason: A RESOURCE violation occurred Msgref: TSS7250E ACID - MVS user's 8 character accessor ID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source FACILITY - SEVERITY - 'VIO' literal ACCESS - 'EXEC', 'READ', 'UPDATE', 'ALLOC' literals RESOURCE - Resource name: if it exceeds 64 characters, it will be truncated: truncation will be indicated by three periods '...', trailing the resource name PROGRAM - Current program under which the violation occurred CODES - ? ")
caiTSSPVT1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1120)).setObjects(("CAISECMIB", "caiTSSLstMsg"))
if mibBuilder.loadTexts: caiTSSPVT1.setDescription("Reason: A password violation occurred Action: Msgref: TSS7100E ACID - MVS user's 8 character accessor ID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source FACILITY - VIOTYPE - 'VIO/BADPW/UNKN USER' literal ? CODES - ? ")
caiTSSUSP1 = NotificationType((1, 3, 6, 1, 4, 1, 791) + (0,1130)).setObjects(("CAISECMIB", "caiTSSLstMsg"))
if mibBuilder.loadTexts: caiTSSUSP1.setDescription("Reason: User suspended Action: Msgref: TSS ACID - MVS user's 8 character accessor ID JOBNAME - Jobname under which the violation occurred SOURCE - User's entry source FACILITY - VIOTYPE - 'VIO/BADPW/UNKN USER' literal ? CODES - ? ")
mibBuilder.exportSymbols("CAISECMIB", caiACF2USP1=caiACF2USP1, caiACF2AVT2=caiACF2AVT2, caiACF2=caiACF2, caiACF2AVT1=caiACF2AVT1, caiTSSLstMsg=caiTSSLstMsg, caiTSSAVT3=caiTSSAVT3, cai=cai, caiDbMgt=caiDbMgt, caiAppSft=caiAppSft, caiACF2LstMsg=caiACF2LstMsg, caiACF2PVT1=caiACF2PVT1, caiTSSAVT1=caiTSSAVT1, caiSysMgt=caiSysMgt, caiTSS=caiTSS, caiSecurity=caiSecurity, caiTSSAVT2=caiTSSAVT2, caiTSSUSP1=caiTSSUSP1, caiTSSPVT1=caiTSSPVT1)
