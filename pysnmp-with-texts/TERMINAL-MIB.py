#
# PySNMP MIB module TERMINAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERMINAL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
terminalMgmt, = mibBuilder.importSymbols("APENT-MIB", "terminalMgmt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter64, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, MibIdentifier, Bits, Unsigned32, Gauge32, Integer32, Counter32, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "MibIdentifier", "Bits", "Unsigned32", "Gauge32", "Integer32", "Counter32", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
terminalMgrMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 11, 1))
if mibBuilder.loadTexts: terminalMgrMib.setLastUpdated('9707202000Z')
if mibBuilder.loadTexts: terminalMgrMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: terminalMgrMib.setContactInfo('Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: terminalMgrMib.setDescription('This MIB module describes the ArrowPoint enterprise MIB support for Terminal Options')
apTermSessIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessIdleTimeout.setStatus('current')
if mibBuilder.loadTexts: apTermSessIdleTimeout.setDescription('This object is the default session idle time applied to each active session to this unit.')
apTermSessLoginFailureInfo = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apTermSessLoginFailureInfo.setStatus('current')
if mibBuilder.loadTexts: apTermSessLoginFailureInfo.setDescription('This object contains information pertaining to the the last login failure. It is a variable bind accompanying the apTerm- SessLoginFailureTrap')
apTermSessTelnetDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessTelnetDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessTelnetDisallowed.setDescription('This object is the global setting on whether telnet access is allowed to this unit.')
apTermSessConsoleDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessConsoleDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessConsoleDisallowed.setDescription('This object is the global setting on whether Console access is allowed to this unit.')
apTermSessSNMPDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessSNMPDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessSNMPDisallowed.setDescription('This object is the global setting on whether SNMP access is allowed to this unit.')
apTermSessFTPDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessFTPDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessFTPDisallowed.setDescription('This object is the global setting on whether FTP access is allowed to this unit.')
apTermSessEuroDateDisplay = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessEuroDateDisplay.setStatus('current')
if mibBuilder.loadTexts: apTermSessEuroDateDisplay.setDescription('This object is the global setting on whether dates are displayed in a European format: MM/DD/YY vs. DD/MM/YY.')
apTermSessXMLDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessXMLDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessXMLDisallowed.setDescription('This object is the global setting on whether XML access is allowed to this unit.')
apTermSessWebMgmtDisallowed = MibScalar((1, 3, 6, 1, 4, 1, 2467, 1, 11, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTermSessWebMgmtDisallowed.setStatus('current')
if mibBuilder.loadTexts: apTermSessWebMgmtDisallowed.setDescription('This object is the global setting on whether Web-Mgmt access is allowed to this unit.')
apTermSessLoginFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 2467, 1, 11) + (0,1)).setObjects(("TERMINAL-MIB", "apTermSessLoginFailureInfo"))
if mibBuilder.loadTexts: apTermSessLoginFailureTrap.setDescription('This trap is generated when a login failure occurs. The login may have been attempted via Console/Ftp/Telnet, a description of the login failure accompanies this trap in the form of apTermSessLoginFailureInfo')
mibBuilder.exportSymbols("TERMINAL-MIB", apTermSessWebMgmtDisallowed=apTermSessWebMgmtDisallowed, apTermSessLoginFailureInfo=apTermSessLoginFailureInfo, PYSNMP_MODULE_ID=terminalMgrMib, apTermSessSNMPDisallowed=apTermSessSNMPDisallowed, apTermSessEuroDateDisplay=apTermSessEuroDateDisplay, terminalMgrMib=terminalMgrMib, apTermSessFTPDisallowed=apTermSessFTPDisallowed, apTermSessConsoleDisallowed=apTermSessConsoleDisallowed, apTermSessLoginFailureTrap=apTermSessLoginFailureTrap, apTermSessTelnetDisallowed=apTermSessTelnetDisallowed, apTermSessXMLDisallowed=apTermSessXMLDisallowed, apTermSessIdleTimeout=apTermSessIdleTimeout)
