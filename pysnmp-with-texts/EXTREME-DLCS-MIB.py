#
# PySNMP MIB module EXTREME-DLCS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
extremeDlcs = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 8))
if mibBuilder.loadTexts: extremeDlcs.setLastUpdated('9903040000Z')
if mibBuilder.loadTexts: extremeDlcs.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeDlcs.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeDlcs.setDescription('Extreme Dynamic-Link Context System (DLCS) status objects')
extremeDlcsEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 8, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDlcsEnable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsEnable.setDescription('Setting this to true will allow the agent to start collecting DLCS binding information.')
extremeDlcsNetbiosEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 8, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDlcsNetbiosEnable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsNetbiosEnable.setDescription('Setting this to true will allow the agent to start collecting DLCS binding information using the NetBios protocol.')
extremeDlcsKerberos5Enable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 8, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDlcsKerberos5Enable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsKerberos5Enable.setDescription('Setting this to true will allow the agent to start collecting DLCS binding information using the Kerberos V5 protocol.')
extremeDlcsRsvpEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 8, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDlcsRsvpEnable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsRsvpEnable.setDescription('Setting this to true will allow the agent to start collecting DLCS binding information using the RSVP protocol.')
extremeDlcsDnsEnable = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 8, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeDlcsDnsEnable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsDnsEnable.setDescription('Setting this to true will allow the agent to start collecting DLCS binding information using the DNS protocol.')
extremeDlcsBindingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6), )
if mibBuilder.loadTexts: extremeDlcsBindingTable.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingTable.setDescription('Table of DLCS Binding information. Entries are added and deleted by the agent based on information gathered from the local network environment. Multiple entries may exist for almost identical sets of bindings although the agent will ensure that exactly matching entries are coalesced.')
extremeDlcsBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1), ).setIndexNames((0, "EXTREME-DLCS-MIB", "extremeDlcsBindingIndex"))
if mibBuilder.loadTexts: extremeDlcsBindingEntry.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingEntry.setDescription('Entry in table of DLCS bindings.')
extremeDlcsBindingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingIndex.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingIndex.setDescription('An index into this table, chosen by the agent. This has no significance to the manager beyond its uniqueness within this agent.')
extremeDlcsBindingType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 2), Bits().clone(namedValues=NamedValues(("user2ip", 0), ("user2port", 1), ("ip2port", 2), ("application2user", 3), ("application2ip", 4), ("host2ip", 5), ("group2ip", 6), ("group2port", 7), ("user2group", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingType.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingType.setDescription('The type of binding expressed here. A given bit is set if DLCS has detected that the two relevant items are bound together. e.g. an entry with application2user(3) set to 1 implies that the username extremeDlcsBindingUser has been seen to be using the application extremeDlcsBindingApplication. In addition, if this entry also has user2port(1) set to 1 then this user and application have been detected as running on the physical switch port extremeDlcsBindingPhysPort.')
extremeDlcsBindingSource = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netbiosquery", 3), ("netbiosbind", 4), ("dns", 5), ("kerberos5", 6), ("rsvp", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingSource.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingSource.setDescription('The source of the information binding.')
extremeDlcsBindingUser = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingUser.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingUser.setDescription('The User name detected by DLCS. A string of length zero indicates no valid User name has been detected for this binding.')
extremeDlcsBindingGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingGroup.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingGroup.setDescription('The Group name detected by DLCS. A string of length zero indicates no valid Group name has been detected for this binding.')
extremeDlcsBindingApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingApplication.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingApplication.setDescription('The Application name detected by DLCS. A string of length zero indicates no valid Application name has been detected for this binding.')
extremeDlcsBindingHost = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingHost.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingHost.setDescription('The Host name detected by DLCS. A string of length zero indicates no valid Host name has been detected for this binding.')
extremeDlcsBindingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingIpAddress.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingIpAddress.setDescription('The IP address detected by DLCS. A value of 0.0.0.0 indicates no valid IP address has been detected for this binding.')
extremeDlcsBindingPhysPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingPhysPort.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingPhysPort.setDescription('The physical port number (ifIndex) detected by DLCS. This is valid in all bindings.')
extremeDlcsBindingUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 8, 6, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeDlcsBindingUpdateTime.setStatus('current')
if mibBuilder.loadTexts: extremeDlcsBindingUpdateTime.setDescription('The value of sysUpTime when this entry was last updated.')
mibBuilder.exportSymbols("EXTREME-DLCS-MIB", PYSNMP_MODULE_ID=extremeDlcs, extremeDlcs=extremeDlcs, extremeDlcsBindingUpdateTime=extremeDlcsBindingUpdateTime, extremeDlcsBindingUser=extremeDlcsBindingUser, extremeDlcsBindingTable=extremeDlcsBindingTable, extremeDlcsKerberos5Enable=extremeDlcsKerberos5Enable, extremeDlcsBindingType=extremeDlcsBindingType, extremeDlcsBindingIndex=extremeDlcsBindingIndex, extremeDlcsBindingIpAddress=extremeDlcsBindingIpAddress, extremeDlcsBindingPhysPort=extremeDlcsBindingPhysPort, extremeDlcsEnable=extremeDlcsEnable, extremeDlcsBindingEntry=extremeDlcsBindingEntry, extremeDlcsBindingHost=extremeDlcsBindingHost, extremeDlcsBindingSource=extremeDlcsBindingSource, extremeDlcsDnsEnable=extremeDlcsDnsEnable, extremeDlcsBindingGroup=extremeDlcsBindingGroup, extremeDlcsNetbiosEnable=extremeDlcsNetbiosEnable, extremeDlcsBindingApplication=extremeDlcsBindingApplication, extremeDlcsRsvpEnable=extremeDlcsRsvpEnable)
