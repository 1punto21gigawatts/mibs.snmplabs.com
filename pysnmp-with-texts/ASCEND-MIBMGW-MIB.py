#
# PySNMP MIB module ASCEND-MIBMGW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBMGW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:27:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, MibIdentifier, ObjectIdentity, Gauge32, Bits, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Integer32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "MibIdentifier", "ObjectIdentity", "Gauge32", "Bits", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Integer32", "Counter64", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibmediaGatewayProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 170))
mibmediaGatewayProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 170, 1), )
if mibBuilder.loadTexts: mibmediaGatewayProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfileTable.setDescription('A list of mibmediaGatewayProfile profile entries.')
mibmediaGatewayProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1), ).setIndexNames((0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-Name"))
if mibBuilder.loadTexts: mibmediaGatewayProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfileEntry.setDescription('A mibmediaGatewayProfile entry containing objects that maps to the parameters of mibmediaGatewayProfile profile.')
mediaGatewayProfile_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 1), DisplayString()).setLabel("mediaGatewayProfile-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Name.setDescription('The name of the Media Gateway profile labels the MGC(s) that we are communicating with. Multiple MEDIA-GATEWAY profiles can be created if virtual media gateways are used. The name of the controlling media gateway should also be configured in the respective T1/E1 line profile(s).')
mediaGatewayProfile_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-Active").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Active.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Active.setDescription("When set to 'no', interface to the Media Gateway MGC specified in this profile is disabled.")
mediaGatewayProfile_ProtocolType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("h248", 1), ("sip", 3)))).setLabel("mediaGatewayProfile-ProtocolType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_ProtocolType.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_ProtocolType.setDescription('The type of the signaling protocol to use.')
mediaGatewayProfile_MgSigAddress_Type = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("systemDefault", 1), ("specific", 2), ("interfaceDependent", 3)))).setLabel("mediaGatewayProfile-MgSigAddress-Type").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgSigAddress_Type.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgSigAddress_Type.setDescription("Defines how the Media Gateway's source IP address is obtained.")
mediaGatewayProfile_MgSigAddress_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 5), IpAddress()).setLabel("mediaGatewayProfile-MgSigAddress-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgSigAddress_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgSigAddress_IpAddress.setDescription("MG's IP address to be used for signaling. Valid only if type=specific.")
mediaGatewayProfile_MgRtpAddress_Type = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("systemDefault", 1), ("specific", 2), ("interfaceDependent", 3)))).setLabel("mediaGatewayProfile-MgRtpAddress-Type").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgRtpAddress_Type.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgRtpAddress_Type.setDescription("Defines how the Media Gateway's source IP address is obtained.")
mediaGatewayProfile_MgRtpAddress_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 7), IpAddress()).setLabel("mediaGatewayProfile-MgRtpAddress-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgRtpAddress_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgRtpAddress_IpAddress.setDescription("MG's IP address to be used for signaling. Valid only if type=specific.")
mediaGatewayProfile_H248Options_EncodingFormat = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("text", 1), ("binary", 2)))).setLabel("mediaGatewayProfile-H248Options-EncodingFormat").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_EncodingFormat.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_EncodingFormat.setDescription('Protocol text or binary encoding. Only text encoding is supported currently.')
mediaGatewayProfile_H248Options_MaxResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 9), Integer32()).setLabel("mediaGatewayProfile-H248Options-MaxResponseTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_MaxResponseTime.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_MaxResponseTime.setDescription('Maximum response time value in milliseconds.')
mediaGatewayProfile_H248Options_Heartbeat_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-H248Options-Heartbeat-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_Heartbeat_Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_Heartbeat_Enabled.setDescription('When set to yes, TNT will generate signaling heartbeat to MGC at the configured interval.')
mediaGatewayProfile_H248Options_Heartbeat_Interval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 11), Integer32()).setLabel("mediaGatewayProfile-H248Options-Heartbeat-Interval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_Heartbeat_Interval.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_Heartbeat_Interval.setDescription('Time interval between heartbeat messages, in milliseconds.')
mediaGatewayProfile_H248Options_DigitmapOptions_StartTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 12), Integer32()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-StartTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_StartTimer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_StartTimer.setDescription('DigitMap start timer in milliseconds')
mediaGatewayProfile_H248Options_DigitmapOptions_ShortTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 13), Integer32()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-ShortTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_ShortTimer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_ShortTimer.setDescription('DigitMap short timer in milliseconds')
mediaGatewayProfile_H248Options_DigitmapOptions_LongTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 14), Integer32()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-LongTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_LongTimer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_LongTimer.setDescription('DigitMap long timer in milliseconds')
mediaGatewayProfile_IpdcOptions_BayId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 15), DisplayString()).setLabel("mediaGatewayProfile-IpdcOptions-BayId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_IpdcOptions_BayId.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_IpdcOptions_BayId.setDescription('Bay ID defines the bay this device belongs to. Used for registration purposes only. The content of this field is reported to the gateway during the device registration process.')
mediaGatewayProfile_IpdcOptions_SystemType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 16), DisplayString()).setLabel("mediaGatewayProfile-IpdcOptions-SystemType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_IpdcOptions_SystemType.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_IpdcOptions_SystemType.setDescription('Model ID and/or type of equipment. Used for device registration only. Must be listed in the database on the Gateway.')
mediaGatewayProfile_TransportOptions_Type = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2)))).setLabel("mediaGatewayProfile-TransportOptions-Type").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TransportOptions_Type.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TransportOptions_Type.setDescription('Transport layer to be used for signaling traffic. H248 supports TCP/TPKT and SIP uses UDP.')
mediaGatewayProfile_VoipOptions_PacketAudioMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("g711Ulaw", 1), ("g711Alaw", 2), ("g723", 3), ("g729", 4), ("g72364kps", 5), ("rt24", 6), ("g728", 7), ("frgsm", 8)))).setLabel("mediaGatewayProfile-VoipOptions-PacketAudioMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_PacketAudioMode.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_PacketAudioMode.setDescription('Audio Coder to be used for voice packetization.')
mediaGatewayProfile_VoipOptions_FramesPerPacket = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 19), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-FramesPerPacket").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_FramesPerPacket.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_FramesPerPacket.setDescription('Voice Frames Per RTP Packet. One (1) through four (4) are valid values but must be two (2) if packet audio mode was set to one of the flavors of G.711.')
mediaGatewayProfile_VoipOptions_SilenceDetCng = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("cngOnly", 3)))).setLabel("mediaGatewayProfile-VoipOptions-SilenceDetCng").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_SilenceDetCng.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_SilenceDetCng.setDescription('Silence Detection and Comfort Noise Generation selection.')
mediaGatewayProfile_VoipOptions_EnaAdapJitterBuffer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-VoipOptions-EnaAdapJitterBuffer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_EnaAdapJitterBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_EnaAdapJitterBuffer.setDescription('Enable Adaptive Jtr Buf')
mediaGatewayProfile_VoipOptions_MaxJitterBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 22), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-MaxJitterBufferSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_MaxJitterBufferSize.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_MaxJitterBufferSize.setDescription('Max Jtr Buf Size')
mediaGatewayProfile_VoipOptions_InitialJitterBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 23), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-InitialJitterBufferSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_InitialJitterBufferSize.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_InitialJitterBufferSize.setDescription('Initial Jtr Buf Size')
mediaGatewayProfile_VoipOptions_VoiceAnnDir = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 24), DisplayString()).setLabel("mediaGatewayProfile-VoipOptions-VoiceAnnDir").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_VoiceAnnDir.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_VoiceAnnDir.setDescription('Pc Flash Card Voice Announcement Directory')
mediaGatewayProfile_VoipOptions_VoiceAnnEnc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("g711Ulaw", 1), ("g729", 4)))).setLabel("mediaGatewayProfile-VoipOptions-VoiceAnnEnc").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_VoiceAnnEnc.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_VoiceAnnEnc.setDescription('Voice announcement file encoding')
mediaGatewayProfile_VoipOptions_CallInterDigitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 26), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-CallInterDigitTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_CallInterDigitTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_CallInterDigitTimeout.setDescription('Inter Digit Timeout')
mediaGatewayProfile_VoipOptions_SilenceThreshold = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 27), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-SilenceThreshold").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_SilenceThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_SilenceThreshold.setDescription('Silence Thresh (dB inc)')
mediaGatewayProfile_VoipOptions_DtmfTonePassing = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inband", 1), ("outofband", 2), ("rtp", 3)))).setLabel("mediaGatewayProfile-VoipOptions-DtmfTonePassing").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_DtmfTonePassing.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_DtmfTonePassing.setDescription('DTMF Tone Passing')
mediaGatewayProfile_VoipOptions_Maxcalls = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 29), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-Maxcalls").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_Maxcalls.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_Maxcalls.setDescription('Maximum Voip Calls')
mediaGatewayProfile_VoipOptions_Rfc2833PayloadType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 30), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-Rfc2833PayloadType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_Rfc2833PayloadType.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_Rfc2833PayloadType.setDescription('Value to assign to payload type for rfc2833 used for rtp transport of DTMF tones.')
mediaGatewayProfile_VoipOptions_G711TransparentData = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-VoipOptions-G711TransparentData").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_G711TransparentData.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_G711TransparentData.setDescription('G711 Transparent Fax/Data')
mediaGatewayProfile_VoipOptions_RtpProblemReporting_Enable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 87), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-VoipOptions-RtpProblemReporting-Enable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_Enable.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_Enable.setDescription('Enable/Disable RTP (potential) problem detection and reporting.')
mediaGatewayProfile_VoipOptions_RtpProblemReporting_MultMediaRcptOkTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 88), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-RtpProblemReporting-MultMediaRcptOkTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_MultMediaRcptOkTime.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_MultMediaRcptOkTime.setDescription('(1-65535 seconds) Maximum time allowed to recive multiple rtp streams and still not consider it rogue.')
mediaGatewayProfile_VoipOptions_RtpProblemReporting_NoMediaRcptOkTime = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 89), Integer32()).setLabel("mediaGatewayProfile-VoipOptions-RtpProblemReporting-NoMediaRcptOkTime").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_NoMediaRcptOkTime.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_VoipOptions_RtpProblemReporting_NoMediaRcptOkTime.setDescription('(1-65535 seconds) A message will be generated if no rtp was received in this time. The consecutive reporting time will be exponential.')
mediaGatewayProfile_DialedGwOptions_CallHairpin = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-DialedGwOptions-CallHairpin").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_CallHairpin.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_CallHairpin.setDescription('Hairpin call (ingress)')
mediaGatewayProfile_DialedGwOptions_TrunkQuiesce = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-DialedGwOptions-TrunkQuiesce").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_TrunkQuiesce.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_TrunkQuiesce.setDescription('Trunk Quiesce (ingress)')
mediaGatewayProfile_DialedGwOptions_TrunkPrefix = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-DialedGwOptions-TrunkPrefix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_TrunkPrefix.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_TrunkPrefix.setDescription('Apply Trunk prefix to DNIS. For egress trunk selection.')
mediaGatewayProfile_DialedGwOptions_StartLocalRingTone = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ringToneOnAlerting", 1), ("ringToneOnFirstMessage", 2), ("ringToneOnCallProgress", 3)))).setLabel("mediaGatewayProfile-DialedGwOptions-StartLocalRingTone").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_StartLocalRingTone.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_StartLocalRingTone.setDescription('When to start local ring tone (ingress).')
mediaGatewayProfile_DialedGwOptions_MediaWaitForConnect = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-DialedGwOptions-MediaWaitForConnect").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_MediaWaitForConnect.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_DialedGwOptions_MediaWaitForConnect.setDescription('Start media flow after Q931 connect message (egress - for SIP 200 message).')
mediaGatewayProfile_RtFaxOptions_RtFaxEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-RtFaxEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_RtFaxEnable.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_RtFaxEnable.setDescription('Enable/Disable the Real-Time Fax Feature.')
mediaGatewayProfile_RtFaxOptions_EcmEnable = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-EcmEnable").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_EcmEnable.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_EcmEnable.setDescription('Enable/Disable Error Correction Mode.')
mediaGatewayProfile_RtFaxOptions_LowLatencyMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-LowLatencyMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_LowLatencyMode.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_LowLatencyMode.setDescription('Enable/Disable Low Latency Mode.')
mediaGatewayProfile_RtFaxOptions_CommandSpoof = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-CommandSpoof").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_CommandSpoof.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_CommandSpoof.setDescription('Enable/Disable a particular T.30 command spoof.')
mediaGatewayProfile_RtFaxOptions_LocalRetransmitLsf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-LocalRetransmitLsf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_LocalRetransmitLsf.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_LocalRetransmitLsf.setDescription('Enable/Disable local low speed frame retransmission')
mediaGatewayProfile_RtFaxOptions_PacketRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 42), Integer32()).setLabel("mediaGatewayProfile-RtFaxOptions-PacketRedundancy").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_PacketRedundancy.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_PacketRedundancy.setDescription('UDP Packet Redundancy.')
mediaGatewayProfile_RtFaxOptions_FixedPackets = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-FixedPackets").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_FixedPackets.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_FixedPackets.setDescription('Use fixed size image data packets')
mediaGatewayProfile_RtFaxOptions_MaxDataRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2401, 4801, 9601, 14401))).clone(namedValues=NamedValues(("n-2400", 2401), ("n-4800", 4801), ("n-9600", 9601), ("n-14400", 14401)))).setLabel("mediaGatewayProfile-RtFaxOptions-MaxDataRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_MaxDataRate.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_MaxDataRate.setDescription('Maximum Negotiated Data Rate')
mediaGatewayProfile_RtFaxOptions_AllowCtc = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-RtFaxOptions-AllowCtc").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_AllowCtc.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_RtFaxOptions_AllowCtc.setDescription('Enable extended ECM correction beyond four retransmissions')
mediaGatewayProfile_TosRtpOptions_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-TosRtpOptions-Active").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Active.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Active.setDescription('Activate type of service for this connection.')
mediaGatewayProfile_TosRtpOptions_Precedence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 65, 97, 129, 161, 193, 225))).clone(namedValues=NamedValues(("n-000", 1), ("n-001", 33), ("n-010", 65), ("n-011", 97), ("n-100", 129), ("n-101", 161), ("n-110", 193), ("n-111", 225)))).setLabel("mediaGatewayProfile-TosRtpOptions-Precedence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Precedence.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Precedence.setDescription('Tag the precedence bits (priority bits) in the TOS octet of IP datagram header with this value when match occurs.')
mediaGatewayProfile_TosRtpOptions_TypeOfService = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 9, 17))).clone(namedValues=NamedValues(("normal", 1), ("cost", 3), ("reliability", 5), ("throughput", 9), ("latency", 17)))).setLabel("mediaGatewayProfile-TosRtpOptions-TypeOfService").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_TypeOfService.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_TypeOfService.setDescription('Tag the type of service field in the TOS octet of IP datagram header with this value when match occurs.')
mediaGatewayProfile_TosRtpOptions_ApplyTo = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1025, 2049, 3073))).clone(namedValues=NamedValues(("incoming", 1025), ("outgoing", 2049), ("both", 3073)))).setLabel("mediaGatewayProfile-TosRtpOptions-ApplyTo").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_ApplyTo.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_ApplyTo.setDescription('Define how the type-of-service applies to data flow for this connection.')
mediaGatewayProfile_TosRtpOptions_MarkingType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("precedenceTos", 1), ("dscp", 2)))).setLabel("mediaGatewayProfile-TosRtpOptions-MarkingType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_MarkingType.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_MarkingType.setDescription('Select type of packet marking.')
mediaGatewayProfile_TosRtpOptions_Dscp = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 51), DisplayString()).setLabel("mediaGatewayProfile-TosRtpOptions-Dscp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Dscp.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosRtpOptions_Dscp.setDescription('DSCP tag to be used in marking of the packets (if marking-type = dscp).')
mediaGatewayProfile_TosSigOptions_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-TosSigOptions-Active").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Active.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Active.setDescription('Activate type of service for this connection.')
mediaGatewayProfile_TosSigOptions_Precedence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 33, 65, 97, 129, 161, 193, 225))).clone(namedValues=NamedValues(("n-000", 1), ("n-001", 33), ("n-010", 65), ("n-011", 97), ("n-100", 129), ("n-101", 161), ("n-110", 193), ("n-111", 225)))).setLabel("mediaGatewayProfile-TosSigOptions-Precedence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Precedence.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Precedence.setDescription('Tag the precedence bits (priority bits) in the TOS octet of IP datagram header with this value when match occurs.')
mediaGatewayProfile_TosSigOptions_TypeOfService = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 92), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 9, 17))).clone(namedValues=NamedValues(("normal", 1), ("cost", 3), ("reliability", 5), ("throughput", 9), ("latency", 17)))).setLabel("mediaGatewayProfile-TosSigOptions-TypeOfService").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_TypeOfService.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_TypeOfService.setDescription('Tag the type of service field in the TOS octet of IP datagram header with this value when match occurs.')
mediaGatewayProfile_TosSigOptions_ApplyTo = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 93), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1025, 2049, 3073))).clone(namedValues=NamedValues(("incoming", 1025), ("outgoing", 2049), ("both", 3073)))).setLabel("mediaGatewayProfile-TosSigOptions-ApplyTo").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_ApplyTo.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_ApplyTo.setDescription('Define how the type-of-service applies to data flow for this connection.')
mediaGatewayProfile_TosSigOptions_MarkingType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("precedenceTos", 1), ("dscp", 2)))).setLabel("mediaGatewayProfile-TosSigOptions-MarkingType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_MarkingType.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_MarkingType.setDescription('Select type of packet marking.')
mediaGatewayProfile_TosSigOptions_Dscp = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 95), DisplayString()).setLabel("mediaGatewayProfile-TosSigOptions-Dscp").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Dscp.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_TosSigOptions_Dscp.setDescription('DSCP tag to be used in marking of the packets (if marking-type = dscp).')
mediaGatewayProfile_SipOptions_T1Timer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 52), Integer32()).setLabel("mediaGatewayProfile-SipOptions-T1Timer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_T1Timer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_T1Timer.setDescription('T1 timer value in milliseconds.')
mediaGatewayProfile_SipOptions_T2Timer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 53), Integer32()).setLabel("mediaGatewayProfile-SipOptions-T2Timer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_T2Timer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_T2Timer.setDescription('T2 timer value in milliseconds.')
mediaGatewayProfile_SipOptions_InviteRetries = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 54), Integer32()).setLabel("mediaGatewayProfile-SipOptions-InviteRetries").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_InviteRetries.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_InviteRetries.setDescription('Number of invite retries.')
mediaGatewayProfile_SipOptions_NonInviteRetries = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 55), Integer32()).setLabel("mediaGatewayProfile-SipOptions-NonInviteRetries").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NonInviteRetries.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NonInviteRetries.setDescription('Number of non-invite retries.')
mediaGatewayProfile_SipOptions_PrimaryProxy_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 56), IpAddress()).setLabel("mediaGatewayProfile-SipOptions-PrimaryProxy-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_IpAddress.setDescription('IP addr of primary proxy.')
mediaGatewayProfile_SipOptions_PrimaryProxy_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 57), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-PrimaryProxy-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_Name.setDescription('Domain name of primary proxy')
mediaGatewayProfile_SipOptions_PrimaryProxy_PortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 58), Integer32()).setLabel("mediaGatewayProfile-SipOptions-PrimaryProxy-PortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_PortNumber.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_PortNumber.setDescription('Primary proxy TCP/UDP port number.')
mediaGatewayProfile_SipOptions_PrimaryProxy_MessageFormat = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("compact", 1), ("long", 2)))).setLabel("mediaGatewayProfile-SipOptions-PrimaryProxy-MessageFormat").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_MessageFormat.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrimaryProxy_MessageFormat.setDescription('Proxy message format')
mediaGatewayProfile_SipOptions_SecondaryProxy_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 60), IpAddress()).setLabel("mediaGatewayProfile-SipOptions-SecondaryProxy-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_IpAddress.setDescription('IP addr of secondary proxy.')
mediaGatewayProfile_SipOptions_SecondaryProxy_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 61), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-SecondaryProxy-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_Name.setDescription('Domain name of secondary proxy')
mediaGatewayProfile_SipOptions_SecondaryProxy_PortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 62), Integer32()).setLabel("mediaGatewayProfile-SipOptions-SecondaryProxy-PortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_PortNumber.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_PortNumber.setDescription('Secondary proxy TCP/UDP port number.')
mediaGatewayProfile_SipOptions_SecondaryProxy_MessageFormat = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("compact", 1), ("long", 2)))).setLabel("mediaGatewayProfile-SipOptions-SecondaryProxy-MessageFormat").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_MessageFormat.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_SecondaryProxy_MessageFormat.setDescription('Proxy message format')
mediaGatewayProfile_SipOptions_RegistrationProxy_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 64), IpAddress()).setLabel("mediaGatewayProfile-SipOptions-RegistrationProxy-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_IpAddress.setDescription('IP addr of registration proxy.')
mediaGatewayProfile_SipOptions_RegistrationProxy_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 65), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-RegistrationProxy-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_Name.setDescription('Domain name of registration proxy')
mediaGatewayProfile_SipOptions_RegistrationProxy_PortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 66), Integer32()).setLabel("mediaGatewayProfile-SipOptions-RegistrationProxy-PortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_PortNumber.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_PortNumber.setDescription('Registration proxy TCP/UDP port number.')
mediaGatewayProfile_SipOptions_RegistrationProxy_MessageFormat = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("compact", 1), ("long", 2)))).setLabel("mediaGatewayProfile-SipOptions-RegistrationProxy-MessageFormat").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_MessageFormat.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_MessageFormat.setDescription('Proxy message format')
mediaGatewayProfile_SipOptions_RegistrationProxy_RegisterInterval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 68), Integer32()).setLabel("mediaGatewayProfile-SipOptions-RegistrationProxy-RegisterInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_RegisterInterval.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_RegistrationProxy_RegisterInterval.setDescription('Time, in minutes, between requests (0 = disabled).')
mediaGatewayProfile_SipOptions_TrustedProxy_AuthenticateMessages = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-SipOptions-TrustedProxy-AuthenticateMessages").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_AuthenticateMessages.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_AuthenticateMessages.setDescription('Enable SIP authentication')
mediaGatewayProfile_SipOptions_UnknownAni = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 70), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-UnknownAni").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_UnknownAni.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_UnknownAni.setDescription('Unknown ANI string')
mediaGatewayProfile_SipOptions_BlockedAni = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 71), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-BlockedAni").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_BlockedAni.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_BlockedAni.setDescription('Unknown ANI string')
mediaGatewayProfile_SipOptions_PrivacyProxyRequire = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 96), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-SipOptions-PrivacyProxyRequire").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrivacyProxyRequire.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_PrivacyProxyRequire.setDescription('Include Proxy Require header for Remote Party privacy for INVITEs')
mediaGatewayProfile_SipOptions_OnholdMinutes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 72), Integer32()).setLabel("mediaGatewayProfile-SipOptions-OnholdMinutes").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_OnholdMinutes.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_OnholdMinutes.setDescription('Minutes to wait before a call on hold will disconnect. (range 0 to 1440)')
mediaGatewayProfile_SipOptions_Support100rel = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setLabel("mediaGatewayProfile-SipOptions-Support100rel").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_Support100rel.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_Support100rel.setDescription('Enable support for SIP 100rel reliable responses')
mediaGatewayProfile_SipOptions_Internationalize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-SipOptions-Internationalize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_Internationalize.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_Internationalize.setDescription('Enable Internationalization of phone number URIs. When set to yes, uses international-prefix, country-code, and national-destination-code settings for prefixes to phone, number URIs depending on TON setting in Q.931 setup.')
mediaGatewayProfile_SipOptions_InternationalPrefix = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("mediaGatewayProfile-SipOptions-InternationalPrefix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_InternationalPrefix.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_InternationalPrefix.setDescription('When set to yes, will prepend + to phone number URIs for all Q.931 TON settings of International. When internationalization is set to yes, will also prepend to TON settings of National and Subscriber.')
mediaGatewayProfile_SipOptions_CountryCode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 76), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-CountryCode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_CountryCode.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_CountryCode.setDescription('Country Code prepended to SIP URIs. Valid when internationalize = yes and trunk groups are not enabled or not provisioned.')
mediaGatewayProfile_SipOptions_NationalDestinationCode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 77), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-NationalDestinationCode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NationalDestinationCode.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NationalDestinationCode.setDescription('National Destination code prepended to SIP URIs. Valid when internationalize = yes and trunk groups are not enabled or not provisioned.')
mediaGatewayProfile_SipOptions_CallTransferMethod = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 97), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipTransfer", 1), ("pstnTransfer", 2)))).setLabel("mediaGatewayProfile-SipOptions-CallTransferMethod").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_CallTransferMethod.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_CallTransferMethod.setDescription('Type of call transfer invoked by receipt of REFER request')
mediaGatewayProfile_SipOptions_NotifyTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 98), Integer32()).setLabel("mediaGatewayProfile-SipOptions-NotifyTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NotifyTimer.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_NotifyTimer.setDescription('Seconds to wait before a call will disconnect after sending a NOTIFY request if no response is received. (range 0 to 600) Set notify-timer to zero to disable.')
mediaGatewayProfile_Voip2ipOptions_DtmfTonePassing = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inband", 1), ("outofband", 2), ("rtp", 3)))).setLabel("mediaGatewayProfile-Voip2ipOptions-DtmfTonePassing").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_DtmfTonePassing.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_DtmfTonePassing.setDescription('DTMF Tone Passing.')
mediaGatewayProfile_Voip2ipOptions_RtpTranslatorMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 100), Integer32()).setLabel("mediaGatewayProfile-Voip2ipOptions-RtpTranslatorMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_RtpTranslatorMode.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_RtpTranslatorMode.setDescription('RTP translator mode. In mode 0 the WAG acts as a strict RTP translator with no jitter buffer. In mode 1 the WAG acts as a RTP translator with a configurable jitter buffer.')
mediaGatewayProfile_Voip2ipOptions_MaxNumErasures = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 101), Integer32()).setLabel("mediaGatewayProfile-Voip2ipOptions-MaxNumErasures").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_MaxNumErasures.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_MaxNumErasures.setDescription('Maximum number of erasure frames that the WAG will generate when it encounters lost or late packets.')
mediaGatewayProfile_Voip2ipOptions_JitterBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 102), Integer32()).setLabel("mediaGatewayProfile-Voip2ipOptions-JitterBufferSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_JitterBufferSize.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Voip2ipOptions_JitterBufferSize.setDescription('The size of the WAG Jitter buffer - only applicable to rtp-translator-mode 1.')
mediaGatewayProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 1, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mediaGatewayProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_Action_o.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_Action_o.setDescription('')
mibmediaGatewayProfile_SipOptions_TrustedProxy_TableTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 170, 2), ).setLabel("mibmediaGatewayProfile-SipOptions-TrustedProxy-TableTable")
if mibBuilder.loadTexts: mibmediaGatewayProfile_SipOptions_TrustedProxy_TableTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_SipOptions_TrustedProxy_TableTable.setDescription('A list of mibmediaGatewayProfile__sip_options__trusted_proxy__table profile entries.')
mibmediaGatewayProfile_SipOptions_TrustedProxy_TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 170, 2, 1), ).setLabel("mibmediaGatewayProfile-SipOptions-TrustedProxy-TableEntry").setIndexNames((0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-SipOptions-TrustedProxy-Table-Name"), (0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-SipOptions-TrustedProxy-Table-Index-o"))
if mibBuilder.loadTexts: mibmediaGatewayProfile_SipOptions_TrustedProxy_TableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_SipOptions_TrustedProxy_TableEntry.setDescription('A mibmediaGatewayProfile__sip_options__trusted_proxy__table entry containing objects that maps to the parameters of mibmediaGatewayProfile__sip_options__trusted_proxy__table profile.')
mediaGatewayProfile_SipOptions_TrustedProxy_Table_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 2, 1, 1), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-TrustedProxy-Table-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_Name.setDescription('')
mediaGatewayProfile_SipOptions_TrustedProxy_Table_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 2, 1, 2), Integer32()).setLabel("mediaGatewayProfile-SipOptions-TrustedProxy-Table-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_Index_o.setDescription('')
mediaGatewayProfile_SipOptions_TrustedProxy_Table_HostName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 2, 1, 3), DisplayString()).setLabel("mediaGatewayProfile-SipOptions-TrustedProxy-Table-HostName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_HostName.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_HostName.setDescription('SIP proxy host name.')
mediaGatewayProfile_SipOptions_TrustedProxy_Table_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 2, 1, 4), IpAddress()).setLabel("mediaGatewayProfile-SipOptions-TrustedProxy-Table-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_SipOptions_TrustedProxy_Table_IpAddress.setDescription('SIP proxy host IP address.')
mibmediaGatewayProfile_H248Options_DigitmapOptions_MapTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 170, 3), ).setLabel("mibmediaGatewayProfile-H248Options-DigitmapOptions-MapTable")
if mibBuilder.loadTexts: mibmediaGatewayProfile_H248Options_DigitmapOptions_MapTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_H248Options_DigitmapOptions_MapTable.setDescription('A list of mibmediaGatewayProfile__h248_options__digitmap_options__map profile entries.')
mibmediaGatewayProfile_H248Options_DigitmapOptions_MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 170, 3, 1), ).setLabel("mibmediaGatewayProfile-H248Options-DigitmapOptions-MapEntry").setIndexNames((0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-H248Options-DigitmapOptions-Map-Name"), (0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-H248Options-DigitmapOptions-Map-Index-o"))
if mibBuilder.loadTexts: mibmediaGatewayProfile_H248Options_DigitmapOptions_MapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_H248Options_DigitmapOptions_MapEntry.setDescription('A mibmediaGatewayProfile__h248_options__digitmap_options__map entry containing objects that maps to the parameters of mibmediaGatewayProfile__h248_options__digitmap_options__map profile.')
mediaGatewayProfile_H248Options_DigitmapOptions_Map_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 3, 1, 1), DisplayString()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-Map-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Name.setDescription('')
mediaGatewayProfile_H248Options_DigitmapOptions_Map_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 3, 1, 2), Integer32()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-Map-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Index_o.setDescription('')
mediaGatewayProfile_H248Options_DigitmapOptions_Map_ReferenceName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 3, 1, 3), DisplayString()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-Map-ReferenceName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_ReferenceName.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_ReferenceName.setDescription('The reference name of the digitmap.')
mediaGatewayProfile_H248Options_DigitmapOptions_Map_Value = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 3, 1, 4), DisplayString()).setLabel("mediaGatewayProfile-H248Options-DigitmapOptions-Map-Value").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Value.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_H248Options_DigitmapOptions_Map_Value.setDescription('The value of the digitmap. Since | is treated as a special symbol for the command line interface, use ! as the separator in the digitmap value, i.e. 0!00![1-7]xxx!8xxx!Exx!9011x.')
mibmediaGatewayProfile_MgcAddressTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 170, 4), ).setLabel("mibmediaGatewayProfile-MgcAddressTable")
if mibBuilder.loadTexts: mibmediaGatewayProfile_MgcAddressTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_MgcAddressTable.setDescription('A list of mibmediaGatewayProfile__mgc_address profile entries.')
mibmediaGatewayProfile_MgcAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1), ).setLabel("mibmediaGatewayProfile-MgcAddressEntry").setIndexNames((0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-MgcAddress-Name"), (0, "ASCEND-MIBMGW-MIB", "mediaGatewayProfile-MgcAddress-Index-o"))
if mibBuilder.loadTexts: mibmediaGatewayProfile_MgcAddressEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibmediaGatewayProfile_MgcAddressEntry.setDescription('A mibmediaGatewayProfile__mgc_address entry containing objects that maps to the parameters of mibmediaGatewayProfile__mgc_address profile.')
mediaGatewayProfile_MgcAddress_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1, 1), DisplayString()).setLabel("mediaGatewayProfile-MgcAddress-Name").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Name.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Name.setDescription('')
mediaGatewayProfile_MgcAddress_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1, 2), Integer32()).setLabel("mediaGatewayProfile-MgcAddress-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Index_o.setDescription('')
mediaGatewayProfile_MgcAddress_Vrouter = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1, 3), DisplayString()).setLabel("mediaGatewayProfile-MgcAddress-Vrouter").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Vrouter.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_Vrouter.setDescription('Vrouter the Media Gateway Controller is reachable through. Leave empty if global vrouter is used.')
mediaGatewayProfile_MgcAddress_IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1, 4), IpAddress()).setLabel("mediaGatewayProfile-MgcAddress-IpAddress").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_IpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_IpAddress.setDescription("Media Gateway Controller's IP address.")
mediaGatewayProfile_MgcAddress_PortNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 170, 4, 1, 5), Integer32()).setLabel("mediaGatewayProfile-MgcAddress-PortNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_PortNumber.setStatus('mandatory')
if mibBuilder.loadTexts: mediaGatewayProfile_MgcAddress_PortNumber.setDescription("Media Gateway Controller's TCP/UDP port number.")
mibBuilder.exportSymbols("ASCEND-MIBMGW-MIB", mediaGatewayProfile_H248Options_DigitmapOptions_Map_Value=mediaGatewayProfile_H248Options_DigitmapOptions_Map_Value, mediaGatewayProfile_SipOptions_PrimaryProxy_PortNumber=mediaGatewayProfile_SipOptions_PrimaryProxy_PortNumber, mediaGatewayProfile_SipOptions_RegistrationProxy_Name=mediaGatewayProfile_SipOptions_RegistrationProxy_Name, mediaGatewayProfile_IpdcOptions_SystemType=mediaGatewayProfile_IpdcOptions_SystemType, mediaGatewayProfile_Voip2ipOptions_JitterBufferSize=mediaGatewayProfile_Voip2ipOptions_JitterBufferSize, mediaGatewayProfile_SipOptions_TrustedProxy_Table_Name=mediaGatewayProfile_SipOptions_TrustedProxy_Table_Name, mediaGatewayProfile_SipOptions_T1Timer=mediaGatewayProfile_SipOptions_T1Timer, mediaGatewayProfile_Voip2ipOptions_MaxNumErasures=mediaGatewayProfile_Voip2ipOptions_MaxNumErasures, mediaGatewayProfile_TosRtpOptions_Dscp=mediaGatewayProfile_TosRtpOptions_Dscp, mediaGatewayProfile_SipOptions_TrustedProxy_Table_IpAddress=mediaGatewayProfile_SipOptions_TrustedProxy_Table_IpAddress, mediaGatewayProfile_TosSigOptions_Dscp=mediaGatewayProfile_TosSigOptions_Dscp, mediaGatewayProfile_SipOptions_InviteRetries=mediaGatewayProfile_SipOptions_InviteRetries, mediaGatewayProfile_VoipOptions_SilenceDetCng=mediaGatewayProfile_VoipOptions_SilenceDetCng, mediaGatewayProfile_VoipOptions_VoiceAnnEnc=mediaGatewayProfile_VoipOptions_VoiceAnnEnc, mediaGatewayProfile_H248Options_DigitmapOptions_Map_ReferenceName=mediaGatewayProfile_H248Options_DigitmapOptions_Map_ReferenceName, mediaGatewayProfile_VoipOptions_CallInterDigitTimeout=mediaGatewayProfile_VoipOptions_CallInterDigitTimeout, mediaGatewayProfile_VoipOptions_MaxJitterBufferSize=mediaGatewayProfile_VoipOptions_MaxJitterBufferSize, mediaGatewayProfile_H248Options_Heartbeat_Interval=mediaGatewayProfile_H248Options_Heartbeat_Interval, mediaGatewayProfile_VoipOptions_VoiceAnnDir=mediaGatewayProfile_VoipOptions_VoiceAnnDir, mediaGatewayProfile_SipOptions_SecondaryProxy_Name=mediaGatewayProfile_SipOptions_SecondaryProxy_Name, mediaGatewayProfile_SipOptions_PrimaryProxy_IpAddress=mediaGatewayProfile_SipOptions_PrimaryProxy_IpAddress, mediaGatewayProfile_SipOptions_OnholdMinutes=mediaGatewayProfile_SipOptions_OnholdMinutes, mediaGatewayProfile_H248Options_Heartbeat_Enabled=mediaGatewayProfile_H248Options_Heartbeat_Enabled, mediaGatewayProfile_VoipOptions_FramesPerPacket=mediaGatewayProfile_VoipOptions_FramesPerPacket, mediaGatewayProfile_TosRtpOptions_Precedence=mediaGatewayProfile_TosRtpOptions_Precedence, mediaGatewayProfile_TosSigOptions_Precedence=mediaGatewayProfile_TosSigOptions_Precedence, mediaGatewayProfile_SipOptions_BlockedAni=mediaGatewayProfile_SipOptions_BlockedAni, mediaGatewayProfile_MgcAddress_Name=mediaGatewayProfile_MgcAddress_Name, mediaGatewayProfile_SipOptions_TrustedProxy_AuthenticateMessages=mediaGatewayProfile_SipOptions_TrustedProxy_AuthenticateMessages, mediaGatewayProfile_H248Options_DigitmapOptions_Map_Index_o=mediaGatewayProfile_H248Options_DigitmapOptions_Map_Index_o, mediaGatewayProfile_Voip2ipOptions_RtpTranslatorMode=mediaGatewayProfile_Voip2ipOptions_RtpTranslatorMode, mediaGatewayProfile_TosRtpOptions_TypeOfService=mediaGatewayProfile_TosRtpOptions_TypeOfService, mediaGatewayProfile_H248Options_DigitmapOptions_StartTimer=mediaGatewayProfile_H248Options_DigitmapOptions_StartTimer, mediaGatewayProfile_TransportOptions_Type=mediaGatewayProfile_TransportOptions_Type, mediaGatewayProfile_VoipOptions_G711TransparentData=mediaGatewayProfile_VoipOptions_G711TransparentData, mibmediaGatewayProfile=mibmediaGatewayProfile, mediaGatewayProfile_DialedGwOptions_CallHairpin=mediaGatewayProfile_DialedGwOptions_CallHairpin, mediaGatewayProfile_MgSigAddress_IpAddress=mediaGatewayProfile_MgSigAddress_IpAddress, mediaGatewayProfile_IpdcOptions_BayId=mediaGatewayProfile_IpdcOptions_BayId, mediaGatewayProfile_SipOptions_Internationalize=mediaGatewayProfile_SipOptions_Internationalize, mediaGatewayProfile_MgRtpAddress_Type=mediaGatewayProfile_MgRtpAddress_Type, mediaGatewayProfile_ProtocolType=mediaGatewayProfile_ProtocolType, mediaGatewayProfile_DialedGwOptions_StartLocalRingTone=mediaGatewayProfile_DialedGwOptions_StartLocalRingTone, mediaGatewayProfile_Name=mediaGatewayProfile_Name, mediaGatewayProfile_SipOptions_RegistrationProxy_IpAddress=mediaGatewayProfile_SipOptions_RegistrationProxy_IpAddress, mediaGatewayProfile_DialedGwOptions_MediaWaitForConnect=mediaGatewayProfile_DialedGwOptions_MediaWaitForConnect, mediaGatewayProfile_RtFaxOptions_LowLatencyMode=mediaGatewayProfile_RtFaxOptions_LowLatencyMode, mediaGatewayProfile_SipOptions_SecondaryProxy_PortNumber=mediaGatewayProfile_SipOptions_SecondaryProxy_PortNumber, mediaGatewayProfile_SipOptions_PrimaryProxy_Name=mediaGatewayProfile_SipOptions_PrimaryProxy_Name, mediaGatewayProfile_Active=mediaGatewayProfile_Active, mediaGatewayProfile_VoipOptions_Rfc2833PayloadType=mediaGatewayProfile_VoipOptions_Rfc2833PayloadType, mediaGatewayProfile_RtFaxOptions_RtFaxEnable=mediaGatewayProfile_RtFaxOptions_RtFaxEnable, mediaGatewayProfile_TosSigOptions_Active=mediaGatewayProfile_TosSigOptions_Active, mediaGatewayProfile_H248Options_DigitmapOptions_ShortTimer=mediaGatewayProfile_H248Options_DigitmapOptions_ShortTimer, mediaGatewayProfile_RtFaxOptions_CommandSpoof=mediaGatewayProfile_RtFaxOptions_CommandSpoof, mediaGatewayProfile_Voip2ipOptions_DtmfTonePassing=mediaGatewayProfile_Voip2ipOptions_DtmfTonePassing, DisplayString=DisplayString, mediaGatewayProfile_VoipOptions_PacketAudioMode=mediaGatewayProfile_VoipOptions_PacketAudioMode, mediaGatewayProfile_RtFaxOptions_PacketRedundancy=mediaGatewayProfile_RtFaxOptions_PacketRedundancy, mediaGatewayProfile_SipOptions_SecondaryProxy_IpAddress=mediaGatewayProfile_SipOptions_SecondaryProxy_IpAddress, mediaGatewayProfile_RtFaxOptions_AllowCtc=mediaGatewayProfile_RtFaxOptions_AllowCtc, mediaGatewayProfile_TosRtpOptions_ApplyTo=mediaGatewayProfile_TosRtpOptions_ApplyTo, mediaGatewayProfile_RtFaxOptions_FixedPackets=mediaGatewayProfile_RtFaxOptions_FixedPackets, mibmediaGatewayProfile_MgcAddressTable=mibmediaGatewayProfile_MgcAddressTable, mibmediaGatewayProfile_H248Options_DigitmapOptions_MapEntry=mibmediaGatewayProfile_H248Options_DigitmapOptions_MapEntry, mediaGatewayProfile_SipOptions_PrivacyProxyRequire=mediaGatewayProfile_SipOptions_PrivacyProxyRequire, mediaGatewayProfile_SipOptions_TrustedProxy_Table_Index_o=mediaGatewayProfile_SipOptions_TrustedProxy_Table_Index_o, mediaGatewayProfile_VoipOptions_RtpProblemReporting_MultMediaRcptOkTime=mediaGatewayProfile_VoipOptions_RtpProblemReporting_MultMediaRcptOkTime, mediaGatewayProfile_SipOptions_NotifyTimer=mediaGatewayProfile_SipOptions_NotifyTimer, mediaGatewayProfile_RtFaxOptions_EcmEnable=mediaGatewayProfile_RtFaxOptions_EcmEnable, mediaGatewayProfile_SipOptions_RegistrationProxy_PortNumber=mediaGatewayProfile_SipOptions_RegistrationProxy_PortNumber, mediaGatewayProfile_MgcAddress_Index_o=mediaGatewayProfile_MgcAddress_Index_o, mediaGatewayProfile_SipOptions_CountryCode=mediaGatewayProfile_SipOptions_CountryCode, mediaGatewayProfile_Action_o=mediaGatewayProfile_Action_o, mediaGatewayProfile_SipOptions_Support100rel=mediaGatewayProfile_SipOptions_Support100rel, mediaGatewayProfile_DialedGwOptions_TrunkQuiesce=mediaGatewayProfile_DialedGwOptions_TrunkQuiesce, mediaGatewayProfile_H248Options_MaxResponseTime=mediaGatewayProfile_H248Options_MaxResponseTime, mediaGatewayProfile_SipOptions_RegistrationProxy_RegisterInterval=mediaGatewayProfile_SipOptions_RegistrationProxy_RegisterInterval, mediaGatewayProfile_H248Options_EncodingFormat=mediaGatewayProfile_H248Options_EncodingFormat, mibmediaGatewayProfile_SipOptions_TrustedProxy_TableTable=mibmediaGatewayProfile_SipOptions_TrustedProxy_TableTable, mibmediaGatewayProfile_SipOptions_TrustedProxy_TableEntry=mibmediaGatewayProfile_SipOptions_TrustedProxy_TableEntry, mediaGatewayProfile_TosSigOptions_MarkingType=mediaGatewayProfile_TosSigOptions_MarkingType, mibmediaGatewayProfile_MgcAddressEntry=mibmediaGatewayProfile_MgcAddressEntry, mediaGatewayProfile_DialedGwOptions_TrunkPrefix=mediaGatewayProfile_DialedGwOptions_TrunkPrefix, mediaGatewayProfile_SipOptions_UnknownAni=mediaGatewayProfile_SipOptions_UnknownAni, mediaGatewayProfile_SipOptions_SecondaryProxy_MessageFormat=mediaGatewayProfile_SipOptions_SecondaryProxy_MessageFormat, mediaGatewayProfile_H248Options_DigitmapOptions_Map_Name=mediaGatewayProfile_H248Options_DigitmapOptions_Map_Name, mediaGatewayProfile_VoipOptions_EnaAdapJitterBuffer=mediaGatewayProfile_VoipOptions_EnaAdapJitterBuffer, mediaGatewayProfile_MgSigAddress_Type=mediaGatewayProfile_MgSigAddress_Type, mediaGatewayProfile_SipOptions_PrimaryProxy_MessageFormat=mediaGatewayProfile_SipOptions_PrimaryProxy_MessageFormat, mediaGatewayProfile_SipOptions_RegistrationProxy_MessageFormat=mediaGatewayProfile_SipOptions_RegistrationProxy_MessageFormat, mediaGatewayProfile_SipOptions_InternationalPrefix=mediaGatewayProfile_SipOptions_InternationalPrefix, mediaGatewayProfile_SipOptions_CallTransferMethod=mediaGatewayProfile_SipOptions_CallTransferMethod, mediaGatewayProfile_TosSigOptions_ApplyTo=mediaGatewayProfile_TosSigOptions_ApplyTo, mibmediaGatewayProfile_H248Options_DigitmapOptions_MapTable=mibmediaGatewayProfile_H248Options_DigitmapOptions_MapTable, mediaGatewayProfile_RtFaxOptions_MaxDataRate=mediaGatewayProfile_RtFaxOptions_MaxDataRate, mediaGatewayProfile_MgRtpAddress_IpAddress=mediaGatewayProfile_MgRtpAddress_IpAddress, mediaGatewayProfile_TosRtpOptions_Active=mediaGatewayProfile_TosRtpOptions_Active, mediaGatewayProfile_VoipOptions_DtmfTonePassing=mediaGatewayProfile_VoipOptions_DtmfTonePassing, mediaGatewayProfile_TosSigOptions_TypeOfService=mediaGatewayProfile_TosSigOptions_TypeOfService, mediaGatewayProfile_VoipOptions_RtpProblemReporting_NoMediaRcptOkTime=mediaGatewayProfile_VoipOptions_RtpProblemReporting_NoMediaRcptOkTime, mediaGatewayProfile_SipOptions_NonInviteRetries=mediaGatewayProfile_SipOptions_NonInviteRetries, mediaGatewayProfile_VoipOptions_InitialJitterBufferSize=mediaGatewayProfile_VoipOptions_InitialJitterBufferSize, mediaGatewayProfile_SipOptions_T2Timer=mediaGatewayProfile_SipOptions_T2Timer, mediaGatewayProfile_MgcAddress_Vrouter=mediaGatewayProfile_MgcAddress_Vrouter, mediaGatewayProfile_SipOptions_NationalDestinationCode=mediaGatewayProfile_SipOptions_NationalDestinationCode, mediaGatewayProfile_SipOptions_TrustedProxy_Table_HostName=mediaGatewayProfile_SipOptions_TrustedProxy_Table_HostName, mibmediaGatewayProfileEntry=mibmediaGatewayProfileEntry, mediaGatewayProfile_VoipOptions_Maxcalls=mediaGatewayProfile_VoipOptions_Maxcalls, mediaGatewayProfile_TosRtpOptions_MarkingType=mediaGatewayProfile_TosRtpOptions_MarkingType, mediaGatewayProfile_MgcAddress_PortNumber=mediaGatewayProfile_MgcAddress_PortNumber, mediaGatewayProfile_RtFaxOptions_LocalRetransmitLsf=mediaGatewayProfile_RtFaxOptions_LocalRetransmitLsf, mediaGatewayProfile_VoipOptions_RtpProblemReporting_Enable=mediaGatewayProfile_VoipOptions_RtpProblemReporting_Enable, mibmediaGatewayProfileTable=mibmediaGatewayProfileTable, mediaGatewayProfile_MgcAddress_IpAddress=mediaGatewayProfile_MgcAddress_IpAddress, mediaGatewayProfile_H248Options_DigitmapOptions_LongTimer=mediaGatewayProfile_H248Options_DigitmapOptions_LongTimer, mediaGatewayProfile_VoipOptions_SilenceThreshold=mediaGatewayProfile_VoipOptions_SilenceThreshold)
