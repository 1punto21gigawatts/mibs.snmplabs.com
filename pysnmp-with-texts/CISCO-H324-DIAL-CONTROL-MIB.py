#
# PySNMP MIB module CISCO-H324-DIAL-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-H324-DIAL-CONTROL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
cCallHistoryIndex, = mibBuilder.importSymbols("CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CvcVideoCoderRate, CvcGUid = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcVideoCoderRate", "CvcGUid")
callActiveSetupTime, callActiveIndex, AbsoluteCounter32 = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "callActiveSetupTime", "callActiveIndex", "AbsoluteCounter32")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, Integer32, Bits, NotificationType, Gauge32, Unsigned32, ModuleIdentity, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Bits", "NotificationType", "Gauge32", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "ObjectIdentity", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoH324DialControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 621))
ciscoH324DialControlMIB.setRevisions(('2007-02-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoH324DialControlMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoH324DialControlMIB.setLastUpdated('200702060000Z')
if mibBuilder.loadTexts: ciscoH324DialControlMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoH324DialControlMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-voice@cisco.com')
if mibBuilder.loadTexts: ciscoH324DialControlMIB.setDescription('This MIB module enhances the IETF Dial Control MIB (RFC2128) by providing H.324 call information over a telephony network. ITU-T Recommendation H.324 is the ITU standard covers audio and video to be shared among narrow-band visual telephone systems and terminal equipments over ISDN. REFERENCE [1] RFC 2128 Dial Control Management Information Base using SMIv2.')
ciscoH324DialControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 1))
ciscoH324DialControlMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 2))
cH324DialControlCallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1))
cH324DialControlCallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2))
class CH324CallType(TextualConvention, Integer32):
    description = 'This object specifies the H.324 call type of a voice call.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("h324", 1))

cH324CallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1), )
if mibBuilder.loadTexts: cH324CallHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryTable.setDescription('This table provides the H.324 extension to the call history table of IETF Dial Control MIB. It contains H.324 call leg information about specific voice encapsulation call with H.324 setup. An entry is added to the table when its associated call history entry in the IETF Dial Control MIB is created and the call history entry contains information for the call establishment to a voice encapsulation peer with video call information type. The entry is deleted when its associated call history entry in the IETF Dial Control MIB is deleted.')
cH324CallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cH324CallHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryEntry.setDescription('The information regarding a single voice encapsulation call with H.324 setup.')
cH324CallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryConnectionId.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryConnectionId.setDescription('The global call identifier for the H.324 call.')
cH324CallHistoryIncomingConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 2), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryIncomingConnectionId.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryIncomingConnectionId.setDescription('The global call identifier for the gateway call which will be shared with the associated call legs.')
cH324CallHistoryH324CallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 3), CH324CallType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryH324CallType.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryH324CallType.setDescription('The type of H.324 call.')
cH324CallHistoryUsedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryUsedBandwidth.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryUsedBandwidth.setDescription('The bandwidth for the H.324 call session.')
cH324CallHistoryTxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 5), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryTxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryTxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in transmit direction for a H.324 call session.')
cH324CallHistoryTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 6), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryTxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryTxVideoPackets.setDescription('The total number of video data packets transmitted for the H.324 call session.')
cH324CallHistoryTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 7), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryTxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryTxVideoBytes.setDescription('The total number of video data bytes transmitted for the H.324 call session.')
cH324CallHistoryRxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 8), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryRxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryRxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in receive direction for a H.324 call session.')
cH324CallHistoryRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 9), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryRxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryRxVideoPackets.setDescription('The total number of video data packets received for the H.324 call session.')
cH324CallHistoryRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 1, 1, 1, 10), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallHistoryRxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryRxVideoBytes.setDescription('The total number of video data bytes received for the H.324 call session.')
cH324CallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1), )
if mibBuilder.loadTexts: cH324CallActiveTable.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveTable.setDescription('This table provides the H.324 extension to the active call table of IETF Dial Control MIB. It contains H.324 call leg information about specific voice encapsulation call with H.324 setup. An entry is added to the table when its associated call active entry in the IETF Dial Control MIB is created. The call active entry contains information for the call establishment to a voice encapsulation peer with video call information type. The entry is deleted when its associated call active entry in the IETF Dial Control MIB is deleted.')
cH324CallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cH324CallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveEntry.setDescription('The information regarding a single voice encapsulation call with H.324 setup.')
cH324CallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveConnectionId.setDescription('The global call identifier for the H.324 call.')
cH324CallActiveIncomingConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 2), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveIncomingConnectionId.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveIncomingConnectionId.setDescription('The global call identifier for the gateway call which will be shared with the associated call legs.')
cH324CallActiveH324CallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 3), CH324CallType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveH324CallType.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveH324CallType.setDescription('The type of H.324 call.')
cH324CallActiveUsedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveUsedBandwidth.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveUsedBandwidth.setDescription('The bandwidth for the H.324 call session.')
cH324CallActiveTxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 5), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveTxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveTxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in transmit direction for the H.324 call session.')
cH324CallActiveTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 6), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveTxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveTxVideoPackets.setDescription('The total number of video data packets transmitted for the H.324 call session.')
cH324CallActiveTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 7), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveTxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveTxVideoBytes.setDescription('The total number of video data bytes transmitted for the H.324 call session.')
cH324CallActiveRxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 8), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveRxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveRxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in receive direction for the H.324 call session.')
cH324CallActiveRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 9), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveRxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveRxVideoPackets.setDescription('The total number of video data packets received for the H.324 call session.')
cH324CallActiveRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 621, 1, 2, 1, 1, 10), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cH324CallActiveRxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveRxVideoBytes.setDescription('The total number of video data bytes received for the H.324 call session.')
ciscoH324DialControlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1))
ciscoH324DialControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1, 1))
ciscoH324DialControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1, 2))
ciscoH324DialControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1, 1, 1)).setObjects(("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryGroup"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoH324DialControlMIBCompliance = ciscoH324DialControlMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoH324DialControlMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement ciscoH324DialControlMIB module.')
cH324CallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1, 2, 1)).setObjects(("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryConnectionId"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryIncomingConnectionId"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryH324CallType"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryUsedBandwidth"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryTxVideoCodec"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryTxVideoPackets"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryTxVideoBytes"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryRxVideoCodec"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryRxVideoPackets"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallHistoryRxVideoBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cH324CallHistoryGroup = cH324CallHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: cH324CallHistoryGroup.setDescription('This collection of objects provide the H.324 call history.')
cH324CallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 621, 2, 1, 2, 2)).setObjects(("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveConnectionId"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveIncomingConnectionId"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveH324CallType"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveUsedBandwidth"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveTxVideoCodec"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveTxVideoPackets"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveTxVideoBytes"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveRxVideoCodec"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveRxVideoPackets"), ("CISCO-H324-DIAL-CONTROL-MIB", "cH324CallActiveRxVideoBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cH324CallActiveGroup = cH324CallActiveGroup.setStatus('current')
if mibBuilder.loadTexts: cH324CallActiveGroup.setDescription('This collection of objects provide the information about the H.324 active calls.')
mibBuilder.exportSymbols("CISCO-H324-DIAL-CONTROL-MIB", cH324CallHistoryConnectionId=cH324CallHistoryConnectionId, PYSNMP_MODULE_ID=ciscoH324DialControlMIB, cH324CallHistoryIncomingConnectionId=cH324CallHistoryIncomingConnectionId, cH324CallHistoryRxVideoBytes=cH324CallHistoryRxVideoBytes, cH324CallActiveH324CallType=cH324CallActiveH324CallType, cH324DialControlCallActive=cH324DialControlCallActive, ciscoH324DialControlMIBConformance=ciscoH324DialControlMIBConformance, cH324CallHistoryTxVideoBytes=cH324CallHistoryTxVideoBytes, cH324CallActiveTxVideoBytes=cH324CallActiveTxVideoBytes, cH324CallHistoryTable=cH324CallHistoryTable, ciscoH324DialControlMIBConform=ciscoH324DialControlMIBConform, CH324CallType=CH324CallType, cH324CallHistoryTxVideoPackets=cH324CallHistoryTxVideoPackets, cH324CallActiveUsedBandwidth=cH324CallActiveUsedBandwidth, ciscoH324DialControlMIBObjects=ciscoH324DialControlMIBObjects, cH324CallActiveGroup=cH324CallActiveGroup, ciscoH324DialControlMIB=ciscoH324DialControlMIB, cH324CallHistoryEntry=cH324CallHistoryEntry, cH324CallActiveEntry=cH324CallActiveEntry, cH324CallActiveRxVideoBytes=cH324CallActiveRxVideoBytes, cH324CallActiveTxVideoCodec=cH324CallActiveTxVideoCodec, cH324CallHistoryUsedBandwidth=cH324CallHistoryUsedBandwidth, cH324CallHistoryH324CallType=cH324CallHistoryH324CallType, cH324CallActiveIncomingConnectionId=cH324CallActiveIncomingConnectionId, cH324CallHistoryRxVideoCodec=cH324CallHistoryRxVideoCodec, ciscoH324DialControlMIBCompliances=ciscoH324DialControlMIBCompliances, cH324CallActiveTxVideoPackets=cH324CallActiveTxVideoPackets, cH324CallActiveTable=cH324CallActiveTable, ciscoH324DialControlMIBCompliance=ciscoH324DialControlMIBCompliance, cH324CallHistoryRxVideoPackets=cH324CallHistoryRxVideoPackets, cH324CallActiveRxVideoCodec=cH324CallActiveRxVideoCodec, ciscoH324DialControlMIBGroups=ciscoH324DialControlMIBGroups, cH324CallActiveRxVideoPackets=cH324CallActiveRxVideoPackets, cH324CallHistoryGroup=cH324CallHistoryGroup, cH324DialControlCallHistory=cH324DialControlCallHistory, cH324CallActiveConnectionId=cH324CallActiveConnectionId, cH324CallHistoryTxVideoCodec=cH324CallHistoryTxVideoCodec)
