#
# PySNMP MIB module CYAN-OTU2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-OTU2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanOpStateTc, CyanOpStateQualTc, CyanLayerRateTc, CyanAdminStateTc, CyanSecServiceStateTc, CyanEnDisabledTc, CyanFecModeTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateTc", "CyanOpStateQualTc", "CyanLayerRateTc", "CyanAdminStateTc", "CyanSecServiceStateTc", "CyanEnDisabledTc", "CyanFecModeTc")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, NotificationType, MibIdentifier, ModuleIdentity, Bits, TimeTicks, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, Counter64, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "MibIdentifier", "ModuleIdentity", "Bits", "TimeTicks", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "Counter64", "ObjectIdentity", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cyanOTU2Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190))
cyanOTU2Module.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanOTU2Module.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanOTU2Module.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanOTU2Module.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanOTU2Module.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanOTU2Module.setDescription('MIB module for OTU-2 Section layer')
cyanOTU2MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1))
cyanOTU2Table = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1), )
if mibBuilder.loadTexts: cyanOTU2Table.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2Table.setDescription('A list of OTU2 entries.')
cyanOTU2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1), ).setIndexNames((0, "CYAN-OTU2-MIB", "cyanOTU2ShelfId"), (0, "CYAN-OTU2-MIB", "cyanOTU2ModuleId"), (0, "CYAN-OTU2-MIB", "cyanOTU2OTU2Id"))
if mibBuilder.loadTexts: cyanOTU2Entry.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2Entry.setDescription('An entry of OTU2.')
cyanOTU2ShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanOTU2ShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2ShelfId.setDescription('Shelf Id')
cyanOTU2ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanOTU2ModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2ModuleId.setDescription('Module Id')
cyanOTU2OTU2Id = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanOTU2OTU2Id.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2OTU2Id.setDescription('OTU2 Termination Id')
cyanOTU2AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 4), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2AdminState.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2AdminState.setDescription('Administrative state')
cyanOTU2AutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2AutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2AutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanOTU2FecCorrectableBitErrorsCurrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2FecCorrectableBitErrorsCurrSec.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2FecCorrectableBitErrorsCurrSec.setDescription('Current FEC corrected errors')
cyanOTU2ForwardErrorCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 7), CyanFecModeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2ForwardErrorCoding.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2ForwardErrorCoding.setDescription('Forward Error Coding')
cyanOTU2OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 8), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2OperState.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2OperState.setDescription('Primary Operation State')
cyanOTU2OperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 9), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2OperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2OperStateQual.setDescription('Operation state qualifier')
cyanOTU2RxFecErrorCorrection = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 10), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2RxFecErrorCorrection.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2RxFecErrorCorrection.setDescription('Rx. FEC Error Correction')
cyanOTU2SecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 11), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2SecServState.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2SecServState.setDescription('Secondary service state')
cyanOTU2SupportedRates = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 1, 1, 1, 12), CyanLayerRateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanOTU2SupportedRates.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2SupportedRates.setDescription('Supported layer & rate')
cyanOTU2ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 20)).setObjects(("CYAN-OTU2-MIB", "cyanOTU2AdminState"), ("CYAN-OTU2-MIB", "cyanOTU2AutoinserviceSoakTimeSec"), ("CYAN-OTU2-MIB", "cyanOTU2FecCorrectableBitErrorsCurrSec"), ("CYAN-OTU2-MIB", "cyanOTU2ForwardErrorCoding"), ("CYAN-OTU2-MIB", "cyanOTU2OperState"), ("CYAN-OTU2-MIB", "cyanOTU2OperStateQual"), ("CYAN-OTU2-MIB", "cyanOTU2RxFecErrorCorrection"), ("CYAN-OTU2-MIB", "cyanOTU2SecServState"), ("CYAN-OTU2-MIB", "cyanOTU2SupportedRates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanOTU2ObjectGroup = cyanOTU2ObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2ObjectGroup.setDescription('Group of objects that comes with OTU2 module')
cyanOTU2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 190, 30)).setObjects(("CYAN-OTU2-MIB", "cyanOTU2ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanOTU2Compliance = cyanOTU2Compliance.setStatus('current')
if mibBuilder.loadTexts: cyanOTU2Compliance.setDescription('The basic info needed to be a cyan OTU2')
mibBuilder.exportSymbols("CYAN-OTU2-MIB", cyanOTU2SecServState=cyanOTU2SecServState, cyanOTU2OTU2Id=cyanOTU2OTU2Id, cyanOTU2Entry=cyanOTU2Entry, PYSNMP_MODULE_ID=cyanOTU2Module, cyanOTU2SupportedRates=cyanOTU2SupportedRates, cyanOTU2OperState=cyanOTU2OperState, cyanOTU2ForwardErrorCoding=cyanOTU2ForwardErrorCoding, cyanOTU2Table=cyanOTU2Table, cyanOTU2ModuleId=cyanOTU2ModuleId, cyanOTU2RxFecErrorCorrection=cyanOTU2RxFecErrorCorrection, cyanOTU2Compliance=cyanOTU2Compliance, cyanOTU2FecCorrectableBitErrorsCurrSec=cyanOTU2FecCorrectableBitErrorsCurrSec, cyanOTU2MibObjects=cyanOTU2MibObjects, cyanOTU2OperStateQual=cyanOTU2OperStateQual, cyanOTU2ShelfId=cyanOTU2ShelfId, cyanOTU2AutoinserviceSoakTimeSec=cyanOTU2AutoinserviceSoakTimeSec, cyanOTU2AdminState=cyanOTU2AdminState, cyanOTU2Module=cyanOTU2Module, cyanOTU2ObjectGroup=cyanOTU2ObjectGroup)
