#
# PySNMP MIB module DOT3-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOT3-OAM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:13:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, iso, MibIdentifier, ModuleIdentity, Unsigned32, Integer32, Gauge32, IpAddress, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, mib_2, Counter32, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "iso", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Integer32", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mib-2", "Counter32", "Bits", "TimeTicks")
MacAddress, DisplayString, TimeStamp, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "TimeStamp", "TruthValue", "TextualConvention")
dot3OamMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 158))
dot3OamMIB.setRevisions(('2007-06-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: dot3OamMIB.setRevisionsDescriptions(('Initial version, published as RFC 4878.',))
if mibBuilder.loadTexts: dot3OamMIB.setLastUpdated('200706140000Z')
if mibBuilder.loadTexts: dot3OamMIB.setOrganization('IETF Ethernet Interfaces and Hub MIB Working Group')
if mibBuilder.loadTexts: dot3OamMIB.setContactInfo('WG Charter: http://www.ietf.org/html.charters/hubmib-charter.html Mailing lists: General Discussion: hubmib@ietf.org To Subscribe: hubmib-requests@ietf.org In Body: subscribe your_email_address Chair: Bert Wijnen Alcatel-Lucent Email: bwijnen at alcatel-lucent dot com Editor: Matt Squire Hatteras Networks E-mail: msquire at hatterasnetworks dot com ')
if mibBuilder.loadTexts: dot3OamMIB.setDescription("The MIB module for managing the new Ethernet OAM features introduced by the Ethernet in the First Mile taskforce (IEEE 802.3ah). The functionality presented here is based on IEEE 802.3ah [802.3ah], released in October, 2004. [802.3ah] was prepared as an addendum to the standing version of IEEE 802.3 [802.3-2002]. Since then, [802.3ah] has been merged into the base IEEE 802.3 specification in [802.3-2005]. In particular, this MIB focuses on the new OAM functions introduced in Clause 57 of [802.3ah]. The OAM functionality of Clause 57 is controlled by new management attributes introduced in Clause 30 of [802.3ah]. The OAM functions are not specific to any particular Ethernet physical layer, and can be generically applied to any Ethernet interface of [802.3-2002]. An Ethernet OAM protocol data unit is a valid Ethernet frame with a destination MAC address equal to the reserved MAC address for Slow Protocols (See 43B of [802.3ah]), a lengthOrType field equal to the reserved type for Slow Protocols, and a Slow Protocols subtype equal to that of the subtype reserved for Ethernet OAM. OAMPDU is used throughout this document as an abbreviation for Ethernet OAM protocol data unit. The following reference is used throughout this MIB module: [802.3ah] refers to: IEEE Std 802.3ah-2004: 'Draft amendment to - Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications - Media Access Control Parameters, Physical Layers and Management Parameters for subscriber access networks', October 2004. [802.3-2002] refers to: IEEE Std 802.3-2002: 'Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications - Media Access Control Parameters, Physical Layers and Management Parameters for subscriber access networks', March 2002. [802.3-2005] refers to: IEEE Std 802.3-2005: 'Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 3: Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications - Media Access Control Parameters, Physical Layers and Management Parameters for subscriber access networks', December 2005. [802-2001] refers to: 'IEEE Standard for LAN/MAN (Local Area Network/Metropolitan Area Network): Overview and Architecture', IEEE 802, June 2001. Copyright (c) The IETF Trust (2007). This version of this MIB module is part of RFC 4878; See the RFC itself for full legal notices. ")
dot3OamNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 158, 0))
dot3OamObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 158, 1))
dot3OamConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 158, 2))
class EightOTwoOui(TextualConvention, OctetString):
    description = '24-bit Organizationally Unique Identifier. Information on OUIs can be found in IEEE 802-2001 [802-2001], Clause 9.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

dot3OamTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 1), )
if mibBuilder.loadTexts: dot3OamTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamTable.setDescription('This table contains the primary controls and status for the OAM capabilities of an Ethernet-like interface. There will be one row in this table for each Ethernet-like interface in the system that supports the OAM functions defined in [802.3ah]. ')
dot3OamEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3OamEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamEntry.setDescription('An entry in the table that contains information on the Ethernet OAM function for a single Ethernet like interface. Entries in the table are created automatically for each interface supporting Ethernet OAM. The status of the row entry can be determined from dot3OamOperStatus. A dot3OamEntry is indexed in the dot3OamTable by the ifIndex object of the Interfaces MIB. ')
dot3OamAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamAdminState.setReference('[802.3ah], 30.3.6.1.2')
if mibBuilder.loadTexts: dot3OamAdminState.setStatus('current')
if mibBuilder.loadTexts: dot3OamAdminState.setDescription('This object is used to provision the default administrative OAM mode for this interface. This object represents the desired state of OAM for this interface. The dot3OamAdminState always starts in the disabled(2) state until an explicit management action or configuration information retained by the system causes a transition to the enabled(1) state. When enabled(1), Ethernet OAM will attempt to operate over this interface. ')
dot3OamOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disabled", 1), ("linkFault", 2), ("passiveWait", 3), ("activeSendLocal", 4), ("sendLocalAndRemote", 5), ("sendLocalAndRemoteOk", 6), ("oamPeeringLocallyRejected", 7), ("oamPeeringRemotelyRejected", 8), ("operational", 9), ("nonOperHalfDuplex", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamOperStatus.setReference('[802.3ah], 30.3.6.1.4, 30.3.6.1.10, 30.3.6.1.11')
if mibBuilder.loadTexts: dot3OamOperStatus.setStatus('current')
if mibBuilder.loadTexts: dot3OamOperStatus.setDescription('At initialization and failure conditions, two OAM entities on the same full-duplex Ethernet link begin a discovery phase to determine what OAM capabilities may be used on that link. The progress of this initialization is controlled by the OA sublayer. This value is always disabled(1) if OAM is disabled on this interface via the dot3OamAdminState. If the link has detected a fault and is transmitting OAMPDUs with a link fault indication, the value is linkFault(2). Also, if the interface is not operational (ifOperStatus is not up(1)), linkFault(2) is returned. Note that the object ifOperStatus may not be up(1) as a result of link failure or administrative action (ifAdminState being down(2) or testing(3)). The passiveWait(3) state is returned only by OAM entities in passive mode (dot3OamMode) and reflects the state in which the OAM entity is waiting to see if the peer device is OA capable. The activeSendLocal(4) value is used by active mode devices (dot3OamMode) and reflects the OAM entity actively trying to discover whether the peer has OAM capability but has not yet made that determination. The state sendLocalAndRemote(5) reflects that the local OA entity has discovered the peer but has not yet accepted or rejected the configuration of the peer. The local device can, for whatever reason, decide that the peer device is unacceptable and decline OAM peering. If the local OAM entity rejects the peer OAM entity, the state becomes oamPeeringLocallyRejected(7). If the OAM peering is allowed by the local device, the state moves to sendLocalAndRemoteOk(6). Note that both the sendLocalAndRemote(5) and oamPeeringLocallyRejected(7) states fall within the state SEND_LOCAL_REMOTE of the Discovery state diagram [802.3ah, Figure 57-5], with the difference being whether the local OAM client has actively rejected the peering or has just not indicated any decision yet. Whether a peering decision has been made is indicated via the local flags field in the OAMPDU (reflected in the aOAMLocalFlagsField of 30.3.6.1.10). If the remote OAM entity rejects the peering, the state becomes oamPeeringRemotelyRejected(8). Note that both the sendLocalAndRemoteOk(6) and oamPeeringRemotelyRejected(8) states fall within the state SEND_LOCAL_REMOTE_OK of the Discovery state diagram [802.3ah, Figure 57-5], with the difference being whether the remote OAM client has rejected the peering or has just not yet decided. This is indicated via the remote flags field in the OAMPDU (reflected in the aOAMRemoteFlagsField of 30.3.6.1.11). When the local OAM entity learns that both it and the remote OAM entity have accepted the peering, the state moves to operational(9) corresponding to the SEND_ANY state of the Discovery state diagram [802.3ah, Figure 57-5]. Since Ethernet OAM functions are not designed to work completely over half-duplex interfaces, the value nonOperHalfDuplex(10) is returned whenever Ethernet OAM is enabled (dot3OamAdminState is enabled(1)), but the interface is in half-duplex operation. ')
dot3OamMode = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamMode.setReference('[802.3ah], 30.3.6.1.3')
if mibBuilder.loadTexts: dot3OamMode.setStatus('current')
if mibBuilder.loadTexts: dot3OamMode.setDescription("This object configures the mode of OAM operation for this Ethernet-like interface. OAM on Ethernet interfaces may be in 'active' mode or 'passive' mode. These two modes differ in that active mode provides additional capabilities to initiate monitoring activities with the remote OAM peer entity, while passive mode generally waits for the peer to initiate OA actions with it. As an example, an active OAM entity can put the remote OAM entity in a loopback state, where a passive OA entity cannot. The default value of dot3OamMode is dependent on the type of system on which this Ethernet-like interface resides. The default value should be 'active(2)' unless it is known that this system should take on a subservient role to the other device connected over this interface. Changing this value results in incrementing the configuration revision field of locally generated OAMPDUs (30.3.6.1.12) and potentially re-doing the OAM discovery process if the dot3OamOperStatus was already operational(9). ")
dot3OamMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamMaxOamPduSize.setReference('[802.3ah], 30.3.6.1.8')
if mibBuilder.loadTexts: dot3OamMaxOamPduSize.setStatus('current')
if mibBuilder.loadTexts: dot3OamMaxOamPduSize.setDescription('The largest OAMPDU that the OAM entity supports. OA entities exchange maximum OAMPDU sizes and negotiate to use the smaller of the two maximum OAMPDU sizes between the peers. This value is determined by the local implementation. ')
dot3OamConfigRevision = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamConfigRevision.setReference('[802.3ah], 30.3.6.1.12')
if mibBuilder.loadTexts: dot3OamConfigRevision.setStatus('current')
if mibBuilder.loadTexts: dot3OamConfigRevision.setDescription('The configuration revision of the OAM entity as reflected in the latest OAMPDU sent by the OAM entity. The config revision is used by OAM entities to indicate that configuration changes have occurred, which might require the peer OAM entity to re-evaluate whether OAM peering is allowed. ')
dot3OamFunctionsSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 1, 1, 6), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamFunctionsSupported.setReference('[802.3ah], 30.3.6.1.6')
if mibBuilder.loadTexts: dot3OamFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: dot3OamFunctionsSupported.setDescription("The OAM functions supported on this Ethernet-like interface. OAM consists of separate functional sets beyond the basic discovery process that is always required. These functional groups can be supported independently by any implementation. These values are communicated to the peer via the local configuration field of Information OAMPDUs. Setting 'unidirectionalSupport(0)' indicates that the OA entity supports the transmission of OAMPDUs on links that are operating in unidirectional mode (traffic flowing in one direction only). Setting 'loopbackSupport(1)' indicates that the OAM entity can initiate and respond to loopback commands. Setting 'eventSupport(2)' indicates that the OAM entity can send and receive Event Notification OAMPDUs. Setting 'variableSupport(3)' indicates that the OAM entity can send and receive Variable Request and Response OAMPDUs. ")
dot3OamPeerTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 2), )
if mibBuilder.loadTexts: dot3OamPeerTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerTable.setDescription('This table contains information about the OAM peer for a particular Ethernet-like interface. OAM entities communicate with a single OAM peer entity on Ethernet links on which OA is enabled and operating properly. There is one entry in this table for each entry in the dot3OamTable for which information on the peer OAM entity is available. ')
dot3OamPeerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3OamPeerEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerEntry.setDescription('An entry in the table containing information on the peer OA entity for a single Ethernet-like interface. Note that there is at most one OAM peer for each Ethernet-like interface. Entries are automatically created when information about the OAM peer entity becomes available, and automatically deleted when the OAM peer entity is no longer in communication. Peer information is not available when dot3OamOperStatus is disabled(1), linkFault(2), passiveWait(3), activeSendLocal(4), or nonOperHalfDuplex(10). ')
dot3OamPeerMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerMacAddress.setReference('[802.3ah], 30.3.6.1.5.')
if mibBuilder.loadTexts: dot3OamPeerMacAddress.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerMacAddress.setDescription('The MAC address of the peer OAM entity. The MAC address is derived from the most recently received OAMPDU. ')
dot3OamPeerVendorOui = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 2), EightOTwoOui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerVendorOui.setReference('[802.3ah], 30.3.6.1.16.')
if mibBuilder.loadTexts: dot3OamPeerVendorOui.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerVendorOui.setDescription('The OUI of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The OUI can be used to identify the vendor of the remote OA entity. This value is initialized to three octets of zero before any Local Information TLV is received. ')
dot3OamPeerVendorInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerVendorInfo.setReference('[802.3ah], 30.3.6.1.17.')
if mibBuilder.loadTexts: dot3OamPeerVendorInfo.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerVendorInfo.setDescription('The Vendor Info of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The semantics of the Vendor Information field is proprietary and specific to the vendor (identified by the dot3OamPeerVendorOui). This information could, for example, be used to identify a specific product or product family. This value is initialized to zero before any Local Information TLV is received. ')
dot3OamPeerMode = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passive", 1), ("active", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerMode.setReference('[802.3ah], 30.3.6.1.7.')
if mibBuilder.loadTexts: dot3OamPeerMode.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerMode.setDescription('The mode of the OAM peer as reflected in the latest Information OAMPDU received with a Local Information TLV. The mode of the peer can be determined from the Configuration field in the Local Information TLV of the last Information OAMPDU received from the peer. The value is unknown(3) whenever no Local Information TLV has been received. The values of active(2) and passive(1) are returned when a Local Information TLV has been received indicating that the peer is in active or passive mode, respectively. ')
dot3OamPeerMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 1518), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerMaxOamPduSize.setReference('[802.3ah], 30.3.6.1.9.')
if mibBuilder.loadTexts: dot3OamPeerMaxOamPduSize.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerMaxOamPduSize.setDescription("The maximum size of OAMPDU supported by the peer as reflected in the latest Information OAMPDU received with a Local Information TLV. Ethernet OAM on this interface must not use OAMPDUs that exceed this size. The maximum OAMPDU size can be determined from the PDU Configuration field of the Local Information TLV of the last Information OAMPDU received from the peer. A value of zero is returned if no Local Information TLV has been received. Otherwise, the value of the OAM peer's maximum OAMPDU size is returned in this value. ")
dot3OamPeerConfigRevision = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerConfigRevision.setReference('[802.3ah], 30.3.6.1.13.')
if mibBuilder.loadTexts: dot3OamPeerConfigRevision.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerConfigRevision.setDescription('The configuration revision of the OAM peer as reflected in the latest OAMPDU. This attribute is changed by the peer whenever it has a local configuration change for Ethernet OA on this interface. The configuration revision can be determined from the Revision field of the Local Information TLV of the most recently received Information OAMPDU with a Local Information TLV. A value of zero is returned if no Local Information TLV has been received. ')
dot3OamPeerFunctionsSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 2, 1, 7), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamPeerFunctionsSupported.setReference('[802.3ah], REFERENCE 30.3.6.1.7.')
if mibBuilder.loadTexts: dot3OamPeerFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerFunctionsSupported.setDescription('The OAM functions supported on this Ethernet-like interface. OAM consists of separate functionality sets above the basic discovery process. This value indicates the capabilities of the peer OAM entity with respect to these functions. This value is initialized so all bits are clear. If unidirectionalSupport(0) is set, then the peer OAM entity supports sending OAM frames on Ethernet interfaces when the receive path is known to be inoperable. If loopbackSupport(1) is set, then the peer OAM entity can send and receive OAM loopback commands. If eventSupport(2) is set, then the peer OAM entity can send and receive event OAMPDUs to signal various error conditions. If variableSupport(3) is set, then the peer OAM entity can send and receive variable requests to monitor the attribute value as described in Clause 57 of [802.3ah]. The capabilities of the OAM peer can be determined from the configuration field of the Local Information TLV of the most recently received Information OAMPDU with a Local Information TLV. All zeros are returned if no Local Information TLV has yet been received. ')
dot3OamLoopbackTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 3), )
if mibBuilder.loadTexts: dot3OamLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackTable.setDescription("This table contains controls for the loopback state of the local link as well as indicates the status of the loopback function. There is one entry in this table for each entry in dot3OamTable that supports loopback functionality (where dot3OamFunctionsSupported includes the loopbackSupport bit set). Loopback can be used to place the remote OAM entity in a state where every received frame (except OAMPDUs) is echoed back over the same interface on which they were received. In this state, at the remote entity, 'normal' traffic is disabled as only the looped back frames are transmitted on the interface. Loopback is thus an intrusive operation that prohibits normal data flow and should be used accordingly. ")
dot3OamLoopbackEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3OamLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackEntry.setDescription('An entry in the table, containing information on the loopback status for a single Ethernet-like interface. Entries in the table are automatically created whenever the local OAM entity supports loopback capabilities. The loopback status on the interface can be determined from the dot3OamLoopbackStatus object. ')
dot3OamLoopbackStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLoopback", 1), ("initiatingLoopback", 2), ("remoteLoopback", 3), ("terminatingLoopback", 4), ("localLoopback", 5), ("unknown", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamLoopbackStatus.setReference('[802.3ah], REFERENCE 57.2.11, 30.3.61.14, 30.3.6.1.15')
if mibBuilder.loadTexts: dot3OamLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackStatus.setDescription("The loopback status of the OAM entity. This status is determined by a combination of the local parser and multiplexer states, the remote parser and multiplexer states, as well as by the actions of the local OAM client. When operating in normal mode with no loopback in progress, the status reads noLoopback(1). The values initiatingLoopback(2) and terminatingLoopback(4) can be read or written. The other values can only be read - they can never be written. Writing initiatingLoopback causes the local OAM entity to start the loopback process with its peer. This value can only be written when the status is noLoopback(1). Writing the value initiatingLoopback(2) in any other state has no effect. When in remoteLoopback(3), writing terminatingLoopback(4) causes the local OAM entity to initiate the termination of the loopback state. Writing terminatingLoopack(4) in any other state has no effect. If the OAM client initiates a loopback and has sent a Loopback OAMPDU and is waiting for a response, where the local parser and multiplexer states are DISCARD (see [802.3ah, 57.2.11.1]), the status is 'initiatingLoopback'. In this case, the local OAM entity has yet to receive any acknowledgment that the remote OAM entity has received its loopback command request. If the local OAM client knows that the remote OAM entity is in loopback mode (via the remote state information as described in [802.3ah, 57.2.11.1, 30.3.6.1.15]), the status is remoteLoopback(3). If the local OAM client is in the process of terminating the remote loopback [802.3ah, 57.2.11.3, 30.3.6.1.14] with its local multiplexer and parser states in DISCARD, the status is terminatingLoopback(4). If the remote OAM client has put the local OAM entity in loopback mode as indicated by its local parser state, the status is localLoopback(5). The unknown(6) status indicates that the parser and multiplexer combination is unexpected. This status may be returned if the OAM loopback is in a transition state but should not persist. The values of this attribute correspond to the following values of the local and remote parser and multiplexer states. value LclPrsr LclMux RmtPrsr RmtMux noLoopback FWD FWD FWD FWD initLoopback DISCARD DISCARD FWD FWD rmtLoopback DISCARD FWD LPBK DISCARD tmtngLoopback DISCARD DISCARD LPBK DISCARD lclLoopback LPBK DISCARD DISCARD FWD unknown *** any other combination *** ")
dot3OamLoopbackIgnoreRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ignore", 1), ("process", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamLoopbackIgnoreRx.setReference('[802.3ah], REFERENCE 57.2.11, 30.3.61.14, 30.3.6.1.15')
if mibBuilder.loadTexts: dot3OamLoopbackIgnoreRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackIgnoreRx.setDescription('Since OAM loopback is a disruptive operation (user traffic does not pass), this attribute provides a mechanism to provide controls over whether received OAM loopback commands are processed or ignored. When the value is ignore(1), received loopback commands are ignored. When the value is process(2), OAM loopback commands are processed. The default value is to ignore loopback commands (ignore(1)). ')
dot3OamStatsTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 4), )
if mibBuilder.loadTexts: dot3OamStatsTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamStatsTable.setDescription('This table contains statistics for the OAM function on a particular Ethernet-like interface. There is an entry in the table for every entry in the dot3OamTable. The counters in this table are defined as 32-bit entries to match the counter size as defined in [802.3ah]. Given that the OA protocol is a slow protocol, the counters increment at a slow rate. ')
dot3OamStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3OamStatsEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamStatsEntry.setDescription('An entry in the table containing statistics information on the Ethernet OAM function for a single Ethernet-like interface. Entries are automatically created for every entry in the dot3OamTable. Counters are maintained across transitions in dot3OamOperStatus. ')
dot3OamInformationTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 1), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamInformationTx.setReference('[802.3ah], 30.3.6.1.20.')
if mibBuilder.loadTexts: dot3OamInformationTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamInformationTx.setDescription('A count of the number of Information OAMPDUs transmitted on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamInformationRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamInformationRx.setReference('[802.3ah], 30.3.6.1.21.')
if mibBuilder.loadTexts: dot3OamInformationRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamInformationRx.setDescription('A count of the number of Information OAMPDUs received on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamUniqueEventNotificationTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationTx.setReference('[802.3ah], 30.3.6.1.22.')
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationTx.setDescription('A count of the number of unique Event OAMPDUs transmitted on this interface. Event Notifications may be sent in duplicate to increase the probability of successfully being received, given the possibility that a frame may be lost in transit. Duplicate Event Notification transmissions are counted by dot3OamDuplicateEventNotificationTx. A unique Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is distinct from the previously transmitted Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamUniqueEventNotificationRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationRx.setReference('[802.3ah], 30.3.6.1.24.')
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamUniqueEventNotificationRx.setDescription('A count of the number of unique Event OAMPDUs received on this interface. Event Notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possibility that a frame may be lost in transit. Duplicate Event Notification receptions are counted by dot3OamDuplicateEventNotificationRx. A unique Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is distinct from the previously received Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamDuplicateEventNotificationTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationTx.setReference('[802.3ah], 30.3.6.1.23.')
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationTx.setDescription('A count of the number of duplicate Event OAMPDUs transmitted on this interface. Event Notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possibility that a frame may be lost in transit. A duplicate Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is identical to the previously transmitted Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamDuplicateEventNotificationRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationRx.setReference('[802.3ah], 30.3.6.1.25.')
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamDuplicateEventNotificationRx.setDescription('A count of the number of duplicate Event OAMPDUs received on this interface. Event Notification OAMPDUs may be sent in duplicate to increase the probability of successfully being received, given the possibility that a frame may be lost in transit. A duplicate Event Notification OAMPDU is indicated as an Event Notification OAMPDU with a Sequence Number field that is identical to the previously received Event Notification OAMPDU Sequence Number. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamLoopbackControlTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamLoopbackControlTx.setReference('[802.3ah], 30.3.6.1.26.')
if mibBuilder.loadTexts: dot3OamLoopbackControlTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackControlTx.setDescription('A count of the number of Loopback Control OAMPDUs transmitted on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamLoopbackControlRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamLoopbackControlRx.setReference('[802.3ah], 30.3.6.1.27.')
if mibBuilder.loadTexts: dot3OamLoopbackControlRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackControlRx.setDescription('A count of the number of Loopback Control OAMPDUs received on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamVariableRequestTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 9), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamVariableRequestTx.setReference('[802.3ah], 30.3.6.1.28.')
if mibBuilder.loadTexts: dot3OamVariableRequestTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamVariableRequestTx.setDescription('A count of the number of Variable Request OAMPDUs transmitted on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamVariableRequestRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamVariableRequestRx.setReference('[802.3ah], 30.3.6.1.29.')
if mibBuilder.loadTexts: dot3OamVariableRequestRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamVariableRequestRx.setDescription('A count of the number of Variable Request OAMPDUs received on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamVariableResponseTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 11), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamVariableResponseTx.setReference('[802.3ah], 30.3.6.1.30.')
if mibBuilder.loadTexts: dot3OamVariableResponseTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamVariableResponseTx.setDescription('A count of the number of Variable Response OAMPDUs transmitted on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamVariableResponseRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 12), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamVariableResponseRx.setReference('[802.3ah], 30.3.6.1.31.')
if mibBuilder.loadTexts: dot3OamVariableResponseRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamVariableResponseRx.setDescription('A count of the number of Variable Response OAMPDUs received on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamOrgSpecificTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 13), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamOrgSpecificTx.setReference('[802.3ah], 30.3.6.1.32.')
if mibBuilder.loadTexts: dot3OamOrgSpecificTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamOrgSpecificTx.setDescription('A count of the number of Organization Specific OAMPDUs transmitted on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamOrgSpecificRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 14), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamOrgSpecificRx.setReference('[802.3ah], 30.3.6.1.33.')
if mibBuilder.loadTexts: dot3OamOrgSpecificRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamOrgSpecificRx.setDescription('A count of the number of Organization Specific OAMPDUs received on this interface. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamUnsupportedCodesTx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 15), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamUnsupportedCodesTx.setReference('[802.3ah], 30.3.6.1.18.')
if mibBuilder.loadTexts: dot3OamUnsupportedCodesTx.setStatus('current')
if mibBuilder.loadTexts: dot3OamUnsupportedCodesTx.setDescription('A count of the number of OAMPDUs transmitted on this interface with an unsupported op-code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamUnsupportedCodesRx = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 16), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamUnsupportedCodesRx.setReference('[802.3ah], 30.3.6.1.19.')
if mibBuilder.loadTexts: dot3OamUnsupportedCodesRx.setStatus('current')
if mibBuilder.loadTexts: dot3OamUnsupportedCodesRx.setDescription('A count of the number of OAMPDUs received on this interface with an unsupported op-code. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ')
dot3OamFramesLostDueToOam = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 4, 1, 17), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamFramesLostDueToOam.setReference('[802.3ah], 30.3.6.1.46.')
if mibBuilder.loadTexts: dot3OamFramesLostDueToOam.setStatus('current')
if mibBuilder.loadTexts: dot3OamFramesLostDueToOam.setDescription("A count of the number of frames that were dropped by the OA multiplexer. Since the OAM multiplexer has multiple inputs and a single output, there may be cases where frames are dropped due to transmit resource contention. This counter is incremented whenever a frame is dropped by the OAM layer. Note that any Ethernet frame, not just OAMPDUs, may be dropped by the OAM layer. This can occur when an OAMPDU takes precedence over a 'normal' frame resulting in the 'normal' frame being dropped. When this counter is incremented, no other counters in this MIB are incremented. Discontinuities of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of the ifCounterDiscontinuityTime. ")
dot3OamEventConfigTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 5), )
if mibBuilder.loadTexts: dot3OamEventConfigTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventConfigTable.setDescription('Ethernet OAM includes the ability to generate and receive Event Notification OAMPDUs to indicate various link problems. This table contains the mechanisms to enable Event Notifications and configure the thresholds to generate the standard Ethernet OAM events. There is one entry in the table for every entry in dot3OamTable that supports OAM events (where dot3OamFunctionsSupported includes the eventSupport bit set). The values in the table are maintained across changes to dot3OamOperStatus. The standard threshold crossing events are: - Errored Symbol Period Event. Generated when the number of symbol errors exceeds a threshold within a given window defined by a number of symbols (for example, 1,000 symbols out of 1,000,000 had errors). - Errored Frame Period Event. Generated when the number of frame errors exceeds a threshold within a given window defined by a number of frames (for example, 10 frames out of 1000 had errors). - Errored Frame Event. Generated when the number of frame errors exceeds a threshold within a given window defined by a period of time (for example, 10 frames in 1 second had errors). - Errored Frame Seconds Summary Event. Generated when the number of errored frame seconds exceeds a threshold within a given time period (for example, 10 errored frame seconds within the last 100 seconds). An errored frame second is defined as a 1 second interval which had >0 frame errors. There are other events (dying gasp, critical events) that are not threshold crossing events but which can be enabled/disabled via this table. ')
dot3OamEventConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot3OamEventConfigEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventConfigEntry.setDescription('Entries are automatically created and deleted from this table, and exist whenever the OAM entity supports Ethernet OA events (as indicated by the eventSupport bit in dot3OamFunctionsSuppported). Values in the table are maintained across changes to the value of dot3OamOperStatus. Event configuration controls when the local management entity sends Event Notification OAMPDUs to its OAM peer, and when certain event flags are set or cleared in OAMPDUs. ')
dot3OamErrSymPeriodWindowHi = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 1), Unsigned32()).setUnits('2^32 symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowHi.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowHi.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowHi.setDescription('The two objects dot3OamErrSymPeriodWindowHi and dot3OamErrSymPeriodLo together form an unsigned 64-bit integer representing the number of symbols over which this threshold event is defined. This is defined as dot3OamErrSymPeriodWindow = ((2^32)*dot3OamErrSymPeriodWindowHi) + dot3OamErrSymPeriodWindowLo If dot3OamErrSymPeriodThreshold symbol errors occur within a window of dot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating that the threshold has been crossed in this window. The default value for dot3OamErrSymPeriodWindow is the number of symbols in one second for the underlying physical layer. ')
dot3OamErrSymPeriodWindowLo = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 2), Unsigned32()).setUnits('symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowLo.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowLo.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymPeriodWindowLo.setDescription('The two objects dot3OamErrSymPeriodWindowHi and dot3OamErrSymPeriodWindowLo together form an unsigned 64-bit integer representing the number of symbols over which this threshold event is defined. This is defined as dot3OamErrSymPeriodWindow = ((2^32)*dot3OamErrSymPeriodWindowHi) + dot3OamErrSymPeriodWindowLo If dot3OamErrSymPeriodThreshold symbol errors occur within a window of dot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating that the threshold has been crossed in this window. The default value for dot3OamErrSymPeriodWindow is the number of symbols in one second for the underlying physical layer. ')
dot3OamErrSymPeriodThresholdHi = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 3), Unsigned32()).setUnits('2^32 symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdHi.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdHi.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdHi.setDescription('The two objects dot3OamErrSymPeriodThresholdHi and dot3OamErrSymPeriodThresholdLo together form an unsigned 64-bit integer representing the number of symbol errors that must occur within a given window to cause this event. This is defined as dot3OamErrSymPeriodThreshold = ((2^32) * dot3OamErrSymPeriodThresholdHi) + dot3OamErrSymPeriodThresholdLo If dot3OamErrSymPeriodThreshold symbol errors occur within a window of dot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating that the threshold has been crossed in this window. The default value for dot3OamErrSymPeriodThreshold is one symbol errors. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm. ')
dot3OamErrSymPeriodThresholdLo = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 4), Unsigned32()).setUnits('symbols').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdLo.setReference('[802.3ah], 30.3.6.1.34')
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdLo.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymPeriodThresholdLo.setDescription('The two objects dot3OamErrSymPeriodThresholdHi and dot3OamErrSymPeriodThresholdLo together form an unsigned 64-bit integer representing the number of symbol errors that must occur within a given window to cause this event. This is defined as dot3OamErrSymPeriodThreshold = ((2^32) * dot3OamErrSymPeriodThresholdHi) + dot3OamErrSymPeriodThresholdLo If dot3OamErrSymPeriodThreshold symbol errors occur within a window of dot3OamErrSymPeriodWindow symbols, an Event Notification OAMPDU should be generated with an Errored Symbol Period Event TLV indicating that the threshold has been crossed in this window. The default value for dot3OamErrSymPeriodThreshold is one symbol error. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm. ')
dot3OamErrSymPeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrSymPeriodEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymPeriodEvNotifEnable.setDescription('If true, the OAM entity should send an Event Notification OAMPDU when an Errored Symbol Period Event occurs. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ')
dot3OamErrFramePeriodWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 6), Unsigned32()).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFramePeriodWindow.setReference('[802.3ah], 30.3.6.1.38')
if mibBuilder.loadTexts: dot3OamErrFramePeriodWindow.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFramePeriodWindow.setDescription('The number of frames over which the threshold is defined. The default value of the window is the number of minimum size Ethernet frames that can be received over the physical layer in one second. If dot3OamErrFramePeriodThreshold frame errors occur within a window of dot3OamErrFramePeriodWindow frames, an Event Notification OAMPDU should be generated with an Errored Frame Period Event TLV indicating that the threshold has been crossed in this window. ')
dot3OamErrFramePeriodThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 7), Unsigned32()).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFramePeriodThreshold.setReference('[802.3ah], 30.3.6.1.38')
if mibBuilder.loadTexts: dot3OamErrFramePeriodThreshold.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFramePeriodThreshold.setDescription('The number of frame errors that must occur for this event to be triggered. The default value is one frame error. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm. If dot3OamErrFramePeriodThreshold frame errors occur within a window of dot3OamErrFramePeriodWindow frames, an Event Notification OAMPDU should be generated with an Errored Frame Period Event TLV indicating that the threshold has been crossed in this window. ')
dot3OamErrFramePeriodEvNotifEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFramePeriodEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFramePeriodEvNotifEnable.setDescription('If true, the OAM entity should send an Event Notification OAMPDU when an Errored Frame Period Event occurs. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ')
dot3OamErrFrameWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 9), Unsigned32().clone(10)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameWindow.setReference('[802.3ah], 30.3.6.1.36')
if mibBuilder.loadTexts: dot3OamErrFrameWindow.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameWindow.setDescription('The amount of time (in 100ms increments) over which the threshold is defined. The default value is 10 (1 second). If dot3OamErrFrameThreshold frame errors occur within a window of dot3OamErrFrameWindow seconds (measured in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Event TLV indicating that the threshold has been crossed in this window. ')
dot3OamErrFrameThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 10), Unsigned32().clone(1)).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameThreshold.setReference('[802.3ah], 30.3.6.1.36')
if mibBuilder.loadTexts: dot3OamErrFrameThreshold.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameThreshold.setDescription('The number of frame errors that must occur for this event to be triggered. The default value is one frame error. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm. If dot3OamErrFrameThreshold frame errors occur within a window of dot3OamErrFrameWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Event TLV indicating the threshold has been crossed in this window. ')
dot3OamErrFrameEvNotifEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameEvNotifEnable.setDescription('If true, the OAM entity should send an Event Notification OAMPDU when an Errored Frame Event occurs. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ')
dot3OamErrFrameSecsSummaryWindow = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 9000)).clone(100)).setUnits('tenths of a second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryWindow.setReference('[802.3ah], 30.3.6.1.40')
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryWindow.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryWindow.setDescription('The amount of time (in 100 ms intervals) over which the threshold is defined. The default value is 100 (10 seconds). If dot3OamErrFrameSecsSummaryThreshold frame errors occur within a window of dot3OamErrFrameSecsSummaryWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Seconds Summary Event TLV indicating that the threshold has been crossed in this window. ')
dot3OamErrFrameSecsSummaryThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900)).clone(1)).setUnits('errored frame seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryThreshold.setReference('[802.3ah], 30.3.6.1.40')
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryThreshold.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryThreshold.setDescription('The number of errored frame seconds that must occur for this event to be triggered. The default value is one errored frame second. If the threshold value is zero, then an Event Notification OAMPDU is sent periodically (at the end of every window). This can be used as an asynchronous notification to the peer OAM entity of the statistics related to this threshold crossing alarm. If dot3OamErrFrameSecsSummaryThreshold frame errors occur within a window of dot3OamErrFrameSecsSummaryWindow (in tenths of seconds), an Event Notification OAMPDU should be generated with an Errored Frame Seconds Summary Event TLV indicating that the threshold has been crossed in this window. ')
dot3OamErrFrameSecsEvNotifEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamErrFrameSecsEvNotifEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameSecsEvNotifEnable.setDescription('If true, the local OAM entity should send an Event Notification OAMPDU when an Errored Frame Seconds Event occurs. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ')
dot3OamDyingGaspEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 15), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamDyingGaspEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamDyingGaspEnable.setDescription("If true, the local OAM entity should attempt to indicate a dying gasp via the OAMPDU flags field to its peer OAM entity when a dying gasp event occurs. The exact definition of a dying gasp event is implementation dependent. If the system does not support dying gasp capability, setting this object has no effect, and reading the object should always result in 'false'. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ")
dot3OamCriticalEventEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 5, 1, 16), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot3OamCriticalEventEnable.setStatus('current')
if mibBuilder.loadTexts: dot3OamCriticalEventEnable.setDescription("If true, the local OAM entity should attempt to indicate a critical event via the OAMPDU flags to its peer OAM entity when a critical event occurs. The exact definition of a critical event is implementation dependent. If the system does not support critical event capability, setting this object has no effect, and reading the object should always result in 'false'. By default, this object should have the value true for Ethernet-like interfaces that support OAM. If the OAM layer does not support Event Notifications (as indicated via the dot3OamFunctionsSupported attribute), this value is ignored. ")
dot3OamEventLogTable = MibTable((1, 3, 6, 1, 2, 1, 158, 1, 6), )
if mibBuilder.loadTexts: dot3OamEventLogTable.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogTable.setDescription("This table records a history of the events that have occurred at the Ethernet OAM level. These events can include locally detected events, which may result in locally generated OAMPDUs, and remotely detected events, which are detected by the OAM peer entity and signaled to the local entity via Ethernet OAM. Ethernet OAM events can be signaled by Event Notification OAMPDUs or by the flags field in any OAMPDU. This table contains both threshold crossing events and non-threshold crossing events. The parameters for the threshold window, threshold value, and actual value (dot3OamEventLogWindowXX, dot3OamEventLogThresholdXX, dot3OamEventLogValue) are only applicable to threshold crossing events, and are returned as all F's (2^32 - 1) for non-threshold crossing events. Entries in the table are automatically created when such events are detected. The size of the table is implementation dependent. When the table reaches its maximum size, older entries are automatically deleted to make room for newer entries. ")
dot3OamEventLogEntry = MibTableRow((1, 3, 6, 1, 2, 1, 158, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOT3-OAM-MIB", "dot3OamEventLogIndex"))
if mibBuilder.loadTexts: dot3OamEventLogEntry.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogEntry.setDescription('An entry in the dot3OamEventLogTable. Entries are automatically created whenever Ethernet OAM events occur at the local OAM entity, and when Event Notification OAMPDUs are received at the local OAM entity (indicating that events have occurred at the peer OAM entity). The size of the table is implementation dependent, but when the table becomes full, older events are automatically deleted to make room for newer events. The table index dot3OamEventLogIndex increments for each new entry, and when the maximum value is reached, the value restarts at zero. ')
dot3OamEventLogIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: dot3OamEventLogIndex.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogIndex.setDescription('An arbitrary integer for identifying individual events within the event log. ')
dot3OamEventLogTimestamp = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogTimestamp.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogTimestamp.setDescription('The value of sysUpTime at the time of the logged event. For locally generated events, the time of the event can be accurately retrieved from sysUpTime. For remotely generated events, the time of the event is indicated by the reception of the Event Notification OAMPDU indicating that the event occurred on the peer. A system may attempt to adjust the timestamp value to more accurately reflect the time of the event at the peer OAM entity by using other information, such as that found in the timestamp found of the Event Notification TLVs, which provides an indication of the relative time between events at the peer entity. ')
dot3OamEventLogOui = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 3), EightOTwoOui()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogOui.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogOui.setDescription('The OUI of the entity defining the object type. All IEEE 802.3 defined events (as appearing in [802.3ah] except for the Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of 0x0180C2. Organizations defining their own Event Notification TLVs include their OUI in the Event Notification TLV that gets reflected here. ')
dot3OamEventLogType = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogType.setReference('[802.3ah], 30.3.6.1.10 and 57.5.3.')
if mibBuilder.loadTexts: dot3OamEventLogType.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogType.setDescription("The type of event that generated this entry in the event log. When the OUI is the IEEE 802.3 OUI of 0x0180C2, the following event types are defined: erroredSymbolEvent(1), erroredFramePeriodEvent(2), erroredFrameEvent(3), erroredFrameSecondsEvent(4), linkFault(256), dyingGaspEvent(257), criticalLinkEvent(258) The first four are considered threshold crossing events, as they are generated when a metric exceeds a given value within a specified window. The other three are not threshold crossing events. When the OUI is not 71874 (0x0180C2 in hex), then some other organization has defined the event space. If event subtyping is known to the implementation, it may be reflected here. Otherwise, this value should return all F's (2^32 - 1). ")
dot3OamEventLogLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogLocation.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogLocation.setDescription('Whether this event occurred locally (local(1)), or was received from the OAM peer via Ethernet OAM (remote(2)). ')
dot3OamEventLogWindowHi = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogWindowHi.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogWindowHi.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogWindowHi.setDescription("If the event represents a threshold crossing event, the two objects dot3OamEventWindowHi and dot3OamEventWindowLo, form an unsigned 64-bit integer yielding the window over which the value was measured for the threshold crossing event (for example, 5, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: dot3OamEventLogWindow = ((2^32) * dot3OamEventLogWindowHi) + dot3OamEventLogWindowLo Otherwise, this value is returned as all F's (2^32 - 1) and adds no useful information. ")
dot3OamEventLogWindowLo = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogWindowLo.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogWindowLo.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogWindowLo.setDescription("If the event represents a threshold crossing event, the two objects dot3OamEventWindowHi and dot3OamEventWindowLo form an unsigned 64-bit integer yielding the window over which the value was measured for the threshold crossing event (for example, 5, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: dot3OamEventLogWindow = ((2^32) * dot3OamEventLogWindowHi) + dot3OamEventLogWindowLo Otherwise, this value is returned as all F's (2^32 - 1) and adds no useful information. ")
dot3OamEventLogThresholdHi = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogThresholdHi.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogThresholdHi.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogThresholdHi.setDescription("If the event represents a threshold crossing event, the two objects dot3OamEventThresholdHi and dot3OamEventThresholdLo form an unsigned 64-bit integer yielding the value that was crossed for the threshold crossing event (for example, 10, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: dot3OamEventLogThreshold = ((2^32) * dot3OamEventLogThresholdHi) + dot3OamEventLogThresholdLo Otherwise, this value is returned as all F's (2^32 -1) and adds no useful information. ")
dot3OamEventLogThresholdLo = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogThresholdLo.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogThresholdLo.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogThresholdLo.setDescription("If the event represents a threshold crossing event, the two objects dot3OamEventThresholdHi and dot3OamEventThresholdLo form an unsigned 64-bit integer yielding the value that was crossed for the threshold crossing event (for example, 10, when 11 occurrences happened in 5 seconds while the threshold was 10). The two objects are combined as: dot3OamEventLogThreshold = ((2^32) * dot3OamEventLogThresholdHi) + dot3OamEventLogThresholdLo Otherwise, this value is returned as all F's (2^32 - 1) and adds no useful information. ")
dot3OamEventLogValue = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 10), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogValue.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogValue.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogValue.setDescription("If the event represents a threshold crossing event, this value indicates the value of the parameter within the given window that generated this event (for example, 11, when 11 occurrences happened in 5 seconds while the threshold was 10). Otherwise, this value is returned as all F's (2^64 - 1) and adds no useful information. ")
dot3OamEventLogRunningTotal = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 11), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogRunningTotal.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogRunningTotal.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogRunningTotal.setDescription('Each Event Notification TLV contains a running total of the number of times an event has occurred, as well as the number of times an Event Notification for the event has been transmitted. For non-threshold crossing events, the number of events (dot3OamLogRunningTotal) and the number of resultant Event Notifications (dot3OamLogEventTotal) should be identical. For threshold crossing events, since multiple occurrences may be required to cross the threshold, these values are likely different. This value represents the total number of times this event has happened since the last reset (for example, 3253, when 3253 symbol errors have occurred since the last reset, which has resulted in 51 symbol error threshold crossing events since the last reset). ')
dot3OamEventLogEventTotal = MibTableColumn((1, 3, 6, 1, 2, 1, 158, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot3OamEventLogEventTotal.setReference('[802.3ah], 30.3.6.1.37 and 57.5.3.2.')
if mibBuilder.loadTexts: dot3OamEventLogEventTotal.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogEventTotal.setDescription('Each Event Notification TLV contains a running total of the number of times an event has occurred, as well as the number of times an Event Notification for the event has been transmitted. For non-threshold crossing events, the number of events (dot3OamLogRunningTotal) and the number of resultant Event Notifications (dot3OamLogEventTotal) should be identical. For threshold crossing events, since multiple occurrences may be required to cross the threshold, these values are likely different. This value represents the total number of times one or more of these occurrences have resulted in an Event Notification (for example, 51 when 3253 symbol errors have occurred since the last reset, which has resulted in 51 symbol error threshold crossing events since the last reset). ')
dot3OamThresholdEvent = NotificationType((1, 3, 6, 1, 2, 1, 158, 0, 1)).setObjects(("DOT3-OAM-MIB", "dot3OamEventLogTimestamp"), ("DOT3-OAM-MIB", "dot3OamEventLogOui"), ("DOT3-OAM-MIB", "dot3OamEventLogType"), ("DOT3-OAM-MIB", "dot3OamEventLogLocation"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowHi"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowLo"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdHi"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdLo"), ("DOT3-OAM-MIB", "dot3OamEventLogValue"), ("DOT3-OAM-MIB", "dot3OamEventLogRunningTotal"), ("DOT3-OAM-MIB", "dot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: dot3OamThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: dot3OamThresholdEvent.setDescription('A dot3OamThresholdEvent notification is sent when a local or remote threshold crossing event is detected. A local threshold crossing event is detected by the local entity, while a remote threshold crossing event is detected by the reception of an Ethernet OAM Event Notification OAMPDU that indicates a threshold event. This notification should not be sent more than once per second. The OAM entity can be derived from extracting the ifIndex from the variable bindings. The objects in the notification correspond to the values in a row instance in the dot3OamEventLogTable. The management entity should periodically check dot3OamEventLogTable to detect any missed events.')
dot3OamNonThresholdEvent = NotificationType((1, 3, 6, 1, 2, 1, 158, 0, 2)).setObjects(("DOT3-OAM-MIB", "dot3OamEventLogTimestamp"), ("DOT3-OAM-MIB", "dot3OamEventLogOui"), ("DOT3-OAM-MIB", "dot3OamEventLogType"), ("DOT3-OAM-MIB", "dot3OamEventLogLocation"), ("DOT3-OAM-MIB", "dot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: dot3OamNonThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: dot3OamNonThresholdEvent.setDescription('A dot3OamNonThresholdEvent notification is sent when a local or remote non-threshold crossing event is detected. A local event is detected by the local entity, while a remote event is detected by the reception of an Ethernet OAM Event Notification OAMPDU that indicates a non-threshold crossing event. This notification should not be sent more than once per second. The OAM entity can be derived from extracting the ifIndex from the variable bindings. The objects in the notification correspond to the values in a row instance of the dot3OamEventLogTable. The management entity should periodically check dot3OamEventLogTable to detect any missed events.')
dot3OamGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 158, 2, 1))
dot3OamCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 158, 2, 2))
dot3OamCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 158, 2, 2, 1)).setObjects(("DOT3-OAM-MIB", "dot3OamControlGroup"), ("DOT3-OAM-MIB", "dot3OamPeerGroup"), ("DOT3-OAM-MIB", "dot3OamStatsBaseGroup"), ("DOT3-OAM-MIB", "dot3OamLoopbackGroup"), ("DOT3-OAM-MIB", "dot3OamErrSymbolPeriodEventGroup"), ("DOT3-OAM-MIB", "dot3OamErrFramePeriodEventGroup"), ("DOT3-OAM-MIB", "dot3OamErrFrameEventGroup"), ("DOT3-OAM-MIB", "dot3OamErrFrameSecsSummaryEventGroup"), ("DOT3-OAM-MIB", "dot3OamFlagEventGroup"), ("DOT3-OAM-MIB", "dot3OamEventLogGroup"), ("DOT3-OAM-MIB", "dot3OamNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamCompliance = dot3OamCompliance.setStatus('current')
if mibBuilder.loadTexts: dot3OamCompliance.setDescription('The compliance statement for managed entities supporting OAM on Ethernet-like interfaces. ')
dot3OamControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 1)).setObjects(("DOT3-OAM-MIB", "dot3OamAdminState"), ("DOT3-OAM-MIB", "dot3OamOperStatus"), ("DOT3-OAM-MIB", "dot3OamMode"), ("DOT3-OAM-MIB", "dot3OamMaxOamPduSize"), ("DOT3-OAM-MIB", "dot3OamConfigRevision"), ("DOT3-OAM-MIB", "dot3OamFunctionsSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamControlGroup = dot3OamControlGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamControlGroup.setDescription('A collection of objects providing the abilities, configuration, and status of an Ethernet OAM entity. ')
dot3OamPeerGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 2)).setObjects(("DOT3-OAM-MIB", "dot3OamPeerMacAddress"), ("DOT3-OAM-MIB", "dot3OamPeerVendorOui"), ("DOT3-OAM-MIB", "dot3OamPeerVendorInfo"), ("DOT3-OAM-MIB", "dot3OamPeerMode"), ("DOT3-OAM-MIB", "dot3OamPeerFunctionsSupported"), ("DOT3-OAM-MIB", "dot3OamPeerMaxOamPduSize"), ("DOT3-OAM-MIB", "dot3OamPeerConfigRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamPeerGroup = dot3OamPeerGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamPeerGroup.setDescription('A collection of objects providing the abilities, configuration, and status of a peer Ethernet OAM entity. ')
dot3OamStatsBaseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 3)).setObjects(("DOT3-OAM-MIB", "dot3OamInformationTx"), ("DOT3-OAM-MIB", "dot3OamInformationRx"), ("DOT3-OAM-MIB", "dot3OamUniqueEventNotificationTx"), ("DOT3-OAM-MIB", "dot3OamUniqueEventNotificationRx"), ("DOT3-OAM-MIB", "dot3OamDuplicateEventNotificationTx"), ("DOT3-OAM-MIB", "dot3OamDuplicateEventNotificationRx"), ("DOT3-OAM-MIB", "dot3OamLoopbackControlTx"), ("DOT3-OAM-MIB", "dot3OamLoopbackControlRx"), ("DOT3-OAM-MIB", "dot3OamVariableRequestTx"), ("DOT3-OAM-MIB", "dot3OamVariableRequestRx"), ("DOT3-OAM-MIB", "dot3OamVariableResponseTx"), ("DOT3-OAM-MIB", "dot3OamVariableResponseRx"), ("DOT3-OAM-MIB", "dot3OamOrgSpecificTx"), ("DOT3-OAM-MIB", "dot3OamOrgSpecificRx"), ("DOT3-OAM-MIB", "dot3OamUnsupportedCodesTx"), ("DOT3-OAM-MIB", "dot3OamUnsupportedCodesRx"), ("DOT3-OAM-MIB", "dot3OamFramesLostDueToOam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamStatsBaseGroup = dot3OamStatsBaseGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamStatsBaseGroup.setDescription('A collection of objects providing the statistics for the number of various transmit and receive events for OAM on an Ethernet-like interface. Note that all of these counters must be supported even if the related function (as described in dot3OamFunctionsSupported) is not supported. ')
dot3OamLoopbackGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 4)).setObjects(("DOT3-OAM-MIB", "dot3OamLoopbackStatus"), ("DOT3-OAM-MIB", "dot3OamLoopbackIgnoreRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamLoopbackGroup = dot3OamLoopbackGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamLoopbackGroup.setDescription('A collection of objects for controlling the OAM remote loopback function. ')
dot3OamErrSymbolPeriodEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 5)).setObjects(("DOT3-OAM-MIB", "dot3OamErrSymPeriodWindowHi"), ("DOT3-OAM-MIB", "dot3OamErrSymPeriodWindowLo"), ("DOT3-OAM-MIB", "dot3OamErrSymPeriodThresholdHi"), ("DOT3-OAM-MIB", "dot3OamErrSymPeriodThresholdLo"), ("DOT3-OAM-MIB", "dot3OamErrSymPeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamErrSymbolPeriodEventGroup = dot3OamErrSymbolPeriodEventGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrSymbolPeriodEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Symbol Period Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
dot3OamErrFramePeriodEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 6)).setObjects(("DOT3-OAM-MIB", "dot3OamErrFramePeriodWindow"), ("DOT3-OAM-MIB", "dot3OamErrFramePeriodThreshold"), ("DOT3-OAM-MIB", "dot3OamErrFramePeriodEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamErrFramePeriodEventGroup = dot3OamErrFramePeriodEventGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFramePeriodEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Period Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
dot3OamErrFrameEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 7)).setObjects(("DOT3-OAM-MIB", "dot3OamErrFrameWindow"), ("DOT3-OAM-MIB", "dot3OamErrFrameThreshold"), ("DOT3-OAM-MIB", "dot3OamErrFrameEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamErrFrameEventGroup = dot3OamErrFrameEventGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
dot3OamErrFrameSecsSummaryEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 8)).setObjects(("DOT3-OAM-MIB", "dot3OamErrFrameSecsSummaryWindow"), ("DOT3-OAM-MIB", "dot3OamErrFrameSecsSummaryThreshold"), ("DOT3-OAM-MIB", "dot3OamErrFrameSecsEvNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamErrFrameSecsSummaryEventGroup = dot3OamErrFrameSecsSummaryEventGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamErrFrameSecsSummaryEventGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Seconds Summary Event. Each [802.3ah] defined Event Notification TLV has its own conformance group because each event can be implemented independently of any other. ')
dot3OamFlagEventGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 9)).setObjects(("DOT3-OAM-MIB", "dot3OamDyingGaspEnable"), ("DOT3-OAM-MIB", "dot3OamCriticalEventEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamFlagEventGroup = dot3OamFlagEventGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamFlagEventGroup.setDescription('A collection of objects for configuring the sending OAMPDUs with the critical event flag or dying gasp flag enabled. ')
dot3OamEventLogGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 10)).setObjects(("DOT3-OAM-MIB", "dot3OamEventLogTimestamp"), ("DOT3-OAM-MIB", "dot3OamEventLogOui"), ("DOT3-OAM-MIB", "dot3OamEventLogType"), ("DOT3-OAM-MIB", "dot3OamEventLogLocation"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowHi"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowLo"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdHi"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdLo"), ("DOT3-OAM-MIB", "dot3OamEventLogValue"), ("DOT3-OAM-MIB", "dot3OamEventLogRunningTotal"), ("DOT3-OAM-MIB", "dot3OamEventLogEventTotal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamEventLogGroup = dot3OamEventLogGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamEventLogGroup.setDescription('A collection of objects for configuring the thresholds for an Errored Frame Seconds Summary Event and maintaining the event information. ')
dot3OamNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 158, 2, 1, 11)).setObjects(("DOT3-OAM-MIB", "dot3OamThresholdEvent"), ("DOT3-OAM-MIB", "dot3OamNonThresholdEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot3OamNotificationGroup = dot3OamNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: dot3OamNotificationGroup.setDescription('A collection of notifications used by Ethernet OAM to signal to a management entity that local or remote events have occurred on a specified Ethernet link. ')
mibBuilder.exportSymbols("DOT3-OAM-MIB", dot3OamConformance=dot3OamConformance, dot3OamEventLogTimestamp=dot3OamEventLogTimestamp, dot3OamEventLogTable=dot3OamEventLogTable, dot3OamErrSymPeriodThresholdLo=dot3OamErrSymPeriodThresholdLo, dot3OamFunctionsSupported=dot3OamFunctionsSupported, dot3OamDuplicateEventNotificationRx=dot3OamDuplicateEventNotificationRx, dot3OamInformationRx=dot3OamInformationRx, dot3OamEventLogWindowHi=dot3OamEventLogWindowHi, dot3OamLoopbackControlTx=dot3OamLoopbackControlTx, dot3OamGroups=dot3OamGroups, dot3OamErrSymPeriodEvNotifEnable=dot3OamErrSymPeriodEvNotifEnable, dot3OamPeerVendorInfo=dot3OamPeerVendorInfo, dot3OamOrgSpecificTx=dot3OamOrgSpecificTx, EightOTwoOui=EightOTwoOui, dot3OamErrFramePeriodThreshold=dot3OamErrFramePeriodThreshold, dot3OamUniqueEventNotificationRx=dot3OamUniqueEventNotificationRx, dot3OamEntry=dot3OamEntry, dot3OamEventLogValue=dot3OamEventLogValue, dot3OamObjects=dot3OamObjects, PYSNMP_MODULE_ID=dot3OamMIB, dot3OamLoopbackTable=dot3OamLoopbackTable, dot3OamThresholdEvent=dot3OamThresholdEvent, dot3OamNonThresholdEvent=dot3OamNonThresholdEvent, dot3OamErrFrameWindow=dot3OamErrFrameWindow, dot3OamVariableRequestRx=dot3OamVariableRequestRx, dot3OamEventLogLocation=dot3OamEventLogLocation, dot3OamEventLogType=dot3OamEventLogType, dot3OamErrFramePeriodEventGroup=dot3OamErrFramePeriodEventGroup, dot3OamErrFrameEventGroup=dot3OamErrFrameEventGroup, dot3OamLoopbackEntry=dot3OamLoopbackEntry, dot3OamPeerConfigRevision=dot3OamPeerConfigRevision, dot3OamCompliance=dot3OamCompliance, dot3OamPeerMacAddress=dot3OamPeerMacAddress, dot3OamErrSymPeriodThresholdHi=dot3OamErrSymPeriodThresholdHi, dot3OamUniqueEventNotificationTx=dot3OamUniqueEventNotificationTx, dot3OamLoopbackStatus=dot3OamLoopbackStatus, dot3OamErrFrameSecsSummaryThreshold=dot3OamErrFrameSecsSummaryThreshold, dot3OamOperStatus=dot3OamOperStatus, dot3OamEventLogWindowLo=dot3OamEventLogWindowLo, dot3OamOrgSpecificRx=dot3OamOrgSpecificRx, dot3OamCriticalEventEnable=dot3OamCriticalEventEnable, dot3OamPeerVendorOui=dot3OamPeerVendorOui, dot3OamErrSymPeriodWindowHi=dot3OamErrSymPeriodWindowHi, dot3OamLoopbackControlRx=dot3OamLoopbackControlRx, dot3OamUnsupportedCodesRx=dot3OamUnsupportedCodesRx, dot3OamPeerGroup=dot3OamPeerGroup, dot3OamStatsEntry=dot3OamStatsEntry, dot3OamTable=dot3OamTable, dot3OamPeerTable=dot3OamPeerTable, dot3OamControlGroup=dot3OamControlGroup, dot3OamErrFrameSecsSummaryEventGroup=dot3OamErrFrameSecsSummaryEventGroup, dot3OamEventConfigTable=dot3OamEventConfigTable, dot3OamDyingGaspEnable=dot3OamDyingGaspEnable, dot3OamErrSymPeriodWindowLo=dot3OamErrSymPeriodWindowLo, dot3OamErrFrameSecsSummaryWindow=dot3OamErrFrameSecsSummaryWindow, dot3OamPeerMaxOamPduSize=dot3OamPeerMaxOamPduSize, dot3OamVariableResponseRx=dot3OamVariableResponseRx, dot3OamEventLogOui=dot3OamEventLogOui, dot3OamNotifications=dot3OamNotifications, dot3OamInformationTx=dot3OamInformationTx, dot3OamStatsTable=dot3OamStatsTable, dot3OamPeerEntry=dot3OamPeerEntry, dot3OamVariableRequestTx=dot3OamVariableRequestTx, dot3OamEventLogThresholdHi=dot3OamEventLogThresholdHi, dot3OamMIB=dot3OamMIB, dot3OamLoopbackIgnoreRx=dot3OamLoopbackIgnoreRx, dot3OamLoopbackGroup=dot3OamLoopbackGroup, dot3OamFlagEventGroup=dot3OamFlagEventGroup, dot3OamStatsBaseGroup=dot3OamStatsBaseGroup, dot3OamMaxOamPduSize=dot3OamMaxOamPduSize, dot3OamEventConfigEntry=dot3OamEventConfigEntry, dot3OamErrFrameEvNotifEnable=dot3OamErrFrameEvNotifEnable, dot3OamNotificationGroup=dot3OamNotificationGroup, dot3OamAdminState=dot3OamAdminState, dot3OamErrFrameSecsEvNotifEnable=dot3OamErrFrameSecsEvNotifEnable, dot3OamErrFramePeriodWindow=dot3OamErrFramePeriodWindow, dot3OamEventLogThresholdLo=dot3OamEventLogThresholdLo, dot3OamEventLogEventTotal=dot3OamEventLogEventTotal, dot3OamEventLogEntry=dot3OamEventLogEntry, dot3OamEventLogRunningTotal=dot3OamEventLogRunningTotal, dot3OamPeerMode=dot3OamPeerMode, dot3OamErrFramePeriodEvNotifEnable=dot3OamErrFramePeriodEvNotifEnable, dot3OamErrFrameThreshold=dot3OamErrFrameThreshold, dot3OamConfigRevision=dot3OamConfigRevision, dot3OamUnsupportedCodesTx=dot3OamUnsupportedCodesTx, dot3OamEventLogGroup=dot3OamEventLogGroup, dot3OamVariableResponseTx=dot3OamVariableResponseTx, dot3OamFramesLostDueToOam=dot3OamFramesLostDueToOam, dot3OamEventLogIndex=dot3OamEventLogIndex, dot3OamMode=dot3OamMode, dot3OamDuplicateEventNotificationTx=dot3OamDuplicateEventNotificationTx, dot3OamErrSymbolPeriodEventGroup=dot3OamErrSymbolPeriodEventGroup, dot3OamPeerFunctionsSupported=dot3OamPeerFunctionsSupported, dot3OamCompliances=dot3OamCompliances)
