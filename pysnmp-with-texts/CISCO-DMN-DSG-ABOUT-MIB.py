#
# PySNMP MIB module CISCO-DMN-DSG-ABOUT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-ABOUT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, NotificationType, Bits, Counter64, Counter32, MibIdentifier, Unsigned32, ObjectIdentity, Gauge32, iso, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "NotificationType", "Bits", "Counter64", "Counter32", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Gauge32", "iso", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoDSGAbout = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7))
ciscoDSGAbout.setRevisions(('2010-08-03 06:00', '2010-03-22 05:00', '2009-12-20 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGAbout.setRevisionsDescriptions(('V01.00.03 2010-08-03 Description of Item firmwareVersion in Firmware table is modified.', 'V01.00.02 2010-03-22 The Syntax of Unsigned32 MIB objects whose range is within the range of Integer32, is updated to Integer32.', 'V01.00.00 2009-12-20 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGAbout.setLastUpdated('201008030600Z')
if mibBuilder.loadTexts: ciscoDSGAbout.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGAbout.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGAbout.setDescription('Cisco About MIB.')
aboutTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2))
boardTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1), )
if mibBuilder.loadTexts: boardTable.setStatus('current')
if mibBuilder.loadTexts: boardTable.setDescription('Board information Table.')
boardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-MIB", "boardIdx"))
if mibBuilder.loadTexts: boardEntry.setStatus('current')
if mibBuilder.loadTexts: boardEntry.setDescription('Entry for Board information Table.')
boardIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: boardIdx.setStatus('current')
if mibBuilder.loadTexts: boardIdx.setDescription('Index of Board Table.')
boardPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardPosition.setStatus('current')
if mibBuilder.loadTexts: boardPosition.setDescription('Board Position.')
boardID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardID.setStatus('current')
if mibBuilder.loadTexts: boardID.setDescription('Board ID(PCB ID).')
boardRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardRev.setStatus('current')
if mibBuilder.loadTexts: boardRev.setDescription('Board Revision ( PCB revision ).')
boardOptionBits = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardOptionBits.setStatus('current')
if mibBuilder.loadTexts: boardOptionBits.setDescription('Board Option Bits.')
boardSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: boardSerialNum.setStatus('current')
if mibBuilder.loadTexts: boardSerialNum.setDescription('Device Serial Number.')
swTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3), )
if mibBuilder.loadTexts: swTable.setStatus('current')
if mibBuilder.loadTexts: swTable.setDescription('Software Table.')
swEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-MIB", "swIdx"))
if mibBuilder.loadTexts: swEntry.setStatus('current')
if mibBuilder.loadTexts: swEntry.setDescription('Entry for Software Table.')
swIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: swIdx.setStatus('current')
if mibBuilder.loadTexts: swIdx.setDescription('Software Table Index.')
swBoardIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBoardIdx.setStatus('current')
if mibBuilder.loadTexts: swBoardIdx.setDescription('Board Index.')
swID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swID.setStatus('current')
if mibBuilder.loadTexts: swID.setDescription('Software Index.')
swFileIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swFileIdx.setStatus('current')
if mibBuilder.loadTexts: swFileIdx.setDescription('Software File Index.')
swVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVersion.setStatus('current')
if mibBuilder.loadTexts: swVersion.setDescription('Software Version.')
swValidationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 35))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swValidationCode.setStatus('current')
if mibBuilder.loadTexts: swValidationCode.setDescription('Software Validation Code.')
swStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("ready", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swStatus.setStatus('current')
if mibBuilder.loadTexts: swStatus.setDescription('Status of the Software Application.')
swCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("select", 2), ("erase", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swCtrl.setStatus('current')
if mibBuilder.loadTexts: swCtrl.setDescription('Command used to Select or Erase Software Applications.')
firmwareTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4), )
if mibBuilder.loadTexts: firmwareTable.setStatus('current')
if mibBuilder.loadTexts: firmwareTable.setDescription('Firmware Table.')
firmwareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-MIB", "firmwareIdx"))
if mibBuilder.loadTexts: firmwareEntry.setStatus('current')
if mibBuilder.loadTexts: firmwareEntry.setDescription('Entry for Firmware Table.')
firmwareIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: firmwareIdx.setStatus('current')
if mibBuilder.loadTexts: firmwareIdx.setDescription('Index of Firmware Table.')
firmwareBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareBoardID.setStatus('current')
if mibBuilder.loadTexts: firmwareBoardID.setDescription('Firware ID of the board.')
firmwareID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareID.setStatus('current')
if mibBuilder.loadTexts: firmwareID.setDescription('Firware ID.')
firmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersion.setStatus('current')
if mibBuilder.loadTexts: firmwareVersion.setDescription('Firware Version - Gives Primary Processor Boot Code Version if firmwareID is BOOT. Gives Front Panel PIC Microcontroller Version if firmwareID is PIC. Gives Secondary Processor Boot Code version if firwareID is BOOT2. Gives Cue PIC Microcontroller Version if firmwareID is CUEPIC. Gives Safe CPLD Version if firmwareID is CPLD1. Gives Running CPLD Verison if firmwareID is CPLD2.')
firmwareValidationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 7, 2, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 49))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareValidationCode.setStatus('current')
if mibBuilder.loadTexts: firmwareValidationCode.setDescription('Firware Validation Code.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-ABOUT-MIB", firmwareTable=firmwareTable, firmwareID=firmwareID, swCtrl=swCtrl, swID=swID, boardRev=boardRev, swBoardIdx=swBoardIdx, firmwareEntry=firmwareEntry, ciscoDSGAbout=ciscoDSGAbout, swEntry=swEntry, firmwareVersion=firmwareVersion, swStatus=swStatus, swIdx=swIdx, boardEntry=boardEntry, boardTable=boardTable, swTable=swTable, swVersion=swVersion, firmwareBoardID=firmwareBoardID, boardOptionBits=boardOptionBits, aboutTable=aboutTable, firmwareIdx=firmwareIdx, boardIdx=boardIdx, swValidationCode=swValidationCode, PYSNMP_MODULE_ID=ciscoDSGAbout, firmwareValidationCode=firmwareValidationCode, boardSerialNum=boardSerialNum, boardID=boardID, swFileIdx=swFileIdx, boardPosition=boardPosition)
