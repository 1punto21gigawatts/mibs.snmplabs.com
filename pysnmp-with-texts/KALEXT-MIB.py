#
# PySNMP MIB module KALEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/KALEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:04:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
kalExt, = mibBuilder.importSymbols("APENT-MIB", "kalExt")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Gauge32, TimeTicks, IpAddress, NotificationType, MibIdentifier, Counter64, ObjectIdentity, Bits, ModuleIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "TimeTicks", "IpAddress", "NotificationType", "MibIdentifier", "Counter64", "ObjectIdentity", "Bits", "ModuleIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
apKalExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 46, 1))
if mibBuilder.loadTexts: apKalExtMib.setLastUpdated('9710092000Z')
if mibBuilder.loadTexts: apKalExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: apKalExtMib.setContactInfo(' Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: apKalExtMib.setDescription('The MIB module used to describe the ArrowPoint Communications Keepalives')
apKalTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2), )
if mibBuilder.loadTexts: apKalTable.setStatus('current')
if mibBuilder.loadTexts: apKalTable.setDescription('A list of Keepalives')
apKalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1), ).setIndexNames((0, "KALEXT-MIB", "apKalName"))
if mibBuilder.loadTexts: apKalEntry.setStatus('current')
if mibBuilder.loadTexts: apKalEntry.setDescription('A group of information uniquely identifying a Keepalive. One entry exists for each Keepalive')
apKalName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalName.setStatus('current')
if mibBuilder.loadTexts: apKalName.setDescription('The name of the Keepalive')
apKalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalStatus.setStatus('current')
if mibBuilder.loadTexts: apKalStatus.setDescription('Status entry for this row ')
apKalDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalDescription.setStatus('current')
if mibBuilder.loadTexts: apKalDescription.setDescription('The description of the Keepalive')
apKalEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalEnable.setStatus('current')
if mibBuilder.loadTexts: apKalEnable.setDescription('The state of the keepalive, either enable or disabled')
apKalIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalIPAddress.setStatus('current')
if mibBuilder.loadTexts: apKalIPAddress.setDescription('The IP Address the of the content providing service.')
apKalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalPort.setStatus('current')
if mibBuilder.loadTexts: apKalPort.setDescription('The Keepalive IP Port to use')
apKalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("icmp", 1), ("http", 2), ("ftp", 3), ("tcp", 4), ("script", 5))).clone('icmp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalType.setStatus('current')
if mibBuilder.loadTexts: apKalType.setDescription('The Keepalive detection method.')
apKalFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalFrequency.setStatus('current')
if mibBuilder.loadTexts: apKalFrequency.setDescription('The Keepalive frequency of doing keepalive probes in units of seconds.')
apKalMaxFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalMaxFailure.setStatus('current')
if mibBuilder.loadTexts: apKalMaxFailure.setDescription('The Keepalive maximum number of failures before the service is transitioned to failed state.')
apKalRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalRetryPeriod.setStatus('current')
if mibBuilder.loadTexts: apKalRetryPeriod.setDescription('The Keepalive frequency of probes to the service after it has been transitioned to failed state.')
apKalUri = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalUri.setStatus('current')
if mibBuilder.loadTexts: apKalUri.setDescription('The URI which be checked during an HTTP keepalive.')
apKalMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("head", 1), ("get", 2), ("post", 3))).clone('head')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalMethod.setStatus('current')
if mibBuilder.loadTexts: apKalMethod.setDescription('The HTTP method used for the HTTP keepalive type. The methods operate in the following manner: HEAD -- HTTP HEAD generated. 200 response code required GET -- HTTP GET generated. MD5 Hash of entify body performed. First successful GET (200 response code) becomes reference hash. Deviation from rererence hash result, or non-200 response code, results in service state transition. POST -- Same as GET with substituation of POST method.')
apKalPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("non-persistent", 0), ("persistent", 1))).clone('persistent')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalPersistence.setStatus('current')
if mibBuilder.loadTexts: apKalPersistence.setDescription('This object controls whether the Keepalive will be attempted over a persistent connection. Persistent connections are supported through HTTP 1.1, and HTTP 1.0 with Connection-KeepAlive')
apKalState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("suspended", 1), ("down", 2), ("alive", 4), ("dying", 5))).clone('suspended')).setMaxAccess("readonly")
if mibBuilder.loadTexts: apKalState.setStatus('current')
if mibBuilder.loadTexts: apKalState.setDescription('The current keepalive state')
apKalHash = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalHash.setStatus('current')
if mibBuilder.loadTexts: apKalHash.setDescription('This object contains the MD5 hash which will be compared for HTTP keepalives which use the GET method.')
apKalFtpRecordName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalFtpRecordName.setStatus('current')
if mibBuilder.loadTexts: apKalFtpRecordName.setDescription('This object contains the ftp-record used in conjunction with ftp keepalives')
apKalScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalScriptName.setStatus('current')
if mibBuilder.loadTexts: apKalScriptName.setDescription('This name represents the script that will be used in conjunction with the keepalive type script. The script will be played everytime the keepalive is issued.')
apKalScriptArgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalScriptArgs.setStatus('current')
if mibBuilder.loadTexts: apKalScriptArgs.setDescription('This name represents the script arguments that will be used in conjunction with the keepalive type script.')
apKalScriptLog = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 46, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKalScriptLog.setStatus('current')
if mibBuilder.loadTexts: apKalScriptLog.setDescription('This name represents the script log that can be used to capture output from a keepalive script.')
mibBuilder.exportSymbols("KALEXT-MIB", apKalScriptName=apKalScriptName, apKalPersistence=apKalPersistence, apKalIPAddress=apKalIPAddress, apKalPort=apKalPort, apKalType=apKalType, apKalRetryPeriod=apKalRetryPeriod, apKalMethod=apKalMethod, apKalExtMib=apKalExtMib, apKalEnable=apKalEnable, apKalScriptLog=apKalScriptLog, apKalName=apKalName, apKalStatus=apKalStatus, apKalEntry=apKalEntry, apKalDescription=apKalDescription, apKalUri=apKalUri, PYSNMP_MODULE_ID=apKalExtMib, apKalState=apKalState, apKalTable=apKalTable, apKalFrequency=apKalFrequency, apKalMaxFailure=apKalMaxFailure, apKalScriptArgs=apKalScriptArgs, apKalFtpRecordName=apKalFtpRecordName, apKalHash=apKalHash)
