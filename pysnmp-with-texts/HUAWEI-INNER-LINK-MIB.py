#
# PySNMP MIB module HUAWEI-INNER-LINK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-INNER-LINK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:45:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, TimeTicks, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, Counter64, Gauge32, Unsigned32, ModuleIdentity, iso, ObjectIdentity, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "Counter64", "Gauge32", "Unsigned32", "ModuleIdentity", "iso", "ObjectIdentity", "IpAddress", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwInnerLinkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158))
if mibBuilder.loadTexts: hwInnerLinkMIB.setLastUpdated('200710241430Z')
if mibBuilder.loadTexts: hwInnerLinkMIB.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwInnerLinkMIB.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwInnerLinkMIB.setDescription('The private mib file includes the general information of inner links between frames in cluster system.')
hwInnerLinkMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1))
hwInnerLinkMIBObjPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 1))
hwInnerLinkLeftPortPhysicalIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwInnerLinkLeftPortPhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkLeftPortPhysicalIndex.setDescription('To describe physical entity index of left port of the physical link which is part of the corresponding inner logical link.')
hwInnerLinkLeftPortPhysicalName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 1, 2), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwInnerLinkLeftPortPhysicalName.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkLeftPortPhysicalName.setDescription('To describe physical entity name of left port of the physical link which is part of the corresponding inner logical link.')
hwInnerLinkRightPortPhysicalIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 1, 3), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwInnerLinkRightPortPhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkRightPortPhysicalIndex.setDescription('To describe physical entity index of right port of the physical link which is part of the corresponding inner logical link.')
hwInnerLinkRightPortPhysicalName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 1, 4), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwInnerLinkRightPortPhysicalName.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkRightPortPhysicalName.setDescription('To describe physical entity name of right port of the physical link which is part of the corresponding inner logical link.')
hwInnerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2), )
if mibBuilder.loadTexts: hwInnerLinkTable.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkTable.setDescription('This table contains one row per inner link entity. Each inner link is composed of all physical links of the same kind between two frames. It describes the status of the inner link between frames in NE5000E Cluster system.')
hwInnerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1), ).setIndexNames((0, "HUAWEI-INNER-LINK-MIB", "hwInnerLinkIndex"))
if mibBuilder.loadTexts: hwInnerLinkEntry.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkEntry.setDescription('Information about a particular inner link entity. Each entry provides left and right vitural port and status of the link to NMS to manage the links.')
hwInnerLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwInnerLinkIndex.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkIndex.setDescription('The index for this entry.It comprises of left frame ID, right frame ID and type of the logical link.')
hwInnerLinkLeftFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("centralChassis", 2), ("lineChassis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkLeftFrameType.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkLeftFrameType.setDescription("Frame type of the link's left point. A value of centralChassis means the central frame in the system which can manage the system. A value of lineChassis means a frame managed by the central frame.")
hwInnerLinkLeftFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkLeftFrameId.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkLeftFrameId.setDescription("Frame ID of the link's left point.")
hwInnerLinkLeftPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkLeftPortId.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkLeftPortId.setDescription("Port ID of the link's left virtual port.")
hwInnerLinkRightFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("centralChassis", 2), ("lineChassis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkRightFrameType.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkRightFrameType.setDescription("Frame type of the link's right point.")
hwInnerLinkRightFrameId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkRightFrameId.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkRightFrameId.setDescription("Frame ID of the link's right point.")
hwInnerLinkRightPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkRightPortId.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkRightPortId.setDescription("Port ID of the link's right virtual port.")
hwInnerLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("controlChannel", 2), ("monitorChannel", 3), ("forwardChannel", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkType.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkType.setDescription("Inner link type between the frames. A value of controlChannel means a kind of logical link through which control messages're transferred. A value of monitorChannel means a kind of logical control link which only exists between the central chassises. A value of forwardChannel mean a kind of logical link which is used for data forwarding.")
hwInnerLinkAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notSupported", 1), ("locked", 2), ("shuttingDown", 3), ("unlocked", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwInnerLinkAdminState.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkAdminState.setDescription('The administrative state for this object, and it is possible to set the state when needed. A value of locked means the resource is administratively prohibited from use. A value of shuttingDown means that usage is administratively limited to current instances of use. A value of unlocked means the resource is not administratively prohibited from use.')
hwInnerLinkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("mostPhyChannelUp", 2), ("partPhyChannelUp", 3), ("mostPhyChannelDown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkOperState.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkOperState.setDescription("The operational state for this object. A value of mostPhyChannelUp means most of the physical links consisting of the logical link are working well. It's possible that none of the physical links is wrong. A value of partPhyChannelUp means several physical links of the logical link are broken down. A value of mostPhyChannelDown means most of the physical links of the logical link are down. It's possible that none of the physical links is ok. ")
hwInnerLinkAlarmLight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 1, 2, 1, 11), Bits().clone(namedValues=NamedValues(("notSupported", 0), ("underRepair", 1), ("critical", 2), ("major", 3), ("minor", 4), ("alarmOutstanding", 5), ("warning", 6), ("indeterminate", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwInnerLinkAlarmLight.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkAlarmLight.setDescription('The alarm status for this entity. It is decided by the alarm status of the physical links which compose the logical link. When no bits of this attribute are set, then none of the status conditions described below are present. When the value of under repair is set, the resource is currently being repaired. When the value of critical is set, one or more critical alarms are active against the resource. When the value of major is set, one or more major alarms are active against the resource. When the value of minor is set, one or more minor alarms are active against the resource. When the value of warning is set, one or more warning alarms are active against the resource. When the value of indeterminate is set, one or more alarms of indeterminate severity are active against the resource. When the value of alarm outstanding is set, one or more alarms is active against the resource. The fault may or may not be disabling.')
hwInnerLinkTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 2))
hwInnerLinkTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 2, 1))
hwInnerLinkOnePhysicalLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 2, 1, 1)).setObjects(("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalName"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalName"))
if mibBuilder.loadTexts: hwInnerLinkOnePhysicalLinkUp.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkOnePhysicalLinkUp.setDescription('One physical link of the corrresponding inner logical link is available.')
hwInnerLinkOnePhysicalLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 2, 1, 2)).setObjects(("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalName"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalName"))
if mibBuilder.loadTexts: hwInnerLinkOnePhysicalLinkDown.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkOnePhysicalLinkDown.setDescription('One physical link of the corrresponding inner logical link is unavailable.')
hwInnerLinkConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3))
hwInnerLinkCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3, 1))
hwInnerLinkCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3, 1, 1)).setObjects(("HUAWEI-INNER-LINK-MIB", "hwInnerLinkGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwInnerLinkCompliance = hwInnerLinkCompliance.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkCompliance.setDescription('The compliance statement for systems supporting the HUAWEI Inner Link MIB.')
hwInnerLinkGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3, 2))
hwInnerLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3, 2, 1)).setObjects(("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortPhysicalName"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalIndex"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortPhysicalName"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftFrameType"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftFrameId"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkLeftPortId"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightFrameType"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightFrameId"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkRightPortId"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkType"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkAdminState"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkOperState"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkAlarmLight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwInnerLinkGroup = hwInnerLinkGroup.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkGroup.setDescription('HUAWEI Inner Link group.')
hwInnerLinkNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 158, 3, 2, 2)).setObjects(("HUAWEI-INNER-LINK-MIB", "hwInnerLinkOnePhysicalLinkUp"), ("HUAWEI-INNER-LINK-MIB", "hwInnerLinkOnePhysicalLinkDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwInnerLinkNotificationGroup = hwInnerLinkNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwInnerLinkNotificationGroup.setDescription('Inner Link Notification group.')
mibBuilder.exportSymbols("HUAWEI-INNER-LINK-MIB", hwInnerLinkType=hwInnerLinkType, hwInnerLinkAdminState=hwInnerLinkAdminState, hwInnerLinkLeftFrameId=hwInnerLinkLeftFrameId, hwInnerLinkIndex=hwInnerLinkIndex, hwInnerLinkAlarmLight=hwInnerLinkAlarmLight, hwInnerLinkOnePhysicalLinkDown=hwInnerLinkOnePhysicalLinkDown, hwInnerLinkCompliance=hwInnerLinkCompliance, hwInnerLinkGroup=hwInnerLinkGroup, PYSNMP_MODULE_ID=hwInnerLinkMIB, hwInnerLinkLeftPortPhysicalIndex=hwInnerLinkLeftPortPhysicalIndex, hwInnerLinkOperState=hwInnerLinkOperState, hwInnerLinkRightPortPhysicalName=hwInnerLinkRightPortPhysicalName, hwInnerLinkLeftPortId=hwInnerLinkLeftPortId, hwInnerLinkRightPortPhysicalIndex=hwInnerLinkRightPortPhysicalIndex, hwInnerLinkRightFrameType=hwInnerLinkRightFrameType, hwInnerLinkRightFrameId=hwInnerLinkRightFrameId, hwInnerLinkMIB=hwInnerLinkMIB, hwInnerLinkLeftPortPhysicalName=hwInnerLinkLeftPortPhysicalName, hwInnerLinkCompliances=hwInnerLinkCompliances, hwInnerLinkTable=hwInnerLinkTable, hwInnerLinkEntry=hwInnerLinkEntry, hwInnerLinkMIBObjects=hwInnerLinkMIBObjects, hwInnerLinkTraps=hwInnerLinkTraps, hwInnerLinkGroups=hwInnerLinkGroups, hwInnerLinkRightPortId=hwInnerLinkRightPortId, hwInnerLinkNotificationGroup=hwInnerLinkNotificationGroup, hwInnerLinkConformance=hwInnerLinkConformance, hwInnerLinkTrapsPrefix=hwInnerLinkTrapsPrefix, hwInnerLinkMIBObjPrefix=hwInnerLinkMIBObjPrefix, hwInnerLinkLeftFrameType=hwInnerLinkLeftFrameType, hwInnerLinkOnePhysicalLinkUp=hwInnerLinkOnePhysicalLinkUp)
