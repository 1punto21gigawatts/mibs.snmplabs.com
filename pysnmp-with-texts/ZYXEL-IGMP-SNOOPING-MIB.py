#
# PySNMP MIB module ZYXEL-IGMP-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-IGMP-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ObjectIdentity, MibIdentifier, iso, Unsigned32, ModuleIdentity, Counter64, IpAddress, Integer32, NotificationType, Counter32, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "MibIdentifier", "iso", "Unsigned32", "ModuleIdentity", "Counter64", "IpAddress", "Integer32", "NotificationType", "Counter32", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelIgmpSnooping = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31))
if mibBuilder.loadTexts: zyxelIgmpSnooping.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelIgmpSnooping.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelIgmpSnooping.setContactInfo('')
if mibBuilder.loadTexts: zyxelIgmpSnooping.setDescription('The subtree for Internet Group Management Protocol (IGMP) snooping')
zyxelIgmpSnoopingSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1))
zyxelIgmpSnoopingStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2))
zyIgmpSnoopingState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingState.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingState.setDescription('Enable/Disable IGMP snooping to forward group multicast traffic only to ports that are members of that group.')
zyIgmpSnoopingGroupHostTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupHostTimeout.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupHostTimeout.setDescription('Specify the time in seconds that elapses before the switch removes an IGMP group membership entry if it does not receive report messages from the port.')
zyIgmpSnooping8021pPriority = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnooping8021pPriority.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnooping8021pPriority.setDescription('Set the 802.1p priority of control messages for IGMP snooping (0~8, 8-No Change).')
zyIgmpSnoopingVlanMode = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingVlanMode.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingVlanMode.setDescription('Select auto to have the switch learn multicast group membership information of any VLANs automatically. Select fixed to have the switch only learn multicast group membership information of the VLAN(s) that you specify below.')
zyIgmpSnoopingMaxNumberOfVlans = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingMaxNumberOfVlans.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingMaxNumberOfVlans.setDescription('The maximum number of IGMP snooping VLAN that can be created.')
zyxelIgmpSnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 6), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingVlanTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingVlanTable.setDescription('The table contains IGMP snooping VLAN configuration.')
zyxelIgmpSnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 6, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingVlanVid"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingVlanEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingVlanEntry.setDescription('An entry contains IGMP snooping VLAN configuration.')
zyIgmpSnoopingVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingVlanVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingVlanVid.setDescription('VLAN ID which the switch is to perform IGMP snooping.')
zyIgmpSnoopingVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingVlanName.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingVlanName.setDescription('The descriptive name of the VLAN for identification purposes.')
zyIgmpSnoopingVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyIgmpSnoopingVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingVlanRowStatus.setDescription('This object allows entries to be created and deleted from the IGMP snooping VLAN table.')
zyIgmpSnoopingQuerierModeState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 7), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingQuerierModeState.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingQuerierModeState.setDescription('The mode which the switch forwards IGMP joins or leave packets to an IGMP query port.')
zyIgmpSnoopingReportProxyState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingReportProxyState.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingReportProxyState.setDescription('Enable/Disable IGMP Snooping report-proxy mode.')
zyxelIgmpSnoopingPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingPortTable.setDescription('The table contains IGMP snooping port configuration.')
zyxelIgmpSnoopingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingPortEntry.setDescription('An entry contains IGMP snooping port configuration.')
zyIgmpSnoopingPortMaxGroupLimitedState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortMaxGroupLimitedState.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortMaxGroupLimitedState.setDescription('Limit the number of multicast groups this port is allowed to join.')
zyIgmpSnoopingPortMaxOfGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortMaxOfGroups.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortMaxOfGroups.setDescription('The number of multicast groups this port is allowed to join. Once a port is registered in the specified number of multicast groups, any new IGMP join report frame(s) is dropped on this port.')
zyIgmpSnoopingPortQuerierMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("fixed", 2), ("edge", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortQuerierMode.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortQuerierMode.setDescription('The mode which the switch forwards IGMP join or leave packets to an IGMP query port.')
zyIgmpSnoopingPortThrottlingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deny", 1), ("replace", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortThrottlingAction.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortThrottlingAction.setDescription('Specify how the switch deals with the IGMP reports when the maximum number of the IGMP groups a port can join is reached.')
zyIgmpSnoopingPortLeaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("immediate", 1), ("fast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortLeaveMode.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortLeaveMode.setDescription('The mode which the switch remove this port from the multicast tree when an IGMP leave message is received on this port.')
zyIgmpSnoopingPortLeaveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortLeaveTimeout.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortLeaveTimeout.setDescription('The timeout value in milli-seconds.the switch use this timeout to update the forwarding table for the port. (200..6348800)')
zyIgmpSnoopingPortFastLeaveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 1, 9, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingPortFastLeaveTimeout.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingPortFastLeaveTimeout.setDescription('IGMP fast leave timeout value in mill-seconds. The switch uses this timeout to update the forwarding table for the port. (200..6348800)')
zyxelIgmpSnoopingRecordTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingRecordTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingRecordTable.setDescription('The table contains IGMP snooping record information.')
zyxelIgmpSnoopingRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingRecordVid"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingRecordPort"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingRecordGroup"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingRecordEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingRecordEntry.setDescription('An entry contains IGMP snooping record information.')
zyIgmpSnoopingRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingRecordIndex.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordIndex.setDescription('The index number of the multicast group.')
zyIgmpSnoopingRecordVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingRecordVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordVid.setDescription('The multicast VLAN ID.')
zyIgmpSnoopingRecordPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 3), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingRecordPort.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordPort.setDescription('The port number that belongs to the multicast group.')
zyIgmpSnoopingRecordGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: zyIgmpSnoopingRecordGroup.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordGroup.setDescription('IP multicast group address.')
zyIgmpSnoopingRecordTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingRecordTimeout.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordTimeout.setDescription('The timeout of the multicast group.')
zyIgmpSnoopingRecordUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingRecordUpTime.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingRecordUpTime.setDescription('The time of the multicast group has been up.')
zyxelIgmpSnoopingInfoVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 2), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingInfoVlanTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingInfoVlanTable.setDescription('The table contains IGMP snooping VLAN information.')
zyxelIgmpSnoopingInfoVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 2, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingInfoVlanVid"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingInfoVlanEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingInfoVlanEntry.setDescription('An entry contains IGMP snooping VLAN information.')
zyIgmpSnoopingInfoVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanVid.setDescription('The multicast VLAN ID.')
zyIgmpSnoopingInfoVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dynamic", 1), ("mvr", 2), ("static", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanType.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanType.setDescription('The type of multicast.')
zyIgmpSnoopingInfoVlanQueryPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 2, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanQueryPorts.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingInfoVlanQueryPorts.setDescription('The query port of multicast.')
zyxelIgmpSnoopingCountTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountTable.setDescription('The table contains IGMP snooping count information.')
zyxelIgmpSnoopingCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingCountIndex"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountEntry.setDescription('An entry contains IGMP snooping count information.')
zyIgmpSnoopingCountIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingCountIndex.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountIndex.setDescription('Index of IgmpSnoopingCountEntry. Value 0 means total count in whole system.')
zyIgmpSnoopingCountV2QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2LeaveRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveRx.setDescription('The counter which the switch receive leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2QueryRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryRxDrop.setDescription('The counter which the switch drop query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2LeaveRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveRxDrop.setDescription('The counter which the switch drop leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2QueryTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2QueryTx.setDescription('The counter which the switch sends query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV2LeaveTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV2LeaveTx.setDescription('The counter which the switch sends leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountV3QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountV3ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountV3QueryRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryRxDrop.setDescription('The counter which the switch drop query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountV3ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountV3QueryTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3QueryTx.setDescription('The counter which the switch sends query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountV3ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountV3ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 3.')
zyxelIgmpSnoopingCountVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountVlanTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountVlanTable.setDescription('The table contains IGMP snooping count VLAN information.')
zyxelIgmpSnoopingCountVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingCountVlanVid"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountVlanEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountVlanEntry.setDescription('An entry contains IGMP snooping count VLAN information.')
zyIgmpSnoopingCountVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanVid.setDescription('The multicast VLAN ID you want to show.')
zyIgmpSnoopingCountVlanV2QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2LeaveRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveRx.setDescription('The counter which the switch receive leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2QueryRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryRxDrop.setDescription('The counter which the switch drop query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2LeaveRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveRxDrop.setDescription('The counter which the switch drop leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2QueryTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2QueryTx.setDescription('The counter which the switch sends query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV2LeaveTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV2LeaveTx.setDescription('The counter which the switch sends leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountVlanV3QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountVlanV3ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountVlanV3QueryRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryRxDrop.setDescription('The counter which the switch drop query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountVlanV3ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountVlanV3QueryTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3QueryTx.setDescription('The counter which the switch sends query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountVlanV3ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountVlanV3ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 3.')
zyxelIgmpSnoopingCountPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountPortTable.setDescription('The table contains IGMP snooping count port information.')
zyxelIgmpSnoopingCountPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingCountPortEntry.setDescription('An entry contains IGMP snooping count port information.')
zyIgmpSnoopingCountPortV2QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2LeaveRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveRx.setDescription('The counter which the switch receive leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2LeaveRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveRxDrop.setDescription('The counter which the switch drop leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV2LeaveTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV2LeaveTx.setDescription('The counter which the switch sends leave packets of IGMP snooping version 2.')
zyIgmpSnoopingCountPortV3QueryRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3QueryRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3QueryRx.setDescription('The counter which the switch receive query packets of IGMP snooping version 3.')
zyIgmpSnoopingCountPortV3ReportRx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportRx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportRx.setDescription('The counter which the switch receive report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountPortV3ReportRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportRxDrop.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportRxDrop.setDescription('The counter which the switch drop report packets of IGMP snooping version 3.')
zyIgmpSnoopingCountPortV3ReportTx = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportTx.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingCountPortV3ReportTx.setDescription('The counter which the switch sends report packets of IGMP snooping version 3.')
zyxelIgmpSnoopingGroupCountStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6))
zyIgmpSnoopingGroupCountNumber = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountNumber.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountNumber.setDescription('The total IGMP snooping group number on this switch.')
zyxelIgmpSnoopingGroupCountVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 2), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountVlanTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountVlanTable.setDescription('The table contains IGMP snooping group count VLAN information.')
zyxelIgmpSnoopingGroupCountVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 2, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingGroupCountVlanVid"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountVlanEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountVlanEntry.setDescription('An entry contains IGMP snooping group count VLAN information.')
zyIgmpSnoopingGroupCountVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountVlanVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountVlanVid.setDescription('The multicast group VLAN ID.')
zyIgmpSnoopingGroupCountVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountVlanNumber.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountVlanNumber.setDescription('The multicast group number.')
zyxelIgmpSnoopingGroupCountPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 3), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountPortTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountPortTable.setDescription('The table contains IGMP snooping group count port information.')
zyxelIgmpSnoopingGroupCountPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 3, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountPortEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupCountPortEntry.setDescription('An entry contains IGMP snooping group count port information.')
zyIgmpSnoopingGroupCountPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountPortNumber.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupCountPortNumber.setDescription('The multicast group number.')
zyxelIgmpSnoopingGroupStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7))
zyxelIgmpSnoopingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupTable.setDescription('The table contains IGMP snooping group information.')
zyxelIgmpSnoopingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingGroupVid"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingGroupIpAddress"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingGroupEntry.setDescription('An entry contains IGMP snooping group information.')
zyIgmpSnoopingGroupVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingGroupVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupVid.setDescription('The IGMP snooping group VLAN for VLAN and group.')
zyIgmpSnoopingGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: zyIgmpSnoopingGroupIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupIpAddress.setDescription('The IGMP snooping group address for VLAN and group.')
zyIgmpSnoopingGroupPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupPortCount.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupPortCount.setDescription('The IGMP snooping group port count for VLAN and group.')
zyIgmpSnoopingGroupPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 7, 1, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingGroupPorts.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingGroupPorts.setDescription('The IGMP snooping group port list for VLAN and group.')
zyxelIgmpSnoopingClientTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8), )
if mibBuilder.loadTexts: zyxelIgmpSnoopingClientTable.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingClientTable.setDescription('The table contains IGMP snooping group client information.')
zyxelIgmpSnoopingClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1), ).setIndexNames((0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingClientVid"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingClientPort"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingClientGroupIpAddress"), (0, "ZYXEL-IGMP-SNOOPING-MIB", "zyIgmpSnoopingClientIpAddress"))
if mibBuilder.loadTexts: zyxelIgmpSnoopingClientEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelIgmpSnoopingClientEntry.setDescription('An entry contains IGMP snooping group client information.')
zyIgmpSnoopingClientVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingClientVid.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingClientVid.setDescription('The VLAN where the multicast traffic runs.')
zyIgmpSnoopingClientPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1, 2), Integer32())
if mibBuilder.loadTexts: zyIgmpSnoopingClientPort.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingClientPort.setDescription('The port where the host connects to the Swtich.')
zyIgmpSnoopingClientGroupIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1, 3), IpAddress())
if mibBuilder.loadTexts: zyIgmpSnoopingClientGroupIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingClientGroupIpAddress.setDescription('The multicast group address.')
zyIgmpSnoopingClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1, 4), IpAddress())
if mibBuilder.loadTexts: zyIgmpSnoopingClientIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingClientIpAddress.setDescription('The host that is interested in the multicast group.')
zyIgmpSnoopingClientUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyIgmpSnoopingClientUpTime.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingClientUpTime.setDescription('The period of time that the client joins the multicast group.')
zyIgmpSnoopingStatisticsClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClear.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClear.setDescription('Clear all IGMP snooping statistics of the switch.')
zyIgmpSnoopingStatisticsClearSystem = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 10), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearSystem.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearSystem.setDescription('Clear the IGMP snooping statistics of the system.')
zyIgmpSnoopingStatisticsClearPort = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 11), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearPort.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearPort.setDescription('Clear the IGMP snooping statistics of the port(s).')
zyIgmpSnoopingStatisticsClearVlan = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 31, 2, 12), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearVlan.setStatus('current')
if mibBuilder.loadTexts: zyIgmpSnoopingStatisticsClearVlan.setDescription('Clear the IGMP snooping statistics of the multicast VLAN(s).')
mibBuilder.exportSymbols("ZYXEL-IGMP-SNOOPING-MIB", zyIgmpSnoopingCountVlanV3ReportRx=zyIgmpSnoopingCountVlanV3ReportRx, zyIgmpSnoopingCountV2QueryRxDrop=zyIgmpSnoopingCountV2QueryRxDrop, zyIgmpSnoopingCountV3QueryRxDrop=zyIgmpSnoopingCountV3QueryRxDrop, zyxelIgmpSnoopingCountTable=zyxelIgmpSnoopingCountTable, zyxelIgmpSnoopingGroupCountPortTable=zyxelIgmpSnoopingGroupCountPortTable, zyIgmpSnoopingState=zyIgmpSnoopingState, zyIgmpSnoopingInfoVlanVid=zyIgmpSnoopingInfoVlanVid, zyxelIgmpSnoopingGroupCountVlanTable=zyxelIgmpSnoopingGroupCountVlanTable, zyIgmpSnoopingClientVid=zyIgmpSnoopingClientVid, zyIgmpSnoopingVlanVid=zyIgmpSnoopingVlanVid, zyIgmpSnooping8021pPriority=zyIgmpSnooping8021pPriority, zyIgmpSnoopingPortLeaveTimeout=zyIgmpSnoopingPortLeaveTimeout, zyxelIgmpSnoopingInfoVlanEntry=zyxelIgmpSnoopingInfoVlanEntry, zyIgmpSnoopingStatisticsClearSystem=zyIgmpSnoopingStatisticsClearSystem, zyIgmpSnoopingGroupCountPortNumber=zyIgmpSnoopingGroupCountPortNumber, zyxelIgmpSnoopingGroupCountVlanEntry=zyxelIgmpSnoopingGroupCountVlanEntry, zyIgmpSnoopingCountPortV3ReportRxDrop=zyIgmpSnoopingCountPortV3ReportRxDrop, zyIgmpSnoopingGroupPortCount=zyIgmpSnoopingGroupPortCount, zyIgmpSnoopingCountVlanV2LeaveRxDrop=zyIgmpSnoopingCountVlanV2LeaveRxDrop, zyIgmpSnoopingInfoVlanQueryPorts=zyIgmpSnoopingInfoVlanQueryPorts, zyIgmpSnoopingCountPortV2LeaveRxDrop=zyIgmpSnoopingCountPortV2LeaveRxDrop, zyIgmpSnoopingCountPortV3ReportRx=zyIgmpSnoopingCountPortV3ReportRx, zyxelIgmpSnoopingVlanTable=zyxelIgmpSnoopingVlanTable, zyIgmpSnoopingCountIndex=zyIgmpSnoopingCountIndex, zyIgmpSnoopingVlanMode=zyIgmpSnoopingVlanMode, zyIgmpSnoopingGroupCountVlanVid=zyIgmpSnoopingGroupCountVlanVid, zyIgmpSnoopingCountV2QueryRx=zyIgmpSnoopingCountV2QueryRx, zyIgmpSnoopingReportProxyState=zyIgmpSnoopingReportProxyState, zyxelIgmpSnoopingGroupStatus=zyxelIgmpSnoopingGroupStatus, zyIgmpSnoopingCountV3QueryRx=zyIgmpSnoopingCountV3QueryRx, zyIgmpSnoopingMaxNumberOfVlans=zyIgmpSnoopingMaxNumberOfVlans, zyxelIgmpSnoopingCountPortTable=zyxelIgmpSnoopingCountPortTable, zyIgmpSnoopingGroupCountNumber=zyIgmpSnoopingGroupCountNumber, zyIgmpSnoopingRecordTimeout=zyIgmpSnoopingRecordTimeout, zyIgmpSnoopingVlanRowStatus=zyIgmpSnoopingVlanRowStatus, zyIgmpSnoopingCountVlanV3QueryTx=zyIgmpSnoopingCountVlanV3QueryTx, zyIgmpSnoopingRecordVid=zyIgmpSnoopingRecordVid, zyIgmpSnoopingCountVlanV2ReportTx=zyIgmpSnoopingCountVlanV2ReportTx, zyIgmpSnoopingRecordIndex=zyIgmpSnoopingRecordIndex, zyIgmpSnoopingCountVlanV2QueryRxDrop=zyIgmpSnoopingCountVlanV2QueryRxDrop, zyxelIgmpSnooping=zyxelIgmpSnooping, zyIgmpSnoopingPortThrottlingAction=zyIgmpSnoopingPortThrottlingAction, zyxelIgmpSnoopingCountVlanTable=zyxelIgmpSnoopingCountVlanTable, zyIgmpSnoopingGroupHostTimeout=zyIgmpSnoopingGroupHostTimeout, zyIgmpSnoopingCountVlanV2QueryTx=zyIgmpSnoopingCountVlanV2QueryTx, PYSNMP_MODULE_ID=zyxelIgmpSnooping, zyxelIgmpSnoopingGroupTable=zyxelIgmpSnoopingGroupTable, zyIgmpSnoopingCountVlanV3QueryRxDrop=zyIgmpSnoopingCountVlanV3QueryRxDrop, zyIgmpSnoopingStatisticsClear=zyIgmpSnoopingStatisticsClear, zyIgmpSnoopingInfoVlanType=zyIgmpSnoopingInfoVlanType, zyIgmpSnoopingPortFastLeaveTimeout=zyIgmpSnoopingPortFastLeaveTimeout, zyIgmpSnoopingCountV2LeaveRxDrop=zyIgmpSnoopingCountV2LeaveRxDrop, zyIgmpSnoopingCountPortV2ReportRx=zyIgmpSnoopingCountPortV2ReportRx, zyIgmpSnoopingCountVlanV3ReportRxDrop=zyIgmpSnoopingCountVlanV3ReportRxDrop, zyIgmpSnoopingClientGroupIpAddress=zyIgmpSnoopingClientGroupIpAddress, zyIgmpSnoopingCountV2ReportTx=zyIgmpSnoopingCountV2ReportTx, zyIgmpSnoopingCountPortV2LeaveRx=zyIgmpSnoopingCountPortV2LeaveRx, zyxelIgmpSnoopingGroupCountStatus=zyxelIgmpSnoopingGroupCountStatus, zyxelIgmpSnoopingCountVlanEntry=zyxelIgmpSnoopingCountVlanEntry, zyIgmpSnoopingCountV2QueryTx=zyIgmpSnoopingCountV2QueryTx, zyIgmpSnoopingCountV3QueryTx=zyIgmpSnoopingCountV3QueryTx, zyIgmpSnoopingGroupVid=zyIgmpSnoopingGroupVid, zyIgmpSnoopingCountVlanV2QueryRx=zyIgmpSnoopingCountVlanV2QueryRx, zyIgmpSnoopingCountPortV3ReportTx=zyIgmpSnoopingCountPortV3ReportTx, zyIgmpSnoopingRecordUpTime=zyIgmpSnoopingRecordUpTime, zyIgmpSnoopingGroupCountVlanNumber=zyIgmpSnoopingGroupCountVlanNumber, zyxelIgmpSnoopingGroupEntry=zyxelIgmpSnoopingGroupEntry, zyIgmpSnoopingStatisticsClearPort=zyIgmpSnoopingStatisticsClearPort, zyIgmpSnoopingPortLeaveMode=zyIgmpSnoopingPortLeaveMode, zyIgmpSnoopingCountV2ReportRx=zyIgmpSnoopingCountV2ReportRx, zyIgmpSnoopingCountPortV3QueryRx=zyIgmpSnoopingCountPortV3QueryRx, zyxelIgmpSnoopingStatus=zyxelIgmpSnoopingStatus, zyIgmpSnoopingCountVlanV3ReportTx=zyIgmpSnoopingCountVlanV3ReportTx, zyIgmpSnoopingRecordGroup=zyIgmpSnoopingRecordGroup, zyIgmpSnoopingCountV2ReportRxDrop=zyIgmpSnoopingCountV2ReportRxDrop, zyxelIgmpSnoopingPortEntry=zyxelIgmpSnoopingPortEntry, zyIgmpSnoopingCountVlanV2LeaveTx=zyIgmpSnoopingCountVlanV2LeaveTx, zyxelIgmpSnoopingVlanEntry=zyxelIgmpSnoopingVlanEntry, zyxelIgmpSnoopingInfoVlanTable=zyxelIgmpSnoopingInfoVlanTable, zyIgmpSnoopingCountPortV2ReportRxDrop=zyIgmpSnoopingCountPortV2ReportRxDrop, zyIgmpSnoopingCountPortV2ReportTx=zyIgmpSnoopingCountPortV2ReportTx, zyIgmpSnoopingGroupIpAddress=zyIgmpSnoopingGroupIpAddress, zyIgmpSnoopingCountVlanVid=zyIgmpSnoopingCountVlanVid, zyIgmpSnoopingPortQuerierMode=zyIgmpSnoopingPortQuerierMode, zyxelIgmpSnoopingCountPortEntry=zyxelIgmpSnoopingCountPortEntry, zyIgmpSnoopingClientIpAddress=zyIgmpSnoopingClientIpAddress, zyIgmpSnoopingStatisticsClearVlan=zyIgmpSnoopingStatisticsClearVlan, zyIgmpSnoopingCountV3ReportRx=zyIgmpSnoopingCountV3ReportRx, zyIgmpSnoopingPortMaxGroupLimitedState=zyIgmpSnoopingPortMaxGroupLimitedState, zyxelIgmpSnoopingPortTable=zyxelIgmpSnoopingPortTable, zyIgmpSnoopingCountPortV2LeaveTx=zyIgmpSnoopingCountPortV2LeaveTx, zyxelIgmpSnoopingClientEntry=zyxelIgmpSnoopingClientEntry, zyxelIgmpSnoopingRecordTable=zyxelIgmpSnoopingRecordTable, zyIgmpSnoopingCountVlanV3QueryRx=zyIgmpSnoopingCountVlanV3QueryRx, zyIgmpSnoopingClientUpTime=zyIgmpSnoopingClientUpTime, zyIgmpSnoopingCountVlanV2ReportRx=zyIgmpSnoopingCountVlanV2ReportRx, zyIgmpSnoopingCountVlanV2LeaveRx=zyIgmpSnoopingCountVlanV2LeaveRx, zyIgmpSnoopingPortMaxOfGroups=zyIgmpSnoopingPortMaxOfGroups, zyIgmpSnoopingCountPortV2QueryRx=zyIgmpSnoopingCountPortV2QueryRx, zyxelIgmpSnoopingGroupCountPortEntry=zyxelIgmpSnoopingGroupCountPortEntry, zyIgmpSnoopingRecordPort=zyIgmpSnoopingRecordPort, zyIgmpSnoopingCountV2LeaveRx=zyIgmpSnoopingCountV2LeaveRx, zyIgmpSnoopingVlanName=zyIgmpSnoopingVlanName, zyxelIgmpSnoopingSetup=zyxelIgmpSnoopingSetup, zyxelIgmpSnoopingCountEntry=zyxelIgmpSnoopingCountEntry, zyIgmpSnoopingCountV2LeaveTx=zyIgmpSnoopingCountV2LeaveTx, zyIgmpSnoopingGroupPorts=zyIgmpSnoopingGroupPorts, zyIgmpSnoopingCountV3ReportRxDrop=zyIgmpSnoopingCountV3ReportRxDrop, zyIgmpSnoopingCountVlanV2ReportRxDrop=zyIgmpSnoopingCountVlanV2ReportRxDrop, zyxelIgmpSnoopingClientTable=zyxelIgmpSnoopingClientTable, zyIgmpSnoopingClientPort=zyIgmpSnoopingClientPort, zyxelIgmpSnoopingRecordEntry=zyxelIgmpSnoopingRecordEntry, zyIgmpSnoopingQuerierModeState=zyIgmpSnoopingQuerierModeState, zyIgmpSnoopingCountV3ReportTx=zyIgmpSnoopingCountV3ReportTx)
