#
# PySNMP MIB module HPN-ICF-UNICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-UNICAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Bits, Gauge32, Integer32, ModuleIdentity, Unsigned32, ObjectIdentity, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Gauge32", "Integer32", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "IpAddress", "Counter32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
hpnicfUnicast = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44))
hpnicfUnicast.setRevisions(('2005-03-24 14:54',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfUnicast.setRevisionsDescriptions((' Revisions made by Hangzhou MIB team.',))
if mibBuilder.loadTexts: hpnicfUnicast.setLastUpdated('200501311454Z')
if mibBuilder.loadTexts: hpnicfUnicast.setOrganization('')
if mibBuilder.loadTexts: hpnicfUnicast.setContactInfo('')
if mibBuilder.loadTexts: hpnicfUnicast.setDescription(' This MIB is a framework MIB for unicast related features.')
hpnicfURPFTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1), )
if mibBuilder.loadTexts: hpnicfURPFTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFTable.setDescription(' Unicast Reverse Path Forwarding (URPF) is used to prevent the network attacks caused by source address spoofing. This table is used to configure URPF on specific interfaces.')
hpnicfURPFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1), ).setIndexNames((0, "HPN-ICF-UNICAST-MIB", "hpnicfURPFIfIndex"))
if mibBuilder.loadTexts: hpnicfURPFEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFEntry.setDescription(' The entry of hpnicfURPFTable, indexed by vlan interface index.')
hpnicfURPFIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hpnicfURPFIfIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFIfIndex.setDescription(' The ifIndex of vlan interface.')
hpnicfURPFEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfURPFEnabled.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFEnabled.setDescription(' This object is used to enable or disable URPF on certain vlan interfaces.')
hpnicfURPFSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfURPFSlotID.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFSlotID.setDescription(' This object specifies to which slot packets are redirected in order to perform URPF check.')
hpnicfURPFTotalReceivedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfURPFTotalReceivedPacket.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFTotalReceivedPacket.setDescription(' This object provides total received packets number.')
hpnicfURPFDroppedPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfURPFDroppedPacket.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFDroppedPacket.setDescription(' This object provides total dropped invalid packets number.')
hpnicfURPFClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 44, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("reserved", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfURPFClearStat.setStatus('current')
if mibBuilder.loadTexts: hpnicfURPFClearStat.setDescription(' This object is used to clear the URPF statistics on certain vlan interfaces. This object is actually a write-only object. When read, it always returns 0. When set to 1, the objects hpnicfURPFTotalReceivedPacket and hpnicfURPFDroppedPacket are reset to 0.')
mibBuilder.exportSymbols("HPN-ICF-UNICAST-MIB", hpnicfURPFEntry=hpnicfURPFEntry, hpnicfURPFEnabled=hpnicfURPFEnabled, PYSNMP_MODULE_ID=hpnicfUnicast, hpnicfURPFSlotID=hpnicfURPFSlotID, hpnicfURPFTotalReceivedPacket=hpnicfURPFTotalReceivedPacket, hpnicfURPFDroppedPacket=hpnicfURPFDroppedPacket, hpnicfURPFIfIndex=hpnicfURPFIfIndex, hpnicfURPFTable=hpnicfURPFTable, hpnicfURPFClearStat=hpnicfURPFClearStat, hpnicfUnicast=hpnicfUnicast)
