#
# PySNMP MIB module TERADICI-PCOIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERADICI-PCOIP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, Unsigned32, IpAddress, iso, MibIdentifier, TimeTicks, ObjectIdentity, enterprises, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Unsigned32", "IpAddress", "iso", "MibIdentifier", "TimeTicks", "ObjectIdentity", "enterprises", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
teraMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 25071))
teraMibModule.setRevisions(('2008-01-28 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: teraMibModule.setRevisionsDescriptions(('Original version of this MIB.',))
if mibBuilder.loadTexts: teraMibModule.setLastUpdated('200801281000Z')
if mibBuilder.loadTexts: teraMibModule.setOrganization('Teradici Corporation')
if mibBuilder.loadTexts: teraMibModule.setContactInfo(' Ken Unger Postal: 500-4400 Dominion St. Burnaby, BC V5G 4G3 Canada Tel: +1 604 451 5800 Fax: +1 604 451 5818 E-mail: kunger@teradici.com')
if mibBuilder.loadTexts: teraMibModule.setDescription('MIB describing PC-over-IP (tm) statistics.')
teraProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1))
teraPcoip = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 1))
teraPcoipStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1))
teraImagingStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2))
pcoipStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1), )
if mibBuilder.loadTexts: pcoipStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsTable.setDescription('The (conceptual) PCoIP statistics table.')
pcoipStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1), ).setIndexNames((0, "TERADICI-PCOIP-MIB", "pcoipStatisticsIndex"))
if mibBuilder.loadTexts: pcoipStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsEntry.setDescription('An entry (conceptual row) in the PCoIP statistics table.')
pcoipStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsIndex.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsIndex.setDescription('The auxiliary variable used for identifying instances of the columnar objects in the statistics table.')
pcoipStatisticsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsSessionNumber.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsSessionNumber.setDescription('PCoIP session number used to link PCoIP statistics to imaging statistics.')
pcoipStatisticsPcoipPacketsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipPacketsTransmitted.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipPacketsTransmitted.setDescription('PCoIP packets transmitted during the current or most recent session.')
pcoipStatisticsPcoipBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipBytesTransmitted.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipBytesTransmitted.setDescription('PCoIP bytes transmitted during the current or most recent session.')
pcoipStatisticsPcoipPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipPacketsReceived.setDescription('PCoIP packets received during the current or most recent session.')
pcoipStatisticsPcoipBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipBytesReceived.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipBytesReceived.setDescription('PCoIP bytes received during the current or most recent session.')
pcoipStatisticsPcoipLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipLostPackets.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipLostPackets.setDescription('Detected lost PCoIP during the current or most recent session.')
pcoipStatisticsPcoipLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipStatisticsPcoipLatency.setStatus('current')
if mibBuilder.loadTexts: pcoipStatisticsPcoipLatency.setDescription('Measured PCoIP latency in ms.')
imagingStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1), )
if mibBuilder.loadTexts: imagingStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsTable.setDescription('The (conceptual) imaging statistics table.')
imagingStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1), ).setIndexNames((0, "TERADICI-PCOIP-MIB", "imagingStatisticsIndex"))
if mibBuilder.loadTexts: imagingStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsEntry.setDescription('An entry (conceptual row) in the imaging statistics table.')
imagingStatisticsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsIndex.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsIndex.setDescription('The auxiliary variable used for identifying instances of the columnar objects in the statistics table.')
imagingStatisticsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsSessionNumber.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsSessionNumber.setDescription('PCoIP session number used to link imaging statistics to PCoIP statistics.')
imagingStatisticsSessionActive = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inActive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsSessionActive.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsSessionActive.setDescription('Whether the imaging session is active or inactive.')
imagingStatisticsDisplayActive = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("inActive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsDisplayActive.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsDisplayActive.setDescription('Whether display is active or inactive.')
imagingStatisticsDisplayWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsDisplayWidth.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsDisplayWidth.setDescription('Number of pixels the display is wide.')
imagingStatisticsDisplayHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsDisplayHeight.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsDisplayHeight.setDescription('Number of pixels the display is tall.')
imagingStatisticsDisplayRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsDisplayRefreshRate.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsDisplayRefreshRate.setDescription('Display refresh rate in Hz')
imagingStatisticsFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 1, 2, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imagingStatisticsFrameCount.setStatus('current')
if mibBuilder.loadTexts: imagingStatisticsFrameCount.setDescription('Encoded frame count per display.')
mibBuilder.exportSymbols("TERADICI-PCOIP-MIB", pcoipStatisticsIndex=pcoipStatisticsIndex, pcoipStatisticsSessionNumber=pcoipStatisticsSessionNumber, teraImagingStatistics=teraImagingStatistics, teraMibModule=teraMibModule, imagingStatisticsTable=imagingStatisticsTable, pcoipStatisticsTable=pcoipStatisticsTable, imagingStatisticsSessionNumber=imagingStatisticsSessionNumber, imagingStatisticsDisplayRefreshRate=imagingStatisticsDisplayRefreshRate, pcoipStatisticsPcoipLostPackets=pcoipStatisticsPcoipLostPackets, pcoipStatisticsPcoipPacketsTransmitted=pcoipStatisticsPcoipPacketsTransmitted, pcoipStatisticsPcoipBytesTransmitted=pcoipStatisticsPcoipBytesTransmitted, imagingStatisticsSessionActive=imagingStatisticsSessionActive, pcoipStatisticsPcoipPacketsReceived=pcoipStatisticsPcoipPacketsReceived, imagingStatisticsIndex=imagingStatisticsIndex, imagingStatisticsEntry=imagingStatisticsEntry, teraPcoipStatistics=teraPcoipStatistics, imagingStatisticsDisplayHeight=imagingStatisticsDisplayHeight, teraProducts=teraProducts, pcoipStatisticsPcoipBytesReceived=pcoipStatisticsPcoipBytesReceived, pcoipStatisticsEntry=pcoipStatisticsEntry, imagingStatisticsDisplayActive=imagingStatisticsDisplayActive, teraPcoip=teraPcoip, imagingStatisticsDisplayWidth=imagingStatisticsDisplayWidth, imagingStatisticsFrameCount=imagingStatisticsFrameCount, pcoipStatisticsPcoipLatency=pcoipStatisticsPcoipLatency, PYSNMP_MODULE_ID=teraMibModule)
