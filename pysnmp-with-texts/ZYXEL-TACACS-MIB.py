#
# PySNMP MIB module ZYXEL-TACACS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-TACACS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:51:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, Integer32, Counter64, ModuleIdentity, ObjectIdentity, Unsigned32, iso, Bits, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Integer32", "Counter64", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "iso", "Bits", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelTacacs = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83))
if mibBuilder.loadTexts: zyxelTacacs.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelTacacs.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelTacacs.setContactInfo('')
if mibBuilder.loadTexts: zyxelTacacs.setDescription('The subtree for tacacs')
zyxelTacacsServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1))
zyxelTacacsServerNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 2))
zyxelTacacsAuthenticationServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1))
zyTacacsAuthenticationServerMode = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("indexPriority", 1), ("roundRobin", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAuthenticationServerMode.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerMode.setDescription('This field only applies if you configure multiple TACACS+ servers. select indexPriority and the switch tries to authenticate with the first configured TACACS+ server, if the TACACS+ server does not respond then this switch tries to authenticate with the second TACACS+ server. Select roundRobin to alternate between the TACACS+ servers that it sends authentication requests to.')
zyTacacsAuthenticationServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAuthenticationServerTimeout.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerTimeout.setDescription('Specify the amount of time in seconds that the switch waits for an authentication request response from the TACACS+ server.')
zyxelTacacsAuthenticationServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3), )
if mibBuilder.loadTexts: zyxelTacacsAuthenticationServerTable.setStatus('current')
if mibBuilder.loadTexts: zyxelTacacsAuthenticationServerTable.setDescription('The table contains TACACS+ authentication server configuration.')
zyxelTacacsAuthenticationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3, 1), ).setIndexNames((0, "ZYXEL-TACACS-MIB", "zyTacacsAuthenticationServerIndex"))
if mibBuilder.loadTexts: zyxelTacacsAuthenticationServerEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelTacacsAuthenticationServerEntry.setDescription('An entry contains TACACS+ authentication server configuration.')
zyTacacsAuthenticationServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyTacacsAuthenticationServerIndex.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerIndex.setDescription('The number representing a TACACS+ server entry')
zyTacacsAuthenticationServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAuthenticationServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerIpAddress.setDescription('IP address of an external TACACS+ server')
zyTacacsAuthenticationServerTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAuthenticationServerTcpPort.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerTcpPort.setDescription('The default port of a TACACS+ server for authentication is 49. you need not change this value unless your netwrok administrator instructs you to do so.')
zyTacacsAuthenticationServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 1, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAuthenticationServerSharedSecret.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAuthenticationServerSharedSecret.setDescription('Specify a password as the key to be shared between the external TACACS+ server and the switch. This key is not sent over the network. This key must be the same on the external TACACS+ server and the switch.')
zyxelTacacsAccountingServerSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2))
zyTacacsAccountingServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAccountingServerTimeout.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAccountingServerTimeout.setDescription('Specify the amount of time in seconds that the switch waits for an accounting request response from the TACACS+ accounting server.')
zyxelTacacsAccountingServerTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2), )
if mibBuilder.loadTexts: zyxelTacacsAccountingServerTable.setStatus('current')
if mibBuilder.loadTexts: zyxelTacacsAccountingServerTable.setDescription('The table contains TACACS+ accounting server configuration.')
zyxelTacacsAccountingServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2, 1), ).setIndexNames((0, "ZYXEL-TACACS-MIB", "zyTacacsAccountingServerIndex"))
if mibBuilder.loadTexts: zyxelTacacsAccountingServerEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelTacacsAccountingServerEntry.setDescription('An entry contains TACACS+ accounting server configuration.')
zyTacacsAccountingServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyTacacsAccountingServerIndex.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAccountingServerIndex.setDescription('The number representing a TACACS+ accounting server')
zyTacacsAccountingServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAccountingServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAccountingServerIpAddress.setDescription('IP address of an external TACACS+ accounting server.')
zyTacacsAccountingServerTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAccountingServerTcpPort.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAccountingServerTcpPort.setDescription('The default port of a TACACS+ accounting server for accounting is 49. You need not change this value unless your network administator instructs you to do so.')
zyTacacsAccountingServerSharedSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyTacacsAccountingServerSharedSecret.setStatus('current')
if mibBuilder.loadTexts: zyTacacsAccountingServerSharedSecret.setDescription('Specify a password as the key to be shared between the external TACACS+ accounting server and the switch. This key is not sent over the network. This key must be the same on the external TACACS+ accounting server and the switch')
zyTacacsServerAuthenticationServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 2, 1)).setObjects(("ZYXEL-TACACS-MIB", "zyTacacsAccountingServerIndex"))
if mibBuilder.loadTexts: zyTacacsServerAuthenticationServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: zyTacacsServerAuthenticationServerUnreachable.setDescription('TACACS+ authentication server is not reachable.')
zyTacacsServerAccountingServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 2, 2)).setObjects(("ZYXEL-TACACS-MIB", "zyTacacsAccountingServerIndex"))
if mibBuilder.loadTexts: zyTacacsServerAccountingServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: zyTacacsServerAccountingServerUnreachable.setDescription('TACACS+ accounting server is not reachable.')
zyTacacsServerAuthenticationServerUnreachableRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 2, 3)).setObjects(("ZYXEL-TACACS-MIB", "zyTacacsAccountingServerIndex"))
if mibBuilder.loadTexts: zyTacacsServerAuthenticationServerUnreachableRecovered.setStatus('current')
if mibBuilder.loadTexts: zyTacacsServerAuthenticationServerUnreachableRecovered.setDescription('TACACS+ authentication server is recovered from unreachable.')
zyTacacsServerAccountingServerUnreachableRecovered = NotificationType((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 83, 2, 4)).setObjects(("ZYXEL-TACACS-MIB", "zyTacacsAccountingServerIndex"))
if mibBuilder.loadTexts: zyTacacsServerAccountingServerUnreachableRecovered.setStatus('current')
if mibBuilder.loadTexts: zyTacacsServerAccountingServerUnreachableRecovered.setDescription('TACACS+ accounting server is recovered from unreachable.')
mibBuilder.exportSymbols("ZYXEL-TACACS-MIB", zyTacacsAuthenticationServerTcpPort=zyTacacsAuthenticationServerTcpPort, zyxelTacacs=zyxelTacacs, zyTacacsAccountingServerSharedSecret=zyTacacsAccountingServerSharedSecret, zyTacacsAuthenticationServerIpAddress=zyTacacsAuthenticationServerIpAddress, zyTacacsAccountingServerTcpPort=zyTacacsAccountingServerTcpPort, zyTacacsAuthenticationServerTimeout=zyTacacsAuthenticationServerTimeout, zyTacacsServerAccountingServerUnreachable=zyTacacsServerAccountingServerUnreachable, zyxelTacacsAccountingServerEntry=zyxelTacacsAccountingServerEntry, zyxelTacacsAccountingServerSetup=zyxelTacacsAccountingServerSetup, zyTacacsAccountingServerIndex=zyTacacsAccountingServerIndex, zyTacacsAuthenticationServerSharedSecret=zyTacacsAuthenticationServerSharedSecret, zyxelTacacsAuthenticationServerSetup=zyxelTacacsAuthenticationServerSetup, zyTacacsServerAuthenticationServerUnreachable=zyTacacsServerAuthenticationServerUnreachable, zyxelTacacsAccountingServerTable=zyxelTacacsAccountingServerTable, zyTacacsAccountingServerTimeout=zyTacacsAccountingServerTimeout, zyTacacsServerAccountingServerUnreachableRecovered=zyTacacsServerAccountingServerUnreachableRecovered, zyTacacsAuthenticationServerIndex=zyTacacsAuthenticationServerIndex, zyTacacsServerAuthenticationServerUnreachableRecovered=zyTacacsServerAuthenticationServerUnreachableRecovered, zyxelTacacsServerNotifications=zyxelTacacsServerNotifications, PYSNMP_MODULE_ID=zyxelTacacs, zyxelTacacsAuthenticationServerEntry=zyxelTacacsAuthenticationServerEntry, zyxelTacacsAuthenticationServerTable=zyxelTacacsAuthenticationServerTable, zyxelTacacsServerSetup=zyxelTacacsServerSetup, zyTacacsAuthenticationServerMode=zyTacacsAuthenticationServerMode, zyTacacsAccountingServerIpAddress=zyTacacsAccountingServerIpAddress)
