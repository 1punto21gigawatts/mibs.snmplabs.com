#
# PySNMP MIB module CENTILLION-SOURCE-ROUTING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CENTILLION-SOURCE-ROUTING-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
cndot1dSr, = mibBuilder.importSymbols("CENTILLION-BRIDGE-MIB", "cndot1dSr")
EnableIndicator, = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "EnableIndicator")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, TimeTicks, ModuleIdentity, Unsigned32, IpAddress, Bits, NotificationType, MibIdentifier, Integer32, ObjectIdentity, iso, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "ModuleIdentity", "Unsigned32", "IpAddress", "Bits", "NotificationType", "MibIdentifier", "Integer32", "ObjectIdentity", "iso", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cndot1dSrPortTable = MibTable((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 1), )
if mibBuilder.loadTexts: cndot1dSrPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrPortTable.setDescription('A table that contains information about every port that is associated with this source route bridge.')
cndot1dSrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 1, 1), ).setIndexNames((0, "CENTILLION-SOURCE-ROUTING-MIB", "cndot1dSrPort"))
if mibBuilder.loadTexts: cndot1dSrPortEntry.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrPortEntry.setDescription('A list of information for each port of a source route bridge.')
cndot1dSrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cndot1dSrPort.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrPort.setDescription('The port number of the port for which this entry contains Source Route management information.')
cndot1dSrPortAREHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cndot1dSrPortAREHopCount.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrPortAREHopCount.setDescription('The maximum number of routing descriptors allowed in an All Paths Explorer frames.')
cndot1dSrPortSTEHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cndot1dSrPortSTEHopCount.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrPortSTEHopCount.setDescription('The maximum number of routing descriptors allowed in an Spanning Tree Explorer frames.')
cndot1dSrExplorerProxy = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 3), EnableIndicator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cndot1dSrExplorerProxy.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrExplorerProxy.setDescription('Indicates whether the bridge proxies explorer packets.')
cndot1dSrBridgeNum = MibScalar((1, 3, 6, 1, 4, 1, 930, 3, 17, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cndot1dSrBridgeNum.setStatus('mandatory')
if mibBuilder.loadTexts: cndot1dSrBridgeNum.setDescription('A bridge number uniquely identifies a bridge when more than one bridge is used to span the same two segments. Current source routing protocols limit this value to the range: 0 through 15. A value of 65535 signifies that no bridge number is assigned to this bridge. This bridge number is global to a SR bridge group. That is all local segments defined to a SR bridge group will use the same bridge number.')
mibBuilder.exportSymbols("CENTILLION-SOURCE-ROUTING-MIB", cndot1dSrPortSTEHopCount=cndot1dSrPortSTEHopCount, cndot1dSrPortEntry=cndot1dSrPortEntry, cndot1dSrBridgeNum=cndot1dSrBridgeNum, cndot1dSrPort=cndot1dSrPort, cndot1dSrExplorerProxy=cndot1dSrExplorerProxy, cndot1dSrPortAREHopCount=cndot1dSrPortAREHopCount, cndot1dSrPortTable=cndot1dSrPortTable)
