#
# PySNMP MIB module A3COM-HUAWEI-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:07:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
hwInternetProtocol, hwLocal, vrpProtocol = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "hwInternetProtocol", "hwLocal", "vrpProtocol")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, TimeTicks, IpAddress, ModuleIdentity, Counter64, Bits, Integer32, Counter32, NotificationType, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "IpAddress", "ModuleIdentity", "Counter64", "Bits", "Integer32", "Counter32", "NotificationType", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
huawei_vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3)).setLabel("huawei-vlan")
vLANMibRoutertCountTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1), )
if mibBuilder.loadTexts: vLANMibRoutertCountTable.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRoutertCountTable.setDescription('Router packet statistics table.')
vLANMibRoutertCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibRouterPort"))
if mibBuilder.loadTexts: vLANMibRoutertCountEntry.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRoutertCountEntry.setDescription('Entry of vLANMibRoutertCountTable.')
vLANMibRouterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPort.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterPort.setDescription('Interface Index(es) of trunk port(s) present on router.')
vLANMibRouterPortPktDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPortPktDisc.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterPortPktDisc.setDescription('Number of packets discarded.')
vLANMibRouterPortPktTran = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterPortPktTran.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterPortPktTran.setDescription('Number of packets transmitted.')
vLANMibClearRouterStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vLANMibClearRouterStatistics.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibClearRouterStatistics.setDescription(' ')
vLANMibRoutertVlanCountTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2), )
if mibBuilder.loadTexts: vLANMibRoutertVlanCountTable.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRoutertVlanCountTable.setDescription('Per vid router statistics table.')
vLANMibRoutertVlanCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibRouterVID"))
if mibBuilder.loadTexts: vLANMibRoutertVlanCountEntry.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRoutertVlanCountEntry.setDescription('Entry of vLANMibRoutertVlanCountTable.')
vLANMibRouterVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVID.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterVID.setDescription('Vlan id')
vLANMibRouterVlanPacketTran = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVlanPacketTran.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterVlanPacketTran.setDescription('Number of packets transmitted to vlan.')
vLANMibRouterVlanPacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibRouterVlanPacketSent.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterVlanPacketSent.setDescription('Number of packets sent by vlan.')
vLANMibClearVidStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: vLANMibClearVidStatistics.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibClearVidStatistics.setDescription(' ')
vLANMibRouterMaxPkTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9), )
if mibBuilder.loadTexts: vLANMibRouterMaxPkTable.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterMaxPkTable.setDescription('Per vid max router packet processing count table.')
vLANMibRouterMaxPkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMIbVID"))
if mibBuilder.loadTexts: vLANMibRouterMaxPkEntry.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterMaxPkEntry.setDescription('Entry of vLANMibRouterMaxPkTable.')
vLANMIbVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMIbVID.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMIbVID.setDescription('Vlan id.')
vLANMibRouterMaxPktProcessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 9, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibRouterMaxPktProcessCount.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibRouterMaxPktProcessCount.setDescription('Max packet processing count. If set to zero then router will process, default number of packets per second.')
vLANMibSubIfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11), )
if mibBuilder.loadTexts: vLANMibSubIfTable.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibSubIfTable.setDescription('Sub interface table.')
vLANMibSubIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-VLAN-MIB", "vLANMibSubIfPortIndex"))
if mibBuilder.loadTexts: vLANMibSubIfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibSubIfEntry.setDescription('Entry of vLANMibSubIfTable.')
vLANMibSubIfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vLANMibSubIfPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibSubIfPortIndex.setDescription('Interface Index(es) of port(s) present on router.')
vLANMibSubIfEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iSL", 1), ("dot1q", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibSubIfEncapsulation.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibSubIfEncapsulation.setDescription('Encapsulation type.')
vLANMibSubIfVID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 1, 3, 3, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vLANMibSubIfVID.setStatus('mandatory')
if mibBuilder.loadTexts: vLANMibSubIfVID.setDescription('Vlan id')
mibBuilder.exportSymbols("A3COM-HUAWEI-VLAN-MIB", vLANMibClearVidStatistics=vLANMibClearVidStatistics, vLANMibRoutertVlanCountTable=vLANMibRoutertVlanCountTable, vLANMibRouterPort=vLANMibRouterPort, vLANMibRouterVID=vLANMibRouterVID, vLANMibRouterMaxPktProcessCount=vLANMibRouterMaxPktProcessCount, vLANMibSubIfVID=vLANMibSubIfVID, vLANMibRouterPortPktTran=vLANMibRouterPortPktTran, vLANMibClearRouterStatistics=vLANMibClearRouterStatistics, vLANMibRouterVlanPacketSent=vLANMibRouterVlanPacketSent, vLANMibRouterPortPktDisc=vLANMibRouterPortPktDisc, vLANMibRouterMaxPkEntry=vLANMibRouterMaxPkEntry, vLANMibRoutertCountEntry=vLANMibRoutertCountEntry, vLANMibRoutertCountTable=vLANMibRoutertCountTable, vLANMibSubIfPortIndex=vLANMibSubIfPortIndex, huawei_vlan=huawei_vlan, vLANMibSubIfTable=vLANMibSubIfTable, vLANMibRoutertVlanCountEntry=vLANMibRoutertVlanCountEntry, vLANMibRouterVlanPacketTran=vLANMibRouterVlanPacketTran, vLANMIbVID=vLANMIbVID, vLANMibSubIfEncapsulation=vLANMibSubIfEncapsulation, vLANMibRouterMaxPkTable=vLANMibRouterMaxPkTable, vLANMibSubIfEntry=vLANMibSubIfEntry)
