#
# PySNMP MIB module VERTICAL16-IPTEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL16-IPTEL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:34:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, Counter32, Counter64, NotificationType, ModuleIdentity, MibIdentifier, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, NotificationType, Unsigned32, iso, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Counter32", "Counter64", "NotificationType", "ModuleIdentity", "MibIdentifier", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "NotificationType", "Unsigned32", "iso", "Gauge32", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
iptel = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 16))
iptelTrunkSize = MibScalar((1, 3, 6, 1, 4, 1, 2338, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iptelTrunkSize.setStatus('mandatory')
if mibBuilder.loadTexts: iptelTrunkSize.setDescription('Number of Trunk')
ipTelTrunkSummary = MibTable((1, 3, 6, 1, 4, 1, 2338, 16, 2), )
if mibBuilder.loadTexts: ipTelTrunkSummary.setStatus('mandatory')
if mibBuilder.loadTexts: ipTelTrunkSummary.setDescription('Overview table of IPTel trunks')
ipTelTrunkInfo = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1), ).setIndexNames((0, "VERTICAL16-IPTEL-MIB", "TrunkIndex"))
if mibBuilder.loadTexts: ipTelTrunkInfo.setStatus('mandatory')
if mibBuilder.loadTexts: ipTelTrunkInfo.setDescription('Entry in the IpTelTrunkSummary Table')
trunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkIndex.setStatus('mandatory')
if mibBuilder.loadTexts: trunkIndex.setDescription('Trunk Number in the trunk table')
trunkState = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("not-configured", 0), ("out-of-service", 1), ("initializing", 2), ("idle", 3), ("outgoing", 4), ("incoming", 5), ("connected", 6), ("disconnecting", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trunkState.setStatus('mandatory')
if mibBuilder.loadTexts: trunkState.setDescription('Trunk State')
calledParty = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: calledParty.setStatus('mandatory')
if mibBuilder.loadTexts: calledParty.setDescription('Number of the Called Party')
callingParty = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callingParty.setStatus('mandatory')
if mibBuilder.loadTexts: callingParty.setDescription('Number of the Calling Party')
remoteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteGateway.setStatus('mandatory')
if mibBuilder.loadTexts: remoteGateway.setDescription('Remote Gateway Number')
localAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localAlarmThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: localAlarmThreshold.setDescription('Current levels of thresholds reached. It is a bit field indicating following thresholds: == BIT === === DESCRIPTION === 0 Jitter 1 NetworkLost 2 Network To Host Errors 3 Host To Network Errors 4 DSP To Host Errors 5 Host to DSP Errors ================================')
remoteAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 16, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: remoteAlarmThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: remoteAlarmThreshold.setDescription('Current levels of thresholds reached. For a description of bit fields refer to LocalThreshold')
ipTelReconfigComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,64)).setObjects(("VERTICAL16-IPTEL-MIB", "iptelTrunkSize"))
if mibBuilder.loadTexts: ipTelReconfigComplete.setDescription(' This notification is sent when the reconfiguration command completes.')
ipTelTrunkFailure = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,65)).setObjects(("VERTICAL16-IPTEL-MIB", "trunkIndex"))
if mibBuilder.loadTexts: ipTelTrunkFailure.setDescription('Issued when the specified Trunk has failed.')
ipTelTrunkAlarmInfo = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,66)).setObjects(("VERTICAL16-IPTEL-MIB", "trunkIndex"), ("VERTICAL16-IPTEL-MIB", "localAlarmThreshold"), ("VERTICAL16-IPTEL-MIB", "remoteAlarmThreshold"))
if mibBuilder.loadTexts: ipTelTrunkAlarmInfo.setDescription('Informational Alarm associated with some parameter threshold being reached.')
mibBuilder.exportSymbols("VERTICAL16-IPTEL-MIB", ipTelTrunkAlarmInfo=ipTelTrunkAlarmInfo, localAlarmThreshold=localAlarmThreshold, calledParty=calledParty, remoteAlarmThreshold=remoteAlarmThreshold, ipTelTrunkSummary=ipTelTrunkSummary, ipTelTrunkFailure=ipTelTrunkFailure, ipTelTrunkInfo=ipTelTrunkInfo, remoteGateway=remoteGateway, iptelTrunkSize=iptelTrunkSize, iptel=iptel, ipTelReconfigComplete=ipTelReconfigComplete, vertical=vertical, trunkIndex=trunkIndex, callingParty=callingParty, trunkState=trunkState)
