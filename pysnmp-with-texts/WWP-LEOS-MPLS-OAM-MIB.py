#
# PySNMP MIB module WWP-LEOS-MPLS-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-MPLS-OAM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Gauge32, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, Counter64, NotificationType, Unsigned32, ModuleIdentity, MibIdentifier, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "Counter64", "NotificationType", "Unsigned32", "ModuleIdentity", "MibIdentifier", "iso", "Integer32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosMPLSOamMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36))
wwpLeosMPLSOamMIB.setRevisions(('2006-05-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosMPLSOamMIB.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: wwpLeosMPLSOamMIB.setLastUpdated('200605260000Z')
if mibBuilder.loadTexts: wwpLeosMPLSOamMIB.setOrganization('IETF Distributed Management Working Group')
if mibBuilder.loadTexts: wwpLeosMPLSOamMIB.setContactInfo('Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: wwpLeosMPLSOamMIB.setDescription('The MPLS OAM MIB provides the capability of controlling the use of the wwpLeosMplsOAMLspPing and wwpLeosMplsOAMLspTraceRt function at a remote host.')
class OperationResponseStatus(TextualConvention, Integer32):
    description = 'Used to report the result of an operation: responseReceived(1) - Operation completes successfully. unknown(2) - Operation failed due to unknown error. requestTimedOut(4) - Operation failed to receive a valid reply within the time limit imposed on it. unknownLsp(5) - LSP with the specified name does not exist. maxConcurrentLimitReached(6) - The maximum number of concurrent active operations would have been exceeded if the corresponding operation was allowed.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))
    namedValues = NamedValues(("responseReceived", 1), ("unknown", 2), ("requestTimedOut", 4), ("unknownLsp", 5), ("maxConcurrentLimitReached", 6))

class LspPingReturnCode(TextualConvention, Integer32):
    description = 'Used to report the Return Code in the Echo Reply packet: noReturnCode(0) - No return Code malformedEchoRequest(1) - Malformed Echo Request received oneOrMoreTlvsNotUnderstood(2) - egressForFec(3) - Replying router is egress for the FEC at stack Depth indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode noMappingForFec(4) - Replying router has no mapping for the FEC at stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode downstreamMappingMismatch(5) upstreamInterfaceIndexUnknown(6) labelSwitchedFec(8) - Label switched at stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode labelSwitchedNoForwardingFec(9) - Label switched but no MPLS forwarding at stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode wrongLabel(10) - Mapping for this FEC is not the given label at stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode noLabel(11) - No label entry at stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode unknownFec(12) - Protocol not associated with interface at FEC stack depth as indicated in wwpLeosMPLSOamLspPingProbeHistoryRetSubCode.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("noReturnCode", 0), ("malformedEchoRequest", 1), ("oneOrMoreTlvsNotUnderstood", 2), ("egressForFec", 3), ("noMappingForFec", 4), ("downstreamMappingMismatch", 5), ("upstreamInterfaceIndexUnknown", 6), ("labelSwitchedFec", 8), ("labelSwitchedNoForwardingFec", 9), ("wrongLabel", 10), ("noLabel", 11), ("unknownFec", 12))

class LspType(TextualConvention, Integer32):
    description = 'Used to indicate LSP Type'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("rsvpTeTunnel", 1))

wwpLeosMPLSOamObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1))
wwpLeosMPLSOamNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 2))
wwpLeosMPLSOamConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 3))
wwpLeosMPLSOAMLspPingMax = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 1), Unsigned32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOAMLspPingMax.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOAMLspPingMax.setDescription('The maximum number of Lsp Ping that are allowed at any given time.')
wwpLeosMPLSOAMLspTraceRtMax = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 2), Unsigned32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOAMLspTraceRtMax.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOAMLspTraceRtMax.setDescription('The maximum number of Lsp Trace Routes that are allowed at any given time.')
wwpLeosMPLSOamLspPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3), )
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTable.setDescription('Defines the wwpLeosMPLSOamLspPing Control Table for providing, via SNMP, the capability of performing wwpLeosMPLSOamLspPing operations at a remote host. The results of these operations are stored in the wwpLeosMPLSOamLspPingResultsTable. When creating any entry in the table wwpLeosMPLSOamLspPingCtlLspName must be operationally enabled else error will be returned.')
wwpLeosMPLSOamLspPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1), ).setIndexNames((0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspPingCtlIndex"))
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlEntry.setDescription('Defines an entry in the wwpLeosMPLSOamLspPingCtlTable.')
wwpLeosMPLSOamLspPingCtlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlIndex.setDescription('This mib object is used as index in the table.')
wwpLeosMPLSOamLspPingCtlLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 3), LspType().clone('rsvpTeTunnel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlLspType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlLspType.setDescription('Specifies the type of LSP to be used at a remote host for performing a wwpLeosMPLSOamLspPing operation.')
wwpLeosMPLSOamLspPingCtlLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlLspName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlLspName.setDescription('Specifies the LSP Name for performing a wwpLeosMPLSOamLspPing operation. A value for this object MUST be set prior to transitioning its corresponding wwpLeosMPLSOamLspPingCtlEntry to active(1) via wwpLeosMPLSOamLspPingCtlRowStatus.')
wwpLeosMPLSOamLspPingCtlPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(96, 1464)).clone(96)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlPktSize.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlPktSize.setDescription('Specifies the size of the data portion to be transmitted in a wwpLeosMPLSOamLspPing operation in octets. A wwpLeosMPLSOamLspPing request is usually an ICMP message encoded into an IP packet. An IP packet has a maximum size of 65535 octets. Subtracting the size of the ICMP or UDP header (both 8 octets) and the size of the IP header (20 octets) yields a maximum size of 65507 octets.')
wwpLeosMPLSOamLspPingCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(1000)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTimeOut.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTimeOut.setDescription('Specifies the time-out value, in seconds, for a remote wwpLeosMPLSOamLspPing operation.')
wwpLeosMPLSOamLspPingCtlCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlCount.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlCount.setDescription('Specifies the number of times to perform a wwpLeosMPLSOamLspPing operation at a remote host.')
wwpLeosMPLSOamLspPingCtlAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlAdminState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlAdminState.setDescription("Setting this object to 'true' will stop sending the ping.")
wwpLeosMPLSOamLspPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTtl.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlTtl.setDescription('This object specifies the TTL to be used in the MPLS label header.')
wwpLeosMPLSOamLspPingCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlRowStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingCtlRowStatus.setDescription('This object allows entries to be created and deleted in the wwpLeosMPLSOamLspPingCtlTable. Deletion of an entry in this table results in all corresponding (same wwpLeosMPLSOamLspPingCtlIndex index values) wwpLeosMPLSOamLspPingResultsTable.')
wwpLeosMPLSOamLspPingResultsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4), )
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsTable.setDescription('Defines the LspPing Results Table for providing the capability of performing wwpLeosMPLSOamLspPing operations at a remote host. The results of these operations are stored in the wwpLeosMPLSOamLspPingResultsTable and the wwpLeosMPLSOamLspPingPastProbeTable. An entry is added to the wwpLeosMPLSOamLspPingResultsTable when an wwpLeosMPLSOamLspPingCtlEntry is started by successful transition of its wwpLeosMPLSOamLspPingCtlAdminStatus object to enabled(1). An entry is removed from the wwpLeosMPLSOamLspPingResultsTable when its corresponding wwpLeosMPLSOamLspPingCtlEntry is deleted.')
wwpLeosMPLSOamLspPingResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspPingCtlIndex"))
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsEntry.setDescription('Defines an entry in the wwpLeosMPLSOamLspPingResultsTable. The wwpLeosMPLSOamLspPingResultsTable has the same indexing as the wwpLeosMPLSOamLspPingCtlTable in order for a wwpLeosMPLSOamLspPingResultsEntry to correspond to the wwpLeosMPLSOamLspPingCtlEntry that caused it to be created.')
wwpLeosMPLSOamLspPingResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsOperStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsOperStatus.setDescription('Reflects the operational state of a wwpLeosMPLSOamLspPingCtlEntry: enabled(1) - Test is active. disabled(2) - Test has stopped.')
wwpLeosMPLSOamLspPingResultsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("success", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsStatus.setDescription('Reflects the final result of the wwpLeosMPLSOamLspPingCtlEntry.')
wwpLeosMPLSOamLspPingResultsLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 3), LspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsLspType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsLspType.setDescription('This objects indicates the type of LSP stored in the corresponding wwpLeosMPLSOamLspPingResultsLspName object.')
wwpLeosMPLSOamLspPingResultsLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsLspName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsLspName.setDescription('This objects reports the LSP Name.')
wwpLeosMPLSOamLspPingResultsMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 5), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsMinRtt.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsMinRtt.setDescription('The minimum wwpLeosMPLSOamLspPing round-trip-time (RTT) received. A value of 0 for this object implies that no RTT has been received.')
wwpLeosMPLSOamLspPingResultsMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 6), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsMaxRtt.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsMaxRtt.setDescription('The maximum wwpLeosMPLSOamLspPing round-trip-time (RTT) received. A value of 0 for this object implies that no RTT has been received.')
wwpLeosMPLSOamLspPingResultsAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsAverageRtt.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsAverageRtt.setDescription('The current average wwpLeosMPLSOamLspPing round-trip-time (RTT).')
wwpLeosMPLSOamLspPingResultsProbesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 8), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsProbesSent.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsProbesSent.setDescription('The value of this object reflects the number of probes sent for the corresponding wwpLeosMPLSOamLspPingCtlEntry and wwpLeosMPLSOamLspPingResultsEntry. The value of this object MUST be reported as 0 when no probes have been sent.')
wwpLeosMPLSOamLspPingResultsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 4, 1, 9), Unsigned32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsProbeResponses.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspPingResultsProbeResponses.setDescription('Number of responses received for the corresponding wwpLeosMPLSOamLspPingCtlEntry and wwpLeosMPLSOamLspPingResultsEntry. The value of this object MUST be reported as 0 when no probe responses have been received.')
wwpLeosMPLSOamLspTraceRouteCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5), )
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlTable.setDescription('Defines the Remote Operations Traceroute Control Table for providing the capability of invoking traceroute from a remote host. The results of traceroute operations can be stored in the wwpLeosMPLSOamLspTraceRouteResultsTable, wwpLeosMPLSOamLspTraceRouteHopsTable.')
wwpLeosMPLSOamLspTraceRouteCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspTraceRouteCtlIndex"))
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlEntry.setDescription('Defines an entry in the wwpLeosMPLSOamLspTraceRouteCtlTable.')
wwpLeosMPLSOamLspTraceRouteCtlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlIndex.setDescription('This mib object is used as index in the table.')
wwpLeosMPLSOamLspTraceRouteCtlLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 2), LspType().clone('rsvpTeTunnel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlLspType.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlLspType.setDescription('Specifies the type of LSP.')
wwpLeosMPLSOamLspTraceRouteCtlLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlLspName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlLspName.setDescription('Specifies the LSP Name. A value for this object MUST be set prior to transitioning its corresponding wwpLeosMPLSOamLspTraceRouteCtlEntry to active(1) via wwpLeosMPLSOamLspTraceRouteCtlRowStatus.')
wwpLeosMPLSOamLspTraceRouteCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlTimeOut.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlTimeOut.setDescription('Specifies the time-out value, in seconds, for a traceroute request.')
wwpLeosMPLSOamLspTraceRouteCtlMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.setDescription('Specifies the maximum time-to-live value.')
wwpLeosMPLSOamLspTraceRouteCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlAdminStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlAdminStatus.setDescription('Reflects the desired state that an wwpLeosMPLSOamLspTraceRouteCtlEntry should be in: enabled(1) - Attempt to activate the test as defined by this wwpLeosMPLSOamLspTraceRouteCtlEntry. disabled(2) - Deactivate the test as defined by this wwpLeosMPLSOamLspTraceRouteCtlEntry. Refer to the corresponding wwpLeosMPLSOamLspTraceRouteResultsOperStatus to determine the operational state of the test defined by this entry.')
wwpLeosMPLSOamLspTraceRouteCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlRowStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteCtlRowStatus.setDescription('This object allows entries to be created and deleted in the wwpLeosMPLSOamLspTraceRouteCtlTable. Deletion of an entry in this table results in all corresponding wwpLeosMPLSOamLspTraceRouteResultsTable and wwpLeosMPLSOamLspTraceRouteHopsTable entries being deleted.')
wwpLeosMPLSOamLspTraceRouteResultsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 6), )
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsTable.setDescription('Defines the Remote Operations Traceroute Results Table for keeping track of the status of a wwpLeosMPLSOamLspTraceRouteCtlEntry. An entry is added to the wwpLeosMPLSOamLspTraceRouteResultsTable when an wwpLeosMPLSOamLspTraceRouteCtlEntry is started by successful transition of its wwpLeosMPLSOamLspTraceRouteCtlAdminStatus object to enabled(1). An entry is removed from the wwpLeosMPLSOamLspTraceRouteResultsTable when its corresponding wwpLeosMPLSOamLspTraceRouteCtlEntry is deleted.')
wwpLeosMPLSOamLspTraceRouteResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 6, 1), ).setIndexNames((0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspTraceRouteCtlIndex"))
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsEntry.setDescription('Defines an entry in the wwpLeosMPLSOamLspTraceRouteResultsTable.')
wwpLeosMPLSOamLspTraceRouteResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsOperStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsOperStatus.setDescription('Reflects the operational state of an wwpLeosMPLSOamLspTraceRouteCtlEntry: enabled(1) - Test is active. disabled(2) - Test has stopped.')
wwpLeosMPLSOamLspTraceRouteResultsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("success", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsStatus.setDescription('Reflects the final status of an wwpLeosMPLSOamLspTraceRouteCtlEntry.')
wwpLeosMPLSOamLspTraceRouteResultsCurHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 6, 1, 3), Gauge32()).setUnits('hops').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsCurHopCount.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteResultsCurHopCount.setDescription('Reflects the current TTL value (range from 1 to 255) for a remote traceroute operation. Maximum TTL value is determined by wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.')
wwpLeosMPLSOamLspTraceRouteHopTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 7), )
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopTable.setDescription('Defines the Remote Operations Traceroute Results Table for storing the results of a traceroute operation. An implementation of this MIB will remove the oldest entry in the wwpLeosMPLSOamTraceRouteProbeHistoryTable to allow the addition of an new entry once the number of rows in the wwpLeosMPLSOamTraceRouteProbeHistoryTable reaches the value specified by wwpLeosMPLSOamTraceRouteCtlMaxRows.')
wwpLeosMPLSOamLspTraceRouteHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 7, 1), ).setIndexNames((0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspTraceRouteCtlIndex"), (0, "WWP-LEOS-MPLS-OAM-MIB", "wwpLeosMPLSOamLspTraceRouteHopIndex"))
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopEntry.setDescription('Defines a table for storing the results of a traceroute operation. Entries in this table are limited by the value of the corresponding wwpLeosMPLSOamLspTraceRouteCtlMaxRows object. The first two index elements identify the wwpLeosMPLSOamLspTraceRouteCtlEntry that a wwpLeosMPLSOamLspTraceRouteProbeHistoryEntry belongs to. The third index element selects a single traceroute operation result. The fourth and fifth indexes select the hop and the probe for a particular traceroute operation.')
wwpLeosMPLSOamLspTraceRouteHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setUnits('hops').setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopIndex.setDescription('Reflects the current TTL value (range from 1 to 255) for a remote traceroute operation. Maximum TTL value is determined by wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.')
wwpLeosMPLSOamLspTraceRouteHopIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopIp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopIp.setDescription('Reflects the current TTL value (range from 1 to 255) for a remote traceroute operation. Maximum TTL value is determined by wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.')
wwpLeosMPLSOamLspTraceRouteHopLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 36, 1, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopLabel.setStatus('current')
if mibBuilder.loadTexts: wwpLeosMPLSOamLspTraceRouteHopLabel.setDescription('Reflects the current TTL value (range from 1 to 255) for a remote traceroute operation. Maximum TTL value is determined by wwpLeosMPLSOamLspTraceRouteCtlMaxTtl.')
mibBuilder.exportSymbols("WWP-LEOS-MPLS-OAM-MIB", wwpLeosMPLSOamLspPingCtlAdminState=wwpLeosMPLSOamLspPingCtlAdminState, wwpLeosMPLSOamLspTraceRouteHopIp=wwpLeosMPLSOamLspTraceRouteHopIp, wwpLeosMPLSOamLspPingResultsMinRtt=wwpLeosMPLSOamLspPingResultsMinRtt, wwpLeosMPLSOamLspPingResultsEntry=wwpLeosMPLSOamLspPingResultsEntry, wwpLeosMPLSOamLspPingCtlLspName=wwpLeosMPLSOamLspPingCtlLspName, wwpLeosMPLSOamLspTraceRouteHopEntry=wwpLeosMPLSOamLspTraceRouteHopEntry, wwpLeosMPLSOamLspPingCtlRowStatus=wwpLeosMPLSOamLspPingCtlRowStatus, wwpLeosMPLSOamLspPingResultsProbeResponses=wwpLeosMPLSOamLspPingResultsProbeResponses, wwpLeosMPLSOamLspTraceRouteCtlIndex=wwpLeosMPLSOamLspTraceRouteCtlIndex, wwpLeosMPLSOamLspPingCtlIndex=wwpLeosMPLSOamLspPingCtlIndex, wwpLeosMPLSOamLspTraceRouteHopTable=wwpLeosMPLSOamLspTraceRouteHopTable, wwpLeosMPLSOamObjects=wwpLeosMPLSOamObjects, wwpLeosMPLSOamLspPingResultsMaxRtt=wwpLeosMPLSOamLspPingResultsMaxRtt, wwpLeosMPLSOamLspTraceRouteCtlRowStatus=wwpLeosMPLSOamLspTraceRouteCtlRowStatus, wwpLeosMPLSOAMLspTraceRtMax=wwpLeosMPLSOAMLspTraceRtMax, wwpLeosMPLSOamLspPingResultsAverageRtt=wwpLeosMPLSOamLspPingResultsAverageRtt, wwpLeosMPLSOamLspTraceRouteCtlMaxTtl=wwpLeosMPLSOamLspTraceRouteCtlMaxTtl, wwpLeosMPLSOamLspTraceRouteCtlTable=wwpLeosMPLSOamLspTraceRouteCtlTable, wwpLeosMPLSOamLspPingCtlPktSize=wwpLeosMPLSOamLspPingCtlPktSize, wwpLeosMPLSOamLspPingCtlEntry=wwpLeosMPLSOamLspPingCtlEntry, wwpLeosMPLSOamNotifications=wwpLeosMPLSOamNotifications, wwpLeosMPLSOamLspTraceRouteResultsTable=wwpLeosMPLSOamLspTraceRouteResultsTable, LspPingReturnCode=LspPingReturnCode, wwpLeosMPLSOamLspTraceRouteCtlAdminStatus=wwpLeosMPLSOamLspTraceRouteCtlAdminStatus, OperationResponseStatus=OperationResponseStatus, wwpLeosMPLSOamLspPingResultsTable=wwpLeosMPLSOamLspPingResultsTable, wwpLeosMPLSOamLspTraceRouteResultsCurHopCount=wwpLeosMPLSOamLspTraceRouteResultsCurHopCount, wwpLeosMPLSOamLspPingCtlLspType=wwpLeosMPLSOamLspPingCtlLspType, PYSNMP_MODULE_ID=wwpLeosMPLSOamMIB, wwpLeosMPLSOamLspPingCtlTable=wwpLeosMPLSOamLspPingCtlTable, wwpLeosMPLSOamLspPingResultsStatus=wwpLeosMPLSOamLspPingResultsStatus, wwpLeosMPLSOamLspTraceRouteCtlLspType=wwpLeosMPLSOamLspTraceRouteCtlLspType, wwpLeosMPLSOamLspTraceRouteCtlLspName=wwpLeosMPLSOamLspTraceRouteCtlLspName, LspType=LspType, wwpLeosMPLSOamMIB=wwpLeosMPLSOamMIB, wwpLeosMPLSOamLspTraceRouteCtlTimeOut=wwpLeosMPLSOamLspTraceRouteCtlTimeOut, wwpLeosMPLSOamLspPingResultsLspType=wwpLeosMPLSOamLspPingResultsLspType, wwpLeosMPLSOamLspTraceRouteResultsOperStatus=wwpLeosMPLSOamLspTraceRouteResultsOperStatus, wwpLeosMPLSOamLspPingCtlCount=wwpLeosMPLSOamLspPingCtlCount, wwpLeosMPLSOAMLspPingMax=wwpLeosMPLSOAMLspPingMax, wwpLeosMPLSOamLspPingResultsLspName=wwpLeosMPLSOamLspPingResultsLspName, wwpLeosMPLSOamLspPingResultsProbesSent=wwpLeosMPLSOamLspPingResultsProbesSent, wwpLeosMPLSOamLspTraceRouteResultsEntry=wwpLeosMPLSOamLspTraceRouteResultsEntry, wwpLeosMPLSOamLspPingCtlTimeOut=wwpLeosMPLSOamLspPingCtlTimeOut, wwpLeosMPLSOamLspTraceRouteHopIndex=wwpLeosMPLSOamLspTraceRouteHopIndex, wwpLeosMPLSOamLspTraceRouteResultsStatus=wwpLeosMPLSOamLspTraceRouteResultsStatus, wwpLeosMPLSOamLspTraceRouteCtlEntry=wwpLeosMPLSOamLspTraceRouteCtlEntry, wwpLeosMPLSOamLspPingResultsOperStatus=wwpLeosMPLSOamLspPingResultsOperStatus, wwpLeosMPLSOamLspTraceRouteHopLabel=wwpLeosMPLSOamLspTraceRouteHopLabel, wwpLeosMPLSOamLspPingCtlTtl=wwpLeosMPLSOamLspPingCtlTtl, wwpLeosMPLSOamConformance=wwpLeosMPLSOamConformance)
