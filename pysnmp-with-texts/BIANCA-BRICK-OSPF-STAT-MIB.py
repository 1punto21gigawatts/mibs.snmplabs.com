#
# PySNMP MIB module BIANCA-BRICK-OSPF-STAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-OSPF-ERR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:38:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, IpAddress, Counter64, MibIdentifier, NotificationType, ModuleIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, enterprises, Counter32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "Counter64", "MibIdentifier", "NotificationType", "ModuleIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "enterprises", "Counter32", "Integer32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
biboip = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5))
ospfStat = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 5, 10))
ospfStatHelloRecv = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatHelloRecv.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatHelloRecv.setDescription('Counts the number of Hello packets received.')
ospfStatHelloSent = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatHelloSent.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatHelloSent.setDescription('Counts the number of Hello packets sent.')
ospfStatDdRecv = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatDdRecv.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatDdRecv.setDescription('Counts the number of Database Description packets received.')
ospfStatDdSent = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatDdSent.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatDdSent.setDescription('Counts the number of Database Description packets sent.')
ospfStatLsackRecv = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsackRecv.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsackRecv.setDescription('Counts the number of Link State Acknowledge packets received.')
ospfStatLsackSent = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsackSent.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsackSent.setDescription('Counts the number of Link State Acknowledge packets sent.')
ospfStatLsreqRecv = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsreqRecv.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsreqRecv.setDescription('Counts the number of Link State Request packets received.')
ospfStatLsreqSent = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsreqSent.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsreqSent.setDescription('Counts the number of Link State Request packets sent')
ospfStatLsupdRecv = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsupdRecv.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsupdRecv.setDescription('Counts the number of Link State Update packets received.')
ospfStatLsupdSent = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatLsupdSent.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatLsupdSent.setDescription('Counts the number of Link State Update packets sent.')
ospfStatSummaryIncUpd = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatSummaryIncUpd.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatSummaryIncUpd.setDescription('Counts the number of incremental routing table updates performed due to reception of new Summary Links Advertisments.')
ospfStatExternalIncUpd = MibScalar((1, 3, 6, 1, 4, 1, 272, 4, 5, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfStatExternalIncUpd.setStatus('mandatory')
if mibBuilder.loadTexts: ospfStatExternalIncUpd.setDescription('Counts the number of incremental routing table updates performed due to reception of new External Advertisments.')
mibBuilder.exportSymbols("BIANCA-BRICK-OSPF-STAT-MIB", ospfStatDdSent=ospfStatDdSent, ospfStatLsackSent=ospfStatLsackSent, bibo=bibo, ospfStatHelloRecv=ospfStatHelloRecv, ospfStatHelloSent=ospfStatHelloSent, ospfStatLsupdRecv=ospfStatLsupdRecv, bintec=bintec, ospfStatLsupdSent=ospfStatLsupdSent, ospfStatDdRecv=ospfStatDdRecv, ospfStatLsackRecv=ospfStatLsackRecv, ospfStatLsreqRecv=ospfStatLsreqRecv, ospfStatExternalIncUpd=ospfStatExternalIncUpd, biboip=biboip, ospfStatSummaryIncUpd=ospfStatSummaryIncUpd, ospfStat=ospfStat, ospfStatLsreqSent=ospfStatLsreqSent)
