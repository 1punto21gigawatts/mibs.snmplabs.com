#
# PySNMP MIB module ISLVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISLVLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:57:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
OwnerString, = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, NotificationType, Counter64, TimeTicks, IpAddress, MibIdentifier, Gauge32, Integer32, enterprises, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "NotificationType", "Counter64", "TimeTicks", "IpAddress", "MibIdentifier", "Gauge32", "Integer32", "enterprises", "ModuleIdentity", "ObjectIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 4))
islVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 4, 9))
if mibBuilder.loadTexts: islVlanMIB.setLastUpdated('')
if mibBuilder.loadTexts: islVlanMIB.setOrganization('Hewlett-Packard NetMetrix Division')
if mibBuilder.loadTexts: islVlanMIB.setContactInfo('NetMetrix Division Hewlett-Packard Company 5070 Centennial Blvd Colorado Springs, CO 80919')
if mibBuilder.loadTexts: islVlanMIB.setDescription('The MIB module to configure Cisco ISL VLAN monitoring.')
islVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1))
islVlanControlTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1), )
if mibBuilder.loadTexts: islVlanControlTable.setStatus('current')
if mibBuilder.loadTexts: islVlanControlTable.setDescription('A list ISL VLAN control entries, one for each 100BaseT interface. This table should survive warm-boots and power losses.')
islVlanControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1), ).setIndexNames((0, "ISLVLAN-MIB", "islVlanControlIndex"))
if mibBuilder.loadTexts: islVlanControlEntry.setStatus('current')
if mibBuilder.loadTexts: islVlanControlEntry.setDescription('An entry that controls the ISL behavior on a particular 100BaseT interface.')
islVlanControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: islVlanControlIndex.setStatus('current')
if mibBuilder.loadTexts: islVlanControlIndex.setDescription('The value of this object uniquely identifies this islVlanControlTable entry.')
islVlanControlDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: islVlanControlDataSource.setStatus('current')
if mibBuilder.loadTexts: islVlanControlDataSource.setDescription('This contains the OID of the ifIndex of the interface this entry controls. The corresponding ifType ethernetCsmacd(6).')
islVlanControlVtpDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlVtpDomain.setStatus('current')
if mibBuilder.loadTexts: islVlanControlVtpDomain.setDescription('The IP address of the Cisco VTP server of VLANs monitored by this interface.')
islVlanControlVtpCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlVtpCommunity.setStatus('current')
if mibBuilder.loadTexts: islVlanControlVtpCommunity.setDescription('The SNMP community string for the Cisco VTP server of VLANs monitored by this interface.')
islVlanControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("explicitOnly", 2), ("implicitCreate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanControlEnable.setStatus('current')
if mibBuilder.loadTexts: islVlanControlEnable.setDescription("Indicate the behavior for processing ISL VLAN packets. A value of disabled(1) means that no per-VLAN monitoring happens on this interface. A value of explicitlyOnly(2) means that only VLANs that correspond to an islVlanEntry that was explicitly created by a management application. If the probe sees an ISL packet that doesn't correspond to an explicitly created islVlanEntry, the probe will not process the packet in any per-VLAN tables. A value of implicitCreate(3) means that a new islVlanEntry is automatically created when a ISL packet is seen with an unknown VLAN ID.")
islVlanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2), )
if mibBuilder.loadTexts: islVlanTable.setStatus('current')
if mibBuilder.loadTexts: islVlanTable.setDescription('The ISL VLAN able stores the information needed to monitor Cisco ISL VLAN traffic on an inter-switch trunk line. This table should survive warm-boots and power losses.')
islVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1), ).setIndexNames((0, "ISLVLAN-MIB", "islVlanIndex"))
if mibBuilder.loadTexts: islVlanEntry.setStatus('current')
if mibBuilder.loadTexts: islVlanEntry.setDescription('An entry in the islVlanTable. An entry can be created two ways. A management application can explicitly create an entry. Or, an entry can be automatically created if an unknown ISL ID is seen on an interface (see islVlanControlEnable.)')
islVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: islVlanIndex.setStatus('current')
if mibBuilder.loadTexts: islVlanIndex.setDescription('The value of this object uniquely identifies this islVlanTable entry.')
islVlanControlEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanControlEntryIndex.setStatus('current')
if mibBuilder.loadTexts: islVlanControlEntryIndex.setDescription('Indicates the islVlanControlIndex of the corresponding islVlanControlEntry.')
islVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanId.setStatus('current')
if mibBuilder.loadTexts: islVlanId.setDescription('The value of this object ISL VLAN ID for this particular VLAN on this interface.')
islVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: islVlanIfIndex.setStatus('current')
if mibBuilder.loadTexts: islVlanIfIndex.setDescription('A unique identifier associated with this islVlanTable entry. This value should not be same as any existing or future ifIndex/pvcIndex value. This value must remain constant from when its creation until its explicit deletion.')
islVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanName.setStatus('current')
if mibBuilder.loadTexts: islVlanName.setDescription("This contains the VLAN name. If the entry was created automatically by the probe, its value is `unknown VLAN <ID>'. A management application is free to change this name at any time. ")
islVlanMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanMtu.setStatus('current')
if mibBuilder.loadTexts: islVlanMtu.setDescription('The maximum transmission unit size for this VLAN. If this was created automatically, this value not be known and should be set to 0.')
islVlanOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 7), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: islVlanOwner.setStatus('current')
if mibBuilder.loadTexts: islVlanOwner.setDescription("The entity that configured this entry. If this was automatically created by the probe, the value is `monitor'.")
islVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 4, 9, 1, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: islVlanStatus.setStatus('current')
if mibBuilder.loadTexts: islVlanStatus.setDescription('The status of this islVlanTable entry.')
mibBuilder.exportSymbols("ISLVLAN-MIB", islVlanControlEntry=islVlanControlEntry, islVlanId=islVlanId, interface=interface, islVlanMtu=islVlanMtu, islVlanIfIndex=islVlanIfIndex, islVlanControlIndex=islVlanControlIndex, islVlanIndex=islVlanIndex, islVlanControlVtpDomain=islVlanControlVtpDomain, islVlanMIBObjects=islVlanMIBObjects, islVlanControlTable=islVlanControlTable, nm=nm, islVlanEntry=islVlanEntry, islVlanControlDataSource=islVlanControlDataSource, islVlanStatus=islVlanStatus, islVlanName=islVlanName, islVlanControlEntryIndex=islVlanControlEntryIndex, islVlanOwner=islVlanOwner, islVlanControlVtpCommunity=islVlanControlVtpCommunity, islVlanMIB=islVlanMIB, hp=hp, islVlanTable=islVlanTable, islVlanControlEnable=islVlanControlEnable, PYSNMP_MODULE_ID=islVlanMIB)
