#
# PySNMP MIB module LOWPAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LOWPAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:08:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
mib_2, iso, MibIdentifier, Unsigned32, Bits, ObjectIdentity, NotificationType, Counter64, Counter32, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "iso", "MibIdentifier", "Unsigned32", "Bits", "ObjectIdentity", "NotificationType", "Counter64", "Counter32", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lowpanMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 226))
lowpanMIB.setRevisions(('2014-10-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lowpanMIB.setRevisionsDescriptions(('Initial version, published as RFC 7388.',))
if mibBuilder.loadTexts: lowpanMIB.setLastUpdated('201410100000Z')
if mibBuilder.loadTexts: lowpanMIB.setOrganization('IETF IPv6 over Networks of Resource-constrained Nodes Working Group')
if mibBuilder.loadTexts: lowpanMIB.setContactInfo('WG Email: 6lo@ietf.org WG Web: http://tools.ietf.org/wg/6lo/ Juergen Schoenwaelder Jacobs University Bremen Email: j.schoenwaelder@jacobs-university.de Anuj Sehgal Jacobs University Bremen Email: s.anuj@jacobs-university.de Tina Tsou Huawei Technologies Email: tina.tsou.zouting@huawei.com Cathy Zhou Huawei Technologies Email: cathyzhou@huawei.com')
if mibBuilder.loadTexts: lowpanMIB.setDescription("The MIB module for monitoring nodes implementing the IPv6 over Low-Power Wireless Personal Area Networks (6LoWPAN) protocol. Copyright (c) 2014 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).")
lowpanNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 0))
lowpanObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 1))
lowpanConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 2))
lowpanStats = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 1, 1))
lowpanReasmTimeout = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanReasmTimeout.setStatus('current')
if mibBuilder.loadTexts: lowpanReasmTimeout.setDescription('The maximum number of seconds that received fragments are held while they are awaiting reassembly at this entity.')
lowpanInReceives = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInReceives.setStatus('current')
if mibBuilder.loadTexts: lowpanInReceives.setDescription('The total number of 6LoWPAN datagrams received, including those received in error.')
lowpanInHdrErrors = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInHdrErrors.setStatus('current')
if mibBuilder.loadTexts: lowpanInHdrErrors.setDescription('The number of received 6LoWPAN datagrams discarded due to errors in their headers, including unknown dispatch values.')
lowpanInMeshReceives = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInMeshReceives.setStatus('current')
if mibBuilder.loadTexts: lowpanInMeshReceives.setDescription('The number of received 6LoWPAN datagrams with a MESH header.')
lowpanInMeshForwds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInMeshForwds.setStatus('current')
if mibBuilder.loadTexts: lowpanInMeshForwds.setDescription('The number of received 6LoWPAN datagrams requiring mesh forwarding.')
lowpanInMeshDelivers = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInMeshDelivers.setStatus('current')
if mibBuilder.loadTexts: lowpanInMeshDelivers.setDescription('The number of received 6LoWPAN datagrams with a MESH header delivered to the local system.')
lowpanInReasmReqds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInReasmReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanInReasmReqds.setDescription('The number of received 6LoWPAN fragments that needed to be reassembled. This includes both FRAG1 and FRAGN 6LoWPAN datagrams.')
lowpanInReasmFails = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInReasmFails.setStatus('current')
if mibBuilder.loadTexts: lowpanInReasmFails.setDescription('The number of failures detected by the re-assembly algorithm (e.g., timeouts). Note that this is not necessarily a count of discarded 6LoWPAN fragments since implementations can lose track of the number of fragments by combining them as received.')
lowpanInReasmOKs = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInReasmOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanInReasmOKs.setDescription('The number of IPv6 packets successfully reassembled.')
lowpanInCompReqds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInCompReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanInCompReqds.setDescription('The number of 6LoWPAN datagrams requiring header decompression.')
lowpanInCompFails = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInCompFails.setStatus('current')
if mibBuilder.loadTexts: lowpanInCompFails.setDescription('The number of 6LoWPAN datagrams where header decompression failed (e.g., because the necessary context information was not available).')
lowpanInCompOKs = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInCompOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanInCompOKs.setDescription('The number of 6LoWPAN datagrams where header decompression was successful.')
lowpanInDiscards = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInDiscards.setStatus('current')
if mibBuilder.loadTexts: lowpanInDiscards.setDescription('The number of received 6LoWPAN datagrams that were discarded (e.g., for lack of buffer space) even though no problems were encountered to prevent their continued processing. Note that this counter does not include any datagrams discarded due to a reassembly failure or a compression failure.')
lowpanInDelivers = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanInDelivers.setStatus('current')
if mibBuilder.loadTexts: lowpanInDelivers.setDescription('The total number of IPv6 packets successfully delivered to the IPv6 layer.')
lowpanOutRequests = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutRequests.setStatus('current')
if mibBuilder.loadTexts: lowpanOutRequests.setDescription('The total number of IPv6 packets supplied by the IPv6 layer.')
lowpanOutCompReqds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutCompReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanOutCompReqds.setDescription('The total number of IPv6 packets for which header compression was attempted.')
lowpanOutCompFails = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutCompFails.setStatus('current')
if mibBuilder.loadTexts: lowpanOutCompFails.setDescription('The total number of IPv6 packets for which header compression failed.')
lowpanOutCompOKs = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutCompOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanOutCompOKs.setDescription('The total number of IPv6 packets for which header compression was successful.')
lowpanOutFragReqds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutFragReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanOutFragReqds.setDescription('The number of IPv6 packets that required fragmentation in order to be transmitted.')
lowpanOutFragFails = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutFragFails.setStatus('current')
if mibBuilder.loadTexts: lowpanOutFragFails.setDescription('The number of IPv6 packets that have been discarded because fragmentation failed.')
lowpanOutFragOKs = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutFragOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanOutFragOKs.setDescription('The number of IPv6 packets that have been successfully fragmented.')
lowpanOutFragCreates = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutFragCreates.setStatus('current')
if mibBuilder.loadTexts: lowpanOutFragCreates.setDescription('The number of 6LoWPAN fragments that have been generated as a result of fragmentation. This includes both FRAG1 and FRAGN 6LoWPAN datagrams.')
lowpanOutMeshHopLimitExceeds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutMeshHopLimitExceeds.setStatus('current')
if mibBuilder.loadTexts: lowpanOutMeshHopLimitExceeds.setDescription('The number of 6LoWPAN datagrams with a MESH header that were dropped because the hop limit was exceeded.')
lowpanOutMeshNoRoutes = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutMeshNoRoutes.setStatus('current')
if mibBuilder.loadTexts: lowpanOutMeshNoRoutes.setDescription('The number of 6LoWPAN datagrams with a MESH header that were dropped because there was no forwarding information available.')
lowpanOutMeshRequests = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutMeshRequests.setStatus('current')
if mibBuilder.loadTexts: lowpanOutMeshRequests.setDescription('The number of 6LoWPAN datagrams requiring MESH header encapsulation.')
lowpanOutMeshForwds = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutMeshForwds.setStatus('current')
if mibBuilder.loadTexts: lowpanOutMeshForwds.setDescription('The number of 6LoWPAN datagrams with a MESH header for which suitable forwarding information was available.')
lowpanOutMeshTransmits = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutMeshTransmits.setStatus('current')
if mibBuilder.loadTexts: lowpanOutMeshTransmits.setDescription('The number of 6LoWPAN datagrams with a MESH header created.')
lowpanOutDiscards = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutDiscards.setStatus('current')
if mibBuilder.loadTexts: lowpanOutDiscards.setDescription('The number of IPv6 packets that were discarded (e.g., for lack of buffer space) even though no problem was encountered to prevent their transmission to their destination.')
lowpanOutTransmits = MibScalar((1, 3, 6, 1, 2, 1, 226, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanOutTransmits.setStatus('current')
if mibBuilder.loadTexts: lowpanOutTransmits.setDescription('The total number of 6LoWPAN datagram that this entity supplied to the lower layers for transmission.')
lowpanIfStatsTable = MibTable((1, 3, 6, 1, 2, 1, 226, 1, 2), )
if mibBuilder.loadTexts: lowpanIfStatsTable.setStatus('current')
if mibBuilder.loadTexts: lowpanIfStatsTable.setDescription('A table providing per-interface statistics.')
lowpanIfStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 226, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: lowpanIfStatsEntry.setStatus('current')
if mibBuilder.loadTexts: lowpanIfStatsEntry.setDescription('An entry providing statistics for a specific interface.')
lowpanIfReasmTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfReasmTimeout.setStatus('current')
if mibBuilder.loadTexts: lowpanIfReasmTimeout.setDescription('The maximum number of seconds that received fragments are held while they are awaiting reassembly at this interface.')
lowpanIfInReceives = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInReceives.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInReceives.setDescription('The total number of 6LoWPAN datagrams received on this interface, including those received in error.')
lowpanIfInHdrErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInHdrErrors.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInHdrErrors.setDescription('The number of 6LoWPAN datagrams received on this interface that were discarded due to errors in their headers, including unknown dispatch values.')
lowpanIfInMeshReceives = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInMeshReceives.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInMeshReceives.setDescription('The number of 6LoWPAN datagrams received on this interface with a MESH header.')
lowpanIfInMeshForwds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInMeshForwds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInMeshForwds.setDescription('The number of 6LoWPAN datagrams received on this interface requiring mesh forwarding.')
lowpanIfInMeshDelivers = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInMeshDelivers.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInMeshDelivers.setDescription('The number of 6LoWPAN datagrams received on this interface with a MESH header delivered to the local system.')
lowpanIfInReasmReqds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInReasmReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInReasmReqds.setDescription('The number of 6LoWPAN fragments received on this interface that needed to be reassembled. This includes both FRAG1 and FRAGN 6LoWPAN datagrams.')
lowpanIfInReasmFails = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInReasmFails.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInReasmFails.setDescription('The number of failures detected by the reassembly algorithm (e.g., timeouts) for datagrams received on this interface. Note that this is not necessarily a count of discarded 6LoWPAN fragments since implementations can lose track of the number of fragments by combining them as received.')
lowpanIfInReasmOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInReasmOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInReasmOKs.setDescription('The number of IPv6 packets successfully reassembled from fragments received on this interface.')
lowpanIfInCompReqds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInCompReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInCompReqds.setDescription('The number of 6LoWPAN datagrams received on this interface requiring header decompression.')
lowpanIfInCompFails = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInCompFails.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInCompFails.setDescription('The number of 6LoWPAN datagrams received on this interface where header decompression failed (e.g., because the necessary context information was not available).')
lowpanIfInCompOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInCompOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInCompOKs.setDescription('The number of 6LoWPAN datagrams received on this interface where header decompression was successful.')
lowpanIfInDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInDiscards.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInDiscards.setDescription('The number of 6LoWPAN datagrams received on this interface that were discarded (e.g., for lack of buffer space) even though no problems were encountered to prevent their continued processing. Note that this counter does not include any datagrams discarded due to a reassembly failure or a compression failure.')
lowpanIfInDelivers = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfInDelivers.setStatus('current')
if mibBuilder.loadTexts: lowpanIfInDelivers.setDescription('The total number of IPv6 packets received on this interface that were successfully delivered to the IPv6 layer.')
lowpanIfOutRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutRequests.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutRequests.setDescription('The total number of IPv6 packets supplied by the IPv6 layer to be sent over this interface.')
lowpanIfOutCompReqds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutCompReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutCompReqds.setDescription('The total number of IPv6 packets to be sent over this interface for which header compression was attempted.')
lowpanIfOutCompFails = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutCompFails.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutCompFails.setDescription('The total number of IPv6 packets to be sent over this interface for which header compression failed.')
lowpanIfOutCompOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutCompOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutCompOKs.setDescription('The total number of IPv6 packets to be sent over this interface for which header compression was successful.')
lowpanIfOutFragReqds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutFragReqds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutFragReqds.setDescription('The number of IPv6 packets to be sent over this interface that required fragmentation in order to be transmitted.')
lowpanIfOutFragFails = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutFragFails.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutFragFails.setDescription('The number of IPv6 packets to be sent over this interface that have been discarded because fragmentation failed.')
lowpanIfOutFragOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutFragOKs.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutFragOKs.setDescription('The number of IPv6 packets to be sent over this interface that have been successfully fragmented.')
lowpanIfOutFragCreates = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutFragCreates.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutFragCreates.setDescription('The number of 6LoWPAN fragments that have been generated on this interface as a result of fragmentation. This includes both FRAG1 and FRAGN 6LoWPAN datagrams.')
lowpanIfOutMeshHopLimitExceeds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutMeshHopLimitExceeds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutMeshHopLimitExceeds.setDescription('The number of 6LoWPAN datagrams to be sent on this interface with a MESH header that were dropped because the hop limit was exceeded.')
lowpanIfOutMeshNoRoutes = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutMeshNoRoutes.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutMeshNoRoutes.setDescription('The number of 6LoWPAN datagrams to be sent on this interface with a MESH header that were dropped because there was no forwarding information available.')
lowpanIfOutMeshRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutMeshRequests.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutMeshRequests.setDescription('The number of 6LoWPAN datagrams to be sent on this interface requiring MESH header encapsulation.')
lowpanIfOutMeshForwds = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutMeshForwds.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutMeshForwds.setDescription('The number of 6LoWPAN datagrams to be sent on this interface with a MESH header for which suitable forwarding information was available.')
lowpanIfOutMeshTransmits = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutMeshTransmits.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutMeshTransmits.setDescription('The number of 6LoWPAN datagrams to be sent on this interface with a MESH header created.')
lowpanIfOutDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutDiscards.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutDiscards.setDescription('The number of IPv6 packets to be sent over this interface that were discarded (e.g., for lack of buffer space) even though no problem was encountered to prevent their transmission to their destination.')
lowpanIfOutTransmits = MibTableColumn((1, 3, 6, 1, 2, 1, 226, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lowpanIfOutTransmits.setStatus('current')
if mibBuilder.loadTexts: lowpanIfOutTransmits.setDescription('The total number of 6LoWPAN datagrams to be sent on this interface that this entity supplied to the lower layers for transmission.')
lowpanGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 2, 1))
lowpanCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 226, 2, 2))
lowpanCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 226, 2, 2, 1)).setObjects(("LOWPAN-MIB", "lowpanStatsGroup"), ("LOWPAN-MIB", "lowpanStatsMeshGroup"), ("LOWPAN-MIB", "lowpanIfStatsGroup"), ("LOWPAN-MIB", "lowpanIfStatsMeshGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lowpanCompliance = lowpanCompliance.setStatus('current')
if mibBuilder.loadTexts: lowpanCompliance.setDescription('Compliance statement for systems that implement 6LoWPAN.')
lowpanStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 226, 2, 1, 1)).setObjects(("LOWPAN-MIB", "lowpanReasmTimeout"), ("LOWPAN-MIB", "lowpanInReceives"), ("LOWPAN-MIB", "lowpanInHdrErrors"), ("LOWPAN-MIB", "lowpanInMeshReceives"), ("LOWPAN-MIB", "lowpanInReasmReqds"), ("LOWPAN-MIB", "lowpanInReasmFails"), ("LOWPAN-MIB", "lowpanInReasmOKs"), ("LOWPAN-MIB", "lowpanInCompReqds"), ("LOWPAN-MIB", "lowpanInCompFails"), ("LOWPAN-MIB", "lowpanInCompOKs"), ("LOWPAN-MIB", "lowpanInDiscards"), ("LOWPAN-MIB", "lowpanInDelivers"), ("LOWPAN-MIB", "lowpanOutRequests"), ("LOWPAN-MIB", "lowpanOutCompReqds"), ("LOWPAN-MIB", "lowpanOutCompFails"), ("LOWPAN-MIB", "lowpanOutCompOKs"), ("LOWPAN-MIB", "lowpanOutFragReqds"), ("LOWPAN-MIB", "lowpanOutFragFails"), ("LOWPAN-MIB", "lowpanOutFragOKs"), ("LOWPAN-MIB", "lowpanOutFragCreates"), ("LOWPAN-MIB", "lowpanOutDiscards"), ("LOWPAN-MIB", "lowpanOutTransmits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lowpanStatsGroup = lowpanStatsGroup.setStatus('current')
if mibBuilder.loadTexts: lowpanStatsGroup.setDescription('A collection of objects providing information and statistics about the processing of 6LoWPAN datagrams, excluding counters covering the processing of datagrams with a MESH header.')
lowpanStatsMeshGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 226, 2, 1, 2)).setObjects(("LOWPAN-MIB", "lowpanInMeshForwds"), ("LOWPAN-MIB", "lowpanInMeshDelivers"), ("LOWPAN-MIB", "lowpanOutMeshHopLimitExceeds"), ("LOWPAN-MIB", "lowpanOutMeshNoRoutes"), ("LOWPAN-MIB", "lowpanOutMeshRequests"), ("LOWPAN-MIB", "lowpanOutMeshForwds"), ("LOWPAN-MIB", "lowpanOutMeshTransmits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lowpanStatsMeshGroup = lowpanStatsMeshGroup.setStatus('current')
if mibBuilder.loadTexts: lowpanStatsMeshGroup.setDescription('A collection of objects providing information and statistics about the processing of 6LoWPAN datagrams with a MESH header.')
lowpanIfStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 226, 2, 1, 3)).setObjects(("LOWPAN-MIB", "lowpanIfReasmTimeout"), ("LOWPAN-MIB", "lowpanIfInReceives"), ("LOWPAN-MIB", "lowpanIfInHdrErrors"), ("LOWPAN-MIB", "lowpanIfInMeshReceives"), ("LOWPAN-MIB", "lowpanIfInReasmReqds"), ("LOWPAN-MIB", "lowpanIfInReasmFails"), ("LOWPAN-MIB", "lowpanIfInReasmOKs"), ("LOWPAN-MIB", "lowpanIfInCompReqds"), ("LOWPAN-MIB", "lowpanIfInCompFails"), ("LOWPAN-MIB", "lowpanIfInCompOKs"), ("LOWPAN-MIB", "lowpanIfInDiscards"), ("LOWPAN-MIB", "lowpanIfInDelivers"), ("LOWPAN-MIB", "lowpanIfOutRequests"), ("LOWPAN-MIB", "lowpanIfOutCompReqds"), ("LOWPAN-MIB", "lowpanIfOutCompFails"), ("LOWPAN-MIB", "lowpanIfOutCompOKs"), ("LOWPAN-MIB", "lowpanIfOutFragReqds"), ("LOWPAN-MIB", "lowpanIfOutFragFails"), ("LOWPAN-MIB", "lowpanIfOutFragOKs"), ("LOWPAN-MIB", "lowpanIfOutFragCreates"), ("LOWPAN-MIB", "lowpanIfOutDiscards"), ("LOWPAN-MIB", "lowpanIfOutTransmits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lowpanIfStatsGroup = lowpanIfStatsGroup.setStatus('current')
if mibBuilder.loadTexts: lowpanIfStatsGroup.setDescription('A collection of objects providing per-interface information and statistics about the processing of 6LoWPAN datagrams, excluding counters covering the processing of datagrams with a MESH header.')
lowpanIfStatsMeshGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 226, 2, 1, 4)).setObjects(("LOWPAN-MIB", "lowpanIfInMeshForwds"), ("LOWPAN-MIB", "lowpanIfInMeshDelivers"), ("LOWPAN-MIB", "lowpanIfOutMeshHopLimitExceeds"), ("LOWPAN-MIB", "lowpanIfOutMeshNoRoutes"), ("LOWPAN-MIB", "lowpanIfOutMeshRequests"), ("LOWPAN-MIB", "lowpanIfOutMeshForwds"), ("LOWPAN-MIB", "lowpanIfOutMeshTransmits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lowpanIfStatsMeshGroup = lowpanIfStatsMeshGroup.setStatus('current')
if mibBuilder.loadTexts: lowpanIfStatsMeshGroup.setDescription('A collection of objects providing per-interface information and statistics about the processing of 6LoWPAN datagrams with a MESH header.')
mibBuilder.exportSymbols("LOWPAN-MIB", lowpanMIB=lowpanMIB, lowpanOutMeshTransmits=lowpanOutMeshTransmits, lowpanIfInReasmReqds=lowpanIfInReasmReqds, lowpanOutCompOKs=lowpanOutCompOKs, lowpanIfOutCompReqds=lowpanIfOutCompReqds, lowpanIfOutCompOKs=lowpanIfOutCompOKs, lowpanIfOutMeshHopLimitExceeds=lowpanIfOutMeshHopLimitExceeds, lowpanInDiscards=lowpanInDiscards, lowpanIfInMeshForwds=lowpanIfInMeshForwds, lowpanIfOutFragCreates=lowpanIfOutFragCreates, lowpanIfStatsMeshGroup=lowpanIfStatsMeshGroup, lowpanIfInCompFails=lowpanIfInCompFails, lowpanIfStatsTable=lowpanIfStatsTable, lowpanIfStatsGroup=lowpanIfStatsGroup, lowpanInReasmReqds=lowpanInReasmReqds, lowpanOutTransmits=lowpanOutTransmits, lowpanIfOutMeshForwds=lowpanIfOutMeshForwds, lowpanInCompOKs=lowpanInCompOKs, lowpanOutRequests=lowpanOutRequests, lowpanIfInDelivers=lowpanIfInDelivers, lowpanIfOutMeshRequests=lowpanIfOutMeshRequests, lowpanIfOutTransmits=lowpanIfOutTransmits, lowpanOutMeshHopLimitExceeds=lowpanOutMeshHopLimitExceeds, lowpanCompliances=lowpanCompliances, lowpanIfInHdrErrors=lowpanIfInHdrErrors, lowpanOutMeshRequests=lowpanOutMeshRequests, lowpanCompliance=lowpanCompliance, lowpanStats=lowpanStats, lowpanObjects=lowpanObjects, lowpanIfInReasmFails=lowpanIfInReasmFails, lowpanIfOutFragReqds=lowpanIfOutFragReqds, lowpanIfOutMeshTransmits=lowpanIfOutMeshTransmits, lowpanNotifications=lowpanNotifications, lowpanInReasmOKs=lowpanInReasmOKs, lowpanIfOutDiscards=lowpanIfOutDiscards, lowpanOutFragFails=lowpanOutFragFails, lowpanIfInCompOKs=lowpanIfInCompOKs, lowpanInCompReqds=lowpanInCompReqds, lowpanStatsGroup=lowpanStatsGroup, lowpanOutCompReqds=lowpanOutCompReqds, lowpanIfOutMeshNoRoutes=lowpanIfOutMeshNoRoutes, lowpanInReasmFails=lowpanInReasmFails, lowpanIfOutFragFails=lowpanIfOutFragFails, lowpanOutFragOKs=lowpanOutFragOKs, lowpanInCompFails=lowpanInCompFails, lowpanIfStatsEntry=lowpanIfStatsEntry, lowpanIfInReasmOKs=lowpanIfInReasmOKs, lowpanOutCompFails=lowpanOutCompFails, lowpanIfInDiscards=lowpanIfInDiscards, lowpanIfOutCompFails=lowpanIfOutCompFails, lowpanInMeshDelivers=lowpanInMeshDelivers, lowpanIfInMeshReceives=lowpanIfInMeshReceives, lowpanOutMeshNoRoutes=lowpanOutMeshNoRoutes, lowpanInReceives=lowpanInReceives, lowpanReasmTimeout=lowpanReasmTimeout, lowpanOutMeshForwds=lowpanOutMeshForwds, lowpanIfOutFragOKs=lowpanIfOutFragOKs, lowpanStatsMeshGroup=lowpanStatsMeshGroup, lowpanGroups=lowpanGroups, lowpanInMeshForwds=lowpanInMeshForwds, lowpanIfOutRequests=lowpanIfOutRequests, lowpanOutFragCreates=lowpanOutFragCreates, lowpanIfInMeshDelivers=lowpanIfInMeshDelivers, lowpanOutFragReqds=lowpanOutFragReqds, lowpanIfReasmTimeout=lowpanIfReasmTimeout, PYSNMP_MODULE_ID=lowpanMIB, lowpanInHdrErrors=lowpanInHdrErrors, lowpanInDelivers=lowpanInDelivers, lowpanInMeshReceives=lowpanInMeshReceives, lowpanIfInReceives=lowpanIfInReceives, lowpanIfInCompReqds=lowpanIfInCompReqds, lowpanOutDiscards=lowpanOutDiscards, lowpanConformance=lowpanConformance)
