#
# PySNMP MIB module AP-MANAGEMENT (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AP-MANAGEMENT
# Produced by pysmi-0.3.4 at Wed May  1 11:22:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, enterprises, Integer32, NotificationType, Counter32, IpAddress, TimeTicks, ModuleIdentity, Unsigned32, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "enterprises", "Integer32", "NotificationType", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "iso")
TruthValue, RowStatus, DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "MacAddress", "TextualConvention")
pepwave = MibIdentifier((1, 3, 6, 1, 4, 1, 27662))
productID = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200))
apMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1))
apGeneralMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1))
ap_management_mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7)).setLabel("ap-management-mib")
if mibBuilder.loadTexts: ap_management_mib.setLastUpdated('2011102000Z')
if mibBuilder.loadTexts: ap_management_mib.setOrganization('PEPWAVE')
if mibBuilder.loadTexts: ap_management_mib.setContactInfo('')
if mibBuilder.loadTexts: ap_management_mib.setDescription('The MIB module for PEPWAVE Enterprise WiFi AP. iso(1).org(3).dod(6).internet(1).private(4). enterprises(1).pepwave(27662).productID(200).apMib(1).apGeneralMib(1).ap-management-mib(7)')
apWeb = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1))
apWebAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1))
apWebAccessProtocol = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("http", 0), ("https", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebAccessProtocol.setStatus('current')
if mibBuilder.loadTexts: apWebAccessProtocol.setDescription('This attribute indicates the web access protocol.')
apWebManagementPort = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebManagementPort.setStatus('current')
if mibBuilder.loadTexts: apWebManagementPort.setDescription('This attribute indicates the web management port Default is 443.')
apWebHttpRedirection = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebHttpRedirection.setStatus('current')
if mibBuilder.loadTexts: apWebHttpRedirection.setDescription('This attribute indicates the HTTP to HTTPS Redirection enable.')
apWebUsername = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebUsername.setStatus('current')
if mibBuilder.loadTexts: apWebUsername.setDescription('This attribute indicates the web user name.')
apWebPassword = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebPassword.setStatus('current')
if mibBuilder.loadTexts: apWebPassword.setDescription('This attribute indicates the ewb password.')
apWebAdministration = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apWebAdministration.setStatus('current')
if mibBuilder.loadTexts: apWebAdministration.setDescription('This attribute indicates the Web Admin Interface enable.')
apSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2))
apSnmpBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 1))
apSnmpName = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpName.setStatus('current')
if mibBuilder.loadTexts: apSnmpName.setDescription('This attribute indicates the SNMP server name.')
apSnmpV1Enable = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpV1Enable.setStatus('current')
if mibBuilder.loadTexts: apSnmpV1Enable.setDescription('This attribute indicates the enable status of SNMPv1.')
apSnmpV2Enable = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpV2Enable.setStatus('current')
if mibBuilder.loadTexts: apSnmpV2Enable.setDescription('This attribute indicates the enable status of SNMPv2.')
apSnmpV3Enable = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpV3Enable.setStatus('current')
if mibBuilder.loadTexts: apSnmpV3Enable.setDescription('This attribute indicates the enable status of SNMPv3.')
apSnmpTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 2))
apSnmpTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapEnable.setStatus('current')
if mibBuilder.loadTexts: apSnmpTrapEnable.setDescription('This attribute indicates the enable status of SNMP trap.')
apSnmpTrapName = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapName.setStatus('current')
if mibBuilder.loadTexts: apSnmpTrapName.setDescription('This attribute indicates the name of SNMP trap.')
apSnmpTrapIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpTrapIpAddress.setStatus('current')
if mibBuilder.loadTexts: apSnmpTrapIpAddress.setDescription('This attribute indicates the ip address of SNMP trap.')
apSnmpCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3), )
if mibBuilder.loadTexts: apSnmpCommunityTable.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityTable.setDescription('SNMP community table.')
apSnmpCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1), ).setIndexNames((0, "AP-MANAGEMENT", "apSnmpCommunityIndex"))
if mibBuilder.loadTexts: apSnmpCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityEntry.setDescription('An entry in the apSnmpCommunityTable.')
apSnmpCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSnmpCommunityIndex.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityIndex.setDescription('This attribute indicates the SNMP community index')
apSnmpCommunityRowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSnmpCommunityRowControl.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityRowControl.setDescription('The SNMP community status. Supported values: active(1) - valid entry notReady(3) - non-valid entry createAndGo(4) - used to create a new entry destroy(6) - removes the entry')
apSnmpCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityStatus.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityStatus.setDescription('This attribute indicates the enable status of SNMP community.')
apSnmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityName.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityName.setDescription('This attribute indicates the name of SNMP community.')
apSnmpCommunityIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityIpAddress.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityIpAddress.setDescription('This attribute indicates the ip address of SNMP community.')
apSnmpCommunityNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityNetmask.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityNetmask.setDescription('This attribute indicates the network mask of SNMP community.')
apSnmpCommunityAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("readonly", 0), ("readwrite", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpCommunityAccess.setStatus('current')
if mibBuilder.loadTexts: apSnmpCommunityAccess.setDescription('This attribute indicates the network mask of SNMP community.')
apSnmpUserTable = MibTable((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4), )
if mibBuilder.loadTexts: apSnmpUserTable.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserTable.setDescription('SNMP user table.')
apSnmpUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1), ).setIndexNames((0, "AP-MANAGEMENT", "apSnmpUserIndex"))
if mibBuilder.loadTexts: apSnmpUserEntry.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserEntry.setDescription('An entry in the apSnmpUserTable.')
apSnmpUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSnmpUserIndex.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserIndex.setDescription('This attribute indicates the SNMP user index')
apSnmpUserRowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apSnmpUserRowControl.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserRowControl.setDescription('The SNMP user status. Supported values: active(1) - valid entry notReady(3) - non-valid entry createAndGo(4) - used to create a new entry destroy(6) - removes the entry')
apSnmpUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserStatus.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserStatus.setDescription('This attribute indicates the enable status of SNMP user.')
apSnmpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserName.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserName.setDescription('This attribute indicates the name of SNMP user.')
apSnmpUserAuthProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserAuthProtocol.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserAuthProtocol.setDescription('This attribute indicates the Authentication Protocol of SNMP user.')
apSnmpUserAuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserAuthPassword.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserAuthPassword.setDescription('This attribute indicates the Authentication Password of SNMP user.')
apSnmpUserPrivProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("des", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserPrivProtocol.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserPrivProtocol.setDescription('This attribute indicates the Privacy Protocol of SNMP user.')
apSnmpUserPrivPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserPrivPassword.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserPrivPassword.setDescription('This attribute indicates the Privacy Password of SNMP user.')
apSnmpUserAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("readonly", 0), ("readwrite", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSnmpUserAccess.setStatus('current')
if mibBuilder.loadTexts: apSnmpUserAccess.setDescription('This attribute indicates the Access Mode of SNMP user.')
apRemoteAssistance = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 3))
apRemoteAssistanceBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 3, 1))
apRemoteAssistanceCurrentStatus = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("connecting", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apRemoteAssistanceCurrentStatus.setStatus('current')
if mibBuilder.loadTexts: apRemoteAssistanceCurrentStatus.setDescription('This attribute indicates the current status of the Remote Assistance.')
apRemoteAssistanceStatus = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRemoteAssistanceStatus.setStatus('current')
if mibBuilder.loadTexts: apRemoteAssistanceStatus.setDescription('This attribute indicates the enable status of the Remote Assistance.')
apControl = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 4))
apCommands = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 4, 1))
apSaveAndActivate = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSaveAndActivate.setStatus('current')
if mibBuilder.loadTexts: apSaveAndActivate.setDescription('Setting this object causes the device to activate configuration.')
apReboot = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("rebootFlash1", 1), ("rebootFlash2", 2), ("rebootCurrentFlash", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apReboot.setStatus('current')
if mibBuilder.loadTexts: apReboot.setDescription('Setting this object causes the device to reboot.')
apRestoreDefault = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("restoreDefault", 1), ("restorePreserveNetwork", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apRestoreDefault.setStatus('current')
if mibBuilder.loadTexts: apRestoreDefault.setDescription('Setting this object causes the device to restore default configuration.')
mibBuilder.exportSymbols("AP-MANAGEMENT", apSnmpUserStatus=apSnmpUserStatus, apRemoteAssistanceStatus=apRemoteAssistanceStatus, apWebAccessProtocol=apWebAccessProtocol, productID=productID, apCommands=apCommands, apSnmpUserName=apSnmpUserName, apControl=apControl, apSnmpCommunityStatus=apSnmpCommunityStatus, apSnmpTrapName=apSnmpTrapName, apWebUsername=apWebUsername, apWebPassword=apWebPassword, apSnmpTrap=apSnmpTrap, apSnmpTrapIpAddress=apSnmpTrapIpAddress, apSnmpCommunityRowControl=apSnmpCommunityRowControl, apSnmpName=apSnmpName, apSnmpCommunityEntry=apSnmpCommunityEntry, apSnmpCommunityIpAddress=apSnmpCommunityIpAddress, apRestoreDefault=apRestoreDefault, pepwave=pepwave, apSnmpUserAuthProtocol=apSnmpUserAuthProtocol, apSnmpUserTable=apSnmpUserTable, apSnmp=apSnmp, apSnmpV2Enable=apSnmpV2Enable, apSnmpUserAuthPassword=apSnmpUserAuthPassword, apSnmpCommunityName=apSnmpCommunityName, apWebManagementPort=apWebManagementPort, apSnmpUserEntry=apSnmpUserEntry, apSnmpV1Enable=apSnmpV1Enable, apWeb=apWeb, apSnmpCommunityTable=apSnmpCommunityTable, apSnmpTrapEnable=apSnmpTrapEnable, apSnmpUserPrivPassword=apSnmpUserPrivPassword, apSnmpUserRowControl=apSnmpUserRowControl, apSnmpCommunityNetmask=apSnmpCommunityNetmask, apSnmpUserIndex=apSnmpUserIndex, apSnmpV3Enable=apSnmpV3Enable, apSnmpCommunityIndex=apSnmpCommunityIndex, apSnmpUserPrivProtocol=apSnmpUserPrivProtocol, apRemoteAssistance=apRemoteAssistance, ap_management_mib=ap_management_mib, apRemoteAssistanceBasic=apRemoteAssistanceBasic, apRemoteAssistanceCurrentStatus=apRemoteAssistanceCurrentStatus, apSaveAndActivate=apSaveAndActivate, apWebAdmin=apWebAdmin, apWebHttpRedirection=apWebHttpRedirection, apWebAdministration=apWebAdministration, apSnmpBasic=apSnmpBasic, apSnmpUserAccess=apSnmpUserAccess, apMib=apMib, apSnmpCommunityAccess=apSnmpCommunityAccess, PYSNMP_MODULE_ID=ap_management_mib, apReboot=apReboot, apGeneralMib=apGeneralMib)
