#
# PySNMP MIB module HUAWEI-BRAS-SRVCFG-DEVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-SRVCFG-DEVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Counter32, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Unsigned32, ObjectIdentity, MibIdentifier, IpAddress, Integer32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Unsigned32", "ObjectIdentity", "MibIdentifier", "IpAddress", "Integer32", "Counter64", "Bits")
MacAddress, TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
hwBRASSrvcfgDevice = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6))
if mibBuilder.loadTexts: hwBRASSrvcfgDevice.setLastUpdated('200403041608Z')
if mibBuilder.loadTexts: hwBRASSrvcfgDevice.setOrganization('Huawei Technologies Co., Ltd. ')
if mibBuilder.loadTexts: hwBRASSrvcfgDevice.setContactInfo(' NanJing Institute,Huawei Technologies Co.,Ltd. HuiHong Mansion,No.91 BaiXia Rd. NanJing, P.R. of China Zipcode:210001 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwBRASSrvcfgDevice.setDescription('The MIB contains objects of module SRVCFG.')
hwSrvcfgDeviceMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1))
hwDeviceUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1), )
if mibBuilder.loadTexts: hwDeviceUserTable.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserTable.setDescription('The table of device user.')
hwDeviceUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStartIpAddr"))
if mibBuilder.loadTexts: hwDeviceUserEntry.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserEntry.setDescription('Description.')
hwDeviceUserStartIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserStartIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserStartIpAddr.setDescription('The start ip address of device user.')
hwDeviceUserEndIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserEndIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserEndIpAddr.setDescription('The end ip address of device user.')
hwDeviceUserIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserIfIndex.setDescription('The index of interface which device user was in.')
hwDeviceUserIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserIfName.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserIfName.setDescription('The name of interface.')
hwDeviceUserVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVlan.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVlan.setDescription('The vlan of device user.')
hwDeviceUserVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVpi.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVpi.setDescription('The vpi of device user.')
hwDeviceUserVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVci.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVci.setDescription('The vci of device user.')
hwDeviceUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserMac.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserMac.setDescription('The MAC address of device user.')
hwDeviceUserDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserDomain.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserDomain.setDescription('The domain which device user was part of.')
hwDeviceUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ready", 0), ("detecting", 1), ("deleting", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserStatus.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserStatus.setDescription('The status of device user.')
hwDeviceUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDeviceUserRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserRowStatus.setDescription('The row status of device user.')
hwDeviceQinQUserVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceQinQUserVlan.setStatus('current')
if mibBuilder.loadTexts: hwDeviceQinQUserVlan.setDescription('The QinQ vlan of device user.')
hwDeviceUserTableV2 = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2), )
if mibBuilder.loadTexts: hwDeviceUserTableV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserTableV2.setDescription('The table of device user.(V2)')
hwDeviceUserEntryV2 = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVrfNameV2"), (0, "HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStartIpAddrV2"))
if mibBuilder.loadTexts: hwDeviceUserEntryV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserEntryV2.setDescription('Description.(V2)')
hwDeviceUserStartIpAddrV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserStartIpAddrV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserStartIpAddrV2.setDescription('The start ip address of device user.(V2)')
hwDeviceUserEndIpAddrV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserEndIpAddrV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserEndIpAddrV2.setDescription('The end ip address of device user.(V2)')
hwDeviceUserIfIndexV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserIfIndexV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserIfIndexV2.setDescription('The index of interface which device user was in.(V2)')
hwDeviceUserIfNameV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserIfNameV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserIfNameV2.setDescription('The name of interface.(V2)')
hwDeviceUserVlanV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVlanV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVlanV2.setDescription('The vlan of device user.(V2)')
hwDeviceUserVpiV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVpiV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVpiV2.setDescription('The vpi of device user.(V2)')
hwDeviceUserVciV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserVciV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVciV2.setDescription('The vci of device user.(V2)')
hwDeviceUserMacV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserMacV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserMacV2.setDescription('The MAC address of device user.(V2)')
hwDeviceUserDomainV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceUserDomainV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserDomainV2.setDescription('The domain which device user was part of.(V2)')
hwDeviceUserStatusV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ready", 0), ("detecting", 1), ("deleting", 2), ("online", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserStatusV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserStatusV2.setDescription('The status of device user.(V2)')
hwDeviceUserRowStatusV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDeviceUserRowStatusV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserRowStatusV2.setDescription('The row status of device user.(V2)')
hwDeviceQinQUserVlanV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDeviceQinQUserVlanV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceQinQUserVlanV2.setDescription('The QinQ vlan of device user.(V2)')
hwDeviceUserVrfNameV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDeviceUserVrfNameV2.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserVrfNameV2.setDescription('The vpn instance of device user.(V2)')
hwSrvcfgDeviceConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2))
hwSrvcfgDeviceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2, 1))
hwSrvcfgDeviceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2, 1, 1)).setObjects(("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserGroup"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSrvcfgDeviceCompliance = hwSrvcfgDeviceCompliance.setStatus('current')
if mibBuilder.loadTexts: hwSrvcfgDeviceCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwDeviceUserGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2, 2))
hwDeviceUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2, 2, 1)).setObjects(("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStartIpAddr"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserEndIpAddr"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserIfIndex"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserIfName"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVlan"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVpi"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVci"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserMac"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserDomain"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStatus"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserRowStatus"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceQinQUserVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDeviceUserGroup = hwDeviceUserGroup.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserGroup.setDescription('The Device User group.')
hwDeviceUserV2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 6, 2, 2, 2)).setObjects(("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStartIpAddrV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserEndIpAddrV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserIfIndexV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserIfNameV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVlanV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVpiV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVciV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserMacV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserDomainV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserStatusV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserRowStatusV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceQinQUserVlanV2"), ("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", "hwDeviceUserVrfNameV2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDeviceUserV2Group = hwDeviceUserV2Group.setStatus('current')
if mibBuilder.loadTexts: hwDeviceUserV2Group.setDescription('The Device User group.(V2)')
mibBuilder.exportSymbols("HUAWEI-BRAS-SRVCFG-DEVICE-MIB", hwDeviceUserIfIndexV2=hwDeviceUserIfIndexV2, hwDeviceUserMac=hwDeviceUserMac, hwDeviceUserStatusV2=hwDeviceUserStatusV2, hwDeviceUserVlanV2=hwDeviceUserVlanV2, hwDeviceUserStartIpAddrV2=hwDeviceUserStartIpAddrV2, hwDeviceUserGroup=hwDeviceUserGroup, hwDeviceUserTableV2=hwDeviceUserTableV2, hwDeviceUserEntry=hwDeviceUserEntry, hwDeviceUserTable=hwDeviceUserTable, hwDeviceUserVci=hwDeviceUserVci, hwDeviceQinQUserVlanV2=hwDeviceQinQUserVlanV2, hwDeviceUserVlan=hwDeviceUserVlan, hwDeviceUserVrfNameV2=hwDeviceUserVrfNameV2, hwDeviceUserMacV2=hwDeviceUserMacV2, hwDeviceUserIfNameV2=hwDeviceUserIfNameV2, hwDeviceUserStartIpAddr=hwDeviceUserStartIpAddr, hwSrvcfgDeviceConformance=hwSrvcfgDeviceConformance, hwDeviceUserRowStatusV2=hwDeviceUserRowStatusV2, hwDeviceUserEndIpAddr=hwDeviceUserEndIpAddr, hwSrvcfgDeviceCompliances=hwSrvcfgDeviceCompliances, hwSrvcfgDeviceCompliance=hwSrvcfgDeviceCompliance, hwDeviceUserEntryV2=hwDeviceUserEntryV2, hwDeviceUserVpiV2=hwDeviceUserVpiV2, hwDeviceUserVciV2=hwDeviceUserVciV2, hwDeviceUserDomain=hwDeviceUserDomain, hwDeviceUserStatus=hwDeviceUserStatus, hwDeviceUserGroups=hwDeviceUserGroups, hwBRASSrvcfgDevice=hwBRASSrvcfgDevice, hwDeviceUserDomainV2=hwDeviceUserDomainV2, hwSrvcfgDeviceMibObjects=hwSrvcfgDeviceMibObjects, hwDeviceUserIfIndex=hwDeviceUserIfIndex, hwDeviceUserIfName=hwDeviceUserIfName, hwDeviceUserRowStatus=hwDeviceUserRowStatus, hwDeviceUserEndIpAddrV2=hwDeviceUserEndIpAddrV2, hwDeviceUserVpi=hwDeviceUserVpi, PYSNMP_MODULE_ID=hwBRASSrvcfgDevice, hwDeviceQinQUserVlan=hwDeviceQinQUserVlan, hwDeviceUserV2Group=hwDeviceUserV2Group)
