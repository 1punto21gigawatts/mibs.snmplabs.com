#
# PySNMP MIB module DSX-TE3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DSX-TE3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:54:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
LEDState, nndsxT3E3IfGroup = mibBuilder.importSymbols("DSX-TC-MIB", "LEDState", "nndsxT3E3IfGroup")
ntEnterpriseDataTasmanInterfaces, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanInterfaces")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, TimeTicks, Gauge32, iso, Unsigned32, MibIdentifier, IpAddress, Counter64, Counter32, Integer32, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "Gauge32", "iso", "Unsigned32", "MibIdentifier", "IpAddress", "Counter64", "Counter32", "Integer32", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
nndsxT3E3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1))
nndsxT3E3MIB.setRevisions(('1900-08-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: nndsxT3E3MIB.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: nndsxT3E3MIB.setLastUpdated('0008180000Z')
if mibBuilder.loadTexts: nndsxT3E3MIB.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: nndsxT3E3MIB.setContactInfo(' Nortel Networks 8200 Dixie Road Brampton, Ontario L6T 5P6 Canada 1-800-4Nortel www.nortelnetworks.com ')
if mibBuilder.loadTexts: nndsxT3E3MIB.setDescription('Interface MIB definitions for T3/E3 interface modules.')
nndsxT3E3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2))
nndsxT3E3TrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 1))
nndsxT3E3Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 0))
nndsxT3E3IfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1))
nndsxT3E3IfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2))
nndsxT3E3IfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3))
nndsxT3E3IfConfigLineTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineTable.setDescription('A list of T3/E3 interfaces currently configured.')
nndsxT3E3IfConfigLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "DSX-TE3-MIB", "nndsxT3E3IfIndex"))
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineEntry.setDescription('An entry containing configuration information for each currently active T3/E3 interface.')
nndsxT3E3IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT3E3IfIndex.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIndex.setDescription('An integer value that is an index to the entries of ifTable (MIB-II) whose interface type is ds3.')
nndsxT3E3IfConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("linetype-m13", 2), ("linetype-cbitparity", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineType.setDescription('This variable indicates the variety of T3/E3 C-bit or E3 application implementing this interface. The type of interface affects the interpretation of the usage and error statistics. The rate of T3/E3 is 44.736 Mbps and E3 is 34.368 Mbps. The values, in sequence, describe: linetype-m13 ANSI T1.107-1988 linetype-cbitparity ANSI T1.107a-1990')
nndsxT3E3IfConfigLineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("linecode-b3zs", 2), ("linecode-hdb3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineCode.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigLineCode.setDescription('This variable describes the variety of zero code suppression used on this interface, which in turn affects a number of its characteristics. linecode-B3ZS and linecode-HDB3 refer to the use of specified patterns of normal bits and bipolar violations that are used to replace sequences of zero bits of a specified length.')
nndsxT3E3IfConfigCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cable-length-0-to-225", 1), ("cable-length-226-to-450", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfConfigCableLength.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigCableLength.setDescription('The length of the T3/E3 line in feet. This object provides information for line build out circuitry if it exists and can use this object to adjust the line build out.')
nndsxT3E3IfConfigTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfConfigTransmitClock.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfConfigTransmitClock.setDescription('The source of transmit clock. It is derived from the recovered receive clock of another T3/E3 interface.')
nndsxT3E3IfAlarmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3))
nndsxT3E3IfAlarmThresholdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigTable.setDescription('A list of TE3 interface alarm threshold configuration.')
nndsxT3E3IfAlarmThresholdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1), ).setIndexNames((0, "DSX-TE3-MIB", "nndsxT3E3IfIndex"), (0, "DSX-TE3-MIB", "nndsxT3E3IfAlarmThresholdConfigIndex"))
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigEntry.setDescription('An entry containing alarm configuration information for each currently active TE3 interface.')
nndsxT3E3IfAlarmThresholdConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigIndex.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigIndex.setDescription('Index value of the threshold configuration.')
nndsxT3E3IfAlarmThresholdConfigObject = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("te3-object-lcv", 1), ("te3-object-fbe", 2), ("te3-object-pbe", 3), ("te3-object-cpbe", 4), ("te3-object-febe", 5), ("te3-object-exz", 6), ("te3-object-cofa", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigObject.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigObject.setDescription('Configurable variables for the threshold alarm configuration.')
nndsxT3E3IfAlarmThresholdConfigSamplingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigSamplingInterval.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigSamplingInterval.setDescription('Sampling interval for the threshold alarm.')
nndsxT3E3IfAlarmThresholdConfigSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sample-absolute", 1), ("sample-delta", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigSampleType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigSampleType.setDescription('Sampling type for the threshold alarm.')
nndsxT3E3IfAlarmThresholdConfigRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigRisingThreshold.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigRisingThreshold.setDescription('Rising threshold.')
nndsxT3E3IfAlarmThresholdConfigFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigFallingThreshold.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigFallingThreshold.setDescription('Falling threshold.')
nndsxT3E3IfAlarmThresholdConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigEnable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmThresholdConfigEnable.setDescription('Config Enable: If TRUE then configure the threshold. FALSE then remove the threshold.')
nndsxT3E3IfTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4), )
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigTable.setDescription('A list of TE3 interface test configuration.')
nndsxT3E3IfTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfTestConfigEntry"))
nndsxT3E3IfTestConfigEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigEntry.setDescription('An entry containing test configuration for each currently active TE3 interface.')
nndsxT3E3IfTestConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9))).clone(namedValues=NamedValues(("no-test", 1), ("payload-loopback-test", 2), ("line-loopback-test", 3), ("local-loopback-test", 4), ("internal-loopback-test", 5), ("pattern-test", 7), ("remote-lpup-test", 8), ("remote-lpdn-test", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigType.setDescription('Test type for the TE3 interface. Only TestType is mandatory to perform no-test, payload-loopback-test, line-loopback-test, local-loopback-test or internal-loopback-test. ConfigLoopCode is mandatory to perform remote-lpup-test and remote-lpdn-test. ConfigPattern and ConfigTime are mandatory to perform pattern test on T3. The pattern-test, payload-loopback-test, local-loopback-test and internal-loopback-test are applicable only on Clear channel T3 interface. ')
nndsxT3E3IfTestConfigLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigLoopCode.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigLoopCode.setDescription('Loopback code.')
nndsxT3E3IfTestConfigPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("no-pattern", 0), ("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("reserved1", 3), ("reserved2", 4), ("reserved3", 5), ("reserved4", 6), ("reserved5", 7), ("reserved6", 8), ("reserved7", 9), ("reserved9", 10), ("reserved10", 11), ("reserved11", 12), ("pattern-215minus1", 13), ("reserved12", 14), ("pattern-qrw", 15), ("pattern-223minus1", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigPattern.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigPattern.setDescription('Bit Pattern type used in testing T3 for Pattern Test.')
nndsxT3E3IfTestConfigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigTime.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestConfigTime.setDescription('When set to 0, test time is unlimited. Otherwise duration of test, specified in seconds.')
nndsxT3E3IfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfStatusTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfStatusTable.setDescription('A list of TE3 interface status entries.')
nndsxT3E3IfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 1, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfStatusEntry"))
nndsxT3E3IfStatusEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfStatusEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfStatusEntry.setDescription('An entry containing the status entry for each currently active TE3 interface.')
nndsxT3E3IfStatusLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("reserved", 0), ("reserved1", 1), ("reserved2", 2), ("reserved3", 3), ("reserved4", 4), ("reserved5", 5), ("reserved6", 6), ("reserved7", 7), ("sendPattern", 8), ("sendTE3Code", 9), ("sendResetCode", 10), ("sendPayloadCode", 11), ("sendLineCode", 12), ("reserved8", 13), ("febeStatus", 14), ("pdeStatus", 15), ("lorcStatus", 16), ("reserved9", 17), ("reserved10", 18), ("rfebeStatus", 19), ("risStatus", 20), ("rexzStatus", 21), ("reserved11", 22), ("rcvTestCode", 23), ("loopbackStatus", 24), ("rlosStatus", 25), ("rlofStatus", 26), ("taisStatus", 27), ("raisStatus", 28), ("traiStatus", 29), ("rraiStatus", 30), ("no-alarm", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfStatusLineStatus.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfStatusLineStatus.setDescription('Line Status of the T3/E3 interface. sendPattern - TRUE if the line transmiting bit pattern, sendTE3Code - sending T3/E3 code, sendResetCode - transmits Reset Code if it is TRUE, sendPayloadcode - transmits the payload code, sendLinecode - transmitts the line code, febe - Far End Block Error, pde - pulse Density code transmission, lorc - loss of recieve clock, rfebe - recieve far end block error, ris - recieve Idle signal, rexz - recieve exessive zeros, rcvTestCode - recieve test code, loopback - loopback status , rlos - recieve loss of signal, rlof - recieve loss of frame, tais - transmit alarm indication signal, rais - recieve alarm indication signal, trai - transmit remote alarm indication, rrai - recieve remote alarm indication, ')
nndsxT3E3IfStatusTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfStatusTransmitClock.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfStatusTransmitClock.setDescription("The source of tranmit clock. 'timing-line' indicates that the recovered receive clock is used as the transmit clock. 'timing-internal' indicates that a local clock source is used.")
nndsxT3E3IfAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 2), )
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusTable.setDescription('A list of T3/E3 interface status entries.')
nndsxT3E3IfAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 2, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfAlarmStatusEntry"))
nndsxT3E3IfAlarmStatusEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfAlarmStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("rraiAlarm", 0), ("traiAlarm", 1), ("raisAlarm", 2), ("taisAlarm", 3), ("rlofAlarm", 4), ("rlosAlarm", 5), ("loopbackStateAlarm", 6), ("rcvTestCode", 7), ("rbluAlarm", 8), ("risAlarm", 9), ("rexzAlarm", 10), ("rfbeAlarm", 11), ("rpeAlarm", 12), ("rcpeAlarm", 13), ("lorcAlarm", 14), ("tpdeAlarm", 15), ("tfebeAlarm", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusAlarmStatus.setDescription('Current status of all the T3/E3 interface alarms. RRAI - Recieve Remote Alarm Indication, TRAI - Transmit Remote Alarm Indication, TAIS - Transmit Alarm Indication Siganl, RLOF - Recieve Loss Of Frame, RLOS - Recieve Loss Of Sync, Loopback - Status of Loop back, rcvTestCode - Recieve Test Code, rblu - Recieve Blue Alarm, RIS - Recieve Idle Signal, REXZ - Recieve Excessive Zeros, RFBE - Recieve Frame Bit Error, RPE - Recieve Parity Error, RCPE - Recieve C-Parity Error, LORC - Loss Of Recive Clock (LORC), TPDE - transmit pulse density, RAIS - Recieve Alarm Indication Signal, TFEBE - Transmit Far End Block Alarm.')
nndsxT3E3IfAlarmStatusThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("threshold1", 0), ("threshold2", 1), ("threshold3", 2), ("threshold4", 3), ("threshold5", 4), ("threshold6", 5), ("threshold7", 6), ("threshold8", 7), ("threshold9", 8), ("threshold10", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusThresholdStatus.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAlarmStatusThresholdStatus.setDescription('Current status of all the configured threshold alarms.')
nndsxT3E3IfTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 3), )
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTable.setDescription('A list of T3/E3 interface test status entries.')
nndsxT3E3IfTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 3, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfTestStatusEntry"))
nndsxT3E3IfTestStatusEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfTestStatusTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("no-test", 1), ("payload-loopback", 2), ("line-loopback", 3), ("local-loopback", 4), ("int-loopback", 5), ("other-loopback", 6), ("testtype-pattern", 7), ("remote-lpup", 8), ("remote-lpdn", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTestType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTestType.setDescription('The test type.')
nndsxT3E3IfTestStatusTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTestState.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusTestState.setDescription('State of the test invoked.')
nndsxT3E3IfTestStatusLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusLoopCode.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfTestStatusLoopCode.setDescription('Line code for loop back test.')
nndsxT3E3IfLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 4), )
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTable.setDescription('A list of T3/E3 interface test status entries.')
nndsxT3E3IfLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 4, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfLastTestResultEntry"))
nndsxT3E3IfLastTestResultEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfLastTestResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("no-test", 1), ("payload-loopback", 2), ("line-loopback", 3), ("local-loopback", 4), ("int-loopback", 5), ("other-loopback", 6), ("testtype-pattern", 7), ("remote-lpup", 8), ("remote-lpdn", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTestType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTestType.setDescription('The test type.')
nndsxT3E3IfLastTestResultTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("state-idle", 1), ("state-searching", 2), ("state-locked", 3), ("state-relocked", 4), ("state-in-progress", 5), ("state-passed", 6), ("state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTestState.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultTestState.setDescription('State of the test invoked.')
nndsxT3E3IfLastTestResultLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-feac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultLoopCode.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfLastTestResultLoopCode.setDescription('The loopcode used to loopback the T3/E3 interface in previous test.')
nndsxT3E3IfArchiveStatsValidIntervalsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfArchiveStatsValidIntervalsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfArchiveStatsValidIntervalsTable.setDescription('A list of T3/E3 interface ValidIntervals entries.')
nndsxT3E3IfArchiveStatsValidIntervalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfArchiveStatsValidIntervalsEntry"))
nndsxT3E3IfArchiveStatsValidIntervalsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfArchiveStatsValidIntervalsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfArchiveStatsValidIntervalsEntry.setDescription('An entry containing a valid intervals entry for each currently active T3/E3 interface.')
nndsxT3E3IfAnsiArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveStatsValidIntervals.setDescription('Archive Stats Valid Interval for ANSI.')
nndsxT3E3IfIetfArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsValidIntervals.setDescription('Archive stats valid interval for IETF.')
nndsxT3E3IfUserTotalStatsValidDays = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserTotalStatsValidDays.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserTotalStatsValidDays.setDescription('User total stats valid days.')
nndsxT3E3IfUserArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsValidIntervals.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsValidIntervals.setDescription('User archive stats valid interval. Setting this variable to 0 will clear the user statistics tables.')
nndsxT3E3IfErrorEventStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 2), )
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsTable.setDescription('A list of T3/E3 interface error events entries.')
nndsxT3E3IfErrorEventStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 2, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfErrorEventStatsEntry"))
nndsxT3E3IfErrorEventStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsEntry.setDescription('An entry containing error events that occured on the T3/E3 interface.')
nndsxT3E3IfErrorEventStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsPBE.setDescription('Parity bit error events count.')
nndsxT3E3IfErrorEventStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfErrorEventStatsFEBE.setDescription('Far end block error (FEBE) event count.')
nndsxT3E3IfAnsiStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3))
nndsxT3E3IfIetfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4))
nndsxT3E3IfUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5))
nndsxT3E3IfAnsiCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsTable.setDescription('A list of T3/E3 interface current 15-minute interval statistics entries.')
nndsxT3E3IfAnsiCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfAnsiCurrentStatsEntry"))
nndsxT3E3IfAnsiCurrentStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
nndsxT3E3IfAnsiCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsUASState.setDescription('Current state of availablity of the T3/E3 line.')
nndsxT3E3IfAnsiCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentStatsTimeInCurrent.setDescription('Current time for statistics.')
nndsxT3E3IfAnsiCurrentPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsSAS.setDescription('The number of severely errored framing seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentPathStatsUAS.setDescription('The number of unavailable seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiCurrentLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiCurrentLineStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the current 15-minute interval.')
nndsxT3E3IfAnsiTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2), )
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalStatsTable.setDescription('Entries of total statistics collected over past 24 hours on a T3/E3 interface.')
nndsxT3E3IfAnsiTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfAnsiTotalStatsEntry"))
nndsxT3E3IfAnsiTotalStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalStatsEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfAnsiTotalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsSAS.setDescription('The number of severely alarm aeconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalPathStatsUAS.setDescription('The number of unavailable seconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the previous 24-hour interval. ')
nndsxT3E3IfAnsiTotalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiTotalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiTotalLineStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the previous 24-hour interval.')
nndsxT3E3IfAnsiArchiveIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3), )
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalStatsTable.setDescription('A list of T3/E3 interface archive statistics entries.')
nndsxT3E3IfAnsiArchiveIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1), ).setIndexNames((0, "DSX-TE3-MIB", "nndsxT3E3IfIndex"), (0, "DSX-TE3-MIB", "nndsxT3E3IfAnsiArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalStatsEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfAnsiArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveStatsInterval.setDescription('Entries of the ANSI archive statistics collected for T3/E3 a interface.')
nndsxT3E3IfAnsiArchiveIntervalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsSAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsSAS.setDescription('The number of severely errored framing seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalPathStatsUAS.setDescription('The number of unavailable seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsCV.setDescription('The number of path coding violations encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsES.setDescription('The number of errored seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfAnsiArchiveIntervalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfAnsiArchiveIntervalLineStatsSES.setDescription('The number of severely errored seconds encountered by a T3/E3 interface in the current interval.')
nndsxT3E3IfIetfCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsTable.setDescription('A list of the current 15-minute IETF-based statistics collected for T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfIetfCurrentStatsEntry"))
nndsxT3E3IfIetfCurrentStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsUASState.setDescription('Current state of availablity of the interface.')
nndsxT3E3IfIetfCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsTimeInCurrent.setDescription('The number of seconds that have elapsed since the beginning of the current IETF error-measurement period. ')
nndsxT3E3IfIetfCurrentStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPES.setDescription('The number of IETF parity errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPSES.setDescription('The number of parity severely errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsSEFS.setDescription('The number of IETF severely errored framing seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsUAS.setDescription('The number of unavailable seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsLCV.setDescription('The number of line code violations encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsPCV.setDescription('The number of IETF path coding violations, encountered by a T3/E3 interface that are reported via the far-end block-error count.')
nndsxT3E3IfIetfCurrentStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsLES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsLES.setDescription('The number of IETF line errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCCV.setDescription('The number of IETF C-bit coding violations encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCES.setDescription('The number of IETF C-bit errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfCurrentStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfCurrentStatsCSES.setDescription('The number of IETF C-Bit severely errored seconds.')
nndsxT3E3IfIetfTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2), )
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsTable.setDescription('A list of entries for statistics collected over 24 hours.')
nndsxT3E3IfIetfTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfIetfTotalStatsEntry"))
nndsxT3E3IfIetfTotalStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsEntry.setDescription('An entry containing the status entry for each currently active T3/E3 interface.')
nndsxT3E3IfIetfTotalStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPES.setDescription('Total number of IETF errored seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPSES.setDescription('Total number of IETF severely errored seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsSEFS.setDescription('Total number of IETF severely errored framing seconds encountered by a T3/E3 interface during the past 24 hours.')
nndsxT3E3IfIetfTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsUAS.setDescription('Total number of unavailable seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsLCV.setDescription('Total number of line code violations encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsPCV.setDescription('Total number of IETF path coding violations encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsLES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsLES.setDescription('Total number of IETF line errored seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCCV.setDescription('Total number of IETF C-bit parity code violation encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCES.setDescription('Total number of IETF C-bit parity errored seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfTotalStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfTotalStatsCSES.setDescription('Total number of IETF C-bit parity severely errored seconds encountered by a T3/E3 interface during past 24 hours.')
nndsxT3E3IfIetfArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3), )
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsTable.setDescription('A list of T3/E3 interface IETF archive statistics entries.')
nndsxT3E3IfIetfArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1), ).setIndexNames((0, "DSX-TE3-MIB", "nndsxT3E3IfIndex"), (0, "DSX-TE3-MIB", "nndsxT3E3IfIetfArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsInterval.setDescription('The total number of intervals for which statistics would be collected.')
nndsxT3E3IfIetfArchiveStatsPES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPES.setDescription('The number of IETF errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsPSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPSES.setDescription('The number of IETF severely errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsSEFS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsSEFS.setDescription('The number of IETF severely errored framing seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsUAS.setDescription('The number of unavailable seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsLCV.setDescription('The number of line code violations encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsPCV.setDescription('The number of IETF path coding violations, encountered by a T3/E3 interface that are reported via the far-end block-error count.')
nndsxT3E3IfIetfArchiveStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsLES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsLES.setDescription('The number of IETF line errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsCCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCCV.setDescription('The number of IETF C-bit parity code violations encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsCES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCES.setDescription('The number of IETF C-bit parity errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfIetfArchiveStatsCSES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 4, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCSES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfIetfArchiveStatsCSES.setDescription('The number of IETF C-bit parity severrly errored seconds encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1), )
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsTable.setDescription('A list of T3/E3 interface user current 15-minute interval statistics entries.')
nndsxT3E3IfUserCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfUserCurrentStatsEntry"))
nndsxT3E3IfUserCurrentStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsUASState.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsUASState.setDescription('The current status of availablity of the T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsTimeInCurrent.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsTimeInCurrent.setDescription('The number of seconds that have elapsed since the beginning of the current error-measurement period.')
nndsxT3E3IfUserCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsLCV.setDescription('The number of line code violations encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsFBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsFBE.setDescription('The number of frame bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsPBE.setDescription('The number of parity bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsCPBE.setDescription('The number of C-parity bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsFEBE.setDescription('The number of far end block errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserCurrentStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserCurrentStatsCOFA.setDescription('The number of change of frame alignment encountered by a T3/E3 interface.')
nndsxT3E3IfUserLifetimeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3), )
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsTable.setDescription('A list of T3/E3 interface statistics entries collected since the system was powered on.')
nndsxT3E3IfUserLifetimeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1), )
nndsxT3E3IfConfigLineEntry.registerAugmentions(("DSX-TE3-MIB", "nndsxT3E3IfUserLifetimeStatsEntry"))
nndsxT3E3IfUserLifetimeStatsEntry.setIndexNames(*nndsxT3E3IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsEntry.setDescription('An entry containing status entry for each currently active T3/E3 interface.')
nndsxT3E3IfUserLifetimeStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsUAS.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsUAS.setDescription('Total number of unavailable seconds encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsLCV.setDescription('Total number of line code violations encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsLES.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsLES.setDescription('Total number of line errored seconds encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsFBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsFBE.setDescription('Total number of frame bit errors encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsPBE.setDescription('Total number of parity bit errors encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsCPBE.setDescription('Total number of C-bit parity errors encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsFEBE.setDescription('Total number of far end block errors encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserLifetimeStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserLifetimeStatsCOFA.setDescription('Total number of frame alignment changes encountered by a T3/E3 interface since the interface came up.')
nndsxT3E3IfUserArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4), )
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsTable.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsTable.setDescription('A list of T3/E3 interface user archive statistics entries.')
nndsxT3E3IfUserArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1), ).setIndexNames((0, "DSX-TE3-MIB", "nndsxT3E3IfIndex"), (0, "DSX-TE3-MIB", "nndsxT3E3IfUserArchiveStatsInterval"))
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsEntry.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsEntry.setDescription('An entry containing a status entry for each currently active T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsInterval.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsInterval.setDescription('The total number of intervals for which statistics would be collected.')
nndsxT3E3IfUserArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsLCV.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsLCV.setDescription('The number of line code violations encountered by a T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsFBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsFBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsFBE.setDescription('The number of frame bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsPBE.setDescription('The number of parity bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsCPBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsCPBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsCPBE.setDescription('The number of C parity bit errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsFEBE = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsFEBE.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsFEBE.setDescription('The number of far end block errors encountered by a T3/E3 interface.')
nndsxT3E3IfUserArchiveStatsCOFA = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 1, 3, 5, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsCOFA.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3IfUserArchiveStatsCOFA.setDescription('The number of change of frame alignment encountered by a T3/E3 interface.')
nndsxT3E3Number = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT3E3Number.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3Number.setDescription('This variable indicates the T3/E3 interface number from where this alarm originated.')
nndsxT3E3AlarmType = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26))).clone(namedValues=NamedValues(("te3-alarm-rais", 1), ("te3-alarm-roof", 2), ("te3-alarm-rrai", 3), ("te3-alarm-ris", 4), ("te3-alarm-rlos", 5), ("te3-alarm-rlof", 6), ("te3-alarm-rexz", 7), ("te3-alarm-rfebe", 8), ("te3-alarm-rpe", 9), ("te3-alarm-rcpe", 10), ("te3-alarm-lorc", 11), ("te3-alarm-tpde", 12), ("te3-alarm-tais", 13), ("te3-alarm-trai", 14), ("te3-alarm-tfebe", 15), ("te3-alarm-ibtest", 16), ("te1-alarm-threshold1", 17), ("te1-alarm-threshold2", 18), ("te1-alarm-threshold3", 19), ("te1-alarm-threshold4", 20), ("te1-alarm-threshold5", 21), ("te1-alarm-threshold6", 22), ("te1-alarm-threshold7", 23), ("te1-alarm-threshold8", 24), ("te1-alarm-threshold9", 25), ("te1-alarm-threshold10", 26)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nndsxT3E3AlarmType.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3AlarmType.setDescription('Alarm status T3/E3 interface RRAI - Recieve Receive Alarm Indication, TRAI - Transmit Receive Alarm Indication, TAIS - Transmit Alarm Indication Siganl, RLOF - Recieve Loss Of Frame, RLOS - Recieve Loss Of Sync, Loopback - Status of Loop back, rcvTestCode - Receive Test Code, rblu - Receive Blue Alarm, RIS - Receive Idle Signal, REXZ - Receive Excessive Zeros, RFBE - Receive Frame Bit Error, RPE - Receive Parity Error, RCPE - Receive C-Parity Error, LORC - Loss Of Receive Clock (LORC), TPDE - transmit pulse density, RAIS - Recieve Alarm Indication Signal, TFEBE - Transmit Far End Block Alarm, Threshold 1-10 - TRUE if it is configured. ')
nndsxT3E3AlarmOnTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 0, 1)).setObjects(("DSX-TE3-MIB", "nndsxT3E3IfIndex"), ("DSX-TE3-MIB", "nndsxT3E3Number"), ("DSX-TE3-MIB", "nndsxT3E3AlarmType"))
if mibBuilder.loadTexts: nndsxT3E3AlarmOnTrap.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3AlarmOnTrap.setDescription('T3/E3 interface alarm trap for Alarm On state.')
nndsxT3E3AlarmOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 2, 0, 2)).setObjects(("DSX-TE3-MIB", "nndsxT3E3IfIndex"), ("DSX-TE3-MIB", "nndsxT3E3Number"), ("DSX-TE3-MIB", "nndsxT3E3AlarmType"))
if mibBuilder.loadTexts: nndsxT3E3AlarmOffTrap.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3AlarmOffTrap.setDescription('T3/E3 interface alarm trap for Alarm Off state.')
nndsxT3E3NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 2, 1, 3, 3)).setObjects(("DSX-TE3-MIB", "nndsxT3E3AlarmOnTrap"), ("DSX-TE3-MIB", "nndsxT3E3AlarmOffTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nndsxT3E3NotificationGroup = nndsxT3E3NotificationGroup.setStatus('current')
if mibBuilder.loadTexts: nndsxT3E3NotificationGroup.setDescription('dsxT3E3 Notification Group')
mibBuilder.exportSymbols("DSX-TE3-MIB", nndsxT3E3IfAnsiTotalStatsTable=nndsxT3E3IfAnsiTotalStatsTable, nndsxT3E3IfUserArchiveStatsTable=nndsxT3E3IfUserArchiveStatsTable, nndsxT3E3IfIetfTotalStatsEntry=nndsxT3E3IfIetfTotalStatsEntry, nndsxT3E3IfAnsiCurrentLineStatsES=nndsxT3E3IfAnsiCurrentLineStatsES, nndsxT3E3IfIetfCurrentStatsUAS=nndsxT3E3IfIetfCurrentStatsUAS, nndsxT3E3IfConfigLineTable=nndsxT3E3IfConfigLineTable, nndsxT3E3IfTestConfigType=nndsxT3E3IfTestConfigType, nndsxT3E3IfAlarmStatusThresholdStatus=nndsxT3E3IfAlarmStatusThresholdStatus, nndsxT3E3IfAnsiTotalPathStatsSES=nndsxT3E3IfAnsiTotalPathStatsSES, nndsxT3E3IfStatsGroup=nndsxT3E3IfStatsGroup, nndsxT3E3IfIetfCurrentStatsEntry=nndsxT3E3IfIetfCurrentStatsEntry, nndsxT3E3IfUserCurrentStatsFEBE=nndsxT3E3IfUserCurrentStatsFEBE, nndsxT3E3IfUserCurrentStatsTable=nndsxT3E3IfUserCurrentStatsTable, nndsxT3E3IfUserTotalStatsValidDays=nndsxT3E3IfUserTotalStatsValidDays, nndsxT3E3IfUserLifetimeStatsLCV=nndsxT3E3IfUserLifetimeStatsLCV, nndsxT3E3IfUserArchiveStatsCPBE=nndsxT3E3IfUserArchiveStatsCPBE, nndsxT3E3IfIetfArchiveStatsLCV=nndsxT3E3IfIetfArchiveStatsLCV, nndsxT3E3IfIetfArchiveStatsUAS=nndsxT3E3IfIetfArchiveStatsUAS, nndsxT3E3IfConfigGroup=nndsxT3E3IfConfigGroup, nndsxT3E3IfAnsiArchiveIntervalPathStatsSAS=nndsxT3E3IfAnsiArchiveIntervalPathStatsSAS, nndsxT3E3AlarmType=nndsxT3E3AlarmType, nndsxT3E3IfAlarmThresholdConfigEnable=nndsxT3E3IfAlarmThresholdConfigEnable, nndsxT3E3IfIetfCurrentStatsUASState=nndsxT3E3IfIetfCurrentStatsUASState, nndsxT3E3IfIetfArchiveStatsValidIntervals=nndsxT3E3IfIetfArchiveStatsValidIntervals, nndsxT3E3IfIetfCurrentStatsLCV=nndsxT3E3IfIetfCurrentStatsLCV, nndsxT3E3Notifications=nndsxT3E3Notifications, nndsxT3E3IfUserLifetimeStatsEntry=nndsxT3E3IfUserLifetimeStatsEntry, nndsxT3E3IfLastTestResultTable=nndsxT3E3IfLastTestResultTable, nndsxT3E3IfUserArchiveStatsLCV=nndsxT3E3IfUserArchiveStatsLCV, nndsxT3E3Traps=nndsxT3E3Traps, nndsxT3E3IfArchiveStatsValidIntervalsEntry=nndsxT3E3IfArchiveStatsValidIntervalsEntry, nndsxT3E3IfAnsiArchiveIntervalStatsEntry=nndsxT3E3IfAnsiArchiveIntervalStatsEntry, nndsxT3E3IfAlarmStatusAlarmStatus=nndsxT3E3IfAlarmStatusAlarmStatus, nndsxT3E3IfIetfCurrentStatsTable=nndsxT3E3IfIetfCurrentStatsTable, nndsxT3E3IfUserArchiveStatsCOFA=nndsxT3E3IfUserArchiveStatsCOFA, nndsxT3E3IfIetfTotalStatsPSES=nndsxT3E3IfIetfTotalStatsPSES, nndsxT3E3IfConfigLineEntry=nndsxT3E3IfConfigLineEntry, nndsxT3E3IfUserArchiveStatsValidIntervals=nndsxT3E3IfUserArchiveStatsValidIntervals, nndsxT3E3IfAnsiArchiveStatsValidIntervals=nndsxT3E3IfAnsiArchiveStatsValidIntervals, nndsxT3E3IfStatusGroup=nndsxT3E3IfStatusGroup, nndsxT3E3IfStatusLineStatus=nndsxT3E3IfStatusLineStatus, nndsxT3E3IfIetfArchiveStatsLES=nndsxT3E3IfIetfArchiveStatsLES, nndsxT3E3IfAnsiArchiveStatsInterval=nndsxT3E3IfAnsiArchiveStatsInterval, nndsxT3E3IfIetfTotalStatsCSES=nndsxT3E3IfIetfTotalStatsCSES, nndsxT3E3IfUserLifetimeStatsCPBE=nndsxT3E3IfUserLifetimeStatsCPBE, nndsxT3E3IfAnsiArchiveIntervalLineStatsCV=nndsxT3E3IfAnsiArchiveIntervalLineStatsCV, nndsxT3E3IfUserCurrentStatsCOFA=nndsxT3E3IfUserCurrentStatsCOFA, nndsxT3E3IfUserArchiveStatsInterval=nndsxT3E3IfUserArchiveStatsInterval, nndsxT3E3IfAlarmConfigGroup=nndsxT3E3IfAlarmConfigGroup, nndsxT3E3IfAlarmThresholdConfigTable=nndsxT3E3IfAlarmThresholdConfigTable, nndsxT3E3IfLastTestResultLoopCode=nndsxT3E3IfLastTestResultLoopCode, nndsxT3E3IfIetfStatsGroup=nndsxT3E3IfIetfStatsGroup, nndsxT3E3IfLastTestResultTestType=nndsxT3E3IfLastTestResultTestType, nndsxT3E3IfLastTestResultTestState=nndsxT3E3IfLastTestResultTestState, nndsxT3E3IfAnsiTotalPathStatsUAS=nndsxT3E3IfAnsiTotalPathStatsUAS, PYSNMP_MODULE_ID=nndsxT3E3MIB, nndsxT3E3IfErrorEventStatsTable=nndsxT3E3IfErrorEventStatsTable, nndsxT3E3IfAnsiCurrentPathStatsSES=nndsxT3E3IfAnsiCurrentPathStatsSES, nndsxT3E3IfUserArchiveStatsFEBE=nndsxT3E3IfUserArchiveStatsFEBE, nndsxT3E3IfUserCurrentStatsCPBE=nndsxT3E3IfUserCurrentStatsCPBE, nndsxT3E3IfIetfTotalStatsCCV=nndsxT3E3IfIetfTotalStatsCCV, nndsxT3E3IfTestStatusTestType=nndsxT3E3IfTestStatusTestType, nndsxT3E3IfUserLifetimeStatsCOFA=nndsxT3E3IfUserLifetimeStatsCOFA, nndsxT3E3IfErrorEventStatsEntry=nndsxT3E3IfErrorEventStatsEntry, nndsxT3E3IfAnsiTotalLineStatsCV=nndsxT3E3IfAnsiTotalLineStatsCV, nndsxT3E3IfUserLifetimeStatsFBE=nndsxT3E3IfUserLifetimeStatsFBE, nndsxT3E3IfUserLifetimeStatsTable=nndsxT3E3IfUserLifetimeStatsTable, nndsxT3E3IfAnsiCurrentPathStatsUAS=nndsxT3E3IfAnsiCurrentPathStatsUAS, nndsxT3E3IfAnsiTotalStatsEntry=nndsxT3E3IfAnsiTotalStatsEntry, nndsxT3E3IfAnsiArchiveIntervalLineStatsES=nndsxT3E3IfAnsiArchiveIntervalLineStatsES, nndsxT3E3IfIetfCurrentStatsTimeInCurrent=nndsxT3E3IfIetfCurrentStatsTimeInCurrent, nndsxT3E3IfIetfArchiveStatsInterval=nndsxT3E3IfIetfArchiveStatsInterval, nndsxT3E3IfUserLifetimeStatsLES=nndsxT3E3IfUserLifetimeStatsLES, nndsxT3E3IfStatusTransmitClock=nndsxT3E3IfStatusTransmitClock, nndsxT3E3IfErrorEventStatsFEBE=nndsxT3E3IfErrorEventStatsFEBE, nndsxT3E3IfConfigCableLength=nndsxT3E3IfConfigCableLength, nndsxT3E3IfAnsiCurrentPathStatsES=nndsxT3E3IfAnsiCurrentPathStatsES, nndsxT3E3IfTestConfigLoopCode=nndsxT3E3IfTestConfigLoopCode, nndsxT3E3IfAnsiTotalLineStatsSES=nndsxT3E3IfAnsiTotalLineStatsSES, nndsxT3E3IfAnsiArchiveIntervalPathStatsSES=nndsxT3E3IfAnsiArchiveIntervalPathStatsSES, nndsxT3E3IfUserCurrentStatsLCV=nndsxT3E3IfUserCurrentStatsLCV, nndsxT3E3IfArchiveStatsValidIntervalsTable=nndsxT3E3IfArchiveStatsValidIntervalsTable, nndsxT3E3IfTestConfigTable=nndsxT3E3IfTestConfigTable, nndsxT3E3IfUserCurrentStatsUASState=nndsxT3E3IfUserCurrentStatsUASState, nndsxT3E3IfIetfCurrentStatsPSES=nndsxT3E3IfIetfCurrentStatsPSES, nndsxT3E3IfStatusEntry=nndsxT3E3IfStatusEntry, nndsxT3E3IfIetfTotalStatsPES=nndsxT3E3IfIetfTotalStatsPES, nndsxT3E3IfAnsiCurrentLineStatsCV=nndsxT3E3IfAnsiCurrentLineStatsCV, nndsxT3E3IfAnsiCurrentStatsUASState=nndsxT3E3IfAnsiCurrentStatsUASState, nndsxT3E3IfUserStatsGroup=nndsxT3E3IfUserStatsGroup, nndsxT3E3IfIetfArchiveStatsEntry=nndsxT3E3IfIetfArchiveStatsEntry, nndsxT3E3IfIetfArchiveStatsPSES=nndsxT3E3IfIetfArchiveStatsPSES, nndsxT3E3IfTestConfigTime=nndsxT3E3IfTestConfigTime, nndsxT3E3IfTestStatusTable=nndsxT3E3IfTestStatusTable, nndsxT3E3IfIetfTotalStatsTable=nndsxT3E3IfIetfTotalStatsTable, nndsxT3E3IfAnsiArchiveIntervalPathStatsCV=nndsxT3E3IfAnsiArchiveIntervalPathStatsCV, nndsxT3E3IfUserCurrentStatsTimeInCurrent=nndsxT3E3IfUserCurrentStatsTimeInCurrent, nndsxT3E3IfIetfCurrentStatsLES=nndsxT3E3IfIetfCurrentStatsLES, nndsxT3E3IfUserCurrentStatsPBE=nndsxT3E3IfUserCurrentStatsPBE, nndsxT3E3IfAnsiArchiveIntervalStatsTable=nndsxT3E3IfAnsiArchiveIntervalStatsTable, nndsxT3E3IfIetfCurrentStatsPCV=nndsxT3E3IfIetfCurrentStatsPCV, nndsxT3E3IfIetfTotalStatsCES=nndsxT3E3IfIetfTotalStatsCES, nndsxT3E3IfAlarmThresholdConfigRisingThreshold=nndsxT3E3IfAlarmThresholdConfigRisingThreshold, nndsxT3E3IfAnsiTotalPathStatsSAS=nndsxT3E3IfAnsiTotalPathStatsSAS, nndsxT3E3TrapVariables=nndsxT3E3TrapVariables, nndsxT3E3IfIndex=nndsxT3E3IfIndex, nndsxT3E3IfTestStatusTestState=nndsxT3E3IfTestStatusTestState, nndsxT3E3IfIetfCurrentStatsPES=nndsxT3E3IfIetfCurrentStatsPES, nndsxT3E3IfConfigTransmitClock=nndsxT3E3IfConfigTransmitClock, nndsxT3E3IfConfigLineType=nndsxT3E3IfConfigLineType, nndsxT3E3IfAlarmThresholdConfigEntry=nndsxT3E3IfAlarmThresholdConfigEntry, nndsxT3E3IfErrorEventStatsPBE=nndsxT3E3IfErrorEventStatsPBE, nndsxT3E3Number=nndsxT3E3Number, nndsxT3E3IfIetfArchiveStatsSEFS=nndsxT3E3IfIetfArchiveStatsSEFS, nndsxT3E3IfIetfCurrentStatsCES=nndsxT3E3IfIetfCurrentStatsCES, nndsxT3E3IfUserArchiveStatsFBE=nndsxT3E3IfUserArchiveStatsFBE, nndsxT3E3IfAlarmStatusTable=nndsxT3E3IfAlarmStatusTable, nndsxT3E3IfAlarmThresholdConfigSamplingInterval=nndsxT3E3IfAlarmThresholdConfigSamplingInterval, nndsxT3E3IfStatusTable=nndsxT3E3IfStatusTable, nndsxT3E3IfAnsiArchiveIntervalLineStatsSES=nndsxT3E3IfAnsiArchiveIntervalLineStatsSES, nndsxT3E3IfIetfArchiveStatsCES=nndsxT3E3IfIetfArchiveStatsCES, nndsxT3E3IfUserArchiveStatsEntry=nndsxT3E3IfUserArchiveStatsEntry, nndsxT3E3IfIetfTotalStatsLES=nndsxT3E3IfIetfTotalStatsLES, nndsxT3E3AlarmOffTrap=nndsxT3E3AlarmOffTrap, nndsxT3E3IfAlarmThresholdConfigObject=nndsxT3E3IfAlarmThresholdConfigObject, nndsxT3E3IfIetfArchiveStatsCSES=nndsxT3E3IfIetfArchiveStatsCSES, nndsxT3E3IfIetfTotalStatsLCV=nndsxT3E3IfIetfTotalStatsLCV, nndsxT3E3IfAnsiArchiveIntervalPathStatsUAS=nndsxT3E3IfAnsiArchiveIntervalPathStatsUAS, nndsxT3E3IfAnsiCurrentStatsTimeInCurrent=nndsxT3E3IfAnsiCurrentStatsTimeInCurrent, nndsxT3E3IfUserCurrentStatsEntry=nndsxT3E3IfUserCurrentStatsEntry, nndsxT3E3IfAlarmThresholdConfigIndex=nndsxT3E3IfAlarmThresholdConfigIndex, nndsxT3E3IfTestStatusLoopCode=nndsxT3E3IfTestStatusLoopCode, nndsxT3E3IfAnsiTotalLineStatsES=nndsxT3E3IfAnsiTotalLineStatsES, nndsxT3E3IfAlarmThresholdConfigSampleType=nndsxT3E3IfAlarmThresholdConfigSampleType, nndsxT3E3IfIetfTotalStatsUAS=nndsxT3E3IfIetfTotalStatsUAS, nndsxT3E3IfIetfArchiveStatsCCV=nndsxT3E3IfIetfArchiveStatsCCV, nndsxT3E3IfUserArchiveStatsPBE=nndsxT3E3IfUserArchiveStatsPBE, nndsxT3E3IfIetfCurrentStatsCSES=nndsxT3E3IfIetfCurrentStatsCSES, nndsxT3E3IfAnsiCurrentStatsEntry=nndsxT3E3IfAnsiCurrentStatsEntry, nndsxT3E3IfAnsiCurrentPathStatsCV=nndsxT3E3IfAnsiCurrentPathStatsCV, nndsxT3E3IfLastTestResultEntry=nndsxT3E3IfLastTestResultEntry, nndsxT3E3IfIetfCurrentStatsSEFS=nndsxT3E3IfIetfCurrentStatsSEFS, nndsxT3E3IfIetfArchiveStatsTable=nndsxT3E3IfIetfArchiveStatsTable, nndsxT3E3IfTestConfigPattern=nndsxT3E3IfTestConfigPattern, nndsxT3E3IfIetfArchiveStatsPCV=nndsxT3E3IfIetfArchiveStatsPCV, nndsxT3E3IfAlarmStatusEntry=nndsxT3E3IfAlarmStatusEntry, nndsxT3E3IfTestConfigEntry=nndsxT3E3IfTestConfigEntry, nndsxT3E3IfAnsiCurrentLineStatsSES=nndsxT3E3IfAnsiCurrentLineStatsSES, nndsxT3E3IfIetfTotalStatsPCV=nndsxT3E3IfIetfTotalStatsPCV, nndsxT3E3IfAnsiStatsGroup=nndsxT3E3IfAnsiStatsGroup, nndsxT3E3IfUserLifetimeStatsFEBE=nndsxT3E3IfUserLifetimeStatsFEBE, nndsxT3E3IfIetfCurrentStatsCCV=nndsxT3E3IfIetfCurrentStatsCCV, nndsxT3E3IfIetfArchiveStatsPES=nndsxT3E3IfIetfArchiveStatsPES, nndsxT3E3IfConfigLineCode=nndsxT3E3IfConfigLineCode, nndsxT3E3IfTestStatusEntry=nndsxT3E3IfTestStatusEntry, nndsxT3E3IfAnsiCurrentPathStatsSAS=nndsxT3E3IfAnsiCurrentPathStatsSAS, nndsxT3E3IfUserCurrentStatsFBE=nndsxT3E3IfUserCurrentStatsFBE, nndsxT3E3AlarmOnTrap=nndsxT3E3AlarmOnTrap, nndsxT3E3IfAnsiTotalPathStatsCV=nndsxT3E3IfAnsiTotalPathStatsCV, nndsxT3E3MIB=nndsxT3E3MIB, nndsxT3E3IfUserLifetimeStatsPBE=nndsxT3E3IfUserLifetimeStatsPBE, nndsxT3E3NotificationGroup=nndsxT3E3NotificationGroup, nndsxT3E3IfAnsiTotalPathStatsES=nndsxT3E3IfAnsiTotalPathStatsES, nndsxT3E3IfAlarmThresholdConfigFallingThreshold=nndsxT3E3IfAlarmThresholdConfigFallingThreshold, nndsxT3E3IfUserLifetimeStatsUAS=nndsxT3E3IfUserLifetimeStatsUAS, nndsxT3E3IfAnsiCurrentStatsTable=nndsxT3E3IfAnsiCurrentStatsTable, nndsxT3E3IfAnsiArchiveIntervalPathStatsES=nndsxT3E3IfAnsiArchiveIntervalPathStatsES, nndsxT3E3IfIetfTotalStatsSEFS=nndsxT3E3IfIetfTotalStatsSEFS)
