#
# PySNMP MIB module CISCO-FABRIC-MCAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FABRIC-MCAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:57:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entLogicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entLogicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, Counter64, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, TimeTicks, NotificationType, Gauge32, ObjectIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Counter64", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "IpAddress", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoFabricMcastMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 255))
ciscoFabricMcastMIB.setRevisions(('2002-08-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoFabricMcastMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoFabricMcastMIB.setLastUpdated('200208200000Z')
if mibBuilder.loadTexts: ciscoFabricMcastMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoFabricMcastMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-fabric@cisco.com')
if mibBuilder.loadTexts: ciscoFabricMcastMIB.setDescription('Fabric Multicast Resource MIB module. This MIB module is used for managing/tracking the fabric multicast resource related information. Acronyms and terms: FGID - Fabric Multicast Group Identifier. LR - Logical router.')
ciscoFabricMcastMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 0))
ciscoFabricMcastMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 1))
ciscoFabricMcastMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 2))
cfmGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 1))
cfmPool = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2))
cfmLr = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 3))
class CfmPoolIndex(TextualConvention, Unsigned32):
    description = "A unique value, greater than zero, for each fabric multicast resource pool in the managed system. It is recommended that values are assigned contiguously starting from 1. The value for each resource pool must remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

cfmGenInfoTotalFgids = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 1, 1), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmGenInfoTotalFgids.setStatus('current')
if mibBuilder.loadTexts: cfmGenInfoTotalFgids.setDescription('The total number of FGIDs resource are detected in the managed system.')
cfmGenInfoInuseFgids = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 1, 2), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmGenInfoInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmGenInfoInuseFgids.setDescription('The current number of FGIDs that are currently in use by the managed system.')
cfmGenInfoHighWaterInuseFgids = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 1, 3), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmGenInfoHighWaterInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmGenInfoHighWaterInuseFgids.setDescription('The highest number of FGIDs that was in use by all fabric multicast client applications in the managed system.')
cfmPoolTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1), )
if mibBuilder.loadTexts: cfmPoolTable.setStatus('current')
if mibBuilder.loadTexts: cfmPoolTable.setDescription('This table contains fabric multicast resource pool information.')
cfmPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-FABRIC-MCAST-MIB", "cfmPoolId"))
if mibBuilder.loadTexts: cfmPoolEntry.setStatus('current')
if mibBuilder.loadTexts: cfmPoolEntry.setDescription('The information regarding a single fabric multicast resource pool. An entry of this table is created when a fabric multicast dedicated pool related client application is registered to fabric software or the first of fabric multicast shared pool related client application is registered to fabric software. An entry of this table is removed when the the last fabric multicast client application is unregistered from the pool.')
cfmPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 1), CfmPoolIndex())
if mibBuilder.loadTexts: cfmPoolId.setStatus('current')
if mibBuilder.loadTexts: cfmPoolId.setDescription('An index that uniquely represents a fabric multicast resource pool. This index is assigned arbitrarily by the fabric software when fabric multicast application clients register for the use of fabric multicast resource.')
cfmPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmPoolName.setStatus('current')
if mibBuilder.loadTexts: cfmPoolName.setDescription('The object to indicate FGID pool name.')
cfmPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shared", 1), ("dedicated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmPoolType.setStatus('current')
if mibBuilder.loadTexts: cfmPoolType.setDescription('The object to indicate FGID pool type. shared(1) - the pool is shared by multiple types of FGID clients. dedicated(2) - the pool is dedicated for a specific type of client to use. The dedicated pool is normally used by a critical client to prevent processes deadlock during system initialization or restart.')
cfmPoolTotalFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 4), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmPoolTotalFgids.setStatus('current')
if mibBuilder.loadTexts: cfmPoolTotalFgids.setDescription('The total number of FGIDs in this pool. The total size might be dynamically adjusted based on the utilization of each pool or if a fabric multicast resource related entity is added or removed (e.g., add a new fabric rack or upgrade an old fabric rack to new fabric rack).')
cfmPoolInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 5), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmPoolInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmPoolInuseFgids.setDescription('The current number of FGIDs in this pool that are currently in use by the FGID clients from one or more logical routers.')
cfmPoolHighWaterInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 2, 1, 1, 6), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmPoolHighWaterInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmPoolHighWaterInuseFgids.setDescription('The highest number of FGIDs in this pool that was in use by the FGID clients from one or more logical routers.')
cfmLrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 3, 1), )
if mibBuilder.loadTexts: cfmLrTable.setStatus('current')
if mibBuilder.loadTexts: cfmLrTable.setDescription('This table contains fabric multicast resource information for a logical router.')
cfmLrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entLogicalIndex"))
if mibBuilder.loadTexts: cfmLrEntry.setStatus('current')
if mibBuilder.loadTexts: cfmLrEntry.setDescription('The information regarding a single logical router that uses fabric multicast resource. An entry of this table is created when a logical router is created in the entLogicalTable of ENTITY-MIB and the logical router is registered for fabric multicast resource service. A logical router is identified by the value of mib-2 in entLogicalType object of ENTITY-MIB. An entry of this table is removed when the entry associated logical router is removed from entLogicalTable of ENTITY-MIB.')
cfmLrInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 3, 1, 1, 1), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmLrInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmLrInuseFgids.setDescription('The current number of FGIDs that are currently in use by this logical router.')
cfmLrHighWaterInuseFgids = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 255, 1, 3, 1, 1, 2), Gauge32()).setUnits('fgid').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmLrHighWaterInuseFgids.setStatus('current')
if mibBuilder.loadTexts: cfmLrHighWaterInuseFgids.setDescription('The highest number of FGIDs that was in use by this logical router.')
cfmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 1))
cfmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 2))
cfmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 1, 1)).setObjects(("CISCO-FABRIC-MCAST-MIB", "cfmGenInfoGroup"), ("CISCO-FABRIC-MCAST-MIB", "cfmPoolGroup"), ("CISCO-FABRIC-MCAST-MIB", "cfmLrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmMIBCompliance = cfmMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cfmMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO-FABRIC-MCAST-MIB')
cfmGenInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 2, 1)).setObjects(("CISCO-FABRIC-MCAST-MIB", "cfmGenInfoTotalFgids"), ("CISCO-FABRIC-MCAST-MIB", "cfmGenInfoInuseFgids"), ("CISCO-FABRIC-MCAST-MIB", "cfmGenInfoHighWaterInuseFgids"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmGenInfoGroup = cfmGenInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cfmGenInfoGroup.setDescription('A collection of objects providing the general fabric multicast resource related configuration and statistics capability.')
cfmPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 2, 2)).setObjects(("CISCO-FABRIC-MCAST-MIB", "cfmPoolName"), ("CISCO-FABRIC-MCAST-MIB", "cfmPoolType"), ("CISCO-FABRIC-MCAST-MIB", "cfmPoolTotalFgids"), ("CISCO-FABRIC-MCAST-MIB", "cfmPoolInuseFgids"), ("CISCO-FABRIC-MCAST-MIB", "cfmPoolHighWaterInuseFgids"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmPoolGroup = cfmPoolGroup.setStatus('current')
if mibBuilder.loadTexts: cfmPoolGroup.setDescription('A collection of objects providing information for the fabric multicast resource pools.')
cfmLrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 255, 2, 2, 3)).setObjects(("CISCO-FABRIC-MCAST-MIB", "cfmLrInuseFgids"), ("CISCO-FABRIC-MCAST-MIB", "cfmLrHighWaterInuseFgids"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmLrGroup = cfmLrGroup.setStatus('current')
if mibBuilder.loadTexts: cfmLrGroup.setDescription('A collection of objects providing information for the logical routers that use the fabric multicast resource.')
mibBuilder.exportSymbols("CISCO-FABRIC-MCAST-MIB", cfmPoolHighWaterInuseFgids=cfmPoolHighWaterInuseFgids, cfmMIBCompliance=cfmMIBCompliance, cfmPoolType=cfmPoolType, ciscoFabricMcastMIBNotifs=ciscoFabricMcastMIBNotifs, PYSNMP_MODULE_ID=ciscoFabricMcastMIB, cfmLrInuseFgids=cfmLrInuseFgids, cfmGenInfoGroup=cfmGenInfoGroup, cfmLr=cfmLr, cfmPool=cfmPool, cfmGenInfoInuseFgids=cfmGenInfoInuseFgids, cfmPoolInuseFgids=cfmPoolInuseFgids, cfmLrTable=cfmLrTable, ciscoFabricMcastMIB=ciscoFabricMcastMIB, cfmLrHighWaterInuseFgids=cfmLrHighWaterInuseFgids, ciscoFabricMcastMIBObjects=ciscoFabricMcastMIBObjects, cfmPoolTotalFgids=cfmPoolTotalFgids, cfmPoolTable=cfmPoolTable, cfmLrEntry=cfmLrEntry, ciscoFabricMcastMIBConform=ciscoFabricMcastMIBConform, cfmMIBCompliances=cfmMIBCompliances, cfmGenInfoHighWaterInuseFgids=cfmGenInfoHighWaterInuseFgids, cfmGenInfoTotalFgids=cfmGenInfoTotalFgids, cfmPoolEntry=cfmPoolEntry, cfmPoolName=cfmPoolName, cfmLrGroup=cfmLrGroup, cfmMIBGroups=cfmMIBGroups, cfmPoolId=cfmPoolId, cfmPoolGroup=cfmPoolGroup, cfmGeneral=cfmGeneral, CfmPoolIndex=CfmPoolIndex)
