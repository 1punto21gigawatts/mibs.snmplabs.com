#
# PySNMP MIB module HUAWEI-BRAS-COPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-COPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, IpAddress, TimeTicks, Bits, iso, MibIdentifier, ModuleIdentity, Unsigned32, Gauge32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "TimeTicks", "Bits", "iso", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Gauge32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
hwBRASCops = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7))
if mibBuilder.loadTexts: hwBRASCops.setLastUpdated('200504181334Z')
if mibBuilder.loadTexts: hwBRASCops.setOrganization(' NanJing Institute,Huawei Technologies Co.,Ltd. HuiHong Mansion,No.91 BaiXia Rd. NanJing, P.R. of China Zipcode:210001 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwBRASCops.setContactInfo('The MIB contains objects of module COPS.')
if mibBuilder.loadTexts: hwBRASCops.setDescription('Description.')
hwCopsGroupObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1))
hwCopsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1), )
if mibBuilder.loadTexts: hwCopsGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupTable.setDescription('COPS group table.')
hwCopsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-COPS-MIB", "hwCopsGroupIndex"))
if mibBuilder.loadTexts: hwCopsGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupEntry.setDescription('COPS group configration.')
hwCopsGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCopsGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupIndex.setDescription('COPS group index.')
hwCopsGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupName.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupName.setDescription('COPS group name.')
hwCopsGroupClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupClientType.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupClientType.setDescription('COPS client type.')
hwCopsGroupIfActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupIfActive.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupIfActive.setDescription('COPS server active or inactive.')
hwCopsGroupFlowKeepingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupFlowKeepingTime.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupFlowKeepingTime.setDescription('COPS connection flow keeping time.')
hwCopsGroupSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupSecret.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupSecret.setDescription('COPS connection shared-key.')
hwCopsGroupPepid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupPepid.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupPepid.setDescription('COPS pep ID.')
hwCopsGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupRowStatus.setDescription('The operating state of the row, only can be Added or Deleted.')
hwCopsGroupSrcIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupSrcIf.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupSrcIf.setDescription('COPS group source interface.')
hwCopsGroupClientOption82Info = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsGroupClientOption82Info.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupClientOption82Info.setDescription('COPS group client option82 information.')
hwCopsServerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2), )
if mibBuilder.loadTexts: hwCopsServerTable.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerTable.setDescription('COPS server table.')
hwCopsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-COPS-MIB", "hwCopsServerGroupIndex"), (0, "HUAWEI-BRAS-COPS-MIB", "hwCopsGroupServerIndex"))
if mibBuilder.loadTexts: hwCopsServerEntry.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerEntry.setDescription('COPS server configration.')
hwCopsServerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCopsServerGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerGroupIndex.setDescription('COPS group index.')
hwCopsGroupServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCopsGroupServerIndex.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupServerIndex.setDescription('COPS server index in the group.')
hwCopsServerVpnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerVpnInstance.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerVpnInstance.setDescription('COPS server VPN instance name.')
hwCopsServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerIp.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerIp.setDescription('COPS server ip address.')
hwCopsServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3288)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerPort.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerPort.setDescription('COPS server port.')
hwCopsServerWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerWeight.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerWeight.setDescription('COPS server weight.')
hwCopsServerClientPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerClientPort.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerClientPort.setDescription('COPS client port.')
hwCopsServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCopsServerRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerRowStatus.setDescription('The operating state of the row, only can be Added or Deleted.')
hwCopsServerSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsServerSecret.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerSecret.setDescription('COPS server shared-key.')
hwCopsConfigTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 3))
hwCopsConfigOpenTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsConfigOpenTimeout.setStatus('current')
if mibBuilder.loadTexts: hwCopsConfigOpenTimeout.setDescription('COPS open timeout.')
hwCopsConfigKaTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCopsConfigKaTimeout.setStatus('current')
if mibBuilder.loadTexts: hwCopsConfigKaTimeout.setDescription('COPS KA timeout.')
hwCopsConfigSrcIfDesc = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 1, 3, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCopsConfigSrcIfDesc.setStatus('current')
if mibBuilder.loadTexts: hwCopsConfigSrcIfDesc.setDescription('COPS source interface.')
hwCopsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2))
hwCopsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 1))
hwCopsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 1, 1)).setObjects(("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupGroup"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerGroup"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsConfigTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCopsCompliance = hwCopsCompliance.setStatus('current')
if mibBuilder.loadTexts: hwCopsCompliance.setDescription('The compliance statement for systems supporting the this module.')
hwCopsObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 2))
hwCopsGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 2, 1)).setObjects(("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupName"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupClientType"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupIfActive"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupFlowKeepingTime"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupSecret"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupPepid"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupRowStatus"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupSrcIf"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsGroupClientOption82Info"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCopsGroupGroup = hwCopsGroupGroup.setStatus('current')
if mibBuilder.loadTexts: hwCopsGroupGroup.setDescription('The COPS group objects.')
hwCopsServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 2, 2)).setObjects(("HUAWEI-BRAS-COPS-MIB", "hwCopsServerIp"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerPort"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerWeight"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerVpnInstance"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerClientPort"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerRowStatus"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsServerSecret"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCopsServerGroup = hwCopsServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwCopsServerGroup.setDescription('The COPS Server group.')
hwCopsConfigTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 7, 2, 2, 3)).setObjects(("HUAWEI-BRAS-COPS-MIB", "hwCopsConfigOpenTimeout"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsConfigKaTimeout"), ("HUAWEI-BRAS-COPS-MIB", "hwCopsConfigSrcIfDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCopsConfigTableGroup = hwCopsConfigTableGroup.setStatus('current')
if mibBuilder.loadTexts: hwCopsConfigTableGroup.setDescription('The COPS config table group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-COPS-MIB", hwCopsConfigTable=hwCopsConfigTable, hwCopsServerVpnInstance=hwCopsServerVpnInstance, hwCopsGroupClientOption82Info=hwCopsGroupClientOption82Info, hwCopsServerClientPort=hwCopsServerClientPort, hwCopsConformance=hwCopsConformance, hwCopsGroupTable=hwCopsGroupTable, hwCopsCompliances=hwCopsCompliances, hwCopsConfigKaTimeout=hwCopsConfigKaTimeout, hwCopsGroupIfActive=hwCopsGroupIfActive, hwCopsCompliance=hwCopsCompliance, hwCopsServerTable=hwCopsServerTable, hwCopsGroupIndex=hwCopsGroupIndex, hwCopsGroupPepid=hwCopsGroupPepid, hwBRASCops=hwBRASCops, hwCopsGroupGroup=hwCopsGroupGroup, hwCopsGroupFlowKeepingTime=hwCopsGroupFlowKeepingTime, hwCopsServerGroupIndex=hwCopsServerGroupIndex, hwCopsGroupClientType=hwCopsGroupClientType, hwCopsServerSecret=hwCopsServerSecret, hwCopsObjectGroups=hwCopsObjectGroups, hwCopsServerGroup=hwCopsServerGroup, hwCopsServerEntry=hwCopsServerEntry, hwCopsConfigSrcIfDesc=hwCopsConfigSrcIfDesc, hwCopsGroupObject=hwCopsGroupObject, PYSNMP_MODULE_ID=hwBRASCops, hwCopsGroupRowStatus=hwCopsGroupRowStatus, hwCopsConfigOpenTimeout=hwCopsConfigOpenTimeout, hwCopsGroupSrcIf=hwCopsGroupSrcIf, hwCopsGroupServerIndex=hwCopsGroupServerIndex, hwCopsServerPort=hwCopsServerPort, hwCopsConfigTableGroup=hwCopsConfigTableGroup, hwCopsGroupName=hwCopsGroupName, hwCopsGroupEntry=hwCopsGroupEntry, hwCopsServerRowStatus=hwCopsServerRowStatus, hwCopsGroupSecret=hwCopsGroupSecret, hwCopsServerWeight=hwCopsServerWeight, hwCopsServerIp=hwCopsServerIp)
