#
# PySNMP MIB module AT-NTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-NTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:30:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
modules, = mibBuilder.importSymbols("AT-SMI-MIB", "modules")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ModuleIdentity, NotificationType, Gauge32, Unsigned32, Integer32, IpAddress, TimeTicks, Bits, ObjectIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "NotificationType", "Gauge32", "Unsigned32", "Integer32", "IpAddress", "TimeTicks", "Bits", "ObjectIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
atNtp = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502))
atNtp.setRevisions(('2010-09-07 00:00', '2010-06-15 00:15', '2008-11-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: atNtp.setRevisionsDescriptions(('Generic syntax tidy up', 'MIB revision history dates in descriptions updated.', 'Initial revision. ',))
if mibBuilder.loadTexts: atNtp.setLastUpdated('201009070000Z')
if mibBuilder.loadTexts: atNtp.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: atNtp.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: atNtp.setDescription('This MIB file contains definitions of managed objects for the Allied Telesis Network Time Protocol configuration. ')
atNtpPeerIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpPeerIndexNext.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerIndexNext.setDescription("This object represents the next available value for the object 'atNtpPeerIndex'. For creation of a new entry in the 'atNtpPeerTable', a management application should read this object, get the value and use the same.")
atNtpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7), )
if mibBuilder.loadTexts: atNtpPeerTable.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerTable.setDescription("This table contains information on the Network Time Protocol (NTP) peers' configurations in the system.")
atNtpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1), ).setIndexNames((0, "AT-NTP-MIB", "atNtpPeerIndex"))
if mibBuilder.loadTexts: atNtpPeerEntry.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerEntry.setDescription('A conceptual entry in atNtpPeerTable.')
atNtpPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: atNtpPeerIndex.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerIndex.setDescription("This object represents the index corresponding to a particular NTP server or peer configuration in the system. For creation of a new entry, the value of this object should be same as that of the value of 'atNtpPeerIndexNext' object. If this is not the case, then the entry creation will fail.")
atNtpPeerNameAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 2), DisplayString().clone('0.0.0.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atNtpPeerNameAddr.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerNameAddr.setDescription("This object represents host name, or the IP address, of the NTP peer. This object is a current object for row creation. When a new row is created, this object is set with a default value '0.0.0.0', and the management application should change it to a desired value by a SET operation.")
atNtpPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("server", 1), ("peer", 2))).clone('peer')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atNtpPeerMode.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerMode.setDescription("This object represents the mode of the peer. It's value is coded as follows: server(1), peer(2)")
atNtpPeerPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atNtpPeerPreference.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerPreference.setDescription("This object specifies whether this peer is the preferred one over the others. It's value is encoded as follows: 0 - unknown 1 - not preferred 2 - preferred When the value of this object is 'not preferred', NTP chooses the peer with which to synchronize the time on the local system. If this object is set to 'preferred', NTP will choose the corresponding peer to synchronize the time with. ")
atNtpPeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atNtpPeerVersion.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerVersion.setDescription("This object represents the NTP version the peer supports. It's value is encoded as follows: 0 - unknown 1 - version 1 2 - version 2 3 - version 3 4 - version 4 ")
atNtpPeerKeyNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atNtpPeerKeyNumber.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerKeyNumber.setDescription('This object represents the authentication key number.')
atNtpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 7, 1, 7), RowStatus().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: atNtpPeerRowStatus.setStatus('current')
if mibBuilder.loadTexts: atNtpPeerRowStatus.setDescription("The status of this row. The reading of this object should have a value of 'active(1)'. For creation of new entry, a management application should set this object with value 'createAndGo(4)', and using the same value as that got from reading object 'atNtpPeerIndexNext', as the index for the new entry. When an entry is created, the object 'atNtpPeerNameAddr' in the entry is set with a default value '0.0.0.0'. The management application should change it to a desired value with a SET operation. The management application may need to take additional SET operations to set values for other objects, to ensure they have desired values. For deletion of entry, a management application should set this object with value 'destroy(6)'. Once an entry is deleted, other entries in the table which have bigger index than the deleted one, will be indexed again. Therefore a management application can effectively delete multiple entries by repeating the SET operation using the same index.")
atNtpAssociationTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10), )
if mibBuilder.loadTexts: atNtpAssociationTable.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationTable.setDescription('This table contains NTP association information.')
atNtpAssociationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1), ).setIndexNames((0, "AT-NTP-MIB", "atNtpAssociationIndex"))
if mibBuilder.loadTexts: atNtpAssociationEntry.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationEntry.setDescription('An conceptual entry in atNtpAssociationTable.')
atNtpAssociationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: atNtpAssociationIndex.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationIndex.setDescription('This object represents the index corresponding to a particular NTP association.')
atNtpAssociationPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationPeerAddr.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationPeerAddr.setDescription("This object represents the peer's IP address or host name.")
atNtpAssocaitionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssocaitionStatus.setStatus('current')
if mibBuilder.loadTexts: atNtpAssocaitionStatus.setDescription("This object indicates the association's status. It's value is defined as follows: master(synced), master(unsynced), selected, candidate, configured, unknown. ")
atNtpAssociationConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationConfigured.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationConfigured.setDescription("This object indicates whether the association is from configuration or not. It's value can be either 'configured' or 'dynamic'. ")
atNtpAssociationRefClkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationRefClkAddr.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationRefClkAddr.setDescription('This object indicates the IP address for the reference clock.')
atNtpAssociationStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationStratum.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationStratum.setDescription('This object indicates the stratum of the peer clock.')
atNtpAssociationPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationPoll.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationPoll.setDescription('This object indicates the time between NTP requests from the device to the server.')
atNtpAssociationReach = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationReach.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationReach.setDescription('This object indicates the reachability status of the peer.')
atNtpAssociationDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationDelay.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationDelay.setDescription('This object indicates the round trip delay between the device and the server.')
atNtpAssociationOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationOffset.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationOffset.setDescription('This object indicates the difference between the device clock and the server clock.')
atNtpAssociationDisp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 10, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpAssociationDisp.setStatus('current')
if mibBuilder.loadTexts: atNtpAssociationDisp.setDescription('This object indicates the lowest measure of error associated with peer offset based on delay, in seconds.')
atNtpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11))
atNtpSysClockSync = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysClockSync.setStatus('current')
if mibBuilder.loadTexts: atNtpSysClockSync.setDescription('This object indicates whether the system clock is synchronized.')
atNtpSysStratum = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysStratum.setStatus('current')
if mibBuilder.loadTexts: atNtpSysStratum.setDescription('This object represents the stratum of the local clock.')
atNtpSysReference = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysReference.setStatus('current')
if mibBuilder.loadTexts: atNtpSysReference.setDescription('This object represents the current synchronization source.')
atNtpSysFrequency = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 4), Integer32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysFrequency.setStatus('current')
if mibBuilder.loadTexts: atNtpSysFrequency.setDescription('This object represents the actual clock frequency. source.')
atNtpSysPrecision = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysPrecision.setStatus('current')
if mibBuilder.loadTexts: atNtpSysPrecision.setDescription('Signed integer indicating the precision of the system clock, in seconds to the nearest power of two. The value is rounded to the next larger power of two; for instance, a 50-Hz(20 ms) or 60-Hz (16.67 ms) power-frequency clock would be assigned the value -5 (31.25 ms), while a 1000-Hz (1 ms) crystal-controlled clock would be assigned the value -9 (1.95 ms).')
atNtpSysRefTime = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysRefTime.setStatus('current')
if mibBuilder.loadTexts: atNtpSysRefTime.setDescription('This object indicates the local time when the local clock was last updated. If the local clock has never been synchronized, the value is zero')
atNtpSysClkOffset = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 7), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysClkOffset.setStatus('current')
if mibBuilder.loadTexts: atNtpSysClkOffset.setDescription('This object indicates the offset of the local clock relative to the server clock, in milliseconds.')
atNtpSysRootDelay = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 8), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysRootDelay.setStatus('current')
if mibBuilder.loadTexts: atNtpSysRootDelay.setDescription('This object indicats the total round-trip delay in milliseconds, to the primary reference source at the root of the synchronization subnet.')
atNtpSysRootDisp = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 502, 11, 9), Integer32()).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: atNtpSysRootDisp.setStatus('current')
if mibBuilder.loadTexts: atNtpSysRootDisp.setDescription('This object indicates the maximum error in milliseconds, relative to the primary reference source at the root of the synchronization subnet.')
mibBuilder.exportSymbols("AT-NTP-MIB", atNtpAssociationStratum=atNtpAssociationStratum, atNtpSysRootDisp=atNtpSysRootDisp, atNtp=atNtp, atNtpAssocaitionStatus=atNtpAssocaitionStatus, atNtpSysFrequency=atNtpSysFrequency, atNtpAssociationConfigured=atNtpAssociationConfigured, atNtpPeerIndex=atNtpPeerIndex, PYSNMP_MODULE_ID=atNtp, atNtpSysReference=atNtpSysReference, atNtpAssociationPoll=atNtpAssociationPoll, atNtpPeerVersion=atNtpPeerVersion, atNtpSysPrecision=atNtpSysPrecision, atNtpAssociationOffset=atNtpAssociationOffset, atNtpSysStratum=atNtpSysStratum, atNtpAssociationPeerAddr=atNtpAssociationPeerAddr, atNtpPeerKeyNumber=atNtpPeerKeyNumber, atNtpAssociationTable=atNtpAssociationTable, atNtpAssociationIndex=atNtpAssociationIndex, atNtpPeerMode=atNtpPeerMode, atNtpAssociationDisp=atNtpAssociationDisp, atNtpPeerNameAddr=atNtpPeerNameAddr, atNtpPeerTable=atNtpPeerTable, atNtpAssociationDelay=atNtpAssociationDelay, atNtpSysClockSync=atNtpSysClockSync, atNtpSysClkOffset=atNtpSysClkOffset, atNtpPeerPreference=atNtpPeerPreference, atNtpPeerEntry=atNtpPeerEntry, atNtpAssociationReach=atNtpAssociationReach, atNtpSysRefTime=atNtpSysRefTime, atNtpPeerIndexNext=atNtpPeerIndexNext, atNtpSysRootDelay=atNtpSysRootDelay, atNtpAssociationEntry=atNtpAssociationEntry, atNtpAssociationRefClkAddr=atNtpAssociationRefClkAddr, atNtpStatus=atNtpStatus, atNtpPeerRowStatus=atNtpPeerRowStatus)
