#
# PySNMP MIB module ULPB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ULPB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:28:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Integer32, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, experimental, NotificationType, MibIdentifier, iso, ObjectIdentity, ModuleIdentity, Counter64, Counter32, enterprises, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "experimental", "NotificationType", "MibIdentifier", "iso", "ObjectIdentity", "ModuleIdentity", "Counter64", "Counter32", "enterprises", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
ulpb = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 9))
ulpbAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 9, 1), )
if mibBuilder.loadTexts: ulpbAdmnTable.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnTable.setDescription('This table defines the objects that can be changed to manage a LAPB interface. Changing one of these parameters may take effect in the operating LAPB immediately or may wait until the interface is restarted depending on the details of the implementation.')
ulpbAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1), ).setIndexNames((0, "ULPB-MIB", "ulpbAdmnIndex"))
if mibBuilder.loadTexts: ulpbAdmnEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnEntry.setDescription('Configure parameter values for a specific LAPB.')
ulpbAdmnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbAdmnIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnIndex.setDescription('A unique value for each X.25 subnetwork entity running LAPB in the chassis. The value of this object matches the value of the index of the corresponding X.25 subnetwork entity running LAPB entry in the entity table of the chassis MIB.')
ulpbAdmnN2ReXmitVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnN2ReXmitVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnN2ReXmitVal.setDescription('The maximum number of times a PDU is sent after the Ack, P-bit or Reject timer expires. It also limits RR w/P-bit sends with remote busy true and the Busy timer expiring. Default=10.')
ulpbAdmnT1AckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnT1AckTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnT1AckTime.setDescription('The time interval during which the LAPB expects to receive a response to an outstanding IPDU or unexpected response to a sent unnumbered PDU. Value is in 0.1 second units. Default=10.')
ulpbAdmnTpfVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnTpfVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnTpfVal.setDescription('The time interval during which the LAPB expects to receive a PDU with the F-bit set to 1 in response to a command with the P-bit set to 1. Value is in 0.1 second units. Default=7.')
ulpbAdmnTrejVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnTrejVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnTrejVal.setDescription('The time interval during which the LAPB expects to receive a reply to a sent REJ TPDU. Value is in 0.1 second units. Default=25.')
ulpbAdmnTbusyVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnTbusyVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnTbusyVal.setDescription('The time interval during which the LAPB waits for an indication of the clearance of a busy condition at the other LAPB. Value is in 0.1 second units. Default=100.')
ulpbAdmnLinkIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnLinkIdleTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnLinkIdleTime.setDescription('The time interval during which the LAPB expexts to receive a PDU from the other LAPB. At expiration, the P/F cycle, which may result in disconnection is initiated. Value is in 0.1 second units. A value of 0 disables the timer. Default=250.')
ulpbAdmnT2AckDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnT2AckDelayTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnT2AckDelayTime.setDescription('The maximum time delay before sending a delayed RR. This must be considerably less than the Ack time value. Value is in 0.1 second units. Default=4.')
ulpbAdmnRecKWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnRecKWindowSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnRecKWindowSz.setDescription('The maximum number of unacknowledged IPDUs that can be received before the acknowledgement RR must be sent. Default=3.')
ulpbAdmnXmitKWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnXmitKWindowSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnXmitKWindowSz.setDescription('The maximum number of unacknowledged PDUs that may be sent before a response is required. Normal Mode = 1-7. Extended Mode = 1-127. Default=7.')
ulpbAdmnLocProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnLocProbe.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnLocProbe.setDescription('The position before the window is closed at which an I PDU is sent with the P-bit set to solicit an acknowledgment from the receiver. Default=0.')
ulpbAdmnMaxRecFrmSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(133, 519))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnMaxRecFrmSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnMaxRecFrmSz.setDescription('The maximum allowable received I frame size. It consists of X25 data + x25 protocol + LAPB protocol. Default=300.')
ulpbAdmnIgnUaError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnIgnUaError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnIgnUaError.setDescription('When the connection is in ERROR state, this parameter defines whether or not to ignore any UA frames received. Default=disable(1).')
ulpbAdmnFrmrFrmrError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnFrmrFrmrError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnFrmrFrmrError.setDescription('When the connection is in ERROR state, this parameter defines whether or not to re-transmit a frame reject if one is received. Default=disable(1).')
ulpbAdmnFrmrInvrspError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnFrmrInvrspError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnFrmrInvrspError.setDescription('When the connection is in ERROR state, this parameter defines whether or not to transmit a frame reject if an invalid frame response is received. Default=disable(1).')
ulpbAdmnSframePbit = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnSframePbit.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnSframePbit.setDescription('This parameter defines whether or not to send a frame reject if an S-Frame is received without the P-bit set. Default=disable(1).')
ulpbAdmnDmOnAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ulpbAdmnDmOnAdm.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbAdmnDmOnAdm.setDescription('This parameter defines whether or not to send a DM on entry to ADM state. Default=enable(2).')
ulpbOperTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 9, 2), )
if mibBuilder.loadTexts: ulpbOperTable.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperTable.setDescription('This table contains configuration information about interface parameters currently set in the interface. These objects are read-only.')
ulpbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1), ).setIndexNames((0, "ULPB-MIB", "ulpbOperIndex"))
if mibBuilder.loadTexts: ulpbOperEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperEntry.setDescription('Entries of ulpbOperTable.')
ulpbOperIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperIndex.setDescription('')
ulpbOperN2ReXmitVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperN2ReXmitVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperN2ReXmitVal.setDescription('')
ulpbOperT1AckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperT1AckTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperT1AckTime.setDescription('')
ulpbOperTpfVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperTpfVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperTpfVal.setDescription('')
ulpbOperTrejVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperTrejVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperTrejVal.setDescription('')
ulpbOperTbusyVal = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperTbusyVal.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperTbusyVal.setDescription('')
ulpbOperLinkIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperLinkIdleTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperLinkIdleTime.setDescription('')
ulpbOperT2AckDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperT2AckDelayTime.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperT2AckDelayTime.setDescription('')
ulpbOperRecKWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperRecKWindowSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperRecKWindowSz.setDescription('')
ulpbOperXmitKWindowSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperXmitKWindowSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperXmitKWindowSz.setDescription('')
ulpbOperLocProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperLocProbe.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperLocProbe.setDescription('')
ulpbOperMaxRecFrmSz = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(133, 519))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperMaxRecFrmSz.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperMaxRecFrmSz.setDescription('')
ulpbOperIgnUaError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperIgnUaError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperIgnUaError.setDescription('')
ulpbOperFrmrFrmrError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperFrmrFrmrError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperFrmrFrmrError.setDescription('')
ulpbOperFrmrInvrspError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperFrmrInvrspError.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperFrmrInvrspError.setDescription('')
ulpbOperSframePbit = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperSframePbit.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperSframePbit.setDescription('')
ulpbOperDmOnAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbOperDmOnAdm.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbOperDmOnAdm.setDescription('')
ulpbStatTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 9, 3), )
if mibBuilder.loadTexts: ulpbStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatTable.setDescription('Statistics information about this LAPB interface.')
ulpbStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1), ).setIndexNames((0, "ULPB-MIB", "ulpbStatIndex"))
if mibBuilder.loadTexts: ulpbStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatEntry.setDescription('Entries of ulpbStatTrable.')
ulpbStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatIndex.setDescription('A unique value for each X.25 subnetwork entity running LAPB in the chassis. The value of this object matches the value of the index of the corresponding X.25 subnetwork entity running LAPB entry in the entity table of the chassis MIB.')
ulpbStatRRCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRRCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRRCmdsRcvd.setDescription('Number of RR commands received.')
ulpbStatRRCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRRCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRRCmdsTrnsmt.setDescription('Number of RR commands transmitted.')
ulpbStatRRRspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRRRspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRRRspsRcvd.setDescription('Number of RR response received.')
ulpbStatRRRspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRRRspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRRRspsTrnsmt.setDescription('Number or RR response transmitted.')
ulpbStatRNRCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRNRCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRNRCmdsRcvd.setDescription('Number of RNR commands received.')
ulpbStatRNRCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRNRCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRNRCmdsTrnsmt.setDescription('Number of RNR commands transmitted.')
ulpbStatRNRRspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRNRRspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRNRRspsRcvd.setDescription('Number of RNR response received.')
ulpbStatRNRRspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatRNRRspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatRNRRspsTrnsmt.setDescription('Number of RNR response transmitted.')
ulpbStatREJCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatREJCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatREJCmdsRcvd.setDescription('Number of REJ commands received.')
ulpbStatREJCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatREJCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatREJCmdsTrnsmt.setDescription('Number of REJ commands transmitted.')
ulpbStatREJRspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatREJRspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatREJRspsRcvd.setDescription('Number of REJ responses received.')
ulpbStatREJRspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatREJRspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatREJRspsTrnsmt.setDescription('Number of REJ responses transmitted.')
ulpbStatSABMCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatSABMCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatSABMCmdsRcvd.setDescription('Number of SABM commands received.')
ulpbStatSABMCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatSABMCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatSABMCmdsTrnsmt.setDescription('Number of SABM commands transmitted.')
ulpbStatDISCCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatDISCCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatDISCCmdsRcvd.setDescription('Number of DISC commands received.')
ulpbStatDISCCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatDISCCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatDISCCmdsTrnsmt.setDescription('Number of DISC commands transmitted.')
ulpbStatDMRspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatDMRspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatDMRspsRcvd.setDescription('Number of DM response received.')
ulpbStatDMRspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatDMRspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatDMRspsTrnsmt.setDescription('Number of DM response transmitted.')
ulpbStatUARspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatUARspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatUARspsRcvd.setDescription('Number of UA response received.')
ulpbStatUARspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatUARspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatUARspsTrnsmt.setDescription('Number of UA response transmitted.')
ulpbStatFRMRRspsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatFRMRRspsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatFRMRRspsRcvd.setDescription('Number of FRMR response received.')
ulpbStatFRMRRspsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatFRMRRspsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatFRMRRspsTrnsmt.setDescription('Number of FRMR response transmitted.')
ulpbStatIFrameCmdsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatIFrameCmdsRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatIFrameCmdsRcvd.setDescription('Number of I-frame command received.')
ulpbStatIFrameCmdsTrnsmt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 9, 3, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ulpbStatIFrameCmdsTrnsmt.setStatus('mandatory')
if mibBuilder.loadTexts: ulpbStatIFrameCmdsTrnsmt.setDescription('Number of I-frame commands transmitted.')
mibBuilder.exportSymbols("ULPB-MIB", ulpbAdmnEntry=ulpbAdmnEntry, ulpbOperT1AckTime=ulpbOperT1AckTime, ulpbStatRRCmdsRcvd=ulpbStatRRCmdsRcvd, ulpbStatDMRspsRcvd=ulpbStatDMRspsRcvd, ulpbStatRNRRspsRcvd=ulpbStatRNRRspsRcvd, ulpbOperDmOnAdm=ulpbOperDmOnAdm, ulpbAdmnTpfVal=ulpbAdmnTpfVal, ulpbAdmnRecKWindowSz=ulpbAdmnRecKWindowSz, ulpbAdmnSframePbit=ulpbAdmnSframePbit, ulpbOperTpfVal=ulpbOperTpfVal, ulpbStatSABMCmdsTrnsmt=ulpbStatSABMCmdsTrnsmt, ulpbOperMaxRecFrmSz=ulpbOperMaxRecFrmSz, ulpbAdmnT1AckTime=ulpbAdmnT1AckTime, ulpbStatFRMRRspsRcvd=ulpbStatFRMRRspsRcvd, ulpbAdmnTbusyVal=ulpbAdmnTbusyVal, ulpbOperTable=ulpbOperTable, ulpbStatDISCCmdsRcvd=ulpbStatDISCCmdsRcvd, ulpbOperRecKWindowSz=ulpbOperRecKWindowSz, ulpbOperFrmrFrmrError=ulpbOperFrmrFrmrError, ulpbStatIndex=ulpbStatIndex, ulpbStatRRCmdsTrnsmt=ulpbStatRRCmdsTrnsmt, ulpbAdmnLocProbe=ulpbAdmnLocProbe, ulpbAdmnIgnUaError=ulpbAdmnIgnUaError, ulpbStatUARspsRcvd=ulpbStatUARspsRcvd, ulpbAdmnMaxRecFrmSz=ulpbAdmnMaxRecFrmSz, ulpbStatTable=ulpbStatTable, ulpbStatREJRspsTrnsmt=ulpbStatREJRspsTrnsmt, ulpbStatDMRspsTrnsmt=ulpbStatDMRspsTrnsmt, ulpbOperN2ReXmitVal=ulpbOperN2ReXmitVal, ulpbStatREJRspsRcvd=ulpbStatREJRspsRcvd, ulpbOperLocProbe=ulpbOperLocProbe, ulpbAdmnTable=ulpbAdmnTable, ulpbAdmnT2AckDelayTime=ulpbAdmnT2AckDelayTime, ulpbOperLinkIdleTime=ulpbOperLinkIdleTime, ulpbOperTbusyVal=ulpbOperTbusyVal, ulpbAdmnIndex=ulpbAdmnIndex, ulpbAdmnTrejVal=ulpbAdmnTrejVal, ulpbOperXmitKWindowSz=ulpbOperXmitKWindowSz, ulpbOperIgnUaError=ulpbOperIgnUaError, ulpbOperFrmrInvrspError=ulpbOperFrmrInvrspError, ulpbStatEntry=ulpbStatEntry, ulpbStatRNRCmdsTrnsmt=ulpbStatRNRCmdsTrnsmt, ulpbStatRNRRspsTrnsmt=ulpbStatRNRRspsTrnsmt, ulpbAdmnFrmrInvrspError=ulpbAdmnFrmrInvrspError, nas=nas, ulpbOperEntry=ulpbOperEntry, ulpbOperTrejVal=ulpbOperTrejVal, ulpbOperT2AckDelayTime=ulpbOperT2AckDelayTime, ulpbAdmnDmOnAdm=ulpbAdmnDmOnAdm, ulpbStatSABMCmdsRcvd=ulpbStatSABMCmdsRcvd, ulpbStatRNRCmdsRcvd=ulpbStatRNRCmdsRcvd, ulpbStatUARspsTrnsmt=ulpbStatUARspsTrnsmt, usr=usr, ulpbStatDISCCmdsTrnsmt=ulpbStatDISCCmdsTrnsmt, ulpbStatREJCmdsTrnsmt=ulpbStatREJCmdsTrnsmt, ulpbAdmnN2ReXmitVal=ulpbAdmnN2ReXmitVal, ulpbStatREJCmdsRcvd=ulpbStatREJCmdsRcvd, ulpbStatIFrameCmdsRcvd=ulpbStatIFrameCmdsRcvd, ulpb=ulpb, ulpbAdmnXmitKWindowSz=ulpbAdmnXmitKWindowSz, ulpbOperSframePbit=ulpbOperSframePbit, ulpbStatRRRspsRcvd=ulpbStatRRRspsRcvd, ulpbStatIFrameCmdsTrnsmt=ulpbStatIFrameCmdsTrnsmt, ulpbAdmnFrmrFrmrError=ulpbAdmnFrmrFrmrError, ulpbOperIndex=ulpbOperIndex, ulpbStatFRMRRspsTrnsmt=ulpbStatFRMRRspsTrnsmt, ulpbAdmnLinkIdleTime=ulpbAdmnLinkIdleTime, ulpbStatRRRspsTrnsmt=ulpbStatRRRspsTrnsmt)
