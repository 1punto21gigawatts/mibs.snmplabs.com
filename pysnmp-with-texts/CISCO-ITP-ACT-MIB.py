#
# PySNMP MIB module CISCO-ITP-ACT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-ACT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
CItpTcGlobalTitleSelectorName, CItpTcLinksetId, CItpTcGtaAddr, CItpTcPointCode, CItpTcServiceIndicator = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcGlobalTitleSelectorName", "CItpTcLinksetId", "CItpTcGtaAddr", "CItpTcPointCode", "CItpTcServiceIndicator")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, Integer32, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Counter64, iso, Unsigned32, TimeTicks, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Integer32", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Counter64", "iso", "Unsigned32", "TimeTicks", "IpAddress", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoItpActMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 230))
ciscoItpActMIB.setRevisions(('2002-12-18 00:00', '2001-09-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoItpActMIB.setRevisionsDescriptions(('The ability to allow multiple instances of Signalling Points to run in the same device has introduce a new index structure. All objects in this MIB will be deprecated and replaced by objects in the CISCO-ITP-GACT-MIB.my MIB.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoItpActMIB.setLastUpdated('200212180000Z')
if mibBuilder.loadTexts: ciscoItpActMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoItpActMIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoItpActMIB.setDescription('The MIB for providing information specified in ITU Q752 Monitoring and Measurements for Signalling System No. 7(SS7) Network. This information can be used to manage messages transported over SS7 Network via Cisco IP Transfer Point. The Cisco IP Transfer Point (ITP) is a hardware and software solution that transports SS7 traffic using IP. Each ITP node provides function similar to SS7 signaling point. The relevant ITU documents describing this technology is the ITU Q series, including ITU Q.700: Introduction to CCITT Signalling System No. 7 and ITU Q.701 Functional description of the message transfer part (MTP) of Signalling System No. 7.')
cItpActMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 0))
cItpActMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 1))
cItpActMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 2))
cItpActMtp3 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1))
cItpActGtt = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2))
cItpActMtp3Table = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1), )
if mibBuilder.loadTexts: cItpActMtp3Table.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3Table.setDescription('This table contains information about the number of packets and bytes at the MTP3 layer. The information collected from both directions(send and receive). The information is broken down by linkset, Destination Point Code (DPC), Originating Point Code (OPC) and Signalling Indicator (SI). This provides the lowest granularity required by Q752 and allows network management stations to calculate the required fields in Q752.')
cItpActMtp3TableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ITP-ACT-MIB", "cItpActMtp3TableId"), (0, "CISCO-ITP-ACT-MIB", "cItpActMtp3LinksetName"), (0, "CISCO-ITP-ACT-MIB", "cItpActMtp3Dpc"), (0, "CISCO-ITP-ACT-MIB", "cItpActMtp3Opc"), (0, "CISCO-ITP-ACT-MIB", "cItpActMtp3SI"))
if mibBuilder.loadTexts: cItpActMtp3TableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3TableEntry.setDescription('A list of MTP3 accounting objects.')
cItpActMtp3TableId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passed", 1), ("violation", 2))))
if mibBuilder.loadTexts: cItpActMtp3TableId.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3TableId.setDescription("The accounting table identifier. 'passed' : signifies that this table instance represents statistics for packets that matched an Access Control List (ACL) in the linkset's inbound ACL and in the outbound ACL. 'violation' : signifies that this table instance represents statistics for packets that did not match an ACL in the linkset's inbound ACL and in the outbound ACL.")
cItpActMtp3LinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 2), CItpTcLinksetId())
if mibBuilder.loadTexts: cItpActMtp3LinksetName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3LinksetName.setDescription('The name of the linkset.')
cItpActMtp3Dpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 3), CItpTcPointCode())
if mibBuilder.loadTexts: cItpActMtp3Dpc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3Dpc.setDescription('The destination point code.')
cItpActMtp3Opc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cItpActMtp3Opc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3Opc.setDescription('The origin point code.')
cItpActMtp3SI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 5), CItpTcServiceIndicator())
if mibBuilder.loadTexts: cItpActMtp3SI.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3SI.setDescription('The service indicator.')
cItpActMtp3RcvdPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActMtp3RcvdPackets.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3RcvdPackets.setDescription('Sum of all received packets for this linkset, DPC and OPC combination.')
cItpActMtp3SentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActMtp3SentPackets.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3SentPackets.setDescription('Sum of all transmitted packets for this linkset, DPC and OPC combination.')
cItpActMtp3RcvdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActMtp3RcvdBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3RcvdBytes.setDescription('Sum of all received bytes for this linkset, DPC and OPC combination.')
cItpActMtp3SentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 1, 1, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActMtp3SentBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3SentBytes.setDescription('Sum of all transmitted bytes for this linkset, DPC and OPC combination.')
cItpActGttTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1), )
if mibBuilder.loadTexts: cItpActGttTable.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttTable.setDescription('This table contains information about the number of packets and bytes required for global title translation.')
cItpActGttTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-ITP-ACT-MIB", "cItpActGttLinksetName"), (0, "CISCO-ITP-ACT-MIB", "cItpActGttSelectorName"), (0, "CISCO-ITP-ACT-MIB", "cItpActGttGta"), (0, "CISCO-ITP-ACT-MIB", "cItpActGttTranslatedPc"))
if mibBuilder.loadTexts: cItpActGttTableEntry.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttTableEntry.setDescription('A list of Gtt accounting objects.')
cItpActGttLinksetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 1), CItpTcLinksetId())
if mibBuilder.loadTexts: cItpActGttLinksetName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttLinksetName.setDescription('The name of the linkset.')
cItpActGttSelectorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 2), CItpTcGlobalTitleSelectorName())
if mibBuilder.loadTexts: cItpActGttSelectorName.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttSelectorName.setDescription('The Global Title Selector Name.')
cItpActGttGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 3), CItpTcGtaAddr())
if mibBuilder.loadTexts: cItpActGttGta.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttGta.setDescription('The Global Title Address.')
cItpActGttTranslatedPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 4), CItpTcPointCode())
if mibBuilder.loadTexts: cItpActGttTranslatedPc.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttTranslatedPc.setDescription('The translated point code.')
cItpActGttPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActGttPackets.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttPackets.setDescription('Number of packets performing Global Title Translation.')
cItpActGttBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 230, 1, 2, 1, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cItpActGttBytes.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttBytes.setDescription('Count of bytes received that required Global Title Translation.')
cItpActMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 2, 1))
cItpActMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 230, 2, 2))
cItpActMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 230, 2, 1, 1)).setObjects(("CISCO-ITP-ACT-MIB", "cItpActMtp3Group"), ("CISCO-ITP-ACT-MIB", "cItpActGttGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpActMIBCompliance = cItpActMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco SP MIB')
cItpActMtp3Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 230, 2, 2, 1)).setObjects(("CISCO-ITP-ACT-MIB", "cItpActMtp3RcvdPackets"), ("CISCO-ITP-ACT-MIB", "cItpActMtp3SentPackets"), ("CISCO-ITP-ACT-MIB", "cItpActMtp3RcvdBytes"), ("CISCO-ITP-ACT-MIB", "cItpActMtp3SentBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpActMtp3Group = cItpActMtp3Group.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActMtp3Group.setDescription('Accounting for MTP3 objects.')
cItpActGttGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 230, 2, 2, 2)).setObjects(("CISCO-ITP-ACT-MIB", "cItpActGttPackets"), ("CISCO-ITP-ACT-MIB", "cItpActGttBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cItpActGttGroup = cItpActGttGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cItpActGttGroup.setDescription('Accounting for Global Title Translation.')
mibBuilder.exportSymbols("CISCO-ITP-ACT-MIB", cItpActMIBNotifs=cItpActMIBNotifs, cItpActGttPackets=cItpActGttPackets, cItpActMIBConformance=cItpActMIBConformance, cItpActMtp3TableId=cItpActMtp3TableId, cItpActMtp3Table=cItpActMtp3Table, cItpActMtp3Dpc=cItpActMtp3Dpc, cItpActMIBGroups=cItpActMIBGroups, cItpActMIBCompliance=cItpActMIBCompliance, PYSNMP_MODULE_ID=ciscoItpActMIB, cItpActGttTable=cItpActGttTable, cItpActGttTableEntry=cItpActGttTableEntry, cItpActGtt=cItpActGtt, cItpActMtp3SI=cItpActMtp3SI, cItpActMtp3Group=cItpActMtp3Group, cItpActMtp3RcvdPackets=cItpActMtp3RcvdPackets, cItpActGttSelectorName=cItpActGttSelectorName, cItpActMIBObjects=cItpActMIBObjects, cItpActMtp3TableEntry=cItpActMtp3TableEntry, cItpActMtp3LinksetName=cItpActMtp3LinksetName, cItpActGttGta=cItpActGttGta, ciscoItpActMIB=ciscoItpActMIB, cItpActMtp3RcvdBytes=cItpActMtp3RcvdBytes, cItpActMtp3=cItpActMtp3, cItpActMtp3SentBytes=cItpActMtp3SentBytes, cItpActMtp3SentPackets=cItpActMtp3SentPackets, cItpActMtp3Opc=cItpActMtp3Opc, cItpActMIBCompliances=cItpActMIBCompliances, cItpActGttTranslatedPc=cItpActGttTranslatedPc, cItpActGttGroup=cItpActGttGroup, cItpActGttLinksetName=cItpActGttLinksetName, cItpActGttBytes=cItpActGttBytes)
