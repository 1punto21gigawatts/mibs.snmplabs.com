#
# PySNMP MIB module SHIVA-MLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SHIVA-MLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:03:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
messageLog, = mibBuilder.importSymbols("SHIVA-MIB", "messageLog")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, MibIdentifier, Counter32, Integer32, Bits, Gauge32, Counter64, ModuleIdentity, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "Integer32", "Bits", "Gauge32", "Counter64", "ModuleIdentity", "NotificationType", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
mLogEntryCount = MibScalar((1, 3, 6, 1, 4, 1, 166, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mLogEntryCount.setStatus('deprecated')
if mibBuilder.loadTexts: mLogEntryCount.setDescription('The number of entries currently in the message log buffer.')
mLogNewMessageTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 166, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("disabled", 1), ("emerg", 2), ("alert", 3), ("crit", 4), ("err", 5), ("warning", 6), ("notice", 7), ("info", 8), ("debug", 9))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mLogNewMessageTrapEnable.setStatus('deprecated')
if mibBuilder.loadTexts: mLogNewMessageTrapEnable.setDescription('Enables or disables the generation of mLogNewMessage Traps of a priority numerically equal or lower than the value of this variable.')
mLogBuffer = MibTable((1, 3, 6, 1, 4, 1, 166, 1, 1, 3), )
if mibBuilder.loadTexts: mLogBuffer.setStatus('deprecated')
if mibBuilder.loadTexts: mLogBuffer.setDescription('A list of message log entries.')
pysmiFakeCol1000 = MibTableColumn((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1) + (1000, ), Integer32())
mLogMessage = MibTableRow((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1), ).setIndexNames((0, "SHIVA-MLOG-MIB", "pysmiFakeCol1000"))
if mibBuilder.loadTexts: mLogMessage.setStatus('deprecated')
if mibBuilder.loadTexts: mLogMessage.setDescription('An entry in the message log. Entries are indexed by counting integers. Since the earliest messages are dropped from the log when it overflows, the first row in the table is not necessarily row 1. Therefore, a Get-Next request should be issued to determine the index of the first row.')
mLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mLogTimeStamp.setStatus('deprecated')
if mibBuilder.loadTexts: mLogTimeStamp.setDescription('The time the message was generated, measured in number of ticks since the device started.')
mLogPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("not-possible", 1), ("emerg", 2), ("alert", 3), ("crit", 4), ("err", 5), ("warning", 6), ("notice", 7), ("info", 8), ("debug", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mLogPriority.setStatus('deprecated')
if mibBuilder.loadTexts: mLogPriority.setDescription("The priority of the log message. This field is for future use. All messages are currently logged at priority 'notice'")
mLogMessageText = MibTableColumn((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mLogMessageText.setStatus('deprecated')
if mibBuilder.loadTexts: mLogMessageText.setDescription('The text of the log message.')
mLogTimeOfDay = MibTableColumn((1, 3, 6, 1, 4, 1, 166, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mLogTimeOfDay.setStatus('deprecated')
if mibBuilder.loadTexts: mLogTimeOfDay.setDescription('The time of day at which the message is logged. This is expressed in seconds.')
mibBuilder.exportSymbols("SHIVA-MLOG-MIB", pysmiFakeCol1000=pysmiFakeCol1000, mLogTimeOfDay=mLogTimeOfDay, mLogMessageText=mLogMessageText, mLogPriority=mLogPriority, mLogMessage=mLogMessage, mLogTimeStamp=mLogTimeStamp, mLogNewMessageTrapEnable=mLogNewMessageTrapEnable, mLogBuffer=mLogBuffer, mLogEntryCount=mLogEntryCount)
