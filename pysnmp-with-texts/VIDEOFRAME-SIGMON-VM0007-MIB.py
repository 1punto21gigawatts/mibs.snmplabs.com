#
# PySNMP MIB module VIDEOFRAME-SIGMON-VM0007-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VIDEOFRAME-SIGMON-VM0007-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:34:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, Gauge32, NotificationType, ModuleIdentity, iso, Bits, Integer32, MibIdentifier, Counter32, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "NotificationType", "ModuleIdentity", "iso", "Bits", "Integer32", "MibIdentifier", "Counter32", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
vfBoxId, = mibBuilder.importSymbols("VIDEOFRAME-GENERIC-MIB", "vfBoxId")
vfMIBModules, = mibBuilder.importSymbols("VIDEOFRAME-REGISTRATIONS-MIB", "vfMIBModules")
vfSigmonFrameModuleTypes, vfProductsVF200Reg, vfFrameSlotNumber = mibBuilder.importSymbols("VIDEOFRAME-SIGMON-MIB", "vfSigmonFrameModuleTypes", "vfProductsVF200Reg", "vfFrameSlotNumber")
videoframeSigmonVm0007MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4596, 6, 1, 7))
videoframeSigmonVm0007MIB.setRevisions(('1901-08-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: videoframeSigmonVm0007MIB.setRevisionsDescriptions(('First release.',))
if mibBuilder.loadTexts: videoframeSigmonVm0007MIB.setLastUpdated('0108300000Z')
if mibBuilder.loadTexts: videoframeSigmonVm0007MIB.setOrganization('Videoframe Systems')
if mibBuilder.loadTexts: videoframeSigmonVm0007MIB.setContactInfo('Videoframe Systems P.O. Box 1991, Grass Valley, CA 95945, USA. +1 (530) 477-2000 http://www.videoframesystems.com')
if mibBuilder.loadTexts: videoframeSigmonVm0007MIB.setDescription('This MIB describes the device specific objects of the VM0007 Transfer Switch module, and augments MIB-2, VF-GENERIC, and VF-SIGMON in the identification of this Videoframe Systems managed device. This module will be extended or modified as required. Videoframe Systems reserves the right to make changes in specification and other information contained in this document without prior notice. The reader should consult Videoframe Systems to determine whether any such changes have been made. In no event shall Videoframe Systems be liable for any incidental, indirect, special, or consequential damages whatsoever (including but not limited to lost profits) arising out of or related to this document or the information contained in it. Videoframe Systems grants vendors, end users, and other interested parties a non-exclusive license to use this specification in connection with the management of Videoframe Systems products. Copyright 2001 Videoframe, Inc.')
vfProductsVM0007Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 4596, 6, 2, 5, 7))
if mibBuilder.loadTexts: vfProductsVM0007Reg.setStatus('current')
if mibBuilder.loadTexts: vfProductsVM0007Reg.setDescription('Videoframe VM0007 A/V Transfer Switch Module.')
vm0007TransferSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7))
vm0007Table = MibTable((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1), )
if mibBuilder.loadTexts: vm0007Table.setStatus('current')
if mibBuilder.loadTexts: vm0007Table.setDescription('Each row contains information about one VM0007 A/V Transfer Switch module in the managed VF200 frame.')
vm0007Entry = MibTableRow((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1), ).setIndexNames((0, "VIDEOFRAME-SIGMON-MIB", "vfFrameSlotNumber"))
if mibBuilder.loadTexts: vm0007Entry.setStatus('current')
if mibBuilder.loadTexts: vm0007Entry.setDescription('A VM0007 A/V Transfer Switch module entry.')
vm0007SlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vm0007SlotNumber.setStatus('current')
if mibBuilder.loadTexts: vm0007SlotNumber.setDescription('The slot that this entry represents.')
vm0007Active = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vm0007Active.setStatus('current')
if mibBuilder.loadTexts: vm0007Active.setDescription('Indicates whether this entry is active (this module is in this slot).')
vm0007Locate = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flash", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007Locate.setStatus('current')
if mibBuilder.loadTexts: vm0007Locate.setDescription('Controls the locate indicator on the module and indicates its current state. Set to flash (1) to cause the locate LED on the front of the module to begin flashing. Set to off to stop flashing.')
vm0007VideoSignalSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crossover", 1), ("straightThrough", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoSignalSwitchState.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoSignalSwitchState.setDescription('Controls the the video signal switch on the module and indicates its current state.')
vm0007TransferSwitchAlarmAck = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("idle", 1), ("unacknowledged", 2), ("acknowledge", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007TransferSwitchAlarmAck.setStatus('current')
if mibBuilder.loadTexts: vm0007TransferSwitchAlarmAck.setDescription('Set to acknowledge (3) to acknowledge a triggered transfer switch alarm. This will acknowledge both the transferSwitchActivatedAlarm and the transferSwitchNormalAlarm. With Auto Re-Arm off, one of each alarm will be allowed between acknowledges.')
vm0007CPUOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007CPUOverride.setStatus('current')
if mibBuilder.loadTexts: vm0007CPUOverride.setDescription("Set to 'on' to ignore GPI inputs on the module back panel and put the switch completely under SNMP or network API control.")
vm0007VideoSource1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoSource1Name.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoSource1Name.setDescription("The name of the signal connected to the 'S1' video input.")
vm0007VideoSource1Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoSource1Description.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoSource1Description.setDescription("Descriptive identification of the signal connected to the 'S1' video input.")
vm0007VideoSource2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoSource2Name.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoSource2Name.setDescription("The name of the signal connected to the 'S2' video input.")
vm0007VideoSource2Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoSource2Description.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoSource2Description.setDescription("Descriptive identification of the signal connected to the 'S2' video input.")
vm0007VideoDest1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoDest1Name.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoDest1Name.setDescription("The name of the destination for the 'D1' video output.")
vm0007VideoDest1Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoDest1Description.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoDest1Description.setDescription("Descriptive identification of the destination for the 'D1' video output.")
vm0007VideoDest2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoDest2Name.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoDest2Name.setDescription("The name of the destination for the 'D2' video output.")
vm0007VideoDest2Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007VideoDest2Description.setStatus('current')
if mibBuilder.loadTexts: vm0007VideoDest2Description.setDescription("Descriptive identification of the destination for the 'D2' video output.")
vm0007AudioChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2), )
if mibBuilder.loadTexts: vm0007AudioChannelTable.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChannelTable.setDescription('Each row contains information about one audio channel of one VM0007 A/V Transfer Switch module in the managed VF200 frame.')
vm0007AudioChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1), ).setIndexNames((0, "VIDEOFRAME-SIGMON-MIB", "vfFrameSlotNumber"), (0, "VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007AudioChannelNumber"))
if mibBuilder.loadTexts: vm0007AudioChannelEntry.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChannelEntry.setDescription('An A/V Transfer Switch module audio channel entry.')
vm0007AudioChannelSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vm0007AudioChannelSlotNumber.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChannelSlotNumber.setDescription('The frame slot number that this entry represents.')
vm0007AudioChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vm0007AudioChannelNumber.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChannelNumber.setDescription('The channel within the module to which this signal is connected.')
vm0007AudioChannelSwitchState = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crossover", 1), ("straightThrough", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChannelSwitchState.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChannelSwitchState.setDescription('Controls the audio signal switch for this channel and indicates its current state.')
vm0007AudioChanSource1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanSource1Name.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanSource1Name.setDescription('The name of the signal connected to S1-An for this channel.')
vm0007AudioChanSource1Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanSource1Description.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanSource1Description.setDescription('Descriptive identification of the signal connected to S1-An for this channel.')
vm0007AudioChanSource2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanSource2Name.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanSource2Name.setDescription('The name of the signal connected to S2-An for this channel.')
vm0007AudioChanSource2Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanSource2Description.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanSource2Description.setDescription('Descriptive identification of the signal connected to S2-An for this channel.')
vm0007AudioChanDest1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanDest1Name.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanDest1Name.setDescription('The name of the signal connected to D1-An for this channel.')
vm0007AudioChanDest1Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanDest1Description.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanDest1Description.setDescription('Descriptive identification of the signal connected to D1-An for this channel.')
vm0007AudioChanDest2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanDest2Name.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanDest2Name.setDescription('The name of the signal connected to D1-An for this channel.')
vm0007AudioChanDest2Description = MibTableColumn((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vm0007AudioChanDest2Description.setStatus('current')
if mibBuilder.loadTexts: vm0007AudioChanDest2Description.setDescription('Descriptive identification of the signal connected to D1-An for this channel.')
vm0007TransferSwitchEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 3))
vm0007TransferSwitchEventsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 3, 0))
transferSwitchActivatedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 3, 0, 1)).setObjects(("VIDEOFRAME-GENERIC-MIB", "vfBoxId"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007SlotNumber"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoSource1Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoSource2Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoDest1Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoDest2Name"))
if mibBuilder.loadTexts: transferSwitchActivatedAlarm.setStatus('current')
if mibBuilder.loadTexts: transferSwitchActivatedAlarm.setDescription('An A/V Transfer Switch was switched to crossover (backup) mode.')
transferSwitchNormalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 4596, 4, 2, 1, 7, 3, 0, 2)).setObjects(("VIDEOFRAME-GENERIC-MIB", "vfBoxId"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007SlotNumber"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoSource1Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoSource2Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoDest1Name"), ("VIDEOFRAME-SIGMON-VM0007-MIB", "vm0007VideoDest2Name"))
if mibBuilder.loadTexts: transferSwitchNormalAlarm.setStatus('current')
if mibBuilder.loadTexts: transferSwitchNormalAlarm.setDescription('An A/V Transfer Switch was switched to straight through (normal) mode.')
mibBuilder.exportSymbols("VIDEOFRAME-SIGMON-VM0007-MIB", vm0007AudioChanDest2Name=vm0007AudioChanDest2Name, vm0007AudioChannelNumber=vm0007AudioChannelNumber, PYSNMP_MODULE_ID=videoframeSigmonVm0007MIB, vm0007AudioChannelTable=vm0007AudioChannelTable, vm0007TransferSwitchEvents=vm0007TransferSwitchEvents, vm0007VideoSource2Name=vm0007VideoSource2Name, vm0007Active=vm0007Active, vm0007AudioChanSource1Name=vm0007AudioChanSource1Name, vm0007AudioChanDest1Name=vm0007AudioChanDest1Name, transferSwitchActivatedAlarm=transferSwitchActivatedAlarm, vm0007VideoSource1Description=vm0007VideoSource1Description, vm0007Entry=vm0007Entry, vfProductsVM0007Reg=vfProductsVM0007Reg, vm0007Table=vm0007Table, vm0007AudioChannelSwitchState=vm0007AudioChannelSwitchState, vm0007AudioChanDest2Description=vm0007AudioChanDest2Description, vm0007TransferSwitchEventsV2=vm0007TransferSwitchEventsV2, vm0007AudioChanSource2Description=vm0007AudioChanSource2Description, videoframeSigmonVm0007MIB=videoframeSigmonVm0007MIB, vm0007VideoSource2Description=vm0007VideoSource2Description, vm0007AudioChanDest1Description=vm0007AudioChanDest1Description, vm0007AudioChannelSlotNumber=vm0007AudioChannelSlotNumber, vm0007AudioChanSource2Name=vm0007AudioChanSource2Name, vm0007CPUOverride=vm0007CPUOverride, transferSwitchNormalAlarm=transferSwitchNormalAlarm, vm0007VideoDest2Name=vm0007VideoDest2Name, vm0007VideoSignalSwitchState=vm0007VideoSignalSwitchState, vm0007Locate=vm0007Locate, vm0007VideoSource1Name=vm0007VideoSource1Name, vm0007VideoDest1Description=vm0007VideoDest1Description, vm0007VideoDest2Description=vm0007VideoDest2Description, vm0007TransferSwitchAlarmAck=vm0007TransferSwitchAlarmAck, vm0007AudioChanSource1Description=vm0007AudioChanSource1Description, vm0007VideoDest1Name=vm0007VideoDest1Name, vm0007SlotNumber=vm0007SlotNumber, vm0007AudioChannelEntry=vm0007AudioChannelEntry, vm0007TransferSwitch=vm0007TransferSwitch)
