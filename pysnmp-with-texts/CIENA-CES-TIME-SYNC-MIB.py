#
# PySNMP MIB module CIENA-CES-TIME-SYNC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-TIME-SYNC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:49:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
cienaGlobalSeverity, cienaGlobalMacAddress = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalSeverity", "cienaGlobalMacAddress")
cienaCesConfig, cienaCesNotifications = mibBuilder.importSymbols("CIENA-SMI", "cienaCesConfig", "cienaCesNotifications")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, ObjectIdentity, NotificationType, iso, TimeTicks, IpAddress, Gauge32, Integer32, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "ObjectIdentity", "NotificationType", "iso", "TimeTicks", "IpAddress", "Gauge32", "Integer32", "Bits", "Unsigned32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cienaCesTimeSyncMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28))
cienaCesTimeSyncMIB.setRevisions(('2012-06-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cienaCesTimeSyncMIB.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: cienaCesTimeSyncMIB.setLastUpdated('201206200000Z')
if mibBuilder.loadTexts: cienaCesTimeSyncMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: cienaCesTimeSyncMIB.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: cienaCesTimeSyncMIB.setDescription('This MIB module defines objects and associated notifications for the System Timing feature.')
class SsmStratumLevel(TextualConvention, Integer32):
    description = 'International and North American SSM Values'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("unknown", 1), ("prc", 2), ("ssua", 3), ("ssub", 4), ("sec", 5), ("dnu", 6), ("prs", 7), ("stu", 8), ("st2", 9), ("tnc", 10), ("st3e", 11), ("st3", 12), ("smc", 13), ("st4", 14), ("dus", 15), ("prov", 16))

class SyncInterfaceProtocol(TextualConvention, Integer32):
    description = 'Interface protocol of an input/output reference.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("bits", 2), ("synce", 3))

class SyncBITSSignalMode(TextualConvention, Integer32):
    description = 'Station Clock BITS signal mode.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("modeunknown", 1), ("modet1", 2), ("modee1", 3), ("modej1", 4), ("mode2048khz", 5), ("mode64kcc", 6), ("mode6312khz", 7))

class SyncBITSSignalFormat(TextualConvention, Integer32):
    description = 'Station Clock BITS signal format. Esf and sf are applied to t1 signal only where as ccs and cas are applied to e1 signal.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("unknown", 1), ("cas", 2), ("cascrc", 3), ("esf", 4), ("fas", 5), ("fascrc", 6), ("sf", 7))

class SyncBITSSignalEncoding(TextualConvention, Integer32):
    description = 'Encoding method used on T1/E1 BITS signal.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("b8zs", 2), ("ami", 3), ("hdb3", 4))

class SyncRefOperationalStatus(TextualConvention, Integer32):
    description = 'Operational status of an input/output reference.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("unknown", 1), ("active", 2), ("selected", 3), ("lossofsignal", 4), ("lossofframe", 5), ("alarmindicationsignal", 6), ("hardwarefault", 7), ("hardwarenotconfigured", 8), ("qlbelowthreshold", 9), ("rxtimeout", 10), ("notauthenticated", 11), ("loopbacktx", 12), ("loopbackrx", 13), ("linkflap", 14))

cienaCesTimeSyncMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1))
cienaCesTimeSyncObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1))
cienaCesTimeSyncMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 28))
cienaCesTimeSyncMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 28, 0))
cienaCesSyncAdminState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesSyncAdminState.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncAdminState.setDescription('Globally enable/disable Sync')
cienaCesSyncOptionType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("option1", 2), ("option2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesSyncOptionType.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncOptionType.setDescription('Indication of which set of SSM values being used. Option 1 is for International standard and Option 2 is for North American.')
cienaCesSyncRevertiveMode = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("revertive", 2), ("nonrevertive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesSyncRevertiveMode.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncRevertiveMode.setDescription('Revertive mode.')
cienaCesSyncWaitToRestoreTimer = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesSyncWaitToRestoreTimer.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncWaitToRestoreTimer.setDescription('User configured timer for a timing reference source to wait before transitioning from bad to good clock signal.')
cienaCesSyncInputProtectionGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5), )
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupTable.setDescription('A table of protection groups for input timing reference.')
cienaCesSyncInputProtectionGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1), ).setIndexNames((0, "CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPGEntityId"))
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupEntry.setDescription('An entry in this table represents information on a protection group for input timing reference')
cienaCesInputPGEntityId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: cienaCesInputPGEntityId.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGEntityId.setDescription('The unique identifier of this input protection group.')
cienaCesInputPGEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGEntityName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGEntityName.setDescription('The unique name of this input protection group.')
cienaCesInputPGPreferredReference = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGPreferredReference.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGPreferredReference.setDescription('Preferred timing reference source, configured by users.')
cienaCesInputPGSelectedReference = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGSelectedReference.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGSelectedReference.setDescription('System selected timing reference source.')
cienaCesInputPGForcedReference = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGForcedReference.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGForcedReference.setDescription('System was forced to used this timing reference source.')
cienaCesInputPGThresholdQualityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 6), SsmStratumLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGThresholdQualityLevel.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGThresholdQualityLevel.setDescription('Specified Quality Level threshold for a reference source being selected.')
cienaCesInputPGState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 7), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGState.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGState.setDescription('Configured state of this protection group.')
cienaCesInputPGStateDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGStateDuration.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGStateDuration.setDescription('Duration since the system entered current state.')
cienaCesInputPGReferenceSwitchCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGReferenceSwitchCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGReferenceSwitchCount.setDescription('The number of timing reference switching since the system stared up.')
cienaCesInputPGOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("freerun", 2), ("holdover", 3), ("locked", 4), ("acquiringlock", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPGOperationalStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPGOperationalStatus.setDescription('Operational status of this protection group.')
cienaCesSyncInputProtectionUnitTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6), )
if mibBuilder.loadTexts: cienaCesSyncInputProtectionUnitTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputProtectionUnitTable.setDescription('A table of protection units for input timing reference.')
cienaCesSyncInputProtectionUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1), ).setIndexNames((0, "CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUEntityId"))
if mibBuilder.loadTexts: cienaCesSyncInputProtectionUnitEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputProtectionUnitEntry.setDescription('An entry in this table represents information on a protection unit for input timing reference.')
cienaCesInputPUEntityId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: cienaCesInputPUEntityId.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUEntityId.setDescription('The unique identifier of this input protection unit.')
cienaCesInputPUEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUEntityName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUEntityName.setDescription('The unique name of this input protection unit.')
cienaCesInputPUPGEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUPGEntityName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUPGEntityName.setDescription('The identifier of the input protection group which this input protection unit belongs to.')
cienaCesInputPUTimingInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUTimingInterfaceName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUTimingInterfaceName.setDescription('The interface name of this input protection unit.')
cienaCesInputPUTimingInterfaceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 5), SyncInterfaceProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUTimingInterfaceProtocol.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUTimingInterfaceProtocol.setDescription('The interface protocol of this input protection unit.')
cienaCesInputPUUserPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUUserPriority.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUUserPriority.setDescription('The user configured priority of this input protection unit.')
cienaCesInputPUOperationalQL = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 7), SsmStratumLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUOperationalQL.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUOperationalQL.setDescription('Operational clock quality level of this input protection unit.')
cienaCesInputPUForcedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 8), SsmStratumLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUForcedQL.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUForcedQL.setDescription('User configured clock quality level that this input protection unit is forced to operate at.')
cienaCesInputPUReceivedQL = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 9), SsmStratumLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUReceivedQL.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUReceivedQL.setDescription('Actual received clock quality level of this input protection unit.')
cienaCesInputPUSsmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUSsmEnabled.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUSsmEnabled.setDescription('Enable/disable reading of actual received clock quality level for this input protection unit.')
cienaCesInputPUOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 11), SyncRefOperationalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUOperationalStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUOperationalStatus.setDescription('Operational status of this input protection unit.')
cienaCesInputPUBITSSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 12), SyncBITSSignalMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalMode.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalMode.setDescription('BITS Signal Mode, set if BITS signal is used as a protection unit.')
cienaCesInputPUBITSSignalFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 13), SyncBITSSignalFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalFormat.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalFormat.setDescription('BITS Signal Format, set if BITS signal is used as a protection unit.')
cienaCesInputPUBITSSignalEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 6, 1, 14), SyncBITSSignalEncoding()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalEncoding.setStatus('current')
if mibBuilder.loadTexts: cienaCesInputPUBITSSignalEncoding.setDescription('BITS Signal encoding, set if BITS signal is used as a protection unit.')
cienaCesSyncOutputTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7), )
if mibBuilder.loadTexts: cienaCesSyncOutputTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncOutputTable.setDescription('A table of output timing references.')
cienaCesSyncOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1), ).setIndexNames((0, "CIENA-CES-TIME-SYNC-MIB", "cienaCesOutputEntityId"))
if mibBuilder.loadTexts: cienaCesSyncOutputEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncOutputEntry.setDescription('An entry in this table represents information for an output timing reference.')
cienaCesOutputEntityId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)))
if mibBuilder.loadTexts: cienaCesOutputEntityId.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputEntityId.setDescription('The unique identifier of this output reference entity.')
cienaCesOutputEntityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputEntityName.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputEntityName.setDescription('The unique name of this output reference entity.')
cienaCesOutputTimingInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputTimingInterfaceName.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputTimingInterfaceName.setDescription('The interface name of this output reference.')
cienaCesOutputTimingInterfaceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 4), SyncInterfaceProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputTimingInterfaceProtocol.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputTimingInterfaceProtocol.setDescription('The interface protocol of this output reference.')
cienaCesOutputOperationalQL = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 5), SsmStratumLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputOperationalQL.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputOperationalQL.setDescription('Operational clock quality level of this output reference.')
cienaCesOutputOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 6), SyncRefOperationalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputOperationalStatus.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputOperationalStatus.setDescription('Operational status of this output reference.')
cienaCesOutputBITSSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 7), SyncBITSSignalMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputBITSSignalMode.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputBITSSignalMode.setDescription('BITS Signal Mode, set if BITS signal is used as an output reference.')
cienaCesOutputBITSSignalFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 8), SyncBITSSignalFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputBITSSignalFormat.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputBITSSignalFormat.setDescription('BITS Signal Format, set if BITS signal is used as an output reference.')
cienaCesOutputBITSSignalEncoding = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 9), SyncBITSSignalEncoding()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputBITSSignalEncoding.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputBITSSignalEncoding.setDescription('BITS Signal encoding, set if BITS signal is used as an output reference.')
cienaCesOutputBITSSignalLineBuildout = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("lbo133", 2), ("lbo266", 3), ("lbo399", 4), ("lbo533", 5), ("lbo655", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputBITSSignalLineBuildout.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputBITSSignalLineBuildout.setDescription('BITS Signal Line Buildout, set if BITS signal is used as an output reference.')
cienaCesOutputBITSSignalSsmLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 28, 1, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("sa4", 2), ("sa5", 3), ("sa6", 4), ("sa7", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesOutputBITSSignalSsmLocation.setStatus('current')
if mibBuilder.loadTexts: cienaCesOutputBITSSignalSsmLocation.setDescription('BITS Signal Ssm Location, set if BITS signal is used as an output reference.')
cienaCesSyncInputPUStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 28, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUEntityName"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUPGEntityName"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUTimingInterfaceName"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUTimingInterfaceProtocol"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPUOperationalStatus"))
if mibBuilder.loadTexts: cienaCesSyncInputPUStateChangeNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputPUStateChangeNotification.setDescription('Sent when a timing reference source failed.')
cienaCesSyncInputProtectionGroupStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 28, 0, 2)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPGEntityName"), ("CIENA-CES-TIME-SYNC-MIB", "cienaCesInputPGOperationalStatus"))
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupStateChangeNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesSyncInputProtectionGroupStateChangeNotification.setDescription('Sent when system timing could not lock into a reference source and entered hold over state.')
mibBuilder.exportSymbols("CIENA-CES-TIME-SYNC-MIB", cienaCesTimeSyncMIBObjects=cienaCesTimeSyncMIBObjects, cienaCesInputPUUserPriority=cienaCesInputPUUserPriority, cienaCesTimeSyncMIB=cienaCesTimeSyncMIB, cienaCesSyncAdminState=cienaCesSyncAdminState, cienaCesInputPGForcedReference=cienaCesInputPGForcedReference, cienaCesInputPUSsmEnabled=cienaCesInputPUSsmEnabled, SyncBITSSignalEncoding=SyncBITSSignalEncoding, cienaCesInputPUBITSSignalEncoding=cienaCesInputPUBITSSignalEncoding, SyncRefOperationalStatus=SyncRefOperationalStatus, cienaCesInputPUOperationalQL=cienaCesInputPUOperationalQL, cienaCesSyncOutputTable=cienaCesSyncOutputTable, cienaCesInputPUEntityName=cienaCesInputPUEntityName, cienaCesInputPUTimingInterfaceProtocol=cienaCesInputPUTimingInterfaceProtocol, cienaCesInputPGReferenceSwitchCount=cienaCesInputPGReferenceSwitchCount, cienaCesInputPUBITSSignalMode=cienaCesInputPUBITSSignalMode, SsmStratumLevel=SsmStratumLevel, cienaCesInputPUForcedQL=cienaCesInputPUForcedQL, cienaCesInputPUBITSSignalFormat=cienaCesInputPUBITSSignalFormat, cienaCesOutputBITSSignalSsmLocation=cienaCesOutputBITSSignalSsmLocation, cienaCesSyncInputProtectionUnitEntry=cienaCesSyncInputProtectionUnitEntry, cienaCesSyncInputProtectionUnitTable=cienaCesSyncInputProtectionUnitTable, cienaCesInputPGEntityName=cienaCesInputPGEntityName, cienaCesOutputBITSSignalLineBuildout=cienaCesOutputBITSSignalLineBuildout, SyncBITSSignalMode=SyncBITSSignalMode, cienaCesTimeSyncObjects=cienaCesTimeSyncObjects, cienaCesSyncOutputEntry=cienaCesSyncOutputEntry, cienaCesSyncInputPUStateChangeNotification=cienaCesSyncInputPUStateChangeNotification, cienaCesSyncInputProtectionGroupStateChangeNotification=cienaCesSyncInputProtectionGroupStateChangeNotification, cienaCesInputPGOperationalStatus=cienaCesInputPGOperationalStatus, cienaCesInputPGState=cienaCesInputPGState, cienaCesSyncOptionType=cienaCesSyncOptionType, cienaCesSyncInputProtectionGroupEntry=cienaCesSyncInputProtectionGroupEntry, cienaCesOutputOperationalQL=cienaCesOutputOperationalQL, cienaCesOutputBITSSignalFormat=cienaCesOutputBITSSignalFormat, SyncInterfaceProtocol=SyncInterfaceProtocol, cienaCesSyncRevertiveMode=cienaCesSyncRevertiveMode, cienaCesInputPGPreferredReference=cienaCesInputPGPreferredReference, cienaCesSyncInputProtectionGroupTable=cienaCesSyncInputProtectionGroupTable, cienaCesOutputEntityId=cienaCesOutputEntityId, cienaCesTimeSyncMIBNotificationPrefix=cienaCesTimeSyncMIBNotificationPrefix, cienaCesInputPUEntityId=cienaCesInputPUEntityId, cienaCesOutputEntityName=cienaCesOutputEntityName, cienaCesInputPUOperationalStatus=cienaCesInputPUOperationalStatus, cienaCesOutputOperationalStatus=cienaCesOutputOperationalStatus, cienaCesOutputBITSSignalMode=cienaCesOutputBITSSignalMode, SyncBITSSignalFormat=SyncBITSSignalFormat, cienaCesInputPGEntityId=cienaCesInputPGEntityId, cienaCesInputPUReceivedQL=cienaCesInputPUReceivedQL, cienaCesOutputTimingInterfaceName=cienaCesOutputTimingInterfaceName, cienaCesTimeSyncMIBNotifications=cienaCesTimeSyncMIBNotifications, cienaCesOutputTimingInterfaceProtocol=cienaCesOutputTimingInterfaceProtocol, cienaCesInputPUTimingInterfaceName=cienaCesInputPUTimingInterfaceName, cienaCesInputPUPGEntityName=cienaCesInputPUPGEntityName, cienaCesOutputBITSSignalEncoding=cienaCesOutputBITSSignalEncoding, cienaCesInputPGSelectedReference=cienaCesInputPGSelectedReference, PYSNMP_MODULE_ID=cienaCesTimeSyncMIB, cienaCesInputPGStateDuration=cienaCesInputPGStateDuration, cienaCesSyncWaitToRestoreTimer=cienaCesSyncWaitToRestoreTimer, cienaCesInputPGThresholdQualityLevel=cienaCesInputPGThresholdQualityLevel)
