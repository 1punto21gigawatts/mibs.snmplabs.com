#
# PySNMP MIB module CENTILLION-SYSTEM-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CENTILLION-SYSTEM-MONITOR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
sysMonitor, = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "sysMonitor")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, TimeTicks, Counter64, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, MibIdentifier, IpAddress, ObjectIdentity, ModuleIdentity, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter64", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "MibIdentifier", "IpAddress", "ObjectIdentity", "ModuleIdentity", "Counter32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cardMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1), )
if mibBuilder.loadTexts: cardMonitorTable.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonitorTable.setDescription('Card Monitor Table.')
cardMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1), ).setIndexNames((0, "CENTILLION-SYSTEM-MONITOR-MIB", "cardMonIndex"))
if mibBuilder.loadTexts: cardMonEntry.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonEntry.setDescription('An entry in the card monitor table. Each entry represents statistics collected on each possible slot in the system.')
cardMonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonIndex.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonIndex.setDescription('The card number index. Valid entries are system dependent based on the chassis type.')
cardMonCellsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsReceived.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonCellsReceived.setDescription('The number of cells revceived by the card. Note this statistic is not maintained in high-performance mode.')
cardMonCellsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonCellsTransmitted.setDescription('The number of cells transmitted by the card. Note this statistic is not maintained in high-performance mode.')
cardMonCellsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsDropped.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonCellsDropped.setDescription('The number of cells dropped by the card.')
cardMonSARReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARReceived.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonSARReceived.setDescription('The number of SAR packets revceived by the card. Note this statistic is not maintained in high-performance mode.')
cardMonSARTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonSARTransmitted.setDescription('The number of SAR packetd transmitted by the card. Note this statistic is not maintained in high-performance mode.')
cardMonSARDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARDropped.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonSARDropped.setDescription('The number of SAR packets dropped by the card.')
cardMonMSIMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonMSIMsgs.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonMSIMsgs.setDescription('The total number of MSI messages to and from the card. Note this statistic is not maintained in high-performance mode. ')
cardMonCardInsertions = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCardInsertions.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonCardInsertions.setDescription('The number of card insertions into the slot represented by the slot number.')
cardMonCardRemovals = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCardRemovals.setStatus('mandatory')
if mibBuilder.loadTexts: cardMonCardRemovals.setDescription('The number of card removals on the slot.')
cpuPctUse = MibScalar((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPctUse.setStatus('mandatory')
if mibBuilder.loadTexts: cpuPctUse.setDescription('Current utilization of the MCP cpu. Displays the utilization of the MCP cpu as a percentage at the time the object is polled. CPU utilization is highly variable, and as such, cpuPctUse can only be considered a snap shot and may not be valid immediately after polling the object.')
mibBuilder.exportSymbols("CENTILLION-SYSTEM-MONITOR-MIB", cpuPctUse=cpuPctUse, cardMonCellsTransmitted=cardMonCellsTransmitted, cardMonCellsReceived=cardMonCellsReceived, cardMonSARTransmitted=cardMonSARTransmitted, cardMonSARDropped=cardMonSARDropped, cardMonMSIMsgs=cardMonMSIMsgs, cardMonEntry=cardMonEntry, cardMonCellsDropped=cardMonCellsDropped, cardMonCardRemovals=cardMonCardRemovals, cardMonCardInsertions=cardMonCardInsertions, cardMonIndex=cardMonIndex, cardMonitorTable=cardMonitorTable, cardMonSARReceived=cardMonSARReceived)
