#
# PySNMP MIB module MOXA-IO-E2210-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MOXA-IO-E2210-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:13:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, NotificationType, ObjectIdentity, Bits, enterprises, TimeTicks, MibIdentifier, Counter64, NotificationType, ModuleIdentity, Counter32, IpAddress, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "NotificationType", "ObjectIdentity", "Bits", "enterprises", "TimeTicks", "MibIdentifier", "Counter64", "NotificationType", "ModuleIdentity", "Counter32", "IpAddress", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
e2210 = ModuleIdentity((1, 3, 6, 1, 4, 1, 8691, 10, 2210))
e2210.setRevisions(('2009-11-04 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: e2210.setRevisionsDescriptions(('Updated version of this MIB.',))
if mibBuilder.loadTexts: e2210.setLastUpdated('200911041600Z')
if mibBuilder.loadTexts: e2210.setOrganization('Moxa Networking,Inc.')
if mibBuilder.loadTexts: e2210.setContactInfo('Postal: Moxa Networking,Inc. Fl.4, No.135,Lane 235,Pao-Chiao Rd. Shing Tien City,Taipei,Taiwan,R.O.C Tel: +866-2-89191230 ')
if mibBuilder.loadTexts: e2210.setDescription('The MIB module for Moxa ioLogik Active Ethernet I/O specific information.')
moxa = MibIdentifier((1, 3, 6, 1, 4, 1, 8691))
e2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10))
totalChannelNumber = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalChannelNumber.setStatus('current')
if mibBuilder.loadTexts: totalChannelNumber.setDescription('Total I/O channels.')
serverModel = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverModel.setStatus('current')
if mibBuilder.loadTexts: serverModel.setDescription('The I/O server model.')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTime.setStatus('current')
if mibBuilder.loadTexts: systemTime.setDescription('I/O server up time (in seconds).')
firmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersion.setStatus('current')
if mibBuilder.loadTexts: firmwareVersion.setDescription('The firmware version.')
e2210monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10))
diTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1), )
if mibBuilder.loadTexts: diTable.setStatus('current')
if mibBuilder.loadTexts: diTable.setDescription('The DI channel monitor table')
diEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1), ).setIndexNames((0, "MOXA-IO-E2210-MIB", "diIndex"))
if mibBuilder.loadTexts: diEntry.setStatus('current')
if mibBuilder.loadTexts: diEntry.setDescription('The DI channel monitor item')
diIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11)))
if mibBuilder.loadTexts: diIndex.setStatus('current')
if mibBuilder.loadTexts: diIndex.setDescription('The channel DI index.')
diType = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diType.setStatus('current')
if mibBuilder.loadTexts: diType.setDescription('The channel DI type. 0=DI, 1=DO')
diMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diMode.setStatus('current')
if mibBuilder.loadTexts: diMode.setDescription('The channel DI mode. 0=DI, 1=Event Counter')
diStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diStatus.setStatus('current')
if mibBuilder.loadTexts: diStatus.setDescription('The channel DI status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diFilter.setStatus('current')
if mibBuilder.loadTexts: diFilter.setDescription('The channel DI counter filter. unit=0.5ms')
diTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diTrigger.setStatus('current')
if mibBuilder.loadTexts: diTrigger.setDescription('The channel DI counter trigger level. 0=L2H, 1=H2L')
diCntStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diCntStart.setStatus('current')
if mibBuilder.loadTexts: diCntStart.setDescription('The channel DI counter start/stop. 0=stop, 1=start')
doTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2), )
if mibBuilder.loadTexts: doTable.setStatus('current')
if mibBuilder.loadTexts: doTable.setDescription('The DO channel monitor table')
doEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1), ).setIndexNames((0, "MOXA-IO-E2210-MIB", "doIndex"))
if mibBuilder.loadTexts: doEntry.setStatus('current')
if mibBuilder.loadTexts: doEntry.setDescription('The DO channel monitor item')
doIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: doIndex.setStatus('current')
if mibBuilder.loadTexts: doIndex.setDescription('The channel DO index.')
doType = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: doType.setStatus('current')
if mibBuilder.loadTexts: doType.setDescription('The channel DO type. 0=DI, DO=1')
doMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: doMode.setStatus('current')
if mibBuilder.loadTexts: doMode.setDescription('The channel DO mode. 0=DO, 1=Pulse Output')
doStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: doStatus.setStatus('current')
if mibBuilder.loadTexts: doStatus.setDescription('The channel DO status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doLowWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: doLowWidth.setStatus('current')
if mibBuilder.loadTexts: doLowWidth.setDescription('The channel DO signal low width. unit=0.5ms')
doHighWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: doHighWidth.setStatus('current')
if mibBuilder.loadTexts: doHighWidth.setDescription('The channel DO signal high width. unit=0.5ms')
doPulseStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: doPulseStart.setStatus('current')
if mibBuilder.loadTexts: doPulseStart.setDescription('The channel DO pulse start/stop. 0=stop, 1=start')
logicSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4))
irTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4, 1), )
if mibBuilder.loadTexts: irTable.setStatus('current')
if mibBuilder.loadTexts: irTable.setDescription('Table of internal registers')
irEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4, 1, 1), ).setIndexNames((0, "MOXA-IO-E2210-MIB", "irIndex"))
if mibBuilder.loadTexts: irEntry.setStatus('current')
if mibBuilder.loadTexts: irEntry.setDescription('Table of internal registers')
irIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: irIndex.setStatus('current')
if mibBuilder.loadTexts: irIndex.setDescription('The internal register index.')
irName = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irName.setStatus('current')
if mibBuilder.loadTexts: irName.setDescription('The internal register description.')
irValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 10, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: irValue.setStatus('current')
if mibBuilder.loadTexts: irValue.setDescription('The internal register working value.')
diChannelTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 11))
diChannel0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,1))
if mibBuilder.loadTexts: diChannel0.setDescription('The channel di-00 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,2))
if mibBuilder.loadTexts: diChannel1.setDescription('The channel di-01 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,3))
if mibBuilder.loadTexts: diChannel2.setDescription('The channel di-02 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,4))
if mibBuilder.loadTexts: diChannel3.setDescription('The channel di-03 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel4 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,5))
if mibBuilder.loadTexts: diChannel4.setDescription('The channel di-04 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel5 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,6))
if mibBuilder.loadTexts: diChannel5.setDescription('The channel di-05 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel6 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,7))
if mibBuilder.loadTexts: diChannel6.setDescription('The channel di-06 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel7 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,8))
if mibBuilder.loadTexts: diChannel7.setDescription('The channel di-07 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel8 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,9))
if mibBuilder.loadTexts: diChannel8.setDescription('The channel di-08 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel9 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,10))
if mibBuilder.loadTexts: diChannel9.setDescription('The channel di-09 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel10 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,11))
if mibBuilder.loadTexts: diChannel10.setDescription('The channel di-10 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
diChannel11 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,12))
if mibBuilder.loadTexts: diChannel11.setDescription('The channel di-11 status. 0=Off, 1=On in DI mode or N=Count in counter mode')
doChannelTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 12))
doChannel0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,1))
if mibBuilder.loadTexts: doChannel0.setDescription('The channel do-00 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,2))
if mibBuilder.loadTexts: doChannel1.setDescription('The channel do-01 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,3))
if mibBuilder.loadTexts: doChannel2.setDescription('The channel do-02 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,4))
if mibBuilder.loadTexts: doChannel3.setDescription('The channel do-03 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel4 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,5))
if mibBuilder.loadTexts: doChannel4.setDescription('The channel do-04 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel5 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,6))
if mibBuilder.loadTexts: doChannel5.setDescription('The channel do-05 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel6 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,7))
if mibBuilder.loadTexts: doChannel6.setDescription('The channel do-06 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
doChannel7 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,8))
if mibBuilder.loadTexts: doChannel7.setDescription('The channel do-07 status. 0=Off, 1=On in DO mode or N=Count in pulse mode')
messageTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 2210, 13))
activeMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 2210) + (0,1))
if mibBuilder.loadTexts: activeMessageTrap.setDescription('The SNMP trap with active message')
mibBuilder.exportSymbols("MOXA-IO-E2210-MIB", irName=irName, diTrigger=diTrigger, serverModel=serverModel, diFilter=diFilter, irTable=irTable, doChannel2=doChannel2, diType=diType, diStatus=diStatus, systemTime=systemTime, firmwareVersion=firmwareVersion, totalChannelNumber=totalChannelNumber, doTable=doTable, diChannel1=diChannel1, irEntry=irEntry, irValue=irValue, diChannel7=diChannel7, diEntry=diEntry, doHighWidth=doHighWidth, doChannelTrap=doChannelTrap, PYSNMP_MODULE_ID=e2210, moxa=moxa, e2000=e2000, diChannel3=diChannel3, diChannel6=diChannel6, diChannel11=diChannel11, e2210monitor=e2210monitor, doLowWidth=doLowWidth, activeMessageTrap=activeMessageTrap, doStatus=doStatus, diChannel0=diChannel0, doType=doType, doChannel0=doChannel0, irIndex=irIndex, doChannel3=doChannel3, diChannel9=diChannel9, diChannel4=diChannel4, diChannel10=diChannel10, doChannel1=doChannel1, doMode=doMode, logicSettings=logicSettings, diChannel5=diChannel5, diMode=diMode, diChannel2=diChannel2, messageTrap=messageTrap, doChannel6=doChannel6, doChannel5=doChannel5, doChannel7=doChannel7, doEntry=doEntry, diChannel8=diChannel8, doIndex=doIndex, doPulseStart=doPulseStart, doChannel4=doChannel4, diIndex=diIndex, diChannelTrap=diChannelTrap, diTable=diTable, e2210=e2210, diCntStart=diCntStart)
