#
# PySNMP MIB module ALTIGA-SESSION-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-SESSION-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:21:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alSessionMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alSessionMibModule")
alStatsSession, alSessionGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsSession", "alSessionGroup")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, MibIdentifier, IpAddress, Bits, NotificationType, iso, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "MibIdentifier", "IpAddress", "Bits", "NotificationType", "iso", "Unsigned32", "Counter64")
DisplayString, MacAddress, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "RowStatus", "TextualConvention")
altigaSessionStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2))
altigaSessionStatsMibModule.setRevisions(('2005-01-26 00:00', '2003-09-09 00:00', '2003-03-17 00:00', '2002-09-05 13:00', '2002-07-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altigaSessionStatsMibModule.setRevisionsDescriptions(('Added NAC objects alActiveNacAcceptedSessions, alTotalNacAcceptedSessions. alActiveNacRejectedSessions, alTotalNacRejectedSessions. alActiveNacExemptedSessions, alTotalNacExemptedSessions. alActiveNacNonresponsiveSessions, alTotalNacNonresponsiveSessions. alActiveNacHoldoffSessions, alTotalNacHoldoffSessions. alActiveNacDisabledSessions, alTotalNacDisabledSessions. alActiveSessionNacResult, alActiveSessionSubEntryNacRevalTimer. alActiveSessionSubEntryNacTimetoReval, alActiveSessionSubEntryNacSqTimer. alActiveSessionSubEntryNacSessionAge, alActiveSessionSubEntryNacHoldTimer, alActiveSessionSubEntryNacPosture. alActiveSessionSubEntryNacRedirectUrl.', 'Added new enum value to SessionProtocol and EncryptionAlgorithm. Added alActiveSessionMaxWebVpnUsers and alWeightedSessionCount objects', 'Added alActiveSessionFilterId object', 'Added module compliance.', 'Updated with new header',))
if mibBuilder.loadTexts: altigaSessionStatsMibModule.setLastUpdated('200501260000Z')
if mibBuilder.loadTexts: altigaSessionStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: altigaSessionStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: altigaSessionStatsMibModule.setDescription('The Altiga Session Statistics MIB models counters and objects that are of management interest for sessions. Acronyms The following acronyms are used in this document: MIB: Management Information Base ACS: Access Control Server ')
alStatsSessionGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1))
class SessionProtocol(TextualConvention, Integer32):
    description = 'Session Protocol for Active Sessions. As noted in the comments below, some values will not be seen as a subentry, and others will not be seen as an entry. httpsTunnel - SSL Tunnel Client session'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))
    namedValues = NamedValues(("pptp", 1), ("l2tp", 2), ("ipsec", 3), ("http", 4), ("ftp", 5), ("telnet", 6), ("snmp", 7), ("tftp", 8), ("console", 9), ("debugTelnet", 10), ("debugConsole", 11), ("other", 12), ("ike", 13), ("l2tpOverIpSec", 14), ("ipsecLanToLan", 15), ("ipsecOverUdp", 16), ("ssh", 17), ("vcaLanToLan", 18), ("ipsecOverTcp", 19), ("pppoe", 20), ("ipsecOverNatT", 21), ("ipsecLan2LanOverNatT", 22), ("l2tpOverIpsecOverNatT", 23), ("userHttps", 24), ("pop3s", 25), ("imap4s", 26), ("smtps", 27), ("httpsTunnel", 28))

class EncryptionAlgorithm(TextualConvention, Integer32):
    description = 'Encryption Algorithm for Active Sessions.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 64, 66, 68, 72, 128, 130, 132, 136))
    namedValues = NamedValues(("none", 1), ("des56", 2), ("des40", 3), ("des168", 4), ("rc4Stateless40", 5), ("rc4Statefull40", 6), ("rc4Stateless128", 7), ("rc4Statefull128", 8), ("aes128", 9), ("aes192", 10), ("aes256", 11), ("sslv3", 64), ("sslv3des56", 66), ("sslv3des168", 68), ("sslv3rc4Statefull128", 72), ("tlsv1", 128), ("tlsv1des56", 130), ("tlsv1des168", 132), ("tlsv1rc4Statefull128", 136))

class CompressionAlgorithm(TextualConvention, Integer32):
    description = 'Compression Algorithm for Active Sessions.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("lzs", 1), ("deflate", 2), ("lz", 3))

class NacResult(TextualConvention, Integer32):
    description = 'NAC result for remote access IPsec sessions. unknown - Posture Validation (authentication of NAC credentials) result none. accepted - Access-Accept received from ACS. rejected - Access-Reject received from ACS. exempted - Exempted from Posture Validation. nonResponsive - No response to Posture Validation requests. notApplicable - NAC is disabled. holdoff - NAC session in Hold-off state.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 0), ("accepted", 1), ("rejected", 2), ("exempted", 3), ("nonResponsive", 4), ("notApplicable", 5), ("holdoff", 6))

alActiveSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionCount.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionCount.setDescription('The number of currently active sessions.')
alTotalSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalSessionCount.setStatus('current')
if mibBuilder.loadTexts: alTotalSessionCount.setDescription('The total number of sessions since the device booted.')
alActiveSessionLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionLastUpdate.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionLastUpdate.setDescription('The last time the summary stats were updated.')
alActiveSessionMaxUsers = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionMaxUsers.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionMaxUsers.setDescription('The maximum number of user sessions allowed.')
alActiveSessionGroupIdLock = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionGroupIdLock.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionGroupIdLock.setDescription('The group id lock for top 10 list.')
alMaxSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMaxSessionCount.setStatus('current')
if mibBuilder.loadTexts: alMaxSessionCount.setDescription('The highest number of sessions since the device booted.')
alActiveLanToLanSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveLanToLanSessionCount.setStatus('current')
if mibBuilder.loadTexts: alActiveLanToLanSessionCount.setDescription('The number of currently active LAN-to-LAN sessions.')
alActiveManagementSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveManagementSessionCount.setStatus('current')
if mibBuilder.loadTexts: alActiveManagementSessionCount.setDescription('The number of currently active management sessions.')
alActiveRemoteAccessSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveRemoteAccessSessionCount.setStatus('current')
if mibBuilder.loadTexts: alActiveRemoteAccessSessionCount.setDescription('The number of currently active Remote Access sessions.')
alActiveSessionMaxWebVpnUsers = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionMaxWebVpnUsers.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionMaxWebVpnUsers.setDescription('The maximum number of WebVPN user sessions allowed.')
alWeightedSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alWeightedSessionCount.setStatus('current')
if mibBuilder.loadTexts: alWeightedSessionCount.setDescription('The weighted number of sessions.')
alActiveNacAcceptedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacAcceptedSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacAcceptedSessions.setDescription('The number of currently active Access-Accepted NAC sessions.')
alTotalNacAcceptedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacAcceptedSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacAcceptedSessions.setDescription('The number of Access-Accepted NAC sessions since the device booted.')
alActiveNacRejectedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacRejectedSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacRejectedSessions.setDescription('The number of currently active Access-Rejected NAC sessions.')
alTotalNacRejectedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacRejectedSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacRejectedSessions.setDescription('The number of Access-Rejected NAC sessions since the device booted.')
alActiveNacExemptedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacExemptedSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacExemptedSessions.setDescription('The number of currently active PV exempt NAC sessions.')
alTotalNacExemptedSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacExemptedSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacExemptedSessions.setDescription('The number of PV exempt NAC sessions since the device booted.')
alActiveNacNonresponsiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacNonresponsiveSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacNonresponsiveSessions.setDescription('The number of currently active non-responsive NAC sessions.')
alTotalNacNonresponsiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacNonresponsiveSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacNonresponsiveSessions.setDescription('The number of non-responsive NAC sessions since the device booted.')
alActiveNacDisabledSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacDisabledSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacDisabledSessions.setDescription('The number of currently active sessions not subjected to NAC.')
alTotalNacDisabledSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacDisabledSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacDisabledSessions.setDescription('The number of sessions not subjected to NAC since the device booted.')
alActiveNacHoldoffSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveNacHoldoffSessions.setStatus('current')
if mibBuilder.loadTexts: alActiveNacHoldoffSessions.setDescription('The number of sessions currently in Hold-off state.')
alTotalNacHoldoffSessions = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alTotalNacHoldoffSessions.setStatus('current')
if mibBuilder.loadTexts: alTotalNacHoldoffSessions.setDescription('The number of sessions placed in Hold-off state since the device booted.')
alActiveSessionTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2), )
if mibBuilder.loadTexts: alActiveSessionTable.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionTable.setDescription('List of active sessions.')
alActiveSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionIndex"))
if mibBuilder.loadTexts: alActiveSessionEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionEntry.setDescription('An entry in the alActiveSessionTable.')
alActiveSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alActiveSessionRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionRowStatus.setDescription('The status of this row. Used to terminate the session, cannot be used to create a session.')
alActiveSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionIndex.setDescription('Index of this session.')
alActiveSessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionUserName.setDescription('The username used to authenticate this session.')
alActiveSessionIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionIpAddress.setDescription('The peer IP address of this session. For a Remote Access session, this is the assigned IP address. For LAN-to-LAN, this is the peer VPN device. For management, this is the IP address of the management machine.')
alActiveSessionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 5), SessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionProtocol.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionProtocol.setDescription('The protocol used for this session.')
alActiveSessionEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 6), EncryptionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionEncrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionEncrType.setDescription('The encryption algorithm used on this session.')
alActiveSessionStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionStartTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionStartTime.setDescription('The value of sysUpTime when this session was established.')
alActiveSessionConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionConnectTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionConnectTime.setDescription('The total amount of time, in seconds that this session has been established.')
alActiveSessionOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionOctetsSent.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionOctetsSent.setDescription('The total number of octets transmitted over this session.')
alActiveSessionOctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionOctetsRcvd.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionOctetsRcvd.setDescription('The total number of octets received on this session.')
alActiveSessionSepId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSepId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSepId.setDescription('The SEP module assigned to this session.')
alActiveSessionGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionGroupName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionGroupName.setDescription('The groupname used to establish this session.')
alActiveSessionGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionGroupId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionGroupId.setDescription('The group id assigned to this session.')
alActiveSessionPublicIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionPublicIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionPublicIpAddress.setDescription('The public peer IP address of this Remote Access session. Not used for administrative or LAN-to-LAN sessions.')
alActiveSessionTopTenData = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionTopTenData.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionTopTenData.setDescription('Placeholder for the data used to sort the top ten lists.')
alActiveSessionLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionLoginTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionLoginTime.setDescription('time_t value of the concentrator when the session started.')
alActiveSessionOS = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionOS.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionOS.setDescription('User operating system type.')
alActiveSessionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionVersion.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionVersion.setDescription('User application version.')
alActiveSessionFilterId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionFilterId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionFilterId.setDescription('The Filter ID applied to the user Session.')
alActiveSessionNacResult = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 2, 1, 20), NacResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionNacResult.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionNacResult.setDescription('The NAC result for the remote access IPsec session for which the SessionProtocol is ipsec, l2tpOverIpsec, ipsecOverUdp, ipsecOverTcp, ipsecOverNatT or l2tpOverIpsecOverNatT.')
alActiveSessionThroughputTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3), )
if mibBuilder.loadTexts: alActiveSessionThroughputTable.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputTable.setDescription('Top ten list of throughput users.')
alActiveSessionThroughputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIndex"))
if mibBuilder.loadTexts: alActiveSessionThroughputEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputEntry.setDescription('An entry in the alActiveSessionThroughputTable.')
alActiveSessionThroughputRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputRowStatus.setDescription('The status of this row.')
alActiveSessionThroughputIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputIndex.setDescription('Index of this session.')
alActiveSessionThroughputUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputUserName.setDescription('The username used to authenticate this session.')
alActiveSessionThroughputIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputIpAddress.setDescription('The peer IP address of this session.')
alActiveSessionThroughputProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 5), SessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputProtocol.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputProtocol.setDescription('The protocol used for this session.')
alActiveSessionThroughputEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 6), EncryptionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputEncrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputEncrType.setDescription('The encryption algorithm used on this session.')
alActiveSessionThroughputStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputStartTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputStartTime.setDescription('The value of sysUpTime when this session was established.')
alActiveSessionThroughputConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputConnectTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputConnectTime.setDescription('The total amount of time, in seconds that this session has been established.')
alActiveSessionThroughputOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputOctetsSent.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputOctetsSent.setDescription('The total number of octets transmitted over this session.')
alActiveSessionThroughputOctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputOctetsRcvd.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputOctetsRcvd.setDescription('The total number of octets received on this session.')
alActiveSessionThroughputSepId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputSepId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputSepId.setDescription('The SEP module assigned to this session.')
alActiveSessionThroughputGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputGroupName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputGroupName.setDescription('The groupname used to establish this session.')
alActiveSessionThroughputGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputGroupId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputGroupId.setDescription('The group id assigned to this session.')
alActiveSessionThroughputPublicIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputPublicIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputPublicIpAddress.setDescription('The public peer IP address of this Remote Access session. Not used for administrative or LAN-to-LAN sessions.')
alActiveSessionThroughputTopTenData = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputTopTenData.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputTopTenData.setDescription('Placeholder for the data used to sort the top ten lists.')
alActiveSessionThroughputLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionThroughputLoginTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionThroughputLoginTime.setDescription('time_t value of the concentrator when the session started.')
alActiveSessionDataTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4), )
if mibBuilder.loadTexts: alActiveSessionDataTable.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataTable.setDescription('Top ten list of data users.')
alActiveSessionDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIndex"))
if mibBuilder.loadTexts: alActiveSessionDataEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataEntry.setDescription('An entry in the alActiveSessionDataTable.')
alActiveSessionDataRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataRowStatus.setDescription('The status of this row.')
alActiveSessionDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataIndex.setDescription('Index of this session.')
alActiveSessionDataUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataUserName.setDescription('The username used to authenticate this session.')
alActiveSessionDataIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataIpAddress.setDescription('The peer IP address of this session.')
alActiveSessionDataProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 5), SessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataProtocol.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataProtocol.setDescription('The protocol used for this session.')
alActiveSessionDataEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 6), EncryptionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataEncrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataEncrType.setDescription('The encryption algorithm used on this session.')
alActiveSessionDataStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataStartTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataStartTime.setDescription('The value of sysUpTime when this session was established.')
alActiveSessionDataConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataConnectTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataConnectTime.setDescription('The total amount of time, in seconds that this session has been established.')
alActiveSessionDataOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataOctetsSent.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataOctetsSent.setDescription('The total number of octets transmitted over this session.')
alActiveSessionDataOctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataOctetsRcvd.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataOctetsRcvd.setDescription('The total number of octets received on this session.')
alActiveSessionDataSepId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataSepId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataSepId.setDescription('The SEP module assigned to this session.')
alActiveSessionDataGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataGroupName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataGroupName.setDescription('The groupname used to establish this session.')
alActiveSessionDataGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataGroupId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataGroupId.setDescription('The group id assigned to this session.')
alActiveSessionDataPublicIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataPublicIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataPublicIpAddress.setDescription('The public peer IP address of this Remote Access session. Not used for administrative or LAN-to-LAN sessions.')
alActiveSessionDataTopTenData = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataTopTenData.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataTopTenData.setDescription('Placeholder for the data used to sort the top ten lists.')
alActiveSessionDataLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 4, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDataLoginTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDataLoginTime.setDescription('time_t value of the concentrator when the session started.')
alActiveSessionDurationTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5), )
if mibBuilder.loadTexts: alActiveSessionDurationTable.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationTable.setDescription('Top ten list of Duration users.')
alActiveSessionDurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIndex"))
if mibBuilder.loadTexts: alActiveSessionDurationEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationEntry.setDescription('An entry in the alActiveSessionDurationTable.')
alActiveSessionDurationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationRowStatus.setDescription('The status of this row.')
alActiveSessionDurationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationIndex.setDescription('Index of this session.')
alActiveSessionDurationUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationUserName.setDescription('The username used to authenticate this session.')
alActiveSessionDurationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationIpAddress.setDescription('The peer IP address of this session.')
alActiveSessionDurationProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 5), SessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationProtocol.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationProtocol.setDescription('The protocol used for this session.')
alActiveSessionDurationEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 6), EncryptionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationEncrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationEncrType.setDescription('The encryption algorithm used on this session.')
alActiveSessionDurationStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationStartTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationStartTime.setDescription('The value of sysUpTime when this session was established.')
alActiveSessionDurationConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationConnectTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationConnectTime.setDescription('The total amount of time, in seconds that this session has been established.')
alActiveSessionDurationOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationOctetsSent.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationOctetsSent.setDescription('The total number of octets transmitted over this session.')
alActiveSessionDurationOctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationOctetsRcvd.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationOctetsRcvd.setDescription('The total number of octets received on this session.')
alActiveSessionDurationSepId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationSepId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationSepId.setDescription('The SEP module assigned to this session.')
alActiveSessionDurationGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationGroupName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationGroupName.setDescription('The groupname used to establish this session.')
alActiveSessionDurationGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationGroupId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationGroupId.setDescription('The group id assigned to this session.')
alActiveSessionDurationPublicIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationPublicIpAddress.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationPublicIpAddress.setDescription('The public peer IP address of this Remote Access session. Not used for administrative or LAN-to-LAN sessions.')
alActiveSessionDurationTopTenData = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationTopTenData.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationTopTenData.setDescription('Placeholder for the data used to sort the top ten lists.')
alActiveSessionDurationLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 5, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionDurationLoginTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionDurationLoginTime.setDescription('time_t value of the concentrator when the session started.')
alActiveSessionSubTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6), )
if mibBuilder.loadTexts: alActiveSessionSubTable.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubTable.setDescription('List of active session sub entries.')
alActiveSessionSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIndex"), (0, "ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstance"))
if mibBuilder.loadTexts: alActiveSessionSubEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntry.setDescription('An entry in the alActiveSessionDurationTable.')
alActiveSessionSubEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRowStatus.setDescription('The status of this row.')
alActiveSessionSubEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryIndex.setDescription('Index to the session of this session sub-entry.')
alActiveSessionSubEntryInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryInstance.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryInstance.setDescription('Instance of this session sub-entry.')
alActiveSessionSubEntryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 4), SessionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryProtocol.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryProtocol.setDescription('The protocol used for this session.')
alActiveSessionSubEntryEncrAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 5), EncryptionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryEncrAlg.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryEncrAlg.setDescription('The encryption algorithm used on this session sub-entry.')
alActiveSessionSubEntryHashAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("md5", 1), ("sha1", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryHashAlg.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryHashAlg.setDescription('The Hashing algorithm used on this session sub-entry.')
alActiveSessionSubEntryDiffHelmanGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 7))).clone(namedValues=NamedValues(("none", 0), ("group1", 1), ("group2", 2), ("group3", 3), ("group4", 4), ("group5", 5), ("group7", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryDiffHelmanGrp.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryDiffHelmanGrp.setDescription('Diffie Helman Group used on this session sub-entry. rsaCertHybrid - RSA Cert Hybrid dsaCertHybrid - DSA Cert Hybrid crack - Challenge/Resp Auth ')
alActiveSessionSubEntryAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("none", 0), ("preSharedKeys", 1), ("rsaCert", 2), ("dsaCert", 3), ("pap", 4), ("chap", 5), ("eapMd5", 6), ("eapGtc", 7), ("msChapV1", 8), ("msChapV2", 9), ("preSharedKeysXauth", 10), ("rsaCertXauth", 11), ("dsaCertXauth", 12), ("eap", 13), ("usernamePassword", 14), ("rsaCertHybrid", 15), ("dsaCertHybrid", 16), ("crack", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryAuthMode.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryAuthMode.setDescription('Authentication Mode used on this session sub-entry')
alActiveSessionSubEntryEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("transport", 1), ("tunnel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryEncapMode.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryEncapMode.setDescription('Encapsulation Mode used on this session sub-entry.')
alActiveSessionSubEntryRekeyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRekeyTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRekeyTime.setDescription('Rekey time interval for this session sub-entry.')
alActiveSessionSubEntryRekeyKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRekeyKBytes.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRekeyKBytes.setDescription('Number of kilobytes.')
alActiveSessionSubEntryRemAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("addrWithSubNet", 1), ("range", 2), ("hostAddress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddrType.setDescription('Address or Address Range for this session sub-entry.')
alActiveSessionSubEntryRemAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddr1.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddr1.setDescription('Ip address or start address for this session sub-entry.')
alActiveSessionSubEntryRemAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddr2.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRemAddr2.setDescription('Subnet or end address for this session sub-entry.')
alActiveSessionSubEntryLocAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("addrWithSubNet", 1), ("range", 2), ("hostAddress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddrType.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddrType.setDescription('Address or Address Range for this session sub-entry.')
alActiveSessionSubEntryLocAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddr1.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddr1.setDescription('Ip address or start address for this session sub-entry.')
alActiveSessionSubEntryLocAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddr2.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryLocAddr2.setDescription('Subnet or end address for this session sub-entry.')
alActiveSessionSubEntryRcvdOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryRcvdOctets.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryRcvdOctets.setDescription('Number of octets received for this session sub-entry.')
alActiveSessionSubEntrySentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntrySentOctets.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntrySentOctets.setDescription('Number of octets sent for this session sub-entry.')
alActiveSessionSubEntrySep = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntrySep.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntrySep.setDescription('SEP used for thios session sub-entry.')
alActiveSessionSubEntryUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryUserName.setDescription('The username used to authenticate this session sub entry.')
alActiveSessionSubEntryClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryClientIpAddr.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryClientIpAddr.setDescription('Remote client assigned IP address for this session sub-entry.')
alActiveSessionSubEntryUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryUdpPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryUdpPort.setDescription('The UDP destination port used by IPSec for this connection to permit access through a firewall.')
alActiveSessionSubEntryTotalIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryTotalIdleTime.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryTotalIdleTime.setDescription('The total amount of time, in seconds that this session has been idle.')
alActiveSessionSubEntryIkeNegMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("main", 1), ("aggressive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeNegMode.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeNegMode.setDescription('IKE Negotiation mode used on this session sub-entry.')
alActiveSessionSubEntryCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 26), CompressionAlgorithm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryCompression.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryCompression.setDescription('IKE Negotiation mode used on this session sub-entry.')
alActiveSessionSubEntryInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryInstId.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryInstId.setDescription('Instance Identifier allocated by RM for this session sub-entry.')
alActiveSessionSubEntryPfsGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 7))).clone(namedValues=NamedValues(("none", 0), ("group1", 1), ("group2", 2), ("group3", 3), ("group4", 4), ("group7", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryPfsGroup.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryPfsGroup.setDescription('Perfect Forward Secrecy Group used on this session sub-entry.')
alActiveSessionSubEntryTcpSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryTcpSrcPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryTcpSrcPort.setDescription('The TCP Source port used by IKE/IPSec for this connection to permit access through a firewall.')
alActiveSessionSubEntryTcpDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryTcpDstPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryTcpDstPort.setDescription('The TCP Dest port used by IKE/IPSec for this connection to permit access through a firewall.')
alActiveSessionSubEntryUdpSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryUdpSrcPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryUdpSrcPort.setDescription('The UDP Source port used by IPSec for this connection to permit access through a firewall.')
alActiveSessionSubEntryIkeUdpSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeUdpSrcPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeUdpSrcPort.setDescription('The UDP Source port used by IPSec/UDP for IKE Session.')
alActiveSessionSubEntryIkeUdpDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeUdpDstPort.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryIkeUdpDstPort.setDescription('The UDP Source port used by IPSec/UDP for IKE Session.')
alActiveSessionSubEntryNacRevalTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacRevalTimer.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacRevalTimer.setDescription('NAC Re-validation Timer. Periodic interval after IPsec session establishment and initial posture validation, at which the host is subject to a full posture validation.')
alActiveSessionSubEntryNacTimetoReval = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacTimetoReval.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacTimetoReval.setDescription('Time after which the NAC session will be re-validated. This is the number of seconds before the NAC Revalidation Timer expires.')
alActiveSessionSubEntryNacSqTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacSqTimer.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacSqTimer.setDescription('NAC Status Query Timer. Periodic interval after IPsec session establishment and initial posture validation, at which the host is queried for changes in its posture.')
alActiveSessionSubEntryNacSessionAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacSessionAge.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacSessionAge.setDescription('NAC EAPoUDP session age. The total time in seconds for which the EAPoUDP association exists.')
alActiveSessionSubEntryNacPosture = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacPosture.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacPosture.setDescription('Posture-token for the NAC session.')
alActiveSessionSubEntryNacRedirectUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacRedirectUrl.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacRedirectUrl.setDescription('Re-direct URL for the NAC session.')
alActiveSessionSubEntryNacHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 6, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveSessionSubEntryNacHoldTimer.setStatus('current')
if mibBuilder.loadTexts: alActiveSessionSubEntryNacHoldTimer.setDescription('Time after which the NAC PV will be retried.')
alActiveHWClientUserTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7), )
if mibBuilder.loadTexts: alActiveHWClientUserTable.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserTable.setDescription('List of active hardware client sessions')
alActiveHWClientUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1), ).setIndexNames((0, "ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserSessionIndex"), (0, "ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserIpAddr"))
if mibBuilder.loadTexts: alActiveHWClientUserEntry.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserEntry.setDescription('An entry in the alActiveSessionTable.')
alActiveHWClientUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alActiveHWClientUserRowStatus.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserRowStatus.setDescription('The status of this row. Used to terminate the HW Client user session, cannot be used to create a session.')
alActiveHWClientUserSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserSessionIndex.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserSessionIndex.setDescription('Index of this HW Client User session.')
alActiveHWClientUserIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserIpAddr.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserIpAddr.setDescription('The IP address of this HW Client user.')
alActiveHWClientUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserName.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserName.setDescription('The username used to authenticate this HW Client user session.')
alActiveHWClientUserMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserMacAddr.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserMacAddr.setDescription('The MAC address for a HW Client User session.')
alActiveHWClientUserLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserLoginTime.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserLoginTime.setDescription('time_t value of the concentrator when the session started.')
alActiveHWClientUserUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 17, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alActiveHWClientUserUpTime.setStatus('current')
if mibBuilder.loadTexts: alActiveHWClientUserUpTime.setDescription('The total amount of time, in seconds that this HW Client User session has been established.')
altigaSessionStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1))
altigaSessionStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1, 1))
altigaSessionStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1, 1, 1)).setObjects(("ALTIGA-SESSION-STATS-MIB", "altigaSessionStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsMibCompliance = altigaSessionStatsMibCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: altigaSessionStatsMibCompliance.setDescription('The compliance statement for agents which implement the Altiga Session Statistics MIB.')
altigaSessionStatsMibComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1, 1, 2)).setObjects(("ALTIGA-SESSION-STATS-MIB", "altigaSessionStatsGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsMibComplianceRev1 = altigaSessionStatsMibComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: altigaSessionStatsMibComplianceRev1.setDescription('The compliance statement for agents which implement the Altiga Session Statistics MIB.')
altigaSessionStatsMibComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1, 1, 3)).setObjects(("ALTIGA-SESSION-STATS-MIB", "altigaSessionStatsGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsMibComplianceRev2 = altigaSessionStatsMibComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: altigaSessionStatsMibComplianceRev2.setDescription('The compliance statement for agents which implement the Altiga Session Statistics MIB.')
altigaSessionStatsMibComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 22, 2, 1, 1, 4)).setObjects(("ALTIGA-SESSION-STATS-MIB", "altigaSessionStatsGroupRev2"), ("ALTIGA-SESSION-STATS-MIB", "altigaSessionStatsGroupRev2Sup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsMibComplianceRev3 = altigaSessionStatsMibComplianceRev3.setStatus('current')
if mibBuilder.loadTexts: altigaSessionStatsMibComplianceRev3.setDescription('The compliance statement for agents which implement the Altiga Session Statistics MIB.')
altigaSessionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 17, 2)).setObjects(("ALTIGA-SESSION-STATS-MIB", "alActiveSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alTotalSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLastUpdate"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionMaxUsers"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupIdLock"), ("ALTIGA-SESSION-STATS-MIB", "alMaxSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveLanToLanSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveManagementSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveRemoteAccessSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOS"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionVersion"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstance"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncrAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryHashAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryDiffHelmanGrp"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryAuthMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncapMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyKBytes"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRcvdOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySentOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySep"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryClientIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTotalIdleTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeNegMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryCompression"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryPfsGroup"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserMacAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsGroup = altigaSessionStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: altigaSessionStatsGroup.setDescription('The objects for Session statistics.')
altigaSessionStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 17, 3)).setObjects(("ALTIGA-SESSION-STATS-MIB", "alActiveSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alTotalSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLastUpdate"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionMaxUsers"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupIdLock"), ("ALTIGA-SESSION-STATS-MIB", "alMaxSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveLanToLanSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveManagementSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveRemoteAccessSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOS"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionVersion"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionFilterId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstance"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncrAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryHashAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryDiffHelmanGrp"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryAuthMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncapMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyKBytes"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRcvdOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySentOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySep"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryClientIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTotalIdleTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeNegMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryCompression"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryPfsGroup"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserMacAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsGroupRev1 = altigaSessionStatsGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: altigaSessionStatsGroupRev1.setDescription('The objects for Session statistics.')
altigaSessionStatsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 17, 4)).setObjects(("ALTIGA-SESSION-STATS-MIB", "alActiveSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alTotalSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLastUpdate"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionMaxUsers"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupIdLock"), ("ALTIGA-SESSION-STATS-MIB", "alMaxSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveLanToLanSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveManagementSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveRemoteAccessSessionCount"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionOS"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionVersion"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionFilterId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionThroughputLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDataLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationEncrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationStartTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationConnectTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsSent"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationOctetsRcvd"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationSepId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationGroupId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationPublicIpAddress"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationTopTenData"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionDurationLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstance"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryProtocol"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncrAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryHashAlg"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryDiffHelmanGrp"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryAuthMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryEncapMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRekeyKBytes"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRemAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddrType"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr1"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryLocAddr2"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryRcvdOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySentOctets"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntrySep"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryClientIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTotalIdleTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeNegMode"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryCompression"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryInstId"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryPfsGroup"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryTcpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpSrcPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryIkeUdpDstPort"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserRowStatus"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserSessionIndex"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserName"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserIpAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserMacAddr"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserLoginTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveHWClientUserUpTime"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionMaxWebVpnUsers"), ("ALTIGA-SESSION-STATS-MIB", "alWeightedSessionCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsGroupRev2 = altigaSessionStatsGroupRev2.setStatus('current')
if mibBuilder.loadTexts: altigaSessionStatsGroupRev2.setDescription('The objects for Session statistics.')
altigaSessionStatsGroupRev2Sup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 17, 5)).setObjects(("ALTIGA-SESSION-STATS-MIB", "alActiveSessionNacResult"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacRevalTimer"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacTimetoReval"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacSqTimer"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacSessionAge"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacPosture"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacRedirectUrl"), ("ALTIGA-SESSION-STATS-MIB", "alActiveSessionSubEntryNacHoldTimer"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacAcceptedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacAcceptedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacRejectedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacRejectedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacExemptedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacExemptedSessions"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacNonresponsiveSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacNonresponsiveSessions"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacDisabledSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacDisabledSessions"), ("ALTIGA-SESSION-STATS-MIB", "alActiveNacHoldoffSessions"), ("ALTIGA-SESSION-STATS-MIB", "alTotalNacHoldoffSessions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaSessionStatsGroupRev2Sup1 = altigaSessionStatsGroupRev2Sup1.setStatus('current')
if mibBuilder.loadTexts: altigaSessionStatsGroupRev2Sup1.setDescription('The objects for Session statistics.')
mibBuilder.exportSymbols("ALTIGA-SESSION-STATS-MIB", alActiveSessionDataEntry=alActiveSessionDataEntry, alActiveHWClientUserMacAddr=alActiveHWClientUserMacAddr, alActiveSessionSubEntryUdpSrcPort=alActiveSessionSubEntryUdpSrcPort, alActiveSessionSubEntryUdpPort=alActiveSessionSubEntryUdpPort, alActiveSessionIpAddress=alActiveSessionIpAddress, alActiveSessionDataIpAddress=alActiveSessionDataIpAddress, alActiveSessionThroughputIndex=alActiveSessionThroughputIndex, alActiveSessionDurationSepId=alActiveSessionDurationSepId, altigaSessionStatsMibCompliances=altigaSessionStatsMibCompliances, PYSNMP_MODULE_ID=altigaSessionStatsMibModule, alActiveNacExemptedSessions=alActiveNacExemptedSessions, alActiveNacDisabledSessions=alActiveNacDisabledSessions, alActiveRemoteAccessSessionCount=alActiveRemoteAccessSessionCount, alActiveSessionSubEntryLocAddr1=alActiveSessionSubEntryLocAddr1, alActiveHWClientUserUpTime=alActiveHWClientUserUpTime, altigaSessionStatsMibCompliance=altigaSessionStatsMibCompliance, alActiveSessionSubEntrySep=alActiveSessionSubEntrySep, alActiveSessionSubEntryLocAddr2=alActiveSessionSubEntryLocAddr2, alActiveSessionThroughputOctetsRcvd=alActiveSessionThroughputOctetsRcvd, alActiveSessionSubEntryIkeUdpDstPort=alActiveSessionSubEntryIkeUdpDstPort, alActiveHWClientUserRowStatus=alActiveHWClientUserRowStatus, alWeightedSessionCount=alWeightedSessionCount, alTotalNacAcceptedSessions=alTotalNacAcceptedSessions, alActiveSessionSubEntryNacSessionAge=alActiveSessionSubEntryNacSessionAge, alStatsSessionGlobal=alStatsSessionGlobal, alTotalNacNonresponsiveSessions=alTotalNacNonresponsiveSessions, altigaSessionStatsMibComplianceRev2=altigaSessionStatsMibComplianceRev2, altigaSessionStatsMibConformance=altigaSessionStatsMibConformance, alActiveHWClientUserEntry=alActiveHWClientUserEntry, alActiveSessionSubEntryTcpDstPort=alActiveSessionSubEntryTcpDstPort, alActiveSessionDataProtocol=alActiveSessionDataProtocol, alActiveSessionDataIndex=alActiveSessionDataIndex, alActiveSessionSubEntryClientIpAddr=alActiveSessionSubEntryClientIpAddr, alActiveSessionSubEntryTcpSrcPort=alActiveSessionSubEntryTcpSrcPort, alActiveSessionFilterId=alActiveSessionFilterId, alActiveNacNonresponsiveSessions=alActiveNacNonresponsiveSessions, alActiveSessionCount=alActiveSessionCount, alActiveSessionThroughputIpAddress=alActiveSessionThroughputIpAddress, alActiveSessionDurationTopTenData=alActiveSessionDurationTopTenData, alActiveSessionEntry=alActiveSessionEntry, alActiveSessionSubEntryRemAddr2=alActiveSessionSubEntryRemAddr2, alActiveSessionIndex=alActiveSessionIndex, alTotalNacHoldoffSessions=alTotalNacHoldoffSessions, alActiveSessionDataRowStatus=alActiveSessionDataRowStatus, alActiveSessionDataOctetsSent=alActiveSessionDataOctetsSent, alActiveSessionStartTime=alActiveSessionStartTime, alActiveSessionDurationEntry=alActiveSessionDurationEntry, SessionProtocol=SessionProtocol, altigaSessionStatsGroupRev2Sup1=altigaSessionStatsGroupRev2Sup1, alActiveSessionSubEntryInstance=alActiveSessionSubEntryInstance, alActiveSessionSubTable=alActiveSessionSubTable, altigaSessionStatsGroupRev2=altigaSessionStatsGroupRev2, alActiveSessionSubEntryHashAlg=alActiveSessionSubEntryHashAlg, alActiveSessionThroughputConnectTime=alActiveSessionThroughputConnectTime, alActiveSessionThroughputPublicIpAddress=alActiveSessionThroughputPublicIpAddress, alActiveSessionOS=alActiveSessionOS, altigaSessionStatsMibComplianceRev1=altigaSessionStatsMibComplianceRev1, alTotalSessionCount=alTotalSessionCount, alActiveSessionDataUserName=alActiveSessionDataUserName, EncryptionAlgorithm=EncryptionAlgorithm, alActiveSessionThroughputProtocol=alActiveSessionThroughputProtocol, alTotalNacDisabledSessions=alTotalNacDisabledSessions, alActiveSessionMaxWebVpnUsers=alActiveSessionMaxWebVpnUsers, alActiveSessionThroughputOctetsSent=alActiveSessionThroughputOctetsSent, alActiveSessionSubEntryPfsGroup=alActiveSessionSubEntryPfsGroup, alActiveSessionThroughputGroupId=alActiveSessionThroughputGroupId, alActiveSessionSubEntryNacSqTimer=alActiveSessionSubEntryNacSqTimer, alActiveNacAcceptedSessions=alActiveNacAcceptedSessions, alActiveSessionUserName=alActiveSessionUserName, alActiveSessionSubEntryNacPosture=alActiveSessionSubEntryNacPosture, alActiveSessionSepId=alActiveSessionSepId, alActiveSessionDurationIpAddress=alActiveSessionDurationIpAddress, alActiveSessionSubEntryRekeyKBytes=alActiveSessionSubEntryRekeyKBytes, alActiveSessionSubEntryRowStatus=alActiveSessionSubEntryRowStatus, alActiveHWClientUserSessionIndex=alActiveHWClientUserSessionIndex, alActiveSessionDurationGroupId=alActiveSessionDurationGroupId, alActiveSessionVersion=alActiveSessionVersion, alActiveSessionGroupId=alActiveSessionGroupId, alActiveNacHoldoffSessions=alActiveNacHoldoffSessions, alActiveSessionDurationStartTime=alActiveSessionDurationStartTime, alActiveSessionDurationOctetsRcvd=alActiveSessionDurationOctetsRcvd, alActiveSessionSubEntryInstId=alActiveSessionSubEntryInstId, alActiveSessionProtocol=alActiveSessionProtocol, alActiveSessionThroughputStartTime=alActiveSessionThroughputStartTime, alActiveSessionOctetsRcvd=alActiveSessionOctetsRcvd, alActiveSessionSubEntryUserName=alActiveSessionSubEntryUserName, alTotalNacRejectedSessions=alTotalNacRejectedSessions, alActiveSessionSubEntryTotalIdleTime=alActiveSessionSubEntryTotalIdleTime, alActiveSessionSubEntryRemAddrType=alActiveSessionSubEntryRemAddrType, alActiveHWClientUserName=alActiveHWClientUserName, alActiveNacRejectedSessions=alActiveNacRejectedSessions, alActiveHWClientUserIpAddr=alActiveHWClientUserIpAddr, alActiveSessionSubEntrySentOctets=alActiveSessionSubEntrySentOctets, alActiveSessionThroughputGroupName=alActiveSessionThroughputGroupName, altigaSessionStatsGroupRev1=altigaSessionStatsGroupRev1, alActiveSessionMaxUsers=alActiveSessionMaxUsers, alActiveSessionThroughputSepId=alActiveSessionThroughputSepId, alActiveSessionSubEntryIkeNegMode=alActiveSessionSubEntryIkeNegMode, alActiveSessionSubEntryIndex=alActiveSessionSubEntryIndex, alActiveSessionConnectTime=alActiveSessionConnectTime, alActiveSessionSubEntryNacHoldTimer=alActiveSessionSubEntryNacHoldTimer, alActiveSessionSubEntryNacRedirectUrl=alActiveSessionSubEntryNacRedirectUrl, alActiveSessionDurationUserName=alActiveSessionDurationUserName, alActiveSessionThroughputTopTenData=alActiveSessionThroughputTopTenData, alActiveSessionSubEntryEncapMode=alActiveSessionSubEntryEncapMode, alActiveSessionDurationConnectTime=alActiveSessionDurationConnectTime, alActiveSessionDurationOctetsSent=alActiveSessionDurationOctetsSent, alActiveSessionDataTable=alActiveSessionDataTable, alActiveSessionDurationGroupName=alActiveSessionDurationGroupName, alActiveSessionSubEntryCompression=alActiveSessionSubEntryCompression, alActiveSessionLoginTime=alActiveSessionLoginTime, alActiveSessionOctetsSent=alActiveSessionOctetsSent, alActiveSessionSubEntryNacTimetoReval=alActiveSessionSubEntryNacTimetoReval, alActiveSessionDurationTable=alActiveSessionDurationTable, alActiveSessionThroughputLoginTime=alActiveSessionThroughputLoginTime, alActiveSessionSubEntryProtocol=alActiveSessionSubEntryProtocol, alActiveSessionSubEntryNacRevalTimer=alActiveSessionSubEntryNacRevalTimer, CompressionAlgorithm=CompressionAlgorithm, alActiveSessionGroupIdLock=alActiveSessionGroupIdLock, altigaSessionStatsMibComplianceRev3=altigaSessionStatsMibComplianceRev3, alActiveSessionDataOctetsRcvd=alActiveSessionDataOctetsRcvd, alActiveManagementSessionCount=alActiveManagementSessionCount, alActiveSessionThroughputUserName=alActiveSessionThroughputUserName, alActiveSessionDataGroupId=alActiveSessionDataGroupId, alActiveSessionThroughputRowStatus=alActiveSessionThroughputRowStatus, alActiveSessionDataSepId=alActiveSessionDataSepId, alActiveSessionSubEntryEncrAlg=alActiveSessionSubEntryEncrAlg, alActiveSessionThroughputTable=alActiveSessionThroughputTable, alActiveSessionSubEntryAuthMode=alActiveSessionSubEntryAuthMode, alActiveSessionSubEntryIkeUdpSrcPort=alActiveSessionSubEntryIkeUdpSrcPort, alActiveSessionDurationProtocol=alActiveSessionDurationProtocol, alActiveLanToLanSessionCount=alActiveLanToLanSessionCount, alActiveSessionLastUpdate=alActiveSessionLastUpdate, alActiveSessionGroupName=alActiveSessionGroupName, alActiveSessionThroughputEncrType=alActiveSessionThroughputEncrType, alTotalNacExemptedSessions=alTotalNacExemptedSessions, alActiveSessionDataConnectTime=alActiveSessionDataConnectTime, alActiveSessionDataEncrType=alActiveSessionDataEncrType, alActiveSessionTopTenData=alActiveSessionTopTenData, altigaSessionStatsGroup=altigaSessionStatsGroup, alActiveSessionDurationRowStatus=alActiveSessionDurationRowStatus, alActiveSessionTable=alActiveSessionTable, alActiveSessionSubEntryRemAddr1=alActiveSessionSubEntryRemAddr1, alActiveSessionSubEntryRcvdOctets=alActiveSessionSubEntryRcvdOctets, alActiveSessionDataGroupName=alActiveSessionDataGroupName, alActiveSessionDataTopTenData=alActiveSessionDataTopTenData, alActiveSessionSubEntryDiffHelmanGrp=alActiveSessionSubEntryDiffHelmanGrp, alActiveSessionSubEntryRekeyTime=alActiveSessionSubEntryRekeyTime, NacResult=NacResult, alActiveHWClientUserLoginTime=alActiveHWClientUserLoginTime, alActiveSessionDataLoginTime=alActiveSessionDataLoginTime, alActiveSessionSubEntry=alActiveSessionSubEntry, alActiveSessionPublicIpAddress=alActiveSessionPublicIpAddress, alActiveSessionDurationIndex=alActiveSessionDurationIndex, alActiveSessionDurationEncrType=alActiveSessionDurationEncrType, alActiveSessionNacResult=alActiveSessionNacResult, alActiveSessionDataStartTime=alActiveSessionDataStartTime, alActiveHWClientUserTable=alActiveHWClientUserTable, alActiveSessionDurationLoginTime=alActiveSessionDurationLoginTime, alActiveSessionDurationPublicIpAddress=alActiveSessionDurationPublicIpAddress, alActiveSessionRowStatus=alActiveSessionRowStatus, alActiveSessionEncrType=alActiveSessionEncrType, altigaSessionStatsMibModule=altigaSessionStatsMibModule, alActiveSessionThroughputEntry=alActiveSessionThroughputEntry, alActiveSessionSubEntryLocAddrType=alActiveSessionSubEntryLocAddrType, alMaxSessionCount=alMaxSessionCount, alActiveSessionDataPublicIpAddress=alActiveSessionDataPublicIpAddress)
