#
# PySNMP MIB module Argus-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Argus-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:33:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, NotificationType, Integer32, Counter32, Gauge32, Unsigned32, Counter64, TimeTicks, IpAddress, enterprises, MibIdentifier, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Integer32", "Counter32", "Gauge32", "Unsigned32", "Counter64", "TimeTicks", "IpAddress", "enterprises", "MibIdentifier", "Bits", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
argus = ModuleIdentity((1, 3, 6, 1, 4, 1, 7309))
if mibBuilder.loadTexts: argus.setLastUpdated('200811030000Z')
if mibBuilder.loadTexts: argus.setOrganization('Argus Technologies')
if mibBuilder.loadTexts: argus.setContactInfo(' Randy Dahlgren Postal: Argus Technologies 5700 Sidley Street Vancouver, BC V5J 5E5 Canada Tel: 1-604-436-5900 Fax: 1-604-436-1233 E-mail: rdahlgren@argus.ca')
if mibBuilder.loadTexts: argus.setDescription('This MIB defines the information block(s) available in system controllers as defined by the following list: - dcPwrSysDevice: the SM-series of controllers')
dcpower = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4))
dcPwrSysDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1))
dcPwrSysVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1))
dcPwrSysString = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2))
dcPwrSysTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3))
dcPwrSysOutputsTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4))
dcPwrSysRelayTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1))
dcPwrSysAnalogOpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2))
dcPwrSysAlrmsTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5))
dcPwrSysRectAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1))
dcPwrSysDigAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2))
dcPwrSysCurrAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3))
dcPwrSysVoltAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4))
dcPwrSysBattAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5))
dcPwrSysTempAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6))
dcPwrSysCustomAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7))
dcPwrSysMiscAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8))
dcPwrSysCtrlAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9))
dcPwrSysAdioAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10))
dcPwrSysConvAlrmTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11))
dcPwrSysInputsTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6))
dcPwrSysDigIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1))
dcPwrSysCntrlrIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2))
dcPwrSysRectIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3))
dcPwrSysCustomIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4))
dcPwrSysConvIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5))
dcPwrSysTimerIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6))
dcPwrSysCounterIpTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7))
dcPwrExternalControls = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 8))
dcPwrVarbindNameReference = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 9))
dcPwrSysChargeVolts = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysChargeVolts.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysChargeVolts.setDescription('Battery Charge Voltage. The integer value represent a two digit fix decimal (Value = real voltage * 100) in Volt')
dcPwrSysDischargeVolts = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDischargeVolts.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDischargeVolts.setDescription('Battery Discharge Voltage. The integer value represent a two digit fix decimal (Value = real voltage * 100) in Volt')
dcPwrSysChargeAmps = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysChargeAmps.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysChargeAmps.setDescription('Battery Charge Current. The integer value represent a two digit fix decimal (Value = real current * 100) in Amp')
dcPwrSysDischargeAmps = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDischargeAmps.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDischargeAmps.setDescription('Battery Discharge Current. The integer value represent a two digit fix decimal (Value = real current * 100) in Amp')
dcPwrSysMajorAlarm = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMajorAlarm.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMajorAlarm.setDescription('Major Alarm')
dcPwrSysMinorAlarm = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMinorAlarm.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMinorAlarm.setDescription('Minor Alarm')
dcPwrSysSiteName = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSiteName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSiteName.setDescription('Site Name')
dcPwrSysSiteCity = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSiteCity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSiteCity.setDescription('Site City')
dcPwrSysSiteRegion = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSiteRegion.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSiteRegion.setDescription('Site Region')
dcPwrSysSiteCountry = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSiteCountry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSiteCountry.setDescription('Site Country')
dcPwrSysContactName = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysContactName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysContactName.setDescription('Contact Name')
dcPwrSysPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysPhoneNumber.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysPhoneNumber.setDescription('Phone Number')
dcPwrSysSiteNumber = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSiteNumber.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSiteNumber.setDescription('Site Number')
dcPwrSysSystemType = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSystemType.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSystemType.setDescription('The type of system being monitored by the agent')
dcPwrSysSystemSerial = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSystemSerial.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSystemSerial.setDescription('The serial number of the monitored system')
dcPwrSysSystemNumber = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSystemNumber.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSystemNumber.setDescription('The number of the monitored system')
dcPwrSysSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSoftwareVersion.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSoftwareVersion.setDescription('The version of software running on the monitored system')
dcPwrSysSoftwareTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysSoftwareTimestamp.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysSoftwareTimestamp.setDescription('The time stamp of the software running on the monitored system')
dcPwrSysRelayCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelayCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayCount.setDescription('Number of relay variables in system controller relay table')
dcPwrSysRelayTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2), )
if mibBuilder.loadTexts: dcPwrSysRelayTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayTable.setDescription('A table of DC power system controller rectifier relay output variables')
dcPwrSysRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysRelayIndex"))
if mibBuilder.loadTexts: dcPwrSysRelayEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayEntry.setDescription('An entry into the DC power system controller relay output group')
dcPwrSysRelayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelayIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayIndex.setDescription('The index of the relay variable in the power system controller relay output group')
dcPwrSysRelayName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelayName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayName.setDescription('The description of the relay variable as reported by the DC power system controller relay output group')
dcPwrSysRelayIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelayIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayIntegerValue.setDescription('The integer value of the relay variable as reported by the DC power system controller relay output group')
dcPwrSysRelayStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelayStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayStringValue.setDescription('The string value of the relay variable as reported by the DC power system controller relay output group')
dcPwrSysRelaySeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRelaySeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelaySeverity.setDescription('The integer value of relay severity level of the extra variable as reported by the DC power system controller relay output group')
dcPwrSysAnalogOpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpCount.setDescription('Number of analog output variables in system controller analog output table')
dcPwrSysAnalogOpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2), )
if mibBuilder.loadTexts: dcPwrSysAnalogOpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpTable.setDescription('A table of DC power system controller analog output variables')
dcPwrSysAnalogOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysAnalogOpIndex"))
if mibBuilder.loadTexts: dcPwrSysAnalogOpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpEntry.setDescription('An entry into the DC power system controller analog output group')
dcPwrSysAnalogOpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpIndex.setDescription('The index of the analog variable in the power system controller analog output group')
dcPwrSysAnalogOpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpName.setDescription('The description of the analog variable as reported by the DC power system controller analog output group')
dcPwrSysAnalogOpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpIntegerValue.setDescription('The integer value of the analog variable as reported by the DC power system controller analog output group')
dcPwrSysAnalogOpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpStringValue.setDescription('The string value of the analog variable as reported by the DC power system controller analog output group')
dcPwrSysAnalogOpSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAnalogOpSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAnalogOpSeverity.setDescription('The integer value of analog severity level of the extra variable as reported by the DC power system controller analog output group')
dcPwrSysRectAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmCount.setDescription('Number of rectifier alarm variables in system controller alarm table')
dcPwrSysRectAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2), )
if mibBuilder.loadTexts: dcPwrSysRectAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmTable.setDescription('A table of DC power system controller rectifier alarm variables')
dcPwrSysRectAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysRectAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysRectAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmEntry.setDescription('An entry into the DC power system controller rectifier alarm group')
dcPwrSysRectAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table rectifier alarm group')
dcPwrSysRectAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller rectifier alarm group')
dcPwrSysRectAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller rectifier alarm group')
dcPwrSysRectAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller rectifier alarm group')
dcPwrSysRectAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller rectifier alarm group')
dcPwrSysDigAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmCount.setDescription('Number of digital alarm variables in system controller alarm table')
dcPwrSysDigAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2), )
if mibBuilder.loadTexts: dcPwrSysDigAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmTable.setDescription('A table of DC power system controller digital alarm variables')
dcPwrSysDigAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysDigAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysDigAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmEntry.setDescription('An entry into the DC power system controller digital alarm group')
dcPwrSysDigAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table digital alarm group')
dcPwrSysDigAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller digital alarm group')
dcPwrSysDigAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller digital alarm group')
dcPwrSysDigAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller digital alarm group')
dcPwrSysDigAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller digital alarm group')
dcPwrSysCurrAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmCount.setDescription('Number of current alarm variables in system controller alarm table')
dcPwrSysCurrAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2), )
if mibBuilder.loadTexts: dcPwrSysCurrAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmTable.setDescription('A table of DC power system controller current alarm variables')
dcPwrSysCurrAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCurrAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysCurrAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmEntry.setDescription('An entry into the DC power system controller current alarm group')
dcPwrSysCurrAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table current alarm group')
dcPwrSysCurrAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller current alarm group')
dcPwrSysCurrAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller current alarm group')
dcPwrSysCurrAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller current alarm group')
dcPwrSysCurrAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCurrAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCurrAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller current alarm group')
dcPwrSysVoltAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmCount.setDescription('Number of voltage alarm variables in system controller alarm table')
dcPwrSysVoltAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2), )
if mibBuilder.loadTexts: dcPwrSysVoltAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmTable.setDescription('A table of DC power system controller voltage alarm variables')
dcPwrSysVoltAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysVoltAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysVoltAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmEntry.setDescription('An entry into the DC power system controller voltage alarm group')
dcPwrSysVoltAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table voltage alarm group')
dcPwrSysVoltAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller voltage alarm group')
dcPwrSysVoltAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller voltage alarm group')
dcPwrSysVoltAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller voltage alarm group')
dcPwrSysVoltAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysVoltAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysVoltAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller voltage alarm group')
dcPwrSysBattAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmCount.setDescription('Number of battery alarm variables in system controller alarm table')
dcPwrSysBattAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2), )
if mibBuilder.loadTexts: dcPwrSysBattAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmTable.setDescription('A table of DC power system controller battery alarm variables')
dcPwrSysBattAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysBattAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysBattAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmEntry.setDescription('An entry into the DC power system controller battery alarm group')
dcPwrSysBattAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table battery alarm group')
dcPwrSysBattAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller battery alarm group')
dcPwrSysBattAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller battery alarm group')
dcPwrSysBattAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller battery alarm group')
dcPwrSysBattAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysBattAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysBattAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller battery alarm group')
dcPwrSysTempAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmCount.setDescription('Number of temperature alarm variables in system controller alarm table')
dcPwrSysTempAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2), )
if mibBuilder.loadTexts: dcPwrSysTempAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmTable.setDescription('A table of DC power system controller temperature alarm variables')
dcPwrSysTempAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysTempAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysTempAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmEntry.setDescription('An entry into the DC power system controller temperature alarm group')
dcPwrSysTempAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table temperature alarm group')
dcPwrSysTempAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller temperature alarm group')
dcPwrSysTempAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller temperature alarm group')
dcPwrSysTempAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller temperature alarm group')
dcPwrSysTempAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTempAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTempAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller temperature alarm group')
dcPwrSysCustomAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmCount.setDescription('Number of custom alarm variables in system controller alarm table')
dcPwrSysCustomAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2), )
if mibBuilder.loadTexts: dcPwrSysCustomAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmTable.setDescription('A table of DC power system controller custom alarm variables')
dcPwrSysCustomAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCustomAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysCustomAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmEntry.setDescription('An entry into the DC power system controller custom alarm group')
dcPwrSysCustomAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table custom alarm group')
dcPwrSysCustomAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller custom alarm group')
dcPwrSysCustomAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller custom alarm group')
dcPwrSysCustomAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller custom alarm group')
dcPwrSysCustomAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller custom alarm group')
dcPwrSysMiscAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmCount.setDescription('Number of misc alarm variables in system controller alarm table')
dcPwrSysMiscAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2), )
if mibBuilder.loadTexts: dcPwrSysMiscAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmTable.setDescription('A table of DC power system controller misc alarm variables')
dcPwrSysMiscAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysMiscAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysMiscAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmEntry.setDescription('An entry into the DC power system controller misc alarm group')
dcPwrSysMiscAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table misc alarm group')
dcPwrSysMiscAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller misc alarm group')
dcPwrSysMiscAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller misc alarm group')
dcPwrSysMiscAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller misc alarm group')
dcPwrSysMiscAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysMiscAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMiscAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller misc alarm group')
dcPwrSysCtrlAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmCount.setDescription('Number of control alarm variables in system controller alarm table')
dcPwrSysCtrlAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2), )
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmTable.setDescription('A table of DC power system controller control alarm variables')
dcPwrSysCtrlAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCtrlAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmEntry.setDescription('An entry into the DC power system controller control alarm group')
dcPwrSysCtrlAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table control alarm group')
dcPwrSysCtrlAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller control alarm group')
dcPwrSysCtrlAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller control alarm group')
dcPwrSysCtrlAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller control alarm group')
dcPwrSysCtrlAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCtrlAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller control alarm group')
dcPwrSysAdioAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmCount.setDescription('Number of control alarm variables in Adio alarm table')
dcPwrSysAdioAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2), )
if mibBuilder.loadTexts: dcPwrSysAdioAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmTable.setDescription('A table of DC power system controller Adio alarm variables')
dcPwrSysAdioAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysAdioAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysAdioAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmEntry.setDescription('An entry into the DC power system controller Adio alarm group')
dcPwrSysAdioAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table Adio alarm group')
dcPwrSysAdioAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller Adio alarm group')
dcPwrSysAdioAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller Adio alarm group')
dcPwrSysAdioAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller Adio alarm group')
dcPwrSysAdioAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAdioAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAdioAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC Adio system controller control alarm group')
dcPwrSysConvAlrmCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmCount.setDescription('Number of Converter alarm variables in system controller alarm table')
dcPwrSysConvAlrmTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2), )
if mibBuilder.loadTexts: dcPwrSysConvAlrmTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmTable.setDescription('A table of DC power system controller Converter alarm variables')
dcPwrSysConvAlrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysConvAlrmIndex"))
if mibBuilder.loadTexts: dcPwrSysConvAlrmEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmEntry.setDescription('An entry into the DC power system controller Converter alarm group')
dcPwrSysConvAlrmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmIndex.setDescription('The index of the alarm variable in the DC power system controller table Converter alarm group')
dcPwrSysConvAlrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmName.setDescription('The description of the alarm variable as reported by the DC power system controller Converter alarm group')
dcPwrSysConvAlrmIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmIntegerValue.setDescription('The integer value of the alarm variable as reported by the DC power system controller Converter alarm group')
dcPwrSysConvAlrmStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmStringValue.setDescription('The string value of the alarm variable as reported by the DC power system controller Converter alarm group')
dcPwrSysConvAlrmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 5, 11, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvAlrmSeverity.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvAlrmSeverity.setDescription('The integer value of alarm severity level of the extra variable as reported by the DC power system controller Converter alarm group')
dcPwrSysDigIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpCount.setDescription('Number of digital input variables in system controller digital input table')
dcPwrSysDigIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2), )
if mibBuilder.loadTexts: dcPwrSysDigIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpTable.setDescription('A table of DC power system controller digital input variables')
dcPwrSysDigIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysDigIpIndex"))
if mibBuilder.loadTexts: dcPwrSysDigIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpEntry.setDescription('An entry into the DC power system controller digital input group')
dcPwrSysDigIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpIndex.setDescription('The index of the digital input variable in the DC power system controller table digital input group')
dcPwrSysDigIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpName.setDescription('The description of the digital input variable as reported by the DC power system controller digital input group')
dcPwrSysDigIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpIntegerValue.setDescription('The integer value of the digital input variable as reported by the DC power system controller digital input group')
dcPwrSysDigIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysDigIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysDigIpStringValue.setDescription('The string value of the digital input variable as reported by the DC power system controller digital input group')
dcPwrSysCntrlrIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCntrlrIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpCount.setDescription('Number of controller input variables in system controller controller input table')
dcPwrSysCntrlrIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2), )
if mibBuilder.loadTexts: dcPwrSysCntrlrIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpTable.setDescription('A table of DC power system controller controller input variables')
dcPwrSysCntrlrIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCntrlrIpIndex"))
if mibBuilder.loadTexts: dcPwrSysCntrlrIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpEntry.setDescription('An entry into the DC power system controller controller input group')
dcPwrSysCntrlrIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCntrlrIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpIndex.setDescription('The index of the controller input variable in the DC power system controller table controller input group')
dcPwrSysCntrlrIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCntrlrIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpName.setDescription('The description of the controller input variable as reported by the DC power system controller controller input group')
dcPwrSysCntrlrIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCntrlrIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpIntegerValue.setDescription('The integer value of the controller input variable as reported by the DC power system controller controller input group')
dcPwrSysCntrlrIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCntrlrIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCntrlrIpStringValue.setDescription('The string value of the controller input variable as reported by the DC power system controller controller input group')
dcPwrSysRectIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpCount.setDescription('Number of rectifier input variables in system controller rectifier input table')
dcPwrSysRectIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2), )
if mibBuilder.loadTexts: dcPwrSysRectIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpTable.setDescription('A table of DC power system controller rectifier input variables')
dcPwrSysRectIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysRectIpIndex"))
if mibBuilder.loadTexts: dcPwrSysRectIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpEntry.setDescription('An entry into the DC power system controller rectifier input group')
dcPwrSysRectIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpIndex.setDescription('The index of the rectifier input variable in the DC power system controller table rectifier input group')
dcPwrSysRectIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpName.setDescription('The description of the rectifier input variable as reported by the DC power system controller rectifier input group')
dcPwrSysRectIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpIntegerValue.setDescription('The integer value of the rectifier input variable as reported by the DC power system controller rectifier input group')
dcPwrSysRectIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysRectIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRectIpStringValue.setDescription('The string value of the rectifier input variable as reported by the DC power system controller rectifier input group')
dcPwrSysCustomIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpCount.setDescription('Number of custom input variables in system controller custom input table')
dcPwrSysCustomIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2), )
if mibBuilder.loadTexts: dcPwrSysCustomIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpTable.setDescription('A table of DC power system controller digital custom variables')
dcPwrSysCustomIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCustomIpIndex"))
if mibBuilder.loadTexts: dcPwrSysCustomIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpEntry.setDescription('An entry into the DC power system controller custom input group')
dcPwrSysCustomIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpIndex.setDescription('The index of the custom input variable in the DC power system controller table custom input group')
dcPwrSysCustomIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpName.setDescription('The description of the custom input variable as reported by the DC power system controller custom input group')
dcPwrSysgCustomIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysgCustomIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysgCustomIpIntegerValue.setDescription('The integer value of the custom input variable as reported by the DC power system controller custom input group')
dcPwrSysCustomIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCustomIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCustomIpStringValue.setDescription('The string value of the custom input variable as reported by the DC power system controller custom input group')
dcPwrSysConvIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpCount.setDescription('Number of Converter input variables in system controller Converter input table')
dcPwrSysConvIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2), )
if mibBuilder.loadTexts: dcPwrSysConvIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpTable.setDescription('A table of DC power system controller Converter input variables')
dcPwrSysConvIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysConvIpIndex"))
if mibBuilder.loadTexts: dcPwrSysConvIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpEntry.setDescription('An entry into the DC power system controller Converter input group')
dcPwrSysConvIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpIndex.setDescription('The index of the Converter input variable in the DC power system controller table Converter input group')
dcPwrSysConvIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpName.setDescription('The description of the Converter input variable as reported by the DC power system controller Converter input group')
dcPwrSysConvIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpIntegerValue.setDescription('The integer value of the Converter input variable as reported by the DC power system controller Converter input group')
dcPwrSysConvIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysConvIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysConvIpStringValue.setDescription('The string value of the Converter input variable as reported by the DC power system controller Converter input group')
dcPwrSysTimerIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimerIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpCount.setDescription('Number of Timererter input variables in system controller Timererter input table')
dcPwrSysTimerIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2), )
if mibBuilder.loadTexts: dcPwrSysTimerIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpTable.setDescription('A table of DC power system controller Timererter input variables')
dcPwrSysTimerIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysTimerIpIndex"))
if mibBuilder.loadTexts: dcPwrSysTimerIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpEntry.setDescription('An entry into the DC power system controller Timererter input group')
dcPwrSysTimerIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimerIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpIndex.setDescription('The index of the Timererter input variable in the DC power system controller table Timererter input group')
dcPwrSysTimerIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimerIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpName.setDescription('The description of the Timererter input variable as reported by the DC power system controller Timererter input group')
dcPwrSysTimerIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimerIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpIntegerValue.setDescription('The integer value of the Timererter input variable as reported by the DC power system controller Timererter input group')
dcPwrSysTimerIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimerIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimerIpStringValue.setDescription('The string value of the Timererter input variable as reported by the DC power system controller Timererter input group')
dcPwrSysCounterIpCount = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCounterIpCount.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpCount.setDescription('Number of Countererter input variables in system controller Countererter input table')
dcPwrSysCounterIpTable = MibTable((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2), )
if mibBuilder.loadTexts: dcPwrSysCounterIpTable.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpTable.setDescription('A table of DC power system controller Countererter input variables')
dcPwrSysCounterIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2, 1), ).setIndexNames((0, "Argus-MIB", "dcPwrSysCounterIpIndex"))
if mibBuilder.loadTexts: dcPwrSysCounterIpEntry.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpEntry.setDescription('An entry into the DC power system controller Countererter input group')
dcPwrSysCounterIpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCounterIpIndex.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpIndex.setDescription('The index of the Countererter input variable in the DC power system controller table Countererter input group')
dcPwrSysCounterIpName = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCounterIpName.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpName.setDescription('The description of the Countererter input variable as reported by the DC power system controller Countererter input group')
dcPwrSysCounterIpIntegerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000000000, 1000000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCounterIpIntegerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpIntegerValue.setDescription('The integer value of the Countererter input variable as reported by the DC power system controller Countererter input group')
dcPwrSysCounterIpStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 7309, 4, 1, 6, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysCounterIpStringValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysCounterIpStringValue.setDescription('The string value of the Countererter input variable as reported by the DC power system controller Countererter input group')
dcPwrSysTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0))
dcPwrSysAlarmActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 1)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"), ("Argus-MIB", "dcPwrSysAlarmTriggerValue"))
if mibBuilder.loadTexts: dcPwrSysAlarmActiveTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAlarmActiveTrap.setDescription('A trap issued when one of the alarms on the DC power system controller became active')
dcPwrSysAlarmClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 2)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"), ("Argus-MIB", "dcPwrSysAlarmTriggerValue"))
if mibBuilder.loadTexts: dcPwrSysAlarmClearedTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAlarmClearedTrap.setDescription('A trap issued when one of the active alarms on the DC power system controller is cleared')
dcPwrSysRelayTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 3)).setObjects(("Argus-MIB", "dcPwrSysRelayIntegerValue"), ("Argus-MIB", "dcPwrSysRelayStringValue"), ("Argus-MIB", "dcPwrSysRelayIndex"), ("Argus-MIB", "dcPwrSysRelaySeverity"), ("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysRelayTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysRelayTrap.setDescription('A trap issued from a change in state in one of the relays on the DC power system controller')
dcPwrSysComOKTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 4)).setObjects(("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysComOKTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysComOKTrap.setDescription('A trap to indicate that communications with a DC power system controller has been established.')
dcPwrSysComErrTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 5)).setObjects(("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysComErrTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysComErrTrap.setDescription('A trap to indicate that communications with a DC power system controller has been lost.')
dcPwrSysAgentStartupTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 6)).setObjects(("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysAgentStartupTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAgentStartupTrap.setDescription('A trap to indicate that the agent software has started up.')
dcPwrSysAgentShutdownTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 7)).setObjects(("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysAgentShutdownTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAgentShutdownTrap.setDescription('A trap to indicate that the agent software has shutdown.')
dcPwrSysMajorAlarmActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 8)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysMajorAlarmActiveTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMajorAlarmActiveTrap.setDescription('A trap issued as a summary of DC power system status. It is sent when the system goes into in Major Alarm')
dcPwrSysMajorAlarmClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 9)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysMajorAlarmClearedTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMajorAlarmClearedTrap.setDescription('A trap issued as a summary of DC power system status. It is sent when the system comes out of Major Alarm')
dcPwrSysMinorAlarmActiveTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 10)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysMinorAlarmActiveTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMinorAlarmActiveTrap.setDescription('A trap issued as a summary of DC power system status. It is sent when the system goes into in Minor Alarm')
dcPwrSysMinorAlarmClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 7309, 4, 1, 3, 0, 11)).setObjects(("Argus-MIB", "dcPwrSysRectAlrmStringValue"), ("Argus-MIB", "dcPwrSysRectAlrmIndex"), ("Argus-MIB", "dcPwrSysRectAlrmSeverity"), ("Argus-MIB", "dcPwrSysSiteName"))
if mibBuilder.loadTexts: dcPwrSysMinorAlarmClearedTrap.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysMinorAlarmClearedTrap.setDescription('A trap issued as a summary of DC power system status. It is sent when the system comes out of Minor Alarm')
dcPwrSysResyncAlarms = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dcPwrSysResyncAlarms.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysResyncAlarms.setDescription('Send/Resend all active alarms that were previously sent through SNMP notification.')
dcPwrSysAlarmTriggerValue = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 9, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysAlarmTriggerValue.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysAlarmTriggerValue.setDescription('')
dcPwrSysTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 7309, 4, 1, 9, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dcPwrSysTimeStamp.setStatus('current')
if mibBuilder.loadTexts: dcPwrSysTimeStamp.setDescription('')
mibBuilder.exportSymbols("Argus-MIB", dcPwrVarbindNameReference=dcPwrVarbindNameReference, dcPwrSysSoftwareVersion=dcPwrSysSoftwareVersion, dcPwrSysDigAlrmTbl=dcPwrSysDigAlrmTbl, dcPwrSysConvAlrmName=dcPwrSysConvAlrmName, dcPwrSysTimerIpName=dcPwrSysTimerIpName, dcPwrSysAlarmActiveTrap=dcPwrSysAlarmActiveTrap, dcPwrSysMinorAlarmClearedTrap=dcPwrSysMinorAlarmClearedTrap, dcPwrSysConvAlrmTable=dcPwrSysConvAlrmTable, dcPwrSysCtrlAlrmStringValue=dcPwrSysCtrlAlrmStringValue, dcPwrSysCustomAlrmStringValue=dcPwrSysCustomAlrmStringValue, dcPwrSysCurrAlrmIntegerValue=dcPwrSysCurrAlrmIntegerValue, dcPwrSysConvAlrmTbl=dcPwrSysConvAlrmTbl, dcPwrSysConvIpEntry=dcPwrSysConvIpEntry, dcPwrSysBattAlrmCount=dcPwrSysBattAlrmCount, dcPwrSysAdioAlrmName=dcPwrSysAdioAlrmName, dcPwrSysConvAlrmEntry=dcPwrSysConvAlrmEntry, dcPwrSysTempAlrmTbl=dcPwrSysTempAlrmTbl, dcPwrSysRelayCount=dcPwrSysRelayCount, dcPwrSysAdioAlrmTable=dcPwrSysAdioAlrmTable, dcPwrSysAlarmTriggerValue=dcPwrSysAlarmTriggerValue, dcPwrSysMiscAlrmTable=dcPwrSysMiscAlrmTable, dcPwrSysBattAlrmEntry=dcPwrSysBattAlrmEntry, dcPwrSysSiteNumber=dcPwrSysSiteNumber, dcPwrSysAnalogOpTbl=dcPwrSysAnalogOpTbl, dcPwrSysRectIpEntry=dcPwrSysRectIpEntry, dcPwrSysMiscAlrmIndex=dcPwrSysMiscAlrmIndex, dcPwrSysTempAlrmName=dcPwrSysTempAlrmName, dcPwrSysBattAlrmTbl=dcPwrSysBattAlrmTbl, dcPwrSysDigAlrmName=dcPwrSysDigAlrmName, dcPwrSysComErrTrap=dcPwrSysComErrTrap, dcPwrSysCustomAlrmEntry=dcPwrSysCustomAlrmEntry, dcPwrSysConvIpStringValue=dcPwrSysConvIpStringValue, dcPwrSysDigAlrmCount=dcPwrSysDigAlrmCount, dcPwrSysCntrlrIpCount=dcPwrSysCntrlrIpCount, dcPwrSysRelayStringValue=dcPwrSysRelayStringValue, dcPwrSysAnalogOpSeverity=dcPwrSysAnalogOpSeverity, dcPwrSysRectAlrmEntry=dcPwrSysRectAlrmEntry, dcPwrSysCtrlAlrmTbl=dcPwrSysCtrlAlrmTbl, dcPwrSysAnalogOpStringValue=dcPwrSysAnalogOpStringValue, dcPwrSysRectAlrmIndex=dcPwrSysRectAlrmIndex, dcPwrSysSiteCountry=dcPwrSysSiteCountry, dcPwrSysBattAlrmStringValue=dcPwrSysBattAlrmStringValue, dcPwrSysDigAlrmTable=dcPwrSysDigAlrmTable, dcPwrSysPhoneNumber=dcPwrSysPhoneNumber, dcPwrSysCustomAlrmIndex=dcPwrSysCustomAlrmIndex, dcPwrSysContactName=dcPwrSysContactName, dcPwrSysCustomIpEntry=dcPwrSysCustomIpEntry, dcPwrSysCounterIpEntry=dcPwrSysCounterIpEntry, dcPwrSysMajorAlarmActiveTrap=dcPwrSysMajorAlarmActiveTrap, dcPwrSysRectIpStringValue=dcPwrSysRectIpStringValue, dcPwrSysTraps=dcPwrSysTraps, PYSNMP_MODULE_ID=argus, dcPwrSysMiscAlrmSeverity=dcPwrSysMiscAlrmSeverity, dcPwrSysVoltAlrmSeverity=dcPwrSysVoltAlrmSeverity, dcPwrSysVoltAlrmCount=dcPwrSysVoltAlrmCount, dcPwrSysCtrlAlrmIntegerValue=dcPwrSysCtrlAlrmIntegerValue, dcPwrSysResyncAlarms=dcPwrSysResyncAlarms, dcPwrSysRelayName=dcPwrSysRelayName, dcPwrSysAdioAlrmTbl=dcPwrSysAdioAlrmTbl, dcPwrSysDigIpTable=dcPwrSysDigIpTable, dcPwrSysRelayTable=dcPwrSysRelayTable, dcPwrSysDischargeAmps=dcPwrSysDischargeAmps, dcPwrSysDigIpIndex=dcPwrSysDigIpIndex, dcPwrSysConvIpIntegerValue=dcPwrSysConvIpIntegerValue, dcPwrSysMinorAlarm=dcPwrSysMinorAlarm, dcPwrSysRelaySeverity=dcPwrSysRelaySeverity, dcPwrSysCurrAlrmName=dcPwrSysCurrAlrmName, dcPwrSysTimerIpCount=dcPwrSysTimerIpCount, dcPwrSysCntrlrIpTable=dcPwrSysCntrlrIpTable, dcPwrSysVoltAlrmIntegerValue=dcPwrSysVoltAlrmIntegerValue, dcPwrSysInputsTbl=dcPwrSysInputsTbl, dcPwrExternalControls=dcPwrExternalControls, dcPwrSysConvIpIndex=dcPwrSysConvIpIndex, dcPwrSysMajorAlarmClearedTrap=dcPwrSysMajorAlarmClearedTrap, dcPwrSysDevice=dcPwrSysDevice, dcPwrSysCustomAlrmTbl=dcPwrSysCustomAlrmTbl, dcPwrSysMajorAlarm=dcPwrSysMajorAlarm, dcPwrSysTempAlrmEntry=dcPwrSysTempAlrmEntry, dcPwrSysTempAlrmSeverity=dcPwrSysTempAlrmSeverity, dcPwrSysCntrlrIpName=dcPwrSysCntrlrIpName, dcPwrSysOutputsTbl=dcPwrSysOutputsTbl, dcPwrSysSystemNumber=dcPwrSysSystemNumber, dcPwrSysTempAlrmStringValue=dcPwrSysTempAlrmStringValue, dcPwrSysCtrlAlrmIndex=dcPwrSysCtrlAlrmIndex, dcPwrSysTimeStamp=dcPwrSysTimeStamp, dcPwrSysConvIpTable=dcPwrSysConvIpTable, dcPwrSysDigIpName=dcPwrSysDigIpName, dcPwrSysCurrAlrmStringValue=dcPwrSysCurrAlrmStringValue, dcPwrSysAgentShutdownTrap=dcPwrSysAgentShutdownTrap, dcPwrSysRectIpName=dcPwrSysRectIpName, dcPwrSysMiscAlrmEntry=dcPwrSysMiscAlrmEntry, dcPwrSysTrap=dcPwrSysTrap, dcPwrSysRectAlrmName=dcPwrSysRectAlrmName, dcPwrSysVoltAlrmTable=dcPwrSysVoltAlrmTable, dcPwrSysTempAlrmCount=dcPwrSysTempAlrmCount, dcPwrSysChargeAmps=dcPwrSysChargeAmps, dcPwrSysTempAlrmTable=dcPwrSysTempAlrmTable, dcPwrSysMiscAlrmTbl=dcPwrSysMiscAlrmTbl, dcPwrSysAnalogOpIndex=dcPwrSysAnalogOpIndex, dcPwrSysCntrlrIpEntry=dcPwrSysCntrlrIpEntry, dcPwrSysSiteRegion=dcPwrSysSiteRegion, dcPwrSysString=dcPwrSysString, dcPwrSysBattAlrmName=dcPwrSysBattAlrmName, dcPwrSysSystemType=dcPwrSysSystemType, dcPwrSysConvAlrmSeverity=dcPwrSysConvAlrmSeverity, dcPwrSysRectIpCount=dcPwrSysRectIpCount, dcPwrSysTimerIpIntegerValue=dcPwrSysTimerIpIntegerValue, dcPwrSysCtrlAlrmEntry=dcPwrSysCtrlAlrmEntry, argus=argus, dcPwrSysRectAlrmTbl=dcPwrSysRectAlrmTbl, dcPwrSysRectAlrmIntegerValue=dcPwrSysRectAlrmIntegerValue, dcPwrSysTempAlrmIndex=dcPwrSysTempAlrmIndex, dcPwrSysDigAlrmEntry=dcPwrSysDigAlrmEntry, dcPwrSysAnalogOpCount=dcPwrSysAnalogOpCount, dcPwrSysComOKTrap=dcPwrSysComOKTrap, dcPwrSysCurrAlrmSeverity=dcPwrSysCurrAlrmSeverity, dcPwrSysVoltAlrmIndex=dcPwrSysVoltAlrmIndex, dcPwrSysConvIpName=dcPwrSysConvIpName, dcPwrSysCounterIpStringValue=dcPwrSysCounterIpStringValue, dcpower=dcpower, dcPwrSysCustomIpCount=dcPwrSysCustomIpCount, dcPwrSysVariable=dcPwrSysVariable, dcPwrSysAgentStartupTrap=dcPwrSysAgentStartupTrap, dcPwrSysAdioAlrmCount=dcPwrSysAdioAlrmCount, dcPwrSysRectAlrmSeverity=dcPwrSysRectAlrmSeverity, dcPwrSysCntrlrIpIntegerValue=dcPwrSysCntrlrIpIntegerValue, dcPwrSysAnalogOpIntegerValue=dcPwrSysAnalogOpIntegerValue, dcPwrSysRelayTbl=dcPwrSysRelayTbl, dcPwrSysCustomIpTbl=dcPwrSysCustomIpTbl, dcPwrSysCntrlrIpIndex=dcPwrSysCntrlrIpIndex, dcPwrSysCurrAlrmIndex=dcPwrSysCurrAlrmIndex, dcPwrSysCounterIpIntegerValue=dcPwrSysCounterIpIntegerValue, dcPwrSysDigIpStringValue=dcPwrSysDigIpStringValue, dcPwrSysAdioAlrmEntry=dcPwrSysAdioAlrmEntry, dcPwrSysDigAlrmIndex=dcPwrSysDigAlrmIndex, dcPwrSysRectIpTbl=dcPwrSysRectIpTbl, dcPwrSysRelayIntegerValue=dcPwrSysRelayIntegerValue, dcPwrSysDigIpCount=dcPwrSysDigIpCount, dcPwrSysMiscAlrmCount=dcPwrSysMiscAlrmCount, dcPwrSysDigIpEntry=dcPwrSysDigIpEntry, dcPwrSysMiscAlrmName=dcPwrSysMiscAlrmName, dcPwrSysRelayEntry=dcPwrSysRelayEntry, dcPwrSysMinorAlarmActiveTrap=dcPwrSysMinorAlarmActiveTrap, dcPwrSysBattAlrmIntegerValue=dcPwrSysBattAlrmIntegerValue, dcPwrSysTimerIpTbl=dcPwrSysTimerIpTbl, dcPwrSysConvIpTbl=dcPwrSysConvIpTbl, dcPwrSysRectIpIntegerValue=dcPwrSysRectIpIntegerValue, dcPwrSysBattAlrmIndex=dcPwrSysBattAlrmIndex, dcPwrSysRectAlrmTable=dcPwrSysRectAlrmTable, dcPwrSysDischargeVolts=dcPwrSysDischargeVolts, dcPwrSysgCustomIpIntegerValue=dcPwrSysgCustomIpIntegerValue, dcPwrSysDigAlrmStringValue=dcPwrSysDigAlrmStringValue, dcPwrSysVoltAlrmStringValue=dcPwrSysVoltAlrmStringValue, dcPwrSysAnalogOpName=dcPwrSysAnalogOpName, dcPwrSysRelayIndex=dcPwrSysRelayIndex, dcPwrSysSiteName=dcPwrSysSiteName, dcPwrSysConvAlrmStringValue=dcPwrSysConvAlrmStringValue, dcPwrSysVoltAlrmTbl=dcPwrSysVoltAlrmTbl, dcPwrSysConvAlrmIndex=dcPwrSysConvAlrmIndex, dcPwrSysCntrlrIpTbl=dcPwrSysCntrlrIpTbl, dcPwrSysRectIpIndex=dcPwrSysRectIpIndex, dcPwrSysMiscAlrmIntegerValue=dcPwrSysMiscAlrmIntegerValue, dcPwrSysAlrmsTbl=dcPwrSysAlrmsTbl, dcPwrSysRectAlrmCount=dcPwrSysRectAlrmCount, dcPwrSysRelayTrap=dcPwrSysRelayTrap, dcPwrSysBattAlrmSeverity=dcPwrSysBattAlrmSeverity, dcPwrSysCtrlAlrmCount=dcPwrSysCtrlAlrmCount, dcPwrSysCustomAlrmIntegerValue=dcPwrSysCustomAlrmIntegerValue, dcPwrSysTimerIpIndex=dcPwrSysTimerIpIndex, dcPwrSysVoltAlrmEntry=dcPwrSysVoltAlrmEntry, dcPwrSysAdioAlrmStringValue=dcPwrSysAdioAlrmStringValue, dcPwrSysDigIpTbl=dcPwrSysDigIpTbl, dcPwrSysCounterIpTbl=dcPwrSysCounterIpTbl, dcPwrSysCustomAlrmCount=dcPwrSysCustomAlrmCount, dcPwrSysCtrlAlrmName=dcPwrSysCtrlAlrmName, dcPwrSysConvAlrmCount=dcPwrSysConvAlrmCount, dcPwrSysCustomIpStringValue=dcPwrSysCustomIpStringValue, dcPwrSysDigAlrmSeverity=dcPwrSysDigAlrmSeverity, dcPwrSysConvAlrmIntegerValue=dcPwrSysConvAlrmIntegerValue, dcPwrSysChargeVolts=dcPwrSysChargeVolts, dcPwrSysBattAlrmTable=dcPwrSysBattAlrmTable, dcPwrSysCounterIpCount=dcPwrSysCounterIpCount, dcPwrSysDigAlrmIntegerValue=dcPwrSysDigAlrmIntegerValue, dcPwrSysCustomAlrmTable=dcPwrSysCustomAlrmTable, dcPwrSysCustomIpIndex=dcPwrSysCustomIpIndex, dcPwrSysCurrAlrmEntry=dcPwrSysCurrAlrmEntry, dcPwrSysDigIpIntegerValue=dcPwrSysDigIpIntegerValue, dcPwrSysVoltAlrmName=dcPwrSysVoltAlrmName, dcPwrSysMiscAlrmStringValue=dcPwrSysMiscAlrmStringValue, dcPwrSysCurrAlrmTbl=dcPwrSysCurrAlrmTbl, dcPwrSysTimerIpStringValue=dcPwrSysTimerIpStringValue, dcPwrSysCounterIpName=dcPwrSysCounterIpName, dcPwrSysCtrlAlrmSeverity=dcPwrSysCtrlAlrmSeverity, dcPwrSysRectAlrmStringValue=dcPwrSysRectAlrmStringValue, dcPwrSysCurrAlrmTable=dcPwrSysCurrAlrmTable, dcPwrSysCustomAlrmName=dcPwrSysCustomAlrmName, dcPwrSysCntrlrIpStringValue=dcPwrSysCntrlrIpStringValue, dcPwrSysConvIpCount=dcPwrSysConvIpCount, dcPwrSysAnalogOpTable=dcPwrSysAnalogOpTable, dcPwrSysCtrlAlrmTable=dcPwrSysCtrlAlrmTable, dcPwrSysSystemSerial=dcPwrSysSystemSerial, dcPwrSysAdioAlrmIndex=dcPwrSysAdioAlrmIndex, dcPwrSysCounterIpIndex=dcPwrSysCounterIpIndex, dcPwrSysAdioAlrmSeverity=dcPwrSysAdioAlrmSeverity, dcPwrSysCustomAlrmSeverity=dcPwrSysCustomAlrmSeverity, dcPwrSysTimerIpTable=dcPwrSysTimerIpTable, dcPwrSysAnalogOpEntry=dcPwrSysAnalogOpEntry, dcPwrSysSoftwareTimestamp=dcPwrSysSoftwareTimestamp, dcPwrSysAlarmClearedTrap=dcPwrSysAlarmClearedTrap, dcPwrSysSiteCity=dcPwrSysSiteCity, dcPwrSysCounterIpTable=dcPwrSysCounterIpTable, dcPwrSysCurrAlrmCount=dcPwrSysCurrAlrmCount, dcPwrSysAdioAlrmIntegerValue=dcPwrSysAdioAlrmIntegerValue, dcPwrSysRectIpTable=dcPwrSysRectIpTable, dcPwrSysCustomIpTable=dcPwrSysCustomIpTable, dcPwrSysCustomIpName=dcPwrSysCustomIpName, dcPwrSysTempAlrmIntegerValue=dcPwrSysTempAlrmIntegerValue, dcPwrSysTimerIpEntry=dcPwrSysTimerIpEntry)
