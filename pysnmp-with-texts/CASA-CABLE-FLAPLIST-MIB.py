#
# PySNMP MIB module CASA-CABLE-FLAPLIST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CASA-CABLE-FLAPLIST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:47:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
casa, = mibBuilder.importSymbols("CASA-MIB", "casa")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, ObjectIdentity, ModuleIdentity, Gauge32, MibIdentifier, Counter32, Bits, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Gauge32", "MibIdentifier", "Counter32", "Bits", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "iso", "Unsigned32")
TruthValue, DisplayString, MacAddress, TextualConvention, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "MacAddress", "TextualConvention", "DateAndTime", "RowStatus")
casaFlapListMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 20858, 10, 11))
if mibBuilder.loadTexts: casaFlapListMib.setLastUpdated('200809051453Z')
if mibBuilder.loadTexts: casaFlapListMib.setOrganization('Casa Systems Inc')
if mibBuilder.loadTexts: casaFlapListMib.setContactInfo('Guangzhou Casa Communications Ltd. No.206 YueHe Bld,Huacui Str. Tianhe Industrial Park Guangzhou China TEL:020 85545002/85577786 ext.212 FAX:020 85545002 ext.230 E-mail: huangxiaole@casachina.com.cn ')
if mibBuilder.loadTexts: casaFlapListMib.setDescription('This is the enterprise MIB Module for CASA systems CMTS.')
casaMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10))
casaFlapListMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1))
casaFlapListGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1))
casaFlapInsertionTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 1), Unsigned32().clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapInsertionTime.setStatus('current')
if mibBuilder.loadTexts: casaFlapInsertionTime.setDescription("If the Cable Modem continuously send initial ranging request within a fixed time interval ,the Cable Modem will be added to the casaFlapListTable. 0 means no matter the Cable Modem continuously send initial rangeing in any interval, the Cable Modem won't be added to the casaFlapListTable. ")
casaFlapMissThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(6)).setUnits('times').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapMissThreshold.setStatus('current')
if mibBuilder.loadTexts: casaFlapMissThreshold.setDescription("When the number of times a Cable Modem does not acknowledge a MAC-layer station maintenance message from a CMTS exceeds this threshold, the Cable Modem will be add to the casaFlapListTable. 0 means no matter how many times the Cable Modem does not acknowledge a MAC-layer station maintenance message from a CMTS, the Cable Modem won't be added to the casaFlapListTable. ")
casaFlapPowerAdjThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 3), Unsigned32().clone(2)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapPowerAdjThreshold.setStatus('current')
if mibBuilder.loadTexts: casaFlapPowerAdjThreshold.setDescription("When the power level a Cable Modem send to Cmts after online exceeds this threshold, the Cable Modem will be add to the casaFlapListTable. 0 means no metter how much power level the Cable Modem send to Cmts after online, the Cable Modem won't be added to the casaFlapListTable. ")
casaFlapListAging = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(15, 86400)).clone(10080)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListAging.setStatus('current')
if mibBuilder.loadTexts: casaFlapListAging.setDescription('Aging threshold for the CM. Periodically, a process scans through the CM and removes those Cable Modems from casaFlapListTable and casaFlapListTable that have no new detections for a time interval longer than this threshold in minutes. ')
casaFlapListMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListMaxSize.setStatus('current')
if mibBuilder.loadTexts: casaFlapListMaxSize.setDescription('The maximum number of Cable Modem entries that casaFlapListTable can report. ')
casaFlapListResetAll = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListResetAll.setStatus('current')
if mibBuilder.loadTexts: casaFlapListResetAll.setDescription(" If set to 'true', all counter objects for all entries in casaFlapListTable are reset to zero. Reading this object always returns 'false'. ")
casaFlapListLastResetTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapListLastResetTime.setStatus('current')
if mibBuilder.loadTexts: casaFlapListLastResetTime.setDescription("The last time that all the counters in the casaFlapListTable are reset to 0. The special value of all '00'Hs indicates that the Entries in these tables have never been reset. ")
casaFlapListClearAll = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListClearAll.setStatus('current')
if mibBuilder.loadTexts: casaFlapListClearAll.setDescription("If set to 'true', all entries from the casaFlapListTable are removed. Reading this object always returns 'false'.")
casaFlapListLastClearTime = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapListLastClearTime.setStatus('current')
if mibBuilder.loadTexts: casaFlapListLastClearTime.setDescription("The last time that all the entries in the casaFlapListTable are destroyed. The special value of all '00'Hs indicates that the entries in these tables have never been destroyed.")
casaFlapListCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 1, 10), Unsigned32().clone(120)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapListCheckInterval.setStatus('current')
if mibBuilder.loadTexts: casaFlapListCheckInterval.setDescription('Scaning threshold for the casaFlapListTable. Periodically, a process scans through the casaFlapListTable and removes those Cable Modems from casaFlapListTable and casaFlapListTable that have no new detections for a time interval longer than this threshold in minutes.')
casaFlapListTable = MibTable((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2), )
if mibBuilder.loadTexts: casaFlapListTable.setStatus('current')
if mibBuilder.loadTexts: casaFlapListTable.setDescription('Description.')
casaFlapListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1), ).setIndexNames((0, "CASA-CABLE-FLAPLIST-MIB", "casaFlapCmMacAddress"))
if mibBuilder.loadTexts: casaFlapListEntry.setStatus('current')
if mibBuilder.loadTexts: casaFlapListEntry.setDescription('Description.')
casaFlapCmMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmMacAddress.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmMacAddress.setDescription('The Cable Modem mac address')
casaFlapCmUpstreamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmUpstreamIfIndex.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmUpstreamIfIndex.setDescription('The upstream channel index for the CM')
casaFlapCmDownstreamIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmDownstreamIfIndex.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmDownstreamIfIndex.setDescription('The downstream channel index for the CM')
casaFlapCmInsertionFails = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 4), Integer32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmInsertionFails.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmInsertionFails.setDescription('The CM total ranging count after CM is added to casaFalpListTable.')
casaFlapCmHits = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 5), Unsigned32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmHits.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmHits.setDescription('The count a Cable Modem acknowledge a MAC-layer station maintenance message after the Cable Modem is added to casaFalpListTable.')
casaFlapCmMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 6), Unsigned32()).setUnits('times').setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmMisses.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmMisses.setDescription('The count a Cable Modem does not acknowledge a MAC-layer station maintenance message after the Cable Modem is added to casaFalpListTable.')
casaFlapCmCRCCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmCRCCounts.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmCRCCounts.setDescription('The CM CRC count after a CM is added to casaFlapListTable')
casaFlapCmPowerAdjustments = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmPowerAdjustments.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmPowerAdjustments.setDescription('The count Cmts require Cable Modem to adjust power level that more than 2 dB after the Cable Modem is added to casaFalpListTable.')
casaFlapCmFlapCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmFlapCounts.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmFlapCounts.setDescription('The total count that Cable Modem ranging count plus P-ADJ count after the cable modem is added to casaFlapListTable.')
casaFlapCmLastFlapTime = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: casaFlapCmLastFlapTime.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmLastFlapTime.setDescription('The last offline time a Cable Modem after added to casaFlapListTable')
casaFlapCmFlapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20858, 10, 11, 1, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: casaFlapCmFlapRowStatus.setStatus('current')
if mibBuilder.loadTexts: casaFlapCmFlapRowStatus.setDescription('The status of this instance.')
casaFlapListGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 2))
casaFlapListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 20858, 10, 11, 2, 1)).setObjects(("CASA-CABLE-FLAPLIST-MIB", "casaFlapInsertionTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapMissThreshold"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapPowerAdjThreshold"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListAging"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListMaxSize"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListResetAll"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListLastResetTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListClearAll"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListLastClearTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapListCheckInterval"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmUpstreamIfIndex"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmDownstreamIfIndex"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmInsertionFails"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmHits"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmMisses"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmCRCCounts"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmPowerAdjustments"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmFlapCounts"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmLastFlapTime"), ("CASA-CABLE-FLAPLIST-MIB", "casaFlapCmFlapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaFlapListGroup = casaFlapListGroup.setStatus('current')
if mibBuilder.loadTexts: casaFlapListGroup.setDescription('Group of objects implemented in.')
casaFlapListCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 20858, 10, 11, 3))
casaFlapListCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 20858, 10, 11, 3, 1)).setObjects(("CASA-CABLE-FLAPLIST-MIB", "casaFlapListGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    casaFlapListCompliance = casaFlapListCompliance.setStatus('current')
if mibBuilder.loadTexts: casaFlapListCompliance.setDescription('The compliance statement of managed objects common for Cable Modem Termination Sytems (CMTS) and Cable Modems (CM).')
mibBuilder.exportSymbols("CASA-CABLE-FLAPLIST-MIB", casaFlapListLastResetTime=casaFlapListLastResetTime, casaFlapCmPowerAdjustments=casaFlapCmPowerAdjustments, casaFlapListGlobal=casaFlapListGlobal, casaFlapCmHits=casaFlapCmHits, casaFlapCmDownstreamIfIndex=casaFlapCmDownstreamIfIndex, casaFlapListClearAll=casaFlapListClearAll, casaMgmt=casaMgmt, casaFlapListGroup=casaFlapListGroup, casaFlapCmCRCCounts=casaFlapCmCRCCounts, casaFlapCmLastFlapTime=casaFlapCmLastFlapTime, casaFlapCmUpstreamIfIndex=casaFlapCmUpstreamIfIndex, casaFlapMissThreshold=casaFlapMissThreshold, casaFlapListMaxSize=casaFlapListMaxSize, casaFlapCmMacAddress=casaFlapCmMacAddress, casaFlapListCheckInterval=casaFlapListCheckInterval, casaFlapCmFlapCounts=casaFlapCmFlapCounts, casaFlapCmFlapRowStatus=casaFlapCmFlapRowStatus, casaFlapCmMisses=casaFlapCmMisses, casaFlapListLastClearTime=casaFlapListLastClearTime, casaFlapListGroups=casaFlapListGroups, casaFlapListMIBObjects=casaFlapListMIBObjects, casaFlapListMib=casaFlapListMib, casaFlapListResetAll=casaFlapListResetAll, casaFlapListAging=casaFlapListAging, casaFlapListTable=casaFlapListTable, casaFlapCmInsertionFails=casaFlapCmInsertionFails, casaFlapListCompliances=casaFlapListCompliances, casaFlapListCompliance=casaFlapListCompliance, casaFlapListEntry=casaFlapListEntry, casaFlapInsertionTime=casaFlapInsertionTime, PYSNMP_MODULE_ID=casaFlapListMib, casaFlapPowerAdjThreshold=casaFlapPowerAdjThreshold)
