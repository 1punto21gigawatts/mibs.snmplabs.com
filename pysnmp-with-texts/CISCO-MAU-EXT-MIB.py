#
# PySNMP MIB module CISCO-MAU-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MAU-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:06:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifMauIfIndex, ifJackEntry, ifMauIndex = mibBuilder.importSymbols("MAU-MIB", "ifMauIfIndex", "ifJackEntry", "ifMauIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, iso, NotificationType, ModuleIdentity, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, ObjectIdentity, TimeTicks, MibIdentifier, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "NotificationType", "ModuleIdentity", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Gauge32", "Unsigned32")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
ciscoMauExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 398))
ciscoMauExtMIB.setRevisions(('2008-03-05 00:00', '2004-04-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMauExtMIB.setRevisionsDescriptions(('Added cmExtIfMauTrafficTable Added cmExtIfMauTrafficGroup OBJECT-GROUP Deprecated cmExtMIBCompliance2 MODULE-COMPLIANCE Added cmExtMIBCompliance3 MODULE-COMPLIANCE', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoMauExtMIB.setLastUpdated('200803050000Z')
if mibBuilder.loadTexts: ciscoMauExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMauExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoMauExtMIB.setDescription('A MIB module for extending the MAU-MIB (RFC 3636) to add objects which provide additional management information about MAU or Jack not available in MAU-MIB.')
cmExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 0))
cmExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 1))
cmExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 2))
cmExtMauConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 1))
cmExtJackConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 1, 1), )
if mibBuilder.loadTexts: cmExtJackConfigTable.setReference('Reference RFC 3636, ifJackTable.')
if mibBuilder.loadTexts: cmExtJackConfigTable.setStatus('current')
if mibBuilder.loadTexts: cmExtJackConfigTable.setDescription('This table contains management information about MAUs attached to interfaces with managed jacks. The objects in this table are in addition to the objects in the ifJackTable.')
cmExtJackConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 1, 1, 1), )
if mibBuilder.loadTexts: cmExtJackConfigEntry.setReference('Reference RFC 3636, ifJackEntry')
ifJackEntry.registerAugmentions(("CISCO-MAU-EXT-MIB", "cmExtJackConfigEntry"))
cmExtJackConfigEntry.setIndexNames(*ifJackEntry.getIndexNames())
if mibBuilder.loadTexts: cmExtJackConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cmExtJackConfigEntry.setDescription('An entry containing additional management information for a particular jack.')
cmExtJackState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmExtJackState.setStatus('current')
if mibBuilder.loadTexts: cmExtJackState.setDescription("Indicates the state of a particular jack. Within a particular MAU, setting this to 'active' on a jack which is not the current active jack will deactivate the current active jack. Setting the current active jack to 'active' has no effect. A value of inactive(2) indicates that the jack is currently deactiveated. Setting this to 'inactive' has no effect. Of all the jacks connected to a MAU, at least one must be active at all times.")
cmExtAutoMdixConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 2))
cmExtIfAutoMdixConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 2, 1), )
if mibBuilder.loadTexts: cmExtIfAutoMdixConfigTable.setStatus('current')
if mibBuilder.loadTexts: cmExtIfAutoMdixConfigTable.setDescription('This table contains Auto-MDIX configuration information for MAUs attached to interfaces in the device. An entry appears in this table for each active Auto-MDIX capable MAU connected to interfaces in the device.')
cmExtIfAutoMdixConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 2, 1, 1), ).setIndexNames((0, "MAU-MIB", "ifMauIfIndex"), (0, "MAU-MIB", "ifMauIndex"))
if mibBuilder.loadTexts: cmExtIfAutoMdixConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cmExtIfAutoMdixConfigEntry.setDescription('An entry containing Auto-MDIX configuration information for a MAU connected to the interface.')
cmExtIfAutoMdixEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmExtIfAutoMdixEnabled.setStatus('current')
if mibBuilder.loadTexts: cmExtIfAutoMdixEnabled.setDescription('Specifies if Auto-MDIX feature is enabled on the MAU.')
cmExtIfMau = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 3))
cmExtIfMauTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 3, 1), )
if mibBuilder.loadTexts: cmExtIfMauTrafficTable.setReference('ifMauTable defined in MAU-MIB [RFC 4836].')
if mibBuilder.loadTexts: cmExtIfMauTrafficTable.setStatus('current')
if mibBuilder.loadTexts: cmExtIfMauTrafficTable.setDescription('The (conceptual) table that identifies the type of traffic carried by the interfaces associated with the MAUs in the device. This table is sparse dependant on ifMauTable.')
cmExtIfMauTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 3, 1, 1), ).setIndexNames((0, "MAU-MIB", "ifMauIfIndex"), (0, "MAU-MIB", "ifMauIndex"))
if mibBuilder.loadTexts: cmExtIfMauTrafficEntry.setReference('ifMauTable defined in MAU-MIB [RFC 4836].')
if mibBuilder.loadTexts: cmExtIfMauTrafficEntry.setStatus('current')
if mibBuilder.loadTexts: cmExtIfMauTrafficEntry.setDescription('An entry (conceptual row) in the cmExtIfMauTrafficEntry. Each entry contains the type of traffic carried by the interface associated with the MAU identified by the indices.')
cmExtIfMauTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 398, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("adminControl", 2), ("user", 3))).clone('user')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmExtIfMauTrafficType.setStatus('current')
if mibBuilder.loadTexts: cmExtIfMauTrafficType.setDescription('This object is used to identify the type of traffic carried by the MAU. This object can take the following values other(1) - The traffic type is other than anything defined below adminControl(2) - This interface carries administrative and control traffic that is internal to the device user(3) - This interface carries the user data traffic')
cmExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 1))
cmExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 2))
cmExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 1, 1)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtJackConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtMIBCompliance = cmExtMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cmExtMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco MAU extension MIB.')
cmExtMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 1, 2)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtJackConfigGroup"), ("CISCO-MAU-EXT-MIB", "cmExtIfAutoMdixConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtMIBCompliance2 = cmExtMIBCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: cmExtMIBCompliance2.setDescription('The compliance statement for entities which implement the Cisco MAU extension MIB.')
cmExtMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 1, 3)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtJackConfigGroup"), ("CISCO-MAU-EXT-MIB", "cmExtIfAutoMdixConfigGroup"), ("CISCO-MAU-EXT-MIB", "cmExtIfMauTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtMIBCompliance3 = cmExtMIBCompliance3.setStatus('current')
if mibBuilder.loadTexts: cmExtMIBCompliance3.setDescription('The compliance statement for entities which implement the Cisco MAU extension MIB.')
cmExtJackConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 2, 1)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtJackState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtJackConfigGroup = cmExtJackConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cmExtJackConfigGroup.setDescription('A collection of objects providing the configuration information about MAUs attached to interfaces with managed jacks.')
cmExtIfAutoMdixConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 2, 2)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtIfAutoMdixEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtIfAutoMdixConfigGroup = cmExtIfAutoMdixConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cmExtIfAutoMdixConfigGroup.setDescription('A collection of objects providing the configuration information of Auto-MDIX feature in the device.')
cmExtIfMauTrafficGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 398, 2, 2, 3)).setObjects(("CISCO-MAU-EXT-MIB", "cmExtIfMauTrafficType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmExtIfMauTrafficGroup = cmExtIfMauTrafficGroup.setStatus('current')
if mibBuilder.loadTexts: cmExtIfMauTrafficGroup.setDescription('Object that provides the type of traffic carried by MAUs in devices having admin or control traffic internal to the device.')
mibBuilder.exportSymbols("CISCO-MAU-EXT-MIB", cmExtMIBNotifs=cmExtMIBNotifs, cmExtMIBCompliances=cmExtMIBCompliances, cmExtIfMauTrafficEntry=cmExtIfMauTrafficEntry, cmExtIfAutoMdixConfigTable=cmExtIfAutoMdixConfigTable, cmExtIfAutoMdixEnabled=cmExtIfAutoMdixEnabled, cmExtIfMauTrafficType=cmExtIfMauTrafficType, cmExtIfAutoMdixConfigGroup=cmExtIfAutoMdixConfigGroup, cmExtMIBConformance=cmExtMIBConformance, cmExtJackConfigGroup=cmExtJackConfigGroup, PYSNMP_MODULE_ID=ciscoMauExtMIB, cmExtAutoMdixConfig=cmExtAutoMdixConfig, cmExtIfMauTrafficGroup=cmExtIfMauTrafficGroup, cmExtJackState=cmExtJackState, cmExtIfMau=cmExtIfMau, cmExtMIBCompliance2=cmExtMIBCompliance2, cmExtMIBCompliance3=cmExtMIBCompliance3, ciscoMauExtMIB=ciscoMauExtMIB, cmExtJackConfigTable=cmExtJackConfigTable, cmExtMIBCompliance=cmExtMIBCompliance, cmExtIfMauTrafficTable=cmExtIfMauTrafficTable, cmExtMauConfig=cmExtMauConfig, cmExtMIBGroups=cmExtMIBGroups, cmExtMIBObjects=cmExtMIBObjects, cmExtJackConfigEntry=cmExtJackConfigEntry, cmExtIfAutoMdixConfigEntry=cmExtIfAutoMdixConfigEntry)
