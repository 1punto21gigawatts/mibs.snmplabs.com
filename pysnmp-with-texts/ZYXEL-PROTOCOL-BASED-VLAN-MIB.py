#
# PySNMP MIB module ZYXEL-PROTOCOL-BASED-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-PROTOCOL-BASED-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:51:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, NotificationType, iso, TimeTicks, Unsigned32, Bits, MibIdentifier, Gauge32, ObjectIdentity, Counter32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "NotificationType", "iso", "TimeTicks", "Unsigned32", "Bits", "MibIdentifier", "Gauge32", "ObjectIdentity", "Counter32", "ModuleIdentity", "Counter64")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelProtocolBasedVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69))
if mibBuilder.loadTexts: zyxelProtocolBasedVlan.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelProtocolBasedVlan.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelProtocolBasedVlan.setContactInfo('')
if mibBuilder.loadTexts: zyxelProtocolBasedVlan.setDescription('The subtree for protocol-based VLAN')
zyxelProtocolBasedVlanSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1))
zyProtocolBasedVlanMaxNumberOfVlans = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyProtocolBasedVlanMaxNumberOfVlans.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanMaxNumberOfVlans.setDescription('The maximum number of protocol based VLANs that can be created')
zyxelProtocolBasedVlanTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2), )
if mibBuilder.loadTexts: zyxelProtocolBasedVlanTable.setStatus('current')
if mibBuilder.loadTexts: zyxelProtocolBasedVlanTable.setDescription('The table contains protocol based VLAN configuration. ')
zyxelProtocolBasedVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"), (0, "ZYXEL-PROTOCOL-BASED-VLAN-MIB", "zyProtocolBasedVlanPacketType"), (0, "ZYXEL-PROTOCOL-BASED-VLAN-MIB", "zyProtocolBasedVlanEthernetType"))
if mibBuilder.loadTexts: zyxelProtocolBasedVlanEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelProtocolBasedVlanEntry.setDescription('An entry contains protocol based VLAN configuration.')
zyProtocolBasedVlanPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("etherII", 1), ("snap", 2), ("llc", 3))))
if mibBuilder.loadTexts: zyProtocolBasedVlanPacketType.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanPacketType.setDescription('There are several types of Ethernet frames. The different frame types have different formats and MTU values, but can coexist on the same physical medium.')
zyProtocolBasedVlanEthernetType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: zyProtocolBasedVlanEthernetType.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanEthernetType.setDescription('The predefined protocol in this protocol based VLAN. For example, the IP protocol in hexadecimal notation is 0800, and in decimal is 2048.')
zyProtocolBasedVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyProtocolBasedVlanName.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanName.setDescription('Type a descriptive name that identifies this protocol based VLAN.')
zyProtocolBasedVlanVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyProtocolBasedVlanVid.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanVid.setDescription('Enter the ID of a VLAN to which the port belongs. This must be an existing VLAN which you defined on switch.')
zyProtocolBasedVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyProtocolBasedVlanPriority.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanPriority.setDescription('Enter the priority level that the Switch will assign to frames belonging to this VLAN.')
zyProtocolBasedVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 69, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyProtocolBasedVlanRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyProtocolBasedVlanRowStatus.setDescription('This object allows entries to be created and deleted from the protocol based VLAN table')
mibBuilder.exportSymbols("ZYXEL-PROTOCOL-BASED-VLAN-MIB", zyProtocolBasedVlanPacketType=zyProtocolBasedVlanPacketType, zyProtocolBasedVlanVid=zyProtocolBasedVlanVid, zyxelProtocolBasedVlanSetup=zyxelProtocolBasedVlanSetup, zyProtocolBasedVlanMaxNumberOfVlans=zyProtocolBasedVlanMaxNumberOfVlans, zyxelProtocolBasedVlan=zyxelProtocolBasedVlan, PYSNMP_MODULE_ID=zyxelProtocolBasedVlan, zyxelProtocolBasedVlanEntry=zyxelProtocolBasedVlanEntry, zyxelProtocolBasedVlanTable=zyxelProtocolBasedVlanTable, zyProtocolBasedVlanRowStatus=zyProtocolBasedVlanRowStatus, zyProtocolBasedVlanName=zyProtocolBasedVlanName, zyProtocolBasedVlanPriority=zyProtocolBasedVlanPriority, zyProtocolBasedVlanEthernetType=zyProtocolBasedVlanEthernetType)
