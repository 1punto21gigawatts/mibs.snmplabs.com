#
# PySNMP MIB module WS-INFRA-PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WS-INFRA-PM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Bits, ObjectIdentity, TimeTicks, MibIdentifier, NotificationType, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Bits", "ObjectIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "Counter32", "Unsigned32")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
wsInfraPM, = mibBuilder.importSymbols("WS-INFRA-SMI-MIB", "wsInfraPM")
DoActionNow, = mibBuilder.importSymbols("WS-TYPE-MIB", "DoActionNow")
wsInfraProcessMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1))
wsInfraProcessMonitor.setRevisions(('2006-05-24 15:32', '2006-05-12 14:26', '2005-10-27 18:30', '2005-09-02 16:22', '2005-05-19 15:36', '2005-05-18 17:11',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wsInfraProcessMonitor.setRevisionsDescriptions(('01a06', '01a05', '01a04', '01a03', '01a02', '01a01',))
if mibBuilder.loadTexts: wsInfraProcessMonitor.setLastUpdated('200504191125Z')
if mibBuilder.loadTexts: wsInfraProcessMonitor.setOrganization('Symbol Technologies')
if mibBuilder.loadTexts: wsInfraProcessMonitor.setContactInfo('Symbol Technologies, Inc. Customer Service Postal: One Symbol Plaza Holtsville, NY 11742-1300 USA Tel: +1. 631.738.6213 E-mail: support@symbol.com Web: http://www.symbol.com/support')
if mibBuilder.loadTexts: wsInfraProcessMonitor.setDescription('process monitor module')
wsInfraProcMonSystemRestart = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraProcMonSystemRestart.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonSystemRestart.setDescription('If set to true(1), the Process Monitor will restart the system if a failed process reached its max number of restarts. If false(2), the Process Monitor will not restart the system.')
wsInfraProcMonMaxSystemRestarts = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraProcMonMaxSystemRestarts.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonMaxSystemRestarts.setDescription('Maximum number of times the Process Monitor will restart the system because of failed processes.')
wsInfraProcMonSystemRestartCnt = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonSystemRestartCnt.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonSystemRestartCnt.setDescription('System restart count.')
wsInfraProcMonSystemRestartCntClear = MibScalar((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 4), DoActionNow()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wsInfraProcMonSystemRestartCntClear.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonSystemRestartCntClear.setDescription('Clear the restart counter for the system.')
wsInfraProcMonProcessTable = MibTable((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5), )
if mibBuilder.loadTexts: wsInfraProcMonProcessTable.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessTable.setDescription('List of processes that are monitored by Process Monitor.')
wsInfraProcMonProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1), ).setIndexNames((0, "WS-INFRA-PM-MIB", "wsInfraProcMonProcessIndex"))
if mibBuilder.loadTexts: wsInfraProcMonProcessEntry.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessEntry.setDescription(' ')
wsInfraProcMonProcessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wsInfraProcMonProcessIndex.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessIndex.setDescription('Simple index.')
wsInfraProcMonProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessName.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessName.setDescription('Process name.')
wsInfraProcMonProcessPid = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessPid.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessPid.setDescription('Process ID.')
wsInfraProcMonProcessMaxRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessMaxRestart.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessMaxRestart.setDescription('Maximum number of times the Process Monitor will attempt to restart the process when it fails.')
wsInfraProcMonProcessStartCount = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessStartCount.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessStartCount.setDescription('Number of times the process was started by the Process Monitor.')
wsInfraProcMonProcessLastHeard = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessLastHeard.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessLastHeard.setDescription('The last time Process Monitor received a heartbeat message from the process.')
wsInfraProcMonProcessLastStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 5, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonProcessLastStarted.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonProcessLastStarted.setDescription('The last time the Process Monitor started the process.')
wsInfraProcMonHistTable = MibTable((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6), )
if mibBuilder.loadTexts: wsInfraProcMonHistTable.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistTable.setDescription('List of history entries for monitored processes.')
wsInfraProcMonHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6, 1), ).setIndexNames((0, "WS-INFRA-PM-MIB", "wsInfraProcMonProcessIndex"), (0, "WS-INFRA-PM-MIB", "wsInfraProcMonHistIndex"))
if mibBuilder.loadTexts: wsInfraProcMonHistEntry.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistEntry.setDescription(' ')
wsInfraProcMonHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wsInfraProcMonHistIndex.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistIndex.setDescription('Simple index.')
wsInfraProcMonHistTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonHistTimestamp.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistTimestamp.setDescription('Time when the process changed its state.')
wsInfraProcMonHistEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("init", 1), ("up", 2), ("down", 3), ("failed", 4), ("heartbeat", 5), ("shutdown", 6), ("stopMonitoring", 7), ("resumeMonitoring", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonHistEvent.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistEvent.setDescription('The event that caused the process to change its state.')
wsInfraProcMonHistState = MibTableColumn((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("running", 2), ("notRunning", 3), ("notResponding", 4), ("kill", 5), ("down", 6), ("shutdown", 7), ("notMonitoring", 8), ("resumeMonitoring", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInfraProcMonHistState.setStatus('current')
if mibBuilder.loadTexts: wsInfraProcMonHistState.setDescription('The new state the process moved to.')
wsInfraPMMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 100))
wsInfraPMMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 100, 1))
wsInfraPMMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 100, 1, 1)).setObjects(("WS-INFRA-PM-MIB", "wsInfraMIBProcMonGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraPMMIBCompliance = wsInfraPMMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: wsInfraPMMIBCompliance.setDescription('PM mib compliance')
wsInfraPMMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 100, 2))
wsInfraMIBProcMonGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 388, 14, 1, 5, 1, 100, 2, 1)).setObjects(("WS-INFRA-PM-MIB", "wsInfraProcMonProcessStartCount"), ("WS-INFRA-PM-MIB", "wsInfraProcMonSystemRestartCntClear"), ("WS-INFRA-PM-MIB", "wsInfraProcMonSystemRestartCnt"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessLastStarted"), ("WS-INFRA-PM-MIB", "wsInfraProcMonSystemRestart"), ("WS-INFRA-PM-MIB", "wsInfraProcMonMaxSystemRestarts"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessIndex"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessName"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessPid"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessMaxRestart"), ("WS-INFRA-PM-MIB", "wsInfraProcMonProcessLastHeard"), ("WS-INFRA-PM-MIB", "wsInfraProcMonHistIndex"), ("WS-INFRA-PM-MIB", "wsInfraProcMonHistTimestamp"), ("WS-INFRA-PM-MIB", "wsInfraProcMonHistEvent"), ("WS-INFRA-PM-MIB", "wsInfraProcMonHistState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wsInfraMIBProcMonGroup = wsInfraMIBProcMonGroup.setStatus('current')
if mibBuilder.loadTexts: wsInfraMIBProcMonGroup.setDescription('proc mon mib group')
mibBuilder.exportSymbols("WS-INFRA-PM-MIB", wsInfraProcMonSystemRestartCntClear=wsInfraProcMonSystemRestartCntClear, wsInfraProcMonProcessLastHeard=wsInfraProcMonProcessLastHeard, wsInfraProcMonHistEntry=wsInfraProcMonHistEntry, wsInfraProcessMonitor=wsInfraProcessMonitor, wsInfraPMMIBCompliance=wsInfraPMMIBCompliance, wsInfraProcMonSystemRestartCnt=wsInfraProcMonSystemRestartCnt, wsInfraProcMonProcessName=wsInfraProcMonProcessName, wsInfraProcMonProcessMaxRestart=wsInfraProcMonProcessMaxRestart, wsInfraPMMIBConformance=wsInfraPMMIBConformance, wsInfraProcMonProcessEntry=wsInfraProcMonProcessEntry, PYSNMP_MODULE_ID=wsInfraProcessMonitor, wsInfraProcMonHistEvent=wsInfraProcMonHistEvent, wsInfraPMMIBGroups=wsInfraPMMIBGroups, wsInfraProcMonProcessTable=wsInfraProcMonProcessTable, wsInfraProcMonProcessIndex=wsInfraProcMonProcessIndex, wsInfraProcMonSystemRestart=wsInfraProcMonSystemRestart, wsInfraProcMonProcessPid=wsInfraProcMonProcessPid, wsInfraProcMonProcessStartCount=wsInfraProcMonProcessStartCount, wsInfraProcMonHistTimestamp=wsInfraProcMonHistTimestamp, wsInfraMIBProcMonGroup=wsInfraMIBProcMonGroup, wsInfraPMMIBCompliances=wsInfraPMMIBCompliances, wsInfraProcMonHistState=wsInfraProcMonHistState, wsInfraProcMonHistTable=wsInfraProcMonHistTable, wsInfraProcMonProcessLastStarted=wsInfraProcMonProcessLastStarted, wsInfraProcMonHistIndex=wsInfraProcMonHistIndex, wsInfraProcMonMaxSystemRestarts=wsInfraProcMonMaxSystemRestarts)
