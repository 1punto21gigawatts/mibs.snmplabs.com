#
# PySNMP MIB module CISCO-REPORT-INTERVAL-TC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-REPORT-INTERVAL-TC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:58:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, MibIdentifier, NotificationType, ObjectIdentity, ModuleIdentity, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Integer32, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "MibIdentifier", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Integer32", "Bits", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoReportIntervalTcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 670))
ciscoReportIntervalTcMIB.setRevisions(('2008-08-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoReportIntervalTcMIB.setRevisionsDescriptions(('The initial version of the MIB module.',))
if mibBuilder.loadTexts: ciscoReportIntervalTcMIB.setLastUpdated('200808220000Z')
if mibBuilder.loadTexts: ciscoReportIntervalTcMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoReportIntervalTcMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoReportIntervalTcMIB.setDescription("This MIB module defines textual conventions used by MIB modules that define objects describing performance history data based on a configurable reporting interval. Use of these textual conventions assumes the following: - The SNMP entity supports performance history data collection based on a configurable interval. - The SNMP entity is capable of maintaining a history of N report intervals. A MIB module using these textual conventions defines the value of N, which may be configurable. - The SNMP entity may optionally support aggregation of performance data maintained by historic report intervals. - A MIB module using these textual conventions may define separate tables for the current interval, historic intervals, and the aggregation of historic performance data. - A MIB module using these textual conventions must define the following objects: xxxReportInterval OBJECT-TYPE SYNTAX Unsigned32 (0..4294967295) UNITS 'xxx-units' MAX-ACCESS read-only STATUS current DESCRIPTION 'This object indicates the duration of a report interval.' ::= { xxx } xxxReportMaxIntervals OBJECT-TYPE SYNTAX Unsigned32 (0..4294967295) UNITS 'report intervals' MAX-ACCESS read-only STATUS current DESCRIPTION 'This object indicates the maximum number of report intervals.' ::= { xxx } xxxReportElapsedTime OBJECT-TYPE SYNTAX Gauge32 UNITS 'xxx-units' MAX-ACCESS read-only STATUS current DESCRIPTION 'This object indicates the time that has elapsed since the beginning of the current report interval.' ::= { xxx } xxxReportIntervals OBJECT-TYPE SYNTAX Gauge32 UNITS 'report intervals' MAX-ACCESS read-only STATUS current DESCRIPTION 'This object indicates the number of report intervals for which data has been collected. The value of this column starts at 0 and increments at the end of each report interval until the number of report intervals is equal to the corresponding value of xxxReportMaxIntervals.' ::= { xxx } xxxReportInvalidIntervals OBJECT-TYPE SYNTAX Gauge32 UNITS 'report intervals' MAX-ACCESS read-only STATUS current DESCRIPTION 'This object indicates the number of report intervals, in the range of 0 to the value of the corresponding instance of xxxReportValidIntervals, for which no data is available. The value of this column will typically be 0, except in certain circumstances when some intervals are not available. ::= { xxx } Observe that if the MIB module defines tables that maintain performance data for multiple instances of a measured entity (e.g., an interface), then the definition of these objects need to allow for the maintenance of these objects per instance of the measured entity. A MIB module may choose to provide the write-access to xxxReportInterval and xxxReportMaxIntervals. In this case, the MIB module must consider the following: - The MIB module may want to refine the data type to something more concise. Alternatively, an implementation may specify variations in an agent capabilities. - If the definition of either of these objects specifies '0' as an acceptable value, then the descriptive text should describe the semantics of this value. - The descriptive text of xxxReportInterval must explain, 'When this value changes, the SNMP entity should discard any previously collected report interval data.' - The descriptive text of xxxReportMaxIntervals must explain, 'When this value changes to a value less than its current value, the SNMP entity should discard older report intervals to comply with the new value.'")
class ReportCurrentCount(TextualConvention, Gauge32):
    description = "An integer-value representing a counter associated with measurement in the current report interval. The length of the report interval is configured previous to the measurement. The value of this counter starts from '0' and increases when associated events occur, until the end of the report interval. At that time, the system optionally stores the value of the counter in the first history interval, after which the value of the counter is set to '0'."
    status = 'current'
    displayHint = 'd'

class ReportIntervalCount(TextualConvention, Gauge32):
    description = 'An integer-value representing the value of a counter associated with the measurement taken during a previous report interval. An implementation supporting a history of N report intervals with IntervalCount(1) and IntervalCount(N) representing the most and least recent intervals, respectively, the following applies at the end of each report interval: - Discards the value of IntervalCount(N). - The value of IntervalCount(i) becomes that of IntervalCount(i-1) for N >= i > 1. - The value of IntervalCount(1) becomes that of CurrentCount.'
    status = 'current'
    displayHint = 'd'

mibBuilder.exportSymbols("CISCO-REPORT-INTERVAL-TC-MIB", PYSNMP_MODULE_ID=ciscoReportIntervalTcMIB, ReportCurrentCount=ReportCurrentCount, ReportIntervalCount=ReportIntervalCount, ciscoReportIntervalTcMIB=ciscoReportIntervalTcMIB)
