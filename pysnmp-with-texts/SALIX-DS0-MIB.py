#
# PySNMP MIB module SALIX-DS0-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-DS0-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
dsx0ConfigEntry, = mibBuilder.importSymbols("DS0-MIB", "dsx0ConfigEntry")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
platform1, = mibBuilder.importSymbols("SALIX-MIB", "platform1")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, ObjectIdentity, iso, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Bits, TimeTicks, Integer32, NotificationType, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "iso", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Bits", "TimeTicks", "Integer32", "NotificationType", "Counter64", "Counter32")
TextualConvention, DisplayString, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "RowStatus")
salixDsx0MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4))
if mibBuilder.loadTexts: salixDsx0MIB.setLastUpdated('9810130000Z')
if mibBuilder.loadTexts: salixDsx0MIB.setOrganization('SALIX Technologies')
if mibBuilder.loadTexts: salixDsx0MIB.setContactInfo('904 Wind River Lane Suite 101 Gaithersburg, MD 20878 (301)-417-0017')
if mibBuilder.loadTexts: salixDsx0MIB.setDescription('The MIB describing SALIX specific DS0 objects')
salixDsx0MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1))
salixDsx0MIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 2))
salixDsx0MIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 3))
salixDsx0MIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 2, 0))
salixDsx0CrossConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1), )
if mibBuilder.loadTexts: salixDsx0CrossConnectTable.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectTable.setDescription('The table that describes the active DS0 Cross Connections on the system. There should be one entry for each active Cross Connect on the system.')
salixDsx0CrossConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1), ).setIndexNames((0, "SALIX-DS0-MIB", "salixDsx0CrossConnectHighInterface"), (0, "SALIX-DS0-MIB", "salixDsx0CrossConnectLowInterface"))
if mibBuilder.loadTexts: salixDsx0CrossConnectEntry.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectEntry.setDescription('An entry in the ITX DS0 cross connect table. This entry describes the status of the DS0 cross connect, and also provides information describing the cross connect')
salixDsx0CrossConnectHighInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: salixDsx0CrossConnectHighInterface.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectHighInterface.setDescription('The high ifIndex for identifying the cross connect. Identifies the DS0 Channel involved in the cross connect. The salixDsx0CrossConnectHighInterface value should be higher than the salixDsx0CrossConnectLowInterface value')
salixDsx0CrossConnectLowInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: salixDsx0CrossConnectLowInterface.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectLowInterface.setDescription('The low ifIndex for identifying the cross connect. Identifies the DS0 Channel involved in the cross connect. The salixDsx0CrossConnectLowInterface value should be lower than the salixDsx0CrossConnectHighInterface value')
salixDsx0CrossConnectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("high2low", 1), ("low2high", 2), ("bidirectional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0CrossConnectDirection.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectDirection.setDescription('This attribute describes the direction of traffic flow the DS0 cross connect. high2low(1) - Traffic flows from the high interface to the low interface in the cross connect low2high(2) - Traffic flows from the low interface to the high interface in the cross connect bidirectional(3) - Traffic flows both directions through the cross connect')
salixDsx0CrossConnectOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0CrossConnectOperStatus.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectOperStatus.setDescription('This attribute indicates the operational state of the DS0 cross connection. up(1) - The cross connect is up and active down(2) - The cross connect is down and no traffic is passing unknown(3) - The status of the cross connect is not know')
salixDsx0CrossConnectStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0CrossConnectStartTime.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectStartTime.setDescription('The time at which the cross connect was created')
salixDsx0CrossConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 1, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: salixDsx0CrossConnectRowStatus.setStatus('current')
if mibBuilder.loadTexts: salixDsx0CrossConnectRowStatus.setDescription('The status of this entry in the salixDsx0CrossConnectTable. This object is used to delete a salixDsx0CrossConnectTable entry. To destroy a cross connect, set this value to destory(6) Row status values: active(1) - set by the agent after this entry is created notInService(2) - not applicable notReady(3) - not applicable createAndGo(4) - not applicable createAndWait(5)- not applicable destroy(6) - set by the management entity to destroy entry')
salixDsx0ConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 2), )
if mibBuilder.loadTexts: salixDsx0ConfigTable.setStatus('current')
if mibBuilder.loadTexts: salixDsx0ConfigTable.setDescription('The DS0 Configuration table. Augments the DS0 Configuration table from the DS0-MIB. There is an entry in this table for each DS0 interface.')
salixDsx0ConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 2, 1), )
dsx0ConfigEntry.registerAugmentions(("SALIX-DS0-MIB", "salixDsx0ConfigEntry"))
salixDsx0ConfigEntry.setIndexNames(*dsx0ConfigEntry.getIndexNames())
if mibBuilder.loadTexts: salixDsx0ConfigEntry.setStatus('current')
if mibBuilder.loadTexts: salixDsx0ConfigEntry.setDescription('An augmented entry in the DS0 Configuration table. There is an entry in this table for each DS0 interface.')
salixDsx0Status = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("notused", 1), ("crossconnect", 2), ("rtpconnect", 3), ("loopback", 4), ("test", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixDsx0Status.setStatus('current')
if mibBuilder.loadTexts: salixDsx0Status.setDescription('Indicated the status of the given DS0 notused(1) - The DS0 is not currently being used crossconnect(2) - The DS0 is currently cross connected rtpconnect(3) - The DS0 is currently connect to an RTP session loopback(4) - The DS0 is currently being looped back test(5) - The DS0 is currently being continuity tested unknown(6) - The status of the DS0 is not known')
salixDsx0Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 3, 1))
salixDsx0Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 3, 2))
salixDsx0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 3, 1, 1)).setObjects(("SALIX-DS0-MIB", "salixDsx0CrossConnectDirection"), ("SALIX-DS0-MIB", "salixDsx0CrossConnectOperStatus"), ("SALIX-DS0-MIB", "salixDsx0CrossConnectStartTime"), ("SALIX-DS0-MIB", "salixDsx0CrossConnectRowStatus"), ("SALIX-DS0-MIB", "salixDsx0Status"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDsx0Group = salixDsx0Group.setStatus('current')
if mibBuilder.loadTexts: salixDsx0Group.setDescription('Additional salix specific objects for connections')
salixDsx0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 5, 1, 4, 3, 2, 1)).setObjects(("SALIX-DS0-MIB", "salixDsx0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixDsx0Compliance = salixDsx0Compliance.setStatus('current')
if mibBuilder.loadTexts: salixDsx0Compliance.setDescription('The basic implementation requirements for the SALIX-DS0-MIB.')
mibBuilder.exportSymbols("SALIX-DS0-MIB", salixDsx0ConfigEntry=salixDsx0ConfigEntry, salixDsx0CrossConnectDirection=salixDsx0CrossConnectDirection, salixDsx0MIBCompliance=salixDsx0MIBCompliance, salixDsx0MIBTraps=salixDsx0MIBTraps, salixDsx0MIBObjects=salixDsx0MIBObjects, salixDsx0ConfigTable=salixDsx0ConfigTable, salixDsx0CrossConnectLowInterface=salixDsx0CrossConnectLowInterface, salixDsx0CrossConnectStartTime=salixDsx0CrossConnectStartTime, salixDsx0Group=salixDsx0Group, salixDsx0MIB=salixDsx0MIB, salixDsx0Compliances=salixDsx0Compliances, PYSNMP_MODULE_ID=salixDsx0MIB, salixDsx0CrossConnectOperStatus=salixDsx0CrossConnectOperStatus, salixDsx0CrossConnectEntry=salixDsx0CrossConnectEntry, salixDsx0Compliance=salixDsx0Compliance, salixDsx0CrossConnectTable=salixDsx0CrossConnectTable, salixDsx0CrossConnectRowStatus=salixDsx0CrossConnectRowStatus, salixDsx0Status=salixDsx0Status, salixDsx0CrossConnectHighInterface=salixDsx0CrossConnectHighInterface, salixDsx0Groups=salixDsx0Groups, salixDsx0MIBTrapPrefix=salixDsx0MIBTrapPrefix)
