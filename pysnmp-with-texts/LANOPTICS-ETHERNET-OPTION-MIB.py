#
# PySNMP MIB module LANOPTICS-ETHERNET-OPTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANOPTICS-ETHERNET-OPTION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:05:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, enterprises, ModuleIdentity, IpAddress, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Counter32, NotificationType, TimeTicks, MibIdentifier, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "enterprises", "ModuleIdentity", "IpAddress", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks", "MibIdentifier", "Gauge32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
lanOptics = MibIdentifier((1, 3, 6, 1, 4, 1, 224))
lanOpticsDot3Monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 224, 3))
etAlertsLevel = MibScalar((1, 3, 6, 1, 4, 1, 224, 3, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etAlertsLevel.setStatus('mandatory')
if mibBuilder.loadTexts: etAlertsLevel.setDescription("An array of 6 WORDs (16 bits) values that determines the alerts' thresholds for this agent.")
etAlertsBuffer = MibScalar((1, 3, 6, 1, 4, 1, 224, 3, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etAlertsBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: etAlertsBuffer.setDescription('A buffer holding a list of the last Ethernet manager specific alerts (traps), in an internal representation.')
etFullStatisticsBuffer = MibScalar((1, 3, 6, 1, 4, 1, 224, 3, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etFullStatisticsBuffer.setStatus('mandatory')
if mibBuilder.loadTexts: etFullStatisticsBuffer.setDescription('A buffer holding a full statistics information of a certain Ethernet port, in internal representation.')
etResetBuffers = MibScalar((1, 3, 6, 1, 4, 1, 224, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etResetBuffers.setStatus('mandatory')
if mibBuilder.loadTexts: etResetBuffers.setDescription('Setting this value to 1 will flush the alerts and full statistics buffers of this agent')
etSlotsTable = MibTable((1, 3, 6, 1, 4, 1, 224, 3, 5), )
if mibBuilder.loadTexts: etSlotsTable.setStatus('mandatory')
if mibBuilder.loadTexts: etSlotsTable.setDescription('Ethernet information per slot')
pysmiFakeCol1000 = MibTableColumn((1, 3, 6, 1, 4, 1, 224, 3, 5, 1) + (1000, ), Integer32())
etSlotsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 224, 3, 5, 1), ).setIndexNames((0, "LANOPTICS-ETHERNET-OPTION-MIB", "pysmiFakeCol1000"))
if mibBuilder.loadTexts: etSlotsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: etSlotsEntry.setDescription('A slot entry containing low level information of an Ethernet the card in the slot.')
etSlotPollStruct = MibTableColumn((1, 3, 6, 1, 4, 1, 224, 3, 5, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etSlotPollStruct.setStatus('mandatory')
if mibBuilder.loadTexts: etSlotPollStruct.setDescription('A structure holding in internal representation, the detailed status of the Ethernet module in this slot')
mibBuilder.exportSymbols("LANOPTICS-ETHERNET-OPTION-MIB", lanOptics=lanOptics, etAlertsLevel=etAlertsLevel, etResetBuffers=etResetBuffers, lanOpticsDot3Monitor=lanOpticsDot3Monitor, etSlotsEntry=etSlotsEntry, etAlertsBuffer=etAlertsBuffer, etSlotsTable=etSlotsTable, pysmiFakeCol1000=pysmiFakeCol1000, etFullStatisticsBuffer=etFullStatisticsBuffer, etSlotPollStruct=etSlotPollStruct)
