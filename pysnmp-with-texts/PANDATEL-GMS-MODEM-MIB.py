#
# PySNMP MIB module PANDATEL-GMS-MODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PANDATEL-GMS-MODEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:37:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
mdmSpecifics, device_id = mibBuilder.importSymbols("PANDATEL-MODEM-MIB", "mdmSpecifics", "device-id")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, enterprises, TimeTicks, ModuleIdentity, MibIdentifier, iso, Bits, IpAddress, Integer32, Unsigned32, Counter64, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "enterprises", "TimeTicks", "ModuleIdentity", "MibIdentifier", "iso", "Bits", "IpAddress", "Integer32", "Unsigned32", "Counter64", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gms_modem = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 10000, 2, 204)).setLabel("gms-modem")
gms = MibIdentifier((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204))
gmsModemTable = MibTable((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1), )
if mibBuilder.loadTexts: gmsModemTable.setStatus('mandatory')
if mibBuilder.loadTexts: gmsModemTable.setDescription('The table of all GM-S modems in this housing.')
gmsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1), ).setIndexNames((0, "PANDATEL-GMS-MODEM-MIB", "mdmRack"), (0, "PANDATEL-GMS-MODEM-MIB", "mdmModem"), (0, "PANDATEL-GMS-MODEM-MIB", "mdmPosition"))
if mibBuilder.loadTexts: gmsTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: gmsTableEntry.setDescription('The index of the table.')
mdmRack = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmRack.setStatus('mandatory')
if mibBuilder.loadTexts: mdmRack.setDescription('The index of the rack where the modem is installed.')
mdmModem = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModem.setStatus('mandatory')
if mibBuilder.loadTexts: mdmModem.setDescription('This variable displays the slot number where the corresponding modem is installed in the rack.')
mdmPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmPosition.setStatus('mandatory')
if mibBuilder.loadTexts: mdmPosition.setDescription("This variable displays the location of the corresponding modem: 'local' or 'remote'. The modem which is plugged into a managed rack is 'local', the counterpart is 'remote'.")
mdmModemName = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModemName.setStatus('mandatory')
if mibBuilder.loadTexts: mdmModemName.setDescription('A verbal name of this modem.')
mdmDataEquipmentEmulation = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("other", 1), ("dte", 2), ("dce", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmDataEquipmentEmulation.setStatus('mandatory')
if mibBuilder.loadTexts: mdmDataEquipmentEmulation.setDescription('Interface mode of the unit: DCE.')
mdmModemProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("other", 1), ("e1", 2), ("t1", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmModemProperty.setStatus('mandatory')
if mibBuilder.loadTexts: mdmModemProperty.setDescription('Application type of HDSL link: E1 or T1.')
mdmHDSLUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ntu", 2), ("ltu", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mdmHDSLUnit.setStatus('mandatory')
if mibBuilder.loadTexts: mdmHDSLUnit.setDescription('HDSL unit type: Line Termination Unit (LTU) or Network Termination Unit (LTU)')
mdmClockSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("dual", 2), ("single", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmClockSystem.setStatus('mandatory')
if mibBuilder.loadTexts: mdmClockSystem.setDescription("The clock system at the interface: 'single' or 'dual'.")
mdmClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("internal", 2), ("remote", 3), ("external", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmClockSource.setStatus('mandatory')
if mibBuilder.loadTexts: mdmClockSource.setDescription("The clock source at the interface: 'internal', 'remote' or'external'.")
mdmDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 760, 1, 1, 2, 1, 10, 204, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("other", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mdmDataRate.setStatus('mandatory')
if mibBuilder.loadTexts: mdmDataRate.setDescription('The data rate at the interface in bits per seconds. The data rate at the remote counterpart changes simultaneously.')
mibBuilder.exportSymbols("PANDATEL-GMS-MODEM-MIB", mdmModemProperty=mdmModemProperty, mdmClockSource=mdmClockSource, mdmDataEquipmentEmulation=mdmDataEquipmentEmulation, mdmModem=mdmModem, mdmClockSystem=mdmClockSystem, mdmPosition=mdmPosition, mdmModemName=mdmModemName, mdmDataRate=mdmDataRate, gms_modem=gms_modem, gmsTableEntry=gmsTableEntry, gmsModemTable=gmsModemTable, gms=gms, mdmRack=mdmRack, mdmHDSLUnit=mdmHDSLUnit)
