#
# PySNMP MIB module CISCO-UNIFIED-COMPUTING-GRAPHICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNIFIED-COMPUTING-GRAPHICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:16:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoAlarmSeverity, TimeIntervalSec, Unsigned64, CiscoInetAddressMask, CiscoNetworkAddress = mibBuilder.importSymbols("CISCO-TC", "CiscoAlarmSeverity", "TimeIntervalSec", "Unsigned64", "CiscoInetAddressMask", "CiscoNetworkAddress")
ciscoUnifiedComputingMIBObjects, CucsManagedObjectDn, CucsManagedObjectId = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-MIB", "ciscoUnifiedComputingMIBObjects", "CucsManagedObjectDn", "CucsManagedObjectId")
CucsEquipmentPowerState, CucsEquipmentOperability, CucsEquipmentPresence, CucsFsmLifecycle, CucsEquipmentSensorThresholdStatus = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-TC-MIB", "CucsEquipmentPowerState", "CucsEquipmentOperability", "CucsEquipmentPresence", "CucsFsmLifecycle", "CucsEquipmentSensorThresholdStatus")
InetAddressIPv4, InetAddressIPv6 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressIPv6")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, ModuleIdentity, NotificationType, TimeTicks, ObjectIdentity, Counter64, iso, MibIdentifier, Bits, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "ModuleIdentity", "NotificationType", "TimeTicks", "ObjectIdentity", "Counter64", "iso", "MibIdentifier", "Bits", "IpAddress", "Gauge32")
DateAndTime, MacAddress, DisplayString, TimeInterval, RowPointer, TimeStamp, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "MacAddress", "DisplayString", "TimeInterval", "RowPointer", "TimeStamp", "TruthValue", "TextualConvention")
cucsGraphicsObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73))
if mibBuilder.loadTexts: cucsGraphicsObjects.setLastUpdated('201601180000Z')
if mibBuilder.loadTexts: cucsGraphicsObjects.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: cucsGraphicsObjects.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 -NETS E-mail: cs-san@cisco.com, cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: cucsGraphicsObjects.setDescription('MIB representation of the Cisco Unified Computing System GRAPHICS management information model package')
cucsGraphicsCardTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1), )
if mibBuilder.loadTexts: cucsGraphicsCardTable.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardTable.setDescription('Cisco UCS graphics:Card managed object table')
cucsGraphicsCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-GRAPHICS-MIB", "cucsGraphicsCardInstanceId"))
if mibBuilder.loadTexts: cucsGraphicsCardEntry.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardEntry.setDescription('Entry for the cucsGraphicsCardTable table.')
cucsGraphicsCardInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsGraphicsCardInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardInstanceId.setDescription('Instance identifier of the managed object.')
cucsGraphicsCardDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardDn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardDn.setDescription('Cisco UCS graphics:Card:dn managed object property')
cucsGraphicsCardRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardRn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardRn.setDescription('Cisco UCS graphics:Card:rn managed object property')
cucsGraphicsCardDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardDeviceId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardDeviceId.setDescription('Cisco UCS graphics:Card:deviceId managed object property')
cucsGraphicsCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardId.setDescription('Cisco UCS graphics:Card:id managed object property')
cucsGraphicsCardIsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardIsSupported.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardIsSupported.setDescription('Cisco UCS graphics:Card:isSupported managed object property')
cucsGraphicsCardLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 7), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardLc.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardLc.setDescription('Cisco UCS graphics:Card:lc managed object property')
cucsGraphicsCardModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardModel.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardModel.setDescription('Cisco UCS graphics:Card:model managed object property')
cucsGraphicsCardOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardOperQualifierReason.setDescription('Cisco UCS graphics:Card:operQualifierReason managed object property')
cucsGraphicsCardOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardOperState.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardOperState.setDescription('Cisco UCS graphics:Card:operState managed object property')
cucsGraphicsCardOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 11), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardOperability.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardOperability.setDescription('Cisco UCS graphics:Card:operability managed object property')
cucsGraphicsCardPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPciAddr.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPciAddr.setDescription('Cisco UCS graphics:Card:pciAddr managed object property')
cucsGraphicsCardPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPciSlot.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPciSlot.setDescription('Cisco UCS graphics:Card:pciSlot managed object property')
cucsGraphicsCardPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 14), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPerf.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPerf.setDescription('Cisco UCS graphics:Card:perf managed object property')
cucsGraphicsCardPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 15), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPower.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPower.setDescription('Cisco UCS graphics:Card:power managed object property')
cucsGraphicsCardPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 16), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPresence.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPresence.setDescription('Cisco UCS graphics:Card:presence managed object property')
cucsGraphicsCardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardRevision.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardRevision.setDescription('Cisco UCS graphics:Card:revision managed object property')
cucsGraphicsCardSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardSerial.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardSerial.setDescription('Cisco UCS graphics:Card:serial managed object property')
cucsGraphicsCardSubDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardSubDeviceId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardSubDeviceId.setDescription('Cisco UCS graphics:Card:subDeviceId managed object property')
cucsGraphicsCardSubVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardSubVendorId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardSubVendorId.setDescription('Cisco UCS graphics:Card:subVendorId managed object property')
cucsGraphicsCardThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 21), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardThermal.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardThermal.setDescription('Cisco UCS graphics:Card:thermal managed object property')
cucsGraphicsCardVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 22), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardVendor.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardVendor.setDescription('Cisco UCS graphics:Card:vendor managed object property')
cucsGraphicsCardVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardVendorId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardVendorId.setDescription('Cisco UCS graphics:Card:vendorId managed object property')
cucsGraphicsCardVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 24), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardVoltage.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardVoltage.setDescription('Cisco UCS graphics:Card:voltage managed object property')
cucsGraphicsCardLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 25), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardLocationDn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardLocationDn.setDescription('Cisco UCS graphics:Card:locationDn managed object property')
cucsGraphicsCardStepping = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 26), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardStepping.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardStepping.setDescription('Cisco UCS graphics:Card:stepping managed object property')
cucsGraphicsCardExpanderSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 27), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardExpanderSlot.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardExpanderSlot.setDescription('Cisco UCS graphics:Card:expanderSlot managed object property')
cucsGraphicsCardFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 28), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardFirmwareVersion.setDescription('Cisco UCS graphics:Card:firmwareVersion managed object property')
cucsGraphicsCardPciAddrList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 1, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsCardPciAddrList.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsCardPciAddrList.setDescription('Cisco UCS graphics:Card:pciAddrList managed object property')
cucsGraphicsControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2), )
if mibBuilder.loadTexts: cucsGraphicsControllerTable.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerTable.setDescription('Cisco UCS graphics:Controller managed object table')
cucsGraphicsControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-GRAPHICS-MIB", "cucsGraphicsControllerInstanceId"))
if mibBuilder.loadTexts: cucsGraphicsControllerEntry.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerEntry.setDescription('Entry for the cucsGraphicsControllerTable table.')
cucsGraphicsControllerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsGraphicsControllerInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerInstanceId.setDescription('Instance identifier of the managed object.')
cucsGraphicsControllerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerDn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerDn.setDescription('Cisco UCS graphics:Controller:dn managed object property')
cucsGraphicsControllerRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerRn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerRn.setDescription('Cisco UCS graphics:Controller:rn managed object property')
cucsGraphicsControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerId.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerId.setDescription('Cisco UCS graphics:Controller:id managed object property')
cucsGraphicsControllerModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerModel.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerModel.setDescription('Cisco UCS graphics:Controller:model managed object property')
cucsGraphicsControllerOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerOperQualifierReason.setDescription('Cisco UCS graphics:Controller:operQualifierReason managed object property')
cucsGraphicsControllerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 7), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerOperState.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerOperState.setDescription('Cisco UCS graphics:Controller:operState managed object property')
cucsGraphicsControllerOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 8), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerOperability.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerOperability.setDescription('Cisco UCS graphics:Controller:operability managed object property')
cucsGraphicsControllerPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerPciAddr.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerPciAddr.setDescription('Cisco UCS graphics:Controller:pciAddr managed object property')
cucsGraphicsControllerPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerPciSlot.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerPciSlot.setDescription('Cisco UCS graphics:Controller:pciSlot managed object property')
cucsGraphicsControllerPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 11), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerPerf.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerPerf.setDescription('Cisco UCS graphics:Controller:perf managed object property')
cucsGraphicsControllerPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 12), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerPower.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerPower.setDescription('Cisco UCS graphics:Controller:power managed object property')
cucsGraphicsControllerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 13), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerPresence.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerPresence.setDescription('Cisco UCS graphics:Controller:presence managed object property')
cucsGraphicsControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerRevision.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerRevision.setDescription('Cisco UCS graphics:Controller:revision managed object property')
cucsGraphicsControllerSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerSerial.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerSerial.setDescription('Cisco UCS graphics:Controller:serial managed object property')
cucsGraphicsControllerThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 16), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerThermal.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerThermal.setDescription('Cisco UCS graphics:Controller:thermal managed object property')
cucsGraphicsControllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerVendor.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerVendor.setDescription('Cisco UCS graphics:Controller:vendor managed object property')
cucsGraphicsControllerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 18), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerVoltage.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerVoltage.setDescription('Cisco UCS graphics:Controller:voltage managed object property')
cucsGraphicsControllerLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 73, 2, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsGraphicsControllerLocationDn.setStatus('current')
if mibBuilder.loadTexts: cucsGraphicsControllerLocationDn.setDescription('Cisco UCS graphics:Controller:locationDn managed object property')
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-GRAPHICS-MIB", cucsGraphicsControllerPciAddr=cucsGraphicsControllerPciAddr, cucsGraphicsControllerPciSlot=cucsGraphicsControllerPciSlot, cucsGraphicsCardPciAddr=cucsGraphicsCardPciAddr, cucsGraphicsControllerSerial=cucsGraphicsControllerSerial, cucsGraphicsCardPresence=cucsGraphicsCardPresence, cucsGraphicsCardDeviceId=cucsGraphicsCardDeviceId, cucsGraphicsControllerOperQualifierReason=cucsGraphicsControllerOperQualifierReason, cucsGraphicsControllerPower=cucsGraphicsControllerPower, cucsGraphicsCardSubVendorId=cucsGraphicsCardSubVendorId, cucsGraphicsCardStepping=cucsGraphicsCardStepping, cucsGraphicsControllerOperability=cucsGraphicsControllerOperability, cucsGraphicsCardFirmwareVersion=cucsGraphicsCardFirmwareVersion, cucsGraphicsControllerInstanceId=cucsGraphicsControllerInstanceId, cucsGraphicsCardRevision=cucsGraphicsCardRevision, cucsGraphicsCardEntry=cucsGraphicsCardEntry, PYSNMP_MODULE_ID=cucsGraphicsObjects, cucsGraphicsCardLc=cucsGraphicsCardLc, cucsGraphicsControllerId=cucsGraphicsControllerId, cucsGraphicsCardSerial=cucsGraphicsCardSerial, cucsGraphicsCardPciAddrList=cucsGraphicsCardPciAddrList, cucsGraphicsCardOperState=cucsGraphicsCardOperState, cucsGraphicsControllerRevision=cucsGraphicsControllerRevision, cucsGraphicsCardExpanderSlot=cucsGraphicsCardExpanderSlot, cucsGraphicsControllerVendor=cucsGraphicsControllerVendor, cucsGraphicsCardModel=cucsGraphicsCardModel, cucsGraphicsCardOperQualifierReason=cucsGraphicsCardOperQualifierReason, cucsGraphicsCardOperability=cucsGraphicsCardOperability, cucsGraphicsCardRn=cucsGraphicsCardRn, cucsGraphicsControllerModel=cucsGraphicsControllerModel, cucsGraphicsControllerVoltage=cucsGraphicsControllerVoltage, cucsGraphicsControllerThermal=cucsGraphicsControllerThermal, cucsGraphicsCardSubDeviceId=cucsGraphicsCardSubDeviceId, cucsGraphicsControllerLocationDn=cucsGraphicsControllerLocationDn, cucsGraphicsCardPerf=cucsGraphicsCardPerf, cucsGraphicsCardId=cucsGraphicsCardId, cucsGraphicsCardVendor=cucsGraphicsCardVendor, cucsGraphicsCardPciSlot=cucsGraphicsCardPciSlot, cucsGraphicsCardThermal=cucsGraphicsCardThermal, cucsGraphicsCardVoltage=cucsGraphicsCardVoltage, cucsGraphicsControllerRn=cucsGraphicsControllerRn, cucsGraphicsControllerEntry=cucsGraphicsControllerEntry, cucsGraphicsCardPower=cucsGraphicsCardPower, cucsGraphicsControllerOperState=cucsGraphicsControllerOperState, cucsGraphicsCardIsSupported=cucsGraphicsCardIsSupported, cucsGraphicsControllerTable=cucsGraphicsControllerTable, cucsGraphicsControllerPerf=cucsGraphicsControllerPerf, cucsGraphicsControllerPresence=cucsGraphicsControllerPresence, cucsGraphicsCardInstanceId=cucsGraphicsCardInstanceId, cucsGraphicsControllerDn=cucsGraphicsControllerDn, cucsGraphicsCardLocationDn=cucsGraphicsCardLocationDn, cucsGraphicsCardDn=cucsGraphicsCardDn, cucsGraphicsCardVendorId=cucsGraphicsCardVendorId, cucsGraphicsObjects=cucsGraphicsObjects, cucsGraphicsCardTable=cucsGraphicsCardTable)
