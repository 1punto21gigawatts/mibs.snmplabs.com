#
# PySNMP MIB module CISCOSB-1-BONJOUR-SERVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOSB-1-BONJOUR-SERVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:21:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
switch001, = mibBuilder.importSymbols("CISCOSB-MIB", "switch001")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, ObjectIdentity, MibIdentifier, ModuleIdentity, Integer32, Counter64, IpAddress, TimeTicks, Bits, Unsigned32, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Integer32", "Counter64", "IpAddress", "TimeTicks", "Bits", "Unsigned32", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
rlCustom1BonjourService = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143))
rlCustom1BonjourService.setRevisions(('2009-03-24 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlCustom1BonjourService.setRevisionsDescriptions(('Initial revision',))
if mibBuilder.loadTexts: rlCustom1BonjourService.setLastUpdated('200903240000Z')
if mibBuilder.loadTexts: rlCustom1BonjourService.setOrganization('Cisco Small Business')
if mibBuilder.loadTexts: rlCustom1BonjourService.setContactInfo('Postal: 170 West Tasman Drive San Jose , CA 95134-1706 USA Website: Cisco Small Business Home http://www.cisco.com/smb>;, Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>')
if mibBuilder.loadTexts: rlCustom1BonjourService.setDescription('Added: rlCustom1BonjourServiceTable - the private MIB module definition for Bonjour services.')
rlCustom1BonjourServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1), )
if mibBuilder.loadTexts: rlCustom1BonjourServiceTable.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceTable.setDescription('This table specifies Bonjour services table information')
rlCustom1BonjourServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1), ).setIndexNames((1, "CISCOSB-1-BONJOUR-SERVICE-MIB", "rlCustom1BonjourServiceTypeName"))
if mibBuilder.loadTexts: rlCustom1BonjourServiceEntry.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceEntry.setDescription('Each entry in this table describes one Service of Bonjour Element. The information includes: Service name, service port number, service enable, service can be changed the row status. The index is string name of the service and represent by rlBonjourServiceTypeName')
rlCustom1BonjourServiceTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 14)))
if mibBuilder.loadTexts: rlCustom1BonjourServiceTypeName.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceTypeName.setDescription('The Bonjour Service Type name.')
rlCustom1BonjourServiceTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCustom1BonjourServiceTransport.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceTransport.setDescription('A value indicating the service transport.')
rlCustom1BonjourServicePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCustom1BonjourServicePort.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServicePort.setDescription('A value indicating protocol port number.')
rlCustom1BonjourServiceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCustom1BonjourServiceEnable.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceEnable.setDescription('Bonjour Service type enabled {true} or Disabled {false}.')
rlCustom1BonjourServiceOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 5), Bits().clone(namedValues=NamedValues(("serviceCanBeDeleted", 0), ("serviceCanBeDisabled", 1), ("portCanBeConfigured", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCustom1BonjourServiceOptions.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceOptions.setDescription('Bonjour Service type can be change Yes {true} or No {false}.')
rlCustom1BonjourServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 6, 1, 101, 143, 1, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlCustom1BonjourServiceStatus.setStatus('current')
if mibBuilder.loadTexts: rlCustom1BonjourServiceStatus.setDescription('The status of a table entry. It is used to delete/Add an entry from this table.')
mibBuilder.exportSymbols("CISCOSB-1-BONJOUR-SERVICE-MIB", rlCustom1BonjourServicePort=rlCustom1BonjourServicePort, rlCustom1BonjourServiceTypeName=rlCustom1BonjourServiceTypeName, rlCustom1BonjourService=rlCustom1BonjourService, rlCustom1BonjourServiceStatus=rlCustom1BonjourServiceStatus, rlCustom1BonjourServiceEnable=rlCustom1BonjourServiceEnable, rlCustom1BonjourServiceTable=rlCustom1BonjourServiceTable, rlCustom1BonjourServiceEntry=rlCustom1BonjourServiceEntry, rlCustom1BonjourServiceTransport=rlCustom1BonjourServiceTransport, rlCustom1BonjourServiceOptions=rlCustom1BonjourServiceOptions, PYSNMP_MODULE_ID=rlCustom1BonjourService)
