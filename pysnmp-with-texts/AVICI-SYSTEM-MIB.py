#
# PySNMP MIB module AVICI-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVICI-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:32:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
aviciMibs, = mibBuilder.importSymbols("AVICI-SMI", "aviciMibs")
AviciSystemType, AviciBayType, AviciInventoryType, AviciSlotType, AviciTrapDescrType, AviciPlatformIndexType = mibBuilder.importSymbols("AVICI-TC", "AviciSystemType", "AviciBayType", "AviciInventoryType", "AviciSlotType", "AviciTrapDescrType", "AviciPlatformIndexType")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, ObjectIdentity, NotificationType, Counter32, iso, TimeTicks, Bits, IpAddress, Gauge32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "ObjectIdentity", "NotificationType", "Counter32", "iso", "TimeTicks", "Bits", "IpAddress", "Gauge32", "ModuleIdentity", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aviciSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2474, 1, 2))
if mibBuilder.loadTexts: aviciSystemMIB.setLastUpdated('990330095500Z')
if mibBuilder.loadTexts: aviciSystemMIB.setOrganization('Avici Systems Inc.')
if mibBuilder.loadTexts: aviciSystemMIB.setContactInfo(' Avici Systems, Inc. 101 Billerica Avenue North Billerica, MA 01862-1256 (978) 964-2000 (978) 964-2100 (fax) snmp@avici.com')
if mibBuilder.loadTexts: aviciSystemMIB.setDescription('The MIB module for the Avici Proprietary system MIB.')
aviciSystemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1))
aviciSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 2, 2))
aviciSysRouterId = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 2, 2, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysRouterId.setStatus('current')
if mibBuilder.loadTexts: aviciSysRouterId.setDescription('The router id of the entire system.')
aviciSysType = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 2, 2, 2), AviciSystemType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysType.setStatus('current')
if mibBuilder.loadTexts: aviciSysType.setDescription('The type of the Avici System.')
aviciSysInventoryTableChange = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 2, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryTableChange.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryTableChange.setDescription('The time of the last addition or deletion of a row in hundreths of a second since the last time the system was rebooted.')
aviciSysTrapDescr = MibScalar((1, 3, 6, 1, 4, 1, 2474, 1, 2, 2, 4), AviciTrapDescrType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: aviciSysTrapDescr.setStatus('current')
if mibBuilder.loadTexts: aviciSysTrapDescr.setDescription('A description of the event that has occurred.')
aviciSysInventoryTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1), )
if mibBuilder.loadTexts: aviciSysInventoryTable.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryTable.setDescription('A list of components in the system. This includes modules, bays and control servers.')
aviciSysInventoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1), ).setIndexNames((0, "AVICI-SYSTEM-MIB", "aviciSysInventoryId"))
if mibBuilder.loadTexts: aviciSysInventoryEntry.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryEntry.setDescription('An entry in the Avici table.')
aviciSysInventoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 1), AviciPlatformIndexType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryId.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryId.setDescription('The component identification number used to uniquely identify any entity in the system.')
aviciSysInventoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 2), AviciInventoryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryType.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryType.setDescription('The type of the component.')
aviciSysInventoryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryOperStatus.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryOperStatus.setDescription('The operating state of the component.')
aviciSysInventoryBay = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 4), AviciBayType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryBay.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryBay.setDescription('The bay that this component can be found in. If the component is not in a bay, then the value of this object is 0.')
aviciSysInventorySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 5), AviciSlotType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventorySlot.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventorySlot.setDescription('The slot that this component can be found in. If the component is not in a slot, then the value of this object is 0.')
aviciSysInventoryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysInventoryDescr.setStatus('current')
if mibBuilder.loadTexts: aviciSysInventoryDescr.setDescription('A description of this component in the system.')
aviciSysIfTransTable = MibTable((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2), )
if mibBuilder.loadTexts: aviciSysIfTransTable.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransTable.setDescription('A list of interface translation entries.')
aviciSysIfTransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: aviciSysIfTransEntry.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransEntry.setDescription('An entry in the Avici Interface Translation table. The ifIndex translation table will map an ifIndex into its corresponding bay/slot/port/interface.')
aviciSysIfTransBay = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 1), AviciBayType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransBay.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransBay.setDescription('The bay number that the interface resides in.')
aviciSysIfTransSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 2), AviciSlotType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransSlot.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransSlot.setDescription('The slot number in the bay.')
aviciSysIfTransPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransPort.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransPort.setDescription('The physical port on the linecard.')
aviciSysIfTransIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransIfc.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransIfc.setDescription('The logical interface on the linecard. The value of this object is 0, if it does not apply.')
aviciSysIfTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 5), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransType.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransType.setDescription('The type of interface. This object corresponds to ifType in the ifTable.')
aviciSysIfTransName = MibTableColumn((1, 3, 6, 1, 4, 1, 2474, 1, 2, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aviciSysIfTransName.setStatus('current')
if mibBuilder.loadTexts: aviciSysIfTransName.setDescription('The name of this interface.')
aviciSystemMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 2, 3))
aviciSystemMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 2, 3, 1))
aviciSystemMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2474, 1, 2, 3, 2))
aviciSystemMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2474, 1, 2, 3, 1, 1)).setObjects(("AVICI-SYSTEM-MIB", "aviciSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciSystemMIBCompliance = aviciSystemMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: aviciSystemMIBCompliance.setDescription('The compliance statement for the aviciSystem.')
aviciSysGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2474, 1, 2, 3, 2, 1)).setObjects(("AVICI-SYSTEM-MIB", "aviciSysRouterId"), ("AVICI-SYSTEM-MIB", "aviciSysType"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryTableChange"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryId"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryType"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryOperStatus"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryBay"), ("AVICI-SYSTEM-MIB", "aviciSysInventorySlot"), ("AVICI-SYSTEM-MIB", "aviciSysInventoryDescr"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransBay"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransSlot"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransPort"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransIfc"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransType"), ("AVICI-SYSTEM-MIB", "aviciSysIfTransName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aviciSysGroup = aviciSysGroup.setStatus('current')
if mibBuilder.loadTexts: aviciSysGroup.setDescription('Objects for the system.')
mibBuilder.exportSymbols("AVICI-SYSTEM-MIB", aviciSysRouterId=aviciSysRouterId, aviciSysIfTransName=aviciSysIfTransName, aviciSysIfTransBay=aviciSysIfTransBay, aviciSysIfTransEntry=aviciSysIfTransEntry, aviciSysInventoryBay=aviciSysInventoryBay, aviciSysInventoryOperStatus=aviciSysInventoryOperStatus, aviciSysInventoryType=aviciSysInventoryType, aviciSysTrapDescr=aviciSysTrapDescr, aviciSysType=aviciSysType, aviciSysIfTransType=aviciSysIfTransType, aviciSysIfTransSlot=aviciSysIfTransSlot, aviciSysIfTransPort=aviciSysIfTransPort, aviciSystemObjects=aviciSystemObjects, aviciSysInventoryDescr=aviciSysInventoryDescr, aviciSystemGroup=aviciSystemGroup, aviciSystemMIBGroups=aviciSystemMIBGroups, aviciSysIfTransIfc=aviciSysIfTransIfc, aviciSysInventoryTableChange=aviciSysInventoryTableChange, aviciSysIfTransTable=aviciSysIfTransTable, aviciSystemMIBCompliances=aviciSystemMIBCompliances, aviciSystemMIBConformance=aviciSystemMIBConformance, aviciSysGroup=aviciSysGroup, PYSNMP_MODULE_ID=aviciSystemMIB, aviciSysInventoryEntry=aviciSysInventoryEntry, aviciSystemMIBCompliance=aviciSystemMIBCompliance, aviciSysInventorySlot=aviciSysInventorySlot, aviciSysInventoryTable=aviciSysInventoryTable, aviciSysInventoryId=aviciSysInventoryId, aviciSystemMIB=aviciSystemMIB)
