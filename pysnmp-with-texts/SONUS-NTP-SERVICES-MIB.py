#
# PySNMP MIB module SONUS-NTP-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-NTP-SERVICES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, ObjectIdentity, Counter32, NotificationType, Unsigned32, Gauge32, Bits, ModuleIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "ObjectIdentity", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "Bits", "ModuleIdentity", "Counter64", "TimeTicks")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
sonusSlotIndex, sonusEventClass, sonusShelfIndex, sonusEventDescription, sonusEventLevel = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusSlotIndex", "sonusEventClass", "sonusShelfIndex", "sonusEventDescription", "sonusEventLevel")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
SonusNameReference, SonusName = mibBuilder.importSymbols("SONUS-TC", "SonusNameReference", "SonusName")
sonusNtpServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2))
if mibBuilder.loadTexts: sonusNtpServicesMIB.setLastUpdated('200004230000Z')
if mibBuilder.loadTexts: sonusNtpServicesMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusNtpServicesMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusNtpServicesMIB.setDescription('The MIB Module for NTP Services Management.')
sonusNtpServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1))
sonusTimeZoneObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 1))
sonusTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))).clone(namedValues=NamedValues(("gmtMinus12-Eniuetok", 1), ("gmtMinus11-MidwayIsland", 2), ("gmtMinus10-Hawaii", 3), ("gmtMinus09-Alaska", 4), ("gmtMinus08-Pacific-US", 5), ("gmtMinus07-Arizona", 6), ("gmtMinus07-Mountain", 7), ("gmtMinus06-Central-US", 8), ("gmtMinus06-Mexico", 9), ("gmtMinus06-Saskatchewan", 10), ("gmtMinus05-Bojota", 11), ("gmtMinus05-Eastern-US", 12), ("gmtMinus05-Indiana", 13), ("gmtMinus04-Atlantic-Canada", 14), ("gmtMinus04-Caracas", 15), ("gmtMinus03-BuenosAires", 16), ("gmtMinus02-MidAtlantic", 17), ("gmtMinus01-Azores", 18), ("gmt", 19), ("gmtPlus01-Berlin", 20), ("gmtPlus02-Athens", 21), ("gmtPlus03-Moscow", 22), ("gmtPlus0330-Tehran", 23), ("gmtPlus04-AbuDhabi", 24), ("gmtPlus0430-Kabul", 25), ("gmtPlus05-Islamabad", 26), ("gmtPlus0530-NewDelhi", 27), ("gmtPlus06-Dhaka", 28), ("gmtPlus07-Bangkok", 29), ("gmtPlus08-Beijing", 30), ("gmtPlus09-Tokyo", 31), ("gmtPlus0930-Adelaide", 32), ("gmtPlus10-Guam", 33), ("gmtPlus11-Magadan", 34), ("gmtPlus12-Fiji", 35))).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusTimeZone.setStatus('current')
if mibBuilder.loadTexts: sonusTimeZone.setDescription('This is the Time Zone that this GSX9000 Node is In.')
sonusNtpPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2))
sonusNtpPeerNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerNextIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerNextIndex.setDescription('The next valid index to use when creating a new sonusNtpAdmnEntry')
sonusNtpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2), )
if mibBuilder.loadTexts: sonusNtpPeerTable.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerTable.setDescription('This table contains information about each NTP Server configured to provide network time. ')
sonusNtpAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1), ).setIndexNames((0, "SONUS-NTP-SERVICES-MIB", "sonusNtpPeerIndex"))
if mibBuilder.loadTexts: sonusNtpAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: sonusNtpAdmnEntry.setDescription("This table describes the NTPs' configurations that this GSX9000 node has access to their services.")
sonusNtpPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerIndex.setDescription('The index of NTP Server Peer.')
sonusNtpServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 2), SonusName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpServerName.setStatus('current')
if mibBuilder.loadTexts: sonusNtpServerName.setDescription('The name of this NTP Server Peer.')
sonusNtpPeerIpaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerIpaddr.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerIpaddr.setDescription('The IP address of this NTP Peer. ')
sonusNtpPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 8))).clone(namedValues=NamedValues(("poll", 3), ("broadcast", 8))).clone('poll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerMode.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerMode.setDescription('The operating client peer mode to this NTP Server. ')
sonusNtpPeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("version3", 3), ("version4", 4))).clone('version3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerVersion.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerVersion.setDescription('The NTP version of this NTP Server ')
sonusNtpPeerMinPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerMinPoll.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerMinPoll.setDescription('The minimum poll interval to this NTP Server. Intervals are set in powers of 2. ')
sonusNtpPeerMaxPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerMaxPoll.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerMaxPoll.setDescription('The maxiimum poll interval to this NTP Server. Intervals are set in powers of 2.')
sonusNtpPeerAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerAdmnState.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerAdmnState.setDescription('The configured state of the NTP.')
sonusNtpPeerAdmnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 2, 2, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusNtpPeerAdmnRowStatus.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerAdmnRowStatus.setDescription('')
sonusNtpPeerStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3), )
if mibBuilder.loadTexts: sonusNtpPeerStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerStatTable.setDescription('This table contains status information about each NTP server per shelf')
sonusNtpPeerStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1), ).setIndexNames((0, "SONUS-NTP-SERVICES-MIB", "sonusNtpPeerStatShelfIndex"), (0, "SONUS-NTP-SERVICES-MIB", "sonusNtpPeerStatIndex"))
if mibBuilder.loadTexts: sonusNtpPeerStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerStatEntry.setDescription("This table describes the NTP peer's status")
sonusNtpPeerStatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerStatShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerStatShelfIndex.setDescription('Identifies the shelf NTP service is provided on.')
sonusNtpPeerStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerStatIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerStatIndex.setDescription('Identifies the NTP peer for this shelf.')
sonusNtpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outofsync", 1), ("insync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerState.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerState.setDescription('Identifies the state of the NTP peer for this shelf.')
sonusNtpPeerStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerStratum.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerStratum.setDescription("Identifies the NTP peer's stratum level.")
sonusNtpPeerRefTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpPeerRefTime.setStatus('current')
if mibBuilder.loadTexts: sonusNtpPeerRefTime.setDescription('The time this NTP peer on this shelf is last updated.')
sonusNtpSysStatTable = MibTable((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4), )
if mibBuilder.loadTexts: sonusNtpSysStatTable.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysStatTable.setDescription('This table contains status information about each NTP')
sonusNtpSysStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1), ).setIndexNames((0, "SONUS-NTP-SERVICES-MIB", "sonusNtpSysShelfIndex"))
if mibBuilder.loadTexts: sonusNtpSysStatEntry.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysStatEntry.setDescription('This table describes the NTP stat')
sonusNtpSysShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpSysShelfIndex.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysShelfIndex.setDescription('Identifies the shelf NTP service is provided on.')
sonusNtpSysClock = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpSysClock.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysClock.setDescription('The system clock time of this shelf.')
sonusNtpSysRefTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpSysRefTime.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysRefTime.setDescription('The time this shelf is last updated.')
sonusNtpSysLastSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpSysLastSelect.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysLastSelect.setDescription('The system clock time before last update.')
sonusNtpSysPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 1, 4, 1, 5), SonusNameReference()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpSysPeer.setStatus('current')
if mibBuilder.loadTexts: sonusNtpSysPeer.setDescription('The name of current NTP server peer. ')
sonusNtpServicesMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2))
sonusNtpServicesMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 0))
sonusNtpServicesMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 1))
sonusNtpServerOutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ntpServerDisabled", 1), ("ntpServerOutOfSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpServerOutOfServiceReason.setStatus('current')
if mibBuilder.loadTexts: sonusNtpServerOutOfServiceReason.setDescription('The reason why this Network Timing Protocol Server is out of service.')
sonusNtpDownReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noNtpServerConfigured", 1), ("allNtpServersOutOfSync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusNtpDownReason.setStatus('current')
if mibBuilder.loadTexts: sonusNtpDownReason.setDescription('The reason why the Network Timing Protocol is down for this GSX.')
sonusNtpServerInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 0, 1)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-NTP-SERVICES-MIB", "sonusNtpServerName"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNtpServerInServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusNtpServerInServiceNotification.setDescription('This trap indicates that a Network Timing Protocol Server is in service.')
sonusNtpServerOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 0, 2)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-NTP-SERVICES-MIB", "sonusNtpServerName"), ("SONUS-NTP-SERVICES-MIB", "sonusNtpServerOutOfServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNtpServerOutOfServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusNtpServerOutOfServiceNotification.setDescription('This trap indicates that a Network Timing Protocol Server is out of service.')
sonusNtpUpNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 0, 3)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNtpUpNotification.setStatus('current')
if mibBuilder.loadTexts: sonusNtpUpNotification.setDescription('This trap indicates that Network Timing Protocol Server is Up.')
sonusNtpDownNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 2, 2, 0, 4)).setObjects(("SONUS-COMMON-MIB", "sonusShelfIndex"), ("SONUS-COMMON-MIB", "sonusSlotIndex"), ("SONUS-NTP-SERVICES-MIB", "sonusNtpDownReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusNtpDownNotification.setStatus('current')
if mibBuilder.loadTexts: sonusNtpDownNotification.setDescription('This trap indicates that Network Timing Protocol is down.')
mibBuilder.exportSymbols("SONUS-NTP-SERVICES-MIB", sonusNtpDownReason=sonusNtpDownReason, PYSNMP_MODULE_ID=sonusNtpServicesMIB, sonusTimeZoneObjects=sonusTimeZoneObjects, sonusNtpPeerTable=sonusNtpPeerTable, sonusNtpPeerMaxPoll=sonusNtpPeerMaxPoll, sonusNtpServicesMIBNotificationsObjects=sonusNtpServicesMIBNotificationsObjects, sonusNtpPeer=sonusNtpPeer, sonusNtpSysLastSelect=sonusNtpSysLastSelect, sonusNtpPeerAdmnState=sonusNtpPeerAdmnState, sonusNtpServerInServiceNotification=sonusNtpServerInServiceNotification, sonusNtpServerOutOfServiceReason=sonusNtpServerOutOfServiceReason, sonusNtpPeerRefTime=sonusNtpPeerRefTime, sonusNtpDownNotification=sonusNtpDownNotification, sonusNtpPeerMinPoll=sonusNtpPeerMinPoll, sonusNtpPeerStatIndex=sonusNtpPeerStatIndex, sonusNtpAdmnEntry=sonusNtpAdmnEntry, sonusNtpServicesMIB=sonusNtpServicesMIB, sonusNtpServicesMIBNotifications=sonusNtpServicesMIBNotifications, sonusNtpSysStatTable=sonusNtpSysStatTable, sonusNtpPeerAdmnRowStatus=sonusNtpPeerAdmnRowStatus, sonusNtpServicesMIBObjects=sonusNtpServicesMIBObjects, sonusNtpPeerVersion=sonusNtpPeerVersion, sonusNtpPeerMode=sonusNtpPeerMode, sonusNtpUpNotification=sonusNtpUpNotification, sonusNtpServerOutOfServiceNotification=sonusNtpServerOutOfServiceNotification, sonusNtpSysShelfIndex=sonusNtpSysShelfIndex, sonusNtpSysPeer=sonusNtpSysPeer, sonusNtpPeerState=sonusNtpPeerState, sonusNtpPeerNextIndex=sonusNtpPeerNextIndex, sonusNtpServicesMIBNotificationsPrefix=sonusNtpServicesMIBNotificationsPrefix, sonusNtpSysStatEntry=sonusNtpSysStatEntry, sonusNtpPeerIndex=sonusNtpPeerIndex, sonusNtpSysRefTime=sonusNtpSysRefTime, sonusNtpPeerStatEntry=sonusNtpPeerStatEntry, sonusNtpPeerStatShelfIndex=sonusNtpPeerStatShelfIndex, sonusNtpPeerStratum=sonusNtpPeerStratum, sonusNtpPeerIpaddr=sonusNtpPeerIpaddr, sonusNtpSysClock=sonusNtpSysClock, sonusNtpServerName=sonusNtpServerName, sonusTimeZone=sonusTimeZone, sonusNtpPeerStatTable=sonusNtpPeerStatTable)
