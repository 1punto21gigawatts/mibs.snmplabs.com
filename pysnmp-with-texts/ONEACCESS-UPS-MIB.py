#
# PySNMP MIB module ONEACCESS-UPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-UPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:34:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
oacExpIMManagement, = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMManagement")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Counter32, TimeTicks, ModuleIdentity, ObjectIdentity, IpAddress, Bits, Integer32, NotificationType, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Counter32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Bits", "Integer32", "NotificationType", "Unsigned32")
TimeStamp, TimeInterval, AutonomousType, TestAndIncr, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TimeInterval", "AutonomousType", "TestAndIncr", "DisplayString", "TextualConvention")
oacUpsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225))
if mibBuilder.loadTexts: oacUpsMIB.setLastUpdated('9402230000Z')
if mibBuilder.loadTexts: oacUpsMIB.setOrganization('IETF UPS MIB Working Group')
if mibBuilder.loadTexts: oacUpsMIB.setContactInfo(' Pascal KESTELOOT Postal: ONE ACCESS 92140 Clamart, France FRANCE Tel: (+33) 01 41 87 70 54 Fax: (+33) 01 41 87 74 39 E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacUpsMIB.setDescription('The MIB module to describe Uninterruptible Power Supplies.')
oacUpsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1))
oacUpsBattery = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 1))
oacUpsBatteryStatus = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacUpsBatteryStatus.setStatus('current')
if mibBuilder.loadTexts: oacUpsBatteryStatus.setDescription("The indication of the capacity remaining in the UPS system's batteries. A value of batteryNormal indicates that the remaining run-time is greater than upsConfigLowBattTime. A value of batteryLow indicates that the remaining battery run-time is less than or equal to upsConfigLowBattTime. A value of batteryDepleted indicates that the UPS will be unable to sustain the present load when and if the utility power is lost (including the possibility that the utility power is currently absent and the UPS is unable to sustain the output).")
oacUpsAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 2))
oacUpsAlarmsPresent = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacUpsAlarmsPresent.setStatus('current')
if mibBuilder.loadTexts: oacUpsAlarmsPresent.setDescription('The present number of active alarm conditions.')
oacUpsAlarmDescr = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 2, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacUpsAlarmDescr.setStatus('current')
if mibBuilder.loadTexts: oacUpsAlarmDescr.setDescription('A reference to an alarm description object. The object referenced should not be accessible, but rather be used to provide a unique description of the alarm condition.')
oacUpsAlarmTime = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 1, 2, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacUpsAlarmTime.setStatus('current')
if mibBuilder.loadTexts: oacUpsAlarmTime.setDescription('The value of sysUpTime when the alarm condition was detected. If the alarm condition was detected at the time of agent startup and presumably existed before agent startup, the value of upsAlarmTime shall equal 0.')
oacUpsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 2))
oacUpsTrapAlarmEntryAdded = NotificationType((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 2, 0)).setObjects(("ONEACCESS-UPS-MIB", "oacUpsAlarmDescr"))
if mibBuilder.loadTexts: oacUpsTrapAlarmEntryAdded.setStatus('current')
if mibBuilder.loadTexts: oacUpsTrapAlarmEntryAdded.setDescription('This trap is sent each time an alarm is inserted into to the alarm table. It is sent on the insertion of all alarms except for upsAlarmOnBattery and upsAlarmTestInProgress.')
oacUpsTrapAlarmEntryRemoved = NotificationType((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1225, 2, 1)).setObjects(("ONEACCESS-UPS-MIB", "oacUpsAlarmDescr"))
if mibBuilder.loadTexts: oacUpsTrapAlarmEntryRemoved.setStatus('current')
if mibBuilder.loadTexts: oacUpsTrapAlarmEntryRemoved.setDescription('This trap is sent each time an alarm is removed from the alarm table. It is sent on the removal of all alarms except for upsAlarmTestInProgress.')
mibBuilder.exportSymbols("ONEACCESS-UPS-MIB", oacUpsAlarmDescr=oacUpsAlarmDescr, oacUpsAlarmTime=oacUpsAlarmTime, oacUpsAlarm=oacUpsAlarm, oacUpsMIBObjects=oacUpsMIBObjects, oacUpsAlarmsPresent=oacUpsAlarmsPresent, oacUpsTraps=oacUpsTraps, oacUpsMIB=oacUpsMIB, oacUpsTrapAlarmEntryRemoved=oacUpsTrapAlarmEntryRemoved, PYSNMP_MODULE_ID=oacUpsMIB, oacUpsTrapAlarmEntryAdded=oacUpsTrapAlarmEntryAdded, oacUpsBattery=oacUpsBattery, oacUpsBatteryStatus=oacUpsBatteryStatus)
