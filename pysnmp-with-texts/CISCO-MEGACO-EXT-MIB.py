#
# PySNMP MIB module CISCO-MEGACO-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MEGACO-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:52:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
Counter32SinceReset, = mibBuilder.importSymbols("CISCO-ATM-TRUNK-MIB", "Counter32SinceReset")
cmedGatewayLinkId, cmedTerminationsEntry, cmedGatewayConfigEntry, cmedGatewayStatsEntry, cmedGatewayId = mibBuilder.importSymbols("CISCO-IETF-MEGACO-MIB", "cmedGatewayLinkId", "cmedTerminationsEntry", "cmedGatewayConfigEntry", "cmedGatewayStatsEntry", "cmedGatewayId")
CCallControlProfileIndexOrZero, CCallControlProfileIndex = mibBuilder.importSymbols("CISCO-MEDIA-GATEWAY-MIB", "CCallControlProfileIndexOrZero", "CCallControlProfileIndex")
CMgcGroupIndex, = mibBuilder.importSymbols("CISCO-MGC-MIB", "CMgcGroupIndex")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
CiscoPort, = mibBuilder.importSymbols("CISCO-TC", "CiscoPort")
CvcSpeechCoderRate, = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcSpeechCoderRate")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, TimeTicks, Integer32, ModuleIdentity, NotificationType, ObjectIdentity, Bits, Counter32, Unsigned32, iso, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Bits", "Counter32", "Unsigned32", "iso", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
TextualConvention, DisplayString, TimeStamp, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TimeStamp", "TruthValue", "RowStatus")
ciscoMegacoExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 104))
ciscoMegacoExtMIB.setRevisions(('2006-08-29 12:00', '2006-04-21 12:00', '2005-11-03 12:00', '2005-04-25 12:00', '2004-06-03 12:00', '2003-10-13 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMegacoExtMIB.setRevisionsDescriptions((' Added new objects to cmedxGatewayConfigTable cmedxGatewayDomainName, cmedxGatewayCmbDnAndPortInMID.', 'Deprecated the following object: cmedxGatewayProvisionRespTime Added new objects to cmedxGatewayConfigTable cmedxGatewayMgProvisionRspTime, cmedxGatewayMgcProvisionRspTime, cmedxGatewayMgOrigPendLimit, cmedxGatewayMgcOrigPendLimit for ETSI TISPAN compliance. Added new objects to cmedxCommandStatsTable cmedxCmdNumAddPendings, cmedxCmdNumSubtractPendings, cmedxCmdNumMovePendings, cmedxCmdNumModifyPendings, cmedxCmdNumAuditValPendings, cmedxCmdNumAuditCapPendings, cmedxCmdNumNotifyPendings, cmedxCmdNumSrvChgFromMgcPendings, cmedxCmdNumSrvChgFromMgPendings, cmedxCmdTotalPendings. ', 'Added new values from pkgGRI to pkgXnq to CH248Packages. Added new objects to cmedxCallReduceControlTable cmedxCrrNotifyState, cmedxCrrNotifyEnabled. cmedxCurrentCallState Added new objects to cmedxProfileTable cmedxProfileComfortNoiseGenerate Added new objects to cmedxCommandStatsTable cmedxCmdTotalFails, cmedxCmdTotalSucceeds, cmedxCmdTotal. Added the following tables - cmedxOverloadControlTable, cmedxCommandProcStatsTable, cmedxOverloadStatsTable, cmedxOverloadResourceStatsTable Added the following objects to cmedxGatewayConfigTable: cmedxGatewaySctpAssocId, cmedxGatewaySrvChgProfile, cmedxGatewaySrvChgProfileVer, cmedxGatewayMsgTokenType.', 'Added 6 more packet ids in CH248Packages: pkgBCAS (20), pkgRBS (21), pkgOSES (22), pkgAMET (23), pkgBCASAddr (24), pkgCASBlock (25) to handle the CAS state of the gateway link.', "(a) Note: There is a typo in the MIB. The UNITS of the object cmedxGatewayInactivityTime has been changed to '10 milliseconds'. (b) Added two new objects, cmedxGatewayAdminAction cmedxGatewayServiceState to handle the service state of the gateway link. (c) Added four new objects, cmedxProfileOriginatingCotTx cmedxProfileOriginatingCotRx cmedxProfileTerminatingCotTx cmedxProfileTerminatingCotRx to handle COT. (d) Added pktLLTR(19) to CH248Packages TC. (e) Added 3 new objects, cmedxGatewayDynamicTpktVersion cmedxGatewayMaxCommandMsgSize cmedxGatewayMaxReplyMsgSize for TCP layer and the maximum size of command and reply message of H248. ", 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoMegacoExtMIB.setLastUpdated('200608291200Z')
if mibBuilder.loadTexts: ciscoMegacoExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMegacoExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-voice-gateway@cisco.com')
if mibBuilder.loadTexts: ciscoMegacoExtMIB.setDescription('The MIB module is an extension of CISCO-IETF-MEGACO-MIB. It defines the attributes of ITU H.248 protocol.')
ciscoMegacoExtMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 0))
ciscoMegacoExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 1))
cmedxConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1))
cmedxStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2))
class CH248Packages(TextualConvention, Bits):
    description = 'This textual convention defines all possible packages in H.248 protocol.'
    status = 'current'
    namedValues = NamedValues(("pkgG", 0), ("pkgRoot", 1), ("pkgToneGen", 2), ("pkgToneDet", 3), ("pkgDG", 4), ("pkgDD", 5), ("pkgCG", 6), ("pkgCD", 7), ("pkgCT", 8), ("pkgNT", 9), ("pkgRTP", 10), ("pkgTDMC", 11), ("pkgAN", 12), ("pkgBCG", 13), ("pkgXCG", 14), ("pkgSrvTn", 15), ("pkgXsrvTn", 16), ("pkgChp", 17), ("pkgIT", 18), ("pkgLLTR", 19), ("pkgBCAS", 20), ("pkgRBS", 21), ("pkgOSES", 22), ("pkgAMET", 23), ("pkgBCASAddr", 24), ("pkgCASBlock", 25), ("pkgGRI", 26), ("rtcpxr", 27), ("xrbm", 28), ("qac", 29), ("pkgDS", 30), ("pkgETerm", 31), ("pkgXnq", 32), ("pkgCTYP", 33), ("pkgIPFAX", 34))

class CMedxCotTones(TextualConvention, Integer32):
    description = 'This textual convention defines the tones to be used between originating gateway and terminating gateway in the COT (Continuity Test). co1 (1) - CO1 is either 2000Hz or 2010Hz depending on the region/country regulation. co2 (2) - CO2 is always 1780Hz.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("co1", 1), ("co2", 2))

cmedxGatewayConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1), )
if mibBuilder.loadTexts: cmedxGatewayConfigTable.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayConfigTable.setDescription('The Cisco media gateway configuration extended table defines the parameters related to the configuration of the media gateway in H.248 protocol. Each entry represents an instance of an H.248 Gateway Link.')
cmedxGatewayConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1), )
cmedGatewayConfigEntry.registerAugmentions(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayConfigEntry"))
cmedxGatewayConfigEntry.setIndexNames(*cmedGatewayConfigEntry.getIndexNames())
if mibBuilder.loadTexts: cmedxGatewayConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayConfigEntry.setDescription('An entry containing additional H.248 protocol related configuration applicable to a media gateway. The following objects must be provided when the entry is created, and they can not be modified after the entry becomes active: cmedxGatewayMgcGroupIndex, cmedxGatewayIpAddressIndex.')
cmedxGatewayMgcGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 1), CMgcGroupIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgcGroupIndex.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgcGroupIndex.setDescription('This object specifies the MGC group parameters associated with MGC group index. Those parameters are for the communication between this media gateway and the MGCs in the group. The value of this object is the same as cMgcGrpIndex of cMgcGrpParamTable.')
cmedxGatewayIpAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayIpAddressIndex.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayIpAddressIndex.setDescription('This object specifies the media gateway IP address. It is the index of the entry in cMediaGwIpConfigTable which defines the media gateway address over control type PVC.')
cmedxGatewayAssociationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayAssociationId.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayAssociationId.setDescription('This object indicates the unique identification of the H.248 association assigned by the H.248 Stack.')
cmedxGatewayMaxContexts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMaxContexts.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMaxContexts.setDescription('Maximum number of contexts is allowed in this media gateway link.')
cmedxGatewayMaxTermsInContext = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMaxTermsInContext.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMaxTermsInContext.setDescription('Maximum number of terminations per context in this media gateway link.')
cmedxGatewayMgExecTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgExecTime.setReference('RFC2885, E.2.1 Properties.')
if mibBuilder.loadTexts: cmedxGatewayMgExecTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgExecTime.setDescription('This object specifies the interval within which the MGC expects a response to any transaction from the MG (exclusive of network delay specified by the object cmedxGatewayInitialRtt).')
cmedxGatewayMgcExecTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgcExecTime.setReference('RFC2885, E.2.1 Properties.')
if mibBuilder.loadTexts: cmedxGatewayMgcExecTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgcExecTime.setDescription('This object specifies the interval within which the MG should expects a response to any transaction from the MGC (exclusive of network delay specified by the object cmedxGatewayInitalRtt).')
cmedxGatewayProvisionRespTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(2000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayProvisionRespTime.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxGatewayProvisionRespTime.setDescription("This object specifies the time within which to expect a Pending Response if a transaction cannot be completed in the media gateway and in the MGCs of the media gateway link. The value of this object should be less than the value of cmedxGatewayMgExecTime and the value of cmedxGatewayMgcExecTime. This object is depricated due to the object name, default value and description are wrong. This object is replaced by 'cmedxGatewayMgProvisionRspTime'.")
cmedxGatewayNumConnRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(11)).setUnits('times').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayNumConnRetries.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayNumConnRetries.setDescription('The number of times the media gateway retries to connect to MGC before it sends out disconnect command.')
cmedxGatewayMaxWaitingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMaxWaitingDelay.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMaxWaitingDelay.setDescription('When a media gateway is powered on, it should initiate a restart timer to a random value, uniformly distributed between 0 and the value specified in this object (the maximum waiting delay, MWD). After restart timer timeout, the media gateway can initiate the ServiceChange transaction. This is a way to prevent the MGC is swamped by many gateways powered up at the same time.')
cmedxGatewayRestartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(200)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayRestartDelay.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayRestartDelay.setDescription("This object specifies The time delay before the media gateway accept any call from MGC after it sends the command 'ServiceChange' with a 'Restart'.")
cmedxGatewayRespRetentionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayRespRetentionTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayRespRetentionTime.setDescription('This object specifies the time till which the responses should be retained before they are sent if they receive a repetition of a transaction that is still being executed.')
cmedxGatewayInitialRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayInitialRtt.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayInitialRtt.setDescription('Initial round-trip time for the H.248 transaction to be responded. It reflects the network delay time.')
cmedxGatewayInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1000)).setUnits('10 milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayInactivityTime.setReference('H.248 Gateway Control Protocol, Version 2 Inactivity Timer Package (IT).')
if mibBuilder.loadTexts: cmedxGatewayInactivityTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayInactivityTime.setDescription('This object specifies the the period of silence between messages from MGC. If the period of silence exceeds the value of this object, then a Notify command with inactive MGC event is generated from the media gateway. The value of 0 is to disable the inactivity detection on the media gateway.')
cmedxGatewayHeaderAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 15), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayHeaderAddrType.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayHeaderAddrType.setDescription('The address type in the H.248 message header.')
cmedxGatewayDownServiceDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayDownServiceDelay.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayDownServiceDelay.setDescription('This object specifies the grace period before the media gateway link to be taken out of service. The value of 0 means to take the media gateway link out of service forcefully without any delay. The value of -1 means not to take the media gateway link out of service until all currently active contexts have been cleared.')
cmedxGatewayActiveMgcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 17), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayActiveMgcAddress.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayActiveMgcAddress.setDescription('The address of the currently active MGC in this media gateway link.')
cmedxGatewayActiveMgcDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayActiveMgcDomain.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayActiveMgcDomain.setDescription('The domain name of the currently active MGC in this media gateway link.')
cmedxGatewayActiveMgcPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 19), CiscoPort()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayActiveMgcPortNum.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayActiveMgcPortNum.setDescription('The transport layer port number of the currently active MGC in this media gateway link.')
cmedxGatewayStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mgcDirected", 1), ("mgDirected", 2), ("mgcNotReachable", 3), ("numRetriesExpired", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayStateChangeReason.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayStateChangeReason.setDescription('This object indicates the reason for the operational state change (cmedGatewayOperStatus) in the media gateway link. mgcDirected (1) - The state change is directed from MGC. mgDirected (2) - The state change is directed from MG. mgcNotReachable (3) - The transport address of MGC is not reachable. numRetriesExpired (4) - The number of retires for connecting MGC has exhausted (cmedxGatewayNumConnRetries).')
cmedxGatewayStateChangeMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("graceful", 2), ("forced", 3), ("handoff", 4), ("failover", 5), ("restart", 6), ("disconnect", 7), ("cancelGraceful", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayStateChangeMethod.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayStateChangeMethod.setDescription("This object indicates the method for the operational state change (cmedGatewayOperStatus) in the media gateway link. other (1) - None of the methods listed below. graceful (2) - The state change to 'down(2)' is by the way of graceful out of service. forced (3) - The state change to 'down(2)' is by the way of forced out of service. handoff (4) - The state change is by the way that the MGC hands off to another MGC. failover (5) - The state change is by the way that MG reconnects to current MGC because of the failure of previous MGC. restart (6) - The state change is by the way that MG or MGC restarts. disconnect (7) - The state change is by the way that MG brings down the service because of the MG port has been modified, the number of retries has exhausted, or the inactivity timer has expired. cancelGraceful (8) - After issuing graceful out of service with a delay (cmedxGatewayDownServiceDelay>0), MG then sends an in-service command before the delay has been expired.")
cmedxGatewayAdminAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("downForceful", 2), ("downGraceful", 3), ("cancelGraceful", 4))).clone('downForceful')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayAdminAction.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayAdminAction.setDescription("This object specifies the action that users used to change the service state of the media gateway link. This object can be modified while the entry is active. up (1) - Bring the service state up. The value of cmedxGatewayDownServiceDelay will be ignored. downForceful (2) - Bring the service state down without any delay. All current active calls will be torn down forcefully. The value of cmedxGatewayDownServiceDelay must be 0. downGraceful (3) - Bring the service state down but wait until currently active calls are terminated by users. The value of cmedxGatewayDownServiceDelay must be greater than 0. cancelGraceful(4) - While waiting for all currently active calls to be terminated by users during the downGraceful action, this value can be used to cancel the previous action 'downGraceful(3)'. The value of cmedxGatewayDownServiceDelay will be ignored. ")
cmedxGatewayServiceState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inService", 1), ("pendingIs", 2), ("outOfService", 3), ("pendingFoos", 4), ("pendingGoos", 5), ("mgcDirectOos", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayServiceState.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayServiceState.setDescription("This object indicates current operation status of the media gateway link. inService (1) - The media gateway link is in-service. pendingIs (2) - The media gateway link is in the process of establishing the service between MG and MGC. outOfService (3) - The service of the media gateway link is completely down due to the action of setting cmedxGAtewayAdminAction to 'downForceful(2)' or to 'downGraceful(3)'. pendingFoos (4) - The media gateway link is in the process of bringing down the service in response to the action of setting object cmedxGAtewayAdminAction to 'downForceful(2)'. pendingGoos (5) - The media gateway link is in the process of bringing down the service in response to the action of setting object cmedxGAtewayAdminAction to 'downGraceful(3)'. mgcDirectOos (6) - The media gateway link is out-of-service due to MGC disable the link. This state should occur very rarely, the way to recover from this state is to set cmedxGAtewayAdminAction to 'up(1)' or 'downForceful(2)' ")
cmedxGatewayDynamicTpktVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 24), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayDynamicTpktVersion.setReference('RFC1006')
if mibBuilder.loadTexts: cmedxGatewayDynamicTpktVersion.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayDynamicTpktVersion.setDescription("This object specifies the TPKT header version that is dynamically assigned based on the size of the packet presented to TCP layer. The TPKT header version is set to 3 when the size of packet is represented by 2 octets of packet length field for the message (TPDU) sizes less than or equal to 65531 octets. If this object is set to 'true': - The TPKT header version is set to 4 when the size of packet is represented by 4 octets of packet length field for the message (TPDU) sizes greater than 65531 octets. If this object is set to 'false': - An error in message is sent to MGC if the TPDU size exceeds 65531 octets indicating that response size exceeded maximum PDU size. ")
cmedxGatewayMaxCommandMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(2)).setUnits('Kbyte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMaxCommandMsgSize.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMaxCommandMsgSize.setDescription('This object specifies the maximum message size on this gateway link for a H248 transaction containing the media gateway initiated commands. For example, this object would limit the size of a H248 transaction containing the media gateway initiated ServiceChange command message. The value of the object cannot be modified if the entry is active.')
cmedxGatewayMaxReplyMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)).clone(250)).setUnits('Kbyte').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMaxReplyMsgSize.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMaxReplyMsgSize.setDescription('This object specifies the maximum message size on this gateway link for a H248 transaction containing the media gateway reply messages to MGC. For example, this object would limit the size of a H248 transaction containing the media gateway reply message to the MGC initiated AuditValue command. The value of the object cannot be modified if the entry is active.')
cmedxGatewaySctpAssocId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewaySctpAssocId.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewaySctpAssocId.setDescription('This object specifies the SCTP association ID associated with the H.248 association. This SCTP association ID is the index (cSctpAssocId) of the entry in cSctpAssocTable. If the SCTP ID value is 0, it indicates no SCTP association.')
cmedxGatewaySrvChgProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 28), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)).clone('CISCO_TGW')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewaySrvChgProfile.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewaySrvChgProfile.setDescription('This object specifies the profile name used in the profile parameter of ServiceChange message to specify the attributes and behaviors of the media gateway.')
cmedxGatewaySrvChgProfileVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewaySrvChgProfileVer.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewaySrvChgProfileVer.setDescription('This object specifies the version of the profile indicated in cmedxGatewaySrvChgProfile.')
cmedxGatewayMsgTokenType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shortFormat", 1), ("longFormat", 2))).clone('shortFormat')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMsgTokenType.setReference('Annex B of H.248.1')
if mibBuilder.loadTexts: cmedxGatewayMsgTokenType.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMsgTokenType.setDescription('This object specifies the H248 message is in short formatted PDU or long formatted PDU.')
cmedxGatewayMgProvisionRspTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgProvisionRspTime.setReference('Annex E.2 of H.248.1 version 2')
if mibBuilder.loadTexts: cmedxGatewayMgProvisionRspTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgProvisionRspTime.setDescription('This object specifies the time within which to expect a Pending Response if a transaction cannot be completed in the media gateway and in the MGCs of the media gateway link. The value of this object should be greater than the value of cmedxGatewayMgExecTime.')
cmedxGatewayMgcProvisionRspTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgcProvisionRspTime.setReference('Annex E.2 of H.248.1 version 2')
if mibBuilder.loadTexts: cmedxGatewayMgcProvisionRspTime.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgcProvisionRspTime.setDescription('This object specifies the time within which to expect a Pending Response from the MGC if a transaction cannot be completed. The value of this object should be greater than the value of cmedxGatewayMgcExecTime.')
cmedxGatewayMgOrigPendLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgOrigPendLimit.setReference('Annex E.2 of H.248.1 version 2')
if mibBuilder.loadTexts: cmedxGatewayMgOrigPendLimit.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgOrigPendLimit.setDescription('This object specifies the number of TransactionPendings that MG will send. Once this limit is exceeded, MG will send a TransactionReply with Error 506.')
cmedxGatewayMgcOrigPendLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayMgcOrigPendLimit.setReference('Annex E.2 of H.248.1 version 2')
if mibBuilder.loadTexts: cmedxGatewayMgcOrigPendLimit.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayMgcOrigPendLimit.setDescription('This object specifies the number of TransactionPendings that MG expects to receive. Once this limit is exceeded, MG will assume a TransactionReply with Error 506.')
cmedxGatewayDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 35), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayDomainName.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayDomainName.setDescription("This object specifies the unique domain name to be used for each gateway link. This object is relevant only if cmedxGatewayHeaderAddrType is set to 'dns'. The agent won't allow any attempt to set this value for other address types. This domain name is expected to be resolved to a valid IP address through the use of a DNS located in the network. The default value of this object is NULL string.")
cmedxGatewayCmbDnAndPortInMID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 1, 1, 36), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxGatewayCmbDnAndPortInMID.setReference('(1) Annex B.2 of H.248.1 version 2 (2) cmedGatewayPort, CISCO-IETF-MEGACO-MIB. ')
if mibBuilder.loadTexts: cmedxGatewayCmbDnAndPortInMID.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayCmbDnAndPortInMID.setDescription("This object specifies whether the MID should be a combination of the transport port number and the domain name represented by cmedGatewayPort and cmedxGatewayDomainName respectively, when cmedxGatewayHeaderAddrType is 'dns' . A value of 'true' indicates that the MID will be a combination of the domain name and the transport port number. A value of 'false' indicates that MID will contain only the domain name and not the port number. The agent won't allow any attempt to set this object for other address types. ")
cmedxTerminationTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2), )
if mibBuilder.loadTexts: cmedxTerminationTypeTable.setStatus('current')
if mibBuilder.loadTexts: cmedxTerminationTypeTable.setDescription('This table defines the attributes of a termination type for a group of ephemeral terminations.')
cmedxTerminationTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxTermTypeId"))
if mibBuilder.loadTexts: cmedxTerminationTypeEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxTerminationTypeEntry.setDescription('Each entry represents one termination type for a group of ephemeral terminations in H.248. When creating an entry, the object cmedxTermType have to be provided.')
cmedxTermTypeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cmedxTermTypeId.setStatus('current')
if mibBuilder.loadTexts: cmedxTermTypeId.setDescription('An unique identification number that is assigned to the termination type by the manager')
cmedxTermType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("scn", 2), ("pdnRtp", 3), ("pdnAtmAal1", 4), ("pdnAtmAal2", 5))).clone('pdnRtp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxTermType.setStatus('current')
if mibBuilder.loadTexts: cmedxTermType.setDescription('This object specifies the type of a group of ephemeral terminations. unknown (1) - none of the types listed below. scn (2) - SCN/DS terminations pdnRtp (3) - PDN terminations of RTP type. pdnAtmAal1 (4) - PDN terminations of ATM type with AAL1 adaptation layer. pdnAtmAal2 (5) - PDN terminations of ATM type with AAL2 adaptation layer. If the value of this object is set to scn(2) or pdnRtp(3), the value of cmedxProfileAtmAalType for the profile of this termination type should be other(1). If the value of this object is set to pdnAtmAal1(4), the value of cmedxProfileAtmAalType for the profile of this termination type should be aal1(2), aal1Sdt(3), or aal1Udt(4). If the value of this object is set to pdnAtmAal2(5), the value of cmedxProfileAtmAalType for the profile of this termination type should be aal2(5).')
cmedxTermTypeProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1, 3), CCallControlProfileIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxTermTypeProfileId.setStatus('current')
if mibBuilder.loadTexts: cmedxTermTypeProfileId.setDescription('The property profile identifier with which the terminations within this termination type will be associated.')
cmedxTermTypePkgIds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1, 4), CH248Packages()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxTermTypePkgIds.setStatus('current')
if mibBuilder.loadTexts: cmedxTermTypePkgIds.setDescription('The H.248 packages applied to this termination type.')
cmedxTermTypeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxTermTypeRowStatus.setStatus('current')
if mibBuilder.loadTexts: cmedxTermTypeRowStatus.setDescription('This object is used to create new rows, modify existing rows and to delete existing rows.')
cmedxProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3), )
if mibBuilder.loadTexts: cmedxProfileTable.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileTable.setDescription('This table contains a list of the configurable properties in the H.248 profile supported in a media gateway. A property profile can be applied to a termination, a group of termination, or a termination type.')
cmedxProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxProfileIndex"))
if mibBuilder.loadTexts: cmedxProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileEntry.setDescription('Each entry represents all possible configurable properties supported by Cisco media gateway in an H.248 profile.')
cmedxProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 1), CCallControlProfileIndex())
if mibBuilder.loadTexts: cmedxProfileIndex.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileIndex.setDescription('This object uniquely identifies the H.248 profile.')
cmedxProfilePlayCpToneInterDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(60)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfilePlayCpToneInterDur.setReference('H.248 Gateway Control Protocol, Version 2 Call Progress Tones Generator Package (CG).')
if mibBuilder.loadTexts: cmedxProfilePlayCpToneInterDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfilePlayCpToneInterDur.setDescription('This object specifies the duration for playing a list of call progressing tones between two call progressing signals. The value of 0 indicates there is no wait between two call progressing signals.')
cmedxProfileDtmfDigitOnDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(40, 4294967295)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileDtmfDigitOnDur.setReference('Q.23, Q.24, EIA/TIA-464')
if mibBuilder.loadTexts: cmedxProfileDtmfDigitOnDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileDtmfDigitOnDur.setDescription('This object specifies the duration of the active DTMF digit during DTMF playout from the gateway. A complete DTMF digit is characterized by DTMF on with duration specified by this object followed by a pause (signal off) duration specified by the object cmedxProfileDtmfPauseDuration.')
cmedxProfileDtmfPauseDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(40, 4294967295)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileDtmfPauseDur.setReference('Q.23, Q.24, EIA/TIA-464')
if mibBuilder.loadTexts: cmedxProfileDtmfPauseDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileDtmfPauseDur.setDescription('This object specifies the duration of the pause after an active DTMF digit during DTMF playout from the gateway. For playout of multiple DTMF digits, the sum of the digit-on and pause (signaling velocity) should not be shorter than the time specified in Q.23, Q.24 and EIA/TIA-464. For example, 93ms/digit for AT&T, 120ms/digit for NTT, 100ms/digit for Danish Administration.')
cmedxProfileCot1Frequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000)).clone(2010)).setUnits('Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileCot1Frequency.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileCot1Frequency.setDescription('This object specifies the tone frequency to be transmit between gateways in the continuity test.')
cmedxProfileCot2Frequency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000)).clone(1780)).setUnits('Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileCot2Frequency.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileCot2Frequency.setDescription('This object specifies the tone frequency to be received between gateways in the continuity test.')
cmedxProfileInitiateCotDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileInitiateCotDur.setReference('H.248 Gateway Control Protocol, Version 2 Basic Continuity Package (CT).')
if mibBuilder.loadTexts: cmedxProfileInitiateCotDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileInitiateCotDur.setDescription('This object specifies the duration for the continuity test tone to be played when the gateway initiates a COT. The value of 0 indicates that the tone will be played infinitely unless interrupted.')
cmedxProfileRespCotMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopback", 1), ("transponder", 2))).clone('loopback')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileRespCotMethod.setReference('H.248 Gateway Control Protocol, Version 2 Basic Continuity Package (CT).')
if mibBuilder.loadTexts: cmedxProfileRespCotMethod.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileRespCotMethod.setDescription('This object specifies the method for responding to COT (Continuity Test Tone) when the gateway detects a the continuity test signal. loopback (1) - The gateway loops back the received continuity test signal. transponder (2) - The gateway responds with another continuity test signal upon detecting a continuity test signal. When this object is set to loopback(1), the originating gateway transmits the frequency specified in the value of cmedxProfileCot1Frequency, the terminating gateway loops back whatever it receives. When this object is set to transponder(2), the originating gateway transmit the frequency specified in the value of cmedxProfileCot1Frequency, and the terminating gateway responds the frequency specified in the value of cmedxProfileCot2Frequency.')
cmedxProfileDetectLongCpToneDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(7000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileDetectLongCpToneDur.setReference('H.248 Gateway Control Protocol, Version 2 Call Progress Tones Detection Package (CD).')
if mibBuilder.loadTexts: cmedxProfileDetectLongCpToneDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileDetectLongCpToneDur.setDescription('This object specifies the duration for detecting a long call progressing tone.')
cmedxProfileDetectLongDigitDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(7000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileDetectLongDigitDur.setReference('H.248 Gateway Control Protocol, Version 2 DTMF Detection Package (DD).')
if mibBuilder.loadTexts: cmedxProfileDetectLongDigitDur.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileDetectLongDigitDur.setDescription('This object specifies the duration for detecting a long digit tone signal.')
cmedxProfileEchoCancelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileEchoCancelEnabled.setReference('H.248 Gateway Control Protocol, Version 2 TDM Circuit Package (TDMC).')
if mibBuilder.loadTexts: cmedxProfileEchoCancelEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileEchoCancelEnabled.setDescription('This object specifies whether or not the Echo Cancellation is enabled or not.')
cmedxProfileEchoCancelTail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("echoCanceller8ms", 1), ("echoCanceller16ms", 2), ("echoCanceller24ms", 3), ("echoCanceller32ms", 4), ("echoCanceller64ms", 5), ("echoCanceller128ms", 6))).clone('echoCanceller8ms')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileEchoCancelTail.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileEchoCancelTail.setDescription("This object specifies the Echo Canceler coverage. This object is valid if the cmedxProfileEchoCancelEnabled object is 'true'. echoCanceller8ms - 8 ms echo canceler coverage. echoCanceller16ms - 16 ms echo canceler coverage. echoCanceller24ms - 24 ms echo canceler coverage. echoCanceller32ms - 32 ms echo canceler coverage. echoCanceller64ms - 64 ms echo canceler coverage. echoCanceller128ms- 128 ms echo canceler coverage.")
cmedxProfileInGainControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-6, 14))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileInGainControl.setReference('H.248 Gateway Control Protocol, Version 2 TDM Circuit Package (TDMC).')
if mibBuilder.loadTexts: cmedxProfileInGainControl.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileInGainControl.setDescription('This object contains the amount of gain inserted at the receiver side of the interface. The input gain settings only define a gain/loss relative to the 0 dB setting. The absolute loss at the 0 dB setting could be implementation dependent based on the desired network loss plan.')
cmedxProfileOutAttnControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileOutAttnControl.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileOutAttnControl.setDescription('This object contains the amount of attenuation inserted at the transmit side of the interface. The output attenuation settings only define a loss relative to the 0 dB setting. The absolute loss at the 0 dB setting could be implementation dependent based on the desired network loss plan.')
cmedxProfileVoIpVadEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileVoIpVadEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileVoIpVadEnabled.setDescription('This object specifies VAD (Voice Activity Detection) is enabled for the compression DSPs of this interface when the application is VoIP.')
cmedxProfileVoIpVadTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileVoIpVadTimer.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileVoIpVadTimer.setDescription("This object specifies the hangover time for VAD in the VoIP application. Once the voice inactivity is detected, the media gateway waits for the duration of this value before activating silence suppression. This object is not applicable if cmedxProfileVoIpVadEnabled is set to 'false'.")
cmedxProfileVoAal2VadTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileVoAal2VadTimer.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileVoAal2VadTimer.setDescription("This object specifies the hangover time for VAD in the VoATM over AAL2 application. Once the voice inactivity is detected, the media gateway waits for the duration of this value before activating silence suppression. This object is not applicable if cvapAal2ProfVad is set to 'vadOff'.")
cmedxProfileAtmBearerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("bearerSvc", 1), ("bearerPvc", 2))).clone('bearerSvc')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileAtmBearerType.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileAtmBearerType.setDescription('This object specifies ATM bearer type. bearerSvc (1) - the ATM bearer type is SVC (Switched Virtual Circuit). bearerPvc (1) - the ATM bearer type is PVC (Permanent Virtual Circuit).')
cmedxProfileAtmAalPartialFill = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 48)).clone(47)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileAtmAalPartialFill.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileAtmAalPartialFill.setDescription('This object specifies the fill level of cells in case of AAL adaptation . The value of this object will be used if the MGC does not specify partial fill in the commands. ATM cell size is 53 bytes, 5 bytes for header, 48 bytes for data. If the data are not enough to fill 48 bytes of one ATM cell, the system can fill in the value of this object to the padding bytes.')
cmedxProfileAtmAalType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("aal1", 2), ("aal1Sdt", 3), ("aal1Udt", 4), ("aal2", 5))).clone('aal1Sdt')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileAtmAalType.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileAtmAalType.setDescription('This object specifies the adaptation layer of ATM. other (1) - None of the types listed below. aal1 (2) - ATM AAL1 adaptation layer aal1Sdt (3) - ATM AAL1 with SDT (Structured Data Transfer) aal1Udt (4) - ATM AAL1 with UDT (Unstructured Data Transfer). aal2 (5) - ATM AAL2 adaptation layer.')
cmedxProfileSuppressBearerDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileSuppressBearerDigit.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileSuppressBearerDigit.setDescription("This object controls if the digits should be suppressed from voice media stream. When MGC has requested digits, if this object is set to 'true', the digits will be reported to MGC only, the digits will not be sent as regular voice or peer-to-peer packets in the bearer. When MGC has requested digits, if this object is set to 'false', the digits will be reported to MGC as well as be sent in the bearer according to the value of cvapCodecConfigDtmfRelay in cvapCodecConfigTable. When MGC has not requested digits, this object will be ignored. The digits will be sent in the bearer according to the value of cvapCodecConfigDtmfRelay in cvapCodecConfigTable.")
cmedxProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileRowStatus.setDescription('When an entry is created, at least one of the objects in the entry has to be provided and the default value will be assigned to the rest of the objects.')
cmedxProfileOriginatingCotTx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 23), CMedxCotTones()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileOriginatingCotTx.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileOriginatingCotTx.setDescription('This object specifies the COT tone to be transmitted from originating gateway in the continuity test.')
cmedxProfileOriginatingCotRx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 24), CMedxCotTones()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileOriginatingCotRx.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileOriginatingCotRx.setDescription('This object specifies the COT tone to be received in originating gateway in the continuity test.')
cmedxProfileTerminatingCotTx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 25), CMedxCotTones()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileTerminatingCotTx.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileTerminatingCotTx.setDescription('This object specifies the COT tone to be transmitted from terminating gateway in the continuity test.')
cmedxProfileTerminatingCotRx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 26), CMedxCotTones()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileTerminatingCotRx.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileTerminatingCotRx.setDescription('This object specifies the COT tone to be received in terminating gateway in the continuity test.')
cmedxProfileComfortNoiseGenerate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("simple", 2), ("g711A2", 3))).clone('simple')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmedxProfileComfortNoiseGenerate.setStatus('current')
if mibBuilder.loadTexts: cmedxProfileComfortNoiseGenerate.setDescription('This object specifies the type of comfort noise generation: (1) none: No comfort noise generation applied (2) simple: Cisco Proprietary comfort noise generation (3) g711A2: ITU G.711 Appendix II compliant ')
cmedxCallReduceControlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4), )
if mibBuilder.loadTexts: cmedxCallReduceControlTable.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceControlTable.setDescription('The MIB objects in this table are used to control the rate at which call attempts are made by Media gateway controller on this Media Gateway. ')
cmedxCallReduceControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"))
if mibBuilder.loadTexts: cmedxCallReduceControlEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceControlEntry.setDescription('An entry in this table contains the control parameters that indicate the frequency and number of notifications sent to MGC in the event congestion is detected on MG. ')
cmedxCallCongEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxCallCongEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxCallCongEnabled.setDescription("This object controls if the H.248 congestion package (H.248.10) and its associated features should be enabled for the media gateway. If this object is set to 'false', then the following MIB objects and MIB table will be ignored: cmedxCallRenotifInterval cmedxCRRNumOfLevel cmedxCurrentCRR cmedxCrrNotifyState cmedxCrrNotifyEnabled cmedxCallReduceLevelTable. ")
cmedxCallRenotifInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxCallRenotifInterval.setStatus('current')
if mibBuilder.loadTexts: cmedxCallRenotifInterval.setDescription("This object specifies the interval of the congestion renotification from the media gateway to the MGC. In the event of congestion on the Media Gateway, gateway generates an event towards MGC. Using this message, MG requests percentage reduction in the rate of calls that MGC is attempting towards MG. After sending this indication, MG starts a timer based on 'cmedxCallRenotifInterval'. At this timer expires, MG will re-send the message to MGC indicating that it is still in congested state. If MGC does not receive another notification, MGC will resume to the original call rate. If MGC requires re-notifications, it is user's responsibility to set the value of this MIB object on MG appropriately. The value of this object should be set such that it factors into the network delay and re-notification timer (similar to this MIB object) configured on MGC. The zero means MGC does not require re-notifications, MGC will keep CallReduceRate until receive another notification from the Media Gateway. ")
cmedxCRRNumOfLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxCRRNumOfLevel.setStatus('current')
if mibBuilder.loadTexts: cmedxCRRNumOfLevel.setDescription("This objects specifies the number of level corresponding to which a different call reduction rate notification is generated towards MGC. Each level has a different call reduction rate, the CRR information is stored on cmedxCallReduceLevelTabl. And The table size equals to the value of 'cmedxCRRNumOfLevel'. ")
cmedxCurrentCRR = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCurrentCRR.setStatus('current')
if mibBuilder.loadTexts: cmedxCurrentCRR.setDescription('This object indicates the current percentage reduction in the rate of calls that MGC is attempting towards MG. ')
cmedxCrrNotifyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCrrNotifyState.setStatus('current')
if mibBuilder.loadTexts: cmedxCrrNotifyState.setDescription("This object indicates the current gateway congestion notification state. The value of 'true' means the gateway will notify MGC when the gateway is congested. The value of 'false' means the gateway won't notify MGC when the gateway is congested. This object is 'true' when cmedxCallCongEnabled is set to 'true' and at least one of MGCs enabled the CRR notification (cmedxCrrNotifyEnabled is not 0).")
cmedxCrrNotifyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCrrNotifyEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxCrrNotifyEnabled.setDescription('This object indicates the bit map of the H248 association index (cmedGatewayLinkId) in which the gateway congestion notification is enabled. The MSB (most significant bit) is the association index 1. A 1-bit indicates the gateway congestion notification is enabled in this H248 association. A 0-bit indicates it is disabled.')
cmedxCurrentCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acceptCall", 1), ("dropCall", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCurrentCallState.setStatus('current')
if mibBuilder.loadTexts: cmedxCurrentCallState.setDescription('This object indicates the state of the gateway in accepting the incoming new call. acceptCall - the incoming new call will be processed. dropCall - the incoming new call will be droped due to the resources congested.')
cmedxCallReduceLevelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 5), )
if mibBuilder.loadTexts: cmedxCallReduceLevelTable.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceLevelTable.setDescription('The table presents mapping between a level and corresponding call reduction rate.')
cmedxCallReduceLevelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxCallReduceLevelNum"))
if mibBuilder.loadTexts: cmedxCallReduceLevelEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceLevelEntry.setDescription("The number of entry on this table is determined by the MIB object 'cmedxCRRNumOfLevel'.")
cmedxCallReduceLevelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: cmedxCallReduceLevelNum.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceLevelNum.setDescription("The index starts from 1, and the maximum index equals to 'cmedxCRRNumOfLevel'.")
cmedxCallReduceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxCallReduceRate.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceRate.setDescription('This object indicates call reduction rate (CRR) for a given call reduce rate level. The default value of this object is based on the formula: level 1: 100 other level: 100 - ((80/(nol - 1)) * (level - 1)) Here: nol : number of level(cmedxCRRNumOfLevel) level: specific level (cmedxCallReduceLevelNum) User can configure this object, the rule is: level x > level x+1 ')
cmedxOverloadControlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 7), )
if mibBuilder.loadTexts: cmedxOverloadControlTable.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadControlTable.setDescription('This table is used to configure the media gateway overload control parameters specified in H.248.11 package.')
cmedxOverloadControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"))
if mibBuilder.loadTexts: cmedxOverloadControlEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadControlEntry.setDescription('An entry in this table contains the overload control parameters of the media gateway.')
cmedxOverloadControlEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 7, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxOverloadControlEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadControlEnabled.setDescription("This object controls if the H.248 overload package (H.248.11) and its associated features should be enabled for the media gateway. If this object is set to 'false', then the following MIB objects and MIB table will be ignored: cmedxOverloadNotifyState cmedxOverloadNotifyEnabled.")
cmedxOverloadNotifyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 7, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadNotifyState.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadNotifyState.setDescription("This object indicates the current gateway overload notification state. The value of 'true' means the gateway will notify MGC when the gateway is overloaded. The value of 'false' means the gateway won't notify MGC when the gateway is overloaded. This object is 'true' when cmedxOverloadControlEnabled is set to 'true' and at least one of MGCs enabled gateway overload notification (cmedxOverloadNotifyEnabled is not 0).")
cmedxOverloadNotifyEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadNotifyEnabled.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadNotifyEnabled.setDescription('This object indicates the bit map of the H248 association index (cmedGatewayLinkId) in which the gateway overload notification is enabled. The MSB (most significant bit) is the association index 1. A 1-bit indicates the gateway overload notification is enabled in this H248 association. A 0-bit indicates it is disabled.')
cmedxCodecNegotiationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 6), )
if mibBuilder.loadTexts: cmedxCodecNegotiationTable.setStatus('current')
if mibBuilder.loadTexts: cmedxCodecNegotiationTable.setDescription('This table contains configuration information for different type of CODEC negotiation of calls which include voice call over adaptation layer AAL1 and AAL5. If the value lclLcoRcd(5), lclRcdLco(6) of cvapCodecNegotiationOption is used as CODEC negotiation option, the CODEC list configuration information in this table will be used for CODEC negotiation.')
cmedxCodecNegotiationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxProfileIndex"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationCodec"))
if mibBuilder.loadTexts: cmedxCodecNegotiationEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxCodecNegotiationEntry.setDescription('An entry represents a CODEC rate supported for VoIP or VoATM with AAL1 or AAL5 application in the media gateway. A list of entries for all CODEC types supported in the media gateway are created by the agent when a cmedxProfileEntry is created.')
cmedxCodecNegotiationCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 6, 1, 1), CvcSpeechCoderRate())
if mibBuilder.loadTexts: cmedxCodecNegotiationCodec.setStatus('current')
if mibBuilder.loadTexts: cmedxCodecNegotiationCodec.setDescription('This object specifies the CODEC to be used in this profile.')
cmedxCodecNegotiationPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxCodecNegotiationPreference.setStatus('current')
if mibBuilder.loadTexts: cmedxCodecNegotiationPreference.setDescription('This object specified the preference configured by the user for each CODEC. Lower the number, higher the preference of the CODEC. If this object is set to 0, the corresponding CODEC will not be used in coded negotiation procedure. Initially, if the value of cmedxCodecNegotiationCodec is g711u, this object is set to 1, else this object is set to 0. For CODECs having the same preference, the entry with the lower index has higher precedence.')
cmedxGatewayStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 1), )
if mibBuilder.loadTexts: cmedxGatewayStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayStatsTable.setDescription('This table is extended from cmedGatewayStatsTable which contains additional control protocol related statistics of the media gateway link.')
cmedxGatewayStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 1, 1), )
cmedGatewayStatsEntry.registerAugmentions(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStatsEntry"))
cmedxGatewayStatsEntry.setIndexNames(*cmedGatewayStatsEntry.getIndexNames())
if mibBuilder.loadTexts: cmedxGatewayStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayStatsEntry.setDescription('Entry holding statistics about a group of media Gateway/signaling link pair')
cmedxGatewayLastEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxGatewayLastEvent.setStatus('current')
if mibBuilder.loadTexts: cmedxGatewayLastEvent.setDescription('The event code of the last event occurred on the link.')
cmedxCommandStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2), )
if mibBuilder.loadTexts: cmedxCommandStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxCommandStatsTable.setDescription('This table provides the H.248 Command related statistics for the media gateway link. The H.248 protocol provides commands for manipulating the logical entities of the protocol connection model, Contexts and Terminations. For example, Commands exist to add Terminations to a Context, modify Terminations, subtract Terminations from a Context, and audit properties of Contexts or Terminations. Most commands are for the specific use of the Media Gateway Controller (MGC) as command initiator in controlling Media Gateways (MG) as command responders. The exceptions are the Notify and ServiceChange commands: Notify is sent from Media Gateway to Media Gateway Controller, and ServiceChange may be sent by either entity.')
cmedxCommandStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayLinkId"))
if mibBuilder.loadTexts: cmedxCommandStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxCommandStatsEntry.setDescription('The system creates one entry for each media gateway link when it is created.')
cmedxCmdNumAddFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAddFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAddFails.setDescription('Total number of cumulative ADD commands failed in the media gateway link.')
cmedxCmdNumAddSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAddSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAddSucceeds.setDescription('Total number of cumulative ADD command succeeded in the media gateway link.')
cmedxCmdNumSubtractFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSubtractFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSubtractFails.setDescription('Total number of cumulative SUBTRACT commands failed in the media gateway link.')
cmedxCmdNumSubtractSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSubtractSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSubtractSucceeds.setDescription('Total number of cumulative SUBTRACT commands succeeded in the media gateway link.')
cmedxCmdNumMoveFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumMoveFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumMoveFails.setDescription('Total number of cumulative MOVE commands failed in the media gateway link.')
cmedxCmdNumMoveSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumMoveSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumMoveSucceeds.setDescription('Total number of cumulative MOVE commands succeeded in the media gateway link.')
cmedxCmdNumModifyFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumModifyFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumModifyFails.setDescription('Total number of cumulative MODIFY commands failed in the media gateway link.')
cmedxCmdNumModifySucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumModifySucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumModifySucceeds.setDescription('Total number of cumulative MODIFY commands succeeded in the media gateway link.')
cmedxCmdNumAuditValFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditValFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditValFails.setDescription('Total number of cumulative AUDIT VALUE commands failed in the media gateway link.')
cmedxCmdNumAuditValSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditValSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditValSucceeds.setDescription('Total number of cumulative AUDIT VALUE commands succeeded in the media gateway link.')
cmedxCmdNumAuditCapFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditCapFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditCapFails.setDescription('Total number of cumulative AUDIT CAPABILITY commands failed in the media gateway link.')
cmedxCmdNumAuditCapSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditCapSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditCapSucceeds.setDescription('Total number of cumulative AUDIT CAPABILITY commands succeeded in the media gateway link.')
cmedxCmdNumNotifyFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumNotifyFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumNotifyFails.setDescription('Total number of cumulative NOTIFY commands failed to respond from MGC.')
cmedxCmdNumNotifySucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumNotifySucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumNotifySucceeds.setDescription('Total number of cumulative NOTIFY commands successfully responded from the MGC.')
cmedxCmdNumSrvChgFromMgcFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcFails.setDescription('Total number of cumulative ServiceChange commands from MGC to MG failed in the media gateway link.')
cmedxCmdNumSrvChgFromMgcSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcSucceeds.setDescription('Total number of cumulative ServiceChange commands from MGC to MG succeeded in the media gateway link.')
cmedxCmdNumSrvChgFromMgFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgFails.setDescription('Total number of cumulative ServiceChange commands from MG to MGC failed in MGC.')
cmedxCmdNumSrvChgFromMgSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgSucceeds.setDescription('Total number of cumulative ServiceChange commands from MG to MGC succeeded in MGC.')
cmedxCmdTotalFails = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdTotalFails.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdTotalFails.setDescription('Total number of commands failed in the media gateway link. ')
cmedxCmdTotalSucceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdTotalSucceeds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdTotalSucceeds.setDescription('Total number of commands succeeded in the media gateway link. ')
cmedxCmdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdTotal.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdTotal.setDescription('Total number of failed and successful commands in the media gateway link. ')
cmedxCmdNumAddPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAddPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAddPendings.setDescription('Total number of cumulative ADD commands remain pending in the media gateway link. ')
cmedxCmdNumSubtractPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSubtractPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSubtractPendings.setDescription('Total number of cumulative SUBTRACT commands remain pending in the media gateway link. ')
cmedxCmdNumMovePendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumMovePendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumMovePendings.setDescription('Total number of cumulative MOVE commands remain pending in the media gateway link. ')
cmedxCmdNumModifyPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumModifyPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumModifyPendings.setDescription('Total number of cumulative MODIFY commands remain pending in the media gateway link. ')
cmedxCmdNumAuditValPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditValPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditValPendings.setDescription('Total number of cumulative AUDIT VALUE commands remain pending in the media gateway link. ')
cmedxCmdNumAuditCapPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumAuditCapPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumAuditCapPendings.setDescription('Total number of cumulative AUDIT CAPABILITY commands remain pending in the media gateway link.')
cmedxCmdNumNotifyPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumNotifyPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumNotifyPendings.setDescription('Total number of cumulative NOTIFY commands remain pending in response from MGC.')
cmedxCmdNumSrvChgFromMgcPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgcPendings.setDescription('Total number of cumulative ServiceChange commands from MGC to MG remain pending in the media gateway link.')
cmedxCmdNumSrvChgFromMgPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumSrvChgFromMgPendings.setDescription('Total number of cumulative ServiceChange commands from MG to MGC remain pending in MGC.')
cmedxCmdTotalPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdTotalPendings.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdTotalPendings.setDescription('Total number of commands remain pending in the media gateway link. ')
cmedxContextStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3), )
if mibBuilder.loadTexts: cmedxContextStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxContextStatsTable.setDescription('This table provides the H.248 Context related statistics for the media gateway link.')
cmedxContextStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayLinkId"))
if mibBuilder.loadTexts: cmedxContextStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxContextStatsEntry.setDescription('The system creates one entry for each media gateway link when it is created.')
cmedxCntxNumActiveContexts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxNumActiveContexts.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxNumActiveContexts.setDescription('The current number of active contexts in the media gateway link.')
cmedxCntxPeakNumActiveContexts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxPeakNumActiveContexts.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxPeakNumActiveContexts.setDescription('Peak number of active contexts in the media gateway link.')
cmedxCntxNumContextAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxNumContextAllocated.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxNumContextAllocated.setDescription('Total number of contexts has been allocated in the media gateway link.')
cmedxCntxNumContextFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxNumContextFreed.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxNumContextFreed.setDescription('Total number of contexts has been freed in the media gateway link.')
cmedxCntxShortestContextLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxShortestContextLife.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxShortestContextLife.setDescription('The shortest life span for the contexts in the media gateway link.')
cmedxCntxAverageContextLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxAverageContextLife.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxAverageContextLife.setDescription('The average life span for the contexts in the media gateway link.')
cmedxCntxLongestContextLife = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxLongestContextLife.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxLongestContextLife.setDescription('The longest life span for the contexts in the media gateway link.')
cmedxCntxNumCntxMoreThan2Terms = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCntxNumCntxMoreThan2Terms.setStatus('current')
if mibBuilder.loadTexts: cmedxCntxNumCntxMoreThan2Terms.setDescription('The number of contexts having more than 2 terminations in the media gateway link.')
cmedxPhysicalTermStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4), )
if mibBuilder.loadTexts: cmedxPhysicalTermStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxPhysicalTermStatsTable.setDescription('This table contains statistics related to physical terminations in a media gateway.')
cmedxPhysicalTermStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4, 1), )
cmedTerminationsEntry.registerAugmentions(("CISCO-MEGACO-EXT-MIB", "cmedxPhysicalTermStatsEntry"))
cmedxPhysicalTermStatsEntry.setIndexNames(*cmedTerminationsEntry.getIndexNames())
if mibBuilder.loadTexts: cmedxPhysicalTermStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxPhysicalTermStatsEntry.setDescription('Each entry contains the statistics for a physical termination in the media gateway.')
cmedxPhyTermStatsNumAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxPhyTermStatsNumAdds.setStatus('current')
if mibBuilder.loadTexts: cmedxPhyTermStatsNumAdds.setDescription('Number of total ADD commands on this physical termination.')
cmedxPhyTermStatsNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxPhyTermStatsNumFailures.setStatus('current')
if mibBuilder.loadTexts: cmedxPhyTermStatsNumFailures.setDescription('Number of total command failures on this physical termination.')
cmedxPhyTermStatsOosFromMgcs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxPhyTermStatsOosFromMgcs.setStatus('current')
if mibBuilder.loadTexts: cmedxPhyTermStatsOosFromMgcs.setDescription('Number of total out of service initiated from MGC on this physical termination.')
cmedxPhyTermStatsOosFromOams = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxPhyTermStatsOosFromOams.setStatus('current')
if mibBuilder.loadTexts: cmedxPhyTermStatsOosFromOams.setDescription('Number of total out of service initiated from OAM (Operation Administration Management, either MG or NMS) on this physical termination.')
cmedxEphemeralTermStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 5), )
if mibBuilder.loadTexts: cmedxEphemeralTermStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxEphemeralTermStatsTable.setDescription('This table contains statistics related to ephemeral terminations.')
cmedxEphemeralTermStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxEphTermStatsType"))
if mibBuilder.loadTexts: cmedxEphemeralTermStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxEphemeralTermStatsEntry.setDescription('Each entry contains the statistics of all ephemeral terminations for the termination type.')
cmedxEphTermStatsType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 1), ("scn", 2), ("pdnRtp", 3), ("pdnAtmAal1", 4), ("pdnAtmAal2", 5))))
if mibBuilder.loadTexts: cmedxEphTermStatsType.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermStatsType.setDescription('This object specifies the statistics of the termination type to be retrieved. all (1) - Statistics for all ephemeral termination types. scn (2) - Statistics for SCN/DS terminations pdnRtp (3) - Statistics for PDN terminations of RTP type. pdnAtmAal1 (4) - Statistics for PDN terminations of ATM type with AAL1 adaptation layer. pdnAtmAal2 (5) - Statistics for PDN terminations of ATM type with AAL2 adaptation layer.')
cmedxEphTermStatsNumAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermStatsNumAdds.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermStatsNumAdds.setDescription('Number of total ADD commands has been initiated on this termination type.')
cmedxEphTermStatsNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermStatsNumFailures.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermStatsNumFailures.setDescription('Number of total command failures on this termination type.')
cmedxCommandProcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6), )
if mibBuilder.loadTexts: cmedxCommandProcStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxCommandProcStatsTable.setDescription('This table provides the statistics related to H.248 command processing on a media gateway link. ')
cmedxCommandProcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayLinkId"))
if mibBuilder.loadTexts: cmedxCommandProcStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxCommandProcStatsEntry.setDescription('The information in each entry is for a media gateway link. ')
cmedxCmdPhyTermAddRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 1), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeMin.setDescription('The minimum add response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermAddRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 2), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeMax.setDescription('The maximum add response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermAddRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 3), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeAvg.setDescription('The average add response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermAddRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermAddRespTimeCount.setDescription('The number of add responses for physical terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdPhyTermModRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 5), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeMin.setDescription('The minimum modify response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermModRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 6), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeMax.setDescription('The maximum modify response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermModRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 7), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeAvg.setDescription('The average modify response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermModRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermModRespTimeCount.setDescription('The number of modify responses for physical terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdPhyTermSubRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 9), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeMin.setDescription('The minimum subtract response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermSubRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 10), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeMax.setDescription('The maximum subtract response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermSubRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 11), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeAvg.setDescription('The average subtract response time (ms) for physical terminations on a media gateway link. ')
cmedxCmdPhyTermSubRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdPhyTermSubRespTimeCount.setDescription('The number of subtract responses for physical terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdEphTermAddRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 13), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeMin.setDescription('The minimum add response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermAddRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 14), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeMax.setDescription('The maximum add response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermAddRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 15), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeAvg.setDescription('The average add response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermAddRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermAddRespTimeCount.setDescription('The number of add responses for ephemeral terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdEphTermModRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 17), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeMin.setDescription('The minimum modify response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermModRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 18), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeMax.setDescription('The maximum modify response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermModRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 19), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeAvg.setDescription('The average modify response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermModRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermModRespTimeCount.setDescription('The number of modify responses for ephemeral terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdEphTermSubRespTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 21), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeMin.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeMin.setDescription('The minimum subtract response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermSubRespTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 22), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeMax.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeMax.setDescription('The maximum subtract response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermSubRespTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 23), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeAvg.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeAvg.setDescription('The average subtract response time (ms) for ephemeral terminations on a media gateway link. ')
cmedxCmdEphTermSubRespTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeCount.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdEphTermSubRespTimeCount.setDescription('The number of subtract responses for ephemeral terminations which have been sent during the statistics interval on a media gateway link. ')
cmedxCmdNumInProgCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdNumInProgCmds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdNumInProgCmds.setDescription('The number of in-progress commands on a media gateway link.')
cmedxCmdMaxInProgCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdMaxInProgCmds.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdMaxInProgCmds.setDescription('The maximum number of in-progress commands on a media gateway link. ')
cmedxCmdSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 6, 1, 27), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxCmdSinceLastReset.setStatus('current')
if mibBuilder.loadTexts: cmedxCmdSinceLastReset.setDescription('The elapsed time (in seconds) from the last periodic reset. All (non-accumulator) statistic objects were zeroed on the last reset. ')
cmedxOverloadStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7), )
if mibBuilder.loadTexts: cmedxOverloadStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadStatsTable.setDescription('This table contains statistics related to gateway overload control (H.248.11).')
cmedxOverloadStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"))
if mibBuilder.loadTexts: cmedxOverloadStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadStatsEntry.setDescription('Each entry contains the statistics of gateway overload control.')
cmedxOverloadEnterCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1, 1), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadEnterCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadEnterCounts.setDescription('The number of times that the gateway enters the overload condition because of any of CAC monitoring resources has exceeded the medium threshold specified by the value of ccacSysRpMedThreshold since the last counter reset.')
cmedxOverloadExitCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1, 2), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadExitCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadExitCounts.setDescription('The number of times that the gateway exits the overload condition when all of CAC monitoring resources have fallen below the low threshold specified by the value of ccacSysRpLowThreshold since the last counter reset.')
cmedxOverloadCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("overload", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadCurrentState.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadCurrentState.setDescription('This object indicates the current overload state of the gateway. normal - In normal condition. overload - In overload condition. ')
cmedxOverloadLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadLastResetTime.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadLastResetTime.setDescription("This object contains the value of sysUpTime when the last counter reset occurred by setting cmedxOverloadCountersClear to 'true'. If no counter reset has occurred since the last time the media gateway reboot, this object will contain value of zero.")
cmedxOverloadCountersClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 7, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxOverloadCountersClear.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadCountersClear.setDescription("When this object is to set value of true(1), all statistics counters in the table cmedxOverloadStatsTable will be reset to zero. Setting this object to a value of false(2) has no implication. This object will always return 'false' upon any SNMP get operation.")
cmedxOverloadResourceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8), )
if mibBuilder.loadTexts: cmedxOverloadResourceStatsTable.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadResourceStatsTable.setDescription('This table contains the statistics of the resource utilization when the gateway enters overload condition.')
cmedxOverloadResourceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-IETF-MEGACO-MIB", "cmedGatewayId"), (0, "CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsResourceIndex"))
if mibBuilder.loadTexts: cmedxOverloadResourceStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadResourceStatsEntry.setDescription('Each entry contains the utilization statistics of the resource when the gateway is overloaded.')
cmedxOverloadRsResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)))
if mibBuilder.loadTexts: cmedxOverloadRsResourceIndex.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsResourceIndex.setDescription('This object uniquely identifies the utilization of the resource is monitored for the gateway overload. The value of 0 is to sum the individual statistical counter for all the monitored resources.')
cmedxOverloadRsHighCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 2), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadRsHighCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsHighCounts.setDescription('The accumulated number of times that the utilization of the resource is above the high threshold specified by ccacSysRpHighThreshold when the gateway enters the overload condition since the last counter reset.')
cmedxOverloadRsMedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 3), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadRsMedCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsMedCounts.setDescription('The accumulated number of times that the utilization of the resource is above the medium threshold specified by ccacSysRpMedThreshold when the gateway enters the overload condition since the last counter reset.')
cmedxOverloadRsLowCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 4), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadRsLowCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsLowCounts.setDescription('The accumulated number of times that the utilization of the resource is above the low threshold specified by ccacSysRpLowThreshold when the gateway enters the overload condition since the last counter reset.')
cmedxOverloadContributorCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 5), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadContributorCounts.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadContributorCounts.setDescription('The accumulated number of times the CAC monitoring resource causes the gateway entering the overload condition since the last counter reset.')
cmedxOverloadRsLastResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxOverloadRsLastResetTime.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsLastResetTime.setDescription("This object contains the value of sysUpTime when the last counter reset occurred by setting cmedxOverloadRsCountersClear to 'true'. If no counter reset has occurred since the last time the media gateway reboot, this object will contain value of zero.")
cmedxOverloadRsCountersClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 8, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxOverloadRsCountersClear.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadRsCountersClear.setDescription("When this object is to set value of true(1), all statistics counters in the table cmedxOverloadResourceStatsTable will be reset to zero. Setting this object to a value of false(2) has no implication. This object will always return 'false' upon any SNMP get operation.")
cmedxEphemeralTermStatsInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9), )
if mibBuilder.loadTexts: cmedxEphemeralTermStatsInfoTable.setStatus('current')
if mibBuilder.loadTexts: cmedxEphemeralTermStatsInfoTable.setDescription('This table contains statistics information related to ephemeral terminations.')
cmedxEphemeralTermStatsInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1), ).setIndexNames((0, "CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoStatsIndex"))
if mibBuilder.loadTexts: cmedxEphemeralTermStatsInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cmedxEphemeralTermStatsInfoEntry.setDescription('Each entry contains the ephemeral termination statistics inforamtion for a specific level. ')
cmedxEphTermInfoStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cmedxEphTermInfoStatsIndex.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoStatsIndex.setDescription('This object uniquely identifies the entry to store ephemeral termination statistics information. ')
cmedxEphTermInfoStatsIndexType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bpvc", 1), ("gw", 2), ("vgw", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoStatsIndexType.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoStatsIndexType.setDescription("This object is used to indicate index ('cmedxEphTermInfoStatsIndex') type. ")
cmedxEphTermInfoNumTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 3), Counter32SinceReset()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoNumTerm.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoNumTerm.setDescription('The accumulated number of ephemeral termination. ')
cmedxEphTermInfoNumInUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoNumInUsed.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoNumInUsed.setDescription('The number of ephemeral termination currently in use. ')
cmedxEphTermInfoMaxNumInUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoMaxNumInUsed.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoMaxNumInUsed.setDescription('The high watermark of number of ephemeral termination in use. ')
cmedxEphTermInfoMinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 6), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoMinDuration.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoMinDuration.setDescription('The minimum duration of ephemeral termination. ')
cmedxEphTermInfoMaxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 7), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoMaxDuration.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoMaxDuration.setDescription('The maximum duration of ephemeral termination. ')
cmedxEphTermInfoAvgDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 8), Gauge32()).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoAvgDuration.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoAvgDuration.setDescription('The average duration of ephemeral termination. ')
cmedxEphTermInfoCounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmedxEphTermInfoCounterClear.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoCounterClear.setDescription("When this object is set to value of true(1), all statistics counters with type of Counter32SinceReset in this table will be reset to zero. Setting this object to a value of false(2) has no implication. This object will always return 'false' upon any SNMP get operation. ")
cmedxEphTermInfoSinceLastClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 10), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoSinceLastClear.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoSinceLastClear.setDescription("The elapsed time from the last counter clear. The following objects are set to zero on the last counter clear: 'cmedxEphTermInfoNumTerm' ")
cmedxEphTermInfoSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 11), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoSinceLastReset.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoSinceLastReset.setDescription("The elapsed time from the last reset. The following objects are set to zero on the last reset: 'cmedxEphTermInfoNumInUsed' 'cmedxEphTermInfoMaxNumInUsed' 'cmedxEphTermInfoMinDuration' 'cmedxEphTermInfoMaxDuration' 'cmedxEphTermInfoNumFreed' ")
cmedxEphTermIndexInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermIndexInfo.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermIndexInfo.setDescription("This object is used to store the index ('cmedxEphTermInfoStatsIndex') related information. Example: for bpvc ('cmedxEphTermInfoStatsIndexType'), the vpi and vci are stored in this object. The value zero means this object should be ignored. ")
cmedxEphTermInfoNumFreed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 104, 1, 2, 9, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmedxEphTermInfoNumFreed.setStatus('current')
if mibBuilder.loadTexts: cmedxEphTermInfoNumFreed.setDescription('Total number of ephemeral terminations that have been freed. ')
ciscoMegacoExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 2))
cmedxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1))
cmedxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2))
cmedxCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1, 1)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxConfigGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxCompliance = cmedxCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxCompliance.setDescription('Compliance statement for entities which implement the CiSCO-MEGACO-EXT-MIB. This has been replaced by cmedxComplianceRev1')
cmedxComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1, 2)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxConfigGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxConfigExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxServiceStateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxComplianceRev1 = cmedxComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxComplianceRev1.setDescription('Compliance statement for entities which implement the CiSCO-MEGACO-EXT-MIB. This has been replaced by cmedxComplianceRev2.')
cmedxComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1, 3)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxConfigGroupRev1"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxConfigExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxServiceStateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateNotifyGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadControlGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphemeralTermStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxComplianceRev2 = cmedxComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxComplianceRev2.setDescription('Compliance statement for entities which implement the CiSCO-MEGACO-EXT-MIB.')
cmedxComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1, 4)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxConfigGroupRev2"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsGroupRev1"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxConfigExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxServiceStateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateNotifyGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadControlGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphemeralTermStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxComplianceRev3 = cmedxComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxComplianceRev3.setDescription('Compliance statement for entities which implement the CiSCO-MEGACO-EXT-MIB.')
cmedxComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 1, 5)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxConfigGroupRev2"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsGroupRev1"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxConfigDomainInfoGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxConfigExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxServiceStateGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRateNotifyGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadControlGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadStatsGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxStatsExtGroup"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphemeralTermStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxComplianceRev4 = cmedxComplianceRev4.setStatus('current')
if mibBuilder.loadTexts: cmedxComplianceRev4.setDescription('Compliance statement for entities which implement the CiSCO-MEGACO-EXT-MIB.')
cmedxConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 1)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcGroupIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayIpAddressIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayAssociationId"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxTermsInContext"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayProvisionRespTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayNumConnRetries"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxWaitingDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRestartDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRespRetentionTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInitialRtt"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInactivityTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayHeaderAddrType"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayDownServiceDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcAddress"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcDomain"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcPortNum"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeReason"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermType"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeProfileId"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypePkgIds"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeRowStatus"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfilePlayCpToneInterDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfDigitOnDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfPauseDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot1Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot2Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInitiateCotDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRespCotMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongCpToneDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongDigitDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelTail"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInGainControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileOutAttnControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoAal2VadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmBearerType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalPartialFill"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileSuppressBearerDigit"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxConfigGroup = cmedxConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxConfigGroup.setDescription('This group contains of all the configuration extended information for a media gateway.')
cmedxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 2)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayLastEvent"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAddFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAddSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSubtractFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSubtractSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumMoveFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumMoveSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumModifyFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumModifySucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditValFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditValSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditCapFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditCapSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumNotifyFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumNotifySucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgcFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgcSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumActiveContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxPeakNumActiveContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumContextAllocated"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumContextFreed"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxShortestContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxAverageContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxLongestContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumCntxMoreThan2Terms"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsNumAdds"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsNumFailures"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsOosFromMgcs"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsOosFromOams"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermStatsNumAdds"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermStatsNumFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxStatsGroup = cmedxStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxStatsGroup.setDescription('This group contains of all the statistics information for the statistics in a media gateway.')
cmedxCallReduceRateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 3)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxCallCongEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallRenotifInterval"), ("CISCO-MEGACO-EXT-MIB", "cmedxCRRNumOfLevel"), ("CISCO-MEGACO-EXT-MIB", "cmedxCurrentCRR"), ("CISCO-MEGACO-EXT-MIB", "cmedxCallReduceRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxCallReduceRateGroup = cmedxCallReduceRateGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceRateGroup.setDescription('This group contains objects used to manage and/or monitor the rate at which call attempts are made by Media gateway controller on this Media Gateway. ')
cmedxCodecNegotiationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 4)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxCodecNegotiationPreference"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxCodecNegotiationGroup = cmedxCodecNegotiationGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxCodecNegotiationGroup.setDescription('This group contains objects used for CODEC negotiation between MG and MGC.')
cmedxConfigExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 5)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayDynamicTpktVersion"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxCommandMsgSize"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxReplyMsgSize"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileOriginatingCotTx"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileOriginatingCotRx"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileTerminatingCotTx"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileTerminatingCotRx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxConfigExtGroup = cmedxConfigExtGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxConfigExtGroup.setDescription('This group contains of the objects related to Megaco message size provisioning and BellCore standard COT a media gateway.')
cmedxServiceStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 6)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayAdminAction"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayServiceState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxServiceStateGroup = cmedxServiceStateGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxServiceStateGroup.setDescription('This group contains of the objects to change the service state of a media gateway.')
cmedxConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 7)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcGroupIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayIpAddressIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayAssociationId"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxTermsInContext"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayProvisionRespTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayNumConnRetries"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxWaitingDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRestartDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRespRetentionTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInitialRtt"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInactivityTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayHeaderAddrType"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayDownServiceDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcAddress"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcDomain"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcPortNum"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeReason"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermType"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeProfileId"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypePkgIds"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeRowStatus"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfilePlayCpToneInterDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfDigitOnDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfPauseDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot1Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot2Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInitiateCotDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRespCotMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongCpToneDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongDigitDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelTail"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInGainControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileOutAttnControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoAal2VadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmBearerType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalPartialFill"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileSuppressBearerDigit"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRowStatus"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileComfortNoiseGenerate"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySctpAssocId"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySrvChgProfile"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySrvChgProfileVer"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMsgTokenType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxConfigGroupRev1 = cmedxConfigGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: cmedxConfigGroupRev1.setDescription('This group contains of all the configuration extended information for a media gateway.')
cmedxCallReduceRateNotifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 8)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxCrrNotifyState"), ("CISCO-MEGACO-EXT-MIB", "cmedxCrrNotifyEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxCurrentCallState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxCallReduceRateNotifyGroup = cmedxCallReduceRateNotifyGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxCallReduceRateNotifyGroup.setDescription('This group contains objects used for H.248.10 congestion control notification.')
cmedxOverloadControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 9)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxOverloadControlEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadNotifyState"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadNotifyEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxOverloadControlGroup = cmedxOverloadControlGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadControlGroup.setDescription('This group contains objects used for H.248.11 overload control package.')
cmedxOverloadStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 10)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxOverloadEnterCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadExitCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadCurrentState"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadLastResetTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadCountersClear"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsHighCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsMedCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsLowCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadContributorCounts"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsLastResetTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxOverloadRsCountersClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxOverloadStatsGroup = cmedxOverloadStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxOverloadStatsGroup.setDescription('This group contains objects used for the statistics of H.248.11 overload control.')
cmedxStatsExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 11)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxCmdTotalFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdTotalSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdTotal"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdTotalPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermAddRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermAddRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermAddRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermAddRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermModRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermModRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermModRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermModRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermSubRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermSubRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermSubRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdPhyTermSubRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermAddRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermAddRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermAddRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermAddRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermModRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermModRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermModRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermModRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermSubRespTimeMin"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermSubRespTimeMax"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermSubRespTimeAvg"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdEphTermSubRespTimeCount"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumInProgCmds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdMaxInProgCmds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdSinceLastReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxStatsExtGroup = cmedxStatsExtGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxStatsExtGroup.setDescription('This group contains objects related to the extended statistics of H.248.')
cmedxEphemeralTermStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 12)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoStatsIndexType"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoNumTerm"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoNumInUsed"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoMaxNumInUsed"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoMinDuration"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoMaxDuration"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoAvgDuration"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoCounterClear"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoSinceLastClear"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoSinceLastReset"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermIndexInfo"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermInfoNumFreed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxEphemeralTermStatsGroup = cmedxEphemeralTermStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxEphemeralTermStatsGroup.setDescription('This group contains objects related to ephemeral termination statistics of H.248.')
cmedxConfigGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 13)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcGroupIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayIpAddressIndex"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayAssociationId"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxTermsInContext"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcExecTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayNumConnRetries"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMaxWaitingDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRestartDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayRespRetentionTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInitialRtt"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayInactivityTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayHeaderAddrType"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayDownServiceDelay"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcAddress"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcDomain"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayActiveMgcPortNum"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeReason"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayStateChangeMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermType"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeProfileId"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypePkgIds"), ("CISCO-MEGACO-EXT-MIB", "cmedxTermTypeRowStatus"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfilePlayCpToneInterDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfDigitOnDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDtmfPauseDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot1Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileCot2Frequency"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInitiateCotDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRespCotMethod"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongCpToneDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileDetectLongDigitDur"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileEchoCancelTail"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileInGainControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileOutAttnControl"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadEnabled"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoIpVadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileVoAal2VadTimer"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmBearerType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalPartialFill"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileAtmAalType"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileSuppressBearerDigit"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileRowStatus"), ("CISCO-MEGACO-EXT-MIB", "cmedxProfileComfortNoiseGenerate"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySctpAssocId"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySrvChgProfile"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewaySrvChgProfileVer"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMsgTokenType"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgProvisionRspTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcProvisionRspTime"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgOrigPendLimit"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayMgcOrigPendLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxConfigGroupRev2 = cmedxConfigGroupRev2.setStatus('current')
if mibBuilder.loadTexts: cmedxConfigGroupRev2.setDescription('This group contains of all the configuration extended information for a media gateway.')
cmedxStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 14)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayLastEvent"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAddFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAddSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSubtractFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSubtractSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumMoveFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumMoveSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumModifyFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumModifySucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditValFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditValSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditCapFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditCapSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumNotifyFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumNotifySucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgcFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgcSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgFails"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgSucceeds"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumActiveContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxPeakNumActiveContexts"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumContextAllocated"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumContextFreed"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxShortestContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxAverageContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxLongestContextLife"), ("CISCO-MEGACO-EXT-MIB", "cmedxCntxNumCntxMoreThan2Terms"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsNumAdds"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsNumFailures"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsOosFromMgcs"), ("CISCO-MEGACO-EXT-MIB", "cmedxPhyTermStatsOosFromOams"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermStatsNumAdds"), ("CISCO-MEGACO-EXT-MIB", "cmedxEphTermStatsNumFailures"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAddPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSubtractPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumMovePendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumModifyPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditValPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumAuditCapPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumNotifyPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgcPendings"), ("CISCO-MEGACO-EXT-MIB", "cmedxCmdNumSrvChgFromMgPendings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxStatsGroupRev1 = cmedxStatsGroupRev1.setStatus('current')
if mibBuilder.loadTexts: cmedxStatsGroupRev1.setDescription('This group contains of all the statistics information for the statistics in a media gateway.')
cmedxConfigDomainInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 104, 2, 2, 15)).setObjects(("CISCO-MEGACO-EXT-MIB", "cmedxGatewayDomainName"), ("CISCO-MEGACO-EXT-MIB", "cmedxGatewayCmbDnAndPortInMID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmedxConfigDomainInfoGroup = cmedxConfigDomainInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cmedxConfigDomainInfoGroup.setDescription('This group specifies the domain name and port configuration for a media gateway.')
mibBuilder.exportSymbols("CISCO-MEGACO-EXT-MIB", cmedxComplianceRev1=cmedxComplianceRev1, cmedxOverloadRsResourceIndex=cmedxOverloadRsResourceIndex, cmedxGatewayMaxCommandMsgSize=cmedxGatewayMaxCommandMsgSize, cmedxCmdNumSrvChgFromMgSucceeds=cmedxCmdNumSrvChgFromMgSucceeds, cmedxCrrNotifyEnabled=cmedxCrrNotifyEnabled, cmedxPhysicalTermStatsEntry=cmedxPhysicalTermStatsEntry, cmedxPhyTermStatsOosFromOams=cmedxPhyTermStatsOosFromOams, cmedxGatewayMaxTermsInContext=cmedxGatewayMaxTermsInContext, cmedxGatewayCmbDnAndPortInMID=cmedxGatewayCmbDnAndPortInMID, cmedxGatewayMgExecTime=cmedxGatewayMgExecTime, cmedxTermTypeRowStatus=cmedxTermTypeRowStatus, cmedxProfileTable=cmedxProfileTable, cmedxCmdPhyTermAddRespTimeCount=cmedxCmdPhyTermAddRespTimeCount, cmedxCallReduceRateNotifyGroup=cmedxCallReduceRateNotifyGroup, cmedxGatewayStatsTable=cmedxGatewayStatsTable, cmedxCallReduceControlTable=cmedxCallReduceControlTable, cmedxCallRenotifInterval=cmedxCallRenotifInterval, cmedxComplianceRev2=cmedxComplianceRev2, cmedxGatewayLastEvent=cmedxGatewayLastEvent, cmedxOverloadNotifyEnabled=cmedxOverloadNotifyEnabled, cmedxCodecNegotiationTable=cmedxCodecNegotiationTable, cmedxGatewayStateChangeMethod=cmedxGatewayStateChangeMethod, cmedxCmdSinceLastReset=cmedxCmdSinceLastReset, cmedxConfigGroupRev1=cmedxConfigGroupRev1, cmedxCmdNumModifySucceeds=cmedxCmdNumModifySucceeds, cmedxCntxShortestContextLife=cmedxCntxShortestContextLife, cmedxCmdNumNotifySucceeds=cmedxCmdNumNotifySucceeds, cmedxProfileDetectLongDigitDur=cmedxProfileDetectLongDigitDur, cmedxCmdNumAuditValFails=cmedxCmdNumAuditValFails, cmedxGatewayStatsEntry=cmedxGatewayStatsEntry, cmedxGatewayProvisionRespTime=cmedxGatewayProvisionRespTime, cmedxCmdNumSubtractSucceeds=cmedxCmdNumSubtractSucceeds, cmedxContextStatsTable=cmedxContextStatsTable, cmedxCmdEphTermAddRespTimeMax=cmedxCmdEphTermAddRespTimeMax, cmedxProfileVoIpVadTimer=cmedxProfileVoIpVadTimer, cmedxCmdPhyTermModRespTimeCount=cmedxCmdPhyTermModRespTimeCount, cmedxCmdPhyTermModRespTimeMax=cmedxCmdPhyTermModRespTimeMax, cmedxProfileComfortNoiseGenerate=cmedxProfileComfortNoiseGenerate, cmedxCntxAverageContextLife=cmedxCntxAverageContextLife, cmedxEphTermInfoNumInUsed=cmedxEphTermInfoNumInUsed, cmedxEphTermInfoNumFreed=cmedxEphTermInfoNumFreed, cmedxProfileInitiateCotDur=cmedxProfileInitiateCotDur, cmedxOverloadControlGroup=cmedxOverloadControlGroup, cmedxContextStatsEntry=cmedxContextStatsEntry, cmedxProfileEchoCancelTail=cmedxProfileEchoCancelTail, cmedxGatewayMaxReplyMsgSize=cmedxGatewayMaxReplyMsgSize, cmedxCmdNumAuditValSucceeds=cmedxCmdNumAuditValSucceeds, cmedxProfileCot1Frequency=cmedxProfileCot1Frequency, cmedxOverloadControlEnabled=cmedxOverloadControlEnabled, cmedxOverloadExitCounts=cmedxOverloadExitCounts, cmedxEphTermInfoSinceLastReset=cmedxEphTermInfoSinceLastReset, cmedxProfileOutAttnControl=cmedxProfileOutAttnControl, cmedxCallReduceRate=cmedxCallReduceRate, cmedxCntxNumActiveContexts=cmedxCntxNumActiveContexts, cmedxCommandStatsEntry=cmedxCommandStatsEntry, cmedxCmdPhyTermAddRespTimeAvg=cmedxCmdPhyTermAddRespTimeAvg, cmedxGatewaySrvChgProfileVer=cmedxGatewaySrvChgProfileVer, cmedxGatewayNumConnRetries=cmedxGatewayNumConnRetries, cmedxCmdNumMoveFails=cmedxCmdNumMoveFails, CH248Packages=CH248Packages, cmedxGatewayMaxContexts=cmedxGatewayMaxContexts, cmedxProfileAtmBearerType=cmedxProfileAtmBearerType, cmedxEphemeralTermStatsEntry=cmedxEphemeralTermStatsEntry, cmedxCmdNumSrvChgFromMgPendings=cmedxCmdNumSrvChgFromMgPendings, ciscoMegacoExtMIBObjects=ciscoMegacoExtMIBObjects, cmedxGatewayActiveMgcPortNum=cmedxGatewayActiveMgcPortNum, cmedxProfileOriginatingCotRx=cmedxProfileOriginatingCotRx, cmedxCmdTotalSucceeds=cmedxCmdTotalSucceeds, cmedxProfileInGainControl=cmedxProfileInGainControl, cmedxCmdEphTermSubRespTimeMax=cmedxCmdEphTermSubRespTimeMax, cmedxCmdNumAuditCapFails=cmedxCmdNumAuditCapFails, cmedxCntxNumCntxMoreThan2Terms=cmedxCntxNumCntxMoreThan2Terms, cmedxCmdMaxInProgCmds=cmedxCmdMaxInProgCmds, cmedxGatewayDomainName=cmedxGatewayDomainName, cmedxCmdPhyTermAddRespTimeMin=cmedxCmdPhyTermAddRespTimeMin, cmedxCallReduceLevelTable=cmedxCallReduceLevelTable, cmedxCallReduceControlEntry=cmedxCallReduceControlEntry, cmedxStatsGroupRev1=cmedxStatsGroupRev1, cmedxGatewayMgcProvisionRspTime=cmedxGatewayMgcProvisionRspTime, cmedxCurrentCRR=cmedxCurrentCRR, cmedxCallReduceLevelEntry=cmedxCallReduceLevelEntry, cmedxConfigGroupRev2=cmedxConfigGroupRev2, cmedxCmdNumMovePendings=cmedxCmdNumMovePendings, cmedxCRRNumOfLevel=cmedxCRRNumOfLevel, cmedxProfileOriginatingCotTx=cmedxProfileOriginatingCotTx, cmedxPhysicalTermStatsTable=cmedxPhysicalTermStatsTable, cmedxGatewayMgcGroupIndex=cmedxGatewayMgcGroupIndex, cmedxCommandStatsTable=cmedxCommandStatsTable, cmedxCmdNumAuditCapSucceeds=cmedxCmdNumAuditCapSucceeds, cmedxGatewayConfigTable=cmedxGatewayConfigTable, cmedxTermTypeProfileId=cmedxTermTypeProfileId, cmedxCmdNumSrvChgFromMgcFails=cmedxCmdNumSrvChgFromMgcFails, cmedxCmdPhyTermModRespTimeMin=cmedxCmdPhyTermModRespTimeMin, cmedxOverloadEnterCounts=cmedxOverloadEnterCounts, cmedxGatewayInitialRtt=cmedxGatewayInitialRtt, cmedxEphemeralTermStatsInfoTable=cmedxEphemeralTermStatsInfoTable, cmedxCallCongEnabled=cmedxCallCongEnabled, cmedxCmdTotal=cmedxCmdTotal, cmedxGatewaySctpAssocId=cmedxGatewaySctpAssocId, cmedxCmdNumModifyFails=cmedxCmdNumModifyFails, cmedxStatsGroup=cmedxStatsGroup, cmedxCmdNumSubtractPendings=cmedxCmdNumSubtractPendings, cmedxCmdPhyTermAddRespTimeMax=cmedxCmdPhyTermAddRespTimeMax, cmedxGatewayActiveMgcAddress=cmedxGatewayActiveMgcAddress, cmedxGatewayAdminAction=cmedxGatewayAdminAction, cmedxConfig=cmedxConfig, cmedxCallReduceLevelNum=cmedxCallReduceLevelNum, cmedxCmdNumAddFails=cmedxCmdNumAddFails, cmedxCmdNumSrvChgFromMgcPendings=cmedxCmdNumSrvChgFromMgcPendings, cmedxOverloadContributorCounts=cmedxOverloadContributorCounts, cmedxGatewayRestartDelay=cmedxGatewayRestartDelay, cmedxCmdPhyTermSubRespTimeCount=cmedxCmdPhyTermSubRespTimeCount, cmedxCmdEphTermModRespTimeAvg=cmedxCmdEphTermModRespTimeAvg, cmedxGroups=cmedxGroups, cmedxProfileCot2Frequency=cmedxProfileCot2Frequency, cmedxCmdEphTermSubRespTimeCount=cmedxCmdEphTermSubRespTimeCount, cmedxEphTermInfoSinceLastClear=cmedxEphTermInfoSinceLastClear, ciscoMegacoExtMIBNotifications=ciscoMegacoExtMIBNotifications, cmedxGatewayIpAddressIndex=cmedxGatewayIpAddressIndex, cmedxCntxNumContextAllocated=cmedxCntxNumContextAllocated, cmedxGatewayMgcOrigPendLimit=cmedxGatewayMgcOrigPendLimit, cmedxProfileTerminatingCotTx=cmedxProfileTerminatingCotTx, cmedxCmdNumNotifyFails=cmedxCmdNumNotifyFails, cmedxEphTermInfoMinDuration=cmedxEphTermInfoMinDuration, cmedxTermTypePkgIds=cmedxTermTypePkgIds, cmedxCrrNotifyState=cmedxCrrNotifyState, cmedxServiceStateGroup=cmedxServiceStateGroup, cmedxOverloadRsLowCounts=cmedxOverloadRsLowCounts, cmedxOverloadCurrentState=cmedxOverloadCurrentState, cmedxOverloadRsHighCounts=cmedxOverloadRsHighCounts, cmedxGatewayMgProvisionRspTime=cmedxGatewayMgProvisionRspTime, cmedxGatewaySrvChgProfile=cmedxGatewaySrvChgProfile, cmedxCmdNumInProgCmds=cmedxCmdNumInProgCmds, cmedxEphTermInfoMaxDuration=cmedxEphTermInfoMaxDuration, cmedxCompliance=cmedxCompliance, cmedxEphTermStatsType=cmedxEphTermStatsType, cmedxCallReduceRateGroup=cmedxCallReduceRateGroup, cmedxProfileDtmfPauseDur=cmedxProfileDtmfPauseDur, cmedxCodecNegotiationGroup=cmedxCodecNegotiationGroup, cmedxComplianceRev4=cmedxComplianceRev4, cmedxStats=cmedxStats, cmedxTermType=cmedxTermType, cmedxEphTermInfoStatsIndex=cmedxEphTermInfoStatsIndex, cmedxEphTermStatsNumFailures=cmedxEphTermStatsNumFailures, cmedxCompliances=cmedxCompliances, cmedxGatewayRespRetentionTime=cmedxGatewayRespRetentionTime, cmedxTermTypeId=cmedxTermTypeId, cmedxEphTermInfoMaxNumInUsed=cmedxEphTermInfoMaxNumInUsed, cmedxOverloadControlTable=cmedxOverloadControlTable, cmedxGatewayInactivityTime=cmedxGatewayInactivityTime, cmedxProfileRespCotMethod=cmedxProfileRespCotMethod, cmedxCmdNumAddPendings=cmedxCmdNumAddPendings, cmedxCommandProcStatsTable=cmedxCommandProcStatsTable, cmedxProfileEntry=cmedxProfileEntry, cmedxGatewayHeaderAddrType=cmedxGatewayHeaderAddrType, cmedxGatewayStateChangeReason=cmedxGatewayStateChangeReason, cmedxStatsExtGroup=cmedxStatsExtGroup, cmedxCmdTotalPendings=cmedxCmdTotalPendings, cmedxOverloadRsCountersClear=cmedxOverloadRsCountersClear, cmedxConfigDomainInfoGroup=cmedxConfigDomainInfoGroup, cmedxCommandProcStatsEntry=cmedxCommandProcStatsEntry, cmedxEphTermIndexInfo=cmedxEphTermIndexInfo, cmedxOverloadStatsTable=cmedxOverloadStatsTable, cmedxOverloadStatsEntry=cmedxOverloadStatsEntry, cmedxGatewayDownServiceDelay=cmedxGatewayDownServiceDelay, cmedxCntxLongestContextLife=cmedxCntxLongestContextLife, cmedxCmdPhyTermSubRespTimeMax=cmedxCmdPhyTermSubRespTimeMax, cmedxCmdTotalFails=cmedxCmdTotalFails, cmedxCmdNumSrvChgFromMgcSucceeds=cmedxCmdNumSrvChgFromMgcSucceeds, ciscoMegacoExtMIB=ciscoMegacoExtMIB, PYSNMP_MODULE_ID=ciscoMegacoExtMIB, cmedxGatewayDynamicTpktVersion=cmedxGatewayDynamicTpktVersion, cmedxProfileDtmfDigitOnDur=cmedxProfileDtmfDigitOnDur, cmedxCntxNumContextFreed=cmedxCntxNumContextFreed, cmedxCmdEphTermSubRespTimeMin=cmedxCmdEphTermSubRespTimeMin, cmedxOverloadCountersClear=cmedxOverloadCountersClear, cmedxCmdEphTermSubRespTimeAvg=cmedxCmdEphTermSubRespTimeAvg, cmedxGatewayServiceState=cmedxGatewayServiceState, cmedxCmdNumAuditValPendings=cmedxCmdNumAuditValPendings, cmedxEphemeralTermStatsInfoEntry=cmedxEphemeralTermStatsInfoEntry, cmedxCmdNumSrvChgFromMgFails=cmedxCmdNumSrvChgFromMgFails, cmedxProfileTerminatingCotRx=cmedxProfileTerminatingCotRx, cmedxEphTermStatsNumAdds=cmedxEphTermStatsNumAdds, cmedxCmdEphTermAddRespTimeCount=cmedxCmdEphTermAddRespTimeCount, cmedxOverloadRsMedCounts=cmedxOverloadRsMedCounts, cmedxCurrentCallState=cmedxCurrentCallState, cmedxCodecNegotiationCodec=cmedxCodecNegotiationCodec, cmedxOverloadResourceStatsEntry=cmedxOverloadResourceStatsEntry, cmedxProfileIndex=cmedxProfileIndex, cmedxOverloadResourceStatsTable=cmedxOverloadResourceStatsTable, cmedxGatewayAssociationId=cmedxGatewayAssociationId, cmedxConfigExtGroup=cmedxConfigExtGroup, cmedxProfileDetectLongCpToneDur=cmedxProfileDetectLongCpToneDur, cmedxEphemeralTermStatsGroup=cmedxEphemeralTermStatsGroup, cmedxProfilePlayCpToneInterDur=cmedxProfilePlayCpToneInterDur, cmedxProfileVoIpVadEnabled=cmedxProfileVoIpVadEnabled, cmedxGatewayConfigEntry=cmedxGatewayConfigEntry, cmedxCmdEphTermModRespTimeMax=cmedxCmdEphTermModRespTimeMax, cmedxCmdPhyTermSubRespTimeMin=cmedxCmdPhyTermSubRespTimeMin, cmedxOverloadStatsGroup=cmedxOverloadStatsGroup, cmedxCmdPhyTermSubRespTimeAvg=cmedxCmdPhyTermSubRespTimeAvg, cmedxPhyTermStatsNumFailures=cmedxPhyTermStatsNumFailures, cmedxConfigGroup=cmedxConfigGroup, cmedxProfileRowStatus=cmedxProfileRowStatus, cmedxProfileAtmAalPartialFill=cmedxProfileAtmAalPartialFill, cmedxCmdNumMoveSucceeds=cmedxCmdNumMoveSucceeds, cmedxEphTermInfoNumTerm=cmedxEphTermInfoNumTerm, ciscoMegacoExtConformance=ciscoMegacoExtConformance, cmedxOverloadLastResetTime=cmedxOverloadLastResetTime, cmedxProfileSuppressBearerDigit=cmedxProfileSuppressBearerDigit, cmedxCmdNumAuditCapPendings=cmedxCmdNumAuditCapPendings, cmedxCmdPhyTermModRespTimeAvg=cmedxCmdPhyTermModRespTimeAvg, cmedxCmdEphTermAddRespTimeAvg=cmedxCmdEphTermAddRespTimeAvg, cmedxGatewayMgOrigPendLimit=cmedxGatewayMgOrigPendLimit, cmedxCmdNumModifyPendings=cmedxCmdNumModifyPendings, cmedxOverloadRsLastResetTime=cmedxOverloadRsLastResetTime, cmedxOverloadControlEntry=cmedxOverloadControlEntry, cmedxPhyTermStatsOosFromMgcs=cmedxPhyTermStatsOosFromMgcs, cmedxProfileVoAal2VadTimer=cmedxProfileVoAal2VadTimer, cmedxCmdNumSubtractFails=cmedxCmdNumSubtractFails, cmedxCmdEphTermModRespTimeCount=cmedxCmdEphTermModRespTimeCount, cmedxGatewayActiveMgcDomain=cmedxGatewayActiveMgcDomain, cmedxCmdNumNotifyPendings=cmedxCmdNumNotifyPendings, cmedxCmdEphTermModRespTimeMin=cmedxCmdEphTermModRespTimeMin, cmedxEphTermInfoCounterClear=cmedxEphTermInfoCounterClear, cmedxCmdEphTermAddRespTimeMin=cmedxCmdEphTermAddRespTimeMin, cmedxComplianceRev3=cmedxComplianceRev3, cmedxCntxPeakNumActiveContexts=cmedxCntxPeakNumActiveContexts, cmedxTerminationTypeTable=cmedxTerminationTypeTable, cmedxPhyTermStatsNumAdds=cmedxPhyTermStatsNumAdds, cmedxOverloadNotifyState=cmedxOverloadNotifyState, cmedxGatewayMgcExecTime=cmedxGatewayMgcExecTime, cmedxEphTermInfoStatsIndexType=cmedxEphTermInfoStatsIndexType, CMedxCotTones=CMedxCotTones, cmedxCodecNegotiationEntry=cmedxCodecNegotiationEntry, cmedxTerminationTypeEntry=cmedxTerminationTypeEntry, cmedxProfileEchoCancelEnabled=cmedxProfileEchoCancelEnabled, cmedxEphTermInfoAvgDuration=cmedxEphTermInfoAvgDuration, cmedxEphemeralTermStatsTable=cmedxEphemeralTermStatsTable, cmedxGatewayMaxWaitingDelay=cmedxGatewayMaxWaitingDelay, cmedxCmdNumAddSucceeds=cmedxCmdNumAddSucceeds, cmedxCodecNegotiationPreference=cmedxCodecNegotiationPreference, cmedxProfileAtmAalType=cmedxProfileAtmAalType, cmedxGatewayMsgTokenType=cmedxGatewayMsgTokenType)
