#
# PySNMP MIB module HUAWEI-ATK-EUDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ATK-EUDM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:42:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, ModuleIdentity, Unsigned32, Gauge32, TimeTicks, NotificationType, MibIdentifier, Counter64, iso, IpAddress, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Gauge32", "TimeTicks", "NotificationType", "MibIdentifier", "Counter64", "iso", "IpAddress", "Integer32", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hwATKEudm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2))
if mibBuilder.loadTexts: hwATKEudm.setLastUpdated('200303190900Z')
if mibBuilder.loadTexts: hwATKEudm.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwATKEudm.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwATKEudm.setDescription(' The HUAWEI-ATCKDF_EUDM-MIB contains objects to manage the ATCKDF(Attack Defence) configuration for firewall. ')
hwATK = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10))
hwAtkZoneMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1))
hwAtkSynFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1), )
if mibBuilder.loadTexts: hwAtkSynFloodZoneTable.setStatus('current')
if mibBuilder.loadTexts: hwAtkSynFloodZoneTable.setDescription(' SYN Flood configuration table for a security zone. which consists of a sequence of hwAtckDfSynFloodZoneEntry items. ')
hwAtkSynFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkSynFloodZoneID"))
if mibBuilder.loadTexts: hwAtkSynFloodZoneEntry.setStatus('current')
if mibBuilder.loadTexts: hwAtkSynFloodZoneEntry.setDescription(' An entry in the hwAtckDfSynFloodZoneTable containing the parameters of SYN flood defence for all hosts behind a security zone. this table is for firewall only. ')
hwAtkSynFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkSynFloodZoneID.setStatus('current')
if mibBuilder.loadTexts: hwAtkSynFloodZoneID.setDescription('The internal ID of security zone to be protected.')
hwAtkZoneSynFloodSynSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodSynSpeed.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneSynFloodSynSpeed.setDescription(' The threshold value of SYN packets speed. when the speed of SYN packets to one host in this zone readch this value, the firewall will startup TCP proxy. ')
hwAtkZoneSynFloodHalfMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfMax.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfMax.setDescription('This is the maximum half connection for each host in the zone.')
hwAtkZoneSynFloodHalfAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfAge.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneSynFloodHalfAge.setDescription('The age of TCP half connection.')
hwAtkZoneSynFloodProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("on", 2), ("off", 3))).clone('auto')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodProxy.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneSynFloodProxy.setDescription(' The switch of TCP proxy, this switch decides the action of proxy. The switch has three status: auto, on, off. ')
hwAtkZoneSynFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneSynFloodStatus.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneSynFloodStatus.setDescription(' The row status variable, current support CreateAndGo and Destroy. ')
hwAtkUdpFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2), )
if mibBuilder.loadTexts: hwAtkUdpFloodZoneTable.setStatus('current')
if mibBuilder.loadTexts: hwAtkUdpFloodZoneTable.setDescription(' UDP Flood configuration table for a security zone. which consists of a sequence of hwAtckDfUdpFloodZoneEntry items. ')
hwAtkUdpFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkUdpFloodZoneID"))
if mibBuilder.loadTexts: hwAtkUdpFloodZoneEntry.setStatus('current')
if mibBuilder.loadTexts: hwAtkUdpFloodZoneEntry.setDescription(' An entry in the hwAtckDfUdpFloodZoneTable containing the parameters of UDP flood defence for all hosts behind a security zone. this table is for firewall only. ')
hwAtkUdpFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkUdpFloodZoneID.setStatus('current')
if mibBuilder.loadTexts: hwAtkUdpFloodZoneID.setDescription('The ID of security zone to be protected.')
hwAtkZoneUdpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneUdpFloodSpeed.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneUdpFloodSpeed.setDescription(' The threshold value of UDP packets speed. when the speed of UDP packets to one host in this zone reach this value, the firewall will drops the subsequence UDP packets to this host. ')
hwAtkZoneUdpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneUdpFloodStatus.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneUdpFloodStatus.setDescription(' The row status variable, current support CreateAndGo and Destroy. ')
hwAtkIcmpFloodZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3), )
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneTable.setStatus('current')
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneTable.setDescription(' ICMP Flood configuration table for a security zone. which consists of a sequence of hwAtckDfIcmpFloodZoneEntry items. ')
hwAtkIcmpFloodZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ATK-EUDM-MIB", "hwAtkIcmpFloodZoneID"))
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneEntry.setStatus('current')
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneEntry.setDescription(' An entry in the hwAtckDfIcmpFloodZoneTable containing the parameters of ICMP flood defence for all hosts behind a security zone. this table is for firewall only. ')
hwAtkIcmpFloodZoneID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneID.setStatus('current')
if mibBuilder.loadTexts: hwAtkIcmpFloodZoneID.setDescription('The ID of security zone to be protected.')
hwAtkZoneIcmpFloodSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodSpeed.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodSpeed.setDescription(' The threshold value of ICMP packets speed. when the speed of ICMP packets to one host in this zone reach this value, the firewall will drops the subsequence ICMP packets to this host. ')
hwAtkZoneIcmpFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodStatus.setStatus('current')
if mibBuilder.loadTexts: hwAtkZoneIcmpFloodStatus.setDescription(' The row status variable, current support CreateAndGo and Destroy. ')
hwAtkEudmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2))
hwAtkEudmCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 1))
hwAtkEudmMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2))
hwAtkEudmSynFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 1)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodSynSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodHalfMax"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodHalfAge"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodProxy"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneSynFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmSynFloodGroup = hwAtkEudmSynFloodGroup.setStatus('current')
if mibBuilder.loadTexts: hwAtkEudmSynFloodGroup.setDescription(' The MIB objects need for SYN flood defence')
hwAtkEudmUdpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 2)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneUdpFloodSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneUdpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmUdpFloodGroup = hwAtkEudmUdpFloodGroup.setStatus('current')
if mibBuilder.loadTexts: hwAtkEudmUdpFloodGroup.setDescription(' The MIB objects need for UDP flood defence ')
hwAtkEudmIcmpFloodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 10, 2, 2, 2, 3)).setObjects(("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneIcmpFloodSpeed"), ("HUAWEI-ATK-EUDM-MIB", "hwAtkZoneIcmpFloodStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAtkEudmIcmpFloodGroup = hwAtkEudmIcmpFloodGroup.setStatus('current')
if mibBuilder.loadTexts: hwAtkEudmIcmpFloodGroup.setDescription(' The MIB objects need for ICMP flood defence ')
mibBuilder.exportSymbols("HUAWEI-ATK-EUDM-MIB", PYSNMP_MODULE_ID=hwATKEudm, hwAtkSynFloodZoneTable=hwAtkSynFloodZoneTable, hwAtkEudmIcmpFloodGroup=hwAtkEudmIcmpFloodGroup, hwAtkZoneIcmpFloodStatus=hwAtkZoneIcmpFloodStatus, hwAtkEudmConformance=hwAtkEudmConformance, hwATK=hwATK, hwAtkZoneSynFloodHalfAge=hwAtkZoneSynFloodHalfAge, hwAtkZoneMibObjects=hwAtkZoneMibObjects, hwAtkSynFloodZoneEntry=hwAtkSynFloodZoneEntry, hwATKEudm=hwATKEudm, hwAtkEudmSynFloodGroup=hwAtkEudmSynFloodGroup, hwAtkZoneSynFloodHalfMax=hwAtkZoneSynFloodHalfMax, hwAtkZoneSynFloodProxy=hwAtkZoneSynFloodProxy, hwAtkIcmpFloodZoneID=hwAtkIcmpFloodZoneID, hwAtkZoneUdpFloodStatus=hwAtkZoneUdpFloodStatus, hwAtkZoneSynFloodStatus=hwAtkZoneSynFloodStatus, hwAtkEudmUdpFloodGroup=hwAtkEudmUdpFloodGroup, hwAtkIcmpFloodZoneTable=hwAtkIcmpFloodZoneTable, hwAtkIcmpFloodZoneEntry=hwAtkIcmpFloodZoneEntry, hwAtkUdpFloodZoneTable=hwAtkUdpFloodZoneTable, hwAtkEudmMibGroups=hwAtkEudmMibGroups, hwAtkEudmCompliance=hwAtkEudmCompliance, hwAtkUdpFloodZoneID=hwAtkUdpFloodZoneID, hwAtkZoneSynFloodSynSpeed=hwAtkZoneSynFloodSynSpeed, hwAtkUdpFloodZoneEntry=hwAtkUdpFloodZoneEntry, hwAtkSynFloodZoneID=hwAtkSynFloodZoneID, hwAtkZoneIcmpFloodSpeed=hwAtkZoneIcmpFloodSpeed, hwAtkZoneUdpFloodSpeed=hwAtkZoneUdpFloodSpeed)
