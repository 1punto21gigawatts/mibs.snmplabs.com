#
# PySNMP MIB module CISCO-IP-CBR-METRICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IP-CBR-METRICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:02:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
cfmFlowId, cfmFlowMonitorId, cfmFlowMetricsIntNumber = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-MIB", "cfmFlowId", "cfmFlowMonitorId", "cfmFlowMetricsIntNumber")
FlowMetricScale, FlowBitRateUnits, FlowMetricPrecision, FlowCfgRateType, FlowMetricValue = mibBuilder.importSymbols("CISCO-FLOW-MONITOR-TC-MIB", "FlowMetricScale", "FlowBitRateUnits", "FlowMetricPrecision", "FlowCfgRateType", "FlowMetricValue")
ReportIntervalCount, = mibBuilder.importSymbols("CISCO-REPORT-INTERVAL-TC-MIB", "ReportIntervalCount")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Gauge32, Unsigned32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Integer32, TimeTicks, NotificationType, IpAddress, Bits, MibIdentifier, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Gauge32", "Unsigned32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Integer32", "TimeTicks", "NotificationType", "IpAddress", "Bits", "MibIdentifier", "Counter32", "iso")
TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DisplayString")
ciscoIpCbrMetricsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697))
ciscoIpCbrMetricsMIB.setRevisions(('2009-06-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoIpCbrMetricsMIB.setRevisionsDescriptions(('The initial version of the MIB module.',))
if mibBuilder.loadTexts: ciscoIpCbrMetricsMIB.setLastUpdated('200906110000Z')
if mibBuilder.loadTexts: ciscoIpCbrMetricsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoIpCbrMetricsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoIpCbrMetricsMIB.setDescription('This MIB module defines objects that describe the a set of metrics used to measure the quality of a IP CBR traffic flow. An IP CBR traffic flow consists of a stream of IP datagrams sent from one application to another with a constant packet rate or bit rate. GLOSSARY ============ CBR - Constant Bit Rate. Delay Factor - the maximum observed value of the flow rate imbalance over a measurement interval. DF - Delay Factor. Flow Monitor - a hardware or software entity that classifies traffic flows, collects flow data, and periodically computes flow metrics. Flow Metric - a measurement that reflects the quality of a traffic flow. Measurement Interval - the length of time over which a flow monitor collects data related to a traffic flow, after which the flow monitor computes flow metrics using the collected data. Media Rate - the effective bit rate of the media content carried by a traffic flow. Media Rate Variation - a measure of loss (in bytes): N RT - sum [Si] i=1 MRV = --------------- RT where R is the nominal media rate, T is the measurement interval, Si is the size of packet[i] received during the measurement interval, and N is the number of media packets received during the measurement interval. MR - Media Rate. MRV - Media Rate Variation. Traffic Flow - a unidirectional stream of packets conforming to a classifier. For example, packets having a particular source IP address, destination IP address, protocol type, source port number, and destination port number. VB - Virtual Buffer. Virtual Buffer - a virtual buffer is a construct used to simulate a real buffer used by a media application for the purpose of storing media packets until the the application can render their content.')
ciscoIpCbrMetricsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 0))
ciscoIpCbrMetricsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 1))
ciscoIpCbrMetricsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 2))
ciscoIpCbrMetricsMIBIds = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 3))
cfmIpCbrMetrics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1))
cfmIpCbrMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1), )
if mibBuilder.loadTexts: cfmIpCbrMetricsTable.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsTable.setDescription("This table contains aggregate data maintained by a flow monitor for traffic flows for which it is computing IP CBR metrics. This table has an sparse dependent relationship on the cfmFlowMetricsTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsTable having a corresponding instance of cfmFlowMetricsCollected with the 'ipCbr' bit set to one.")
cfmIpCbrMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"))
if mibBuilder.loadTexts: cfmIpCbrMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsEntry.setDescription('An entry describes cumulative and aggregate IP CBR metrics for a single traffic flow. The devices creates a row in the cfmIpCbrMetricsTable when a flow monitor starts monitoring a traffic flow and has been configured to compute IP CBR metrics for the same traffic flow. Likewise, the device destroys a row in the cfmIpCbrMetricsMetricsTable when the corresponding flow monitor has ceased monitoring the traffic flow (e.g., when a traffic flow has timed out).')
cfmIpCbrMetricsCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 1), FlowCfgRateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgRateType.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgRateType.setDescription('This object indicates how the corresponding flow monitor computes the DF for the traffic flow.')
cfmIpCbrMetricsCfgBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 2), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgBitRate.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgBitRate.setDescription("This object indicates the units for the corresponding instance of cfmIpCbrMetricsCfgRate. The value of this column only has relevance if the corresponding instance of cfmIpCbrMetricsCfgRateType is 'ipBitRate' or 'mediaRate'.")
cfmIpCbrMetricsCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgRate.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgRate.setDescription("This object indicates the configured bit rate used by the flow monitor to compute the DF for the traffic flow. The value of this column only has relevance if the corresponding instance of cfmIpCbrMetricsCfgRateType is 'ipBitRate' or 'mediaRate'.")
cfmIpCbrMetricsCfgMediaPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgMediaPktSize.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsCfgMediaPktSize.setDescription("This object indicates the configured media packet size used by the flow monitor to compute the DF for the traffic flow. The value of this column only has relevance if the corresponding instance of cfmIpCbrMetricsCfgRateType is 'mediaRate'.")
cfmIpCbrMetricsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("lostPkts", 0), ("mediaRateVariation", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsValid.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsValid.setDescription("This object indicates which metrics are valid for the traffic flow: 'lostPkts' If this bit is set to '1', then the corresponding instance of cfmIpCbrMetricsLostPkts is valid. 'mediaRateVariation' If this bit is set to '1', then the corresponding instances of cfmIpCbrMetricsMlrScale, cfmIpCbrMetricsMlrPrecision, and cfmIpCbrMetricsMlr are valid.")
cfmIpCbrMetricsLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsLostPkts.setDescription("This object indicates the number of packets lost for the traffic flow. The value of this column is valid if and only if the 'lostPkts' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmIpCbrMetricsMrvScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 7), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsMrvScale.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsMrvScale.setDescription("This object indicates the scale factor for the corresponding instance of cfmIpCbrMetricsMrv. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmIpCbrMetricsMrvPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 8), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsMrvPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsMrvPrecision.setDescription("This object indicates the precision for the corresponding instance of cfmIpCbrMetricsMrv. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmIpCbrMetricsMrv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 1, 1, 9), FlowMetricValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsMrv.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsMrv.setDescription("This object indicates the MRV for the traffic flow since the flow monitor started collecting data for the traffic flow. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmMdiMetricsValid is set to '1'.")
cfmIpCbrMetricsTableChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsTableChanged.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsTableChanged.setDescription('This object indicates the value of sysUpTime the last time the device created/destroyed a row in the cfmIpCbrMetricsTable.')
cfmIpCbrMetricsIntTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3), )
if mibBuilder.loadTexts: cfmIpCbrMetricsIntTable.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntTable.setDescription("This table contains historic IP CBR metrics for the traffic flows monitored by each of the flow monitors supported by the device. This table has an sparse dependent relationship on the cfmFlowMetricsIntTable (defined by the CISCO-FLOW-MONITOR-MIB), containing a row for each row in the cfmFlowMetricsIntTable having a corresponding instance of cfmFlowMetricsCollected with the 'ipCbr' bit set to one.")
cfmIpCbrMetricsIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMonitorId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowId"), (0, "CISCO-FLOW-MONITOR-MIB", "cfmFlowMetricsIntNumber"))
if mibBuilder.loadTexts: cfmIpCbrMetricsIntEntry.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntEntry.setDescription('An entry describes IP CBR metrics collected for a previous measurement interval for a corresponding traffic flow.')
cfmIpCbrMetricsIntValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("lostPkts", 0), ("vbMin", 1), ("vbMax", 2), ("mediaRate", 3), ("delayFactor", 4), ("mediaRateVariation", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntValid.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntValid.setDescription("This object indicates which metrics are valid for the measurement interval: 'lostPkts' If this bit is set to '1', then the corresponding instance of cfmIpCbrMetricsIntLostPkts is valid. 'vbMin' If this bit is set to '1', then the corresponding instance of cfmIpCbrMetricsIntVbMin is valid. 'vbMax' If this bit is set to '1', then the corresponding instance of cfmIpCbrMetricsIntVbMax is valid. 'mediaRate' If this bit is set to '1', then the corresponding instances of cfmIpCbrMetricsIntMrUnits and cfmIpCbrMetricsIntMr are valid. 'delayFactor' If this bit is set to '1', then the corresponding instances of cfmIpCbrMetricsIntDfScale, cfmIpCbrMetricsIntDfPrecision, and cfmIpCbrMetricsIntDf are valid. 'mediaRateVariation' If this bit is set to '1', then the corresponding instances of cfmIpCbrMetricsIntMrvScale, cfmIpCbrMetricsIntMrvPrecision, and cfmIpCbrMetricsIntMrv are valid.")
cfmIpCbrMetricsIntLostPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 2), ReportIntervalCount()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntLostPkts.setDescription("This object indicates the number of lost packets for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'lostPkts' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntVbMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 3), ReportIntervalCount()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntVbMin.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntVbMin.setDescription("This object indicates the minimum virtual buffer size computed for the traffic flow over the course of the measurement interval. The value of this column is valid if and only if the 'vbMin' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntVbMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 4), ReportIntervalCount()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntVbMax.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntVbMax.setDescription("This object indicates the maximum virtual buffer size computed for the traffic flow over the course of the measurement interval. The value of this column is valid if and only if the 'vbMax' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntMrUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 5), FlowBitRateUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrUnits.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrUnits.setDescription("This object indicates the units for the corresponding instance of cfmIpCbrMetricsMr. The value of this column is valid if and only if the 'mediaRate' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntMr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 6), ReportIntervalCount()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMr.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMr.setDescription("This object indicates the media rate used by the flow monitor to compute the DF for the traffic flow. If the corresponding instance of cfmIpCbrMetricsCfgRateType is 'auto', then the value of this column indicates the MR for the traffic flow during the measurement interval. Otherwise, the value of this column reflects the configured MR. The value of this column is valid if and only if the 'mediaRate' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntDfScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 7), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDfScale.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDfScale.setDescription("This object indicates the scaling factor for the corresponding instance of cfmIpCbrMetricsIntDf. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntDfPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 8), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDfPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDfPrecision.setDescription("This object indicates the precision for the corresponding instance of cfmIpCbrMetricsIntDf. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntDf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 9), FlowMetricValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDf.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntDf.setDescription("This object indicates the DF for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'delayFactor' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntMrvScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 10), FlowMetricScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrvScale.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrvScale.setDescription("This object indicates the scaling factor for the corresponding instance of cfmIpCbrMetricsIntMrv. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntMrvPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 11), FlowMetricPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrvPrecision.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrvPrecision.setDescription("This object indicates the precision for for the corresponding instance of cfmIpCbrMetricsIntMrv. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMetricsIntMrv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 697, 1, 1, 3, 1, 12), FlowMetricValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrv.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsIntMrv.setDescription("This object indicates the MRV for the traffic flow during the measurement interval. The value of this column is valid if and only if the 'mediaRateVariation' bit in the corresponding instance of cfmIpCbrMetricsIntValid is set to '1'.")
cfmIpCbrMonitoredElements = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1))
cfmeIpCbrCumulativeLostPkts = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1, 1))
if mibBuilder.loadTexts: cfmeIpCbrCumulativeLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmeIpCbrCumulativeLostPkts.setDescription('This object identifier represents the monitored element describing the cumulative number of lost packets for a traffic flow (cfmIpCbrMetricsLostPkts). This obect identifier can be used as a value for cfmConditionMonitoredElement.')
if mibBuilder.loadTexts: cfmeIpCbrCumulativeLostPkts.setReference('The cfmConditionMonitoredElement defined in CISCO-FLOW-MONITOR-MIB.')
cfmeIpCbrCumulativeMrv = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1, 2))
if mibBuilder.loadTexts: cfmeIpCbrCumulativeMrv.setStatus('current')
if mibBuilder.loadTexts: cfmeIpCbrCumulativeMrv.setDescription('This object identifier represents the monitored element describing the cumulative MRV for a traffic flow (cfmIpCbrMetricsMrv). This obect identifier can be used as a value for cfmConditionMonitoredElement.')
if mibBuilder.loadTexts: cfmeIpCbrCumulativeMrv.setReference('The cfmConditionMonitoredElement defined in CISCO-FLOW-MONITOR-MIB.')
cfmeIpCbrLostPkts = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1, 3))
if mibBuilder.loadTexts: cfmeIpCbrLostPkts.setStatus('current')
if mibBuilder.loadTexts: cfmeIpCbrLostPkts.setDescription('This object identifier represents the monitored element describing the number of packets lost for a traffic flow during the last measurement interval (cfmIpCbrMetricsIntLostPkts). This obect identifier can be used as a value for cfmConditionMonitoredElement.')
if mibBuilder.loadTexts: cfmeIpCbrLostPkts.setReference('The cfmConditionMonitoredElement defined in CISCO-FLOW-MONITOR-MIB.')
cfmeIpCbrDf = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1, 4))
if mibBuilder.loadTexts: cfmeIpCbrDf.setStatus('current')
if mibBuilder.loadTexts: cfmeIpCbrDf.setDescription('This object identifier represents the monitored element describing the DF for a traffic flow during the last measurement interval (cfmIpCbrMetricsIntDf). This obect identifier can be used as a value for cfmConditionMonitoredElement.')
if mibBuilder.loadTexts: cfmeIpCbrDf.setReference('The cfmConditionMonitoredElement defined in CISCO-FLOW-MONITOR-MIB.')
cfmeIpCbrMrv = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 697, 3, 1, 5))
if mibBuilder.loadTexts: cfmeIpCbrMrv.setStatus('current')
if mibBuilder.loadTexts: cfmeIpCbrMrv.setDescription('This object identifier represents the monitored element describing the MRV for a traffic flow during the last measurement interval (cfmIpCbrMetricsIntMrv). This obect identifier can be used as a value for cfmConditionMonitoredElement.')
if mibBuilder.loadTexts: cfmeIpCbrMrv.setReference('The cfmConditionMonitoredElement defined in CISCO-FLOW-MONITOR-MIB.')
ciscoIpCbrMetricsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 2, 1))
ciscoIpCbrMetricsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 697, 2, 2))
ciscoIpCbrMetricsCompliance01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 697, 2, 1, 1)).setObjects(("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIpCbrMetricsCompliance01 = ciscoIpCbrMetricsCompliance01.setStatus('current')
if mibBuilder.loadTexts: ciscoIpCbrMetricsCompliance01.setDescription('This compliance statement specifies the minimal requirements an implementation must meet in order to claim full compliance with the definition of the CISCO-IP-CBR-METRICS-MIB.')
cfmIpCbrMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 697, 2, 2, 1)).setObjects(("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsCfgRateType"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsCfgBitRate"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsCfgRate"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsCfgMediaPktSize"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsValid"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsLostPkts"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsMrvScale"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsMrvPrecision"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsMrv"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsTableChanged"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntValid"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntLostPkts"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntVbMin"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntVbMax"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntMrUnits"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntMr"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntDfScale"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntDfPrecision"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntDf"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntMrvScale"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntMrvPrecision"), ("CISCO-IP-CBR-METRICS-MIB", "cfmIpCbrMetricsIntMrv"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfmIpCbrMetricsGroup = cfmIpCbrMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: cfmIpCbrMetricsGroup.setDescription('This group contains objects that describe IP CBR metrics.')
mibBuilder.exportSymbols("CISCO-IP-CBR-METRICS-MIB", cfmIpCbrMetricsIntDf=cfmIpCbrMetricsIntDf, ciscoIpCbrMetricsMIBNotifs=ciscoIpCbrMetricsMIBNotifs, cfmIpCbrMetricsEntry=cfmIpCbrMetricsEntry, cfmeIpCbrDf=cfmeIpCbrDf, ciscoIpCbrMetricsMIBGroups=ciscoIpCbrMetricsMIBGroups, cfmIpCbrMetricsIntMrvPrecision=cfmIpCbrMetricsIntMrvPrecision, cfmIpCbrMetricsLostPkts=cfmIpCbrMetricsLostPkts, cfmIpCbrMetricsIntMrv=cfmIpCbrMetricsIntMrv, cfmeIpCbrCumulativeMrv=cfmeIpCbrCumulativeMrv, cfmIpCbrMetricsIntMrvScale=cfmIpCbrMetricsIntMrvScale, cfmIpCbrMetricsMrvPrecision=cfmIpCbrMetricsMrvPrecision, cfmIpCbrMetricsIntMr=cfmIpCbrMetricsIntMr, cfmIpCbrMetricsTable=cfmIpCbrMetricsTable, cfmIpCbrMetricsIntVbMax=cfmIpCbrMetricsIntVbMax, ciscoIpCbrMetricsMIBConform=ciscoIpCbrMetricsMIBConform, cfmIpCbrMetricsValid=cfmIpCbrMetricsValid, cfmIpCbrMetricsIntValid=cfmIpCbrMetricsIntValid, ciscoIpCbrMetricsMIBCompliances=ciscoIpCbrMetricsMIBCompliances, cfmIpCbrMetricsCfgRate=cfmIpCbrMetricsCfgRate, cfmIpCbrMetricsMrvScale=cfmIpCbrMetricsMrvScale, cfmIpCbrMetricsIntMrUnits=cfmIpCbrMetricsIntMrUnits, cfmIpCbrMetricsIntLostPkts=cfmIpCbrMetricsIntLostPkts, ciscoIpCbrMetricsMIBObjects=ciscoIpCbrMetricsMIBObjects, cfmIpCbrMetricsCfgRateType=cfmIpCbrMetricsCfgRateType, ciscoIpCbrMetricsMIB=ciscoIpCbrMetricsMIB, cfmIpCbrMetricsMrv=cfmIpCbrMetricsMrv, cfmIpCbrMetricsCfgMediaPktSize=cfmIpCbrMetricsCfgMediaPktSize, cfmIpCbrMonitoredElements=cfmIpCbrMonitoredElements, PYSNMP_MODULE_ID=ciscoIpCbrMetricsMIB, cfmIpCbrMetricsIntEntry=cfmIpCbrMetricsIntEntry, cfmIpCbrMetricsIntDfScale=cfmIpCbrMetricsIntDfScale, cfmeIpCbrMrv=cfmeIpCbrMrv, ciscoIpCbrMetricsMIBIds=ciscoIpCbrMetricsMIBIds, cfmIpCbrMetricsIntTable=cfmIpCbrMetricsIntTable, ciscoIpCbrMetricsCompliance01=ciscoIpCbrMetricsCompliance01, cfmIpCbrMetricsCfgBitRate=cfmIpCbrMetricsCfgBitRate, cfmeIpCbrCumulativeLostPkts=cfmeIpCbrCumulativeLostPkts, cfmIpCbrMetricsGroup=cfmIpCbrMetricsGroup, cfmIpCbrMetricsIntVbMin=cfmIpCbrMetricsIntVbMin, cfmIpCbrMetricsTableChanged=cfmIpCbrMetricsTableChanged, cfmIpCbrMetricsIntDfPrecision=cfmIpCbrMetricsIntDfPrecision, cfmeIpCbrLostPkts=cfmeIpCbrLostPkts, cfmIpCbrMetrics=cfmIpCbrMetrics)
