#
# PySNMP MIB module CYBEROAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYBEROAM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Unsigned32, Counter32, ObjectIdentity, MibIdentifier, iso, IpAddress, snmpModules, Counter64, enterprises, Bits, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Unsigned32", "Counter32", "ObjectIdentity", "MibIdentifier", "iso", "IpAddress", "snmpModules", "Counter64", "enterprises", "Bits", "Gauge32", "NotificationType")
TruthValue, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "DateAndTime")
elitecore = ModuleIdentity((1, 3, 6, 1, 4, 1, 21067))
if mibBuilder.loadTexts: elitecore.setLastUpdated('200607140000Z')
if mibBuilder.loadTexts: elitecore.setOrganization('Elitecore Technologies')
if mibBuilder.loadTexts: elitecore.setContactInfo(' Postal: 904,Silicon Tower, Off C.G.Road, Nr. Lal Bunglow, Ahmedabad 380 006. INDIA. Phone: +91-79-26405600 Fax: +91-79-26407640 Website: http://www.elitecore.com http://www.cyberoam.com E-mail: info@cyberoam.com ')
if mibBuilder.loadTexts: elitecore.setDescription(' This MIB module defines MIB objects which provide mechanisms to remotely configure the parameters used by Cyberoam Agent for the generation of SNMP messages. ')
cyberoam = ObjectIdentity((1, 3, 6, 1, 4, 1, 21067, 2))
if mibBuilder.loadTexts: cyberoam.setStatus('current')
if mibBuilder.loadTexts: cyberoam.setDescription('')
class OpModeType(TextualConvention, Integer32):
    description = 'enumerated type for Cyberoam Operation Mode'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("bridge", 1), ("route", 2))

class HaModeType(TextualConvention, Integer32):
    description = 'enumerated type for HA Modes'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("standalone", 1), ("active-passive", 2), ("active-active", 3))

class ServiceStatsType(TextualConvention, Integer32):
    description = 'enumerated type for service status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("running", 1), ("stopped", 2), ("initializing", 3))

class RegistrationStatusType(TextualConvention, Integer32):
    description = 'enumerated type for subscription status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("registered", 1), ("unregistered", 2))

class SubscriptionStatusType(TextualConvention, Integer32):
    description = 'enumerated type for subscription status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("trial", 1), ("unsubscribed", 2), ("subscribed", 3), ("expired", 4))

class SupportStatusType(TextualConvention, Integer32):
    description = 'enumerated type for subscription status'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("support8x5", 1), ("support24x7", 2))

crSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1))
sysInstall = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1))
sysStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2))
sysLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3))
sysAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4))
applianceKey = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applianceKey.setStatus('current')
if mibBuilder.loadTexts: applianceKey.setDescription('')
applianceModel = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applianceModel.setStatus('current')
if mibBuilder.loadTexts: applianceModel.setDescription('')
cyberoamVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyberoamVersion.setStatus('current')
if mibBuilder.loadTexts: cyberoamVersion.setDescription('')
webcatVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatVersion.setStatus('current')
if mibBuilder.loadTexts: webcatVersion.setDescription('')
avVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: avVersion.setStatus('current')
if mibBuilder.loadTexts: avVersion.setDescription('')
asVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: asVersion.setStatus('current')
if mibBuilder.loadTexts: asVersion.setDescription('')
idpVersion = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpVersion.setStatus('current')
if mibBuilder.loadTexts: idpVersion.setDescription('')
cyberoamOpMode = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 1), OpModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyberoamOpMode.setStatus('current')
if mibBuilder.loadTexts: cyberoamOpMode.setDescription(' ')
systemDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemDate.setStatus('current')
if mibBuilder.loadTexts: systemDate.setDescription(' ')
cpuStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 3))
cpuPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentUsage.setStatus('current')
if mibBuilder.loadTexts: cpuPercentUsage.setDescription('% cpu usage')
diskStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4))
diskCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskCapacity.setStatus('current')
if mibBuilder.loadTexts: diskCapacity.setDescription('Disk capacity in MB')
diskPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskPercentUsage.setStatus('current')
if mibBuilder.loadTexts: diskPercentUsage.setDescription('% Disk usage')
memoryStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5))
memoryCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCapacity.setStatus('current')
if mibBuilder.loadTexts: memoryCapacity.setDescription('Memory capacity in MB')
memoryPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPercentUsage.setStatus('current')
if mibBuilder.loadTexts: memoryPercentUsage.setDescription('% usage of main memory')
swapCapacity = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swapCapacity.setStatus('current')
if mibBuilder.loadTexts: swapCapacity.setDescription('Swap Capacity in MB')
swapPercentUsage = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swapPercentUsage.setStatus('current')
if mibBuilder.loadTexts: swapPercentUsage.setDescription('% usage of swap')
haMode = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 6), HaModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: haMode.setStatus('current')
if mibBuilder.loadTexts: haMode.setDescription(' ')
liveUsers = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveUsers.setStatus('current')
if mibBuilder.loadTexts: liveUsers.setDescription('')
httpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpHits.setStatus('current')
if mibBuilder.loadTexts: httpHits.setDescription(' ')
ftpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpHits.setStatus('current')
if mibBuilder.loadTexts: ftpHits.setDescription(' ')
mailHits = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10))
serviceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11))
pop3Hits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3Hits.setStatus('current')
if mibBuilder.loadTexts: pop3Hits.setDescription(' ')
imapHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imapHits.setStatus('current')
if mibBuilder.loadTexts: imapHits.setDescription(' ')
smtpHits = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpHits.setStatus('current')
if mibBuilder.loadTexts: smtpHits.setDescription(' ')
pop3Service = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 1), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3Service.setStatus('current')
if mibBuilder.loadTexts: pop3Service.setDescription(' ')
imap4Service = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 2), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: imap4Service.setStatus('current')
if mibBuilder.loadTexts: imap4Service.setDescription(' ')
smtpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 3), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpService.setStatus('current')
if mibBuilder.loadTexts: smtpService.setDescription(' ')
ftpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 4), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpService.setStatus('current')
if mibBuilder.loadTexts: ftpService.setDescription(' ')
httpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 5), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpService.setStatus('current')
if mibBuilder.loadTexts: httpService.setDescription(' ')
avService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 6), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avService.setStatus('current')
if mibBuilder.loadTexts: avService.setDescription(' ')
asService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 7), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asService.setStatus('current')
if mibBuilder.loadTexts: asService.setDescription(' ')
dnsService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 8), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsService.setStatus('current')
if mibBuilder.loadTexts: dnsService.setDescription(' ')
haService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 9), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: haService.setStatus('current')
if mibBuilder.loadTexts: haService.setDescription(' ')
idpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 10), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpService.setStatus('current')
if mibBuilder.loadTexts: idpService.setDescription(' ')
analyzerService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 11), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analyzerService.setStatus('current')
if mibBuilder.loadTexts: analyzerService.setDescription(' ')
snmpService = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 2, 11, 12), ServiceStatsType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpService.setStatus('current')
if mibBuilder.loadTexts: snmpService.setDescription(' ')
liAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1))
liSupport = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2))
liAntivirus = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3))
liAntispam = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4))
liIdp = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5))
liWebcat = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6))
appRegStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1, 1), RegistrationStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appRegStatus.setStatus('current')
if mibBuilder.loadTexts: appRegStatus.setDescription(' ')
appExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appExpiryDate.setStatus('current')
if mibBuilder.loadTexts: appExpiryDate.setDescription(' ')
supportSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2, 1), SupportStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: supportSubStatus.setStatus('current')
if mibBuilder.loadTexts: supportSubStatus.setDescription(' ')
supportExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 2, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: supportExpiryDate.setStatus('current')
if mibBuilder.loadTexts: supportExpiryDate.setDescription(' ')
avSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avSubStatus.setStatus('current')
if mibBuilder.loadTexts: avSubStatus.setDescription(' ')
avExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 3, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: avExpiryDate.setStatus('current')
if mibBuilder.loadTexts: avExpiryDate.setDescription(' ')
asSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asSubStatus.setStatus('current')
if mibBuilder.loadTexts: asSubStatus.setDescription(' ')
asExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 4, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: asExpiryDate.setStatus('current')
if mibBuilder.loadTexts: asExpiryDate.setDescription(' ')
idpSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpSubStatus.setStatus('current')
if mibBuilder.loadTexts: idpSubStatus.setDescription(' ')
idpExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 5, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idpExpiryDate.setStatus('current')
if mibBuilder.loadTexts: idpExpiryDate.setDescription(' ')
webcatSubStatus = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6, 1), SubscriptionStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatSubStatus.setStatus('current')
if mibBuilder.loadTexts: webcatSubStatus.setDescription(' ')
webcatExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 21067, 2, 1, 3, 6, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webcatExpiryDate.setStatus('current')
if mibBuilder.loadTexts: webcatExpiryDate.setDescription(' ')
highCpuUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 1))
if mibBuilder.loadTexts: highCpuUsage.setStatus('current')
if mibBuilder.loadTexts: highCpuUsage.setDescription('')
highDiskUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 2))
if mibBuilder.loadTexts: highDiskUsage.setStatus('current')
if mibBuilder.loadTexts: highDiskUsage.setDescription('')
highMemUsage = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 3))
if mibBuilder.loadTexts: highMemUsage.setStatus('current')
if mibBuilder.loadTexts: highMemUsage.setDescription('')
avAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4))
dgdAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 5))
idpAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 6))
dosAlerts = MibIdentifier((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7))
httpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 1))
if mibBuilder.loadTexts: httpVirus.setStatus('current')
if mibBuilder.loadTexts: httpVirus.setDescription('')
smtpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 2))
if mibBuilder.loadTexts: smtpVirus.setStatus('current')
if mibBuilder.loadTexts: smtpVirus.setDescription('')
pop3Virus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 3))
if mibBuilder.loadTexts: pop3Virus.setStatus('current')
if mibBuilder.loadTexts: pop3Virus.setDescription('')
imap4Virus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 4))
if mibBuilder.loadTexts: imap4Virus.setStatus('current')
if mibBuilder.loadTexts: imap4Virus.setDescription('')
ftpVirus = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 4, 5))
if mibBuilder.loadTexts: ftpVirus.setStatus('current')
if mibBuilder.loadTexts: ftpVirus.setDescription('')
gwLiveDead = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 5, 1))
if mibBuilder.loadTexts: gwLiveDead.setStatus('current')
if mibBuilder.loadTexts: gwLiveDead.setDescription('')
idpAlert = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 6, 1))
if mibBuilder.loadTexts: idpAlert.setStatus('current')
if mibBuilder.loadTexts: idpAlert.setDescription('')
synFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 1))
if mibBuilder.loadTexts: synFlood.setStatus('current')
if mibBuilder.loadTexts: synFlood.setDescription('')
tcpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 2))
if mibBuilder.loadTexts: tcpFlood.setStatus('current')
if mibBuilder.loadTexts: tcpFlood.setDescription('')
udpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 3))
if mibBuilder.loadTexts: udpFlood.setStatus('current')
if mibBuilder.loadTexts: udpFlood.setDescription('')
icmpFlood = NotificationType((1, 3, 6, 1, 4, 1, 21067, 2, 1, 4, 7, 4))
if mibBuilder.loadTexts: icmpFlood.setStatus('current')
if mibBuilder.loadTexts: icmpFlood.setDescription('')
mibBuilder.exportSymbols("CYBEROAM-MIB", ServiceStatsType=ServiceStatsType, haService=haService, idpAlert=idpAlert, memoryPercentUsage=memoryPercentUsage, systemDate=systemDate, applianceKey=applianceKey, dnsService=dnsService, supportExpiryDate=supportExpiryDate, cpuPercentUsage=cpuPercentUsage, asService=asService, cyberoam=cyberoam, liWebcat=liWebcat, asVersion=asVersion, asExpiryDate=asExpiryDate, memoryStatus=memoryStatus, appExpiryDate=appExpiryDate, mailHits=mailHits, diskPercentUsage=diskPercentUsage, sysAlerts=sysAlerts, pop3Hits=pop3Hits, liSupport=liSupport, avSubStatus=avSubStatus, ftpVirus=ftpVirus, gwLiveDead=gwLiveDead, liIdp=liIdp, avAlerts=avAlerts, dgdAlerts=dgdAlerts, smtpHits=smtpHits, ftpHits=ftpHits, webcatSubStatus=webcatSubStatus, smtpService=smtpService, webcatVersion=webcatVersion, avService=avService, smtpVirus=smtpVirus, icmpFlood=icmpFlood, applianceModel=applianceModel, httpService=httpService, udpFlood=udpFlood, imapHits=imapHits, cpuStatus=cpuStatus, avVersion=avVersion, liAntivirus=liAntivirus, httpVirus=httpVirus, liAppliance=liAppliance, liveUsers=liveUsers, HaModeType=HaModeType, OpModeType=OpModeType, haMode=haMode, highDiskUsage=highDiskUsage, analyzerService=analyzerService, highCpuUsage=highCpuUsage, avExpiryDate=avExpiryDate, idpSubStatus=idpSubStatus, webcatExpiryDate=webcatExpiryDate, diskCapacity=diskCapacity, liAntispam=liAntispam, ftpService=ftpService, swapPercentUsage=swapPercentUsage, tcpFlood=tcpFlood, httpHits=httpHits, memoryCapacity=memoryCapacity, crSystem=crSystem, imap4Service=imap4Service, synFlood=synFlood, swapCapacity=swapCapacity, diskStatus=diskStatus, sysStatus=sysStatus, sysInstall=sysInstall, SubscriptionStatusType=SubscriptionStatusType, snmpService=snmpService, highMemUsage=highMemUsage, sysLicense=sysLicense, cyberoamOpMode=cyberoamOpMode, supportSubStatus=supportSubStatus, asSubStatus=asSubStatus, idpService=idpService, elitecore=elitecore, idpVersion=idpVersion, pop3Virus=pop3Virus, serviceStats=serviceStats, pop3Service=pop3Service, RegistrationStatusType=RegistrationStatusType, idpExpiryDate=idpExpiryDate, idpAlerts=idpAlerts, dosAlerts=dosAlerts, imap4Virus=imap4Virus, PYSNMP_MODULE_ID=elitecore, SupportStatusType=SupportStatusType, cyberoamVersion=cyberoamVersion, appRegStatus=appRegStatus)
