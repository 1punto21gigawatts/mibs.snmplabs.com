#
# PySNMP MIB module ChrComPmSonetSNT-S-Current-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmSonetSNT-S-Current-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:36:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmSonet, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmSonet")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, Counter32, ModuleIdentity, MibIdentifier, IpAddress, Gauge32, iso, Integer32, Unsigned32, Bits, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "Counter32", "ModuleIdentity", "MibIdentifier", "IpAddress", "Gauge32", "iso", "Integer32", "Unsigned32", "Bits", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
chrComPmSonetSNT_S_CurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1), ).setLabel("chrComPmSonetSNT-S-CurrentTable")
if mibBuilder.loadTexts: chrComPmSonetSNT_S_CurrentTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_S_CurrentTable.setDescription('')
chrComPmSonetSNT_S_CurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1), ).setLabel("chrComPmSonetSNT-S-CurrentEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"))
if mibBuilder.loadTexts: chrComPmSonetSNT_S_CurrentEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSNT_S_CurrentEntry.setDescription('')
chrComPmSonetSuspectedInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuspectedInterval.setDescription('')
chrComPmSonetElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetElapsedTime.setDescription('')
chrComPmSonetSuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSuppressedIntrvls.setDescription('')
chrComPmSonetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetStatus.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetStatus.setDescription('')
chrComPmSonetES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetES.setDescription('')
chrComPmSonetSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSES.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSES.setDescription('')
chrComPmSonetSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetSEFS.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetSEFS.setDescription('')
chrComPmSonetCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetCV.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetCV.setDescription('')
chrComPmSonetThresholdProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetThresholdProfIndex.setDescription('')
chrComPmSonetResetPmCountersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 2, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setStatus('current')
if mibBuilder.loadTexts: chrComPmSonetResetPmCountersAction.setDescription('')
mibBuilder.exportSymbols("ChrComPmSonetSNT-S-Current-MIB", chrComPmSonetSuppressedIntrvls=chrComPmSonetSuppressedIntrvls, chrComPmSonetThresholdProfIndex=chrComPmSonetThresholdProfIndex, chrComPmSonetSNT_S_CurrentTable=chrComPmSonetSNT_S_CurrentTable, chrComPmSonetSuspectedInterval=chrComPmSonetSuspectedInterval, chrComPmSonetSEFS=chrComPmSonetSEFS, chrComPmSonetStatus=chrComPmSonetStatus, chrComPmSonetResetPmCountersAction=chrComPmSonetResetPmCountersAction, chrComPmSonetSNT_S_CurrentEntry=chrComPmSonetSNT_S_CurrentEntry, chrComPmSonetES=chrComPmSonetES, chrComPmSonetElapsedTime=chrComPmSonetElapsedTime, chrComPmSonetSES=chrComPmSonetSES, chrComPmSonetCV=chrComPmSonetCV)
