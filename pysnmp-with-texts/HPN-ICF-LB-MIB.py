#
# PySNMP MIB module HPN-ICF-LB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-LB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:39:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, iso, Counter64, Integer32, Bits, Gauge32, IpAddress, NotificationType, ModuleIdentity, ObjectIdentity, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "iso", "Counter64", "Integer32", "Bits", "Gauge32", "IpAddress", "NotificationType", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpnicfLB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116))
hpnicfLB.setRevisions(('2010-12-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfLB.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfLB.setLastUpdated('201012010000Z')
if mibBuilder.loadTexts: hpnicfLB.setOrganization('')
if mibBuilder.loadTexts: hpnicfLB.setContactInfo('')
if mibBuilder.loadTexts: hpnicfLB.setDescription('The private mib file includes the loadbalance information of the device.')
hpnicfLBTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1))
hpnicfLBRealServerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 1), )
if mibBuilder.loadTexts: hpnicfLBRealServerGroupTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerGroupTable.setDescription('Real server group table for loadbalance.')
hpnicfLBRealServerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-LB-MIB", "hpnicfLBRealServerGroupName"))
if mibBuilder.loadTexts: hpnicfLBRealServerGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerGroupEntry.setDescription('An entry contains the information of the real server group.')
hpnicfLBRealServerGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLBRealServerGroupName.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerGroupName.setDescription('Real server group name.')
hpnicfLBRealServerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 2), )
if mibBuilder.loadTexts: hpnicfLBRealServerTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerTable.setDescription('Real server table for loadbalance.')
hpnicfLBRealServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-LB-MIB", "hpnicfLBRealServerGroupName"), (0, "HPN-ICF-LB-MIB", "hpnicfLBRealServerName"))
if mibBuilder.loadTexts: hpnicfLBRealServerEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerEntry.setDescription('An entry contains the information of the real server.')
hpnicfLBRealServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLBRealServerName.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerName.setDescription('Real server name.')
hpnicfLBRealServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("slowdown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLBRealServerStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerStatus.setDescription('A list of real server status type. enabled: the real server is enabled. disabled: the real server is disabled, the loadbalance device does not assign any traffic to the real server. slowdown: the real server continues to process the existed session previously assigned to it, but the loadbalance device does not assign any new session to the real server.')
hpnicfLBRealServerConnectNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLBRealServerConnectNumber.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerConnectNumber.setDescription('The connection number of real server.')
hpnicfLBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 2))
hpnicfLBTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 2, 0))
hpnicfLBRealServerOverLoad = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 116, 2, 0, 1)).setObjects(("HPN-ICF-LB-MIB", "hpnicfLBRealServerGroupName"), ("HPN-ICF-LB-MIB", "hpnicfLBRealServerName"), ("HPN-ICF-LB-MIB", "hpnicfLBRealServerConnectNumber"))
if mibBuilder.loadTexts: hpnicfLBRealServerOverLoad.setStatus('current')
if mibBuilder.loadTexts: hpnicfLBRealServerOverLoad.setDescription('This trap is sent when the real server is overloaded.')
mibBuilder.exportSymbols("HPN-ICF-LB-MIB", hpnicfLBRealServerOverLoad=hpnicfLBRealServerOverLoad, hpnicfLBTables=hpnicfLBTables, hpnicfLBRealServerEntry=hpnicfLBRealServerEntry, hpnicfLBTrap=hpnicfLBTrap, hpnicfLBRealServerGroupEntry=hpnicfLBRealServerGroupEntry, hpnicfLBRealServerGroupTable=hpnicfLBRealServerGroupTable, hpnicfLBRealServerConnectNumber=hpnicfLBRealServerConnectNumber, hpnicfLB=hpnicfLB, hpnicfLBRealServerGroupName=hpnicfLBRealServerGroupName, hpnicfLBTrapPrex=hpnicfLBTrapPrex, hpnicfLBRealServerName=hpnicfLBRealServerName, hpnicfLBRealServerTable=hpnicfLBRealServerTable, hpnicfLBRealServerStatus=hpnicfLBRealServerStatus, PYSNMP_MODULE_ID=hpnicfLB)
