#
# PySNMP MIB module FDRY-IP-SOURCE-GUARD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FDRY-IP-SOURCE-GUARD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:13:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
snSwitch, = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwitch")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ObjectIdentity, Counter64, MibIdentifier, Unsigned32, iso, Integer32, ModuleIdentity, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ObjectIdentity", "Counter64", "MibIdentifier", "Unsigned32", "iso", "Integer32", "ModuleIdentity", "Counter32", "TimeTicks")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
fdryIpSrcGuardMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37))
fdryIpSrcGuardMIB.setRevisions(('2010-07-26 00:00', '2010-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: fdryIpSrcGuardMIB.setRevisionsDescriptions(('Changed the ORGANIZATION, CONTACT-INFO and DESCRIPTION fields.', '',))
if mibBuilder.loadTexts: fdryIpSrcGuardMIB.setLastUpdated('201007260000Z')
if mibBuilder.loadTexts: fdryIpSrcGuardMIB.setOrganization('Brocade Communications Systems, Inc.')
if mibBuilder.loadTexts: fdryIpSrcGuardMIB.setContactInfo('Technical Support Center 130 Holger Way, San Jose, CA 95134 Email: ipsupport@brocade.com Phone: 1-800-752-8061 URL: www.brocade.com')
if mibBuilder.loadTexts: fdryIpSrcGuardMIB.setDescription("Management Information for configuration of IP Source Guard feature. IP Source Guard is a security feature that restricts IP traffic on untrusted ports by filtering traffic based on the DHCP snooping binding database or manually configured IP source bindings. Copyright 1996-2010 Brocade Communications Systems, Inc. All rights reserved. This Brocade Communications Systems SNMP Management Information Base Specification embodies Brocade Communications Systems' confidential and proprietary intellectual property. Brocade Communications Systems retains all title and ownership in the Specification, including any revisions. This Specification is supplied AS IS, and Brocade Communications Systems makes no warranty, either express or implied, as to the use, operation, condition, or performance of the specification, and any unintended consequence it may on the user environment.")
class BindMode(TextualConvention, Integer32):
    description = 'Represents mode of the IP Source Guard entry.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("active", 2), ("inactive", 3))

class BindType(TextualConvention, Integer32):
    description = 'Represents type of the IP Source Guard entry.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("ip", 2))

fdryIpSrcGuardInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 1))
fdryIpSrcGuardPortVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2))
fdryIpSrcGuardBind = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3))
fdryIpSrcGuardIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 1, 1), )
if mibBuilder.loadTexts: fdryIpSrcGuardIfConfigTable.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardIfConfigTable.setDescription('A table provides the mechanism to configure enabling or disabling IP Source Guard purpose at each physical interface.')
fdryIpSrcGuardIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: fdryIpSrcGuardIfConfigEntry.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardIfConfigEntry.setDescription('A row instance contains the configuration to enable or disable IP Source Guard at each physical interface capable of this feature.')
fdryIpSrcGuardIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryIpSrcGuardIfEnable.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardIfEnable.setDescription("This object indicates whether IP Source Guard is enabled at this interface. If this object is set to 'true', IP Source Guard is enabled. Traffic coming to this interface will be forwarded. If it is from the list of IP addresses obtained from DHCP snooping. Otherwise it is denied. If this object is set to 'false', IP Source Guard is disabled.")
fdryIpSrcGuardPortVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2, 1), )
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanConfigTable.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanConfigTable.setDescription('A table provides the mechanism to configure enabling or disabling IP Source Guard purpose per port per VLAN.')
fdryIpSrcGuardPortVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2, 1, 1), ).setIndexNames((0, "FDRY-IP-SOURCE-GUARD-MIB", "fdryIpSrcGuardPortVlanPortId"), (0, "FDRY-IP-SOURCE-GUARD-MIB", "fdryIpSrcGuardPortVlanVlanId"))
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanConfigEntry.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanConfigEntry.setDescription('A row instance contains the configuration to enable or disable IP Source Guard per port per VLAN of this feature.')
fdryIpSrcGuardPortVlanPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanPortId.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanPortId.setDescription('The ifIndex of the port for IP Source Guard purpose per port per VLAN.')
fdryIpSrcGuardPortVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2, 1, 1, 2), VlanIndex())
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanVlanId.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanVlanId.setDescription('The number of VLAN for IP Source Guard purpose per port per VLAN.')
fdryIpSrcGuardPortVlanEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 2, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanEnable.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardPortVlanEnable.setDescription("This object indicates whether IP Source Guard is enabled at this interface and this VLAN number. If this object is set to 'true', IP Source Guard per-port-per-VLAN is enabled. If this object is set to 'false', IP Source Guard per-port-per-VLAN is disabled.")
fdryIpSrcGuardBindTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1), )
if mibBuilder.loadTexts: fdryIpSrcGuardBindTable.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindTable.setDescription('A table provides the information of IP addresses used IP Source Guard purpose at each physical interface with or without specific VLAN memberships ')
fdryIpSrcGuardBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "FDRY-IP-SOURCE-GUARD-MIB", "fdryIpSrcGuardBindIpAddr"))
if mibBuilder.loadTexts: fdryIpSrcGuardBindEntry.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindEntry.setDescription('A row instance contains IP address used for IP Source Guard purpose at each physical interface with or without specific VLAN memberships .')
fdryIpSrcGuardBindIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: fdryIpSrcGuardBindIpAddr.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindIpAddr.setDescription('The device IP address.')
fdryIpSrcGuardBindVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryIpSrcGuardBindVlanId.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindVlanId.setDescription('This object indicates the specific VLAN memberships on this interface. The VLAN number is optional. If you configure a VLAN number, the bindings applies to that VLAN only. If you do not configure a VLAN number, the static applies to all VLANs associated with the port. In this case, the VLAN number will be displayed as 0.')
fdryIpSrcGuardBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fdryIpSrcGuardBindRowStatus.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindRowStatus.setDescription('This variable is used to create, or delete a row in this table. When a row in this table is in active(1) state, no objects in that row can be modified except this object.')
fdryIpSrcGuardBindMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1, 4), BindMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryIpSrcGuardBindMode.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindMode.setDescription('The mode of the IP Source Guard entry')
fdryIpSrcGuardBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 37, 3, 1, 1, 5), BindType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryIpSrcGuardBindType.setStatus('current')
if mibBuilder.loadTexts: fdryIpSrcGuardBindType.setDescription('The type of the IP Source Guard entry')
mibBuilder.exportSymbols("FDRY-IP-SOURCE-GUARD-MIB", BindMode=BindMode, fdryIpSrcGuardInterface=fdryIpSrcGuardInterface, fdryIpSrcGuardBindTable=fdryIpSrcGuardBindTable, fdryIpSrcGuardPortVlan=fdryIpSrcGuardPortVlan, fdryIpSrcGuardBindVlanId=fdryIpSrcGuardBindVlanId, fdryIpSrcGuardPortVlanVlanId=fdryIpSrcGuardPortVlanVlanId, fdryIpSrcGuardBindEntry=fdryIpSrcGuardBindEntry, fdryIpSrcGuardPortVlanConfigTable=fdryIpSrcGuardPortVlanConfigTable, fdryIpSrcGuardBindIpAddr=fdryIpSrcGuardBindIpAddr, fdryIpSrcGuardIfConfigEntry=fdryIpSrcGuardIfConfigEntry, fdryIpSrcGuardIfEnable=fdryIpSrcGuardIfEnable, fdryIpSrcGuardBindType=fdryIpSrcGuardBindType, fdryIpSrcGuardPortVlanConfigEntry=fdryIpSrcGuardPortVlanConfigEntry, fdryIpSrcGuardBindMode=fdryIpSrcGuardBindMode, fdryIpSrcGuardPortVlanPortId=fdryIpSrcGuardPortVlanPortId, fdryIpSrcGuardBindRowStatus=fdryIpSrcGuardBindRowStatus, PYSNMP_MODULE_ID=fdryIpSrcGuardMIB, fdryIpSrcGuardIfConfigTable=fdryIpSrcGuardIfConfigTable, fdryIpSrcGuardBind=fdryIpSrcGuardBind, BindType=BindType, fdryIpSrcGuardPortVlanEnable=fdryIpSrcGuardPortVlanEnable, fdryIpSrcGuardMIB=fdryIpSrcGuardMIB)
