#
# PySNMP MIB module HUAWEI-BRAS-MVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-MVLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
VlanIndex, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex", "VlanId")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, Unsigned32, MibIdentifier, Integer32, Counter32, ModuleIdentity, NotificationType, Counter64, ObjectIdentity, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "Counter32", "ModuleIdentity", "NotificationType", "Counter64", "ObjectIdentity", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwMVLAN = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14))
if mibBuilder.loadTexts: hwMVLAN.setLastUpdated('200708271200Z')
if mibBuilder.loadTexts: hwMVLAN.setOrganization('Huawei Technologies Co., Ltd.')
if mibBuilder.loadTexts: hwMVLAN.setContactInfo('R&D NanJing, Huawei Technologies co.,Ltd. Huihong Bld.,NO.91 Baixia Rd., Bai-Xia District Nanjing P.R. China Zip:210001 Http://www.huawei.com E-mail:support@huawei.com.')
if mibBuilder.loadTexts: hwMVLAN.setDescription('The HUAWEI-BRAS-MVLAN-MIB contains objects to manage BRAS.')
hwhwMVLANMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1))
hwMulticastVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1), )
if mibBuilder.loadTexts: hwMulticastVlanTable.setStatus('current')
if mibBuilder.loadTexts: hwMulticastVlanTable.setDescription('A table of setting multicast program VlanTable.')
hwMulticastVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-MVLAN-MIB", "hwMulticastVlanIfIndex"))
if mibBuilder.loadTexts: hwMulticastVlanEntry.setStatus('current')
if mibBuilder.loadTexts: hwMulticastVlanEntry.setDescription('An entry of hwMulticastVlanEntry.')
hwMulticastVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMulticastVlanIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwMulticastVlanIfIndex.setDescription('A value used to index per-VLAN tables: values of 0 and 4095 are not permitted. If the value is between 1 and 4094 inclusive, it represents an IEEE 802.1Q VLAN-ID with global scope within a given bridged domain (see VlanId textual convention). If the value is greater than 4095, then it represents a VLAN with scope local to the particular agent, i.e., one without a global VLAN-ID assigned to it. Such VLANs are outside the scope of IEEE 802.1Q, but it is convenient to be able to manage them in the same way using this MIB.')
hwMulticastInnerVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMulticastInnerVlan.setReference('IEEE Std 802.1Q 2003 Edition, Virtual Bridged Local Area Networks.')
if mibBuilder.loadTexts: hwMulticastInnerVlan.setStatus('current')
if mibBuilder.loadTexts: hwMulticastInnerVlan.setDescription('The hwMulticastInnerVlan that uniquely identifies a VLAN. This is the 12-bit VLAN-ID used in the VLAN Tag header. The range is defined by the REFERENCEd specification.')
hwMulticastOuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1, 1, 3), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMulticastOuterVlan.setReference('IEEE Std 802.1Q 2003 Edition, Virtual Bridged Local Area Networks.')
if mibBuilder.loadTexts: hwMulticastOuterVlan.setStatus('current')
if mibBuilder.loadTexts: hwMulticastOuterVlan.setDescription('The hwMulticastOuterVlan that uniquely identifies a VLAN. This is the 12-bit VLAN-ID used in the VLAN Tag header. The range is defined by the REFERENCEd specification.')
hwMulticastOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("set", 0), ("undo", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMulticastOpType.setStatus('current')
if mibBuilder.loadTexts: hwMulticastOpType.setDescription('0 : set multicast-vlan. 1 : undo multicast-vlan.')
hwMVlanMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 2))
hwMVlanMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 2, 1))
hwMVlanMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 2, 1, 1)).setObjects(("HUAWEI-BRAS-MVLAN-MIB", "hwMVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMVlanMIBCompliance = hwMVlanMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hwMVlanMIBCompliance.setDescription('The compliance statement for systems supporting the HUAWEI-DATACOMM-OID-MIB.')
hwMVlanMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 2, 2))
hwMVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 14, 2, 2, 1)).setObjects(("HUAWEI-BRAS-MVLAN-MIB", "hwMulticastVlanIfIndex"), ("HUAWEI-BRAS-MVLAN-MIB", "hwMulticastInnerVlan"), ("HUAWEI-BRAS-MVLAN-MIB", "hwMulticastOuterVlan"), ("HUAWEI-BRAS-MVLAN-MIB", "hwMulticastOpType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMVlanGroup = hwMVlanGroup.setStatus('current')
if mibBuilder.loadTexts: hwMVlanGroup.setDescription('The hwMVLAN group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-MVLAN-MIB", hwMulticastOuterVlan=hwMulticastOuterVlan, hwMVlanMIBCompliance=hwMVlanMIBCompliance, hwMVlanMIBConformance=hwMVlanMIBConformance, hwhwMVLANMibObjects=hwhwMVLANMibObjects, hwMVlanGroup=hwMVlanGroup, hwMulticastOpType=hwMulticastOpType, hwMVlanMIBGroups=hwMVlanMIBGroups, hwMulticastVlanIfIndex=hwMulticastVlanIfIndex, hwMulticastInnerVlan=hwMulticastInnerVlan, PYSNMP_MODULE_ID=hwMVLAN, hwMVLAN=hwMVLAN, hwMulticastVlanEntry=hwMulticastVlanEntry, hwMVlanMIBCompliances=hwMVlanMIBCompliances, hwMulticastVlanTable=hwMulticastVlanTable)
