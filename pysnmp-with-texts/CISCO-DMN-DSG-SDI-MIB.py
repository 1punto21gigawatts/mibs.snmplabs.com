#
# PySNMP MIB module CISCO-DMN-DSG-SDI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-SDI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:55:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, Integer32, Unsigned32, iso, IpAddress, Counter32, ObjectIdentity, ModuleIdentity, TimeTicks, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Unsigned32", "iso", "IpAddress", "Counter32", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoDSGSDI = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32))
ciscoDSGSDI.setRevisions(('2012-03-20 11:00', '2010-08-24 07:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGSDI.setRevisionsDescriptions(('V01.00.01 2012-03-20 Updated for D9854 R4 Release.', 'V01.00.00 2010-08-24 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGSDI.setLastUpdated('201203201100Z')
if mibBuilder.loadTexts: ciscoDSGSDI.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGSDI.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGSDI.setDescription('Cisco SDI MIB.')
sdiTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2))
sdiInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1))
sdiVii = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdiVii.setStatus('current')
if mibBuilder.loadTexts: sdiVii.setDescription('VII Control Disable/Enable.')
vancGlobalStatusInterlaced = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusInterlaced.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusInterlaced.setDescription('Indicates if Output is Interlaced.')
vancGlobalStatusFrames = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusFrames.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusFrames.setDescription('Video Frames Per Second.')
vancGlobalStatusLines = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusLines.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusLines.setDescription('Lines Per Video Frame.')
vancGlobalStatusWords = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusWords.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusWords.setDescription('VANC Words Per Line.')
vancGlobalStatusFirst = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusFirst.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusFirst.setDescription('VANC Area: First Line.')
vancGlobalStatusLast = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusLast.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusLast.setDescription('VANC Area: Last Line.')
vancGlobalStatusSwitch = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusSwitch.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusSwitch.setDescription('VANC Area: Switch Line.')
vancGlobalStatusMultiLine = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancGlobalStatusMultiLine.setStatus('current')
if mibBuilder.loadTexts: vancGlobalStatusMultiLine.setDescription('Multi-line VANC Injection Support.')
vancCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 1), )
if mibBuilder.loadTexts: vancCfgTable.setStatus('current')
if mibBuilder.loadTexts: vancCfgTable.setDescription('VANC Configuration Info Table')
vancCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-SDI-MIB", "vancCfgSvcID"))
if mibBuilder.loadTexts: vancCfgEntry.setStatus('current')
if mibBuilder.loadTexts: vancCfgEntry.setDescription('VANC Configuration Entry.')
vancCfgSvcID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("eia708", 1), ("afd", 2), ("dpi", 3), ("smpte2031", 4), ("sdpOP47", 5), ("multiOP47", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancCfgSvcID.setStatus('current')
if mibBuilder.loadTexts: vancCfgSvcID.setDescription('VANC Service Identifier.')
vancCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vancCfgEnable.setStatus('current')
if mibBuilder.loadTexts: vancCfgEnable.setDescription('VANC Service Enabled.')
vancCfgOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vancCfgOffset.setStatus('current')
if mibBuilder.loadTexts: vancCfgOffset.setDescription('Offset From the First VANC Switch Line.')
sdiAudioSlotTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2), )
if mibBuilder.loadTexts: sdiAudioSlotTable.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotTable.setDescription('Table of SDI Audio Slot Information.')
sdiAudioSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-SDI-MIB", "sdiAudioSlotGroup"), (0, "CISCO-DMN-DSG-SDI-MIB", "sdiAudioSlotPosition"))
if mibBuilder.loadTexts: sdiAudioSlotEntry.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotEntry.setDescription('SDI Audio Slot Entry.')
sdiAudioSlotGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdiAudioSlotGroup.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotGroup.setDescription('Channel Grouping.')
sdiAudioSlotPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdiAudioSlotPosition.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotPosition.setDescription('HANC Position.')
sdiAudioSlotAud = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdiAudioSlotAud.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotAud.setDescription('Source Audio.')
sdiAudioSlotChan = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sdiAudioSlotChan.setStatus('current')
if mibBuilder.loadTexts: sdiAudioSlotChan.setDescription('Source Audio Channel.')
vancServiceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3), )
if mibBuilder.loadTexts: vancServiceStatusTable.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusTable.setDescription('VANC Service Status Table.')
vancServiceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-SDI-MIB", "vancServiceStatusServiceID"))
if mibBuilder.loadTexts: vancServiceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusEntry.setDescription('VANC Service Status Entry.')
vancServiceStatusServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("eia708", 1), ("afd", 2), ("dpi", 3), ("smpte2031", 4), ("sdpOP47", 5), ("multiOP47", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusServiceID.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusServiceID.setDescription('VANC Service Identifier.')
vancServiceStatusActive = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusActive.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusActive.setDescription('Offset From the First VANC Switch Line.')
vancServiceStatusADJLine = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusADJLine.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusADJLine.setDescription('Line Number Where VANC Service is Expected.')
vancServiceStatusACTLineF1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusACTLineF1.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusACTLineF1.setDescription('Line Number Where VANC Service is Located (In Top Field or Frame).')
vancServiceStatusACTLineF2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusACTLineF2.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusACTLineF2.setDescription('Line Number Where VANC Service is Actually Located (In Bottom Field).')
vancServiceStatusLinesMAX = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusLinesMAX.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusLinesMAX.setDescription('Max Number of Lines Used by VANC Service.')
vancServiceStatusDataAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusDataAvg.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusDataAvg.setDescription('Average Size of VANC Service Data Per Frame.')
vancServiceStatusPacketsOKAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusPacketsOKAvg.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusPacketsOKAvg.setDescription('Average Number of Transmitted VANC Packets Per Frame.')
vancServiceStatusPacketsDroppedAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 32, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vancServiceStatusPacketsDroppedAvg.setStatus('current')
if mibBuilder.loadTexts: vancServiceStatusPacketsDroppedAvg.setDescription('Average Number of Dropped VANC Packets Per Frame.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-SDI-MIB", sdiTable=sdiTable, vancServiceStatusDataAvg=vancServiceStatusDataAvg, sdiVii=sdiVii, vancGlobalStatusLines=vancGlobalStatusLines, vancCfgSvcID=vancCfgSvcID, sdiInfo=sdiInfo, vancServiceStatusServiceID=vancServiceStatusServiceID, sdiAudioSlotChan=sdiAudioSlotChan, vancServiceStatusLinesMAX=vancServiceStatusLinesMAX, ciscoDSGSDI=ciscoDSGSDI, vancCfgTable=vancCfgTable, sdiAudioSlotAud=sdiAudioSlotAud, vancServiceStatusEntry=vancServiceStatusEntry, vancServiceStatusPacketsOKAvg=vancServiceStatusPacketsOKAvg, sdiAudioSlotTable=sdiAudioSlotTable, vancServiceStatusTable=vancServiceStatusTable, vancGlobalStatusLast=vancGlobalStatusLast, vancGlobalStatusWords=vancGlobalStatusWords, vancGlobalStatusMultiLine=vancGlobalStatusMultiLine, vancCfgEntry=vancCfgEntry, vancGlobalStatusFirst=vancGlobalStatusFirst, vancGlobalStatusFrames=vancGlobalStatusFrames, vancServiceStatusActive=vancServiceStatusActive, sdiAudioSlotEntry=sdiAudioSlotEntry, sdiAudioSlotGroup=sdiAudioSlotGroup, vancGlobalStatusInterlaced=vancGlobalStatusInterlaced, vancGlobalStatusSwitch=vancGlobalStatusSwitch, sdiAudioSlotPosition=sdiAudioSlotPosition, vancServiceStatusACTLineF2=vancServiceStatusACTLineF2, PYSNMP_MODULE_ID=ciscoDSGSDI, vancServiceStatusACTLineF1=vancServiceStatusACTLineF1, vancCfgEnable=vancCfgEnable, vancServiceStatusADJLine=vancServiceStatusADJLine, vancCfgOffset=vancCfgOffset, vancServiceStatusPacketsDroppedAvg=vancServiceStatusPacketsDroppedAvg)
