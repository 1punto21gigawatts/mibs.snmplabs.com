#
# PySNMP MIB module BW-BroadworksXtendedServicesPlatform (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BW-BroadworksXtendedServicesPlatform
# Produced by pysmi-0.3.4 at Wed May  1 11:42:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, NotificationType, iso, enterprises, Gauge32, Bits, Counter64, Unsigned32, TimeTicks, ModuleIdentity, IpAddress, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "iso", "enterprises", "Gauge32", "Bits", "Counter64", "Unsigned32", "TimeTicks", "ModuleIdentity", "IpAddress", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
broadsoft = ModuleIdentity((1, 3, 6, 1, 4, 1, 6431))
broadsoft.setRevisions(('2008-10-28 10:54', '2008-07-18 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: broadsoft.setRevisionsDescriptions(('Added new counters for XSI-Events feature', 'MIB Compliancy.',))
if mibBuilder.loadTexts: broadsoft.setLastUpdated('200810281054Z')
if mibBuilder.loadTexts: broadsoft.setOrganization('Broadsoft, Inc')
if mibBuilder.loadTexts: broadsoft.setContactInfo('Broadsoft, Inc 220 Perry Parkway Gaithersburg, MD 20877 301-977-9440')
if mibBuilder.loadTexts: broadsoft.setDescription('The BW-BroadworksXtendedServicesPlatform.mib is introduces to capture the performance measurements for the BroadWorks Xtended Services Platform.')
broadworks = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1))
bwXtendedServicesPlatform = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12))
protocols = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1))
bwXspMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000))
bcct = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1))
auth = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 2))
oci = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3))
nsLocationAPI = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 4))
nsPortalAPI = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 5))
bwXspCommonCommStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1), )
if mibBuilder.loadTexts: bwXspCommonCommStatsTable.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommStatsTable.setDescription('This table contains counters for BCCT for the XSP process.')
bwXspCommonCommStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommStatsIndex"))
if mibBuilder.loadTexts: bwXspCommonCommStatsEntry.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommStatsEntry.setDescription('Definition of the entries for bwOCSCommonCommStatsTable.')
bwXspCommonCommStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXspCommonCommStatsIndex.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommStatsIndex.setDescription('This integer represents an index in table bwXspCommonCommStatsTable. The index represents a connection for a specific Host-Interfacece-Protocol combination.')
bwXspCommonCommHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXspCommonCommHost.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommHost.setDescription('The address of a host connected to the BroadWorks Common Communication Protocol.')
bwXspCommonCommInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXspCommonCommInterface.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommInterface.setDescription('The IP address of a local interface that a protocol is bound to.')
bwXspCommonCommProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXspCommonCommProtocol.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommProtocol.setDescription('The name of a BroadWorks Common Communication Protocol client protocol, e.g. OCI.')
bwXspCommonCommAcceptedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommAcceptedOutboundConnections.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommAcceptedOutboundConnections.setDescription('This counter is incremented whenever a client in this process connects to the framework to a remote host, using the interface and protocol.')
bwXspCommonCommAcceptedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommAcceptedInboundConnections.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommAcceptedInboundConnections.setDescription('This counter is incremented whenever a client in this process connects to the framework from a remote host, using the interface and protocol.')
bwXspCommonCommRejectedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommRejectedOutboundConnections.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommRejectedOutboundConnections.setDescription('This counter is incremented whenever a client connection request going from this process to a remote host and going through this interface has been rejected for a particular protocol.')
bwXspCommonCommRejectedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommRejectedInboundConnections.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommRejectedInboundConnections.setDescription('This counter is incremented whenever a client connection request coming to this host and going through this interface has been rejected by the framework for a particular protocol.')
bwXspCommonCommOutputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommOutputMessagesProcessed.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommOutputMessagesProcessed.setDescription('This counter is incremented whenever a message has been sent and processed for this host, interface and protocol.')
bwXspCommonCommInputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommInputMessagesProcessed.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommInputMessagesProcessed.setDescription('This counter is incremented whenever a message has been received and processed for this host, interface and protocol.')
bwXspCommonCommOutputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommOutputCommunicationErrors.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommOutputCommunicationErrors.setDescription('This counter is incremented whenever a message could not be read because the TCP stack returned an error.')
bwXspCommonCommInputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspCommonCommInputCommunicationErrors.setStatus('current')
if mibBuilder.loadTexts: bwXspCommonCommInputCommunicationErrors.setDescription('This counter is incremented whenever a message has been sent and processed for this host, interface and protocol.')
bwXspAuthenticationAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspAuthenticationAttempts.setStatus('current')
if mibBuilder.loadTexts: bwXspAuthenticationAttempts.setDescription('This counter is incremented when the XSP sends an authentication message to the Authentication Server, e.g. BroadWorks PS.')
bwXspAuthenticationFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 2, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspAuthenticationFailed.setStatus('current')
if mibBuilder.loadTexts: bwXspAuthenticationFailed.setDescription('This counter is incremented when the XSP receives an authentication failure response from the Authentication Server, e.g. BroadWorks PS.')
bwXspOCIRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCIRequests.setStatus('current')
if mibBuilder.loadTexts: bwXspOCIRequests.setDescription('The number of OCI request messages sent to the BroadWorks PS.')
bwXspOCIResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCIResponses.setStatus('current')
if mibBuilder.loadTexts: bwXspOCIResponses.setDescription('The number of request response to OCI messages received from the BroadWorks PS.')
bwXspOCIUnauthorizedMessage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCIUnauthorizedMessage.setStatus('current')
if mibBuilder.loadTexts: bwXspOCIUnauthorizedMessage.setDescription('The number of error response due to unauthorized session received from the BroadWorks PS.')
bwXspOCICRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICRequests.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICRequests.setDescription('The number of OCI-C request messages sent to the BroadWorks XS.')
bwXspOCICResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICResponses.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICResponses.setDescription('The number of request response to OCI-C messages received from the BroadWorks XS.')
bwXspOCICMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICMessagesReceived.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICMessagesReceived.setDescription('This counter is incremented when a message from an XS is received.')
bwXspOCICMessagesRejected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICMessagesRejected.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICMessagesRejected.setDescription('This counter is incremented when a message from an XS is rejected before it reaches the web application.')
bwXspOCICMessagesDelivered = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICMessagesDelivered.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICMessagesDelivered.setDescription('This counter is incremented when a message from an XS is delivered to the web application.')
bwXspOCICMessagesReplied = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 3, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspOCICMessagesReplied.setStatus('current')
if mibBuilder.loadTexts: bwXspOCICMessagesReplied.setDescription('This counter is incremented when a reply from an web application is delivered to the XS.')
bwXspNsLocAPIAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 4, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspNsLocAPIAttempts.setStatus('current')
if mibBuilder.loadTexts: bwXspNsLocAPIAttempts.setDescription('This counter is incremented when the XSP sends a location API request to a Network Server.')
bwXspNsLocAPIResponseFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 4, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspNsLocAPIResponseFailed.setStatus('current')
if mibBuilder.loadTexts: bwXspNsLocAPIResponseFailed.setDescription('This counter is incremented when the XSP receives a failed location API response from the Network Server.')
bwXspNsASDiscoveryAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 5, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspNsASDiscoveryAttempts.setStatus('current')
if mibBuilder.loadTexts: bwXspNsASDiscoveryAttempts.setDescription('This counter is incremented when the Xsp sends a PortalAPI request to a Network Server.')
bwXspNsASDiscoveryAttemptsFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXspNsASDiscoveryAttemptsFailed.setStatus('current')
if mibBuilder.loadTexts: bwXspNsASDiscoveryAttemptsFailed.setDescription('This counter is incremented when the Xsp is unable to receive a successful PortalAPI request from the Network Server.')
bwXspMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1))
bwXspMibCompliancy = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 2))
bwXspBcctGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1, 1)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommStatsIndex"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommHost"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommInterface"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommProtocol"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommAcceptedOutboundConnections"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommAcceptedInboundConnections"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommRejectedOutboundConnections"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommRejectedInboundConnections"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommOutputMessagesProcessed"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommInputMessagesProcessed"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommOutputCommunicationErrors"), ("BW-BroadworksXtendedServicesPlatform", "bwXspCommonCommInputCommunicationErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspBcctGroup = bwXspBcctGroup.setStatus('current')
if mibBuilder.loadTexts: bwXspBcctGroup.setDescription('This group defines the Xsp statistics for the BCCT protocol to the BroadWorks Application.')
bwXspAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1, 2)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspAuthenticationAttempts"), ("BW-BroadworksXtendedServicesPlatform", "bwXspAuthenticationFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspAuthGroup = bwXspAuthGroup.setStatus('current')
if mibBuilder.loadTexts: bwXspAuthGroup.setDescription('This group defines the XSP statistics for the auth component.')
bwXspOciGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1, 3)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspOCIRequests"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCIResponses"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCIUnauthorizedMessage"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICRequests"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICResponses"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICMessagesReceived"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICMessagesRejected"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICMessagesDelivered"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOCICMessagesReplied"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspOciGroup = bwXspOciGroup.setStatus('current')
if mibBuilder.loadTexts: bwXspOciGroup.setDescription('This group defines the Xsp statistics for the OCI protocol to the BroadWorks Application.')
bwXspNsLocAPIGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1, 4)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspNsLocAPIAttempts"), ("BW-BroadworksXtendedServicesPlatform", "bwXspNsLocAPIResponseFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspNsLocAPIGroup = bwXspNsLocAPIGroup.setStatus('current')
if mibBuilder.loadTexts: bwXspNsLocAPIGroup.setDescription('This group defines the Xsp statistics for the NS Location API protocol to the BroadWorks Network Server.')
bwXspNsPortalAPIGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 1, 5)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspNsASDiscoveryAttempts"), ("BW-BroadworksXtendedServicesPlatform", "bwXspNsASDiscoveryAttemptsFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspNsPortalAPIGroup = bwXspNsPortalAPIGroup.setStatus('current')
if mibBuilder.loadTexts: bwXspNsPortalAPIGroup.setDescription('This group defines the Xsp statistics for the NS Portal API protocol to the BroadWorks Network Server.')
bwXspBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6431, 1, 12, 1000, 2, 1)).setObjects(("BW-BroadworksXtendedServicesPlatform", "bwXspBcctGroup"), ("BW-BroadworksXtendedServicesPlatform", "bwXspAuthGroup"), ("BW-BroadworksXtendedServicesPlatform", "bwXspOciGroup"), ("BW-BroadworksXtendedServicesPlatform", "bwXspNsLocAPIGroup"), ("BW-BroadworksXtendedServicesPlatform", "bwXspNsPortalAPIGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXspBasicCompliance = bwXspBasicCompliance.setStatus('current')
if mibBuilder.loadTexts: bwXspBasicCompliance.setDescription('BroadWorks Xtended Services Platform MIB compliance')
mibBuilder.exportSymbols("BW-BroadworksXtendedServicesPlatform", nsPortalAPI=nsPortalAPI, bwXspCommonCommStatsEntry=bwXspCommonCommStatsEntry, broadsoft=broadsoft, bwXspMibCompliancy=bwXspMibCompliancy, bwXspCommonCommInterface=bwXspCommonCommInterface, bwXspOCICMessagesReceived=bwXspOCICMessagesReceived, bwXspNsPortalAPIGroup=bwXspNsPortalAPIGroup, bwXspCommonCommInputMessagesProcessed=bwXspCommonCommInputMessagesProcessed, bwXspCommonCommStatsIndex=bwXspCommonCommStatsIndex, bwXtendedServicesPlatform=bwXtendedServicesPlatform, bwXspAuthenticationFailed=bwXspAuthenticationFailed, bwXspMibGroups=bwXspMibGroups, bwXspOciGroup=bwXspOciGroup, bwXspCommonCommOutputCommunicationErrors=bwXspCommonCommOutputCommunicationErrors, bwXspCommonCommAcceptedInboundConnections=bwXspCommonCommAcceptedInboundConnections, bwXspAuthenticationAttempts=bwXspAuthenticationAttempts, bwXspOCICMessagesRejected=bwXspOCICMessagesRejected, bwXspCommonCommHost=bwXspCommonCommHost, bwXspCommonCommRejectedInboundConnections=bwXspCommonCommRejectedInboundConnections, bwXspBasicCompliance=bwXspBasicCompliance, bwXspNsLocAPIGroup=bwXspNsLocAPIGroup, bwXspCommonCommRejectedOutboundConnections=bwXspCommonCommRejectedOutboundConnections, bwXspOCICRequests=bwXspOCICRequests, bwXspOCICMessagesDelivered=bwXspOCICMessagesDelivered, bwXspBcctGroup=bwXspBcctGroup, bwXspCommonCommOutputMessagesProcessed=bwXspCommonCommOutputMessagesProcessed, bwXspMibConformance=bwXspMibConformance, bwXspCommonCommProtocol=bwXspCommonCommProtocol, bwXspOCIResponses=bwXspOCIResponses, bwXspOCIRequests=bwXspOCIRequests, auth=auth, bwXspAuthGroup=bwXspAuthGroup, bwXspNsLocAPIResponseFailed=bwXspNsLocAPIResponseFailed, bwXspNsASDiscoveryAttempts=bwXspNsASDiscoveryAttempts, bwXspOCIUnauthorizedMessage=bwXspOCIUnauthorizedMessage, PYSNMP_MODULE_ID=broadsoft, protocols=protocols, oci=oci, bwXspOCICResponses=bwXspOCICResponses, bwXspCommonCommStatsTable=bwXspCommonCommStatsTable, broadworks=broadworks, bcct=bcct, bwXspNsLocAPIAttempts=bwXspNsLocAPIAttempts, bwXspOCICMessagesReplied=bwXspOCICMessagesReplied, bwXspNsASDiscoveryAttemptsFailed=bwXspNsASDiscoveryAttemptsFailed, bwXspCommonCommInputCommunicationErrors=bwXspCommonCommInputCommunicationErrors, bwXspCommonCommAcceptedOutboundConnections=bwXspCommonCommAcceptedOutboundConnections, nsLocationAPI=nsLocationAPI)
