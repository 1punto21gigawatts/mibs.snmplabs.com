#
# PySNMP MIB module ASCEND-MIBBWALLOC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBBWALLOC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:26:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, ObjectIdentity, IpAddress, Counter64, Integer32, Unsigned32, Counter32, Bits, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Counter64", "Integer32", "Unsigned32", "Counter32", "Bits", "MibIdentifier", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibbandwidthAllocProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 29))
mibbandwidthStatsProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 64))
mibbandwidthAllocProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 29, 1), )
if mibBuilder.loadTexts: mibbandwidthAllocProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfileTable.setDescription('A list of mibbandwidthAllocProfile profile entries.')
mibbandwidthAllocProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 29, 1, 1), ).setIndexNames((0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-Index-o"))
if mibBuilder.loadTexts: mibbandwidthAllocProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfileEntry.setDescription('A mibbandwidthAllocProfile entry containing objects that maps to the parameters of mibbandwidthAllocProfile profile.')
bandwidthAllocProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 1, 1, 1), Integer32()).setLabel("bandwidthAllocProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_Index_o.setDescription('')
bandwidthAllocProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("bandwidthAllocProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_Action_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_Action_o.setDescription('')
mibbandwidthAllocProfile_TrafficShapersTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 29, 2), ).setLabel("mibbandwidthAllocProfile-TrafficShapersTable")
if mibBuilder.loadTexts: mibbandwidthAllocProfile_TrafficShapersTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_TrafficShapersTable.setDescription('A list of mibbandwidthAllocProfile__traffic_shapers profile entries.')
mibbandwidthAllocProfile_TrafficShapersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1), ).setLabel("mibbandwidthAllocProfile-TrafficShapersEntry").setIndexNames((0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-TrafficShapers-Index-o"), (0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-TrafficShapers-Index1-o"))
if mibBuilder.loadTexts: mibbandwidthAllocProfile_TrafficShapersEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_TrafficShapersEntry.setDescription('A mibbandwidthAllocProfile__traffic_shapers entry containing objects that maps to the parameters of mibbandwidthAllocProfile__traffic_shapers profile.')
bandwidthAllocProfile_TrafficShapers_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 1), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Index_o.setDescription('')
bandwidthAllocProfile_TrafficShapers_Index1_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 2), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-Index1-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Index1_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Index1_o.setDescription('')
bandwidthAllocProfile_TrafficShapers_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("bandwidthAllocProfile-TrafficShapers-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Enabled.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Enabled.setDescription('TRUE if the shaper is enabled, otherwise FALSE.')
bandwidthAllocProfile_TrafficShapers_BitRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 4), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-BitRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_BitRate.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_BitRate.setDescription('What is the sustained rate in Kilobits per second that can be transmitted by the VC(s) when using this shaper. Limited by the framer mode and the interface type.')
bandwidthAllocProfile_TrafficShapers_PeakRate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 5), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-PeakRate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_PeakRate.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_PeakRate.setDescription('What is the peak rate in Kilobits per second that can be transmitted by the VC(s) when using this shaper. Limited by the framer mode and the interface type.')
bandwidthAllocProfile_TrafficShapers_MaxBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 6), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-MaxBurstSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_MaxBurstSize.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_MaxBurstSize.setDescription('What is the maximum burst size in cell that can be transmitted during the peak rate by the VC(s) when using this shaper.')
bandwidthAllocProfile_TrafficShapers_Aggregate = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("bandwidthAllocProfile-TrafficShapers-Aggregate").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Aggregate.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Aggregate.setDescription('If FALSE each individual VC gets the bit rate that is assigned to this shaper. If TRUE the VCs share the bit rate that is assigned to this shaper equally.')
bandwidthAllocProfile_TrafficShapers_Priority = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 2, 1, 8), Integer32()).setLabel("bandwidthAllocProfile-TrafficShapers-Priority").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Priority.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_TrafficShapers_Priority.setDescription('A number that represent the prioriy of the shaper in respect to other shapers. 0 is the highest priority and 15 is the lowest.')
mibbandwidthAllocProfile_BandwidthConfigTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 29, 4), ).setLabel("mibbandwidthAllocProfile-BandwidthConfigTable")
if mibBuilder.loadTexts: mibbandwidthAllocProfile_BandwidthConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_BandwidthConfigTable.setDescription('A list of mibbandwidthAllocProfile__bandwidth_config profile entries.')
mibbandwidthAllocProfile_BandwidthConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 29, 4, 1), ).setLabel("mibbandwidthAllocProfile-BandwidthConfigEntry").setIndexNames((0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-BandwidthConfig-Index-o"), (0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-BandwidthConfig-Index1-o"))
if mibBuilder.loadTexts: mibbandwidthAllocProfile_BandwidthConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_BandwidthConfigEntry.setDescription('A mibbandwidthAllocProfile__bandwidth_config entry containing objects that maps to the parameters of mibbandwidthAllocProfile__bandwidth_config profile.')
bandwidthAllocProfile_BandwidthConfig_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 4, 1, 1), Integer32()).setLabel("bandwidthAllocProfile-BandwidthConfig-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_Index_o.setDescription('')
bandwidthAllocProfile_BandwidthConfig_Index1_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 4, 1, 2), Integer32()).setLabel("bandwidthAllocProfile-BandwidthConfig-Index1-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_Index1_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_Index1_o.setDescription('')
bandwidthAllocProfile_BandwidthConfig_AllowMaxUpStreamBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 4, 1, 3), Integer32()).setLabel("bandwidthAllocProfile-BandwidthConfig-AllowMaxUpStreamBandwidth").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_AllowMaxUpStreamBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_AllowMaxUpStreamBandwidth.setDescription('Allowed maximum upstream bandwidth of the slot in Kbits/sec. The slot can send upstream traffic up to this limit but there is no guarantee that slot will be able to send this much traffic.')
bandwidthAllocProfile_BandwidthConfig_AllowGuaranteedUpStreamBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 4, 1, 4), Integer32()).setLabel("bandwidthAllocProfile-BandwidthConfig-AllowGuaranteedUpStreamBandwidth").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_AllowGuaranteedUpStreamBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_BandwidthConfig_AllowGuaranteedUpStreamBandwidth.setDescription('Allowed guaranteed upstream bandwidth of the slot in Kbits/sec. The slot can have real-time (guaranteed) traffic bandwidth up to this limit. The total of guaranteed up stream bandwidth from all slots can not be more than the maximum bandwidth of the system.')
mibbandwidthAllocProfile_SlotVpiVciRangeTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 29, 5), ).setLabel("mibbandwidthAllocProfile-SlotVpiVciRangeTable")
if mibBuilder.loadTexts: mibbandwidthAllocProfile_SlotVpiVciRangeTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_SlotVpiVciRangeTable.setDescription('A list of mibbandwidthAllocProfile__slot_vpi_vci_range profile entries.')
mibbandwidthAllocProfile_SlotVpiVciRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 29, 5, 1), ).setLabel("mibbandwidthAllocProfile-SlotVpiVciRangeEntry").setIndexNames((0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-SlotVpiVciRange-Index-o"), (0, "ASCEND-MIBBWALLOC-MIB", "bandwidthAllocProfile-SlotVpiVciRange-Index1-o"))
if mibBuilder.loadTexts: mibbandwidthAllocProfile_SlotVpiVciRangeEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthAllocProfile_SlotVpiVciRangeEntry.setDescription('A mibbandwidthAllocProfile__slot_vpi_vci_range entry containing objects that maps to the parameters of mibbandwidthAllocProfile__slot_vpi_vci_range profile.')
bandwidthAllocProfile_SlotVpiVciRange_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 5, 1, 1), Integer32()).setLabel("bandwidthAllocProfile-SlotVpiVciRange-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange_Index_o.setDescription('')
bandwidthAllocProfile_SlotVpiVciRange_Index1_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 5, 1, 2), Integer32()).setLabel("bandwidthAllocProfile-SlotVpiVciRange-Index1-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange_Index1_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange_Index1_o.setDescription('')
bandwidthAllocProfile_SlotVpiVciRange = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 29, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vpi01Vci321023", 6), ("vpi03Vci32511", 1), ("vpi07Vci32255", 2), ("vpi015Vci32127", 3), ("vpi031Vci3263", 4), ("notApplicable", 5)))).setLabel("bandwidthAllocProfile-SlotVpiVciRange").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthAllocProfile_SlotVpiVciRange.setDescription('The valid range of vpi and vci for the LIM(s). This range is shared by all ports of the LIM. The user should be very careful while changing this value because ALL CONNECTIONS INVOLVING ANY OF THE PORTS OF THIS LIM WILL BE DROPPED BY THE SYSTEM IN ORDER TO MAKE NEW RANGE EFFECTIVE.')
mibbandwidthStatsProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 64, 1), )
if mibBuilder.loadTexts: mibbandwidthStatsProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthStatsProfileTable.setDescription('A list of mibbandwidthStatsProfile profile entries.')
mibbandwidthStatsProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1), ).setIndexNames((0, "ASCEND-MIBBWALLOC-MIB", "bandwidthStatsProfile-Index-o"))
if mibBuilder.loadTexts: mibbandwidthStatsProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibbandwidthStatsProfileEntry.setDescription('A mibbandwidthStatsProfile entry containing objects that maps to the parameters of mibbandwidthStatsProfile profile.')
bandwidthStatsProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1, 1), Integer32()).setLabel("bandwidthStatsProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthStatsProfile_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthStatsProfile_Index_o.setDescription('')
bandwidthStatsProfile_MaxUpstreamBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1, 2), Integer32()).setLabel("bandwidthStatsProfile-MaxUpstreamBandwidth").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthStatsProfile_MaxUpstreamBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthStatsProfile_MaxUpstreamBandwidth.setDescription('Maximum system upstream bandwidth in Kbits/sec.')
bandwidthStatsProfile_ActiveUpstreamBandwidthOnTrunks = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1, 3), Integer32()).setLabel("bandwidthStatsProfile-ActiveUpstreamBandwidthOnTrunks").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthStatsProfile_ActiveUpstreamBandwidthOnTrunks.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthStatsProfile_ActiveUpstreamBandwidthOnTrunks.setDescription('Currently available upstream bandwidth on active primary trunks in Kbits/sec. This value is adjusted with number of active primary trunks and their available upstream bandwidth.')
bandwidthStatsProfile_StandbyUpstreamBandwidthOnTrunks = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1, 4), Integer32()).setLabel("bandwidthStatsProfile-StandbyUpstreamBandwidthOnTrunks").setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthStatsProfile_StandbyUpstreamBandwidthOnTrunks.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthStatsProfile_StandbyUpstreamBandwidthOnTrunks.setDescription('Currently available upstream bandwidth on active standby trunks in Kbits/sec. This value is adjusted with number of active standby trunks and their available upstream bandwidth.')
bandwidthStatsProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 64, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("bandwidthStatsProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthStatsProfile_Action_o.setStatus('mandatory')
if mibBuilder.loadTexts: bandwidthStatsProfile_Action_o.setDescription('')
mibBuilder.exportSymbols("ASCEND-MIBBWALLOC-MIB", bandwidthAllocProfile_Action_o=bandwidthAllocProfile_Action_o, bandwidthStatsProfile_StandbyUpstreamBandwidthOnTrunks=bandwidthStatsProfile_StandbyUpstreamBandwidthOnTrunks, mibbandwidthAllocProfileEntry=mibbandwidthAllocProfileEntry, bandwidthAllocProfile_TrafficShapers_BitRate=bandwidthAllocProfile_TrafficShapers_BitRate, bandwidthAllocProfile_SlotVpiVciRange_Index1_o=bandwidthAllocProfile_SlotVpiVciRange_Index1_o, bandwidthAllocProfile_BandwidthConfig_AllowGuaranteedUpStreamBandwidth=bandwidthAllocProfile_BandwidthConfig_AllowGuaranteedUpStreamBandwidth, mibbandwidthAllocProfile_TrafficShapersTable=mibbandwidthAllocProfile_TrafficShapersTable, bandwidthAllocProfile_TrafficShapers_Enabled=bandwidthAllocProfile_TrafficShapers_Enabled, mibbandwidthAllocProfile=mibbandwidthAllocProfile, bandwidthStatsProfile_Index_o=bandwidthStatsProfile_Index_o, bandwidthAllocProfile_BandwidthConfig_AllowMaxUpStreamBandwidth=bandwidthAllocProfile_BandwidthConfig_AllowMaxUpStreamBandwidth, bandwidthStatsProfile_Action_o=bandwidthStatsProfile_Action_o, bandwidthAllocProfile_SlotVpiVciRange_Index_o=bandwidthAllocProfile_SlotVpiVciRange_Index_o, mibbandwidthAllocProfile_BandwidthConfigEntry=mibbandwidthAllocProfile_BandwidthConfigEntry, mibbandwidthAllocProfile_TrafficShapersEntry=mibbandwidthAllocProfile_TrafficShapersEntry, bandwidthAllocProfile_TrafficShapers_Aggregate=bandwidthAllocProfile_TrafficShapers_Aggregate, bandwidthAllocProfile_TrafficShapers_PeakRate=bandwidthAllocProfile_TrafficShapers_PeakRate, bandwidthAllocProfile_BandwidthConfig_Index_o=bandwidthAllocProfile_BandwidthConfig_Index_o, mibbandwidthAllocProfile_SlotVpiVciRangeEntry=mibbandwidthAllocProfile_SlotVpiVciRangeEntry, mibbandwidthAllocProfile_BandwidthConfigTable=mibbandwidthAllocProfile_BandwidthConfigTable, bandwidthAllocProfile_BandwidthConfig_Index1_o=bandwidthAllocProfile_BandwidthConfig_Index1_o, mibbandwidthStatsProfileEntry=mibbandwidthStatsProfileEntry, mibbandwidthStatsProfile=mibbandwidthStatsProfile, mibbandwidthStatsProfileTable=mibbandwidthStatsProfileTable, bandwidthAllocProfile_TrafficShapers_Index1_o=bandwidthAllocProfile_TrafficShapers_Index1_o, bandwidthAllocProfile_TrafficShapers_MaxBurstSize=bandwidthAllocProfile_TrafficShapers_MaxBurstSize, bandwidthStatsProfile_MaxUpstreamBandwidth=bandwidthStatsProfile_MaxUpstreamBandwidth, DisplayString=DisplayString, bandwidthAllocProfile_TrafficShapers_Index_o=bandwidthAllocProfile_TrafficShapers_Index_o, bandwidthAllocProfile_SlotVpiVciRange=bandwidthAllocProfile_SlotVpiVciRange, bandwidthStatsProfile_ActiveUpstreamBandwidthOnTrunks=bandwidthStatsProfile_ActiveUpstreamBandwidthOnTrunks, mibbandwidthAllocProfileTable=mibbandwidthAllocProfileTable, mibbandwidthAllocProfile_SlotVpiVciRangeTable=mibbandwidthAllocProfile_SlotVpiVciRangeTable, bandwidthAllocProfile_Index_o=bandwidthAllocProfile_Index_o, bandwidthAllocProfile_TrafficShapers_Priority=bandwidthAllocProfile_TrafficShapers_Priority)
