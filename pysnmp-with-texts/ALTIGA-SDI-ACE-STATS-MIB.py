#
# PySNMP MIB module ALTIGA-SDI-ACE-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-SDI-ACE-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:21:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alACEServerMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alACEServerMibModule")
alACEServerStats, alACEServerGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alACEServerStats", "alACEServerGroup")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, IpAddress, ModuleIdentity, TimeTicks, Counter32, Unsigned32, Integer32, Gauge32, Bits, ObjectIdentity, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "IpAddress", "ModuleIdentity", "TimeTicks", "Counter32", "Unsigned32", "Integer32", "Gauge32", "Bits", "ObjectIdentity", "NotificationType", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
altigaACEStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 50, 1))
altigaACEStatsMibModule.setRevisions(('2002-09-05 13:00', '2002-07-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: altigaACEStatsMibModule.setRevisionsDescriptions(('Added module compliance.', 'Updated with new header',))
if mibBuilder.loadTexts: altigaACEStatsMibModule.setLastUpdated('200209051300Z')
if mibBuilder.loadTexts: altigaACEStatsMibModule.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: altigaACEStatsMibModule.setContactInfo('Cisco Systems 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-cvpn3000@cisco.com')
if mibBuilder.loadTexts: altigaACEStatsMibModule.setDescription('The Altiga SDI ACE Server Statistics MIB models counters and objects that are of management interest for SDI ACE Server. Acronyms The following acronyms are used in this document: ACE: Access Control Encryption MIB: Management Information Base PIN: Personal Identification Number SDI: Security Dynamics Technologies, Inc ')
alCfgACEGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 1))
alACEServerTable = MibTable((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2), )
if mibBuilder.loadTexts: alACEServerTable.setStatus('current')
if mibBuilder.loadTexts: alACEServerTable.setDescription('The list of authentication servers.')
alACEServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1), ).setIndexNames((0, "ALTIGA-SDI-ACE-STATS-MIB", "alACEPrimaryIndex"), (0, "ALTIGA-SDI-ACE-STATS-MIB", "alACEServerIndex"))
if mibBuilder.loadTexts: alACEServerEntry.setStatus('current')
if mibBuilder.loadTexts: alACEServerEntry.setDescription('An entry in the alAuthServerTable.')
alACEPrimaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEPrimaryIndex.setStatus('current')
if mibBuilder.loadTexts: alACEPrimaryIndex.setDescription('The index of the configured primary server')
alACEServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerIndex.setStatus('current')
if mibBuilder.loadTexts: alACEServerIndex.setDescription('The index of this server into the server list')
alACEServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerPriority.setStatus('current')
if mibBuilder.loadTexts: alACEServerPriority.setDescription('The priority as computed by loadbalancing')
alACEServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerAddress.setStatus('current')
if mibBuilder.loadTexts: alACEServerAddress.setDescription('Resolved address from the ACE Server.')
alACEServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerPort.setStatus('current')
if mibBuilder.loadTexts: alACEServerPort.setDescription('Port over ride for this entry')
alACEServerRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerRetries.setStatus('current')
if mibBuilder.loadTexts: alACEServerRetries.setDescription('Number of retries for this server.')
alACEServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerTimeout.setStatus('current')
if mibBuilder.loadTexts: alACEServerTimeout.setDescription('Timeout, in seconds to access this server.')
alACEServerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerGroupId.setStatus('current')
if mibBuilder.loadTexts: alACEServerGroupId.setDescription('The group that this authentication server entry belongs to.')
alACEServerAuthSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerAuthSuccesses.setStatus('current')
if mibBuilder.loadTexts: alACEServerAuthSuccesses.setDescription('number of auth successes.')
alACEServerAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerAuthFailures.setStatus('current')
if mibBuilder.loadTexts: alACEServerAuthFailures.setDescription('number of failures for this server.')
alACEServerBadCodeSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerBadCodeSent.setStatus('current')
if mibBuilder.loadTexts: alACEServerBadCodeSent.setDescription('number of Bad Code sent to this server.')
alACEServerBadPinSent = MibTableColumn((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 45, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alACEServerBadPinSent.setStatus('current')
if mibBuilder.loadTexts: alACEServerBadPinSent.setDescription('number of Bad Pin sent to this server.')
altigaACEStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 50, 1, 1))
altigaACEStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 50, 1, 1, 1))
altigaACEStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 50, 1, 1, 1, 1)).setObjects(("ALTIGA-SDI-ACE-STATS-MIB", "altigaACEServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaACEStatsMibCompliance = altigaACEStatsMibCompliance.setStatus('current')
if mibBuilder.loadTexts: altigaACEStatsMibCompliance.setDescription('The compliance statement for agents which implement the Altiga ACE Server Statistics MIB.')
altigaACEServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 45, 1)).setObjects(("ALTIGA-SDI-ACE-STATS-MIB", "alACEPrimaryIndex"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerIndex"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerPriority"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerAddress"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerPort"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerRetries"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerTimeout"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerGroupId"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerAuthSuccesses"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerAuthFailures"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerBadCodeSent"), ("ALTIGA-SDI-ACE-STATS-MIB", "alACEServerBadPinSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaACEServerGroup = altigaACEServerGroup.setStatus('current')
if mibBuilder.loadTexts: altigaACEServerGroup.setDescription('The objects for ACE-STATS.')
mibBuilder.exportSymbols("ALTIGA-SDI-ACE-STATS-MIB", altigaACEStatsMibCompliance=altigaACEStatsMibCompliance, alACEServerBadCodeSent=alACEServerBadCodeSent, alACEServerPriority=alACEServerPriority, alACEServerAuthSuccesses=alACEServerAuthSuccesses, alACEPrimaryIndex=alACEPrimaryIndex, alACEServerIndex=alACEServerIndex, altigaACEStatsMibCompliances=altigaACEStatsMibCompliances, PYSNMP_MODULE_ID=altigaACEStatsMibModule, alACEServerGroupId=alACEServerGroupId, alACEServerTable=alACEServerTable, altigaACEStatsMibConformance=altigaACEStatsMibConformance, alACEServerRetries=alACEServerRetries, alACEServerTimeout=alACEServerTimeout, alCfgACEGlobal=alCfgACEGlobal, altigaACEStatsMibModule=altigaACEStatsMibModule, alACEServerAuthFailures=alACEServerAuthFailures, altigaACEServerGroup=altigaACEServerGroup, alACEServerAddress=alACEServerAddress, alACEServerPort=alACEServerPort, alACEServerBadPinSent=alACEServerBadPinSent, alACEServerEntry=alACEServerEntry)
