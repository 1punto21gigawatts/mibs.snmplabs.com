#
# PySNMP MIB module HUAWEI-SECSTAT-IP-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-SECSTAT-IP-MONITOR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, ModuleIdentity, iso, NotificationType, Counter64, IpAddress, TimeTicks, Gauge32, ObjectIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "iso", "NotificationType", "Counter64", "IpAddress", "TimeTicks", "Gauge32", "ObjectIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwSecStatIPMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4))
if mibBuilder.loadTexts: hwSecStatIPMonitor.setLastUpdated('200304100900Z')
if mibBuilder.loadTexts: hwSecStatIPMonitor.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwSecStatIPMonitor.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwSecStatIPMonitor.setDescription(' V1.00 The HUAWEI-SECSTAT-IP-MONITOR-MIB contains objects to monitor the statistics information for the hosts. ')
hwSECSTAT = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11))
hwSecStatMonitorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1))
hwSecStatClearAllIPInfo = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSecStatClearAllIPInfo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatClearAllIPInfo.setDescription(' This OID is used for clearing the statistics information of All IP. When you want to clear the information, set this OID to 1. ')
hwSecStatIPInInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2), )
if mibBuilder.loadTexts: hwSecStatIPInInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPInInfoTable.setDescription('The statistic information of packets to the hosts.')
hwSecStatIPInInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1), ).setIndexNames((0, "HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPInInfoIpAddress"))
if mibBuilder.loadTexts: hwSecStatIPInInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPInInfoEntry.setDescription('The statistic information of packets to the hosts.')
hwSecStatIPInInfoIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPInInfoIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPInInfoIpAddress.setDescription('The IP address of host.')
hwSecStatIPTcpSessTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPTcpSessTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPTcpSessTo.setDescription('The number of TCP session to this host.')
hwSecStatIPUdpSessTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPUdpSessTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPUdpSessTo.setDescription('The number of UDP session to this host.')
hwSecStatIPIcmpSessTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPIcmpSessTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPIcmpSessTo.setDescription('The number of ICMP session to this host.')
hwSecStatIPConnTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPConnTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPConnTo.setDescription('The number of session to this host.')
hwSecStatIPHalfConnTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHalfConnTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHalfConnTo.setDescription('The number of incomplete session to this host.')
hwSecStatIPTcpSessSpeedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPTcpSessSpeedTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPTcpSessSpeedTo.setDescription('The establishing speed of TCP session to this host.')
hwSecStatIPUdpSessSpeedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPUdpSessSpeedTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPUdpSessSpeedTo.setDescription('The establishing speed of UDP session to this host.')
hwSecStatIPIcmpSessSpeedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPIcmpSessSpeedTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPIcmpSessSpeedTo.setDescription('The establishing speed of ICMP session to this host.')
hwSecStatIPConnSpeedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPConnSpeedTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPConnSpeedTo.setDescription('The establishing speed of session to this host.')
hwSecStatIPHalfConnSpeedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHalfConnSpeedTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHalfConnSpeedTo.setDescription('The establishing speed of TCP incomplete session to this host.')
hwSecStatIPAclDenyIcmpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpPktsTo.setDescription('The total number of dropped ICMP packets to this host by ACL')
hwSecStatIPAclDenyIcmpOctsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpOctsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpOctsTo.setDescription('The total bytes of dropped ICMP packets to this host by ACL')
hwSecStatIPAclDenyNonIcmpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpPktsTo.setDescription('The total number of dropped non ICMP packets to this host by ACL')
hwSecStatIPAclDenyNonIcmpOctsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpOctsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpOctsTo.setDescription('The total bytes of dropped non ICMP packets to this host by ACL')
hwSecStatIPBlsDenyPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPBlsDenyPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPBlsDenyPktsTo.setDescription('The total number of dropped packets to this host by blacklist.')
hwSecStatIPAclDftDenyPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyPktsTo.setDescription('The total number of dropped packets to this host by default ACL.')
hwSecStatIPAclDftDenyIcmpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyIcmpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyIcmpPktsTo.setDescription('The total number of dropped ICMP packets to this host by default ACL.')
hwSecStatIPIcmpFloodDropPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPIcmpFloodDropPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPIcmpFloodDropPktsTo.setDescription('The total number of dropped packets to this host for ICMP Flood attack.')
hwSecStatIPUdpFloodDropPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPUdpFloodDropPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPUdpFloodDropPktsTo.setDescription('The total number of dropped packets to this host for UDP Flood attack.')
hwSecStatIPFtpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPFtpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPFtpPktsTo.setDescription('The total number of FTP packets to this host.')
hwSecStatIPSmtpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPSmtpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPSmtpPktsTo.setDescription('The total number of SMTP packets to this host.')
hwSecStatIPHttpPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHttpPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHttpPktsTo.setDescription('The total number of HTTP packets to this host.')
hwSecStatIPH323PktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPH323PktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPH323PktsTo.setDescription('The total number of H323 packets to this host.')
hwSecStatIPRtspPktsTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPRtspPktsTo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPRtspPktsTo.setDescription('The total number of RTSP packets to this host.')
hwSecStatClearIPInInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 2, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSecStatClearIPInInfo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatClearIPInInfo.setDescription('Description.')
hwSecStatIPOutInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3), )
if mibBuilder.loadTexts: hwSecStatIPOutInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPOutInfoTable.setDescription('The statistic information of packets from the hosts.')
hwSecStatIPOutInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1), ).setIndexNames((0, "HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPOutInfoIpAddress"))
if mibBuilder.loadTexts: hwSecStatIPOutInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPOutInfoEntry.setDescription('The statistic information of packets from the hosts.')
hwSecStatIPOutInfoIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPOutInfoIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPOutInfoIpAddress.setDescription('The IP address of host.')
hwSecStatIPTcpSessFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPTcpSessFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPTcpSessFrom.setDescription('The number of TCP session from this host.')
hwSecStatIPUdpSessFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPUdpSessFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPUdpSessFrom.setDescription('The number of UDP session from this host.')
hwSecStatIPIcmpSessFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPIcmpSessFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPIcmpSessFrom.setDescription('The number of ICMP session from this host.')
hwSecStatIPConnFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPConnFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPConnFrom.setDescription('The number of session from this host.')
hwSecStatIPHalfConnFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHalfConnFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHalfConnFrom.setDescription('The number of incomplete session from this host.')
hwSecStatIPTcpSessSpeedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPTcpSessSpeedFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPTcpSessSpeedFrom.setDescription('The establishing speed of TCP session from this host.')
hwSecStatIPUdpSessSpeedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPUdpSessSpeedFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPUdpSessSpeedFrom.setDescription('The establishing speed of UDP session from this host.')
hwSecStatIPIcmpSessSpeedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPIcmpSessSpeedFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPIcmpSessSpeedFrom.setDescription('The establishing speed of ICMP session from this host.')
hwSecStatIPConnSpeedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPConnSpeedFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPConnSpeedFrom.setDescription('The establishing speed of session from this host.')
hwSecStatIPHalfConnSpeedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHalfConnSpeedFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHalfConnSpeedFrom.setDescription('The establishing speed of TCP incomplete session from this host.')
hwSecStatIPAclDenyIcmpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpPktsFrom.setDescription('The total number of dropped ICMP packets from this host by ACL')
hwSecStatIPAclDenyIcmpOctsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpOctsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyIcmpOctsFrom.setDescription('The total bytes of dropped ICMP packets from this host by ACL')
hwSecStatIPAclDenyNonIcmpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpPktsFrom.setDescription('The total number of dropped non ICMP packets from this host by ACL')
hwSecStatIPAclDenyNonIcmpOctsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpOctsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDenyNonIcmpOctsFrom.setDescription('The total bytes of dropped non ICMP packets from this host by ACL')
hwSecStatIPBlsDenyPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPBlsDenyPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPBlsDenyPktsFrom.setDescription('The total number of dropped packets from this host by blacklist.')
hwSecStatIPAclDftDenyPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyPktsFrom.setDescription('The total number of dropped packets from this host by default ACL.')
hwSecStatIPAclDftDenyIcmpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyIcmpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPAclDftDenyIcmpPktsFrom.setDescription('The total number of dropped ICMP packets from this host by default ACL.')
hwSecStatIPFtpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPFtpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPFtpPktsFrom.setDescription('The number of FTP packets from this host.')
hwSecStatIPSmtpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPSmtpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPSmtpPktsFrom.setDescription('The number of SMTP packets from this host.')
hwSecStatIPHttpPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPHttpPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPHttpPktsFrom.setDescription('The number of HTTP packets from this host.')
hwSecStatIPH323PktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPH323PktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPH323PktsFrom.setDescription('The number of H323 packets from this host.')
hwSecStatIPRtspPktsFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSecStatIPRtspPktsFrom.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPRtspPktsFrom.setDescription('The number of RTSP packets from this host.')
hwSecStatClearIPOutInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwSecStatClearIPOutInfo.setStatus('current')
if mibBuilder.loadTexts: hwSecStatClearIPOutInfo.setDescription(' This OID is used for clearing the statistics information of this IP. When you want to clear the information of this IP, set this OID to 1. ')
hwSecStatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 3))
hwSecStatCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 3, 1))
hwSecStatMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 3, 2))
hwSecStatIPMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 11, 4, 3, 2, 5)).setObjects(("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPTcpSessTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPUdpSessTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPIcmpSessTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPConnTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHalfConnTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPTcpSessSpeedTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPUdpSessSpeedTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPIcmpSessSpeedTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPConnSpeedTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHalfConnSpeedTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyIcmpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyIcmpOctsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyNonIcmpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyNonIcmpOctsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDftDenyIcmpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPIcmpFloodDropPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPUdpFloodDropPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPFtpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPSmtpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHttpPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPH323PktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPRtspPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPTcpSessFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPUdpSessFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPIcmpSessFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPConnFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHalfConnFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPTcpSessSpeedFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPUdpSessSpeedFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPIcmpSessSpeedFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPConnSpeedFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHalfConnSpeedFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyIcmpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyIcmpOctsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyNonIcmpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDenyNonIcmpOctsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDftDenyIcmpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPFtpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPSmtpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPHttpPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPH323PktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPOutInfoIpAddress"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPInInfoIpAddress"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatClearIPOutInfo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatClearIPInInfo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatClearAllIPInfo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPRtspPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPBlsDenyPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDftDenyPktsTo"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPBlsDenyPktsFrom"), ("HUAWEI-SECSTAT-IP-MONITOR-MIB", "hwSecStatIPAclDftDenyPktsFrom"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwSecStatIPMonitorGroup = hwSecStatIPMonitorGroup.setStatus('current')
if mibBuilder.loadTexts: hwSecStatIPMonitorGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-SECSTAT-IP-MONITOR-MIB", hwSecStatIPIcmpSessSpeedTo=hwSecStatIPIcmpSessSpeedTo, hwSecStatIPAclDftDenyPktsFrom=hwSecStatIPAclDftDenyPktsFrom, hwSecStatIPTcpSessFrom=hwSecStatIPTcpSessFrom, hwSecStatIPAclDenyNonIcmpOctsFrom=hwSecStatIPAclDenyNonIcmpOctsFrom, hwSecStatIPInInfoEntry=hwSecStatIPInInfoEntry, hwSecStatIPUdpFloodDropPktsTo=hwSecStatIPUdpFloodDropPktsTo, hwSecStatIPHttpPktsFrom=hwSecStatIPHttpPktsFrom, hwSECSTAT=hwSECSTAT, hwSecStatIPFtpPktsTo=hwSecStatIPFtpPktsTo, hwSecStatIPBlsDenyPktsFrom=hwSecStatIPBlsDenyPktsFrom, hwSecStatCompliance=hwSecStatCompliance, hwSecStatMonitorObjects=hwSecStatMonitorObjects, hwSecStatClearAllIPInfo=hwSecStatClearAllIPInfo, hwSecStatIPTcpSessSpeedTo=hwSecStatIPTcpSessSpeedTo, hwSecStatIPBlsDenyPktsTo=hwSecStatIPBlsDenyPktsTo, hwSecStatIPUdpSessSpeedTo=hwSecStatIPUdpSessSpeedTo, hwSecStatIPInInfoIpAddress=hwSecStatIPInInfoIpAddress, hwSecStatIPIcmpFloodDropPktsTo=hwSecStatIPIcmpFloodDropPktsTo, hwSecStatIPOutInfoIpAddress=hwSecStatIPOutInfoIpAddress, hwSecStatIPConnTo=hwSecStatIPConnTo, hwSecStatIPIcmpSessFrom=hwSecStatIPIcmpSessFrom, hwSecStatIPConnFrom=hwSecStatIPConnFrom, hwSecStatIPConnSpeedTo=hwSecStatIPConnSpeedTo, hwSecStatIPConnSpeedFrom=hwSecStatIPConnSpeedFrom, hwSecStatIPMonitor=hwSecStatIPMonitor, hwSecStatMibGroups=hwSecStatMibGroups, hwSecStatIPMonitorGroup=hwSecStatIPMonitorGroup, hwSecStatIPSmtpPktsTo=hwSecStatIPSmtpPktsTo, hwSecStatIPAclDenyIcmpPktsTo=hwSecStatIPAclDenyIcmpPktsTo, hwSecStatIPHalfConnSpeedFrom=hwSecStatIPHalfConnSpeedFrom, PYSNMP_MODULE_ID=hwSecStatIPMonitor, hwSecStatIPAclDenyNonIcmpOctsTo=hwSecStatIPAclDenyNonIcmpOctsTo, hwSecStatIPOutInfoEntry=hwSecStatIPOutInfoEntry, hwSecStatIPUdpSessFrom=hwSecStatIPUdpSessFrom, hwSecStatIPAclDftDenyIcmpPktsTo=hwSecStatIPAclDftDenyIcmpPktsTo, hwSecStatClearIPInInfo=hwSecStatClearIPInInfo, hwSecStatIPUdpSessSpeedFrom=hwSecStatIPUdpSessSpeedFrom, hwSecStatIPInInfoTable=hwSecStatIPInInfoTable, hwSecStatIPIcmpSessTo=hwSecStatIPIcmpSessTo, hwSecStatIPUdpSessTo=hwSecStatIPUdpSessTo, hwSecStatIPRtspPktsFrom=hwSecStatIPRtspPktsFrom, hwSecStatIPAclDenyNonIcmpPktsTo=hwSecStatIPAclDenyNonIcmpPktsTo, hwSecStatConformance=hwSecStatConformance, hwSecStatIPHalfConnTo=hwSecStatIPHalfConnTo, hwSecStatIPTcpSessSpeedFrom=hwSecStatIPTcpSessSpeedFrom, hwSecStatIPHalfConnFrom=hwSecStatIPHalfConnFrom, hwSecStatIPAclDenyNonIcmpPktsFrom=hwSecStatIPAclDenyNonIcmpPktsFrom, hwSecStatIPAclDenyIcmpOctsFrom=hwSecStatIPAclDenyIcmpOctsFrom, hwSecStatIPH323PktsFrom=hwSecStatIPH323PktsFrom, hwSecStatIPAclDenyIcmpOctsTo=hwSecStatIPAclDenyIcmpOctsTo, hwSecStatIPHttpPktsTo=hwSecStatIPHttpPktsTo, hwSecStatIPFtpPktsFrom=hwSecStatIPFtpPktsFrom, hwSecStatIPHalfConnSpeedTo=hwSecStatIPHalfConnSpeedTo, hwSecStatIPAclDenyIcmpPktsFrom=hwSecStatIPAclDenyIcmpPktsFrom, hwSecStatIPAclDftDenyPktsTo=hwSecStatIPAclDftDenyPktsTo, hwSecStatIPTcpSessTo=hwSecStatIPTcpSessTo, hwSecStatIPRtspPktsTo=hwSecStatIPRtspPktsTo, hwSecStatIPOutInfoTable=hwSecStatIPOutInfoTable, hwSecStatClearIPOutInfo=hwSecStatClearIPOutInfo, hwSecStatIPSmtpPktsFrom=hwSecStatIPSmtpPktsFrom, hwSecStatIPIcmpSessSpeedFrom=hwSecStatIPIcmpSessSpeedFrom, hwSecStatIPAclDftDenyIcmpPktsFrom=hwSecStatIPAclDftDenyIcmpPktsFrom, hwSecStatIPH323PktsTo=hwSecStatIPH323PktsTo)
