#
# PySNMP MIB module XYLAN-CSM-VUNINNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-CSM-VUNINNI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:44:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Counter64, iso, Gauge32, Bits, NotificationType, MibIdentifier, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Counter64", "iso", "Gauge32", "Bits", "NotificationType", "MibIdentifier", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylnatmInterfaceConfGroup, = mibBuilder.importSymbols("XYLAN-CSM-MIB", "xylnatmInterfaceConfGroup")
xylnatmVUniConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2))
xylnatmVUniConfInstanceCount = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfInstanceCount.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfInstanceCount.setDescription(' The total number of active virtual UNI/NNI instances on this switching system')
xylnatmVUniConfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2), )
if mibBuilder.loadTexts: xylnatmVUniConfTable.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfTable.setDescription(' The xylnatmVUniConfTable collects attributes about virtual UNI/NNI instances on a switch')
xylnatmVUniConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1), ).setIndexNames((0, "XYLAN-CSM-VUNINNI-MIB", "xylnatmVUniConfSlotIndex"), (0, "XYLAN-CSM-VUNINNI-MIB", "xylnatmVUniConfPortIndex"), (0, "XYLAN-CSM-VUNINNI-MIB", "xylnatmVUniConfInsIndex"))
if mibBuilder.loadTexts: xylnatmVUniConfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfEntry.setDescription(' An entry in the table, containing configuration information about a virtual UNI/NNI instance in a specific physical port')
xylnatmVUniConfSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfSlotIndex.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfSlotIndex.setDescription(' A unique value which identifies this virtual UNI/NNI instance in a specific slot')
xylnatmVUniConfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfPortIndex.setDescription(' A unique value which identifies this virtual UNI/NNI instance in a specific physical port in the slot identified by xylnatmVUniConfSlotIndex')
xylnatmVUniConfInsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfInsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfInsIndex.setDescription(' A unique value which identifies this virtual UNI/NNI instance in the port identified by xylnatmVUniConfPortIndex in slot xylnatmVUniConfSlotIndex')
xylnatmVUniConfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfIfIndex.setDescription(' A unique interface index identifies this virtual UNI/NNI instance in the switch')
xylnatmVUniConfVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 5), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfVPI.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfVPI.setDescription(' A unique VPI used to create a virtual UNI/NNI on the physical port identified by xylnatmVUniConfSlotIndex & xylnatmVUniConfPortIndex')
xylnatmVUniConfTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylnatmVUniConfTunnelID.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfTunnelID.setDescription(' A unique Tunnel ID assigned by switch software to identify this Virtual UNI/NNI instance on this switching system ')
xylnatmVUniConfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfDescr.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfDescr.setDescription(' A description for this virtual UNI/NNI instance')
xylnatmVUniConfIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("pub-uni", 1), ("pri-uni", 2), ("pnni", 3), ("iisp-network", 4), ("iisp-user", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfIfType.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfIfType.setDescription(' The interface type of this virtual UNI/NNI instance ')
xylnatmVUniConfSigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfSigEnable.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfSigEnable.setDescription('Identify if signaling is enable or disable for this Virtual UNI/NNI instance')
xylnatmVUniConfSignalingVer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ver30", 1), ("ver31", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfSignalingVer.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfSignalingVer.setDescription(' The signaling version of running on this virtual UNI/NNI instance')
xylnatmVUniConfILMIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfILMIEnable.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfILMIEnable.setDescription(' Identify if ILMI is enabled for this virutal UNI/NNI instance')
xylnatmVUniConfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfAdminStatus.setDescription(' Indicate the adminstration status of this virtual UNI/NNI instance')
xylnatmVUniConfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 9, 1, 4, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("inService", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylnatmVUniConfRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: xylnatmVUniConfRowStatus.setDescription(' Indicate the current status of this row which represent a virtual UNI/NNI instance entity')
mibBuilder.exportSymbols("XYLAN-CSM-VUNINNI-MIB", xylnatmVUniConfTunnelID=xylnatmVUniConfTunnelID, xylnatmVUniConfSlotIndex=xylnatmVUniConfSlotIndex, xylnatmVUniConfRowStatus=xylnatmVUniConfRowStatus, xylnatmVUniConfEntry=xylnatmVUniConfEntry, xylnatmVUniConfPortIndex=xylnatmVUniConfPortIndex, xylnatmVUniConfVPI=xylnatmVUniConfVPI, xylnatmVUniConfIfType=xylnatmVUniConfIfType, xylnatmVUniConfIfIndex=xylnatmVUniConfIfIndex, xylnatmVUniConfSigEnable=xylnatmVUniConfSigEnable, xylnatmVUniConfILMIEnable=xylnatmVUniConfILMIEnable, xylnatmVUniConfTable=xylnatmVUniConfTable, xylnatmVUniConfInsIndex=xylnatmVUniConfInsIndex, xylnatmVUniConfInstanceCount=xylnatmVUniConfInstanceCount, xylnatmVUniConfSignalingVer=xylnatmVUniConfSignalingVer, xylnatmVUniConfDescr=xylnatmVUniConfDescr, xylnatmVUniConfAdminStatus=xylnatmVUniConfAdminStatus, xylnatmVUniConfGroup=xylnatmVUniConfGroup)
