#
# PySNMP MIB module Unisphere-Data-FILE-XFER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-FILE-XFER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:31:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ModuleIdentity, NotificationType, ObjectIdentity, TimeTicks, Gauge32, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter64, Integer32, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "NotificationType", "ObjectIdentity", "TimeTicks", "Gauge32", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter64", "Integer32", "Unsigned32", "IpAddress")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
UsdName, = mibBuilder.importSymbols("Unisphere-Data-TC", "UsdName")
usdFileXferMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23))
usdFileXferMIB.setRevisions(('2001-03-28 13:46', '2000-05-01 00:00', '1999-08-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdFileXferMIB.setRevisionsDescriptions(('Make it SMIv2 conformant.', 'Key revisions include: o Obsoleted usdFileXferRemoteUserName. o Obsoleted usdFileXferRemoteUserPassword. o Added usdFileXferRouterName. o Added usdFileXferCopyRunningCfgFailed(9) to usdFileXferStatus.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: usdFileXferMIB.setLastUpdated('200103281346Z')
if mibBuilder.loadTexts: usdFileXferMIB.setOrganization('Unisphere Networks, Inc.')
if mibBuilder.loadTexts: usdFileXferMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886 USA Tel: +1 978 589 5800 E-mail: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdFileXferMIB.setDescription('The File Transfer MIB for Unisphere Networks Inc. enterprise.')
usdFileXferObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1))
usdFileXferTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1), )
if mibBuilder.loadTexts: usdFileXferTable.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTable.setDescription('A list of entries which describe file transfers.')
usdFileXferTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1), ).setIndexNames((0, "Unisphere-Data-FILE-XFER-MIB", "usdFileXferIndex"))
if mibBuilder.loadTexts: usdFileXferTableEntry.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTableEntry.setDescription('A description of a particular file transfer entry.')
usdFileXferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdFileXferIndex.setStatus('current')
if mibBuilder.loadTexts: usdFileXferIndex.setDescription('A unique index used to identify this entry.')
usdFileXferDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usdFileXferLocalToRemote", 1), ("usdFileXferRemoteToLocal", 2))).clone('usdFileXferRemoteToLocal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferDirection.setStatus('current')
if mibBuilder.loadTexts: usdFileXferDirection.setDescription('Specifies the direction of the file transfer.')
usdFileXferFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("usdFileXferSoftwareRelease", 1), ("usdFileXferSystemConfig", 2), ("usdFileXferRunningConfig", 3), ("usdFileXferSystemLog", 4), ("usdFileXferScript", 5), ("usdFileXferRebootHistory", 6), ("usdFileXferBulkStatistics", 7))).clone('usdFileXferBulkStatistics')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferFileType.setStatus('current')
if mibBuilder.loadTexts: usdFileXferFileType.setDescription('Specifies the file type of the file transfer.')
usdFileXferRemoteFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferRemoteFileName.setStatus('current')
if mibBuilder.loadTexts: usdFileXferRemoteFileName.setDescription('The full path name of the source/destination file on the remote system.')
usdFileXferRemoteUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone('anonymous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferRemoteUserName.setStatus('obsolete')
if mibBuilder.loadTexts: usdFileXferRemoteUserName.setDescription('The user name to use when requesting the file transfer to/from the remote system. This object has been obsoleted. Use the enterprise host mib in order to configure the username.')
usdFileXferRemoteUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64)).clone('anonymous')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferRemoteUserPassword.setStatus('obsolete')
if mibBuilder.loadTexts: usdFileXferRemoteUserPassword.setDescription('The password to use when requesting the file transfer to/from the remote system. When read, this object returns a zero string. Note that, for security reasons, some ftp servers may insist on a non-zero length user password. This object has been obsoleted. Use the enterprise host mib in order to configure the password.')
usdFileXferLocalFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferLocalFileName.setStatus('current')
if mibBuilder.loadTexts: usdFileXferLocalFileName.setDescription('The local file name to transfer or to create as a result of an incoming transfer.')
usdFileXferProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("usdFileXferFtp", 1), ("usdFileXferTftp", 2))).clone('usdFileXferFtp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferProtocol.setStatus('current')
if mibBuilder.loadTexts: usdFileXferProtocol.setDescription('Specifies the file transfer protocol type.')
usdFileXferStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("usdFileXferSuccessfulCompletion", 1), ("usdFileXferInProgress", 2), ("usdFileXferRemoteUnreachable", 3), ("usdFileXferUserAuthFailed", 4), ("usdFileXferFileNotFound", 5), ("usdFileXferFileTooBig", 6), ("usdFileXferFileIncompatible", 7), ("usdFileXferPended", 8), ("usdFileXferCopyRunningCfgFailed", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdFileXferStatus.setStatus('current')
if mibBuilder.loadTexts: usdFileXferStatus.setDescription('The status of the file transfer.')
usdFileXferRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdFileXferRowStatus.setDescription('The row status object controls the creation/deletion of rows in this table. Its semantics are the same as those for the RowStatus textual convention specified for SNMPv2. Setting this object to createAndGo(4) is allowed. If required objects are missing, the agent will create the row and set its status to notReady(3). If all of the required objects are present and valid, the agent will create the row, set it to active and commence the file xfer. Upon completion of the file xfer, the agent will set the rowStatus to notInService(2), indicating that the row is valid and useable by a management client. To commence another transfer, a management client should set the rowStatus to active(1). Setting this object to createAndWait(5) causes an entry to be created with usdFileXferRowStatus value of notInService(2) if all of the required objects are present and valid. Or, if some of the required objects are missing or invalid, the agent will create the row and sets its status to notReady(3). Setting this object to active(1) causes the transfer to start for the given row. Objects within the row cannot be modified once a row has been set to active(1), Setting this object to destroy(6) causes the corresponding row to be deleted. Note that only a single instance of a row can be active at at any given moment, although several rows can exist in the table.')
usdFileXferTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdFileXferTimeStamp.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTimeStamp.setDescription('The value of sysUpTime at the last status change for this entry.')
usdFileXferRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 1, 1, 12), UsdName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferRouterName.setStatus('current')
if mibBuilder.loadTexts: usdFileXferRouterName.setDescription('The name of the router to be used when resolving the hostname portion of the usdFileXferRemoteFileName object. If this object contains an invalid or empty value, the default router will be used.')
usdFileXferTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdFileXferTrapEnabled.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTrapEnabled.setDescription('An indication of whether the usdFileXferTrap trap is enabled.')
usdFileXferNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 2))
usdFileXferNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 2, 0))
usdFileXferTrap = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 2, 0, 1)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferStatus"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTimeStamp"))
if mibBuilder.loadTexts: usdFileXferTrap.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTrap.setDescription('An indication that the status associated with a particular file transfer entry has changed.')
usdFileXferConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4))
usdFileXferCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 1))
usdFileXferGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 2))
usdFileXferCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 1, 2)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferGroup1"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdFileXferCompliance1 = usdFileXferCompliance1.setStatus('obsolete')
if mibBuilder.loadTexts: usdFileXferCompliance1.setDescription('Obsolete compliance statement for entities that implement the Unisphere file transfer MIB. This compliance statement became obsolete when remote user information was removed and router name was added.')
usdFileXferCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 1, 3)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferGroup2"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdFileXferCompliance2 = usdFileXferCompliance2.setStatus('current')
if mibBuilder.loadTexts: usdFileXferCompliance2.setDescription('The compliance statement for entities that implement the Unisphere file transfer MIB.')
usdFileXferGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 2, 2)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferIndex"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferDirection"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferFileType"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRemoteFileName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRemoteUserName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRemoteUserPassword"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferLocalFileName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferProtocol"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferStatus"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRowStatus"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTimeStamp"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTrapEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdFileXferGroup1 = usdFileXferGroup1.setStatus('obsolete')
if mibBuilder.loadTexts: usdFileXferGroup1.setDescription('Obsolete collection of objects providing management of file transfers in a Unisphere product. This group became obsolete when remote user information was removed and usdFileXferRouterName was added.')
usdFileXferGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 2, 3)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferIndex"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferDirection"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferFileType"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRemoteFileName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferLocalFileName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferProtocol"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferStatus"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRowStatus"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTimeStamp"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferRouterName"), ("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTrapEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdFileXferGroup2 = usdFileXferGroup2.setStatus('current')
if mibBuilder.loadTexts: usdFileXferGroup2.setDescription('A collection of objects providing management of file transfers in a Unisphere product.')
usdFileXferTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 23, 4, 2, 4)).setObjects(("Unisphere-Data-FILE-XFER-MIB", "usdFileXferTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdFileXferTrapGroup = usdFileXferTrapGroup.setStatus('current')
if mibBuilder.loadTexts: usdFileXferTrapGroup.setDescription('A management notification pertaining to file transfers.')
mibBuilder.exportSymbols("Unisphere-Data-FILE-XFER-MIB", usdFileXferGroups=usdFileXferGroups, usdFileXferCompliance2=usdFileXferCompliance2, usdFileXferDirection=usdFileXferDirection, usdFileXferTrap=usdFileXferTrap, usdFileXferGroup1=usdFileXferGroup1, usdFileXferObjects=usdFileXferObjects, usdFileXferLocalFileName=usdFileXferLocalFileName, usdFileXferTableEntry=usdFileXferTableEntry, usdFileXferRemoteUserName=usdFileXferRemoteUserName, usdFileXferRemoteUserPassword=usdFileXferRemoteUserPassword, PYSNMP_MODULE_ID=usdFileXferMIB, usdFileXferFileType=usdFileXferFileType, usdFileXferNotifyPrefix=usdFileXferNotifyPrefix, usdFileXferTable=usdFileXferTable, usdFileXferIndex=usdFileXferIndex, usdFileXferStatus=usdFileXferStatus, usdFileXferMIB=usdFileXferMIB, usdFileXferTrapEnabled=usdFileXferTrapEnabled, usdFileXferRemoteFileName=usdFileXferRemoteFileName, usdFileXferTimeStamp=usdFileXferTimeStamp, usdFileXferRowStatus=usdFileXferRowStatus, usdFileXferConformance=usdFileXferConformance, usdFileXferGroup2=usdFileXferGroup2, usdFileXferRouterName=usdFileXferRouterName, usdFileXferTrapGroup=usdFileXferTrapGroup, usdFileXferCompliance1=usdFileXferCompliance1, usdFileXferProtocol=usdFileXferProtocol, usdFileXferCompliances=usdFileXferCompliances, usdFileXferNotifications=usdFileXferNotifications)
