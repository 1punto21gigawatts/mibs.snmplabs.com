#
# PySNMP MIB module REDCREEK-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/REDCREEK-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:55:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
rcTrap, = mibBuilder.importSymbols("RCV3", "rcTrap")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Integer32, iso, TimeTicks, Counter64, MibIdentifier, Unsigned32, ObjectIdentity, NotificationType, Bits, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "iso", "TimeTicks", "Counter64", "MibIdentifier", "Unsigned32", "ObjectIdentity", "NotificationType", "Bits", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rcBadSignature = NotificationType((1, 3, 6, 1, 4, 1, 1958, 1, 1, 5) + (0,1))
if mibBuilder.loadTexts: rcBadSignature.setDescription('Signature verified to be bad by ISAKMP. This Trap will provide the IP Address of the remote unit, whose signature is verified as bad.')
rcHashFailed = NotificationType((1, 3, 6, 1, 4, 1, 1958, 1, 1, 5) + (0,2))
if mibBuilder.loadTexts: rcHashFailed.setDescription('TRAP generated when the unit receives a Set Request with an incorrect Hash object. The rcIpAddress will indicate the Client IP Address that generated the Set Request.')
rcFirmwareDownloadSucceded = NotificationType((1, 3, 6, 1, 4, 1, 1958, 1, 1, 5) + (0,3))
if mibBuilder.loadTexts: rcFirmwareDownloadSucceded.setDescription('This trap indicates that new firmware download to the box was successful. The variable is the IP Address of the configurator tool that initiated the download process.')
rcFirmwareDownloadFailed = NotificationType((1, 3, 6, 1, 4, 1, 1958, 1, 1, 5) + (0,4))
if mibBuilder.loadTexts: rcFirmwareDownloadFailed.setDescription('This trap indicates that firmware download to the box failed. The variable is the IP Address of the configurator tool that initiated the download process. rcLastErrorCode, indicates the reason for download failure.')
rcTunnelStatusThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1958, 1, 1, 5) + (0,5))
if mibBuilder.loadTexts: rcTunnelStatusThreshold.setDescription('This TRAP is generated by a Ravlin unit, if the polling statistics is below the warning threshold. rcTunnelStatus variable is a string formated to describe the information.')
mibBuilder.exportSymbols("REDCREEK-TRAP-MIB", rcHashFailed=rcHashFailed, rcFirmwareDownloadSucceded=rcFirmwareDownloadSucceded, rcFirmwareDownloadFailed=rcFirmwareDownloadFailed, rcTunnelStatusThreshold=rcTunnelStatusThreshold, rcBadSignature=rcBadSignature)
