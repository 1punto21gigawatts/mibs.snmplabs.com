#
# PySNMP MIB module QOSSLA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/QOSSLA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:44:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ntEnterpriseDataTasmanMgmt, = mibBuilder.importSymbols("NT-ENTERPRISE-DATA-MIB", "ntEnterpriseDataTasmanMgmt")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, NotificationType, Counter64, ModuleIdentity, MibIdentifier, IpAddress, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "NotificationType", "Counter64", "ModuleIdentity", "MibIdentifier", "IpAddress", "TimeTicks", "Integer32")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
nnqosSLAMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24))
nnqosSLAMib.setRevisions(('1900-08-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: nnqosSLAMib.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: nnqosSLAMib.setLastUpdated('0008180000Z')
if mibBuilder.loadTexts: nnqosSLAMib.setOrganization('Nortel Networks')
if mibBuilder.loadTexts: nnqosSLAMib.setContactInfo(' Nortel Networks 8200 Dixie Road Brampton, Ontario L6T 5P6 Canada 1-800-4Nortel www.nortelnetworks.com ')
if mibBuilder.loadTexts: nnqosSLAMib.setDescription('QosSLA group MIBs')
nnqosSLANotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 1))
nnqosSLANotificationsVars = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2))
nnqosSLATraps = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 1, 0))
nnqosSlaIndex = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnqosSlaIndex.setStatus('current')
if mibBuilder.loadTexts: nnqosSlaIndex.setDescription('Index of the SLA set.')
nnqosSlaThresholdType = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("average", 1), ("immediate", 2), ("consecutive", 3), ("xofy", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnqosSlaThresholdType.setStatus('current')
if mibBuilder.loadTexts: nnqosSlaThresholdType.setDescription('Threshhold type')
nnqosSlaEffectType = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("jitterAvg", 1), ("jitterAvgSrcDest", 2), ("jitterAvgDestSrc", 3), ("jitterMaxPosSrcDest", 4), ("jitterMaxPosDestSrc", 5), ("jitterMaxNegSrcDest", 6), ("jitterMaxNegDestSrc", 7), ("delayAvg", 8), ("delayAvgSrcDest", 9), ("delayAvgDestSrc", 10), ("delayMaxSrcDest", 11), ("delayMaxDestSrc", 12), ("packetLoss", 13), ("packetOutOfOrder", 14), ("packetLateArrival", 15), ("responseTime", 16), ("timeout", 17)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnqosSlaEffectType.setStatus('current')
if mibBuilder.loadTexts: nnqosSlaEffectType.setDescription('The SLA parameter that caused the Trap generation.')
nnqosSlaThresholdValue1 = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnqosSlaThresholdValue1.setStatus('current')
if mibBuilder.loadTexts: nnqosSlaThresholdValue1.setDescription('Threshold value 1.')
nnqosSlaThresholdValue2 = MibScalar((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 2, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nnqosSlaThresholdValue2.setStatus('current')
if mibBuilder.loadTexts: nnqosSlaThresholdValue2.setDescription('Threshold value 2.')
nnqosSLANotification = NotificationType((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 1, 0, 1)).setObjects(("QOSSLA-MIB", "nnqosSlaIndex"), ("QOSSLA-MIB", "nnqosSlaThresholdType"), ("QOSSLA-MIB", "nnqosSlaEffectType"), ("QOSSLA-MIB", "nnqosSlaThresholdValue1"), ("QOSSLA-MIB", "nnqosSlaThresholdValue2"))
if mibBuilder.loadTexts: nnqosSLANotification.setStatus('current')
if mibBuilder.loadTexts: nnqosSLANotification.setDescription(' A QOS SLA Notification is sent when threshold violation occurs. ')
nnqosNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 562, 73, 1, 1, 1, 24, 3)).setObjects(("QOSSLA-MIB", "nnqosSLANotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nnqosNotificationGroup = nnqosNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: nnqosNotificationGroup.setDescription('System Notification group')
mibBuilder.exportSymbols("QOSSLA-MIB", nnqosSlaThresholdType=nnqosSlaThresholdType, nnqosSLANotifications=nnqosSLANotifications, nnqosSLAMib=nnqosSLAMib, nnqosSlaEffectType=nnqosSlaEffectType, nnqosSLANotification=nnqosSLANotification, nnqosSlaThresholdValue2=nnqosSlaThresholdValue2, nnqosNotificationGroup=nnqosNotificationGroup, nnqosSLANotificationsVars=nnqosSLANotificationsVars, nnqosSLATraps=nnqosSLATraps, nnqosSlaIndex=nnqosSlaIndex, PYSNMP_MODULE_ID=nnqosSLAMib, nnqosSlaThresholdValue1=nnqosSlaThresholdValue1)
