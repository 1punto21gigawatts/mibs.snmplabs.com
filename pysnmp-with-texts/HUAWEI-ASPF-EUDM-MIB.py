#
# PySNMP MIB module HUAWEI-ASPF-EUDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ASPF-EUDM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:42:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
mplsVpnVrfName, = mibBuilder.importSymbols("MPLS-VPN-MIB", "mplsVpnVrfName")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Unsigned32, Counter32, Counter64, NotificationType, Gauge32, IpAddress, TimeTicks, ModuleIdentity, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "Counter32", "Counter64", "NotificationType", "Gauge32", "IpAddress", "TimeTicks", "ModuleIdentity", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
hwASPFEudm = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2))
if mibBuilder.loadTexts: hwASPFEudm.setLastUpdated('200304110900Z')
if mibBuilder.loadTexts: hwASPFEudm.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwASPFEudm.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwASPFEudm.setDescription(' The HUAWEI-ASPF_EUDM-MIB contains objects to manage the ASPF(Application Specific Packet Filter) configuration for firewall. ')
hwASPF = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6))
hwAspfMibEudmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1))
hwAspfEudmAppEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1), )
if mibBuilder.loadTexts: hwAspfEudmAppEnableTable.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmAppEnableTable.setDescription(' This table contains some switches, these switches denotes which application protocol to be inspected. This table is used for the device with security zone. ')
hwAspfEudmAppEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1), ).setIndexNames((0, "MPLS-VPN-MIB", "mplsVpnVrfName"), (0, "HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmAppEnableZoneID1"), (0, "HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmAppEnableZoneID2"))
if mibBuilder.loadTexts: hwAspfEudmAppEnableEntry.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmAppEnableEntry.setDescription(' Each table entry define the configuration in one inter zone. ')
hwAspfEudmAppEnableZoneID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAspfEudmAppEnableZoneID1.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmAppEnableZoneID1.setDescription(' The internal ID of first security zone, This is index. 0: Any zone. ')
hwAspfEudmAppEnableZoneID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwAspfEudmAppEnableZoneID2.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmAppEnableZoneID2.setDescription(' The internal ID of second security zone, this is index. ID2 must not less than ID1. 0: Any zone. ')
hwAspfEudmEnableFtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableFtp.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableFtp.setDescription('The inspecting switch for FTP protocol.')
hwAspfEudmEnableSmtp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableSmtp.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableSmtp.setDescription('The inspecting switch for SMTP protocol.')
hwAspfEudmEnableRstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableRstp.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableRstp.setDescription('The inspecting switch for RSTP protocol.')
hwAspfEudmEnableH323 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableH323.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableH323.setDescription('The inspecting switch for H323 protocol.')
hwAspfEudmEnableHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableHttp.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableHttp.setDescription('The inspecting switch for HTTP protocol.')
hwAspfEudmEnableJava = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableJava.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableJava.setDescription('The inspecting switch for JAVA.')
hwAspfEudmEnableJavaAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableJavaAcl.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableJavaAcl.setDescription('The acl number to specify the hosts from which the packet to be inspected.')
hwAspfEudmEnableActiveX = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableActiveX.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableActiveX.setDescription('The inspecting switch for ActiveX.')
hwAspfEudmEnableActiveXAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableActiveXAcl.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableActiveXAcl.setDescription('The acl number to specify the hosts from which the packet to be inspected.')
hwAspfEudmEnablePptp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnablePptp.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnablePptp.setDescription('The inspecting switch for PPTP.')
hwAspfEudmEnableNetBios = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableNetBios.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableNetBios.setDescription('The inspecting switch for NetBios.')
hwAspfEudmEnableMsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableMsn.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableMsn.setDescription('The inspecting switch for MSN.')
hwAspfEudmEnableQq = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableQq.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableQq.setDescription('The inspecting switch for QQ.')
hwAspfEudmEnableSip = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableSip.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableSip.setDescription('The inspecting switch for SIP.')
hwAspfEudmEnableUserDefAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableUserDefAcl.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableUserDefAcl.setDescription('The user define acl number to specify the hosts from which the packet to be inspected.')
hwAspfEudmEnableUserDefAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableUserDefAge.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableUserDefAge.setDescription('The aging time of the user define.')
hwAspfEudmEnableIdo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableIdo.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableIdo.setDescription('The inspecting switch for IDO.')
hwAspfEudmEnableIls = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 1, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwAspfEudmEnableIls.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmEnableIls.setDescription('The inspecting switch for ILS.')
hwAspfEudmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 2))
hwAspfEudmCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 2, 1))
hwAspfEudmMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 2, 2))
hwAspfEudmAppEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 6, 2, 2, 2, 1)).setObjects(("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableFtp"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableRstp"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableH323"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableHttp"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableJava"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableJavaAcl"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableActiveX"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableActiveXAcl"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableSmtp"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnablePptp"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableNetBios"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableMsn"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableQq"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableSip"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableUserDefAcl"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableUserDefAge"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableIdo"), ("HUAWEI-ASPF-EUDM-MIB", "hwAspfEudmEnableIls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwAspfEudmAppEnableGroup = hwAspfEudmAppEnableGroup.setStatus('current')
if mibBuilder.loadTexts: hwAspfEudmAppEnableGroup.setDescription('The object group contains the ASPF application inspecting switches mib objects ')
mibBuilder.exportSymbols("HUAWEI-ASPF-EUDM-MIB", hwAspfEudmEnableRstp=hwAspfEudmEnableRstp, hwAspfEudmEnableSip=hwAspfEudmEnableSip, hwASPF=hwASPF, PYSNMP_MODULE_ID=hwASPFEudm, hwAspfEudmEnableUserDefAge=hwAspfEudmEnableUserDefAge, hwAspfMibEudmObjects=hwAspfMibEudmObjects, hwAspfEudmCompliance=hwAspfEudmCompliance, hwAspfEudmEnableJava=hwAspfEudmEnableJava, hwAspfEudmEnableJavaAcl=hwAspfEudmEnableJavaAcl, hwAspfEudmAppEnableTable=hwAspfEudmAppEnableTable, hwAspfEudmAppEnableGroup=hwAspfEudmAppEnableGroup, hwAspfEudmEnableIls=hwAspfEudmEnableIls, hwAspfEudmEnableIdo=hwAspfEudmEnableIdo, hwAspfEudmEnableFtp=hwAspfEudmEnableFtp, hwAspfEudmEnableActiveX=hwAspfEudmEnableActiveX, hwAspfEudmEnableH323=hwAspfEudmEnableH323, hwAspfEudmAppEnableZoneID2=hwAspfEudmAppEnableZoneID2, hwAspfEudmEnableHttp=hwAspfEudmEnableHttp, hwAspfEudmEnableSmtp=hwAspfEudmEnableSmtp, hwAspfEudmEnablePptp=hwAspfEudmEnablePptp, hwAspfEudmEnableActiveXAcl=hwAspfEudmEnableActiveXAcl, hwAspfEudmEnableMsn=hwAspfEudmEnableMsn, hwAspfEudmMibGroups=hwAspfEudmMibGroups, hwAspfEudmAppEnableEntry=hwAspfEudmAppEnableEntry, hwAspfEudmEnableNetBios=hwAspfEudmEnableNetBios, hwASPFEudm=hwASPFEudm, hwAspfEudmConformance=hwAspfEudmConformance, hwAspfEudmEnableUserDefAcl=hwAspfEudmEnableUserDefAcl, hwAspfEudmAppEnableZoneID1=hwAspfEudmAppEnableZoneID1, hwAspfEudmEnableQq=hwAspfEudmEnableQq)
