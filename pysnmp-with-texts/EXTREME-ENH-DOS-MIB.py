#
# PySNMP MIB module EXTREME-ENH-DOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:07:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
extremeAgent, extremeV2Traps = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent", "extremeV2Traps")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, IpAddress, Integer32, Gauge32, Counter32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Unsigned32")
TruthValue, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "RowStatus")
extremeEnhDosMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 29))
if mibBuilder.loadTexts: extremeEnhDosMib.setLastUpdated('0401020000Z')
if mibBuilder.loadTexts: extremeEnhDosMib.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeEnhDosMib.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeEnhDosMib.setDescription('Extreme Enhanced Dos protect objects information')
extremeEnhDosProtect = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1))
extremeEnhDosEnableRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeEnhDosEnableRateLimit.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosEnableRateLimit.setDescription('The Flag indicates whether Enhanced DOS protection with rate limit is enabled or disabled.')
extremeEnhDosEnableIpFdb = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeEnhDosEnableIpFdb.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosEnableIpFdb.setDescription('The Flag indicates whether Enhanced DOS protection against IPFDB thrashing is enabled or disabled.')
extremeEnhDosEnableBenchMark = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeEnhDosEnableBenchMark.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosEnableBenchMark.setDescription('The Flag indicates whether Enhanced DOS protection with benchmarking is enabled or disabled.')
extremeEnhDosCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 262144)).clone(262144)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeEnhDosCacheSize.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosCacheSize.setDescription('The Enhanced DOS Cache Size. The number of DA/SA pairs')
extremeEnhDosPortTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5), )
if mibBuilder.loadTexts: extremeEnhDosPortTable.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortTable.setDescription('This table contains the port wise listing of Enhanced DOS attributes.')
extremeEnhDosPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1), ).setIndexNames((0, "EXTREME-ENH-DOS-MIB", "extremeEnhDosPortIfIndex"))
if mibBuilder.loadTexts: extremeEnhDosPortEntry.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortEntry.setDescription('Information about the Dos attributes of a particular port.')
extremeEnhDosPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeEnhDosPortIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortIfIndex.setDescription('The index for this entry.')
extremeEnhDosPortTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortTrusted.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortTrusted.setDescription('Indicates whether the port is trusted or untrusted.')
extremeEnhDosPortAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeEnhDosPortAlarmState.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortAlarmState.setDescription('Indicates whether the port is in alarm state or not.')
extremeEnhDosPortLearnLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1953125)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortLearnLimit.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortLearnLimit.setDescription('The number of packets allowed on the port before an entry is created in the forwarding table.')
extremeEnhDosPortLearnWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortLearnWindow.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortLearnWindow.setDescription('The duration to be considered to reach the threshold for creating an entry in the forwarding table.')
extremeEnhDosPortAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortAgingTime.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortAgingTime.setDescription('The duration to be considered for aging out entries created on this port.')
extremeEnhDosPortRateLimitEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitEnable.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitEnable.setDescription('Indicates whether the rate limit is enabled for this port.')
extremeEnhDosPortIpFdbEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortIpFdbEnable.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortIpFdbEnable.setDescription('Indicates whether the DOS protection against IP FDB thrashing is enabled for this port.')
extremeEnhDosPortBenchMarkEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortBenchMarkEnable.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortBenchMarkEnable.setDescription('Indicates whether the bench marking is enabled for this port.')
extremeEnhDosPortRateLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1953125)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitThreshold.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitThreshold.setDescription('The number of packets allowed on the port within the learning window before the rate limit is applied.')
extremeEnhDosPortRateLimitDropProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitDropProbability.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitDropProbability.setDescription('The probability that the packet is discarded after the reaching the threshold.')
extremeEnhDosPortRateLimitLearningWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitLearningWindow.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitLearningWindow.setDescription('The duration to be considered after which the rate limit is applied.')
extremeEnhDosPortRateLimitProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("icmp", 1), ("all", 2))).clone('icmp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitProtocol.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortRateLimitProtocol.setDescription('The protocol packets to be considered for rate limit filtering.')
extremeEnhDosPortStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 6), )
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsTable.setDescription('This table contains the port wise listing of DOS statistics.')
extremeEnhDosPortStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 6, 1), ).setIndexNames((0, "EXTREME-ENH-DOS-MIB", "extremeEnhDosPortStatisticsIfIndex"))
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsEntry.setDescription('Information about the DOS statistics of a particular port.')
extremeEnhDosPortStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsIfIndex.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsIfIndex.setDescription('The index for this entry.')
extremeEnhDosPortStatisticsRateLimitFilteredPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 29, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsRateLimitFilteredPackets.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosPortStatisticsRateLimitFilteredPackets.setDescription('The number of packets filetered on this port.')
extremeEnhDosTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 11))
extremeEnhDosTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 4, 11, 0))
extremeEnhDosThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 11, 0, 1)).setObjects(("EXTREME-ENH-DOS-MIB", "extremeEnhDosPortIfIndex"), ("EXTREME-ENH-DOS-MIB", "extremeEnhDosPortRateLimitThreshold"))
if mibBuilder.loadTexts: extremeEnhDosThresholdReached.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosThresholdReached.setDescription('The extremeDosThresholdReached notification is generated when the DOS threshold is crossed for any of the ports.')
extremeEnhDosThresholdCleared = NotificationType((1, 3, 6, 1, 4, 1, 1916, 4, 11, 0, 2)).setObjects(("EXTREME-ENH-DOS-MIB", "extremeEnhDosPortIfIndex"), ("EXTREME-ENH-DOS-MIB", "extremeEnhDosPortRateLimitThreshold"))
if mibBuilder.loadTexts: extremeEnhDosThresholdCleared.setStatus('current')
if mibBuilder.loadTexts: extremeEnhDosThresholdCleared.setDescription('The extremeEnhDosThresholdCleared notification is generated when the DOS threshold is cleared for any of the ports.')
mibBuilder.exportSymbols("EXTREME-ENH-DOS-MIB", extremeEnhDosPortLearnWindow=extremeEnhDosPortLearnWindow, extremeEnhDosMib=extremeEnhDosMib, extremeEnhDosEnableRateLimit=extremeEnhDosEnableRateLimit, extremeEnhDosTraps=extremeEnhDosTraps, extremeEnhDosProtect=extremeEnhDosProtect, extremeEnhDosPortEntry=extremeEnhDosPortEntry, extremeEnhDosPortIpFdbEnable=extremeEnhDosPortIpFdbEnable, extremeEnhDosPortStatisticsEntry=extremeEnhDosPortStatisticsEntry, extremeEnhDosPortStatisticsIfIndex=extremeEnhDosPortStatisticsIfIndex, extremeEnhDosThresholdReached=extremeEnhDosThresholdReached, extremeEnhDosTrapsPrefix=extremeEnhDosTrapsPrefix, extremeEnhDosPortTable=extremeEnhDosPortTable, extremeEnhDosPortStatisticsRateLimitFilteredPackets=extremeEnhDosPortStatisticsRateLimitFilteredPackets, extremeEnhDosPortAlarmState=extremeEnhDosPortAlarmState, extremeEnhDosPortTrusted=extremeEnhDosPortTrusted, extremeEnhDosPortRateLimitLearningWindow=extremeEnhDosPortRateLimitLearningWindow, extremeEnhDosPortAgingTime=extremeEnhDosPortAgingTime, extremeEnhDosPortRateLimitEnable=extremeEnhDosPortRateLimitEnable, extremeEnhDosPortStatisticsTable=extremeEnhDosPortStatisticsTable, extremeEnhDosCacheSize=extremeEnhDosCacheSize, extremeEnhDosPortBenchMarkEnable=extremeEnhDosPortBenchMarkEnable, extremeEnhDosPortLearnLimit=extremeEnhDosPortLearnLimit, extremeEnhDosEnableBenchMark=extremeEnhDosEnableBenchMark, extremeEnhDosPortRateLimitDropProbability=extremeEnhDosPortRateLimitDropProbability, extremeEnhDosEnableIpFdb=extremeEnhDosEnableIpFdb, extremeEnhDosThresholdCleared=extremeEnhDosThresholdCleared, extremeEnhDosPortRateLimitProtocol=extremeEnhDosPortRateLimitProtocol, PYSNMP_MODULE_ID=extremeEnhDosMib, extremeEnhDosPortIfIndex=extremeEnhDosPortIfIndex, extremeEnhDosPortRateLimitThreshold=extremeEnhDosPortRateLimitThreshold)
