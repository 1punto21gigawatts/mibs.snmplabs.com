#
# PySNMP MIB module HPN-ICF-PROT-PRIORITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-PROT-PRIORITY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:40:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, iso, NotificationType, Gauge32, ObjectIdentity, MibIdentifier, Integer32, Unsigned32, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "iso", "NotificationType", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "Unsigned32", "Counter64", "ModuleIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hpnicfProtocolPriority = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37))
hpnicfProtocolPriority.setRevisions(('2005-01-17 16:33',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfProtocolPriority.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hpnicfProtocolPriority.setLastUpdated('200501171633Z')
if mibBuilder.loadTexts: hpnicfProtocolPriority.setOrganization('')
if mibBuilder.loadTexts: hpnicfProtocolPriority.setContactInfo('')
if mibBuilder.loadTexts: hpnicfProtocolPriority.setDescription('This MIB is used to manage and configure the priority of specified protocol. This MIB is applicable to routers, switches and other products. ')
hpnicfProtocolPriorityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1))
hpnicfPPri = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1))
hpnicfProtocolPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfProtocolPriorityTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfProtocolPriorityTable.setDescription('A table is used to configure the priority of the protocol.')
hpnicfProtocolPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-PROT-PRIORITY-MIB", "hpnicfPPriProtocolType"))
if mibBuilder.loadTexts: hpnicfProtocolPriorityEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfProtocolPriorityEntry.setDescription('An entry containing information about the priority of the protocol.')
hpnicfPPriProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ospf", 1), ("telnet", 2), ("snmp", 3), ("icmp", 4), ("bgp", 5), ("ldp", 6))))
if mibBuilder.loadTexts: hpnicfPPriProtocolType.setStatus('current')
if mibBuilder.loadTexts: hpnicfPPriProtocolType.setDescription('Protocol type.')
hpnicfPPriPriorityType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipPrecedence", 1), ("dscp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPPriPriorityType.setStatus('current')
if mibBuilder.loadTexts: hpnicfPPriPriorityType.setDescription('Priority type.')
hpnicfPPriPriorityVlaue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPPriPriorityVlaue.setStatus('current')
if mibBuilder.loadTexts: hpnicfPPriPriorityVlaue.setDescription('Priority value. If setting hpnicfPPriPriorityType to ip-precedence(1), the range of hpnicfPPriPriorityVlaue is from 0 to 7. If setting hpnicfPPriPriorityType to dscp(2), the range of hpnicfPPriPriorityVlaue is from 0 to 63.')
hpnicfPPriRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 37, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPPriRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfPPriRowStatus.setDescription('RowStatus, Now support createAndGo,active and destroy. To create a new row, hpnicfPPriPriorityType and hpnicfPPriPriorityValue must be specified. To modify a row,hpnicfPPriPriorityType and hpnicfPPriPriorityValue must change at the same time and the hpnicfPPriRowStatus is active .')
mibBuilder.exportSymbols("HPN-ICF-PROT-PRIORITY-MIB", hpnicfPPriPriorityType=hpnicfPPriPriorityType, hpnicfPPri=hpnicfPPri, hpnicfProtocolPriorityEntry=hpnicfProtocolPriorityEntry, hpnicfProtocolPriority=hpnicfProtocolPriority, hpnicfPPriRowStatus=hpnicfPPriRowStatus, hpnicfPPriProtocolType=hpnicfPPriProtocolType, hpnicfProtocolPriorityTable=hpnicfProtocolPriorityTable, hpnicfProtocolPriorityObjects=hpnicfProtocolPriorityObjects, PYSNMP_MODULE_ID=hpnicfProtocolPriority, hpnicfPPriPriorityVlaue=hpnicfPPriPriorityVlaue)
