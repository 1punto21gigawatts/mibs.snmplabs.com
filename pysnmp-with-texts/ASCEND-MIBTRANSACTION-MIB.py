#
# PySNMP MIB module ASCEND-MIBTRANSACTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBTRANSACTION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:28:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, Unsigned32, NotificationType, ModuleIdentity, IpAddress, MibIdentifier, Bits, ObjectIdentity, Counter64, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "Unsigned32", "NotificationType", "ModuleIdentity", "IpAddress", "MibIdentifier", "Bits", "ObjectIdentity", "Counter64", "Counter32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

mibtransactionProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 131))
mibtransactionProfileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 131, 1), )
if mibBuilder.loadTexts: mibtransactionProfileTable.setStatus('mandatory')
if mibBuilder.loadTexts: mibtransactionProfileTable.setDescription('A list of mibtransactionProfile profile entries.')
mibtransactionProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1), ).setIndexNames((0, "ASCEND-MIBTRANSACTION-MIB", "transactionProfile-Index-o"))
if mibBuilder.loadTexts: mibtransactionProfileEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mibtransactionProfileEntry.setDescription('A mibtransactionProfile entry containing objects that maps to the parameters of mibtransactionProfile profile.')
transactionProfile_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 1), Integer32()).setLabel("transactionProfile-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: transactionProfile_Index_o.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_Index_o.setDescription('')
transactionProfile_SelectionTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 2), Integer32()).setLabel("transactionProfile-SelectionTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_SelectionTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_SelectionTimeout.setDescription('Transaction Server Selection Timeout in milliseconds')
transactionProfile_DataAckTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 3), Integer32()).setLabel("transactionProfile-DataAckTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_DataAckTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_DataAckTimeout.setDescription('Transaction Server Ack Data message Timeout in milliseconds')
transactionProfile_KeepAliveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 4), Integer32()).setLabel("transactionProfile-KeepAliveTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_KeepAliveTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_KeepAliveTimeout.setDescription('Transaction Server Keep Alive Timeout in seconds')
transactionProfile_QtpPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 5), Integer32()).setLabel("transactionProfile-QtpPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_QtpPort.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_QtpPort.setDescription('UDP Port number for QTP')
transactionProfile_MetricMax = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 6), Integer32()).setLabel("transactionProfile-MetricMax").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_MetricMax.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_MetricMax.setDescription('Metric Maximum (threshold)')
transactionProfile_NoConnAckIncrement = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 7), Integer32()).setLabel("transactionProfile-NoConnAckIncrement").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_NoConnAckIncrement.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_NoConnAckIncrement.setDescription('No Reply to QTP Connect Request metric increment')
transactionProfile_CallRejectIncrement = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 8), Integer32()).setLabel("transactionProfile-CallRejectIncrement").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_CallRejectIncrement.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_CallRejectIncrement.setDescription('QTP Call Reject metric increment')
transactionProfile_CallAckDecrement = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 9), Integer32()).setLabel("transactionProfile-CallAckDecrement").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_CallAckDecrement.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_CallAckDecrement.setDescription('QTP Call Ack metric decrement')
transactionProfile_AvailableMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 10), Integer32()).setLabel("transactionProfile-AvailableMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_AvailableMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_AvailableMetric.setDescription('QTP Status Report, Flow Control Attribute: Available metric')
transactionProfile_PartlyCongestedMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 11), Integer32()).setLabel("transactionProfile-PartlyCongestedMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_PartlyCongestedMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_PartlyCongestedMetric.setDescription('QTP Status Report, Flow Control Attribute: Partly congested metric')
transactionProfile_CongestedMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 12), Integer32()).setLabel("transactionProfile-CongestedMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_CongestedMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_CongestedMetric.setDescription('QTP Status Report, Flow Control Attribute: Congested metric')
transactionProfile_ShutdownMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 13), Integer32()).setLabel("transactionProfile-ShutdownMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_ShutdownMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_ShutdownMetric.setDescription('QTP Status Report, Flow Control Attribute: Shutdown metric')
transactionProfile_NoFirstStatusMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 14), Integer32()).setLabel("transactionProfile-NoFirstStatusMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_NoFirstStatusMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_NoFirstStatusMetric.setDescription('No QTP Status Report, First Occurence metric')
transactionProfile_NoSecondStatusMetric = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 15), Integer32()).setLabel("transactionProfile-NoSecondStatusMetric").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_NoSecondStatusMetric.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_NoSecondStatusMetric.setDescription('No QTP Status Report, Second Occurence metric')
transactionProfile_MaxQtpPduSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 16), Integer32()).setLabel("transactionProfile-MaxQtpPduSize").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_MaxQtpPduSize.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_MaxQtpPduSize.setDescription('Max QTP PDU size for data forwarding')
transactionProfile_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 131, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("transactionProfile-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: transactionProfile_Action_o.setStatus('mandatory')
if mibBuilder.loadTexts: transactionProfile_Action_o.setDescription('')
mibBuilder.exportSymbols("ASCEND-MIBTRANSACTION-MIB", mibtransactionProfileTable=mibtransactionProfileTable, transactionProfile_CallRejectIncrement=transactionProfile_CallRejectIncrement, transactionProfile_NoSecondStatusMetric=transactionProfile_NoSecondStatusMetric, transactionProfile_Index_o=transactionProfile_Index_o, transactionProfile_QtpPort=transactionProfile_QtpPort, transactionProfile_CallAckDecrement=transactionProfile_CallAckDecrement, mibtransactionProfile=mibtransactionProfile, transactionProfile_MetricMax=transactionProfile_MetricMax, transactionProfile_MaxQtpPduSize=transactionProfile_MaxQtpPduSize, DisplayString=DisplayString, transactionProfile_CongestedMetric=transactionProfile_CongestedMetric, transactionProfile_Action_o=transactionProfile_Action_o, transactionProfile_DataAckTimeout=transactionProfile_DataAckTimeout, transactionProfile_SelectionTimeout=transactionProfile_SelectionTimeout, transactionProfile_NoConnAckIncrement=transactionProfile_NoConnAckIncrement, transactionProfile_NoFirstStatusMetric=transactionProfile_NoFirstStatusMetric, mibtransactionProfileEntry=mibtransactionProfileEntry, transactionProfile_AvailableMetric=transactionProfile_AvailableMetric, transactionProfile_KeepAliveTimeout=transactionProfile_KeepAliveTimeout, transactionProfile_ShutdownMetric=transactionProfile_ShutdownMetric, transactionProfile_PartlyCongestedMetric=transactionProfile_PartlyCongestedMetric)
