#
# PySNMP MIB module CISCO-POWER-ETHERNET-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-POWER-ETHERNET-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero")
pethPsePortGroupIndex, pethPsePortEntry, pethPsePortIndex, pethMainPseGroupIndex = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethPsePortGroupIndex", "pethPsePortEntry", "pethPsePortIndex", "pethMainPseGroupIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Counter32, Gauge32, TimeTicks, IpAddress, ObjectIdentity, MibIdentifier, Unsigned32, NotificationType, ModuleIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "TimeTicks", "IpAddress", "ObjectIdentity", "MibIdentifier", "Unsigned32", "NotificationType", "ModuleIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ciscoPowerEthernetExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 402))
ciscoPowerEthernetExtMIB.setRevisions(('2013-07-10 00:00', '2011-07-18 00:00', '2009-12-04 00:00', '2007-04-12 00:00', '2007-02-02 00:00', '2005-06-10 00:00', '2004-04-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoPowerEthernetExtMIB.setRevisionsDescriptions(('Added following TEXTUAL-CONVENTION - CpeExtLldpPwrClassOrZero Added following OBJECT-GROUP - cpeExtPsePortLldpPowerGroup Added new compliance - cpeExtMIBCompliance5.', "Added cpeExtPowerPriorityGroup, cpeExtPsePortLldpGroup and cpeExtPsePortCapabilitiesGroup. Added a new enumeration 'class4' in cpeExtPdStatsClass. Added TEXTUAL-CONVENTION CpeExtLldpPwrType, CpeExtLldpPwrSrc, and CpeExtPwrPriority.", 'Updated the DESCRIPTION of cpeExtPolicingNotif.', "Added 'overdrawLog' value to cpeExtPsePortAdditionalStatus. Added cpeExtPortPolicingActionGroup, cpeExtPortPwrManAllocGroup cpeExtPolicingNotifEnableGroup, and cpeExtPolicingNotifGroup.", 'Added cpeExtPsePortEntPhyIndex, cpeExtPsePortPolicingCapable and cpeExtPsePortPolicingEnable to cpeExtPsePortTable. Added cpeExtPdStatsTotalDevices and cpeExtPdStatsTable. Added enumerated value disable(5) to cpeExtPsePortEnable.', "Added 'limit' to cpeExtPsePortEnable, 'overdraw' to cpeExtPsePortAdditionalStatus and the groups cpeExtPsePortPwrMonitorGroup and cpeExtMainPseGroup.", 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoPowerEthernetExtMIB.setLastUpdated('201307100000Z')
if mibBuilder.loadTexts: ciscoPowerEthernetExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoPowerEthernetExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoPowerEthernetExtMIB.setDescription('A MIB module for extending the POWER-ETHERNET-MIB (RFC3621) to add objects which provide additional management information about Power Sourcing Equipment (PSE) not available in POWER-ETHERNET-MIB. Glossary Power Sourcing Equipment (PSE) These are devices supplying electrical power to other equipment. They are, for example, inline power switches, inline power daughterboards and power patch panels. Powered Device (PD) These are devices receiving their electrical power supply from Power Sourcing Equipment. They are, for example, IP telephones and wireless access points or bridges.')
cpeExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 0))
cpeExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 1))
cpeExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 2))
class CpeExtLldpPwrType(TextualConvention, Integer32):
    description = "The requested Data Terminal Equipment (DTE) Power via Media Dependent Interface (MDI) type based on Data Link Layer (DLL) power classification. In Data Link Layer power classification, the PSE and PD perform power negotiation using the Link Layer Discovery Protocol (LLDP) as soon as the data link is established. It has finer power resolution than the Physical Layer power classification and has the ability for the PSE and PD to participate in dynamic power allocation wherein allocated power to the PD may change one or more times during PD operation. 'type1Pd' - A PD that advertises a power draw less than or equal to 12.95 W (at the PD). 'type1Pse' - A PSE that is designed to support a Type 1 PD. 'type2Pd' - A PD that advertises a power draw greater than 12.95 W (at the PD). 'type2Pse - A PSE that is designed to support either a Type 1 or a Type 2 PD."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("type1Pd", 1), ("type1Pse", 2), ("type2Pd", 3), ("type2Pse", 4))

class CpeExtLldpPwrSrc(TextualConvention, Integer32):
    description = "The power source of the PD or PSE port which implements the LLDP based Data Link Layer power classification. 'pseAndLocal' - A PD powered both locally and by a PSE. 'local' - A PD powered locally only. 'pse' - A PD powered by a PSE only. 'backupSrc' - A PSE powered by a backup power source. 'primarySrc' - A PSE powered by its primary power source. 'unknown' - A PD or PSE where the power source is unknown."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("pseAndLocal", 1), ("local", 2), ("pse", 3), ("backupSrc", 4), ("primarySrc", 5), ("unknown", 6))

class CpeExtPwrPriority(TextualConvention, Integer32):
    description = "The power priority for the PD on the PSE port which implements the LLDP based Data Link Layer power classification. 'critical' - power priority is at critical level. 'high' - power priority is at high level. 'low' - power priority is at low level. 'unknown' - power priority level is unknown."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("critical", 1), ("high", 2), ("low", 3), ("unknown", 4))

class CpeExtLldpPwrClassOrZero(TextualConvention, Integer32):
    description = "The power class of the PD or PSE port that implements the LLDP based Data Link Layer power classification 'unknown' - power classification of the powered devices is unknown. 'class0' - power classification of the powered devices is class 0 in IEEE specifications. 'class1' - power classification of the powered devices is class 1 in IEEE specifications. 'class2' - power classification of the powered devices is class 2 in IEEE specifications. 'class3' - power classification of the powered devices is class 3 in IEEE specifications. 'class4' - power classification of the powered devices is class 4 in IEEE specifications."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5))

cpeExtDefaultAllocation = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 1), Unsigned32()).setUnits('milliwatts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtDefaultAllocation.setStatus('current')
if mibBuilder.loadTexts: cpeExtDefaultAllocation.setDescription('This object indicates the default inline power allocation per port. This is a global configuration parameter that applies to all inline power capable ports in the system. The system must consider this object as well as the per port configuration object, cpeExtPsePortPwrMax, when determining how much power to allocate to a port. The system will use the lower of the two numbers.')
cpeExtPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2), )
if mibBuilder.loadTexts: cpeExtPsePortTable.setReference('RFC3621')
if mibBuilder.loadTexts: cpeExtPsePortTable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortTable.setDescription('This table extends the POWER-ETHERNET-MIB pethPsePortTable for power Ethernet ports on a Powered Sourcing Equipment (PSE) device.')
cpeExtPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1), )
pethPsePortEntry.registerAugmentions(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortEntry"))
cpeExtPsePortEntry.setIndexNames(*pethPsePortEntry.getIndexNames())
if mibBuilder.loadTexts: cpeExtPsePortEntry.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortEntry.setDescription('A cpeExtPsePortEntry extends a corresponding pethPsePortTable entry. This entry displays and controls more characteristics of a power Ethernet port on a PSE device.')
cpeExtPsePortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("static", 2), ("limit", 3), ("disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPsePortEnable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortEnable.setDescription("This object is an extension of the pethPsePortAdminEnable object from RFC3621. It allows the user to be more specific when enabling the PSE functions. The states, 'auto', 'static' and 'limit' correspond to a value of 'true' for the pethPsePortAdminEnable object. The state 'disable' corresponds to a value of 'false' for the pethPsePortAdminEnable object. Setting this value to 'auto' enables Powered Device discovery on the interface and the amount of power allocated depends on the Powered Device discovered. If pethPsePortAdminEnable was 'false' prior to this set operation, then it will become 'true'. Setting this value to 'static' will also enable Powered Device discovery. However, this is different from 'auto' in that the amount of power is pre-allocated based on the configuration on the Power Sourcing Equipment. If pethPsePortAdminEnable was 'false' prior to this set operation, then it will become 'true'. Setting this value to 'limit' enables Powered Device discovery on the interface. The amount of power allocated depends on the Powered Device discovered and the value of cpeExtPsePortPwrMax. The lower value will be used. If pethPsePortAdminEnable was 'false' prior to this set operation, then it will become 'true'. Setting this value to 'disable' disables the PSE functions. The pethPsePortAdminEnable object will adopt the value of 'false' if it was 'true' prior to this set operation. When setting the pethPsePortAdminEnable object to 'false' this object cpeExtPsePortEnable will adopt the value of 'disable'. If cpeExtPsePortPolicingCapable of the PSE port, or cpeExtMainPsePwrMonitorCapable of the PSE port's main group, has the value of 'false', this object can only be set to 'auto', 'static' or 'disable'. Otherwise, this object can be set to 'auto', 'static', 'limit' or 'disable'.")
cpeExtPsePortDiscoverMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("off", 2), ("ieee", 3), ("cisco", 4), ("ieeeAndCisco", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortDiscoverMode.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortDiscoverMode.setDescription("This object indicates the discover mode used by the system to discover the PD. A value of 'unknown' indicates that the discover mode on the interface is unknown. A value of 'off' indicates that discovery is disabled on the interface. A value of 'ieee' indicates that the discover mode on the interface is IEEE based. A value of 'cisco' indicates that the discover mode on the interface is Cisco based. A value of 'ieeeAndCisco' indicates that the discover mode on the interface is both IEEE and Cisco based.")
cpeExtPsePortDeviceDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortDeviceDetected.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortDeviceDetected.setDescription("This object indicates if a Powered Device (PD) has been detected on the interface. A value of 'true' indicates that a PD has been detected on the interface. A value of 'false' indicates that no PD has been detected on the interface.")
cpeExtPsePortIeeePd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortIeeePd.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortIeeePd.setDescription("This object indicates whether the Powered Device attached to the interface is an IEEE compliant Powered Device or not. A value of 'true' indicates the attached Powered Device is an IEEE compliant Powered Device. A value of 'false' indicates the attached Powered Device is not an IEEE compliant Powered Device. This also means that the value of the corresponding object from the pethPsePortTable, pethPsePortPowerClassifications is irrelevant.")
cpeExtPsePortAdditionalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 5), Bits().clone(namedValues=NamedValues(("deny", 0), ("overdraw", 1), ("overdrawLog", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortAdditionalStatus.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortAdditionalStatus.setDescription('This object is an extension of the pethPsePortDetectionStatus object from RFC3621 and provides additional status information. deny: When set, the PD attached to the interface is being denied power due to insufficient power resources on the Power Sourcing Equipment. overdraw: When set, the PD attached to the interface is being denied power because the PD is trying to consume more power than it has been configured to consume. overdrawLog: When set, the PD attached to the interface is trying to consume more power than it has been configured to consume, but is not being denied power.')
cpeExtPsePortPwrMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 6), Unsigned32()).setUnits('milliwatts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPsePortPwrMax.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrMax.setDescription('This indicates the maximum amount of power that the PSE will make available to the PD connected to this interface.')
cpeExtPsePortPwrAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 7), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortPwrAllocated.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrAllocated.setDescription('This object indicates the amount of power allocated from the PSE for the PD.')
cpeExtPsePortPwrAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 8), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortPwrAvailable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrAvailable.setDescription('This object indicates the amount of power available for the PD to use. This value may differ from the value cpeExtPsePortPwrAllocated due to the efficiency issues of delivering the power from the PSE to the PD. When sufficient power is available to power a PD, this value should be equal to the lower of the two objects, cpeExtDefaultAllocation and cpeExtPsePortPwrMax.')
cpeExtPsePortPwrConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 9), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortPwrConsumption.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrConsumption.setDescription('This indicates the actual power consumption of the PD connected to this interface. It may not necessarily be equal to the value of cpeExtPsePortPwrAvailable.')
cpeExtPsePortMaxPwrDrawn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 10), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortMaxPwrDrawn.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortMaxPwrDrawn.setDescription('This indicates the maximum amount of power drawn by the PD connected to this interface, since it was powered on.')
cpeExtPsePortEntPhyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 11), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortEntPhyIndex.setReference('RFC 2737, entPhysicalIndex.')
if mibBuilder.loadTexts: cpeExtPsePortEntPhyIndex.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortEntPhyIndex.setDescription('The entPhysicalIndex value that uniquely identifies the PSE port. If the PSE port does not have a corresponding physical entry in entPhysicalTable or if the entPhysicalTable is not supported by the management system, this object has the value of zero.')
cpeExtPsePortPolicingCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortPolicingCapable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPolicingCapable.setDescription('This object indicates whether the PSE port hardware is capable of policing the port for proper power consumption based on the allocated value.')
cpeExtPsePortPolicingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPsePortPolicingEnable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPolicingEnable.setDescription("This object allows the user to turn on or turn off the power policing of the PSE port. If the instance value of cpeExtPsePortPolicingCapable is 'TRUE', the user is allowed to set this object to 'on' or 'off'. Otherwise, this object is read-only and always has the value of 'off'.")
cpeExtPsePortPolicingAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deny", 1), ("logOnly", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPsePortPolicingAction.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPolicingAction.setDescription("This object specifies the power policing action that the device will take on this PSE port when the real-time power consumption exceeds its max power allocation if the value of cpeExtPsePortPolicingEnable is 'on'. 'deny' - the device will deny the power to the PSE port 'logOnly' - the device will not deny the power to the PSE port")
cpeExtPsePortPwrManAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 15), Unsigned32()).setUnits('milliwatts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPsePortPwrManAlloc.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrManAlloc.setDescription('This object specifies the manual power allocation that the PSE will allocate to the PD connected to this interface regardless of the amount requested via CDP or IEEE. Setting this object value to zero disables the manual power allocation. Warning: Misconfiguring this manual power allocation may cause damage to the system and void the warranty. Take precautions not to oversubscribe the power supply.')
cpeExtPsePortCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 2, 1, 16), Bits().clone(namedValues=NamedValues(("policing", 0), ("poePlus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortCapabilities.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortCapabilities.setDescription("This object indicates the PSE functionality that this port supports. If the 'policing' BIT is set, then this PSE port is capable of policing the port for proper power consumption based on the allocated value. If the 'poePlus' BIT is set, then this PSE port supports PoE Plus functions.")
cpeExtMainPseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 3), )
if mibBuilder.loadTexts: cpeExtMainPseTable.setReference('RFC3621, pethMainPseTable')
if mibBuilder.loadTexts: cpeExtMainPseTable.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPseTable.setDescription('This table contains the additional information for the main PSE group in pethMainPseTable.')
cpeExtMainPseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 3, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethMainPseGroupIndex"))
if mibBuilder.loadTexts: cpeExtMainPseEntry.setReference('RFC3621, pethMainPseTable')
if mibBuilder.loadTexts: cpeExtMainPseEntry.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPseEntry.setDescription('A cpeExtMainPseEntry contains information about a particular pethMainPseGroupIndex. An entry is created by the agent when a main PSE group is added to the pethMainPseTable. An entry is deleted by the agent when a main PSE group is removed from the pethMainPseTable.')
cpeExtMainPseEntPhyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 3, 1, 1), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtMainPseEntPhyIndex.setReference('RFC 2737, entPhysicalIndex.')
if mibBuilder.loadTexts: cpeExtMainPseEntPhyIndex.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPseEntPhyIndex.setDescription('The entPhysicalIndex value that uniquely identifies the main PSE group. If the main PSE group does not have a corresponding physical entry in entPhysicalTable or if the entPhysicalTable is not supported by the management system, then this object has the value of zero.')
cpeExtMainPseDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtMainPseDescr.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPseDescr.setDescription('A textual string containing information about the Power Source Equipment (PSE) group.')
cpeExtMainPsePwrMonitorCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtMainPsePwrMonitorCapable.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPsePwrMonitorCapable.setDescription("This object indicates if the given group is capable of monitoring the power consumption of the interfaces that belong to the group. The value 'true' means that the group is capable. The value 'false' means that the group in not capable.")
cpeExtPdStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4))
cpeExtPdStatsTotalDevices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPdStatsTotalDevices.setReference('IEEE Std 802.3af Section 30.9.1.1.6 aPSEPowerClassification')
if mibBuilder.loadTexts: cpeExtPdStatsTotalDevices.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsTotalDevices.setDescription('This object indicates the total number of the powered devices with any power classifications in the system. Classification is a way to tag different terminals on the Power over LAN network according to their power consumption. Devices such as IP telephones, WLAN access points and others, will be classified according to their power requirements.')
cpeExtPdStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4, 2), )
if mibBuilder.loadTexts: cpeExtPdStatsTable.setReference('IEEE Std 802.3af Section 30.9.1.1.6 aPSEPowerClassification')
if mibBuilder.loadTexts: cpeExtPdStatsTable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsTable.setDescription('This table contains the statistics information of the powered devices fallen into different power classifications in the system.')
cpeExtPdStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsClass"))
if mibBuilder.loadTexts: cpeExtPdStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsEntry.setDescription('A cpeExtPdStatsEntry contains the statistics information about a particular power classification defined in cpeExtPdStatsIndex.')
cpeExtPdStatsClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cisco", 1), ("class0", 2), ("class1", 3), ("class2", 4), ("class3", 5), ("class4", 6))))
if mibBuilder.loadTexts: cpeExtPdStatsClass.setReference('IEEE Std 802.3af Section 30.9.1.1.6 aPSEPowerClassification')
if mibBuilder.loadTexts: cpeExtPdStatsClass.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsClass.setDescription("The power classification as the index for the statistics information for powered devices. A value of 'cisco' indicates that the powered devices are CISCO proprietary and their power classification does not fall into any class in IEEE specifications. A value of 'class0' indicates that the power classification of the powered devices falls into class 0 in IEEE specifications. A value of 'class1' indicates that the power classification of the powered devices falls into class 1 in IEEE specifications. A value of 'class2' indicates that the power classification of the powered devices falls into class 2 in IEEE specifications. A value of 'class3' indicates that the power classification of the powered devices falls into class 3 in IEEE specifications. A value of 'class4' indicates that the power classification of the powered devices falls into class 4 in IEEE specifications.")
cpeExtPdStatsDeviceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPdStatsDeviceCount.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsDeviceCount.setDescription('This object indicates the count of the powered devices whose power classification falls into a specific value of cpeExtPdStatsIndex.')
cpeExtPolicingNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPolicingNotifEnable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPolicingNotifEnable.setDescription('This object is used to enable/disable the the cpeExtPolicingNotif notification.')
cpeExtPowerPriorityEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeExtPowerPriorityEnable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPowerPriorityEnable.setDescription("This object is the global control of the power priority feature on the device. 'true' indicates that the power priority feature is globally enabled. 'false' indicates that the power priority feature is globally disabled.")
cpeExtPsePortLldpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7), )
if mibBuilder.loadTexts: cpeExtPsePortLldpTable.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpTable.setDescription('A table provides the Link Layer Discovery Protocol (LLDP) based Data Link Layer (DLL) power classification characteristics of PSE ports and PDs attached to them.')
cpeExtPsePortLldpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1), ).setIndexNames((0, "POWER-ETHERNET-MIB", "pethPsePortGroupIndex"), (0, "POWER-ETHERNET-MIB", "pethPsePortIndex"))
if mibBuilder.loadTexts: cpeExtPsePortLldpEntry.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpEntry.setDescription('A cpeExtPsePortLldpEntry entry contains the LLDP based 802.3at DLL power classification characteristics for a particular PSE and the PD attached to it. A PSE has its entry here when all of the following conditions are satisfied: - The LLDP power classification is globally enabled. - It has a PD attached. - LLDP is the operational power negotiation protocol between the PSE and the PD attached.')
cpeExtPsePortLldpPwrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 1), CpeExtLldpPwrType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrType.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrType.setDescription('The DTE Power via MDI type of the local system (PSE).')
cpeExtPsePortLldpPdPwrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 2), CpeExtLldpPwrType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrType.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrType.setDescription('The DTE Power via MDI type of the remote system (PD).')
cpeExtPsePortLldpPwrSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 3), CpeExtLldpPwrSrc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrSrc.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrSrc.setDescription('The power source of the local system (PSE).')
cpeExtPsePortLldpPdPwrSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 4), CpeExtLldpPwrSrc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrSrc.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrSrc.setDescription('The power source of the remote system (PD).')
cpeExtPsePortLldpPwrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 5), CpeExtPwrPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrPriority.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrPriority.setDescription('The power priority of the local system (PSE).')
cpeExtPsePortLldpPdPwrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 6), CpeExtPwrPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrPriority.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrPriority.setDescription('The power priority of the remote system (PD).')
cpeExtPsePortLldpPwrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 7), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrReq.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrReq.setDescription('The requested PD power value that the local system (PSE) mirrors back to the remote system (PD).')
cpeExtPsePortLldpPdPwrReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 8), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrReq.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrReq.setDescription('The PD requested power value received from the remote system (PD).')
cpeExtPsePortLldpPwrAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 9), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrAlloc.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrAlloc.setDescription('The PSE allocated power value for the remote system (PD).')
cpeExtPsePortLldpPdPwrAlloc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 10), Unsigned32()).setUnits('milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrAlloc.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrAlloc.setDescription('The PSE allocated power value received from the remote system (PD).')
cpeExtPsePortLldpPwrClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 11), CpeExtLldpPwrClassOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrClass.setReference('IEEE Std 802.3af Section 30.9.1.1.6 aPSEPowerClassification')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrClass.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPwrClass.setDescription('The PSE power classification sent to the remote PD via MDI TLV in LLDP Protocol.')
cpeExtPsePortLldpPdPwrClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 12), CpeExtLldpPwrClassOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrClass.setReference('IEEE Std 802.3af Section 30.9.1.1.6 aPSEPowerClassification')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrClass.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrClass.setDescription('This power classification received from the remote system (PD).')
cpeExtPsePortLldpPdPwrSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 13), Bits().clone(namedValues=NamedValues(("portClass", 0), ("pseMdiPwrSupport", 1), ("pseMdiPwrState", 2), ("psePairCtrlAbility", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrSupport.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrSupport.setDescription("This object indicates the power support mode received from the remote PD via MDI TLV in LLDP protocol. 'portClass' - This bit is set if the port is operating as PSE. Otherwise, it is operating as PD. 'pseMdiPwrSupport' - This bit is set if power is supported in MDI TLV. 'pseMdiPwrState' - This bit is set if power is enabled. 'psePairCtrlAbility' - This bit is set if pair selection can be controlled.")
cpeExtPsePortLldpPdPwrPairsOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 402, 1, 7, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("signal", 1), ("spare", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrPairsOrZero.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPdPwrPairsOrZero.setDescription("This object indicates the pinout pairs in use received from the remote PD via MDI TLV in LLDP Protocol. 'unknown' - information is not available 'signal' - the signal pairs are in use. 'spare' - the spare pairs are in use.")
cpeExtPolicingNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 402, 0, 1)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPolicingAction"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortAdditionalStatus"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrAllocated"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortMaxPwrDrawn"))
if mibBuilder.loadTexts: cpeExtPolicingNotif.setStatus('current')
if mibBuilder.loadTexts: cpeExtPolicingNotif.setDescription("This notification is generated when the 'overdraw' or 'overdrawLog' bit in value of cpeExtPsePortAdditionalStatus is set or cleared.")
cpeExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1))
cpeExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2))
cpeExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1, 1)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGlobalConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMIBCompliance = cpeExtMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cpeExtMIBCompliance.setDescription('The compliance statement for the CISCO-POWER-ETHERNET-EXT-MIB.')
cpeExtMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1, 2)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGlobalConfigGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrMonitorGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMIBCompliance2 = cpeExtMIBCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: cpeExtMIBCompliance2.setDescription('The compliance statement for the CISCO-POWER-ETHERNET-EXT-MIB.')
cpeExtMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1, 3)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGlobalConfigGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrMonitorGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseGroup2"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPseGrpPwrGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortEntityIndexGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingActionGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPwrManAllocGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifEnableGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMIBCompliance3 = cpeExtMIBCompliance3.setStatus('deprecated')
if mibBuilder.loadTexts: cpeExtMIBCompliance3.setDescription('The compliance statement for the CISCO-POWER-ETHERNET-EXT-MIB.')
cpeExtMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1, 4)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGlobalConfigGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrMonitorGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseGroup2"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPseGrpPwrGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortEntityIndexGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingActionGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPwrManAllocGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifEnableGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPowerPriorityGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortCapabilitiesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMIBCompliance4 = cpeExtMIBCompliance4.setStatus('deprecated')
if mibBuilder.loadTexts: cpeExtMIBCompliance4.setDescription('The compliance statement for the CISCO-POWER-ETHERNET-EXT-MIB.')
cpeExtMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 1, 5)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortGlobalConfigGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrMonitorGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseGroup2"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPseGrpPwrGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortEntityIndexGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPolicingActionGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPortPwrManAllocGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifEnableGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPowerPriorityGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortCapabilitiesGroup"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPowerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMIBCompliance5 = cpeExtMIBCompliance5.setStatus('current')
if mibBuilder.loadTexts: cpeExtMIBCompliance5.setDescription('The compliance statement for the CISCO-POWER-ETHERNET-EXT-MIB.')
cpeExtPsePortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 1)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortEnable"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortDiscoverMode"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortDeviceDetected"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortIeeePd"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortAdditionalStatus"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrMax"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrAllocated"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrAvailable"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrConsumption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortGroup = cpeExtPsePortGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortGroup.setDescription('This group provides information and configuration objects in addition to those provided in the POWER-ETHERNET-MIB (RFC3621).')
cpeExtPsePortGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 2)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtDefaultAllocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortGlobalConfigGroup = cpeExtPsePortGlobalConfigGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortGlobalConfigGroup.setDescription('This is a collection of objects which provide global configuration of the PSE interfaces.')
cpeExtPsePortPwrMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 3)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortMaxPwrDrawn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortPwrMonitorGroup = cpeExtPsePortPwrMonitorGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortPwrMonitorGroup.setDescription("This is a collection of objects which provide power monitoring on PD's connected to the PSE interfaces.")
cpeExtMainPseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 4)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseEntPhyIndex"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseDescr"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPsePwrMonitorCapable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMainPseGroup = cpeExtMainPseGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cpeExtMainPseGroup.setDescription('This is a collection of objects which provide additional information for the PSE group. cpeExtMainPseGroup object is superseded by cpeExtMainPseGroup2, and cpeExtPseGrpPwrGroup.')
cpeExtPortEntityIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 5)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortEntPhyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPortEntityIndexGroup = cpeExtPortEntityIndexGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPortEntityIndexGroup.setDescription('This is a collection of objects which provide entity physical index information for PSE port.')
cpeExtPortPolicingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 6)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPolicingCapable"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPolicingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPortPolicingGroup = cpeExtPortPolicingGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPortPolicingGroup.setDescription('This is a collection of objects which provide the hardware power consumption policing information for PSE port.')
cpeExtPdStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 7)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsTotalDevices"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPdStatsDeviceCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPdStatsGroup = cpeExtPdStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPdStatsGroup.setDescription('This is a collection of objects which provide the statistics information for powered devices.')
cpeExtMainPseGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 8)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseEntPhyIndex"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPseDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtMainPseGroup2 = cpeExtMainPseGroup2.setStatus('current')
if mibBuilder.loadTexts: cpeExtMainPseGroup2.setDescription('This is a collection of objects which provide additional information to identify the PSE group.')
cpeExtPseGrpPwrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 9)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtMainPsePwrMonitorCapable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPseGrpPwrGroup = cpeExtPseGrpPwrGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPseGrpPwrGroup.setDescription('This is a collection of objects which provide power monitoring information for the PSE group.')
cpeExtPortPolicingActionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 10)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPolicingAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPortPolicingActionGroup = cpeExtPortPolicingActionGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPortPolicingActionGroup.setDescription('This is a collection of objects which provide control of the power policing action of the PSE port.')
cpeExtPortPwrManAllocGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 11)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortPwrManAlloc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPortPwrManAllocGroup = cpeExtPortPwrManAllocGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPortPwrManAllocGroup.setDescription('This is a collection of objects which provide manual power allocation for the PSE port.')
cpeExtPolicingNotifEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 12)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPolicingNotifEnableGroup = cpeExtPolicingNotifEnableGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPolicingNotifEnableGroup.setDescription('A collection of object that provides control over power consumption policing status notification.')
cpeExtPolicingNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 13)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPolicingNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPolicingNotifGroup = cpeExtPolicingNotifGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPolicingNotifGroup.setDescription('This is a collection of notifications related to power consumption policing information for PSE ports.')
cpeExtPowerPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 14)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPowerPriorityEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPowerPriorityGroup = cpeExtPowerPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPowerPriorityGroup.setDescription('A collection of objects which provides global control of power priority feature.')
cpeExtPsePortLldpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 15)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrType"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrType"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrSrc"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrSrc"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrPriority"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrPriority"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrReq"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrReq"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrAlloc"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrAlloc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortLldpGroup = cpeExtPsePortLldpGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpGroup.setDescription('A collection of objects which provides the information about the LLDP based Data Link Layer power classification characteristics of power Ethernet PSE ports.')
cpeExtPsePortCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 16)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortCapabilitiesGroup = cpeExtPsePortCapabilitiesGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortCapabilitiesGroup.setDescription('A collection of objects which provides PSE port capabilities.')
cpeExtPsePortLldpPowerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 402, 2, 2, 17)).setObjects(("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPwrClass"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrClass"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrSupport"), ("CISCO-POWER-ETHERNET-EXT-MIB", "cpeExtPsePortLldpPdPwrPairsOrZero"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpeExtPsePortLldpPowerGroup = cpeExtPsePortLldpPowerGroup.setStatus('current')
if mibBuilder.loadTexts: cpeExtPsePortLldpPowerGroup.setDescription('A collection of objects which provide Power information via MDI TLV in LLDP Protocol.')
mibBuilder.exportSymbols("CISCO-POWER-ETHERNET-EXT-MIB", cpeExtPsePortEntry=cpeExtPsePortEntry, cpeExtPsePortGlobalConfigGroup=cpeExtPsePortGlobalConfigGroup, cpeExtPsePortLldpPwrAlloc=cpeExtPsePortLldpPwrAlloc, cpeExtPdStatsEntry=cpeExtPdStatsEntry, cpeExtPowerPriorityGroup=cpeExtPowerPriorityGroup, cpeExtMainPseGroup2=cpeExtMainPseGroup2, cpeExtMainPseGroup=cpeExtMainPseGroup, cpeExtPsePortDeviceDetected=cpeExtPsePortDeviceDetected, cpeExtPsePortLldpPwrClass=cpeExtPsePortLldpPwrClass, cpeExtMainPseTable=cpeExtMainPseTable, cpeExtPdStatsDeviceCount=cpeExtPdStatsDeviceCount, cpeExtPsePortLldpPdPwrPriority=cpeExtPsePortLldpPdPwrPriority, cpeExtPsePortLldpPdPwrClass=cpeExtPsePortLldpPdPwrClass, cpeExtMIBCompliance4=cpeExtMIBCompliance4, cpeExtPsePortLldpPdPwrSupport=cpeExtPsePortLldpPdPwrSupport, cpeExtPdStatsTable=cpeExtPdStatsTable, cpeExtMIBCompliance3=cpeExtMIBCompliance3, cpeExtMIBNotifs=cpeExtMIBNotifs, cpeExtPdStatsGroup=cpeExtPdStatsGroup, cpeExtPsePortLldpPwrReq=cpeExtPsePortLldpPwrReq, ciscoPowerEthernetExtMIB=ciscoPowerEthernetExtMIB, cpeExtPsePortLldpPdPwrAlloc=cpeExtPsePortLldpPdPwrAlloc, cpeExtMIBCompliance=cpeExtMIBCompliance, cpeExtPsePortPwrMax=cpeExtPsePortPwrMax, cpeExtPsePortLldpPdPwrReq=cpeExtPsePortLldpPdPwrReq, cpeExtPortEntityIndexGroup=cpeExtPortEntityIndexGroup, cpeExtPsePortLldpPdPwrType=cpeExtPsePortLldpPdPwrType, cpeExtMIBCompliances=cpeExtMIBCompliances, cpeExtPsePortLldpGroup=cpeExtPsePortLldpGroup, cpeExtPdStatsClass=cpeExtPdStatsClass, cpeExtPsePortIeeePd=cpeExtPsePortIeeePd, cpeExtPortPwrManAllocGroup=cpeExtPortPwrManAllocGroup, cpeExtPsePortPolicingEnable=cpeExtPsePortPolicingEnable, cpeExtPolicingNotifEnable=cpeExtPolicingNotifEnable, cpeExtPsePortLldpPwrSrc=cpeExtPsePortLldpPwrSrc, cpeExtMIBGroups=cpeExtMIBGroups, cpeExtPsePortAdditionalStatus=cpeExtPsePortAdditionalStatus, CpeExtPwrPriority=CpeExtPwrPriority, cpeExtMIBConformance=cpeExtMIBConformance, cpeExtPdStatistics=cpeExtPdStatistics, cpeExtPolicingNotif=cpeExtPolicingNotif, cpeExtPsePortMaxPwrDrawn=cpeExtPsePortMaxPwrDrawn, PYSNMP_MODULE_ID=ciscoPowerEthernetExtMIB, cpeExtMIBObjects=cpeExtMIBObjects, cpeExtPsePortPwrAvailable=cpeExtPsePortPwrAvailable, cpeExtPsePortPwrManAlloc=cpeExtPsePortPwrManAlloc, cpeExtPsePortTable=cpeExtPsePortTable, cpeExtPolicingNotifEnableGroup=cpeExtPolicingNotifEnableGroup, cpeExtPsePortLldpPowerGroup=cpeExtPsePortLldpPowerGroup, cpeExtPsePortPolicingCapable=cpeExtPsePortPolicingCapable, cpeExtPdStatsTotalDevices=cpeExtPdStatsTotalDevices, cpeExtPsePortCapabilitiesGroup=cpeExtPsePortCapabilitiesGroup, CpeExtLldpPwrType=CpeExtLldpPwrType, cpeExtMainPseEntPhyIndex=cpeExtMainPseEntPhyIndex, CpeExtLldpPwrSrc=CpeExtLldpPwrSrc, cpeExtPortPolicingActionGroup=cpeExtPortPolicingActionGroup, cpeExtPsePortEntPhyIndex=cpeExtPsePortEntPhyIndex, CpeExtLldpPwrClassOrZero=CpeExtLldpPwrClassOrZero, cpeExtPsePortLldpPwrPriority=cpeExtPsePortLldpPwrPriority, cpeExtPsePortPwrConsumption=cpeExtPsePortPwrConsumption, cpeExtPseGrpPwrGroup=cpeExtPseGrpPwrGroup, cpeExtPortPolicingGroup=cpeExtPortPolicingGroup, cpeExtPolicingNotifGroup=cpeExtPolicingNotifGroup, cpeExtPsePortLldpTable=cpeExtPsePortLldpTable, cpeExtPsePortPwrMonitorGroup=cpeExtPsePortPwrMonitorGroup, cpeExtMainPseDescr=cpeExtMainPseDescr, cpeExtMainPsePwrMonitorCapable=cpeExtMainPsePwrMonitorCapable, cpeExtPsePortLldpPwrType=cpeExtPsePortLldpPwrType, cpeExtPsePortPwrAllocated=cpeExtPsePortPwrAllocated, cpeExtPsePortLldpPdPwrPairsOrZero=cpeExtPsePortLldpPdPwrPairsOrZero, cpeExtPsePortEnable=cpeExtPsePortEnable, cpeExtPsePortLldpEntry=cpeExtPsePortLldpEntry, cpeExtPsePortPolicingAction=cpeExtPsePortPolicingAction, cpeExtPowerPriorityEnable=cpeExtPowerPriorityEnable, cpeExtPsePortGroup=cpeExtPsePortGroup, cpeExtPsePortDiscoverMode=cpeExtPsePortDiscoverMode, cpeExtPsePortCapabilities=cpeExtPsePortCapabilities, cpeExtDefaultAllocation=cpeExtDefaultAllocation, cpeExtMainPseEntry=cpeExtMainPseEntry, cpeExtMIBCompliance5=cpeExtMIBCompliance5, cpeExtMIBCompliance2=cpeExtMIBCompliance2, cpeExtPsePortLldpPdPwrSrc=cpeExtPsePortLldpPdPwrSrc)
