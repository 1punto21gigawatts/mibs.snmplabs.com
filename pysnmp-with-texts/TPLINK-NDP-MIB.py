#
# PySNMP MIB module TPLINK-NDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-NDP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:25:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, iso, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, ModuleIdentity, Counter64, TimeTicks, Unsigned32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "iso", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "ModuleIdentity", "Counter64", "TimeTicks", "Unsigned32", "ObjectIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ndpManage, = mibBuilder.importSymbols("TPLINK-CLUSTER-MIB", "ndpManage")
ndpGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 1))
ndpStatus = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndpStatus.setStatus('current')
if mibBuilder.loadTexts: ndpStatus.setDescription('This object indicates the global status of the ndp.')
ndpAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndpAgingTime.setStatus('current')
if mibBuilder.loadTexts: ndpAgingTime.setDescription('This object indicates the period for the switch to keep the NDP packets from the neighbor switch. The minimum value is 5, maximum value is 255.')
ndpHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndpHelloTime.setStatus('current')
if mibBuilder.loadTexts: ndpHelloTime.setDescription('This object indicates the interval time of the switch in second to periodical send out ndp packet. The minimum valus is 5, maximum value is 254.')
ndpPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2), )
if mibBuilder.loadTexts: ndpPortTable.setStatus('current')
if mibBuilder.loadTexts: ndpPortTable.setDescription('A table that contains information about the ndp status of every port.')
ndpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ndpPortEntry.setStatus('current')
if mibBuilder.loadTexts: ndpPortEntry.setDescription('A list of information about the ndp status.')
ndpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ndpPortStatus.setStatus('current')
if mibBuilder.loadTexts: ndpPortStatus.setDescription('This object indicates the ndp status of the port.')
ndpPortRecvPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndpPortRecvPkt.setStatus('current')
if mibBuilder.loadTexts: ndpPortRecvPkt.setDescription('This object indicates the ndp packet that the port have receive.')
ndpPortSendPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndpPortSendPkt.setStatus('current')
if mibBuilder.loadTexts: ndpPortSendPkt.setDescription('This object indicates the ndp packet that the port have send.')
ndpPortErrPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndpPortErrPkt.setStatus('current')
if mibBuilder.loadTexts: ndpPortErrPkt.setDescription('This objcet indicates the error ndp packet that the port have receive.')
ndpPortNeighborNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 33, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ndpPortNeighborNum.setStatus('current')
if mibBuilder.loadTexts: ndpPortNeighborNum.setDescription('This object indicates the number of the neighbor.')
mibBuilder.exportSymbols("TPLINK-NDP-MIB", ndpPortStatus=ndpPortStatus, ndpPortTable=ndpPortTable, ndpHelloTime=ndpHelloTime, ndpPortSendPkt=ndpPortSendPkt, ndpPortNeighborNum=ndpPortNeighborNum, ndpAgingTime=ndpAgingTime, ndpStatus=ndpStatus, ndpPortRecvPkt=ndpPortRecvPkt, ndpPortErrPkt=ndpPortErrPkt, ndpGlobalConfig=ndpGlobalConfig, ndpPortEntry=ndpPortEntry)
