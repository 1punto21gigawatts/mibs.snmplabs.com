#
# PySNMP MIB module JUNIPER-JS-CERT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-JS-CERT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:59:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
jnxJsCertificates, = mibBuilder.importSymbols("JUNIPER-JS-SMI", "jnxJsCertificates")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, Counter32, Counter64, TimeTicks, Gauge32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, IpAddress, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Counter32", "Counter64", "TimeTicks", "Gauge32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "IpAddress", "MibIdentifier", "Unsigned32")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
jnxJsCertificateMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1))
jnxJsCertificateMIB.setRevisions(('2007-04-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jnxJsCertificateMIB.setRevisionsDescriptions(('The MIB has been revised to make the index in the tables jnxJsLoadedLocalCertTable and jnxJsLoadedCaCertTable as IMPLIED',))
if mibBuilder.loadTexts: jnxJsCertificateMIB.setLastUpdated('200704200000Z')
if mibBuilder.loadTexts: jnxJsCertificateMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxJsCertificateMIB.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: jnxJsCertificateMIB.setDescription('This module defines the object that are used to monitor reference and attributes to the certificates.')
jnxJsCertificateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1))
jnxJsLoadedCaCertTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: jnxJsLoadedCaCertTable.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertTable.setDescription('This table exposes the loaded Certification Authority (CA) issued certificates. Certificates are used when establishing a secure connection in the device.')
jnxJsLoadedCaCertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-JS-CERT-MIB", "jnxJsLoadedCaCertName"))
if mibBuilder.loadTexts: jnxJsLoadedCaCertEntry.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertEntry.setDescription('The loaded CA certificate entry. It is indexed by the CA certification name.')
jnxJsLoadedCaCertName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: jnxJsLoadedCaCertName.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertName.setDescription('The loaded CA certificate name. This is unique within the the loaded CA certifcates.')
jnxJsLoadedCaCertSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertSubject.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertSubject.setDescription('The CA certificate subject.')
jnxJsLoadedCaCertExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertExpire.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertExpire.setDescription('The expiration time and date of the CA certificate.')
jnxJsLoadedCaCertIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedCaCertIssuer.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedCaCertIssuer.setDescription('The issuer of the CA certificate.')
jnxJsLoadedLocalCertTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2), )
if mibBuilder.loadTexts: jnxJsLoadedLocalCertTable.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertTable.setDescription('This table exposes the loaded certificates. Certificates are used when establishing a secure connection in the device.')
jnxJsLoadedLocalCertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1), ).setIndexNames((1, "JUNIPER-JS-CERT-MIB", "jnxJsLoadedLocalCertName"))
if mibBuilder.loadTexts: jnxJsLoadedLocalCertEntry.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertEntry.setDescription('Default certificate entry. It is indexed by the certification name.')
jnxJsLoadedLocalCertName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: jnxJsLoadedLocalCertName.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertName.setDescription('The name of the local certificate. The certificate name is unique within the loaded local certificates. ')
jnxJsLoadedLocalCertSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertSubject.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertSubject.setDescription('The certificate subject.')
jnxJsLoadedLocalCertExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertExpire.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertExpire.setDescription('The expiration time and date of the local certificate.')
jnxJsLoadedLocalCertIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 3, 1, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxJsLoadedLocalCertIssuer.setStatus('current')
if mibBuilder.loadTexts: jnxJsLoadedLocalCertIssuer.setDescription('The issuer of the local certificate.')
mibBuilder.exportSymbols("JUNIPER-JS-CERT-MIB", jnxJsLoadedLocalCertEntry=jnxJsLoadedLocalCertEntry, jnxJsLoadedCaCertIssuer=jnxJsLoadedCaCertIssuer, jnxJsLoadedCaCertEntry=jnxJsLoadedCaCertEntry, jnxJsCertificateMIB=jnxJsCertificateMIB, jnxJsLoadedCaCertName=jnxJsLoadedCaCertName, jnxJsLoadedCaCertSubject=jnxJsLoadedCaCertSubject, jnxJsLoadedLocalCertExpire=jnxJsLoadedLocalCertExpire, PYSNMP_MODULE_ID=jnxJsCertificateMIB, jnxJsLoadedLocalCertIssuer=jnxJsLoadedLocalCertIssuer, jnxJsLoadedCaCertTable=jnxJsLoadedCaCertTable, jnxJsCertificateObjects=jnxJsCertificateObjects, jnxJsLoadedLocalCertTable=jnxJsLoadedLocalCertTable, jnxJsLoadedCaCertExpire=jnxJsLoadedCaCertExpire, jnxJsLoadedLocalCertName=jnxJsLoadedLocalCertName, jnxJsLoadedLocalCertSubject=jnxJsLoadedLocalCertSubject)
