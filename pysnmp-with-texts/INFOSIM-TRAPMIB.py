#
# PySNMP MIB module INFOSIM-TRAPMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFOSIM-TRAPMIB
# Produced by pysmi-0.3.4 at Wed May  1 13:53:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, enterprises, Bits, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, Unsigned32, TimeTicks, Counter64, Integer32, MibIdentifier, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "enterprises", "Bits", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "Unsigned32", "TimeTicks", "Counter64", "Integer32", "MibIdentifier", "IpAddress", "Counter32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
infosim = MibIdentifier((1, 3, 6, 1, 4, 1, 9611))
snAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 9611, 1))
snAgentObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9611, 1, 1))
snAgentTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9611, 1, 2))
snAgentEventTable = MibTable((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1), )
if mibBuilder.loadTexts: snAgentEventTable.setStatus('mandatory')
if mibBuilder.loadTexts: snAgentEventTable.setDescription('')
snAgentEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1), ).setIndexNames((0, "INFOSIM-TRAPMIB", "snAgentEventIndex"))
if mibBuilder.loadTexts: snAgentEventEntry.setStatus('mandatory')
if mibBuilder.loadTexts: snAgentEventEntry.setDescription('')
snAgentEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentEventIndex.setStatus('mandatory')
if mibBuilder.loadTexts: snAgentEventIndex.setDescription('')
snMonitorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snMonitorName.setStatus('mandatory')
if mibBuilder.loadTexts: snMonitorName.setDescription('Name of monitor that triggered the event')
snMonitorIP = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snMonitorIP.setStatus('mandatory')
if mibBuilder.loadTexts: snMonitorIP.setDescription('IP address of device that triggered the event')
snEventStateString = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snEventStateString.setStatus('mandatory')
if mibBuilder.loadTexts: snEventStateString.setDescription('Status of the event in texual format (e.g. ok, alarm)')
snEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snEventState.setStatus('mandatory')
if mibBuilder.loadTexts: snEventState.setDescription('Status of the event in numerical format. This can be used for automated processing of the event')
snAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAlarmTime.setStatus('mandatory')
if mibBuilder.loadTexts: snAlarmTime.setDescription('The time at which this event was detected.')
snAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1000, 2000, 3000, 4000, 5000))).clone(namedValues=NamedValues(("informational", 1000), ("marginal", 2000), ("minor", 3000), ("major", 4000), ("critical", 5000)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAlarmLevel.setStatus('mandatory')
if mibBuilder.loadTexts: snAlarmLevel.setDescription('Severity of this event.')
snAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAlarmDescription.setStatus('mandatory')
if mibBuilder.loadTexts: snAlarmDescription.setDescription('A description of the event monitor')
snMonitorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snMonitorId.setStatus('mandatory')
if mibBuilder.loadTexts: snMonitorId.setDescription('Unique id of the event monitor')
snSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snSeverityLevel.setStatus('mandatory')
if mibBuilder.loadTexts: snSeverityLevel.setDescription('Priority sum of this event')
snValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snValue.setStatus('mandatory')
if mibBuilder.loadTexts: snValue.setDescription('Measurement value of this monitor which caused the event')
snValueText = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snValueText.setStatus('mandatory')
if mibBuilder.loadTexts: snValueText.setDescription('Textual information about the value')
snCategory0 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory0.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory0.setDescription('Content of the category 0 field')
snCategory1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory1.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory1.setDescription('Content of the category 1 field')
snCategory2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory2.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory2.setDescription('Content of the category 2 field')
snCategory3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory3.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory3.setDescription('Content of the category 3 field')
snCategory4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory4.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory4.setDescription('Content of the category 4 field')
snCategory5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory5.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory5.setDescription('Content of the category 5 field')
snCategory6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory6.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory6.setDescription('Content of the category 6 field')
snCategory7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory7.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory7.setDescription('Content of the category 7 field')
snCategory8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory8.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory8.setDescription('Content of the category 8 field')
snCategory9 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory9.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory9.setDescription('Content of the category 9 field')
snCategory10 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory10.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory10.setDescription('Content of the category 10 field')
snCategory11 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory11.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory11.setDescription('Content of the category 11 field')
snCategory12 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory12.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory12.setDescription('Content of the category 12 field')
snCategory13 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory13.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory13.setDescription('Content of the category 13 field')
snCategory14 = MibTableColumn((1, 3, 6, 1, 4, 1, 9611, 1, 1, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snCategory14.setStatus('mandatory')
if mibBuilder.loadTexts: snCategory14.setDescription('Content of the category 14 field')
snAgentEvent = NotificationType((1, 3, 6, 1, 4, 1, 9611, 1, 2) + (0,1)).setObjects(("INFOSIM-TRAPMIB", "snMonitorName"), ("INFOSIM-TRAPMIB", "snMonitorIP"), ("INFOSIM-TRAPMIB", "snEventStateString"), ("INFOSIM-TRAPMIB", "snEventState"), ("INFOSIM-TRAPMIB", "snAlarmTime"), ("INFOSIM-TRAPMIB", "snAlarmLevel"), ("INFOSIM-TRAPMIB", "snAlarmDescription"), ("INFOSIM-TRAPMIB", "snMonitorId"), ("INFOSIM-TRAPMIB", "snSeverityLevel"), ("INFOSIM-TRAPMIB", "snValue"), ("INFOSIM-TRAPMIB", "snValueText"), ("INFOSIM-TRAPMIB", "snCategory0"), ("INFOSIM-TRAPMIB", "snCategory1"), ("INFOSIM-TRAPMIB", "snCategory2"), ("INFOSIM-TRAPMIB", "snCategory3"), ("INFOSIM-TRAPMIB", "snCategory4"), ("INFOSIM-TRAPMIB", "snCategory5"), ("INFOSIM-TRAPMIB", "snCategory6"), ("INFOSIM-TRAPMIB", "snCategory7"), ("INFOSIM-TRAPMIB", "snCategory8"), ("INFOSIM-TRAPMIB", "snCategory9"), ("INFOSIM-TRAPMIB", "snCategory10"), ("INFOSIM-TRAPMIB", "snCategory11"), ("INFOSIM-TRAPMIB", "snCategory12"), ("INFOSIM-TRAPMIB", "snCategory13"), ("INFOSIM-TRAPMIB", "snCategory14"))
if mibBuilder.loadTexts: snAgentEvent.setDescription('StableNet created an alarm event')
mibBuilder.exportSymbols("INFOSIM-TRAPMIB", snAgentEventIndex=snAgentEventIndex, snValue=snValue, snSeverityLevel=snSeverityLevel, snAgent=snAgent, snAgentObjects=snAgentObjects, snEventState=snEventState, snMonitorIP=snMonitorIP, snCategory12=snCategory12, snAgentTraps=snAgentTraps, snMonitorName=snMonitorName, snAlarmTime=snAlarmTime, snAlarmLevel=snAlarmLevel, snCategory5=snCategory5, snCategory11=snCategory11, infosim=infosim, snCategory7=snCategory7, snAgentEventEntry=snAgentEventEntry, snCategory6=snCategory6, snCategory2=snCategory2, snEventStateString=snEventStateString, snCategory13=snCategory13, snAgentEventTable=snAgentEventTable, snValueText=snValueText, snCategory0=snCategory0, snAlarmDescription=snAlarmDescription, snCategory14=snCategory14, snCategory1=snCategory1, snCategory9=snCategory9, snCategory10=snCategory10, snCategory8=snCategory8, snCategory3=snCategory3, snCategory4=snCategory4, snAgentEvent=snAgentEvent, snMonitorId=snMonitorId)
