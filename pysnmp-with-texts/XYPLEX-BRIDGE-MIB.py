#
# PySNMP MIB module XYPLEX-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYPLEX-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:46:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, Bits, NotificationType, Counter64, enterprises, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Gauge32, Counter32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "Bits", "NotificationType", "Counter64", "enterprises", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter32", "IpAddress", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xyplex = MibIdentifier((1, 3, 6, 1, 4, 1, 33))
bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5))
brsys = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 1))
brsysName = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brsysName.setStatus('mandatory')
brsysMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysMacAddress.setStatus('mandatory')
brsysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysUpTime.setStatus('mandatory')
brsysLatEnhance = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brsysLatEnhance.setStatus('mandatory')
brsysLatAnnceCompTblSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brsysLatAnnceCompTblSize.setStatus('mandatory')
brsysPcktCompTblSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brsysPcktCompTblSize.setStatus('mandatory')
brsysForwardQueueDisc = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysForwardQueueDisc.setStatus('mandatory')
brsysLocalQueueDisc = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysLocalQueueDisc.setStatus('mandatory')
brsysVitalinkMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: brsysVitalinkMacAddress.setStatus('mandatory')
brsysLatAnnceCompTblUseSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysLatAnnceCompTblUseSize.setStatus('mandatory')
brsysLatAnnceCompTblUseHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysLatAnnceCompTblUseHigh.setStatus('mandatory')
brsysPcktCompTblUseSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysPcktCompTblUseSize.setStatus('mandatory')
brsysPcktCompTblUseHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: brsysPcktCompTblUseHigh.setStatus('mandatory')
stp = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 2))
stpStp = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpStp.setStatus('mandatory')
stpForwardTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpForwardTimer.setStatus('mandatory')
stpHelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpHelloTimer.setStatus('mandatory')
stpMaxAgeTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMaxAgeTimer.setStatus('mandatory')
stpMulticastAddress = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMulticastAddress.setStatus('mandatory')
stpPriority = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpPriority.setStatus('mandatory')
stpTopChngTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpTopChngTimer.setStatus('mandatory')
stpDesigRoot = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigRoot.setStatus('mandatory')
stpDesigRootCost = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigRootCost.setStatus('mandatory')
stpDesigForwardTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigForwardTimer.setStatus('mandatory')
stpDesigHelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigHelloTimer.setStatus('mandatory')
stpDesigMaxAgeTimer = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigMaxAgeTimer.setStatus('mandatory')
stpDesigRootLink = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigRootLink.setStatus('mandatory')
stpDesigRootPriority = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpDesigRootPriority.setStatus('mandatory')
stpTopChngCount = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpTopChngCount.setStatus('mandatory')
stpTopStableTime = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpTopStableTime.setStatus('mandatory')
stpTopState = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stable", 1), ("changing", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpTopState.setStatus('mandatory')
stpNumLinks = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpNumLinks.setStatus('mandatory')
stpLinkTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 2, 19), )
if mibBuilder.loadTexts: stpLinkTbl.setStatus('mandatory')
stpLinkTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1), )
if mibBuilder.loadTexts: stpLinkTblEnt.setStatus('mandatory')
stpLinkID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkID.setStatus('mandatory')
stpLinkMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkMacAddress.setStatus('mandatory')
stpLinkpriority = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpLinkpriority.setStatus('mandatory')
stpLinkPathcost = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpLinkPathcost.setStatus('mandatory')
stpLinkPathcostCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkPathcostCur.setStatus('mandatory')
stpLinkPathcostWeighted = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpLinkPathcostWeighted.setStatus('mandatory')
stpLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("blocked", 2), ("forwarding", 3), ("learning", 4), ("listening", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpLinkState.setStatus('mandatory')
stpLinkDesigRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkDesigRoot.setStatus('mandatory')
stpLinkDesigCost = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkDesigCost.setStatus('mandatory')
stpLinkDesigBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkDesigBridge.setStatus('mandatory')
stpLinkDesigLink = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkDesigLink.setStatus('mandatory')
stpLinkTopChngAck = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 2, 19, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notAcknowledged", 1), ("acknowledged", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpLinkTopChngAck.setStatus('mandatory')
stpMaxForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMaxForwardDelay.setStatus('mandatory')
stpMaxMultiForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpMaxMultiForwardDelay.setStatus('mandatory')
stpEarlyLoopDetection = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stpEarlyLoopDetection.setStatus('mandatory')
stpEarlyLoopCount = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stpEarlyLoopCount.setStatus('mandatory')
fl = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 3))
flFiltering = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flFiltering.setStatus('mandatory')
flTableSize = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flTableSize.setStatus('mandatory')
flDiscardTimeout = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flDiscardTimeout.setStatus('mandatory')
flUseTimeout = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flUseTimeout.setStatus('mandatory')
flSrcNumSourceCur = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flSrcNumSourceCur.setStatus('mandatory')
flSrcNumSourceHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flSrcNumSourceHigh.setStatus('mandatory')
flSrcNumSourceMax = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flSrcNumSourceMax.setStatus('mandatory')
flSrcFilterTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 3, 8), )
if mibBuilder.loadTexts: flSrcFilterTbl.setStatus('mandatory')
flSrcFilterTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 3, 8, 1), )
if mibBuilder.loadTexts: flSrcFilterTblEnt.setStatus('mandatory')
flSrcEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flSrcEntID.setStatus('mandatory')
flSrcEntMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 8, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flSrcEntMacAddress.setStatus('mandatory')
flSrcEntForwardFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("forward", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flSrcEntForwardFlag.setStatus('mandatory')
flSrcEntUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flSrcEntUseCount.setStatus('mandatory')
flDstInactiveNumCur = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstInactiveNumCur.setStatus('mandatory')
flDstInactiveNumHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstInactiveNumHigh.setStatus('mandatory')
flDstInactiveNumMax = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstInactiveNumMax.setStatus('mandatory')
flDstLearnedNumCur = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstLearnedNumCur.setStatus('mandatory')
flDstLearnedNumHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstLearnedNumHigh.setStatus('mandatory')
flDstLearnedNumMax = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstLearnedNumMax.setStatus('mandatory')
flDstLearnedNumErrors = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstLearnedNumErrors.setStatus('mandatory')
flDstStaticNumCur = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstStaticNumCur.setStatus('mandatory')
flDstStaticNumHigh = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstStaticNumHigh.setStatus('mandatory')
flDstStaticNumMax = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 3, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstStaticNumMax.setStatus('mandatory')
flDstFilterTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 3, 19), )
if mibBuilder.loadTexts: flDstFilterTbl.setStatus('mandatory')
flDstFilterTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1), )
if mibBuilder.loadTexts: flDstFilterTblEnt.setStatus('mandatory')
flDstEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstEntID.setStatus('mandatory')
flDstEntMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flDstEntMacAddress.setStatus('mandatory')
flDstEntLinkMap = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flDstEntLinkMap.setStatus('mandatory')
flDstEntStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("learned", 2), ("inactive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flDstEntStatus.setStatus('mandatory')
flDstEntTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flDstEntTtl.setStatus('mandatory')
flDstEntUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flDstEntUseCount.setStatus('mandatory')
flLinkTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 3, 20), )
if mibBuilder.loadTexts: flLinkTbl.setStatus('mandatory')
flLinkTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 3, 20, 1), )
if mibBuilder.loadTexts: flLinkTblEnt.setStatus('mandatory')
flLinkEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flLinkEntID.setStatus('mandatory')
flLinkEntLearning = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 3, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flLinkEntLearning.setStatus('mandatory')
prtcl = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 4))
prtclProtocol = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclProtocol.setStatus('mandatory')
prtclNumCur = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prtclNumCur.setStatus('mandatory')
prtclNumMax = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 4, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prtclNumMax.setStatus('mandatory')
prtclTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 4, 4), )
if mibBuilder.loadTexts: prtclTbl.setStatus('mandatory')
prtclTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1), )
if mibBuilder.loadTexts: prtclTblEnt.setStatus('mandatory')
prtclEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prtclEntID.setStatus('mandatory')
prtclEntProtocolID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclEntProtocolID.setStatus('mandatory')
prtclEntMac = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("non-Mac", 1), ("mac", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclEntMac.setStatus('mandatory')
prtclEntName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclEntName.setStatus('mandatory')
prtclEntPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 101))).clone(namedValues=NamedValues(("low", 1), ("medium", 3), ("high", 5), ("discard", 101)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclEntPriority.setStatus('mandatory')
prtclEntUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 4, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prtclEntUseCount.setStatus('mandatory')
prtclDefaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 101))).clone(namedValues=NamedValues(("low", 1), ("medium", 3), ("high", 5), ("discard", 101)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prtclDefaultPriority.setStatus('mandatory')
prtclDefaultUseCount = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prtclDefaultUseCount.setStatus('mandatory')
lks = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 5))
lksNum = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksNum.setStatus('mandatory')
lksTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 5, 2), )
if mibBuilder.loadTexts: lksTbl.setStatus('mandatory')
lksTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1), )
if mibBuilder.loadTexts: lksTblEnt.setStatus('mandatory')
lksEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntID.setStatus('mandatory')
lksEntStateConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("standby", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lksEntStateConfig.setStatus('mandatory')
lksEntStateActive = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(129, 130, 132, 135, 133, 136, 131, 134, 136, 138, 139, 140))).clone(namedValues=NamedValues(("initWaitDSR", 129), ("initWait", 130), ("down1", 132), ("down", 135), ("purging1", 133), ("purging", 136), ("running1", 131), ("running", 134), ("loop", 136), ("testSend", 138), ("testReceive", 139), ("testLoop", 140)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntStateActive.setStatus('mandatory')
lksEntType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("wan", 3), ("lan", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntType.setStatus('mandatory')
lksEntTypeSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTypeSpecific.setStatus('mandatory')
lksEntName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lksEntName.setStatus('mandatory')
lksEntUtilizationCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntUtilizationCur.setStatus('mandatory')
lksEntUtilizationHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntUtilizationHigh.setStatus('mandatory')
lksEntUtilizationAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntUtilizationAvg.setStatus('mandatory')
lksEntForwardingCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntForwardingCur.setStatus('mandatory')
lksEntForwardingHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntForwardingHigh.setStatus('mandatory')
lksEntForwardingAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntForwardingAvg.setStatus('mandatory')
lksEntFilteringCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntFilteringCur.setStatus('mandatory')
lksEntFilteringHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntFilteringHigh.setStatus('mandatory')
lksEntFilteringAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntFilteringAvg.setStatus('mandatory')
lksEntOutputQCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntOutputQCur.setStatus('mandatory')
lksEntOutputQHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntOutputQHigh.setStatus('mandatory')
lksEntOutputQTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntOutputQTotal.setStatus('mandatory')
lksEntTransmitLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTransmitLinkSpeed.setStatus('mandatory')
lksEntReceiveLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntReceiveLinkSpeed.setStatus('mandatory')
lksEntTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21))
lksEntTrafficPacketsIn = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficPacketsIn.setStatus('mandatory')
lksEntTrafficPacketsOut = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficPacketsOut.setStatus('mandatory')
lksEntTrafficMulticastsIn = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficMulticastsIn.setStatus('mandatory')
lksEntTrafficMulticastsOut = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficMulticastsOut.setStatus('mandatory')
lksEntTrafficUnicastsIn = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficUnicastsIn.setStatus('mandatory')
lksEntTrafficUnicastsOut = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficUnicastsOut.setStatus('mandatory')
lksEntTrafficStpIn = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficStpIn.setStatus('mandatory')
lksEntTrafficStpOut = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficStpOut.setStatus('mandatory')
lksEntTrafficBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficBytesIn.setStatus('mandatory')
lksEntTrafficBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 21, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntTrafficBytesOut.setStatus('mandatory')
lksEntDiscards = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22))
lksEntDiscardCrcError = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardCrcError.setStatus('mandatory')
lksEntDiscardFiltering = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardFiltering.setStatus('mandatory')
lksEntDiscardnoBuffers = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardnoBuffers.setStatus('mandatory')
lksEntDiscardPriority = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardPriority.setStatus('mandatory')
lksEntDiscardLatGroupAnnce = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardLatGroupAnnce.setStatus('mandatory')
lksEntDiscardLostBuffers = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardLostBuffers.setStatus('mandatory')
lksEntDiscardOutputQueueFull = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardOutputQueueFull.setStatus('mandatory')
lksEntDiscardDelayExceeded = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 5, 2, 1, 22, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lksEntDiscardDelayExceeded.setStatus('mandatory')
wan = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 6))
wanNullClock = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanNullClock.setStatus('mandatory')
wanNum = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanNum.setStatus('mandatory')
wanTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 6, 3), )
if mibBuilder.loadTexts: wanTbl.setStatus('mandatory')
wanTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1), )
if mibBuilder.loadTexts: wanTblEnt.setStatus('mandatory')
wanEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntID.setStatus('mandatory')
wanEntCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 256))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("auto", 256)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntCompression.setStatus('mandatory')
wanEntDsrTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntDsrTimeout.setStatus('mandatory')
wanEntLocalPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntLocalPhone.setStatus('mandatory')
wanEntDialPhoneNumMax = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDialPhoneNumMax.setStatus('mandatory')
wanEntDialPhoneTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 6), )
if mibBuilder.loadTexts: wanEntDialPhoneTbl.setStatus('mandatory')
wanEntDialPhoneEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 6, 1), )
if mibBuilder.loadTexts: wanEntDialPhoneEnt.setStatus('mandatory')
wanEntDialPhoneEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDialPhoneEntID.setStatus('mandatory')
wanEntDialPhoneEntPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntDialPhoneEntPhone.setStatus('mandatory')
wanEntGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntGroups.setStatus('mandatory')
wanEntModemType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dedicated", 1), ("dialUp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntModemType.setStatus('mandatory')
wanEntNullClock = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntNullClock.setStatus('mandatory')
wanEntPathcostWeighted = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEntPathcostWeighted.setStatus('mandatory')
wanEntErrorRateCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntErrorRateCur.setStatus('mandatory')
wanEntErrorRateHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntErrorRateHigh.setStatus('mandatory')
wanEntErrorRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntErrorRateAvg.setStatus('mandatory')
wanEntLinkDownCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntLinkDownCur.setStatus('mandatory')
wanEntLinkDownHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntLinkDownHigh.setStatus('mandatory')
wanEntLinkDownTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntLinkDownTotal.setStatus('mandatory')
wanEntLinkDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntLinkDownCount.setStatus('mandatory')
wanEntCableType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cable422", 1), ("cable423", 2), ("cableV35", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCableType.setStatus('mandatory')
wanEntCtsCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("observed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCtsCur.setStatus('mandatory')
wanEntRtsCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("asserted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntRtsCur.setStatus('mandatory')
wanEntDcdCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("observed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDcdCur.setStatus('mandatory')
wanEntDsrCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("observed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDsrCur.setStatus('mandatory')
wanEntDtrCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("asserted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDtrCur.setStatus('mandatory')
wanEntRingCur = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("observed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntRingCur.setStatus('mandatory')
wanEntCtsChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCtsChanges.setStatus('mandatory')
wanEntRtsChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntRtsChanges.setStatus('mandatory')
wanEntDcdChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDcdChanges.setStatus('mandatory')
wanEntDsrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDsrChanges.setStatus('mandatory')
wanEntDtrChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntDtrChanges.setStatus('mandatory')
wanEntRingChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntRingChanges.setStatus('mandatory')
wanEntCompNum = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompNum.setStatus('mandatory')
wanEntCompressionTbl = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32), )
if mibBuilder.loadTexts: wanEntCompressionTbl.setStatus('mandatory')
wanEntCompEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1), )
if mibBuilder.loadTexts: wanEntCompEnt.setStatus('mandatory')
wanEntCompEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompEntID.setStatus('mandatory')
wanEntCompEntDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompEntDescription.setStatus('mandatory')
wanEntCompEntCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompEntCurrent.setStatus('mandatory')
wanEntCompEntHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompEntHigh.setStatus('mandatory')
wanEntCompEntAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 32, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompEntAverage.setStatus('mandatory')
wanEntCompressionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 6, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanEntCompressionStatus.setStatus('mandatory')
wanVitalinkCompatibility = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanVitalinkCompatibility.setStatus('mandatory')
lan = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 5, 7))
lanNum = MibScalar((1, 3, 6, 1, 4, 1, 33, 5, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanNum.setStatus('mandatory')
lanTbl = MibTable((1, 3, 6, 1, 4, 1, 33, 5, 7, 2), )
if mibBuilder.loadTexts: lanTbl.setStatus('mandatory')
lanTblEnt = MibTableRow((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1), )
if mibBuilder.loadTexts: lanTblEnt.setStatus('mandatory')
lanEntID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntID.setStatus('mandatory')
lanEntShutdownThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntShutdownThreshold.setStatus('mandatory')
lanEntFramingError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntFramingError.setStatus('mandatory')
lanEntLostPacketsError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntLostPacketsError.setStatus('mandatory')
lanEntMemoryError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntMemoryError.setStatus('mandatory')
lanEntOverflowError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntOverflowError.setStatus('mandatory')
lanEntPacketInTooLongError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntPacketInTooLongError.setStatus('mandatory')
lanEntCarrierLossError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntCarrierLossError.setStatus('mandatory')
lanEntHeartbeatFailureError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntHeartbeatFailureError.setStatus('mandatory')
lanEntLateCollisionError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntLateCollisionError.setStatus('mandatory')
lanEntPacketOutTooLongError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntPacketOutTooLongError.setStatus('mandatory')
lanEntRetryExceedError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 5, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lanEntRetryExceedError.setStatus('mandatory')
mibBuilder.exportSymbols("XYPLEX-BRIDGE-MIB", lksEntOutputQHigh=lksEntOutputQHigh, flDstEntID=flDstEntID, wanEntDialPhoneEntID=wanEntDialPhoneEntID, wanEntCompNum=wanEntCompNum, lanTblEnt=lanTblEnt, bridge=bridge, brsys=brsys, wanEntCompressionTbl=wanEntCompressionTbl, flSrcEntForwardFlag=flSrcEntForwardFlag, lanEntHeartbeatFailureError=lanEntHeartbeatFailureError, stpLinkPathcostCur=stpLinkPathcostCur, lksEntTrafficUnicastsIn=lksEntTrafficUnicastsIn, stpMulticastAddress=stpMulticastAddress, lksEntStateConfig=lksEntStateConfig, lksEntFilteringAvg=lksEntFilteringAvg, flDstStaticNumHigh=flDstStaticNumHigh, prtclDefaultPriority=prtclDefaultPriority, lanEntPacketOutTooLongError=lanEntPacketOutTooLongError, lksEntUtilizationAvg=lksEntUtilizationAvg, lksTblEnt=lksTblEnt, lksEntTransmitLinkSpeed=lksEntTransmitLinkSpeed, brsysVitalinkMacAddress=brsysVitalinkMacAddress, flDstEntUseCount=flDstEntUseCount, stpNumLinks=stpNumLinks, flFiltering=flFiltering, stpDesigRootCost=stpDesigRootCost, wanEntDialPhoneTbl=wanEntDialPhoneTbl, flDstLearnedNumCur=flDstLearnedNumCur, lksNum=lksNum, stpLinkPathcost=stpLinkPathcost, lksEntOutputQCur=lksEntOutputQCur, lksEntDiscardFiltering=lksEntDiscardFiltering, wanEntLinkDownCount=wanEntLinkDownCount, stpLinkDesigBridge=stpLinkDesigBridge, flDstInactiveNumMax=flDstInactiveNumMax, lksEntDiscardCrcError=lksEntDiscardCrcError, xyplex=xyplex, wanEntDialPhoneNumMax=wanEntDialPhoneNumMax, stpTopChngCount=stpTopChngCount, stpLinkpriority=stpLinkpriority, prtclEntName=prtclEntName, wanEntCompEnt=wanEntCompEnt, stpLinkDesigLink=stpLinkDesigLink, flDstStaticNumMax=flDstStaticNumMax, stpLinkMacAddress=stpLinkMacAddress, wanEntCableType=wanEntCableType, lanEntLostPacketsError=lanEntLostPacketsError, flSrcEntUseCount=flSrcEntUseCount, flSrcEntID=flSrcEntID, brsysMacAddress=brsysMacAddress, stpForwardTimer=stpForwardTimer, stpLinkDesigRoot=stpLinkDesigRoot, lanEntOverflowError=lanEntOverflowError, brsysLocalQueueDisc=brsysLocalQueueDisc, lksEntOutputQTotal=lksEntOutputQTotal, stpPriority=stpPriority, lksEntDiscardDelayExceeded=lksEntDiscardDelayExceeded, wanEntCtsCur=wanEntCtsCur, wanEntDsrCur=wanEntDsrCur, brsysPcktCompTblSize=brsysPcktCompTblSize, lanEntLateCollisionError=lanEntLateCollisionError, flSrcNumSourceHigh=flSrcNumSourceHigh, lan=lan, lksEntTrafficPacketsOut=lksEntTrafficPacketsOut, wanEntRtsChanges=wanEntRtsChanges, stpDesigRootPriority=stpDesigRootPriority, flLinkEntID=flLinkEntID, lksEntDiscardnoBuffers=lksEntDiscardnoBuffers, wanEntDsrChanges=wanEntDsrChanges, flDstLearnedNumHigh=flDstLearnedNumHigh, flSrcFilterTbl=flSrcFilterTbl, stpMaxAgeTimer=stpMaxAgeTimer, flDstStaticNumCur=flDstStaticNumCur, lksEntType=lksEntType, lksEntForwardingHigh=lksEntForwardingHigh, flTableSize=flTableSize, lksEntDiscardLostBuffers=lksEntDiscardLostBuffers, stpDesigRootLink=stpDesigRootLink, lksEntTrafficBytesIn=lksEntTrafficBytesIn, wanEntNullClock=wanEntNullClock, wanEntCompEntID=wanEntCompEntID, lksEntReceiveLinkSpeed=lksEntReceiveLinkSpeed, wanEntLinkDownHigh=wanEntLinkDownHigh, lksEntID=lksEntID, flDiscardTimeout=flDiscardTimeout, wanEntCtsChanges=wanEntCtsChanges, stpEarlyLoopCount=stpEarlyLoopCount, flLinkTbl=flLinkTbl, wanEntRingCur=wanEntRingCur, wanEntCompressionStatus=wanEntCompressionStatus, wanEntDialPhoneEnt=wanEntDialPhoneEnt, brsysLatAnnceCompTblUseHigh=brsysLatAnnceCompTblUseHigh, wanVitalinkCompatibility=wanVitalinkCompatibility, lksEntUtilizationHigh=lksEntUtilizationHigh, stpLinkDesigCost=stpLinkDesigCost, stpDesigRoot=stpDesigRoot, brsysLatEnhance=brsysLatEnhance, wanEntDcdChanges=wanEntDcdChanges, wan=wan, lksEntDiscardLatGroupAnnce=lksEntDiscardLatGroupAnnce, stp=stp, lksEntForwardingCur=lksEntForwardingCur, brsysLatAnnceCompTblSize=brsysLatAnnceCompTblSize, wanTblEnt=wanTblEnt, lanTbl=lanTbl, flSrcFilterTblEnt=flSrcFilterTblEnt, lksEntTrafficUnicastsOut=lksEntTrafficUnicastsOut, lksEntFilteringHigh=lksEntFilteringHigh, lksEntDiscardPriority=lksEntDiscardPriority, wanNullClock=wanNullClock, flDstInactiveNumHigh=flDstInactiveNumHigh, wanEntErrorRateHigh=wanEntErrorRateHigh, lanEntShutdownThreshold=lanEntShutdownThreshold, flDstEntLinkMap=flDstEntLinkMap, brsysLatAnnceCompTblUseSize=brsysLatAnnceCompTblUseSize, wanEntDialPhoneEntPhone=wanEntDialPhoneEntPhone, wanEntCompEntCurrent=wanEntCompEntCurrent, lksEntTypeSpecific=lksEntTypeSpecific, wanEntCompEntDescription=wanEntCompEntDescription, wanEntCompEntAverage=wanEntCompEntAverage, prtclEntID=prtclEntID, prtclEntUseCount=prtclEntUseCount, lksEntTrafficBytesOut=lksEntTrafficBytesOut, lanEntRetryExceedError=lanEntRetryExceedError, wanTbl=wanTbl, prtclEntMac=prtclEntMac, wanEntGroups=wanEntGroups, wanEntCompEntHigh=wanEntCompEntHigh, lksEntTrafficPacketsIn=lksEntTrafficPacketsIn, lksEntFilteringCur=lksEntFilteringCur, wanEntErrorRateAvg=wanEntErrorRateAvg, wanEntLinkDownCur=wanEntLinkDownCur, brsysPcktCompTblUseHigh=brsysPcktCompTblUseHigh, lksEntName=lksEntName, wanEntDcdCur=wanEntDcdCur, brsysForwardQueueDisc=brsysForwardQueueDisc, lksEntTrafficMulticastsOut=lksEntTrafficMulticastsOut, wanEntLinkDownTotal=wanEntLinkDownTotal, stpLinkTblEnt=stpLinkTblEnt, prtclEntPriority=prtclEntPriority, wanEntErrorRateCur=wanEntErrorRateCur, flUseTimeout=flUseTimeout, flLinkEntLearning=flLinkEntLearning, flDstFilterTblEnt=flDstFilterTblEnt, lksEntStateActive=lksEntStateActive, flDstLearnedNumMax=flDstLearnedNumMax, wanEntCompression=wanEntCompression, stpTopStableTime=stpTopStableTime, wanEntDtrChanges=wanEntDtrChanges, stpLinkID=stpLinkID, wanEntLocalPhone=wanEntLocalPhone, stpDesigMaxAgeTimer=stpDesigMaxAgeTimer, flSrcNumSourceMax=flSrcNumSourceMax, flDstInactiveNumCur=flDstInactiveNumCur, lksEntDiscardOutputQueueFull=lksEntDiscardOutputQueueFull, lanEntID=lanEntID, lksTbl=lksTbl, brsysName=brsysName, flSrcNumSourceCur=flSrcNumSourceCur, prtclProtocol=prtclProtocol, lksEntUtilizationCur=lksEntUtilizationCur, stpLinkPathcostWeighted=stpLinkPathcostWeighted, flDstFilterTbl=flDstFilterTbl, stpHelloTimer=stpHelloTimer, prtclNumCur=prtclNumCur, stpDesigForwardTimer=stpDesigForwardTimer, flDstEntStatus=flDstEntStatus, lksEntForwardingAvg=lksEntForwardingAvg, wanEntModemType=wanEntModemType, wanEntRingChanges=wanEntRingChanges, lanEntFramingError=lanEntFramingError, lanEntMemoryError=lanEntMemoryError, lksEntTraffic=lksEntTraffic, stpDesigHelloTimer=stpDesigHelloTimer, stpStp=stpStp, lanEntPacketInTooLongError=lanEntPacketInTooLongError, prtclTbl=prtclTbl, stpTopState=stpTopState, stpMaxForwardDelay=stpMaxForwardDelay, flSrcEntMacAddress=flSrcEntMacAddress, wanEntDsrTimeout=wanEntDsrTimeout, lanNum=lanNum, lksEntTrafficStpIn=lksEntTrafficStpIn, lks=lks, wanEntID=wanEntID, stpEarlyLoopDetection=stpEarlyLoopDetection, stpLinkState=stpLinkState, stpMaxMultiForwardDelay=stpMaxMultiForwardDelay, fl=fl, lksEntTrafficStpOut=lksEntTrafficStpOut, lksEntTrafficMulticastsIn=lksEntTrafficMulticastsIn, stpLinkTopChngAck=stpLinkTopChngAck, flLinkTblEnt=flLinkTblEnt, wanNum=wanNum, prtclNumMax=prtclNumMax, brsysPcktCompTblUseSize=brsysPcktCompTblUseSize, brsysUpTime=brsysUpTime, prtcl=prtcl, prtclDefaultUseCount=prtclDefaultUseCount, lksEntDiscards=lksEntDiscards, lanEntCarrierLossError=lanEntCarrierLossError, prtclEntProtocolID=prtclEntProtocolID, wanEntPathcostWeighted=wanEntPathcostWeighted, stpLinkTbl=stpLinkTbl, prtclTblEnt=prtclTblEnt, wanEntDtrCur=wanEntDtrCur, stpTopChngTimer=stpTopChngTimer, flDstEntTtl=flDstEntTtl, flDstLearnedNumErrors=flDstLearnedNumErrors, wanEntRtsCur=wanEntRtsCur, flDstEntMacAddress=flDstEntMacAddress)
