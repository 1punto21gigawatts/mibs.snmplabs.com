#
# PySNMP MIB module ASCEND-WATCHDOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-WATCHDOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:29:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
slots, = mibBuilder.importSymbols("ASCEND-MIB", "slots")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, ModuleIdentity, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, ObjectIdentity, MibIdentifier, Gauge32, Bits, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "ModuleIdentity", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "ObjectIdentity", "MibIdentifier", "Gauge32", "Bits", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
watchdog = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 2, 7))
watchdogCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogCount.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogCount.setDescription('The number of entries in the watchdogTable')
watchdogTable = MibTable((1, 3, 6, 1, 4, 1, 529, 2, 7, 2), )
if mibBuilder.loadTexts: watchdogTable.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogTable.setDescription('The watchdog table')
watchdogTrapState = MibScalar((1, 3, 6, 1, 4, 1, 529, 2, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: watchdogTrapState.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogTrapState.setDescription('This variable indicates whether the system produces the watchdogWarningTrap trap.')
watchdogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1), ).setIndexNames((0, "ASCEND-WATCHDOG-MIB", "watchdogIndex"))
if mibBuilder.loadTexts: watchdogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogEntry.setDescription('An entry in the watchdog table')
watchdogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogIndex.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogIndex.setDescription('The index of the watchdog entry.')
watchdogName = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogName.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogName.setDescription('A descriptive name for the watchdog')
watchdogID = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("thermal", 2), ("fan", 3), ("fantray", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogID.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogID.setDescription("This defines what type of watchdog relates to this entry. The possible values are: (1) 'other' for a sensor other than the types listed, (2) 'thermal' for a temperature sensor, (3) 'fan' for a fan speed sensor, (4) 'fantray' for a sensor associated with a fantray assembly")
watchdogState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("operational", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogState.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogState.setDescription("The state of the watchdog. If the value is 'other' then the watchdog does not support state information.")
watchdogReading = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogReading.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogReading.setDescription('A measurement reading of the watchdog. The unit of measurment is defined by watchdogReadingUnits. A -1 value indicates a reading of the watchdog is not supported.')
watchdogLastViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogLastViolation.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogLastViolation.setDescription('The value of sysUpTime at the time the last watchdog violation occurred (last violation trap sent).')
watchdogLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogLocation.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogLocation.setDescription('The location of the watchdog')
watchdogUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogUnit.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogUnit.setDescription('The unit number of the watchdog entry. This number is an unique identifier assigned to each watchdog of a particular type.')
watchdogReadingUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("celsius", 2), ("rpm", 3), ("noReadingSupported", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogReadingUnits.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogReadingUnits.setDescription('The measurement units of a reading from the watchdog')
watchdogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 2, 7, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: watchdogThreshold.setStatus('mandatory')
if mibBuilder.loadTexts: watchdogThreshold.setDescription('The reading level for the watchdog that will trigger a trap')
mibBuilder.exportSymbols("ASCEND-WATCHDOG-MIB", watchdogID=watchdogID, watchdogUnit=watchdogUnit, watchdog=watchdog, watchdogReadingUnits=watchdogReadingUnits, watchdogCount=watchdogCount, watchdogIndex=watchdogIndex, watchdogTrapState=watchdogTrapState, watchdogTable=watchdogTable, watchdogState=watchdogState, watchdogName=watchdogName, watchdogEntry=watchdogEntry, watchdogLastViolation=watchdogLastViolation, watchdogReading=watchdogReading, watchdogLocation=watchdogLocation, watchdogThreshold=watchdogThreshold)
