#
# PySNMP MIB module ENTERASYS-OSPF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-OSPF-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
AreaID, ospfVirtNbrEntry, ospfIfEntry, ospfVirtIfEntry, ospfAreaEntry, ospfLocalLsdbEntry, ospfNbrEntry, Status = mibBuilder.importSymbols("OSPF-MIB", "AreaID", "ospfVirtNbrEntry", "ospfIfEntry", "ospfVirtIfEntry", "ospfAreaEntry", "ospfLocalLsdbEntry", "ospfNbrEntry", "Status")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, NotificationType, Bits, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, TimeTicks, ObjectIdentity, Counter32, ModuleIdentity, Counter64, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "NotificationType", "Bits", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "TimeTicks", "ObjectIdentity", "Counter32", "ModuleIdentity", "Counter64", "Integer32", "Bits")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
etsysOspfExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65))
etsysOspfExtMIB.setRevisions(('2009-02-27 19:34',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysOspfExtMIB.setRevisionsDescriptions(('The initial version of this MIB module',))
if mibBuilder.loadTexts: etsysOspfExtMIB.setLastUpdated('200902271934Z')
if mibBuilder.loadTexts: etsysOspfExtMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysOspfExtMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysOspfExtMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID pertaining to the OSPF configuration. This MIB was designed to be used in conjunction with the OSPF-MIB (RFC 4750) for configuring the OSPF protocol parameters.')
class EtsysOspfOperStatus(TextualConvention, Integer32):
    description = 'The current operational state of the OSPF Protocol. operStatusUp : Active state for the protocol. operStatusDown : Inactive state for the protocol. operStatusGoingUp : In this state, OSPF is in the process of acquiring resources it needs to operate. operStatusGoingDown: In this state, OSPF is in the process of releasing resources and cleaning up. operStatusActFailed: This state indicates that activiation failed.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5))

etsysOspfExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1))
etsysOspfExtGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1))
etsysOspfExtTables = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2))
etsysOspfExtOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 1), EtsysOspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtOperStatus.setDescription("The current operational state of the OSPF Protocol. Changing the state of the ospfAdminStat object effects the state of this object. If ospfAdminStat is set to 'disabled', this object's status is changed to 'operStatusGoingDown'. Once all of the resources have been reclaimed, the status is changed to 'operStatusDown'. If ospfAdminStat is set to 'enabled', this object's status is changed to 'operStatusGoingUp'. When the OSPF protocol has finished the activation process, the state of this object changes to 'operStatusUp'. If there are problems activating the OSPF protocol, the status becomes 'operStatusActFailed'.")
etsysOspfExtCalcMaxDelay = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 2), Unsigned32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcMaxDelay.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcMaxDelay.setDescription('The maximum delay before the Routing Table is recalculated following a change to the Link State Database. (Recalculation is delayed to reduce the frequency of recalculations of the Routing Table). This parameter has units of milliseconds. A value of 0 indicates that a routing calculation will immediately follow an update to the database.')
etsysOspfExtCalcThrshUpdStart = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcThrshUpdStart.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcThrshUpdStart.setDescription('This parameter can be used to override the etsysOspfExtCalcMaxDelay when the number of updates to the Link State Database reaches a threshold value. -1 Indicates that this threshold is infinite, and hence the timing of a routing calculation is determined solely by etsysOspfExtCalcMaxDelay. 0 Indicates that a routing calculation will immediately follow an update to the database. 1..2147483647 Specifies the threshold number of updates that can be made to the Link State Database such that any subsequent update to the database causes a full routing calculation to start immediately.')
etsysOspfExtCalcThrshUpdRestart = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcThrshUpdRestart.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcThrshUpdRestart.setDescription('This parameter can be used to interrupt a full routing calculation when the number of pending updates to the Link State Database has reached a threshold value. -1 Indicates that this threshold is infinite, and hence no number of pending updates to the database will cause a routing calculation to be interrupted. 0 Indicates that an update to the Link State Database will cause any current routing calculation to be interrupted and a new one to start. 1..2147483647 Specifies the threshold number of updates that can be made to the Link State Database such that any subsequent update to the database causes the current routing calculation to be interrupted, and a new calculation to start using an up to date Link State Database.')
etsysOspfExtCalcThrshIncUpdates = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), )).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcThrshIncUpdates.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcThrshIncUpdates.setDescription("This parameter can be used to optimize the performance of the Routing Calculator in the situation where updates that are pending to the Link State Database solely concern inter-area or AS-external routes. In this case, the Routing Table can be updated either by one full recalculation, or by multiple incremental recalculations. This parameter is used to configure the threshold value for which recalculation by multiple incremental updates is no longer quicker than a single full recalculation. -1 Indicates that this threshold is infinite, and incremental recalculations are always done in preference to a full recalculation. 0 Indicates that incremental updates will never be used. 1..2147483647 (n) Indicates that a full recalculation will be performed whenever there are more than 'n' updates to make to inter-area or AS-external routes.")
etsysOspfExtCalcThrshIncSpfUpd = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcThrshIncSpfUpd.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcThrshIncSpfUpd.setDescription("This parameter can be used to optimize the performance of the Routing Calculator in the situation where updates that are pending to the Link State Database concern intra-area routes. In this case, the Routing Table can be updated either by one full recalculation, or by multiple incremental SPF recalculations. This parameter is used to configure the threshold value for which recalculation by multiple incremental SPF updates is no longer quicker than a single full recalculation. -1 Indicates that this threshold is infinite, and incremental SPF recalculations are always done in preference to a full recalculation. 0 Indicates that incremental SPF updates will never be used. 1..2147483647 (n) Indicates that a full recalculation will be performed whenever there are more than 'n' updates to make to intra-area routes.")
etsysOspfExtCalcPauseFreq = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), )).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCalcPauseFreq.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCalcPauseFreq.setDescription('This value determines how regularly a Routing Calculation is paused. It is measured in points. The points scale roughly maps to a time scale, so that the larger this value is, the longer the Routing Calculation runs before pausing. -1 Indicates that the Routing Calculation is never paused. 0 Indicates that the routing calculation is paused after every calculation step.')
etsysOspfExtRteMaxEqCostPaths = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtRteMaxEqCostPaths.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtRteMaxEqCostPaths.setDescription('The maximum number of equal cost paths that are stored for each destination in the Routing Table.')
etsysOspfExtCheckAge = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 9), Unsigned32().clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtCheckAge.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCheckAge.setDescription('This value determines how often the checksums of LSAs in the Link State Database are checked. If 0, no checksums in the database are checked.')
etsysOspfExtExtLsaRfshIntvl = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtExtLsaRfshIntvl.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtExtLsaRfshIntvl.setDescription('Self-originated LSAs are periodically reflooded into the routing domain to add to the robustness of the OSPF protocol. This value determines the interval between refreshes of type-5 and type-11 AS-external LSAs, and is defaulted to the OSPF standard default of 1800 seconds (30 minutes).')
etsysOspfExtExternOpLsaCount = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtExternOpLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtExternOpLsaCount.setDescription('The number of type-11 LSAs in the external database.')
etsysOspfExtExternOpLsaCksumSum = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtExternOpLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtExternOpLsaCksumSum.setDescription('The 32 bit sum of LS checksums of all type-11 LSAs in the external Link State Database.')
etsysOspfExtNumUpdPending = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNumUpdPending.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNumUpdPending.setDescription('The number of updates that are pending addition to the Link State Database.')
etsysOspfExtNumUpdMerged = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNumUpdMerged.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNumUpdMerged.setDescription('The number of updates that have been merged into the Link State Database since the last routing calculation.')
etsysOspfExtNumCksumsPending = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNumCksumsPending.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNumCksumsPending.setDescription('The number of LSAs in the Link State Database which are now due to have their checksum checked.')
etsysOspfExtDoGraceHitless = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtDoGraceHitless.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtDoGraceHitless.setDescription("Indicates whether OSPF should perform hitless restart using grace LSAs. If OSPF is being deactivated, grace LSAs are sent out to inform neighboring routers that we wish to undergo a hitless restart. If OSPF is being activated, we will attempt to restart hitlessly, then set this field to 'false'. Therefore this field needs to be explicitly set to 'true' each time planned hitless restart is required. This object is persistent and when written the entity SHOULD save the change to non-volatile storage.")
etsysOspfExtDoGraceUnplannedHitless = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtDoGraceUnplannedHitless.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtDoGraceUnplannedHitless.setDescription("Indicates whether OSPF should perform an unplanned hitless restart using grace LSAs. Note that etsysOspfExtDoGraceHitless has a higher priority than this object. Therefore if both etsysOspfExtDoGraceHitless and this object are both set to 'true' on activation, OSPF will assume it is undergoing a planned hitless restart. If only this object is 'true', then OSPF will attempt an unplanned hitless restart, and send out grace LSAs on activation.")
etsysOspfExtHitlessGracePeriod = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1800)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysOspfExtHitlessGracePeriod.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtHitlessGracePeriod.setDescription('If OSPF is attempting to undergo a hitless restart, this field specifies the length of grace period that should be requested from adjacent routers in grace LSAs. After this timer period has passed, an RTM will delete routes from this RPM from its routing table, and so hitless restart will have failed. Hitless grace period must be greater than zero.')
etsysOspfExtAreaTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1), )
if mibBuilder.loadTexts: etsysOspfExtAreaTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaTable.setDescription('This table provides additional information pertaining to OSPF Areas for Enterasys OSPF systems.')
etsysOspfExtAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1), )
ospfAreaEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaEntry"))
etsysOspfExtAreaEntry.setIndexNames(*ospfAreaEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtAreaEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaEntry.setDescription('An entry (conceptual row) in the etsysOspfExtAreaTable.')
etsysOspfExtAreaAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 1), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtAreaAdminStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaAdminStatus.setDescription("The desired administrative state of this OSPF area. When the status of this object is set to 'disabled', no flooding will occur for routes in this area and all routes for this area are removed from the RIB. When the status of this object is set to 'enabled', flooding occurs for this area, and routes are added to the RIB. This object needs to be 'disabled' in order to modify the ospfImportAsExtern object.")
etsysOspfExtAreaOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 2), EtsysOspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaOperStatus.setDescription('The current operational state of this OSPF area.')
etsysOspfExtAreaTransitCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaTransitCapability.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaTransitCapability.setDescription("This parameter indicates whether the area can carry data traffic that neither originates nor terminates in the area itself. This parameter is calculated when the area's shortest-path tree is built.")
etsysOspfExtAreaLsaRfshIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtAreaLsaRfshIntvl.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaLsaRfshIntvl.setDescription('Self-originated LSAs are periodically reflooded into the routing domain, to add to the robustness of the OSPF protocol. This value determines the interval between refreshes of LSAs in this area, and is defaulted to the OSPF standard default of 1800 seconds (30 minutes).')
etsysOspfExtAreaRtrLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaRtrLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaRtrLsaCount.setDescription("The number of LSAs with LS type-1 in this area's Link State Database.")
etsysOspfExtAreaRtrLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaRtrLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaRtrLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-1 in this area's Link State Database.")
etsysOspfExtAreaNetLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaNetLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaNetLsaCount.setDescription("The number of LSAs with LS type-2 in this area's Link State Database.")
etsysOspfExtAreaNetLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaNetLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaNetLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-2 in this area's Link State Database.")
etsysOspfExtAreaSummLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaSummLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaSummLsaCount.setDescription("The number of LSAs with LS type-3 in this area's Link State Database.")
etsysOspfExtAreaSummLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaSummLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaSummLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-3 in this area's Link State Database.")
etsysOspfExtAreaSummAsLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaSummAsLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaSummAsLsaCount.setDescription("The number of LSAs with LS type-4 in this area's Link State Database.")
etsysOspfExtAreaSummAsLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaSummAsLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaSummAsLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-4 in this area's Link State Database.")
etsysOspfExtAreaNssaLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaNssaLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaNssaLsaCount.setDescription("The number of LSAs with LS type-7 in this area's Link State Database.")
etsysOspfExtAreaNssaLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaNssaLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaNssaLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-7 in this area's Link State Database.")
etsysOspfExtAreaOpLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaOpLsaCount.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaOpLsaCount.setDescription("The number of LSAs with LS type-10 in this area's Link State Database.")
etsysOspfExtAreaOpLsaCksumSum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtAreaOpLsaCksumSum.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaOpLsaCksumSum.setDescription("The 32 bit sum of LS checksums of all LSAs with LS type-10 in this area's Link State Database.")
etsysOspfExtIfTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2), )
if mibBuilder.loadTexts: etsysOspfExtIfTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfTable.setDescription('This table provides additional information pertaining to OSPF Interfaces for Enterasys OSPF systems.')
etsysOspfExtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1), )
ospfIfEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfEntry"))
etsysOspfExtIfEntry.setIndexNames(*ospfIfEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtIfEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfEntry.setDescription('An entry (conceptual row) in the etsysOspfExtIfTable.')
etsysOspfExtIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 1), EtsysOspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtIfOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfOperStatus.setDescription('The current operational state of OSPF on this interface.')
etsysOspfExtIfNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfNetMask.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfNetMask.setDescription('The subnet mask associated with the IP address of this entry. The value of the mask is an IP address with all the network bits set to 1 and all the hosts bits set to 0.')
etsysOspfExtIfTransmitTimerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 3), Unsigned32().clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfTransmitTimerDelay.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfTransmitTimerDelay.setDescription('The time this interface will delay a LSU packet, in order to add more LSAs to the packet before sending. Setting this correctly can reduce the network traffic. This is configurable on a per-interface basis.')
etsysOspfExtIfIPMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 4), Unsigned32().clone(576)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfIPMaxPacketSize.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfIPMaxPacketSize.setDescription('Maximum transfer unit (MTU) for the network interface. This is the maximum packet size in bytes for packets sent over the network interface. This size excludes link layer headers but includes IP headers and higher-level headers. Normally, OSPF limits sent PDUs (protocol data units) to less than or equal to this size. However, if OSPF cannot construct a valid PDU smaller than or equal to this size, then it will send the smallest valid PDU and assume that the IP stack will fragment the packet.')
etsysOspfExtIfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfPassive.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfPassive.setDescription("Indicates whether this interface is a passive interface. If set to 'true', we suppress HELLO packets sent on and received from this interface. We will therefore advertise this interface in our LSAs but not run the OSPF protocol over it.")
etsysOspfExtIfLsaRefreshIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfLsaRefreshIntvl.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfLsaRefreshIntvl.setDescription('Self-originated LSAs are periodically reflooded into the routing domain, to add to the robustness of the OSPF protocol. This value determines the interval between refreshes of LSAs that are only flooded over this interface (type-9 opaque LSAs) and is defaulted to the OSPF standard default of 1800 seconds (30 minutes).')
etsysOspfExtIfHelperModePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 7), Bits().clone(namedValues=NamedValues(("reasonUnknown", 0), ("reasonSoftwareRestart", 1), ("reasonSoftwareReload", 2), ("reasonSwitchToBackup", 3))).clone(namedValues=NamedValues(("reasonUnknown", 0), ("reasonSoftwareRestart", 1), ("reasonSoftwareReload", 2), ("reasonSwitchToBackup", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfHelperModePolicy.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfHelperModePolicy.setDescription('Indicates whether OSPF will help a neighbor undergoing hitless restart on this interface for the specified reason. This field contains a bit flag for each of OspfHitlessRestartReasons. If a bit flag for a specific restart reason is set, then OSPF will help a router restarting for this reason. Otherwise grace LSAs received containing this restart reason will be ignored.')
etsysOspfExtIfMaxHitlessGracePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 8), Unsigned32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfMaxHitlessGracePeriod.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfMaxHitlessGracePeriod.setDescription('If configured to help neighbors undergoing hitless restart on this interface, this field indicates the maximum grace period that will be allowed for a neighboring router undergoing hitless restart. If a type-9 grace LSA is received with a greater requested grace period, then the grace LSA will be ignored.')
etsysOspfExtIfAuthUserData = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4)).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfAuthUserData.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfAuthUserData.setDescription('Authentication user data for interface level authentication. This data is passed opaquely to the authentication process, where it can be used to assist with authentication decisions. When read, etsysOspfExtIfAuthUserData always returns an Octet String of length zero.')
etsysOspfExtIfFastHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfFastHelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfFastHelloMultiplier.setDescription('The number of Hellos that should be sent within 1 second when using Fast Hellos on this interface. This value does not have to be same for all routers attached to a common network, but it is advisable. Fast Hellos are configured using ospfIfRtrDeadInterval.')
etsysOspfExtIfAutoDeleteNbr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 11), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfAutoDeleteNbr.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfAutoDeleteNbr.setDescription("Whether dynamically created entries in the ospfNbrTable should be kept when the adjacency goes down. If this object is set to 'false', then a dynamically created entry in the ospfNbrTable will remain with state 'down' when the adjacency is lost. Such entries can be deleted manually by setting ospfNbrStatus to 'destroy'. If this object is set to 'true', then dynamically created entries in the ospfNbrTable will be deleted automatically when the adjacency goes down.")
etsysOspfExtIfMtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 2, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtIfMtuIgnore.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfMtuIgnore.setDescription('This object controls whether OSPF checks the MTU size on incoming Database Description packets. By default, if the received MTU size in a DB Description packet is higher than the MTU size configured on the incoming interface, the OSPF adjacency will not be established. If the interface is tunneled over, say, an MPLS network, then the administrator may not know the maximum MTU size and so can tell OSPF to ignore the MTU size on incoming DB description packets.')
etsysOspfExtVirtIfTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3), )
if mibBuilder.loadTexts: etsysOspfExtVirtIfTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfTable.setDescription('This table provides additional information pertaining to OSPF Virtual Interfaces for Enterasys OSPF systems.')
etsysOspfExtVirtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1), )
ospfVirtIfEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfEntry"))
etsysOspfExtVirtIfEntry.setIndexNames(*ospfVirtIfEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtVirtIfEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfEntry.setDescription('An entry (conceptual row) in the etsysOspfExtVirtIfTable.')
etsysOspfExtVirtIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 1), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfAdminStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfAdminStatus.setDescription("The desired administrative state of this virtual interface. When the status of this object is set to 'disabled', the virtual link is torn down and no routing information is exchanged with its peer. When the status of this object is set to 'enabled', the virtual link is established (if possible) and routing information is shared with its peer. The etsysOspfExtVirtIfOperStatus object provides the status of this connection.")
etsysOspfExtVirtIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 2), EtsysOspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtVirtIfOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfOperStatus.setDescription('The current operational state of OSPF on this virtual interface.')
etsysOspfExtVirtIfTransmitTimerDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 3), Unsigned32().clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfTransmitTimerDelay.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfTransmitTimerDelay.setDescription('The time this interface will delay a LSU packet, in order to add more LSAs to the packet before sending. Setting this correctly can reduce the network traffic. This is configurable on a per-interface basis.')
etsysOspfExtVirtIfIPMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 4), Unsigned32().clone(576)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfIPMaxPacketSize.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfIPMaxPacketSize.setDescription('Maximum transfer unit (MTU) for the network interface. This is the maximum packet size in bytes for packets sent over the network interface. This size excludes link layer headers but includes IP headers and higher-level headers. Normally, OSPF limits sent PDUs (protocol data units) to less than or equal to this size. However, if OSPF cannot construct a valid PDU smaller than or equal to this size, then it will send the smallest valid PDU and assume that the IP stack will fragment the packet.')
etsysOspfExtVirtIfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfPassive.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfPassive.setDescription("Indicates whether this interface is a passive interface. If set to 'true', we suppress HELLO packets sent on and received from this interface. We will therefore advertise this interface in our LSAs but not run the OSPF protocol over it.")
etsysOspfExtVirtIfLsaRefreshIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3599)).clone(1800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfLsaRefreshIntvl.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfLsaRefreshIntvl.setDescription('Self-originated LSAs are periodically reflooded into the routing domain, to add to the robustness of the OSPF protocol. This value determines the interval between refreshes of LSAs that are only flooded over this interface (type-9 opaque LSAs) and is defaulted to the OSPF standard default of 1800 seconds (30 minutes).')
etsysOspfExtVirtIfHelperModePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 7), Bits().clone(namedValues=NamedValues(("reasonUnknown", 0), ("reasonSoftwareRestart", 1), ("reasonSoftwareReload", 2), ("reasonSwitchToBackup", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfHelperModePolicy.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfHelperModePolicy.setDescription('Indicates whether OSPF will help a neighbor undergoing hitless restart on this interface for the specified reason. This field contains a bit flag for each of OspfHitlessRestartReasons. If a bit flag for a specific restart reason is set, then OSPF will help a router restarting for this reason. Otherwise grace LSAs received containing this restart reason will be ignored.')
etsysOspfExtVirtIfMaxHtlssGracePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 8), Unsigned32().clone(120)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfMaxHtlssGracePeriod.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfMaxHtlssGracePeriod.setDescription('If configured to help neighbors undergoing hitless restart on this interface, this field indicates the maximum grace period that will be allowed for a neighboring router undergoing hitless restart. If a type-9 grace LSA is received with a greater requested grace period, then the grace LSA will be ignored.')
etsysOspfExtVirtIfFastHelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfFastHelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfFastHelloMultiplier.setDescription('The number of Hellos that should be sent within 1 second when using Fast Hellos on this interface. This value does not have to be same for all routers attached to a common network, but it is advisable. Fast Hellos are configured using ospfVirtIfRtrDeadInterval.')
etsysOspfExtVirtIfMtuIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtVirtIfMtuIgnore.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfMtuIgnore.setDescription('This object controls whether OSPF checks the MTU size on incoming Database Description packets. By default, if the received MTU size in a DB Description packet is higher than the MTU size configured on the incoming interface, the OSPF adjacency will not be established. If the interface is tunneled over, say, an MPLS network, then the administrator may not know the maximum MTU size and so can tell OSPF to ignore the MTU size on incoming DB description packets.')
etsysOspfExtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4), )
if mibBuilder.loadTexts: etsysOspfExtNbrTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrTable.setDescription('This table provides additional information pertaining to OSPF Neighbors for Enterasys OSPF systems.')
etsysOspfExtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1), )
ospfNbrEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrEntry"))
etsysOspfExtNbrEntry.setIndexNames(*ospfNbrEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtNbrEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrEntry.setDescription('An entry (conceptual row) in the etsysOspfExtNbrTable.')
etsysOspfExtNbrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 1), Status().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtNbrAdminStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrAdminStatus.setDescription("The desired administrative state of this neighbor. When the status of this object is set to 'disabled', the connection to the neighbor is torn down and the routes learned from this neighbor are removed from the RIB. When the status of this object is set to 'enabled', the connection to the neighbor is established (if possible) and routes learned from the neighbor are added to the RIB.")
etsysOspfExtNbrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 2), EtsysOspfOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNbrOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrOperStatus.setDescription('The current operational state of this neighbor.')
etsysOspfExtNbrNumRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNbrNumRequests.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrNumRequests.setDescription('The number of LSAs requested from this neighbor for which we are awaiting for a response. This field is incremented when an LSA is requested by sending a LS request packet and is decremented when the LSA arrives in a LS update packet.')
etsysOspfExtNbrIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysOspfExtNbrIfIpAddr.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrIfIpAddr.setDescription("The IP address of the interface used for this neighbor. If this value is set to zero OSPF will choose a suitable interface to use. If this value is non-zero this neighbor will only be associated with an exactly matching interface. Note this field is only used for NBMA and P2MP links. Also, the etsysOspfExtNbrAdminStatus object must be 'disabled' prior to modifiying this object.")
etsysOspfExtNbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNbrDeadTime.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrDeadTime.setDescription('The time remaining in seconds within which we need to receive a hello packet from the neighbor or we declare the adjacency down. If fast hellos area in use, this value is always set to 1. If the etsysOspfExtNbrOperStatus is down or ospfNbrState is DOWN, then the value is set to zero and the field is not valid.')
etsysOspfExtNbrAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 4, 1, 6), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtNbrAreaId.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrAreaId.setDescription('The area to which the neighbor belongs. If the etsysOspfExtNbrOperStatus is down, then this value is set to zero and the field is not valid.')
etsysOspfExtVirtNbrTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 5), )
if mibBuilder.loadTexts: etsysOspfExtVirtNbrTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtNbrTable.setDescription('This table provides additional information pertaining to OSPF Virtual Neighbors for Enterasys OSPF systems.')
etsysOspfExtVirtNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 5, 1), )
ospfVirtNbrEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtNbrEntry"))
etsysOspfExtVirtNbrEntry.setIndexNames(*ospfVirtNbrEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtVirtNbrEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtNbrEntry.setDescription('An entry (conceptual row) in the etsysOspfExtVirtNbrTable.')
etsysOspfExtVirtNbrNumRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtVirtNbrNumRequests.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtNbrNumRequests.setDescription('The number of LSAs requested from this neighbor for which we are awaiting for a response. This field is incremented when an LSA is requested by sending a LS request packet and is decremented when the LSA arrives in an LS update packet.')
etsysOspfExtVirtNbrDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtVirtNbrDeadTime.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtNbrDeadTime.setDescription('The time remaining in seconds within which we need to receive a hello packet from the neighbor or we declare the adjacency down. If fast hellos area in use, this value is always set to 1.')
etsysOspfExtLocalLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 6), )
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbTable.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbTable.setDescription('This table provides additional information pertaining to OSPF Local LS Database for Enterasys OSPF systems.')
etsysOspfExtLocalLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 6, 1), )
ospfLocalLsdbEntry.registerAugmentions(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtLocalLsdbEntry"))
etsysOspfExtLocalLsdbEntry.setIndexNames(*ospfLocalLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbEntry.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbEntry.setDescription('An entry (conceptual row) in the etsysOspfExtLocalLsdbTable.')
etsysOspfExtLocalLsdbAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 1, 2, 6, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbAreaId.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbAreaId.setDescription('The OSPF area in which the link belongs.')
etsysOspfExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2))
etsysOspfExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1))
etsysOspfExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 2))
etsysOspfExtGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 1)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtOperStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcMaxDelay"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcThrshUpdStart"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcThrshUpdRestart"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcThrshIncUpdates"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcThrshIncSpfUpd"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCalcPauseFreq"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtRteMaxEqCostPaths"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtCheckAge"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtExtLsaRfshIntvl"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtExternOpLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtExternOpLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNumUpdPending"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNumUpdMerged"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNumCksumsPending"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtDoGraceHitless"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtDoGraceUnplannedHitless"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtHitlessGracePeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtGlobalGroup = etsysOspfExtGlobalGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtGlobalGroup.setDescription('This group defines global controls for Enterasys OSPF systems.')
etsysOspfExtAreaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 2)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaAdminStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaOperStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaTransitCapability"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaLsaRfshIntvl"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaRtrLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaRtrLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaNetLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaNetLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaSummLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaSummLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaSummAsLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaSummAsLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaNssaLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaNssaLsaCksumSum"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaOpLsaCount"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaOpLsaCksumSum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtAreaGroup = etsysOspfExtAreaGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtAreaGroup.setDescription('This group defines the additional OSPF Area objects supported in the Enterasys OSPF systems.')
etsysOspfExtIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 3)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfOperStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfNetMask"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfTransmitTimerDelay"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfIPMaxPacketSize"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfPassive"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfLsaRefreshIntvl"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfHelperModePolicy"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfMaxHitlessGracePeriod"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfAuthUserData"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfFastHelloMultiplier"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfAutoDeleteNbr"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfMtuIgnore"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtIfGroup = etsysOspfExtIfGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtIfGroup.setDescription('This group defines the additional OSPF Interface objects supported in the Enterasys OSPF systems.')
etsysOspfExtVirtIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 4)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfAdminStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfOperStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfTransmitTimerDelay"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfIPMaxPacketSize"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfPassive"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfLsaRefreshIntvl"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfHelperModePolicy"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfMaxHtlssGracePeriod"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfFastHelloMultiplier"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfMtuIgnore"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtVirtIfGroup = etsysOspfExtVirtIfGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtIfGroup.setDescription('This group defines the additional OSPF Virtual Interface objects supported in the Enterasys OSPF systems.')
etsysOspfExtNbrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 5)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrAdminStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrOperStatus"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrNumRequests"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrIfIpAddr"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrDeadTime"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrAreaId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtNbrGroup = etsysOspfExtNbrGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtNbrGroup.setDescription('This group defines the additional OSPF Neighbor objects supported in the Enterasys OSPF systems.')
etsysOspfExtVirtNbrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 6)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtNbrNumRequests"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtNbrDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtVirtNbrGroup = etsysOspfExtVirtNbrGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtVirtNbrGroup.setDescription('This group defines the additional OSPF Virtual Neighbor objects supported in the Enterasys OSPF systems.')
etsysOspfExtLocalLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 1, 7)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtLocalLsdbAreaId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtLocalLsdbGroup = etsysOspfExtLocalLsdbGroup.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtLocalLsdbGroup.setDescription('This group defines the additional OSPF Virtual Neighbor objects supported in the Enterasys OSPF systems.')
etsysOspfExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 65, 2, 2, 1)).setObjects(("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtGlobalGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtAreaGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtIfGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtIfGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtNbrGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtVirtNbrGroup"), ("ENTERASYS-OSPF-EXT-MIB", "etsysOspfExtLocalLsdbGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysOspfExtCompliance = etsysOspfExtCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysOspfExtCompliance.setDescription('The compliance statement for devices that support etsysOspfExt.')
mibBuilder.exportSymbols("ENTERASYS-OSPF-EXT-MIB", etsysOspfExtVirtIfIPMaxPacketSize=etsysOspfExtVirtIfIPMaxPacketSize, etsysOspfExtExternOpLsaCksumSum=etsysOspfExtExternOpLsaCksumSum, etsysOspfExtGroups=etsysOspfExtGroups, etsysOspfExtHitlessGracePeriod=etsysOspfExtHitlessGracePeriod, etsysOspfExtLocalLsdbEntry=etsysOspfExtLocalLsdbEntry, etsysOspfExtOperStatus=etsysOspfExtOperStatus, etsysOspfExtAreaSummAsLsaCksumSum=etsysOspfExtAreaSummAsLsaCksumSum, etsysOspfExtExtLsaRfshIntvl=etsysOspfExtExtLsaRfshIntvl, etsysOspfExtCalcThrshIncSpfUpd=etsysOspfExtCalcThrshIncSpfUpd, etsysOspfExtExternOpLsaCount=etsysOspfExtExternOpLsaCount, etsysOspfExtMIB=etsysOspfExtMIB, etsysOspfExtAreaRtrLsaCount=etsysOspfExtAreaRtrLsaCount, etsysOspfExtAreaOpLsaCksumSum=etsysOspfExtAreaOpLsaCksumSum, etsysOspfExtAreaOperStatus=etsysOspfExtAreaOperStatus, etsysOspfExtVirtIfPassive=etsysOspfExtVirtIfPassive, etsysOspfExtCalcPauseFreq=etsysOspfExtCalcPauseFreq, etsysOspfExtVirtNbrNumRequests=etsysOspfExtVirtNbrNumRequests, etsysOspfExtIfMtuIgnore=etsysOspfExtIfMtuIgnore, etsysOspfExtVirtIfLsaRefreshIntvl=etsysOspfExtVirtIfLsaRefreshIntvl, etsysOspfExtNbrDeadTime=etsysOspfExtNbrDeadTime, etsysOspfExtAreaSummLsaCksumSum=etsysOspfExtAreaSummLsaCksumSum, etsysOspfExtIfAutoDeleteNbr=etsysOspfExtIfAutoDeleteNbr, etsysOspfExtVirtIfHelperModePolicy=etsysOspfExtVirtIfHelperModePolicy, etsysOspfExtVirtIfAdminStatus=etsysOspfExtVirtIfAdminStatus, EtsysOspfOperStatus=EtsysOspfOperStatus, etsysOspfExtCalcThrshUpdStart=etsysOspfExtCalcThrshUpdStart, etsysOspfExtDoGraceUnplannedHitless=etsysOspfExtDoGraceUnplannedHitless, etsysOspfExtGlobalGroup=etsysOspfExtGlobalGroup, etsysOspfExtLocalLsdbTable=etsysOspfExtLocalLsdbTable, etsysOspfExtVirtIfMaxHtlssGracePeriod=etsysOspfExtVirtIfMaxHtlssGracePeriod, etsysOspfExtCalcThrshUpdRestart=etsysOspfExtCalcThrshUpdRestart, etsysOspfExtVirtIfTable=etsysOspfExtVirtIfTable, etsysOspfExtIfHelperModePolicy=etsysOspfExtIfHelperModePolicy, etsysOspfExtNbrOperStatus=etsysOspfExtNbrOperStatus, etsysOspfExtIfMaxHitlessGracePeriod=etsysOspfExtIfMaxHitlessGracePeriod, etsysOspfExtIfTable=etsysOspfExtIfTable, etsysOspfExtVirtNbrGroup=etsysOspfExtVirtNbrGroup, etsysOspfExtTables=etsysOspfExtTables, etsysOspfExtAreaNssaLsaCksumSum=etsysOspfExtAreaNssaLsaCksumSum, etsysOspfExtAreaTable=etsysOspfExtAreaTable, etsysOspfExtAreaOpLsaCount=etsysOspfExtAreaOpLsaCount, etsysOspfExtAreaNssaLsaCount=etsysOspfExtAreaNssaLsaCount, etsysOspfExtAreaRtrLsaCksumSum=etsysOspfExtAreaRtrLsaCksumSum, etsysOspfExtGlobals=etsysOspfExtGlobals, etsysOspfExtIfNetMask=etsysOspfExtIfNetMask, etsysOspfExtVirtIfOperStatus=etsysOspfExtVirtIfOperStatus, etsysOspfExtNbrIfIpAddr=etsysOspfExtNbrIfIpAddr, etsysOspfExtAreaNetLsaCount=etsysOspfExtAreaNetLsaCount, etsysOspfExtNbrGroup=etsysOspfExtNbrGroup, etsysOspfExtVirtNbrTable=etsysOspfExtVirtNbrTable, etsysOspfExtConformance=etsysOspfExtConformance, etsysOspfExtNbrTable=etsysOspfExtNbrTable, etsysOspfExtNumUpdMerged=etsysOspfExtNumUpdMerged, etsysOspfExtVirtIfEntry=etsysOspfExtVirtIfEntry, etsysOspfExtIfTransmitTimerDelay=etsysOspfExtIfTransmitTimerDelay, etsysOspfExtAreaGroup=etsysOspfExtAreaGroup, etsysOspfExtIfLsaRefreshIntvl=etsysOspfExtIfLsaRefreshIntvl, etsysOspfExtAreaSummAsLsaCount=etsysOspfExtAreaSummAsLsaCount, etsysOspfExtNbrEntry=etsysOspfExtNbrEntry, etsysOspfExtAreaLsaRfshIntvl=etsysOspfExtAreaLsaRfshIntvl, etsysOspfExtIfAuthUserData=etsysOspfExtIfAuthUserData, etsysOspfExtLocalLsdbAreaId=etsysOspfExtLocalLsdbAreaId, etsysOspfExtIfGroup=etsysOspfExtIfGroup, etsysOspfExtNbrAdminStatus=etsysOspfExtNbrAdminStatus, etsysOspfExtVirtNbrDeadTime=etsysOspfExtVirtNbrDeadTime, etsysOspfExtNbrAreaId=etsysOspfExtNbrAreaId, etsysOspfExtIfPassive=etsysOspfExtIfPassive, etsysOspfExtCalcThrshIncUpdates=etsysOspfExtCalcThrshIncUpdates, etsysOspfExtIfFastHelloMultiplier=etsysOspfExtIfFastHelloMultiplier, etsysOspfExtObjects=etsysOspfExtObjects, etsysOspfExtVirtIfTransmitTimerDelay=etsysOspfExtVirtIfTransmitTimerDelay, etsysOspfExtAreaAdminStatus=etsysOspfExtAreaAdminStatus, etsysOspfExtNbrNumRequests=etsysOspfExtNbrNumRequests, etsysOspfExtCompliances=etsysOspfExtCompliances, etsysOspfExtLocalLsdbGroup=etsysOspfExtLocalLsdbGroup, etsysOspfExtDoGraceHitless=etsysOspfExtDoGraceHitless, etsysOspfExtAreaNetLsaCksumSum=etsysOspfExtAreaNetLsaCksumSum, etsysOspfExtCheckAge=etsysOspfExtCheckAge, etsysOspfExtNumCksumsPending=etsysOspfExtNumCksumsPending, etsysOspfExtAreaSummLsaCount=etsysOspfExtAreaSummLsaCount, etsysOspfExtVirtIfFastHelloMultiplier=etsysOspfExtVirtIfFastHelloMultiplier, etsysOspfExtVirtNbrEntry=etsysOspfExtVirtNbrEntry, etsysOspfExtAreaTransitCapability=etsysOspfExtAreaTransitCapability, etsysOspfExtAreaEntry=etsysOspfExtAreaEntry, etsysOspfExtCalcMaxDelay=etsysOspfExtCalcMaxDelay, etsysOspfExtIfIPMaxPacketSize=etsysOspfExtIfIPMaxPacketSize, etsysOspfExtCompliance=etsysOspfExtCompliance, etsysOspfExtIfEntry=etsysOspfExtIfEntry, etsysOspfExtVirtIfMtuIgnore=etsysOspfExtVirtIfMtuIgnore, PYSNMP_MODULE_ID=etsysOspfExtMIB, etsysOspfExtRteMaxEqCostPaths=etsysOspfExtRteMaxEqCostPaths, etsysOspfExtIfOperStatus=etsysOspfExtIfOperStatus, etsysOspfExtVirtIfGroup=etsysOspfExtVirtIfGroup, etsysOspfExtNumUpdPending=etsysOspfExtNumUpdPending)
