#
# PySNMP MIB module HUAWEI-BRAS-SBC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BRAS-SBC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:43:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hwBRASMib, = mibBuilder.importSymbols("HUAWEI-MIB", "hwBRASMib")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, ObjectIdentity, iso, TimeTicks, Unsigned32, MibIdentifier, Bits, IpAddress, NotificationType, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "iso", "TimeTicks", "Unsigned32", "MibIdentifier", "Bits", "IpAddress", "NotificationType", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity")
DisplayString, TruthValue, TextualConvention, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "DateAndTime", "RowStatus")
hwBrasSbcMgmt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25))
hwBrasSbcMgmt.setRevisions(('2007-08-14 09:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwBrasSbcMgmt.setRevisionsDescriptions(('Last revision.',))
if mibBuilder.loadTexts: hwBrasSbcMgmt.setLastUpdated('200711210900Z')
if mibBuilder.loadTexts: hwBrasSbcMgmt.setOrganization('Huawei Technologies Co., Ltd.')
if mibBuilder.loadTexts: hwBrasSbcMgmt.setContactInfo('R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com')
if mibBuilder.loadTexts: hwBrasSbcMgmt.setDescription('Session Border Controller Data Config.')
class HWBrasEnabledStatus(TextualConvention, Integer32):
    description = 'A simple status value for the object. 1 enabled 2 disabled'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class HWBrasPermitStatus(TextualConvention, Integer32):
    description = 'A simple status value for the object.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("deny", 1), ("permit", 2))

class HWBrasSecurityProtocol(TextualConvention, Integer32):
    description = 'Security protocol value for the object. 1 sip 2 mgcp 3 h323 4 signaling'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("sip", 1), ("mgcp", 2), ("h323", 3), ("signaling", 4))

class HWBrasSbcBaseProtocol(TextualConvention, Integer32):
    description = 'Sbc base protocol value for the object. 1 sip 2 mgcp 3 snmp 4 ras 5 upath 6 h248 7 ido 8 q931'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("sip", 1), ("mgcp", 2), ("snmp", 3), ("ras", 4), ("upath", 5), ("h248", 6), ("ido", 7), ("q931", 8))

class HwBrasAppMode(TextualConvention, Integer32):
    description = 'Sbc application mode. 1 single domain mode 2 multi domain mode'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("singleDomain", 1), ("multiDomain", 2))

class HwBrasBWLimitType(TextualConvention, Integer32):
    description = 'Sbc bandwidth limit type. 1 bandwidth-limit type be 2 bandwidth-limit type qos'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("be", 1), ("qos", 2))

hwBrasSbcModule = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2))
hwBrasSbcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1))
hwBrasSbcGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1))
hwBrasSbcBase = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1))
hwBrasSbcBaseLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1))
hwBrasSbcStatisticEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcStatisticEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticEnable.setDescription('Statistic Enable Status. Default: enabled')
hwBrasSbcStatisticSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcStatisticSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticSyslogEnable.setDescription('Statistic Syslog Enable Status. Default: enabled')
hwBrasSbcAppMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 3), HwBrasAppMode().clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcAppMode.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcAppMode.setDescription('Sbc application mode. Default: Multi-domain mode')
hwBrasSbcMediaDetectValidityEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 4), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaDetectValidityEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaDetectValidityEnable.setDescription('Sbc media flow validity detect enable status. Default: disabled(2)')
hwBrasSbcMediaDetectSsrcEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 5), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaDetectSsrcEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaDetectSsrcEnable.setDescription('Sbc media flow SSRC detect enable status. Default: disabled(2)')
hwBrasSbcMediaDetectPacketLength = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(28, 65535)).clone(1500)).setUnits('byte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaDetectPacketLength.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaDetectPacketLength.setDescription('Sbc media packet length detect function. Range: 28-65535 Default: 1500 Unit: byte')
hwBrasSbcBaseTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2))
hwBrasSbcSignalAddrMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapTable.setDescription('Signal Address Map Table. obsolete')
hwBrasSbcSignalAddrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalAddrMapClientAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalAddrMapServerAddr"))
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapEntry.setDescription('Signal Address Map Table Entry.')
hwBrasSbcSignalAddrMapClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapClientAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapClientAddr.setDescription('Signal Address Map Client Side IP Address.')
hwBrasSbcSignalAddrMapServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapServerAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapServerAddr.setDescription('Signal Address Map Server Side IP Address.')
hwBrasSbcSignalAddrMapSoftAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapSoftAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapSoftAddr.setDescription('Signal Address Map Softx IP Address.')
hwBrasSbcSignalAddrMapIadmsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapIadmsAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapIadmsAddr.setDescription('Signal Address Map IADMS IP Address.')
hwBrasSbcSignalAddrMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalAddrMapRowStatus.setDescription('Signal Address Map Row Status.')
hwBrasSbcMediaAddrMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapTable.setDescription('Media Address Map Table. obsolete')
hwBrasSbcMediaAddrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaAddrMapClientAddr"))
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapEntry.setDescription('Media Address Map Table Entry.')
hwBrasSbcMediaAddrMapClientAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapClientAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapClientAddr.setDescription('Media Address Map Client Side IP Address.')
hwBrasSbcMediaAddrMapServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapServerAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapServerAddr.setDescription('Media Address Map Server Side IP Address.')
hwBrasSbcMediaAddrMapWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapWeight.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapWeight.setDescription('Media Address Map Weight. Range: 10-100 Default: 50 Unit: NA')
hwBrasSbcMediaAddrMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaAddrMapRowStatus.setDescription('Media Address Map Row Status.')
hwBrasSbcPortrangeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcPortrangeTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeTable.setDescription('Port Range Table.')
hwBrasSbcPortrangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortrangeIndex"))
if mibBuilder.loadTexts: hwBrasSbcPortrangeEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeEntry.setDescription('Port Range Table Entry.')
hwBrasSbcPortrangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("signal", 1), ("media", 2), ("nat", 3), ("tcp", 4), ("udp", 5), ("mediacur", 6))))
if mibBuilder.loadTexts: hwBrasSbcPortrangeIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeIndex.setDescription('Port Range Index. 1: signal 2: media 3: nat 4: tcp 5: udp 6: mediacur')
hwBrasSbcPortrangeBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10001, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcPortrangeBegin.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeBegin.setDescription('Port Range Begin Port. Range: 10001-65535 Default: signal and media: 10001 nat: 50000')
hwBrasSbcPortrangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10001, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcPortrangeEnd.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeEnd.setDescription('Port Range End Port. Range: 10001-65535 Default: signal and media: 49999 nat: 65535')
hwBrasSbcPortrangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcPortrangeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortrangeRowStatus.setDescription('Port Range Row Status.')
hwBrasSbcStatMediaPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketTable.setDescription('Statistic of Media Packet Table.')
hwBrasSbcStatMediaPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatMediaPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketEntry.setDescription('Statistic of Media Packet Table Entry.')
hwBrasSbcStatMediaPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtp", 1), ("rtcp", 2))))
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketIndex.setDescription('Rtp or Rtcp. 1: rtp 2: rtcp')
hwBrasSbcStatMediaPacketNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketNumber.setDescription('Packet Number.')
hwBrasSbcStatMediaPacketOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketOctet.setDescription('Packet Octet.')
hwBrasSbcStatMediaPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatMediaPacketRowStatus.setDescription('Row Status.')
hwBrasSbcClientPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcClientPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortTable.setDescription('Client wellknown port table.')
hwBrasSbcClientPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortVPN"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortIP"))
if mibBuilder.loadTexts: hwBrasSbcClientPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortEntry.setDescription('Client wellknown port entry.')
hwBrasSbcClientPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sip", 1), ("mgcp", 2), ("snmp", 3), ("ras", 4), ("upath", 5), ("h248", 6), ("ido", 7))))
if mibBuilder.loadTexts: hwBrasSbcClientPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortProtocol.setDescription('Protocol. Base on HWBrasSbcBaseProtocol.')
hwBrasSbcClientPortVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: hwBrasSbcClientPortVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortVPN.setDescription('Vpn-instance Index')
hwBrasSbcClientPortIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcClientPortIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortIP.setDescription('Client Address.')
hwBrasSbcClientPortPort01 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort01.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort01.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort02 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort02.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort02.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort03 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort03.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort03.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort04 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort04.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort04.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort05 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort05.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort05.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort06 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort06.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort06.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort07 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort07.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort07.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort08 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort08.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort08.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort09 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort09.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort09.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort10 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort10.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort10.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort11 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort11.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort11.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort12 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort12.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort12.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort13 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort13.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort13.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort14 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort14.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort14.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort15 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort15.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort15.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortPort16 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortPort16.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortPort16.setDescription('Client Wellknown Port.')
hwBrasSbcClientPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 5, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcClientPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcClientPortRowStatus.setDescription('Row Status.')
hwBrasSbcSoftswitchPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortTable.setDescription('Softswitch wellknown port table.')
hwBrasSbcSoftswitchPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftswitchPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftswitchPortVPN"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftswitchPortIP"))
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortEntry.setDescription('Softswitch wellknown port entry.')
hwBrasSbcSoftswitchPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("sip", 1), ("mgcp", 2), ("ras", 4), ("upath", 5), ("h248", 6), ("ido", 7), ("q931", 8))))
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortProtocol.setDescription('Protocol. Base on HWBrasSbcBaseProtocol.')
hwBrasSbcSoftswitchPortVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortVPN.setDescription('Vpn-instance Index.')
hwBrasSbcSoftswitchPortIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortIP.setDescription('Softswitch Address.')
hwBrasSbcSoftswitchPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortPort.setDescription('Softswitch Wellknown Port.')
hwBrasSbcSoftswitchPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 6, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftswitchPortRowStatus.setDescription('Row Status.')
hwBrasSbcIadmsPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7), )
if mibBuilder.loadTexts: hwBrasSbcIadmsPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortTable.setDescription('Iadms wellknown port table.')
hwBrasSbcIadmsPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsPortVPN"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsPortIP"))
if mibBuilder.loadTexts: hwBrasSbcIadmsPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortEntry.setDescription('Iadms wellknown port entry.')
hwBrasSbcIadmsPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("snmp", 3))))
if mibBuilder.loadTexts: hwBrasSbcIadmsPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortProtocol.setDescription('Protocol. Base on HWBrasSbcBaseProtocol.')
hwBrasSbcIadmsPortVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: hwBrasSbcIadmsPortVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortVPN.setDescription('Vpn-instance Index.')
hwBrasSbcIadmsPortIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsPortIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortIP.setDescription('Iadms Address.')
hwBrasSbcIadmsPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIadmsPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortPort.setDescription('Iadms Wellknown Port.')
hwBrasSbcIadmsPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 7, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIadmsPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsPortRowStatus.setDescription('Row Status.')
hwBrasSbcInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 8), )
if mibBuilder.loadTexts: hwBrasSbcInstanceTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcInstanceTable.setDescription('SBC instance table.')
hwBrasSbcInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 8, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcInstanceName"))
if mibBuilder.loadTexts: hwBrasSbcInstanceEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcInstanceEntry.setDescription('SBC instance entry.')
hwBrasSbcInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcInstanceName.setDescription('the name of the sbc instance.')
hwBrasSbcInstanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 2, 8, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcInstanceRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcInstanceRowStatus.setDescription('Row Status.')
hwBrasSbcMapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3))
hwBrasSbcMapGroupLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 1))
hwBrasSbcMapGroupTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2))
hwBrasSbcMapGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcMapGroupsTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsTable.setDescription("Map Groups. This table for create or delete map groups. When you create the index, the groups' status must be disabled. The groups' type for index: index type 1-1000 1 1001-2000 2 2001-2500 3 2501-2999 4 If type don't match index, set will be failed!")
hwBrasSbcMapGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupsIndex"))
if mibBuilder.loadTexts: hwBrasSbcMapGroupsEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsEntry.setDescription('Map Groups entry.')
hwBrasSbcMapGroupsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMapGroupsIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsIndex.setDescription("Map Group's Index. proxy : 1...1000 intercomIP : 1001...2000 IntercomPrefix: 2001...2500 bgf : 2501...2999")
hwBrasSbcMapGroupsType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("proxy", 1), ("intercomIP", 2), ("intercomPrefix", 3), ("bgf", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMapGroupsType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsType.setDescription("Map Group's Type. proxy : 1...1000 intercomIP : 1001...2000 IntercomPrefix: 2001...2500 bgf : 2501...2999")
hwBrasSbcMapGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 12), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMapGroupsStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsStatus.setDescription("Map Group's Enable Status. default: disabled")
hwBrasSbcMapGroupInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMapGroupInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupInstanceName.setDescription('SBC instance which the mapgroup belongs to ')
hwBrasSbcMapGroupSessionLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 40000)).clone(40000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMapGroupSessionLimit.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupSessionLimit.setDescription("Map Group's maximum session count. Range: 1-40000 Default: 40000")
hwBrasSbcMapGroupsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMapGroupsRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMapGroupsRowStatus.setDescription('Row status.')
hwBrasSbcMGCliAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrTable.setDescription("Map Groups' Client Address. Support map group index: 1..2000 ")
hwBrasSbcMGCliAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGCliAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrEntry.setDescription("Map Groups' client address entry.")
hwBrasSbcMGCliAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrIndex.setDescription("Map Group's Index. Support map group index: 1..2000")
hwBrasSbcMGCliAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGCliAddrIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrIP.setDescription('Client Address.')
hwBrasSbcMGCliAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 2, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGCliAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGServAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcMGServAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrTable.setDescription("Map Groups' Server Address. Support map group index: 1..2500")
hwBrasSbcMGServAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGServAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrEntry.setDescription("Map Groups' server address entry.")
hwBrasSbcMGServAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIndex.setDescription("Map Group's Index. Support map group index: 1..2500")
hwBrasSbcMGServAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGServAddrIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP1.setDescription('Server Address.')
hwBrasSbcMGServAddrIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP2.setDescription('Server Address.')
hwBrasSbcMGServAddrIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP3.setDescription('Server Address.')
hwBrasSbcMGServAddrIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrIP4.setDescription('Server Address.')
hwBrasSbcMGServAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGServAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGServAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGSofxAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrTable.setDescription("Map Groups' Soft-switch Address. Support map group index: 1..2500")
hwBrasSbcMGSofxAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrEntry.setDescription("Map Groups' soft-switch address entry.")
hwBrasSbcMGSofxAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIndex.setDescription("Map Group's Index. Support map group index: 1..2500")
hwBrasSbcMGSofxAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGSofxAddrIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP1.setDescription('Soft-switch Address.')
hwBrasSbcMGSofxAddrIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP2.setDescription('Soft-switch Address.')
hwBrasSbcMGSofxAddrIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP3.setDescription('Soft-switch Address.')
hwBrasSbcMGSofxAddrIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrIP4.setDescription('Soft-switch Address.')
hwBrasSbcMGSofxAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 4, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGSofxAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGIadmsAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrTable.setDescription("Map Groups' UMS Address. Support map group index: 1..1000")
hwBrasSbcMGIadmsAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrEntry.setDescription("Map Groups' ums address entry.")
hwBrasSbcMGIadmsAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIndex.setDescription("Map Group's Index. Support map group index: 1..1000")
hwBrasSbcMGIadmsAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGIadmsAddrIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP1.setDescription('IADMS Server Address.')
hwBrasSbcMGIadmsAddrIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP2.setDescription('IADMS Server Address.')
hwBrasSbcMGIadmsAddrIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP3.setDescription('IADMS Server Address.')
hwBrasSbcMGIadmsAddrIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 15), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrIP4.setDescription('IADMS Server Address.')
hwBrasSbcMGIadmsAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 5, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGIadmsAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcMGProtocolTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolTable.setDescription("Map Groups' Bellow Protocol. Support map group index: 1..1000")
hwBrasSbcMGProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGProtocolEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolEntry.setDescription("Map Groups' bellow protocol entry.")
hwBrasSbcMGProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGProtocolIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolIndex.setDescription("Map Group's Index. Support map group index: 1..1000")
hwBrasSbcMGProtocolSip = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 11), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolSip.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolSip.setDescription('SIP Protocol.')
hwBrasSbcMGProtocolMgcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 12), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolMgcp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolMgcp.setDescription('MGCP Protocol.')
hwBrasSbcMGProtocolH323 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 13), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolH323.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolH323.setDescription('H.323 Protocol.')
hwBrasSbcMGProtocolIadms = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 14), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolIadms.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolIadms.setDescription('IADMS Protocol.')
hwBrasSbcMGProtocolUpath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 15), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolUpath.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolUpath.setDescription('UPATH Protocol.')
hwBrasSbcMGProtocolH248 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 16), HWBrasEnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolH248.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolH248.setDescription('H.248 Protocol.')
hwBrasSbcMGProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 6, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGProtocolRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGProtocolRowStatus.setDescription('Row stauts.')
hwBrasSbcMGPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 7), )
if mibBuilder.loadTexts: hwBrasSbcMGPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPortTable.setDescription("Map Groups' Port. Support map group index: 1..2000")
hwBrasSbcMGPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 7, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPortIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPortEntry.setDescription("Map Groups' port entry.")
hwBrasSbcMGPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPortIndex.setDescription("Map Group's Index. Support index: 1..2000")
hwBrasSbcMGPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPortNumber.setDescription('Port Index. Support range :1...65535')
hwBrasSbcMGPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 7, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPortRowStatus.setDescription('Row stauts.')
hwBrasSbcMGPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 8), )
if mibBuilder.loadTexts: hwBrasSbcMGPrefixTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPrefixTable.setDescription("Map Groups' Prefix. Support index: 2001..2500")
hwBrasSbcMGPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 8, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPrefixIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGPrefixEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPrefixEntry.setDescription("Map Groups' prefix entry.")
hwBrasSbcMGPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGPrefixIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPrefixIndex.setDescription("Map Group's Index. Support map group index: 2001..2500")
hwBrasSbcMGPrefixID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGPrefixID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPrefixID.setDescription('Intercom Prefix ID. Support length :1...63')
hwBrasSbcMGPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 8, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGPrefixRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGPrefixRowStatus.setDescription('Row stauts.')
hwBrasSbcMGMdCliAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9), )
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrTable.setDescription("Map Groups' Media Client Address. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMdCliAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrEntry.setDescription("Map Groups' media client address entry.")
hwBrasSbcMGMdCliAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIndex.setDescription("Map Group's Index. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMdCliAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGMdCliAddrIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP1.setDescription('Media Client Address.')
hwBrasSbcMGMdCliAddrIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP2.setDescription('Media Client Address.')
hwBrasSbcMGMdCliAddrIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP3.setDescription('Media Client Address.')
hwBrasSbcMGMdCliAddrIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIP4.setDescription('Media Client Address.')
hwBrasSbcMGMdCliAddrVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrVPNName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrVPNName.setDescription('The name of VPN interface.')
hwBrasSbcMGMdCliAddrIf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf1.setDescription('Client Interface.')
hwBrasSbcMGMdCliAddrSlotID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID1.setDescription('the working slot.')
hwBrasSbcMGMdCliAddrIf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf2.setDescription('Client Interface.')
hwBrasSbcMGMdCliAddrSlotID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID2.setDescription('the working slot.')
hwBrasSbcMGMdCliAddrIf3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf3.setDescription('Client Interface.')
hwBrasSbcMGMdCliAddrSlotID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID3.setDescription('the working slot.')
hwBrasSbcMGMdCliAddrIf4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrIf4.setDescription('Client Interface.')
hwBrasSbcMGMdCliAddrSlotID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrSlotID4.setDescription('the working slot.')
hwBrasSbcMGMdCliAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 9, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdCliAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGMdServAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10), )
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrTable.setDescription("Map Groups' Media Server Address. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMdServAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrEntry.setDescription("Map Groups' media server address entry.")
hwBrasSbcMGMdServAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIndex.setDescription("Map Group's Index. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMdServAddrVPN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrVPN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrVPN.setDescription('VPN Index. range: SE2200==>0~255 SE2300==>0~1023')
hwBrasSbcMGMdServAddrIP1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 12), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP1.setDescription('Media Server Address.')
hwBrasSbcMGMdServAddrIP2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP2.setDescription('Media Server Address.')
hwBrasSbcMGMdServAddrIP3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 14), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP3.setDescription('Media Server Address.')
hwBrasSbcMGMdServAddrIP4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIP4.setDescription('Media Server Address.')
hwBrasSbcMGMdServAddrVPNName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrVPNName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrVPNName.setDescription('The name of VPN interface.')
hwBrasSbcMGMdServAddrIf1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf1.setDescription('Server Interface.')
hwBrasSbcMGMdServAddrSlotID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID1.setDescription('the working slot.')
hwBrasSbcMGMdServAddrIf2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf2.setDescription('Server Interface.')
hwBrasSbcMGMdServAddrSlotID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID2.setDescription('the working slot.')
hwBrasSbcMGMdServAddrIf3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf3.setDescription('Server Interface.')
hwBrasSbcMGMdServAddrSlotID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID3.setDescription('the working slot.')
hwBrasSbcMGMdServAddrIf4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrIf4.setDescription('Server Interface.')
hwBrasSbcMGMdServAddrSlotID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrSlotID4.setDescription('the working slot.')
hwBrasSbcMGMdServAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 10, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMdServAddrRowStatus.setDescription('Row stauts.')
hwBrasSbcMGMatchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 11), )
if mibBuilder.loadTexts: hwBrasSbcMGMatchTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMatchTable.setDescription("Map Groups' Match Acl Number. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 11, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMatchIndex"))
if mibBuilder.loadTexts: hwBrasSbcMGMatchEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMatchEntry.setDescription("Map Groups' match acl number entry.")
hwBrasSbcMGMatchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999)))
if mibBuilder.loadTexts: hwBrasSbcMGMatchIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMatchIndex.setDescription("Map Group's Index. Support map group index: 1..1000 | 2501..2999")
hwBrasSbcMGMatchAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2000, 3999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMatchAcl.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMatchAcl.setDescription('ACL Index. Support range: 2000...3999')
hwBrasSbcMGMatchRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 3, 2, 11, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMGMatchRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMGMatchRowStatus.setDescription('Row stauts.')
hwBrasSbcAdmModuleTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4))
hwBrasSbcBackupGroupsTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1))
hwBrasSbcBackupGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: hwBrasSbcBackupGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupTable.setDescription('Sbc BackupGroup Table. obsolete')
hwBrasSbcBackupGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBackupGroupID"))
if mibBuilder.loadTexts: hwBrasSbcBackupGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupEntry.setDescription('Sbc BackupGroup Table Entry.')
hwBrasSbcBackupGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14)))
if mibBuilder.loadTexts: hwBrasSbcBackupGroupID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupID.setDescription('BackupGroup ID.')
hwBrasSbcBackupGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("signal", 1), ("media", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcBackupGroupType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupType.setDescription('BackupGroup type. 1 signal backup group 2 media backup group')
hwBrasSbcBackupGroupInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcBackupGroupInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupInstanceName.setDescription('Instance Name.')
hwBrasSbcBackupGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcBackupGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupRowStatus.setDescription('Row stauts.')
hwBrasSbcSlotInforTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2), )
if mibBuilder.loadTexts: hwBrasSbcSlotInforTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSlotInforTable.setDescription('Slot Information Table. obsolete')
hwBrasSbcSlotInforEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBackupGroupIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSlotIndex"))
if mibBuilder.loadTexts: hwBrasSbcSlotInforEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSlotInforEntry.setDescription('Slot Information Table Entry.')
hwBrasSbcBackupGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14)))
if mibBuilder.loadTexts: hwBrasSbcBackupGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBackupGroupIndex.setDescription('BackupGroup index.')
hwBrasSbcSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: hwBrasSbcSlotIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSlotIndex.setDescription('Slot Index.')
hwBrasSbcCurrentSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcCurrentSlotID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCurrentSlotID.setDescription('Slot ID.')
hwBrasSbcSlotCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSlotCfgState.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSlotCfgState.setDescription('Config State. 1 master 2 backup')
hwBrasSbcSlotInforRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 1, 4, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSlotInforRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSlotInforRowStatus.setDescription('Row stauts.')
hwBrasSbcAdvance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2))
hwBrasSbcAdvanceLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1))
hwBrasSbcMediaPassEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaPassEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassEnable.setDescription('Mediapass Enable Status. Default: disabled')
hwBrasSbcMediaPassSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaPassSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassSyslogEnable.setDescription('Mediapass Syslog Enable Status. Default: enabled')
hwBrasSbcIntMediaPassEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 3), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIntMediaPassEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntMediaPassEnable.setDescription('obsolete Internet-mediapass Enable Status. Default: disabled')
hwBrasSbcRoamlimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 4), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitEnable.setDescription('Roamlimit Enable Status. Default: disabled')
hwBrasSbcRoamlimitDefault = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 5), HWBrasPermitStatus().clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitDefault.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitDefault.setDescription('Roamlimit Default Rule.')
hwBrasSbcRoamlimitSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 6), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitSyslogEnable.setDescription('Roamlimit Syslog Enable Status. Default: enabled')
hwBrasSbcRoamlimitExtendEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 7), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitExtendEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitExtendEnable.setDescription('Roamlimit Extend Enable Status. Default: disabled')
hwBrasSbcHrpSynchronization = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reserve", 1), ("synchronize", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcHrpSynchronization.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcHrpSynchronization.setDescription('HRP Synchronization: Synchronize data in master device to slave device')
hwBrasSbcAdvanceTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2))
hwBrasSbcMediaPassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcMediaPassTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassTable.setDescription('Mediapass Configuration Table.')
hwBrasSbcMediaPassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaPassIndex"))
if mibBuilder.loadTexts: hwBrasSbcMediaPassEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassEntry.setDescription('MediaPass Configuration Table Entry.')
hwBrasSbcMediaPassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: hwBrasSbcMediaPassIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassIndex.setDescription('Usergroup Index. Range: 1-1000')
hwBrasSbcMediaPassAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaPassAclNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassAclNumber.setDescription('ACL Index. Range: 2000-2999 0 for no acl bind')
hwBrasSbcMediaPassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaPassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaPassRowStatus.setDescription('Mediapass Row Status.')
hwBrasSbcUsergroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcUsergroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupTable.setDescription('Usergroup for Roamlimit Rule Table.')
hwBrasSbcUsergroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupIndex"))
if mibBuilder.loadTexts: hwBrasSbcUsergroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupEntry.setDescription('Usergroup for Roamlimit Table Entry.')
hwBrasSbcUsergroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: hwBrasSbcUsergroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupIndex.setDescription('Usergroup Index. Range: 1-1000')
hwBrasSbcUsergroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUsergroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRowStatus.setDescription('Usergroup Row Status.')
hwBrasSbcUsergroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleTable.setDescription('Usergroup for Roamlimit Rule Table.')
hwBrasSbcUsergroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupRuleIndex"))
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleEntry.setDescription('Usergroup for Roamlimit Rule Table Entry.')
hwBrasSbcUsergroupRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleIndex.setDescription('Usergroup Rule Index. Range: 1-100')
hwBrasSbcUsergroupRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3, 1, 2), HWBrasPermitStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleType.setDescription('Rule Type.')
hwBrasSbcUsergroupRuleUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleUserName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleUserName.setDescription('User Infomation.')
hwBrasSbcUsergroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUsergroupRuleRowStatus.setDescription('Usergroup Rule Row Status.')
hwBrasSbcRtpSpecialAddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrTable.setDescription('Rtp Special Address Table.')
hwBrasSbcRtpSpecialAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRtpSpecialAddrIndex"))
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrEntry.setDescription('Rtp Special Address Table Entry.')
hwBrasSbcRtpSpecialAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrIndex.setDescription('Rtp Special Address Index.')
hwBrasSbcRtpSpecialAddrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 4, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrAddr.setDescription('Rtp Special Address Address.')
hwBrasSbcRtpSpecialAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRtpSpecialAddrRowStatus.setDescription('Rtp Special Address Row Status.')
hwBrasSbcRoamlimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcRoamlimitTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitTable.setDescription('Roamlimit Table.')
hwBrasSbcRoamlimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitIndex"))
if mibBuilder.loadTexts: hwBrasSbcRoamlimitEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitEntry.setDescription('Roamlimit Table Entry.')
hwBrasSbcRoamlimitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: hwBrasSbcRoamlimitIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitIndex.setDescription('Roamlimit Number.')
hwBrasSbcRoamlimitAclNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2000, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitAclNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitAclNumber.setDescription('Roamlimit Acl Number.')
hwBrasSbcRoamlimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcRoamlimitRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRoamlimitRowStatus.setDescription('Roamlimit Row Status.')
hwBrasSbcMediaUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcMediaUsersTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersTable.setDescription('Media QoS Configuration Table.')
hwBrasSbcMediaUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersIndex"))
if mibBuilder.loadTexts: hwBrasSbcMediaUsersEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersEntry.setDescription('Media Users Table Entry.')
hwBrasSbcMediaUsersIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwBrasSbcMediaUsersIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersIndex.setDescription('SessionEngine2000 Media Users Index read range: 1-255 set range: 1-253')
hwBrasSbcMediaUsersType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("media", 1), ("audio", 2), ("video", 3), ("data", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersType.setDescription('Media Users Media Type.')
hwBrasSbcMediaUsersCallerID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID1.setDescription('Media Users Caller ID1 Range: 0-63')
hwBrasSbcMediaUsersCallerID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID2.setDescription('Media Users Caller ID2 Range: 0-63')
hwBrasSbcMediaUsersCallerID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID3.setDescription('Media Users Caller ID3 Range: 0-63')
hwBrasSbcMediaUsersCallerID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCallerID4.setDescription('Media Users Caller ID4 Range: 0-63')
hwBrasSbcMediaUsersCalleeID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID1.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID1.setDescription('Media Users Callee ID1 Range: 0-63')
hwBrasSbcMediaUsersCalleeID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID2.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID2.setDescription('Media Users Callee ID2 Range: 0-63')
hwBrasSbcMediaUsersCalleeID3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID3.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID3.setDescription('Media Users Callee ID3 Range: 0-63')
hwBrasSbcMediaUsersCalleeID4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID4.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersCalleeID4.setDescription('Media Users Callee ID4 Range: 0-63')
hwBrasSbcMediaUsersRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 2, 6, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMediaUsersRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaUsersRowStatus.setDescription('Media Users Row Status.')
hwBrasSbcIntercom = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3))
hwBrasSbcIntercomLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 1))
hwBrasSbcIntercomEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIntercomEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomEnable.setDescription('Intercom Enable Status. Default: disabled obsolete')
hwBrasSbcIntercomStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("iproute", 2), ("prefixroute", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIntercomStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomStatus.setDescription('intercom status set 1:disabled, intercom is closed 2:ip-route, intercom ip route function is enable 3:prefix-route, intercom prefix route function is enable')
hwBrasSbcIntercomTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2))
hwBrasSbcIntercomPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixTable.setDescription('Intercom Prefix-route Set Table.')
hwBrasSbcIntercomPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomPrefixIndex"))
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixEntry.setDescription('Intercom Prefix-route Set Table Entry.')
hwBrasSbcIntercomPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63)))
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixIndex.setDescription('Intercom Prefix number.')
hwBrasSbcIntercomPrefixDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixDestAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixDestAddr.setDescription('Intercom Prefix Destination IP address.')
hwBrasSbcIntercomPrefixSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixSrcAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixSrcAddr.setDescription('Intercom Prefix Local IP address.')
hwBrasSbcIntercomPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 3, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIntercomPrefixRowStatus.setDescription('Intercom Prefix Row Status.')
hwBrasSbcSessionCar = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4))
hwBrasSbcSessionCarLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 1))
hwBrasSbcSessionCarEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSessionCarEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarEnable.setDescription('Session Car Enable Status. Default: disabled')
hwBrasSbcSessionCarTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2))
hwBrasSbcSessionCarDegreeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeTable.setDescription('Session Car Degree Table.')
hwBrasSbcSessionCarDegreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarDegreeID"))
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeEntry.setDescription('Session Car Degree Table Entry.')
hwBrasSbcSessionCarDegreeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeID.setDescription('Session Car Degree Table ID.')
hwBrasSbcSessionCarDegreeBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 131071))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeBandWidth.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeBandWidth.setDescription('Session Car Degree Table Brand Width Information.')
hwBrasSbcSessionCarDegreeDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeDscp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeDscp.setDescription('Session Car Degree Table Dscp Information.')
hwBrasSbcSessionCarDegreeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarDegreeRowStatus.setDescription('Session Car Degree Table Row Status.')
hwBrasSbcSessionCarRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleTable.setDescription('Session Car Rule Table.')
hwBrasSbcSessionCarRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleID"))
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleEntry.setDescription('Session Car Rule Table Entry.')
hwBrasSbcSessionCarRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleID.setDescription('Session Car Rule Table ID.')
hwBrasSbcSessionCarRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleName.setDescription('Session Car Rule Table Name.')
hwBrasSbcSessionCarRuleDegreeID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeID.setDescription('Session Car Rule Table Degree ID.')
hwBrasSbcSessionCarRuleDegreeBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 131071))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeBandWidth.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeBandWidth.setDescription('Session Car Rule Table Degree Band Width.')
hwBrasSbcSessionCarRuleDegreeDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeDscp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleDegreeDscp.setDescription('Session Car Rule Table Degree Description.')
hwBrasSbcSessionCarRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 4, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSessionCarRuleRowStatus.setDescription('Session Car Rule Table Row Status.')
hwBrasSbcSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5))
hwBrasSbcSecurityLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1))
hwBrasSbcDefendEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendEnable.setDescription('Signaling Defend Enable Status. Default: enabled')
hwBrasSbcDefendMode = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendMode.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendMode.setDescription('Signaling Defend Mode Status. 1 auto 2 manual Default: auto')
hwBrasSbcDefendActionLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 3), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendActionLogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendActionLogEnable.setDescription('Signaling Defend Action log Status. Default: disabled')
hwBrasSbcCacEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 4), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacEnable.setDescription('Cac Enable Status. Default: enabled')
hwBrasSbcCacActionLogStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("denyAndNoLog", 1), ("permitAndNoLog", 2), ("denyAndLog", 3), ("permitAndLog", 4))).clone('denyAndNoLog')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacActionLogStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacActionLogStatus.setDescription('Cac Action log Status. 1 deny and no log 2 permit and no log 3 deny and log 4 permit and log Default: deny and no log')
hwBrasSbcDefendExtStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 6), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendExtStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendExtStatus.setDescription('Description.')
hwBrasSbcSignalingCarStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 7), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSignalingCarStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalingCarStatus.setDescription('Description.')
hwBrasSbcIPCarStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 8), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIPCarStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarStatus.setDescription('Description.')
hwBrasSbcDynamicStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 1, 9), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDynamicStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDynamicStatus.setDescription('Description.')
hwBrasSbcSecurityTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2))
hwBrasSbcDefendConnectRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateTable.setDescription('Signaling Defend Limited Connect Rate Table.')
hwBrasSbcDefendConnectRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendConnectRateProtocol"))
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateEntry.setDescription('Signaling Defend Connect Rate Table Entry.')
hwBrasSbcDefendConnectRateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateProtocol.setDescription('Protocol.')
hwBrasSbcDefendConnectRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateThreshold.setDescription('Threshold.')
hwBrasSbcDefendConnectRatePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRatePercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRatePercent.setDescription('Percent.')
hwBrasSbcDefendConnectRateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendConnectRateRowStatus.setDescription('RowStatus.')
hwBrasSbcDefendUserConnectRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateTable.setDescription('Signaling Defend Limited Per-user Connect Rate Table.')
hwBrasSbcDefendUserConnectRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendUserConnectRateProtocol"))
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateEntry.setDescription('Signaling Defend Per-user Connect Rate Table Entry.')
hwBrasSbcDefendUserConnectRateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateProtocol.setDescription('Protocol.')
hwBrasSbcDefendUserConnectRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateThreshold.setDescription('Threshold.')
hwBrasSbcDefendUserConnectRatePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRatePercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRatePercent.setDescription('Percent.')
hwBrasSbcDefendUserConnectRateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 2, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDefendUserConnectRateRowStatus.setDescription('RowStatus.')
hwBrasSbcCacCallTotalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalTable.setDescription('CAC Limited Simultanous Call Total Table.')
hwBrasSbcCacCallTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallTotalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalEntry.setDescription('CAC Simultanous Call Total Table Entry.')
hwBrasSbcCacCallTotalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalProtocol.setDescription('Protocol.')
hwBrasSbcCacCallTotalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalThreshold.setDescription('Threshold.')
hwBrasSbcCacCallTotalPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalPercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalPercent.setDescription('Percent.')
hwBrasSbcCacCallTotalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 3, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallTotalRowStatus.setDescription('RowStatus.')
hwBrasSbcCacCallRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcCacCallRateTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRateTable.setDescription('CAC Limited Per-user Simultanous Call Rate Table.')
hwBrasSbcCacCallRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallRateProtocol"))
if mibBuilder.loadTexts: hwBrasSbcCacCallRateEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRateEntry.setDescription('CAC Per-user Simultanous Call Rate Table Entry.')
hwBrasSbcCacCallRateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcCacCallRateProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRateProtocol.setDescription('Protocol.')
hwBrasSbcCacCallRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallRateThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRateThreshold.setDescription('Threshold.')
hwBrasSbcCacCallRatePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallRatePercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRatePercent.setDescription('Percent.')
hwBrasSbcCacCallRateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 4, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacCallRateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacCallRateRowStatus.setDescription('RowStatus.')
hwBrasSbcCacRegTotalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalTable.setDescription('CAC Limited Register Total Table.')
hwBrasSbcCacRegTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegTotalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalEntry.setDescription('CAC Register Total Table Entry.')
hwBrasSbcCacRegTotalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalProtocol.setDescription('Protocol.')
hwBrasSbcCacRegTotalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalThreshold.setDescription('Threshold.')
hwBrasSbcCacRegTotalPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalPercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalPercent.setDescription('Percent.')
hwBrasSbcCacRegTotalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegTotalRowStatus.setDescription('RowStatus.')
hwBrasSbcCacRegRateTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcCacRegRateTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRateTable.setDescription('CAC Limited Per-user Register Rate Table.')
hwBrasSbcCacRegRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegRateProtocol"))
if mibBuilder.loadTexts: hwBrasSbcCacRegRateEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRateEntry.setDescription('CAC Per-user Register Rate Table Entry.')
hwBrasSbcCacRegRateProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6, 1, 1), HWBrasSecurityProtocol())
if mibBuilder.loadTexts: hwBrasSbcCacRegRateProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRateProtocol.setDescription('Protocol.')
hwBrasSbcCacRegRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegRateThreshold.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRateThreshold.setDescription('Threshold.')
hwBrasSbcCacRegRatePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegRatePercent.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRatePercent.setDescription('Percent.')
hwBrasSbcCacRegRateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcCacRegRateRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacRegRateRowStatus.setDescription('RowStatus.')
hwBrasSbcIPCarBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7), )
if mibBuilder.loadTexts: hwBrasSbcIPCarBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBandwidthTable.setDescription('Description.')
hwBrasSbcIPCarBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIPCarBWVpn"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIPCarBWAddress"))
if mibBuilder.loadTexts: hwBrasSbcIPCarBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBandwidthEntry.setDescription('Description.')
hwBrasSbcIPCarBWVpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)))
if mibBuilder.loadTexts: hwBrasSbcIPCarBWVpn.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBWVpn.setDescription('Description.')
hwBrasSbcIPCarBWAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIPCarBWAddress.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBWAddress.setDescription('Description.')
hwBrasSbcIPCarBWValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000000)).clone(1000000000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIPCarBWValue.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBWValue.setDescription('Description.')
hwBrasSbcIPCarBWRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 5, 2, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIPCarBWRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIPCarBWRowStatus.setDescription('Description.')
hwBrasSbcUdpTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6))
hwBrasSbcUdpTunnelLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1))
hwBrasSbcUdpTunnelEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelEnable.setDescription('UdpTunnelEnable Udp Tunnel Status. Default: disabled.Value range(disabled[1],server[2],client[3])')
hwBrasSbcUdpTunnelType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notype", 1), ("server", 2), ("client", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelType.setDescription('UdpTunnelType Udp Tunnel Type. 1 no type 2 server 3 client')
hwBrasSbcUdpTunnelSctpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelSctpAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelSctpAddr.setDescription('SctpAddress Udp Tunnel Sctp Address. Default 0.0.0.0 no address.')
hwBrasSbcUdpTunnelTunnelTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelTunnelTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelTunnelTimer.setDescription('UdpTimerLength Udp tunnel tunnel mode node timer length Range: 1-65535 Unit: seconds Default: 900')
hwBrasSbcUdpTunnelTransportTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelTransportTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelTransportTimer.setDescription('SctpTimerLength Udp tunnel sctp node timer length. Range: 1-65535 Unit: seconds Default: 900')
hwBrasSbcUdpTunnelTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2))
hwBrasSbcUdpTunnelPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolTable.setDescription('Udp Tunnel Address Pool Table.')
hwBrasSbcUdpTunnelPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPoolIndex"))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolEntry.setDescription('Udp Tunnel Address Pool Table Entry.')
hwBrasSbcUdpTunnelPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolIndex.setDescription('Index for Pool. ')
hwBrasSbcUdpTunnelPoolStartIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1, 1, 2), IpAddress().clone(hexValue="7FA8B501")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolStartIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolStartIP.setDescription('Start Address. Default: 172.168.181.1')
hwBrasSbcUdpTunnelPoolEndIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1, 1, 3), IpAddress().clone(hexValue="7FA8EF98")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolEndIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolEndIP.setDescription('End Address. Default: 172.168.239.152')
hwBrasSbcUdpTunnelPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPoolRowStatus.setDescription('Row Status.')
hwBrasSbcUdpTunnelPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortTable.setDescription('Udp Tunnel Port Table.')
hwBrasSbcUdpTunnelPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPortPort"))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortEntry.setDescription('Udp Tunnel Port Table Entry.')
hwBrasSbcUdpTunnelPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2))))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortProtocol.setDescription('Support Protocol of Udp Tunnel. 1 udp 2 tcp')
hwBrasSbcUdpTunnelPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortPort.setDescription('Port.')
hwBrasSbcUdpTunnelPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelPortRowStatus.setDescription('Row Status.')
hwBrasSbcUdpTunnelIfPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortTable.setDescription('Udp Tunnel Interface Port Table.')
hwBrasSbcUdpTunnelIfPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelIfPortAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelIfPortPort"))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortEntry.setDescription('Udp Tunnel Interface Port Table Entry.')
hwBrasSbcUdpTunnelIfPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 3, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortAddr.setDescription('Address in the interface.')
hwBrasSbcUdpTunnelIfPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)))
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortPort.setDescription('Port.')
hwBrasSbcUdpTunnelIfPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 6, 2, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUdpTunnelIfPortRowStatus.setDescription('Row Status.')
hwBrasSbcIms = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7))
hwBrasSbcImsLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1))
hwBrasSbcImsQosEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsQosEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsQosEnable.setDescription('Ims QoS Enable Status. default: disabled')
hwBrasSbcImsMediaProxyEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 2), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMediaProxyEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMediaProxyEnable.setDescription('Ims Mediaproxy Enable Status. default: disabled')
hwBrasSbcImsQosLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 3), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsQosLogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsQosLogEnable.setDescription('Ims QoS Syslog Enable Status. default: enabled')
hwBrasSbcImsMediaProxyLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 4), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMediaProxyLogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMediaProxyLogEnable.setDescription('Ims Mediaproxy Syslog Enable Status. default: enabled')
hwBrasSbcImsMGStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 5), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGStatus.setDescription('Ims MG Enable Status. default: disabled')
hwBrasSbcImsMGConnectTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 3600000)).clone(1000)).setUnits('ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGConnectTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGConnectTimer.setDescription('MG Connect Aging Time. Range: 100-3600000 Default: 1000 Unit: millisecond')
hwBrasSbcImsMGAgingTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 36000)).clone(120)).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGAgingTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGAgingTimer.setDescription('MG Aging Time. Range: 0-36000 Default: 120 Unit: second')
hwBrasSbcImsMGCallSessionTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 14400)).clone(30)).setUnits('m').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGCallSessionTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGCallSessionTimer.setDescription('MG Call Session Aging Time. Range: 1-14400 Default: 30 Unit: minute')
hwBrasSbcSctpStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 9), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSctpStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSctpStatus.setDescription('Sctp Enable Status. default: disabled')
hwBrasSbcIdlecutRtcpTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(300)).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIdlecutRtcpTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdlecutRtcpTimer.setDescription('RTCP Media Stream Detect Time. Range: 5-3600 Default: 300 Unit: second')
hwBrasSbcIdlecutRtpTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(30)).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIdlecutRtpTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdlecutRtpTimer.setDescription('RTP Media Stream Detect Time. Range: 5-3600 Default: 30 Unit: second')
hwBrasSbcMediaDetectStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 12), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaDetectStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaDetectStatus.setDescription('Media Detect Enable Status. default: disabled')
hwBrasSbcMediaOnewayStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 13), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMediaOnewayStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMediaOnewayStatus.setDescription('Media Detect One-way Enable Status. default: disabled')
hwBrasSbcImsMgLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 14), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMgLogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMgLogEnable.setDescription('Ims Mg Syslog Enable Status. default: disabled')
hwBrasSbcImsStatisticsEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 15), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsStatisticsEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsStatisticsEnable.setDescription('Ims Statistics Enable Status. default: disabled')
hwBrasSbcTimerMediaAging = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600)).clone(300)).setUnits('s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcTimerMediaAging.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTimerMediaAging.setDescription('RTP Media Stream Aging Time. Range: 5-3600 Default: 300 Unit: second')
hwBrasSbcImsTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2))
hwBrasSbcImsConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcImsConnectTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectTable.setDescription('Set Ims Connection Table')
hwBrasSbcImsConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectIndex"))
if mibBuilder.loadTexts: hwBrasSbcImsConnectEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectEntry.setDescription('Set Ims Connection Table Entry.')
hwBrasSbcImsConnectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: hwBrasSbcImsConnectIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectIndex.setDescription('Index of the Connection Range : 0-9')
hwBrasSbcImsConnectPepID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectPepID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectPepID.setDescription('Pep Id of Connection. Range:1-32.')
hwBrasSbcImsConnectCliType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("brasSbci", 2), ("goi", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliType.setDescription('Client Type of Connection.')
hwBrasSbcImsConnectCliIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliIP.setDescription('Client Ip Address of Connection.')
hwBrasSbcImsConnectCliPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 50000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectCliPort.setDescription('Client Port of Connection.')
hwBrasSbcImsConnectServIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 15), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectServIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectServIP.setDescription('Server Ip Address of Connection.')
hwBrasSbcImsConnectServPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 50000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectServPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectServPort.setDescription('Server Port of Connection.')
hwBrasSbcImsConnectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsConnectRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsConnectRowStatus.setDescription('Row Status.')
hwBrasSbcImsBandTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcImsBandTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandTable.setDescription('Set Ims Band Table.')
hwBrasSbcImsBandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandIndex"))
if mibBuilder.loadTexts: hwBrasSbcImsBandEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandEntry.setDescription('Set Ims Band Table Entry.')
hwBrasSbcImsBandIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hwBrasSbcImsBandIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandIndex.setDescription('Interface number. Range: 1-64.')
hwBrasSbcImsBandIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcImsBandIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandIfIndex.setDescription('Index of the Interface.')
hwBrasSbcImsBandIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcImsBandIfName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandIfName.setDescription('Name of the Interface.')
hwBrasSbcImsBandIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fe", 1), ("ge", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcImsBandIfType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandIfType.setDescription('Type of the Interface:FE,GE.')
hwBrasSbcImsBandValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsBandValue.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandValue.setDescription('Bandwidth Value Range:1-1024 Default: FE 100Mbps GE 1024Mbps')
hwBrasSbcImsBandRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 2, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsBandRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsBandRowStatus.setDescription('Row Status.')
hwBrasSbcImsActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcImsActiveTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsActiveTable.setDescription('Active the Ims Connection Table.')
hwBrasSbcImsActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsActiveConnectId"))
if mibBuilder.loadTexts: hwBrasSbcImsActiveEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsActiveEntry.setDescription('Active the Ims Connection Table Entry.')
hwBrasSbcImsActiveConnectId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: hwBrasSbcImsActiveConnectId.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsActiveConnectId.setDescription('Index of the Connection Range : 0-9')
hwBrasSbcImsActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sleep", 1), ("active", 2), ("online", 3))).clone('sleep')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsActiveStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsActiveStatus.setDescription('Connection Status:sleep,active. ')
hwBrasSbcImsActiveRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 3, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsActiveRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsActiveRowStatus.setDescription('Row Status.')
hwBrasSbcImsMGTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcImsMGTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGTable.setDescription('Set MG Table.')
hwBrasSbcImsMGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIndex"))
if mibBuilder.loadTexts: hwBrasSbcImsMGEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGEntry.setDescription('Set MG Table Entry.')
hwBrasSbcImsMGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14)))
if mibBuilder.loadTexts: hwBrasSbcImsMGIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIndex.setDescription('Index of the MG Range : 0-14')
hwBrasSbcImsMGDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGDescription.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDescription.setDescription('Description of the MG.')
hwBrasSbcImsMGTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 12), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGTableStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGTableStatus.setDescription('Status of the MG Default:disabled')
hwBrasSbcImsMGProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sctp", 1), ("udp", 2), ("tcp", 3))).clone('udp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGProtocol.setDescription('Protocol of the MG 1:SCTP 2:UDP 3:TCP Default:UDP')
hwBrasSbcImsMGMidString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGMidString.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGMidString.setDescription('MID of the MG.')
hwBrasSbcImsMGInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGInstanceName.setDescription('SBC instance which the MG belongs to.')
hwBrasSbcImsMGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGRowStatus.setDescription('Row Status of the MG.')
hwBrasSbcImsMGIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcImsMGIPTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPTable.setDescription('Set MG IP Table.')
hwBrasSbcImsMGIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPType"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPSN"))
if mibBuilder.loadTexts: hwBrasSbcImsMGIPEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPEntry.setDescription('Set MG IP Table Entry.')
hwBrasSbcImsMGIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mg", 1), ("mgc", 2))))
if mibBuilder.loadTexts: hwBrasSbcImsMGIPType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPType.setDescription('Type of the IP table 1:MG 2:MGC')
hwBrasSbcImsMGIPSN = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hwBrasSbcImsMGIPSN.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPSN.setDescription('Index of the IP table Range:1-4')
hwBrasSbcImsMGIPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 6))).clone(namedValues=NamedValues(("ipv4", 4), ("ipv6", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGIPVersion.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPVersion.setDescription('IP version of the IP table 4:ipv4 6:ipv6')
hwBrasSbcImsMGIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGIPAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPAddr.setDescription('Address of the IP table.')
hwBrasSbcImsMGIPInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 47))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcImsMGIPInterface.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPInterface.setDescription('MG Interface.')
hwBrasSbcImsMGIPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGIPPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPPort.setDescription('Port of the IP table.')
hwBrasSbcImsMGIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 5, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGIPRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGIPRowStatus.setDescription('Row Status of the IP table.')
hwBrasSbcImsMGDomainTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainTable.setDescription('Set MG Domain Table.')
hwBrasSbcImsMGDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGDomainType"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGDomainName"))
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainEntry.setDescription('Set MG Domain Table Entry.')
hwBrasSbcImsMGDomainType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inner", 1), ("outter", 2))))
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainType.setDescription('Type of the domain table 1:inner 2:outer')
hwBrasSbcImsMGDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainName.setDescription('Name of the domain table.')
hwBrasSbcImsMGDomainMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2501, 2999))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainMapIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainMapIndex.setDescription('Mapgroup index of the domain table Range:2501-2999')
hwBrasSbcImsMGDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 7, 2, 6, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsMGDomainRowStatus.setDescription('Row Status of the domain table.')
hwBrasSbcDualHoming = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8))
hwBrasSbcDHLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8, 1))
hwBrasSbcDHSIPDetectStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectStatus.setDescription('Softswitch Detect Enable Status. Default: disabled This leaf for detect SoftSwitch status.')
hwBrasSbcDHSIPDetectTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7200)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectTimer.setDescription('Detect Time. Range: 1-7200 Default: 10 Unit: seconds')
hwBrasSbcDHSIPDetectSourcePort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1024, 10000)).clone(5060)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectSourcePort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectSourcePort.setDescription('Detect Source Port. Range: 1024-10000 Default: 5060')
hwBrasSbcDHSIPDetectFailCount = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectFailCount.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSIPDetectFailCount.setDescription('Detect Fail Limit. Range: 1-100 Default: 3')
hwBrasSbcQoSReport = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 9))
hwBrasSbcQRLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 9, 1))
hwBrasSbcQRStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 9, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcQRStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcQRStatus.setDescription('QoS report enable status. Default: disabled')
hwBrasSbcQRBandWidth = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 40960)).clone(1024)).setUnits('packetspersecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcQRBandWidth.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcQRBandWidth.setDescription('QoS report RTCP packet bandwidth. Range: 0-40960 Default: 1024 Unit: packets/second')
hwBrasSbcQRTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 9, 2))
hwBrasSbcMediaDefend = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11))
hwBrasSbcMediaDefendLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 1))
hwBrasSbcMDStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMDStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatus.setDescription('Description.')
hwBrasSbcMediaDefendTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2))
hwBrasSbcMDLengthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcMDLengthTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthTable.setDescription('Description.')
hwBrasSbcMDLengthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDLengthIndex"))
if mibBuilder.loadTexts: hwBrasSbcMDLengthEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthEntry.setDescription('Description.')
hwBrasSbcMDLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtp", 1), ("rtcp", 2))))
if mibBuilder.loadTexts: hwBrasSbcMDLengthIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthIndex.setDescription('Description.')
hwBrasSbcMDLengthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(28, 65535)).clone(28)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMDLengthMin.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthMin.setDescription('Description.')
hwBrasSbcMDLengthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(28, 65535)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMDLengthMax.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthMax.setDescription('Description.')
hwBrasSbcMDLengthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 1, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMDLengthRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDLengthRowStatus.setDescription('Description.')
hwBrasSbcMDStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcMDStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticTable.setDescription('Description.')
hwBrasSbcMDStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticIndex"))
if mibBuilder.loadTexts: hwBrasSbcMDStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticEntry.setDescription('Description.')
hwBrasSbcMDStatisticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtp", 1), ("rtcp", 2))))
if mibBuilder.loadTexts: hwBrasSbcMDStatisticIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticIndex.setDescription('Description.')
hwBrasSbcMDStatisticMinDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMDStatisticMinDrop.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticMinDrop.setDescription('Description.')
hwBrasSbcMDStatisticMaxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMDStatisticMaxDrop.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticMaxDrop.setDescription('Description.')
hwBrasSbcMDStatisticFragDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMDStatisticFragDrop.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticFragDrop.setDescription('Description.')
hwBrasSbcMDStatisticFlowDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMDStatisticFlowDrop.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticFlowDrop.setDescription('Description.')
hwBrasSbcMDStatisticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 11, 2, 2, 1, 51), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMDStatisticRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMDStatisticRowStatus.setDescription('Description.')
hwBrasSbcSignalingNat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12))
hwBrasSbcSignalingNatLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 1))
hwBrasSbcNatSessionAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 40000)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcNatSessionAgingTime.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatSessionAgingTime.setDescription('Sbc signaling nat session aging time (s). Range: 1-40000 Default: 20')
hwBrasSbcSignalingNatTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2))
hwBrasSbcNatCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcNatCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatCfgTable.setDescription('Sbc signaling nat configuration.')
hwBrasSbcNatCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatGroupIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatVpnNameIndex"))
if mibBuilder.loadTexts: hwBrasSbcNatCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatCfgEntry.setDescription('Sbc signaling nat configuration.')
hwBrasSbcNatGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcNatGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatGroupIndex.setDescription('Sbc signaling nat group index.')
hwBrasSbcNatVpnNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcNatVpnNameIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatVpnNameIndex.setDescription('Sbc signaling nat source vpn name.')
hwBrasSbcNatInstanceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcNatInstanceName.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatInstanceName.setDescription('Sbc signaling nat sbc instance name.')
hwBrasSbcNatCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 1, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcNatCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatCfgRowStatus.setDescription('Row Status.')
hwBrasSbcNatAddressGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcNatAddressGroupTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatAddressGroupTable.setDescription(' NAT address pool information table.')
hwBrasSbcNatAddressGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpIndex"))
if mibBuilder.loadTexts: hwBrasSbcNatAddressGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNatAddressGroupEntry.setDescription(' NAT address pool information table entry. ')
hwNatAddrGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)))
if mibBuilder.loadTexts: hwNatAddrGrpIndex.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpIndex.setDescription(' The index of address pool This item is index. ')
hwNatAddrGrpBeginningIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNatAddrGrpBeginningIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpBeginningIpAddr.setDescription(' The beginning IP address of address pool ')
hwNatAddrGrpEndingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNatAddrGrpEndingIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpEndingIpAddr.setDescription(' The ending IP address of address pool ')
hwNatAddrGrpRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwNatAddrGrpRefCount.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpRefCount.setDescription(' This address pool reference count. ')
hwNatAddrGrpVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNatAddrGrpVpnName.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpVpnName.setDescription(' Vpn-Instance name. ')
hwNatAddrGrpRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 12, 2, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwNatAddrGrpRowstatus.setStatus('current')
if mibBuilder.loadTexts: hwNatAddrGrpRowstatus.setDescription(' Row status Only support CreateAndGo and Destroy. ')
hwBrasSbcBandwidthLimit = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 13))
hwBrasSbcBWLimitLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 13, 1))
hwBrasSbcBWLimitType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 13, 1, 1), HwBrasBWLimitType().clone('qos')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcBWLimitType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBWLimitType.setDescription('SBC bandwidth-limit type. Default: qos')
hwBrasSbcBWLimitValue = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 2, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10485760)).clone(6291456)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcBWLimitValue.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcBWLimitValue.setDescription('SBC maximum bandwidth(K Bytes). Range: 1-10485760 Default: 6291456')
hwBrasSbcView = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3))
hwBrasSbcViewLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 1))
hwBrasSbcSoftVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSoftVersion.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSoftVersion.setDescription('Software Version Information.')
hwBrasSbcCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcCpuUsage.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCpuUsage.setDescription('Cpu Usage Information. Range: 0-100 Default: NA')
hwBrasSbcUmsVersion = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUmsVersion.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUmsVersion.setDescription('Software version information for UMS.')
hwBrasSbcViewTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2))
hwBrasSbcStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcStatisticTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticTable.setDescription('Statistic Table.')
hwBrasSbcStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticOffset"))
if mibBuilder.loadTexts: hwBrasSbcStatisticEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticEntry.setDescription('Statistic Table Entry.')
hwBrasSbcStatisticIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hwBrasSbcStatisticIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticIndex.setDescription('Statistic Index.')
hwBrasSbcStatisticOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 143))).setUnits('hours')
if mibBuilder.loadTexts: hwBrasSbcStatisticOffset.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticOffset.setDescription('Statistic Hours Offset.')
hwBrasSbcStatisticDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcStatisticDesc.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticDesc.setDescription('Statistic Description.')
hwBrasSbcStatisticValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcStatisticValue.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticValue.setDescription('Statistic Value.')
hwBrasSbcStatisticTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 1, 3, 2, 1, 1, 5), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcStatisticTime.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatisticTime.setDescription('Statistic Time.')
hwBrasSbcSip = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2))
hwBrasSbcSipLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1))
hwBrasSbcSipEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipEnable.setDescription('SIP Enable Status. Default: enabled')
hwBrasSbcSipSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSyslogEnable.setDescription('SIP Syslog Enable Status. Default: enabled')
hwBrasSbcSipAnonymity = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipAnonymity.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipAnonymity.setDescription('SIP Anonymous card.')
hwBrasSbcSipCheckheartEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 4), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipCheckheartEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipCheckheartEnable.setDescription('SIP Check SIP Heartbeat Enable Status. Default: disabled')
hwBrasSbcSipCallsessionTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400)).clone(720)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipCallsessionTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipCallsessionTimer.setDescription('SIP Callsession Aging Time. Range: 0-14400 Default: 720 Unit: minutes')
hwBrasSbcSipPDHCountLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipPDHCountLimit.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipPDHCountLimit.setDescription('SIP Dual-homing Failed Register Count Limit. Range: 1-100 Default: 6')
hwBrasSbcSipRegReduceStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 7), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipRegReduceStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipRegReduceStatus.setDescription('SIP Register Reduce Enable States. Default: disabled')
hwBrasSbcSipRegReduceTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(60)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipRegReduceTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipRegReduceTimer.setDescription('SIP Register Expire Reduced. Range: 1-600 Default: 60 Unit: minutes')
hwBrasSbcSipTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2))
hwBrasSbcSipWellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortTable.setDescription('SIP Wellknown Port Table. obsolete')
hwBrasSbcSipWellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipWellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipWellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipWellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortEntry.setDescription('SIP Wellknown Port Table Entry.')
hwBrasSbcSipWellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortIndex.setDescription('SIP Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcSipWellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortProtocol.setDescription('SIP Wellknown Port Protocol. 1: sip Default: NA')
hwBrasSbcSipWellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortAddr.setDescription('SIP Wellknown Port IP Address.')
hwBrasSbcSipWellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortPort.setDescription('SIP Wellknown Port Port.')
hwBrasSbcSipWellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipWellknownPortRowStatus.setDescription('SIP Wellknown Port Row Status.')
hwBrasSbcSipSignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapTable.setDescription('SIP Signal Map Table. obsolete')
hwBrasSbcSipSignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipSignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipSignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapEntry.setDescription('SIP Signal Map Table Entry.')
hwBrasSbcSipSignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapAddr.setDescription('SIP Signal Map Table IP Address.')
hwBrasSbcSipSignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapProtocol.setDescription('SIP Signal Map Table Protocol.')
hwBrasSbcSipSignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapNumber.setDescription('SIP Signal Map Table Map Number.')
hwBrasSbcSipSignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipSignalMapAddrType.setDescription('SIP Signal Map Table Map Type. ')
hwBrasSbcSipMediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapTable.setDescription('SIP Media Map Table. obsolete')
hwBrasSbcSipMediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipMediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipMediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapEntry.setDescription('SIP Media Map Table Entry.')
hwBrasSbcSipMediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapAddr.setDescription('SIP Media Map Table IP Address.')
hwBrasSbcSipMediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapProtocol.setDescription('SIP Media Map Table Protocol.')
hwBrasSbcSipMediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipMediaMapNumber.setDescription('SIP Media Map Table Media Map Number.')
hwBrasSbcSipIntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalTable.setDescription('SIP Intercom Map Signal Table. obsolete')
hwBrasSbcSipIntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalEntry.setDescription('SIP Intercom Map Signal Table Entry.')
hwBrasSbcSipIntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalAddr.setDescription('Intercom Address Map SIP Signal Map Table IP Address.')
hwBrasSbcSipIntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalProtocol.setDescription('Intercom Address Map SIP Signal Map Table Protocol.')
hwBrasSbcSipIntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapSignalNumber.setDescription('Intercom Address Map SIP Signal Map Table Map Number.')
hwBrasSbcSipIntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaTable.setDescription('SIP Intercom Map Media Table. obsolete')
hwBrasSbcSipIntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaEntry.setDescription('SIP Intercom Map Media Table Entry.')
hwBrasSbcSipIntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaAddr.setDescription('Intercom Address Map SIP Media Map Table IP Address.')
hwBrasSbcSipIntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaProtocol.setDescription('Intercom Address Map SIP Media Map Table Protocol.')
hwBrasSbcSipIntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipIntercomMapMediaNumber.setDescription('Intercom Address Map SIP Media Map Table Map Number.')
hwBrasSbcSipStatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketTable.setDescription('SIP Statistic of Signaling Packet Table.')
hwBrasSbcSipStatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketEntry.setDescription('SIP Statistic of Signaling Packet Table Entry.')
hwBrasSbcSipStatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("sip", 1))))
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcSipStatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcSipStatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcSipStatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcSipStatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcSipStatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 2, 2, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSipStatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcMgcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3))
hwBrasSbcMgcpLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1))
hwBrasSbcMgcpSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSyslogEnable.setDescription('MGCP Syslog Enable Status. Default: enabled')
hwBrasSbcMgcpAuepTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpAuepTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpAuepTimer.setDescription('MGCP MG Aging Time. Range: 0-3600 Default: 600 Unit: seconds')
hwBrasSbcMgcpCcbTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 14400)).clone(30)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpCcbTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpCcbTimer.setDescription('MGCP CCB Aging Time. Range: 10-14400 Default: 30 Unit: minutes')
hwBrasSbcMgcpTxTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(6, 60)).clone(6)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpTxTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpTxTimer.setDescription('MGCP Transaction Aging Time. Range: 6-60 Default: 6 Unit: seconds')
hwBrasSbcMgcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 5), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpEnable.setDescription('MGCP Enable Status. Default: enabled')
hwBrasSbcMgcpPDHCountLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpPDHCountLimit.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpPDHCountLimit.setDescription('MGCP Dual-homing Failed Register Count Limit. Range: 1-100 Default: 6')
hwBrasSbcMgcpTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3))
hwBrasSbcMgcpWellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1), )
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortTable.setDescription('MGCP Wellknown Port Table. obsolete')
hwBrasSbcMgcpWellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpWellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpWellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpWellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortEntry.setDescription('MGCP Wellknown Port Table Entry.')
hwBrasSbcMgcpWellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortIndex.setDescription('MGCP Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcMgcpWellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortProtocol.setDescription('MGCP Wellknown Port Protocol. 1: mgcp Default: NA')
hwBrasSbcMgcpWellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortAddr.setDescription('MGCP Wellknown Port IP Address.')
hwBrasSbcMgcpWellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortPort.setDescription('MGCP Wellknown Port Port.')
hwBrasSbcMgcpWellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpWellknownPortRowStatus.setDescription('MGCP Wellknown Port Row Status.')
hwBrasSbcMgcpSignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2), )
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapTable.setDescription('MGCP Signal Map Table. obsolete')
hwBrasSbcMgcpSignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpSignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpSignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapEntry.setDescription('MGCP Signal Map Table Entry.')
hwBrasSbcMgcpSignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapAddr.setDescription('MGCP Signal Map Table IP Address.')
hwBrasSbcMgcpSignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapProtocol.setDescription('MGCP Signal Map Table Protocol.')
hwBrasSbcMgcpSignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapNumber.setDescription('MGCP Signal Map Table Map Number.')
hwBrasSbcMgcpSignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpSignalMapAddrType.setDescription('MGCP Signal Map Table Map Type.')
hwBrasSbcMgcpMediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 3), )
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapTable.setDescription('MGCP Media Map Table. obsolete')
hwBrasSbcMgcpMediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpMediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpMediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapEntry.setDescription('MGCP Media Map Table Entry.')
hwBrasSbcMgcpMediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapAddr.setDescription('MGCP Media Map Table IP Address.')
hwBrasSbcMgcpMediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapProtocol.setDescription('MGCP Media Map Table Protocol.')
hwBrasSbcMgcpMediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpMediaMapNumber.setDescription('MGCP Media Map Table Media Map Number.')
hwBrasSbcMgcpIntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 4), )
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalTable.setDescription('MGCP Intercom Map Signal Table. obsolete')
hwBrasSbcMgcpIntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalEntry.setDescription('MGCP Intercom Map Signal Table Entry.')
hwBrasSbcMgcpIntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalAddr.setDescription('Intercom Address Map MGCP Signal Map Table IP Address.')
hwBrasSbcMgcpIntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalProtocol.setDescription('Intercom Address Map MGCP Signal Map Table Protocol.')
hwBrasSbcMgcpIntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapSignalNumber.setDescription('Intercom Address Map MGCP Signal Map Table Map Number.')
hwBrasSbcMgcpIntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 5), )
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaTable.setDescription('MGCP Intercom Map Media Table. obsolete')
hwBrasSbcMgcpIntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaEntry.setDescription('MGCP Intercom Map Media Table Entry.')
hwBrasSbcMgcpIntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaAddr.setDescription('Intercom Address Map MGCP Media Map Table IP Address.')
hwBrasSbcMgcpIntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaProtocol.setDescription('Intercom Address Map MGCP Media Map Table Protocol.')
hwBrasSbcMgcpIntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpIntercomMapMediaNumber.setDescription('Intercom Address Map MGCP Media Map Table Map Number.')
hwBrasSbcMgcpStatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6), )
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketTable.setDescription('MGCP Statistic of Signaling Packet Table.')
hwBrasSbcMgcpStatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketEntry.setDescription('MGCP Statistic of Signaling Packet Table Entry.')
hwBrasSbcMgcpStatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mgcp", 1))))
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcMgcpStatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcMgcpStatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcMgcpStatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcMgcpStatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcMgcpStatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 3, 3, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcMgcpStatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcIadms = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4))
hwBrasSbcIadmsLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 1))
hwBrasSbcIadmsEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsEnable.setDescription('IADMS Enable Status. Default: enabled')
hwBrasSbcIadmsSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSyslogEnable.setDescription('IADMS Syslog Enable Status. Default: enabled')
hwBrasSbcIadmsRegRefreshEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 1, 3), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsRegRefreshEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsRegRefreshEnable.setDescription('IADMS Register Refresh Enable Status. Default: disabled')
hwBrasSbcIadmsTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(20)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsTimer.setDescription('IADMS Register-User Aging Time. Range: 0-30 Default: 20 Unit: minutes')
hwBrasSbcIadmsTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2))
hwBrasSbcIadmsWellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortTable.setDescription('IADMS Wellknown Port Table. obsolete')
hwBrasSbcIadmsWellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsWellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsWellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsWellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortEntry.setDescription('IADMS Wellknown Port Table Entry.')
hwBrasSbcIadmsWellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("iadmsaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortIndex.setDescription('IADMS Wellknown Port Index. 1: Client Side Ip Address 2: IADMS IP Address Default: NA')
hwBrasSbcIadmsWellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("snmp", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortProtocol.setDescription('IADMS Wellknown Port Protocol. 1: snmp Default: NA')
hwBrasSbcIadmsWellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortAddr.setDescription('IADMS Wellknown Port IP Address.')
hwBrasSbcIadmsWellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortPort.setDescription('IADMS Wellknown Port Port.')
hwBrasSbcIadmsWellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsWellknownPortRowStatus.setDescription('IADMS Wellknown Port Row Status.')
hwBrasSbcIadmsMibRegTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegTable.setDescription('IADMS Support Mib Version Table.')
hwBrasSbcIadmsMibRegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMibRegVersion"))
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegEntry.setDescription('IADMS Support Mib Version Table Entry.')
hwBrasSbcIadmsMibRegVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("amend", 1), ("v150", 2), ("v152", 3), ("v160", 4), ("v210", 5))))
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegVersion.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegVersion.setDescription('IADMS Support Mib Version. 1: amend 2: v150 3: v152 4: v160 5: v210')
hwBrasSbcIadmsMibRegRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegRegister.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegRegister.setDescription('IADMS Support Mib Version Infomation. 1: true 2: faulse default: true')
hwBrasSbcIadmsMibRegRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 2, 1, 3), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMibRegRowStatus.setDescription('IADMS Support Mib Version Row Status.')
hwBrasSbcIadmsSignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapTable.setDescription('IADMS Signal Map Table. obsolete')
hwBrasSbcIadmsSignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsSignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsSignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapEntry.setDescription('IADMS Signal Map Table Entry.')
hwBrasSbcIadmsSignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapAddr.setDescription('IADMS Signal Map Table IP Address.')
hwBrasSbcIadmsSignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("snmp", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapProtocol.setDescription('IADMS Signal Map Table Protocol.')
hwBrasSbcIadmsSignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapNumber.setDescription('IADMS Signal Map Table Map Number.')
hwBrasSbcIadmsSignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsSignalMapAddrType.setDescription('IADMS Signal Map Table Map Type.')
hwBrasSbcIadmsMediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapTable.setDescription('IADMS Media Map Table. obsolete')
hwBrasSbcIadmsMediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapEntry.setDescription('IADMS Media Map Table Entry.')
hwBrasSbcIadmsMediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapAddr.setDescription('IADMS Media Map Table IP Address.')
hwBrasSbcIadmsMediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("snmp", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapProtocol.setDescription('IADMS Media Map Table Protocol.')
hwBrasSbcIadmsMediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsMediaMapNumber.setDescription('IADMS Media Map Table Media Map Number.')
hwBrasSbcIadmsIntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalTable.setDescription('IADMS Intercom Map Signal Table. obsolete')
hwBrasSbcIadmsIntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalEntry.setDescription('IADMS Intercom Map Signal Table Entry.')
hwBrasSbcIadmsIntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalAddr.setDescription('Intercom Address Map IADMS Signal Map Table IP Address.')
hwBrasSbcIadmsIntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("snmp", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalProtocol.setDescription('Intercom Address Map IADMS Signal Map Table Protocol.')
hwBrasSbcIadmsIntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapSignalNumber.setDescription('Intercom Address Map IADMS Signal Map Table Map Number.')
hwBrasSbcIadmsIntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaTable.setDescription('IADMS Intercom Map Media Table. obsolete')
hwBrasSbcIadmsIntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaEntry.setDescription('IADMS Intercom Map Media Table Entry.')
hwBrasSbcIadmsIntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaAddr.setDescription('Intercom Address Map IADMS Media Map Table IP Address.')
hwBrasSbcIadmsIntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("snmp", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaProtocol.setDescription('Intercom Address Map IADMS Media Map Table Protocol.')
hwBrasSbcIadmsIntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsIntercomMapMediaNumber.setDescription('Intercom Address Map IADMS Media Map Table Map Number.')
hwBrasSbcIadmsStatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7), )
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketTable.setDescription('IADMS Statistic of Signaling Packet Table.')
hwBrasSbcIadmsStatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketEntry.setDescription('IADMS Statistic of Signaling Packet Table Entry.')
hwBrasSbcIadmsStatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("iadms", 1))))
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcIadmsStatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcIadmsStatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcIadmsStatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcIadmsStatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcIadmsStatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 4, 2, 7, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIadmsStatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcH323 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5))
hwBrasSbcH323Leaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1))
hwBrasSbcH323Enable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323Enable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323Enable.setDescription('H.323 Enable Status. Default: enabled')
hwBrasSbcH323SyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323SyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SyslogEnable.setDescription('H.323 Syslog Enable Status. Default: enabled')
hwBrasSbcH323CallsessionTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 24)).clone(24)).setUnits('hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323CallsessionTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323CallsessionTimer.setDescription('H.323 Callsession Aging Time. Range: 3-24 Default: 24 Unit: hours')
hwBrasSbcH323Q931WellknownPort = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 49999)).clone(1720)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323Q931WellknownPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323Q931WellknownPort.setDescription('H.323 Q.931 Wellknown Port Number. Range: 1-49999 Default: 1720')
hwBrasSbcH323PDHCountLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323PDHCountLimit.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323PDHCountLimit.setDescription('H.323 Dual-homing Failed Register Count Limit. Range: 1-100 Default: 6')
hwBrasSbcH323Tables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2))
hwBrasSbcH323WellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortTable.setDescription('H.323 Wellknown Port Table. obsolete')
hwBrasSbcH323WellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323WellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323WellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323WellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortEntry.setDescription('H.323 Wellknown Port Table Entry.')
hwBrasSbcH323WellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortIndex.setDescription('H.323 Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcH323WellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ras", 1), ("q931", 2))))
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortProtocol.setDescription('H.323 Wellknown Port Protocol. 1: ras 2: q931 Default: NA')
hwBrasSbcH323WellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortAddr.setDescription('H.323 Wellknown Port IP Address.')
hwBrasSbcH323WellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortPort.setDescription('H.323 Wellknown Port Port.')
hwBrasSbcH323WellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323WellknownPortRowStatus.setDescription('H.323 Wellknown Port Row Status.')
hwBrasSbcH323SignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapTable.setDescription('H.323 Signal Map Table. obsolete')
hwBrasSbcH323SignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323SignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323SignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapEntry.setDescription('H.323 Signal Map Table Entry.')
hwBrasSbcH323SignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapAddr.setDescription('H.323 Signal Map Table IP Address.')
hwBrasSbcH323SignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ras", 1), ("q931", 2), ("h245", 3))))
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapProtocol.setDescription('H.323 Signal Map Table Protocol.')
hwBrasSbcH323SignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapNumber.setDescription('H.323 Signal Map Table Map Number.')
hwBrasSbcH323SignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323SignalMapAddrType.setDescription('H.323 Signal Map Table Map Type.')
hwBrasSbcH323MediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapTable.setDescription('H.323 Media Map Table. obsolete')
hwBrasSbcH323MediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323MediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323MediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapEntry.setDescription('H.323 Media Map Table Entry.')
hwBrasSbcH323MediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapAddr.setDescription('H.323 Media Map Table IP Address.')
hwBrasSbcH323MediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h323", 1))))
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapProtocol.setDescription('H.323 Media Map Table Protocol.')
hwBrasSbcH323MediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323MediaMapNumber.setDescription('H.323 Media Map Table Media Map Number.')
hwBrasSbcH323IntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalTable.setDescription('H.323 Intercom Map Signal Table. obsolete')
hwBrasSbcH323IntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalEntry.setDescription('H.323 Intercom Map Signal Table Entry.')
hwBrasSbcH323IntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalAddr.setDescription('Intercom Address Map H.323 Signal Map Table IP Address.')
hwBrasSbcH323IntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ras", 1), ("q931", 2), ("h245", 3))))
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalProtocol.setDescription('Intercom Address Map H.323 Signal Map Table Protocol.')
hwBrasSbcH323IntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapSignalNumber.setDescription('Intercom Address Map H.323 Signal Map Table Map Number.')
hwBrasSbcH323IntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaTable.setDescription('H.323 Intercom Map Media Table. obsolete')
hwBrasSbcH323IntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaEntry.setDescription('H.323 Intercom Map Media Table Entry.')
hwBrasSbcH323IntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaAddr.setDescription('Intercom Address Map H.323 Media Map Table IP Address.')
hwBrasSbcH323IntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h323", 1))))
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaProtocol.setDescription('Intercom Address Map H.323 Media Map Table Protocol.')
hwBrasSbcH323IntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323IntercomMapMediaNumber.setDescription('Intercom Address Map H.323 Media Map Table Map Number.')
hwBrasSbcH323StatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketTable.setDescription('H.323 Statistic of Signaling Packet Table.')
hwBrasSbcH323StatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketEntry.setDescription('H.323 Statistic of Signaling Packet Table Entry.')
hwBrasSbcH323StatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h323", 1))))
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcH323StatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcH323StatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcH323StatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcH323StatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcH323StatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 5, 2, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH323StatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcIdo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6))
hwBrasSbcIdoLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 1))
hwBrasSbcIdoEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIdoEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoEnable.setDescription('iDo Enable Status. Default: enabled')
hwBrasSbcIdoSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIdoSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSyslogEnable.setDescription('iDo Syslog Enable Status. Default: enabled')
hwBrasSbcIdoTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2))
hwBrasSbcIdoWellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortTable.setDescription('iDo Wellknown Port Table. obsolete')
hwBrasSbcIdoWellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoWellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoWellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoWellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortEntry.setDescription('iDo Wellknown Port Table Entry.')
hwBrasSbcIdoWellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortIndex.setDescription('iDo Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcIdoWellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ido", 1))))
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortProtocol.setDescription('iDo Wellknown Port Protocol. 1: ido Default: NA')
hwBrasSbcIdoWellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortAddr.setDescription('iDo Wellknown Port IP Address.')
hwBrasSbcIdoWellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortPort.setDescription('iDo Wellknown Port Port.')
hwBrasSbcIdoWellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoWellknownPortRowStatus.setDescription('iDo Wellknown Port Row Status.')
hwBrasSbcIdoSignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapTable.setDescription('iDo Signal Map Table. obsolete')
hwBrasSbcIdoSignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoSignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoSignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapEntry.setDescription('iDo Signal Map Table Entry.')
hwBrasSbcIdoSignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapAddr.setDescription('iDo Signal Map Table IP Address.')
hwBrasSbcIdoSignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ido", 1))))
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapProtocol.setDescription('iDo Signal Map Table Protocol.')
hwBrasSbcIdoSignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapNumber.setDescription('iDo Signal Map Table Map Number.')
hwBrasSbcIdoSignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoSignalMapAddrType.setDescription('iDo Signal Map Table Map Type.')
hwBrasSbcIdoIntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalTable.setDescription('iDo Intercom Map Signal Table. obsolete')
hwBrasSbcIdoIntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoIntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoIntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalEntry.setDescription('iDo Intercom Map Signal Table Entry.')
hwBrasSbcIdoIntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalAddr.setDescription('Intercom Address Map iDo Signal Map Table IP Address.')
hwBrasSbcIdoIntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ido", 1))))
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalProtocol.setDescription('Intercom Address Map iDo Signal Map Table Protocol.')
hwBrasSbcIdoIntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoIntercomMapSignalNumber.setDescription('Intercom Address Map iDo Signal Map Table Map Number.')
hwBrasSbcIdoStatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketTable.setDescription('iDo Statistic of Signaling Packet Table.')
hwBrasSbcIdoStatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketEntry.setDescription('iDo Statistic of Signaling Packet Table Entry.')
hwBrasSbcIdoStatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ido", 1))))
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcIdoStatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcIdoStatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcIdoStatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcIdoStatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcIdoStatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 6, 2, 4, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIdoStatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcH248 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7))
hwBrasSbcH248Leaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1))
hwBrasSbcH248Enable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248Enable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248Enable.setDescription('H.248 Enable Status. Default: enabled')
hwBrasSbcH248SyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248SyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SyslogEnable.setDescription('H.248 Syslog Enable Status. Default: enabled')
hwBrasSbcH248CcbTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 14400))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248CcbTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248CcbTimer.setDescription('H.248 CCB Aging Time. Range: 10-14400 Default: 30 Unit: minutes')
hwBrasSbcH248UserAgeTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248UserAgeTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248UserAgeTimer.setDescription('H.248 Register-User Aging Time. Range: 0-3600 Default: 30 Unit: seconds')
hwBrasSbcH248PDHCountLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248PDHCountLimit.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248PDHCountLimit.setDescription('H.248 Dual-homing Failed Register Count Limit. Range: 1-100 Default: 6')
hwBrasSbcH248Tables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2))
hwBrasSbcH248WellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortTable.setDescription('H.248 Wellknown Port Table. obsolete')
hwBrasSbcH248WellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248WellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248WellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248WellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortEntry.setDescription('H.248 Wellknown Port Table Entry.')
hwBrasSbcH248WellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortIndex.setDescription('H.248 Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcH248WellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortProtocol.setDescription('H.248 Wellknown Port Protocol. 1: h248 Default: NA')
hwBrasSbcH248WellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortAddr.setDescription('H.248 Wellknown Port IP Address.')
hwBrasSbcH248WellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortPort.setDescription('H.248 Wellknown Port Port.')
hwBrasSbcH248WellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248WellknownPortRowStatus.setDescription('H.248 Wellknown Port Row Status.')
hwBrasSbcH248SignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapTable.setDescription('H.248 Signal Map Table. obsolete')
hwBrasSbcH248SignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248SignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248SignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapEntry.setDescription('H.248 Signal Map Table Entry.')
hwBrasSbcH248SignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapAddr.setDescription('H.248 Signal Map Table IP Address.')
hwBrasSbcH248SignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapProtocol.setDescription('H.248 Signal Map Table Protocol.')
hwBrasSbcH248SignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapNumber.setDescription('H.248 Signal Map Table Map Number.')
hwBrasSbcH248SignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248SignalMapAddrType.setDescription('H.248 Signal Map Table Map Type.')
hwBrasSbcH248MediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 3), )
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapTable.setDescription('H.248 Media Map Table. obsolete')
hwBrasSbcH248MediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248MediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248MediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapEntry.setDescription('H.248 Media Map Table Entry.')
hwBrasSbcH248MediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapAddr.setDescription('H.248 Media Map Table IP Address.')
hwBrasSbcH248MediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapProtocol.setDescription('H.248 Media Map Table Protocol.')
hwBrasSbcH248MediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248MediaMapNumber.setDescription('H.248 Media Map Table Media Map Number.')
hwBrasSbcH248IntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 4), )
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalTable.setDescription('H.248 Intercom Map Signal Table. obsolete')
hwBrasSbcH248IntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalEntry.setDescription('H.248 Intercom Map Signal Table Entry.')
hwBrasSbcH248IntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalAddr.setDescription('Intercom Address Map H.248 Signal Map Table IP Address.')
hwBrasSbcH248IntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalProtocol.setDescription('Intercom Address Map H.248 Signal Map Table Protocol.')
hwBrasSbcH248IntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapSignalNumber.setDescription('Intercom Address Map H.248 Signal Map Table Map Number.')
hwBrasSbcH248IntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 5), )
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaTable.setDescription('H.248 Intercom Map Media Table. obsolete')
hwBrasSbcH248IntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaEntry.setDescription('H.248 Intercom Map Media Table Entry.')
hwBrasSbcH248IntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaAddr.setDescription('Intercom Address Map H.248 Media Map Table IP Address.')
hwBrasSbcH248IntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaProtocol.setDescription('Intercom Address Map H.248 Media Map Table Protocol.')
hwBrasSbcH248IntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248IntercomMapMediaNumber.setDescription('Intercom Address Map H.248 Media Map Table Map Number.')
hwBrasSbcH248StatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6), )
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketTable.setDescription('H.248 Statistic of Signaling Packet Table.')
hwBrasSbcH248StatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketEntry.setDescription('H.248 Statistic of Signaling Packet Table Entry.')
hwBrasSbcH248StatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("h248", 1))))
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcH248StatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcH248StatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcH248StatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcH248StatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcH248StatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 7, 2, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcH248StatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcUpath = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8))
hwBrasSbcUpathLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 2))
hwBrasSbcUpathEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 2, 1), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUpathEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathEnable.setDescription('U-Path Enable Status. Default: enabled')
hwBrasSbcUpathSyslogEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 2, 2), HWBrasEnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUpathSyslogEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSyslogEnable.setDescription('U-Path Syslog Enable Status. Default: enabled')
hwBrasSbcUpathCallsessionTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)).clone(12)).setUnits('hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUpathCallsessionTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathCallsessionTimer.setDescription('U-Path Callsession Aging Time. Range: 1-24 Default: 12 Unit: hours')
hwBrasSbcUpathHeartbeatTimer = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 2, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 30)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUpathHeartbeatTimer.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathHeartbeatTimer.setDescription('U-Path Heart Beat Aging Time. Range: 10-30 Default: 10 Unit: seconds')
hwBrasSbcUpathTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3))
hwBrasSbcUpathWellknownPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1), )
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortTable.setDescription('U-Path Wellknown Port Table. obsolete')
hwBrasSbcUpathWellknownPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathWellknownPortIndex"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathWellknownPortProtocol"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathWellknownPortAddr"))
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortEntry.setDescription('U-Path Wellknown Port Table Entry.')
hwBrasSbcUpathWellknownPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clientaddr", 1), ("softxaddr", 2))))
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortIndex.setDescription('U-Path Wellknown Port Index. 1: Client Side Ip Address 2: Softx IP Address Default: NA')
hwBrasSbcUpathWellknownPortProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortProtocol.setDescription('U-Path Wellknown Port Protocol. 1: U-Path Default: NA')
hwBrasSbcUpathWellknownPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortAddr.setDescription('U-Path Wellknown Port IP Address.')
hwBrasSbcUpathWellknownPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortPort.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortPort.setDescription('U-Path Wellknown Port Port.')
hwBrasSbcUpathWellknownPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathWellknownPortRowStatus.setDescription('U-Path Wellknown Port Row Status.')
hwBrasSbcUpathSignalMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2), )
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapTable.setDescription('U-Path Signal Map Table. obsolete')
hwBrasSbcUpathSignalMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathSignalMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathSignalMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapEntry.setDescription('U-Path Signal Map Table Entry.')
hwBrasSbcUpathSignalMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapAddr.setDescription('U-Path Signal Map Table IP Address.')
hwBrasSbcUpathSignalMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapProtocol.setDescription('U-Path Signal Map Table Protocol.')
hwBrasSbcUpathSignalMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapNumber.setDescription('U-Path Signal Map Table Map Number.')
hwBrasSbcUpathSignalMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("client", 1), ("server", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapAddrType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathSignalMapAddrType.setDescription('U-Path Signal Map Table Server Map Number.')
hwBrasSbcUpathMediaMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 3), )
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapTable.setDescription('U-Path Media Map Table. obsolete')
hwBrasSbcUpathMediaMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 3, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathMediaMapAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathMediaMapProtocol"))
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapEntry.setDescription('U-Path Media Map Table Entry.')
hwBrasSbcUpathMediaMapAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapAddr.setDescription('U-Path Media Map Table IP Address.')
hwBrasSbcUpathMediaMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapProtocol.setDescription('U-Path Media Map Table Protocol.')
hwBrasSbcUpathMediaMapNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathMediaMapNumber.setDescription('U-Path Media Map Table Media Map Number.')
hwBrasSbcUpathIntercomMapSignalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 4), )
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalTable.setDescription('U-Path Intercom Map Signal Table. obsolete')
hwBrasSbcUpathIntercomMapSignalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 4, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapSignalAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapSignalProtocol"))
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalEntry.setDescription('U-Path Intercom Map Signal Table Entry.')
hwBrasSbcUpathIntercomMapSignalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalAddr.setDescription('Intercom Address Map U-Path Signal Map Table IP Address.')
hwBrasSbcUpathIntercomMapSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalProtocol.setDescription('Intercom Address Map U-Path Signal Map Table Protocol.')
hwBrasSbcUpathIntercomMapSignalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapSignalNumber.setDescription('Intercom Address Map U-Path Signal Map Table Map Number.')
hwBrasSbcUpathIntercomMapMediaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 5), )
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaTable.setDescription('U-Path Intercom Map Media Table. obsolete')
hwBrasSbcUpathIntercomMapMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 5, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapMediaAddr"), (0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapMediaProtocol"))
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaEntry.setDescription('U-Path Intercom Map Media Table Entry.')
hwBrasSbcUpathIntercomMapMediaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaAddr.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaAddr.setDescription('Intercom Address Map U-Path Media Map Table IP Address.')
hwBrasSbcUpathIntercomMapMediaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaProtocol.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaProtocol.setDescription('Intercom Address Map U-Path Media Map Table Protocol.')
hwBrasSbcUpathIntercomMapMediaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathIntercomMapMediaNumber.setDescription('Intercom Address Map U-Path Media Map Table Map Number.')
hwBrasSbcUpathStatSignalPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6), )
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketTable.setDescription('U-Path Statistic of Signaling Packet Table.')
hwBrasSbcUpathStatSignalPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketIndex"))
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketEntry.setDescription('U-Path Statistic of Signaling Packet Table Entry.')
hwBrasSbcUpathStatSignalPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("upath", 1))))
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketIndex.setDescription('Protocol.')
hwBrasSbcUpathStatSignalPacketInNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketInNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketInNumber.setDescription('Input Packet Number.')
hwBrasSbcUpathStatSignalPacketInOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketInOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketInOctet.setDescription('Input Packet Octet.')
hwBrasSbcUpathStatSignalPacketOutNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketOutNumber.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketOutNumber.setDescription('Output Packet Number.')
hwBrasSbcUpathStatSignalPacketOutOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketOutOctet.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketOutOctet.setDescription('Output Packet Octet.')
hwBrasSbcUpathStatSignalPacketRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 8, 3, 6, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcUpathStatSignalPacketRowStatus.setDescription('Row Status.')
hwBrasSbcOm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21))
hwBrasSbcOmLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 1))
hwBrasSbcRestartEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 1, 1), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRestartEnable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRestartEnable.setDescription('The switch for allow Sbc restart. Attention: enabled for permit restart device from the nexe oid!')
hwBrasSbcRestartButton = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 101))).clone(namedValues=NamedValues(("notready", 1), ("restart", 101)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcRestartButton.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcRestartButton.setDescription('The button for restart Sbc. Attention:set 101 for restart device!')
hwBrasSbcPatchLoadStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("loaded", 2))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcPatchLoadStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPatchLoadStatus.setDescription("The botton for load Sbc's patch. Operation of 'write' will be forbided if there isn't path file in flash.")
hwBrasSbcLocalizationStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 1, 4), HWBrasEnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBrasSbcLocalizationStatus.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcLocalizationStatus.setDescription("Localization enable status default: disabled notes:can't support modified operation nowdays.")
hwBrasSbcOmTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 1, 21, 2))
hwBrasSbcTrapBind = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2))
hwBrasSbcTrapBindLeaves = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 1))
hwBrasSbcTrapBindTables = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2))
hwBrasSbcTrapBindTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1), )
if mibBuilder.loadTexts: hwBrasSbcTrapBindTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindTable.setDescription('Sbc Bind Parameter Table.')
hwBrasSbcTrapBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindIndex"))
if mibBuilder.loadTexts: hwBrasSbcTrapBindEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindEntry.setDescription('Sbc Bind Parameter Table Entry.')
hwBrasSbcTrapBindIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("trapbind", 1))))
if mibBuilder.loadTexts: hwBrasSbcTrapBindIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindIndex.setDescription('Index.')
hwBrasSbcTrapBindID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 299))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapBindID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindID.setDescription('Trap Bind ID')
hwBrasSbcTrapBindTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 3), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapBindTime.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindTime.setDescription('Trap Send Time')
hwBrasSbcTrapBindFluID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapBindFluID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindFluID.setDescription('Trap Flu ID')
hwBrasSbcTrapBindReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 299))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapBindReason.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindReason.setDescription('Trap Reason')
hwBrasSbcTrapBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notify", 0), ("alarm", 1), ("resume", 2), ("sync", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapBindType.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapBindType.setDescription('Trap Type')
hwBrasSbcTrapInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2), )
if mibBuilder.loadTexts: hwBrasSbcTrapInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoTable.setDescription('Sbc Trap Information.')
hwBrasSbcTrapInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoIndex"))
if mibBuilder.loadTexts: hwBrasSbcTrapInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoEntry.setDescription('Sbc Trap Information Entry.')
hwBrasSbcTrapInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("trap", 1))))
if mibBuilder.loadTexts: hwBrasSbcTrapInfoIndex.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoIndex.setDescription('Index.')
hwBrasSbcTrapInfoCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoCpu.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoCpu.setDescription('Cpu Information.')
hwBrasSbcTrapInfoHrp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("action", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoHrp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoHrp.setDescription('Hrp Information.')
hwBrasSbcTrapInfoSignalingFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoSignalingFlood.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoSignalingFlood.setDescription('Signaling-flood Information.')
hwBrasSbcTrapInfoCac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoCac.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoCac.setDescription('Cac Information.')
hwBrasSbcTrapInfoStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("action", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoStatistic.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoStatistic.setDescription('Statistic overflow Information.')
hwBrasSbcTrapInfoPortStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoPortStatistic.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoPortStatistic.setDescription('Port Statistic Information.')
hwBrasSbcTrapInfoOldSSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 8), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoOldSSIP.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoOldSSIP.setDescription('Old soft-switch IP address.')
hwBrasSbcTrapInfoImsConID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 9), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoImsConID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoImsConID.setDescription('Ims connect id.')
hwBrasSbcTrapInfoImsCcbID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 2, 2, 2, 1, 10), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBrasSbcTrapInfoImsCcbID.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapInfoImsCcbID.setDescription('Ims ccb id.')
hwBrasSbcComformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 3))
hwBrasSbcGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 3, 1))
hwBrasSbcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 3, 1, 1))
for _hwBrasSbcGroup_obj in [[("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalAddrMapRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortrangeBegin"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortrangeEnd"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortrangeRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipWellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftVersion"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCpuUsage"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsWellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsWellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323WellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323WellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoWellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoWellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248WellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248WellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMibRegRegister"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMibRegRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipWellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipAnonymity"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipCheckheartEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipCallsessionTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpAuepTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpCcbTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpTxTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpWellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpWellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsRegRefreshEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticDesc"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticValue"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248Enable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248CcbTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248UserAgeTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323Enable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323CallsessionTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248SyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323SyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathCallsessionTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathHeartbeatTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323Q931WellknownPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomPrefixDestAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomPrefixSrcAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomPrefixRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatisticSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcAppMode"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaDetectValidityEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaDetectSsrcEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaDetectPacketLength"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcInstanceName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcInstanceRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupInstanceName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupSessionLimit"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrVPNName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIf1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrSlotID1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIf2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrSlotID2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIf3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrSlotID3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIf4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrSlotID4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrVPNName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIf1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrSlotID1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIf2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrSlotID2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIf3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrSlotID3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIf4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrSlotID4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBackupGroupType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBackupGroupInstanceName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBackupGroupRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCurrentSlotID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSlotCfgState"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSlotInforRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMgLogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsStatisticsEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTimerMediaAging"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGInstanceName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatSessionAgingTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatGroupIndex"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatVpnNameIndex"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatInstanceName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcNatCfgRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpBeginningIpAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpEndingIpAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpRefCount"), ("HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpVpnName"), ("HUAWEI-BRAS-SBC-MIB", "hwNatAddrGrpRowstatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBWLimitType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcBWLimitValue"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarDegreeBandWidth"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarDegreeDscp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarDegreeRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleDegreeID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleDegreeBandWidth"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSessionCarRuleDegreeDscp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipMediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpMediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323MediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsMediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathMediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248MediaMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCallerID1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCallerID2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCallerID3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCallerID4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCalleeID1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCalleeID2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCalleeID3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersCalleeID4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaUsersRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaPassEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaPassRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupRuleType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaPassSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaAddrMapServerAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaAddrMapWeight"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaAddrMapRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitDefault"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitSyslogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaPassAclNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRtpSpecialAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRtpSpecialAddrAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipSignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpIntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsIntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323IntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoIntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248IntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapSignalNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathIntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitExtendEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipIntercomMapMediaNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipSignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpSignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpSignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsSignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsSignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323SignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323SignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoSignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoSignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248SignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248SignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathSignalMapNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRoamlimitAclNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathSignalMapAddrType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathWellknownPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathStatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248StatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdoStatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323StatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsStatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpStatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketInNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketInOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketOutNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketOutOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipStatSignalPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatMediaPacketNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatMediaPacketOctet"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatMediaPacketRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegRateThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegRatePercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegRateRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegTotalThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegTotalPercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacRegTotalRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallRateThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallRatePercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallRateRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallTotalThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallTotalPercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacCallTotalRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendUserConnectRateThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendUserConnectRatePercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendUserConnectRateRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendConnectRateThreshold"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendConnectRatePercent"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendConnectRateRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendMode"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendActionLogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUpathWellknownPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupRuleUserName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUsergroupRuleRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelIfPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelSctpAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelTunnelTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelTransportTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPoolRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPoolStartIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUdpTunnelPoolEndIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntMediaPassEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalAddrMapSoftAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalAddrMapIadmsAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRestartEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcRestartButton"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcUmsVersion"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupsType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupsStatus")], [("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMapGroupsRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGCliAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGCliAddrIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGCliAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPrefixID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPrefixRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrVPN"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMatchAcl"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMatchRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcHrpSynchronization"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrIP1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrIP2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrIP3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGIadmsAddrIP4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrIP1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrIP2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrIP3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGSofxAddrIP4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIP1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIP2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIP3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdServAddrIP4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIP1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIP2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIP3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGMdCliAddrIP4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrIP1"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrIP2"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrIP3"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGServAddrIP4"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolSip"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolMgcp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolH323"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolIadms"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolUpath"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGProtocolH248"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPatchLoadStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsActiveStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsActiveRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandIfIndex"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandIfName"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandIfType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandValue"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsBandRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectPepID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectCliType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectServIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectServPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsQosEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMediaProxyEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsQosLogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMediaProxyLogEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacActionLogStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectCliIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH248PDHCountLimit"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcH323PDHCountLimit"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMgcpPDHCountLimit"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipPDHCountLimit"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipRegReduceStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSipRegReduceTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectSourcePort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectFailCount"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftswitchPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSoftswitchPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsPortPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIadmsPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort01"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort02"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort03"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort04"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort05"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort06"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort07"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort08"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort09"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort10"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort11"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort12"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort13"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort14"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort15"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortPort16"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcClientPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcQRStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcQRBandWidth"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIPCarBWValue"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIPCarBWRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDynamicStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalingCarStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIPCarStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGDomainMapIndex"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGDomainRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPVersion"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPAddr"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPInterface"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGIPRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGDescription"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGTableStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGProtocol"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGMidString"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGConnectTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGAgingTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsMGCallSessionTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSctpStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdlecutRtcpTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIdlecutRtpTimer"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaDetectStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMediaOnewayStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticMinDrop"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticMaxDrop"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticFragDrop"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticFlowDrop"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatisticRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDLengthMin"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDLengthMax"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDLengthRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMDStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDefendExtStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsConnectCliPort"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPortNumber"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcMGPortRowStatus"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIntercomEnable"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcLocalizationStatus")]]:
    if getattr(mibBuilder, 'version', 0) < (4, 4, 2):
        # WARNING: leading objects get lost here!
        hwBrasSbcGroup = hwBrasSbcGroup.setObjects(*_hwBrasSbcGroup_obj)
    else:
        hwBrasSbcGroup = hwBrasSbcGroup.setObjects(*_hwBrasSbcGroup_obj, **dict(append=True))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasSbcGroup = hwBrasSbcGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcGroup.setDescription('Session Border Controller Objects Group')
hwBrasSbcTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 3, 1, 2)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCpu"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoHrp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoSignalingFlood"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCac"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoPortStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsCcbID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoOldSSIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectFailCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasSbcTrapGroup = hwBrasSbcTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcTrapGroup.setDescription('Session Border Controller Trap Group.')
hwBrasSbcCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 3, 2))
hwBrasSbcNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4))
hwBrasSbcCpu = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 1)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCpu"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCpu.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCpu.setDescription('Cpu usage more than threshold.')
hwBrasSbcCpuNormal = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 2)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCpu"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCpuNormal.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCpuNormal.setDescription('Cpu usage less than threshold.')
hwBrasSbcHrp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 3)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoHrp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcHrp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcHrp.setDescription('Hrp Enable.')
hwBrasSbcSignalingFlood = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 4)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoSignalingFlood"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcSignalingFlood.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalingFlood.setDescription('Flu more than signaling-flood threshold.')
hwBrasSbcSignalingFloodNormal = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 5)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoSignalingFlood"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcSignalingFloodNormal.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcSignalingFloodNormal.setDescription('Flu less than signaling-flood threshold.')
hwBrasSbcCac = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 6)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCac"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCac.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCac.setDescription('Flu more than cac threshold.')
hwBrasSbcCacNormal = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 7)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoCac"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCacNormal.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCacNormal.setDescription('Flu less than cac threshold.')
hwBrasSbcStatistic = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 8)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcStatistic.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcStatistic.setDescription('Statistic overflow.')
hwBrasSbcPortStatistic = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 9)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoPortStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcPortStatistic.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortStatistic.setDescription('Port statistic more than threshold.')
hwBrasSbcPortStatisticNormal = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 10)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoPortStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcPortStatisticNormal.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcPortStatisticNormal.setDescription('Port statistic less than threshold.')
hwBrasSbcDHSwitch = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 11)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSIPDetectFailCount"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoOldSSIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcDHSwitch.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSwitch.setDescription('Softswitch address changed')
hwBrasSbcDHSwitchNormal = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 12)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoOldSSIP"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcDHSwitchNormal.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcDHSwitchNormal.setDescription('Softswitch states changed to resume')
hwBrasSbcImsRptFail = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 13)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcImsRptFail.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsRptFail.setDescription('Sbc COPS report failed state ')
hwBrasSbcImsRptDrq = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 14)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcImsRptDrq.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsRptDrq.setDescription('Sbc COPS report Delete Request State')
hwBrasSbcImsTimeOut = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 15)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsCcbID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcImsTimeOut.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsTimeOut.setDescription('Sbc IMS session time out')
hwBrasSbcImsSessCreate = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 16)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsCcbID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcImsSessCreate.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsSessCreate.setDescription('Sbc IMS session is created')
hwBrasSbcImsSessDelete = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 17)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsCcbID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcImsSessDelete.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcImsSessDelete.setDescription('Sbc IMS session is deleted')
hwBrasSbcCopsLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 18)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCopsLinkUp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCopsLinkUp.setDescription('Sbc COPS link up')
hwBrasSbcCopsLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 19)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcCopsLinkDown.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcCopsLinkDown.setDescription('Sbc COPS link down')
hwBrasSbcIaLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 20)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcIaLinkUp.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIaLinkUp.setDescription('Sbc Ia link up')
hwBrasSbcIaLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 4, 21)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapInfoImsConID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindTime"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindFluID"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindReason"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcTrapBindType"))
if mibBuilder.loadTexts: hwBrasSbcIaLinkDown.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcIaLinkDown.setDescription('Sbc Ia link down')
hwBrasSbcNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 5))
hwBrasSbcNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 40, 25, 2, 5, 1)).setObjects(("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCpu"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCpuNormal"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcHrp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalingFlood"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcSignalingFloodNormal"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCac"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCacNormal"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortStatistic"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcPortStatisticNormal"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSwitch"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcDHSwitchNormal"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsRptFail"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsRptDrq"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsTimeOut"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsSessCreate"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcImsSessDelete"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCopsLinkUp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcCopsLinkDown"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIaLinkUp"), ("HUAWEI-BRAS-SBC-MIB", "hwBrasSbcIaLinkDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBrasSbcNotificationGroup = hwBrasSbcNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwBrasSbcNotificationGroup.setDescription('Session Border Controller Notification Group.')
mibBuilder.exportSymbols("HUAWEI-BRAS-SBC-MIB", hwBrasSbcObjects=hwBrasSbcObjects, hwBrasSbcIdoSignalMapTable=hwBrasSbcIdoSignalMapTable, hwBrasSbcMgcpIntercomMapMediaEntry=hwBrasSbcMgcpIntercomMapMediaEntry, hwBrasSbcMediaUsersType=hwBrasSbcMediaUsersType, hwBrasSbcIadmsStatSignalPacketRowStatus=hwBrasSbcIadmsStatSignalPacketRowStatus, hwBrasSbcNotificationGroups=hwBrasSbcNotificationGroups, hwBrasSbcMgcpSignalMapAddrType=hwBrasSbcMgcpSignalMapAddrType, hwBrasSbcImsStatisticsEnable=hwBrasSbcImsStatisticsEnable, hwBrasSbcStatisticEntry=hwBrasSbcStatisticEntry, hwBrasSbcIdoStatSignalPacketOutOctet=hwBrasSbcIdoStatSignalPacketOutOctet, hwBrasSbcSessionCarDegreeRowStatus=hwBrasSbcSessionCarDegreeRowStatus, hwBrasSbcSipMediaMapAddr=hwBrasSbcSipMediaMapAddr, hwBrasSbcMGPortTable=hwBrasSbcMGPortTable, hwBrasSbcH248SignalMapTable=hwBrasSbcH248SignalMapTable, hwBrasSbcDHSIPDetectFailCount=hwBrasSbcDHSIPDetectFailCount, hwBrasSbcNatInstanceName=hwBrasSbcNatInstanceName, hwBrasSbcClientPortEntry=hwBrasSbcClientPortEntry, hwBrasSbcSipSignalMapNumber=hwBrasSbcSipSignalMapNumber, hwBrasSbcClientPortPort11=hwBrasSbcClientPortPort11, hwBrasSbcBaseTables=hwBrasSbcBaseTables, hwBrasSbcTrapBindTables=hwBrasSbcTrapBindTables, hwBrasSbcImsMGIPInterface=hwBrasSbcImsMGIPInterface, hwBrasSbcUdpTunnelIfPortTable=hwBrasSbcUdpTunnelIfPortTable, hwBrasSbcH248IntercomMapMediaTable=hwBrasSbcH248IntercomMapMediaTable, hwBrasSbcImsBandRowStatus=hwBrasSbcImsBandRowStatus, hwBrasSbcIadmsSignalMapTable=hwBrasSbcIadmsSignalMapTable, HWBrasSbcBaseProtocol=HWBrasSbcBaseProtocol, hwBrasSbcMDStatisticMinDrop=hwBrasSbcMDStatisticMinDrop, hwBrasSbcMgcpMediaMapNumber=hwBrasSbcMgcpMediaMapNumber, hwBrasSbcIadmsIntercomMapSignalAddr=hwBrasSbcIadmsIntercomMapSignalAddr, hwBrasSbcH323IntercomMapMediaNumber=hwBrasSbcH323IntercomMapMediaNumber, hwBrasSbcImsMGTableStatus=hwBrasSbcImsMGTableStatus, hwBrasSbcDefendActionLogEnable=hwBrasSbcDefendActionLogEnable, hwBrasSbcImsMGIPType=hwBrasSbcImsMGIPType, hwBrasSbcImsConnectEntry=hwBrasSbcImsConnectEntry, hwBrasSbcMGMdServAddrEntry=hwBrasSbcMGMdServAddrEntry, hwBrasSbcUsergroupRowStatus=hwBrasSbcUsergroupRowStatus, hwBrasSbcPortrangeEnd=hwBrasSbcPortrangeEnd, hwBrasSbcPortrangeEntry=hwBrasSbcPortrangeEntry, hwBrasSbcAdvance=hwBrasSbcAdvance, hwBrasSbcOmLeaves=hwBrasSbcOmLeaves, hwBrasSbcIadmsMediaMapTable=hwBrasSbcIadmsMediaMapTable, hwBrasSbcH323MediaMapAddr=hwBrasSbcH323MediaMapAddr, hwBrasSbcStatMediaPacketRowStatus=hwBrasSbcStatMediaPacketRowStatus, hwBrasSbcCurrentSlotID=hwBrasSbcCurrentSlotID, hwBrasSbcSignalingNatTables=hwBrasSbcSignalingNatTables, hwBrasSbcIadmsPortRowStatus=hwBrasSbcIadmsPortRowStatus, hwBrasSbcUsergroupRuleUserName=hwBrasSbcUsergroupRuleUserName, hwBrasSbcMgcpSyslogEnable=hwBrasSbcMgcpSyslogEnable, hwBrasSbcSecurityTables=hwBrasSbcSecurityTables, hwBrasSbcUpathMediaMapEntry=hwBrasSbcUpathMediaMapEntry, hwBrasSbcMGMdCliAddrIf4=hwBrasSbcMGMdCliAddrIf4, hwBrasSbcImsBandValue=hwBrasSbcImsBandValue, hwBrasSbcMGMdCliAddrTable=hwBrasSbcMGMdCliAddrTable, hwBrasSbcCpuUsage=hwBrasSbcCpuUsage, hwBrasSbcCacRegTotalProtocol=hwBrasSbcCacRegTotalProtocol, hwBrasSbcIntercom=hwBrasSbcIntercom, hwBrasSbcH323WellknownPortAddr=hwBrasSbcH323WellknownPortAddr, hwBrasSbcClientPortIP=hwBrasSbcClientPortIP, hwBrasSbcMediaUsersCalleeID2=hwBrasSbcMediaUsersCalleeID2, hwBrasSbcIPCarBandwidthEntry=hwBrasSbcIPCarBandwidthEntry, hwBrasSbcSignalingCarStatus=hwBrasSbcSignalingCarStatus, hwBrasSbcCapabilities=hwBrasSbcCapabilities, hwBrasSbcUpathSignalMapProtocol=hwBrasSbcUpathSignalMapProtocol, hwBrasSbcH248MediaMapTable=hwBrasSbcH248MediaMapTable, hwBrasSbcPortrangeTable=hwBrasSbcPortrangeTable, hwBrasSbcUdpTunnelIfPortAddr=hwBrasSbcUdpTunnelIfPortAddr, hwBrasSbcRoamlimitRowStatus=hwBrasSbcRoamlimitRowStatus, hwBrasSbcImsMGCallSessionTimer=hwBrasSbcImsMGCallSessionTimer, hwBrasSbcAdmModuleTable=hwBrasSbcAdmModuleTable, hwBrasSbcMgcpWellknownPortProtocol=hwBrasSbcMgcpWellknownPortProtocol, hwBrasSbcQRStatus=hwBrasSbcQRStatus, hwBrasSbcTrapInfoImsConID=hwBrasSbcTrapInfoImsConID, hwBrasSbcH248Tables=hwBrasSbcH248Tables, hwBrasSbcSipIntercomMapMediaNumber=hwBrasSbcSipIntercomMapMediaNumber, hwBrasSbcMGMdServAddrRowStatus=hwBrasSbcMGMdServAddrRowStatus, hwBrasSbcSipAnonymity=hwBrasSbcSipAnonymity, hwBrasSbcUpathWellknownPortAddr=hwBrasSbcUpathWellknownPortAddr, hwBrasSbcCacRegTotalPercent=hwBrasSbcCacRegTotalPercent, hwBrasSbcUpathStatSignalPacketInOctet=hwBrasSbcUpathStatSignalPacketInOctet, hwBrasSbcMGProtocolUpath=hwBrasSbcMGProtocolUpath, hwBrasSbcClientPortVPN=hwBrasSbcClientPortVPN, PYSNMP_MODULE_ID=hwBrasSbcMgmt, hwBrasSbcMediaDetectPacketLength=hwBrasSbcMediaDetectPacketLength, hwBrasSbcUpathSignalMapAddrType=hwBrasSbcUpathSignalMapAddrType, hwBrasSbcSipWellknownPortPort=hwBrasSbcSipWellknownPortPort, hwBrasSbcMGServAddrVPN=hwBrasSbcMGServAddrVPN, hwBrasSbcIadmsWellknownPortRowStatus=hwBrasSbcIadmsWellknownPortRowStatus, hwBrasSbcIadmsIntercomMapSignalTable=hwBrasSbcIadmsIntercomMapSignalTable, hwBrasSbcDHSwitch=hwBrasSbcDHSwitch, hwBrasSbcH323PDHCountLimit=hwBrasSbcH323PDHCountLimit, hwBrasSbcSipStatSignalPacketInNumber=hwBrasSbcSipStatSignalPacketInNumber, hwBrasSbcH248MediaMapAddr=hwBrasSbcH248MediaMapAddr, hwBrasSbcTrapBindFluID=hwBrasSbcTrapBindFluID, hwBrasSbcH323WellknownPortPort=hwBrasSbcH323WellknownPortPort, hwBrasSbcIadmsEnable=hwBrasSbcIadmsEnable, hwBrasSbcImsMGIPEntry=hwBrasSbcImsMGIPEntry, hwBrasSbcH323StatSignalPacketEntry=hwBrasSbcH323StatSignalPacketEntry, hwBrasSbcMGCliAddrRowStatus=hwBrasSbcMGCliAddrRowStatus, hwBrasSbcSipIntercomMapSignalTable=hwBrasSbcSipIntercomMapSignalTable, hwBrasSbcIdoSignalMapNumber=hwBrasSbcIdoSignalMapNumber, hwBrasSbcSignalingNat=hwBrasSbcSignalingNat, hwBrasSbcMgcpIntercomMapSignalTable=hwBrasSbcMgcpIntercomMapSignalTable, hwBrasSbcSessionCarDegreeID=hwBrasSbcSessionCarDegreeID, hwBrasSbcMgcpIntercomMapSignalProtocol=hwBrasSbcMgcpIntercomMapSignalProtocol, hwBrasSbcClientPortPort10=hwBrasSbcClientPortPort10, hwBrasSbcH248WellknownPortAddr=hwBrasSbcH248WellknownPortAddr, hwBrasSbcClientPortPort09=hwBrasSbcClientPortPort09, hwBrasSbcSoftVersion=hwBrasSbcSoftVersion, hwBrasSbcMgcpAuepTimer=hwBrasSbcMgcpAuepTimer, hwBrasSbcUpathWellknownPortProtocol=hwBrasSbcUpathWellknownPortProtocol, hwBrasSbcMGMatchIndex=hwBrasSbcMGMatchIndex, hwBrasSbcPatchLoadStatus=hwBrasSbcPatchLoadStatus, hwBrasSbcIntercomPrefixSrcAddr=hwBrasSbcIntercomPrefixSrcAddr, hwBrasSbcMediaUsersRowStatus=hwBrasSbcMediaUsersRowStatus, hwBrasSbcMDStatisticTable=hwBrasSbcMDStatisticTable, hwBrasSbcH323IntercomMapSignalNumber=hwBrasSbcH323IntercomMapSignalNumber, hwBrasSbcMGServAddrIP1=hwBrasSbcMGServAddrIP1, hwBrasSbcImsActiveEntry=hwBrasSbcImsActiveEntry, hwBrasSbcTrapBindReason=hwBrasSbcTrapBindReason, hwBrasSbcIdoWellknownPortTable=hwBrasSbcIdoWellknownPortTable, hwBrasSbcCacNormal=hwBrasSbcCacNormal, hwBrasSbcDefendUserConnectRateRowStatus=hwBrasSbcDefendUserConnectRateRowStatus, hwBrasSbcCacRegTotalEntry=hwBrasSbcCacRegTotalEntry, hwBrasSbcSipStatSignalPacketTable=hwBrasSbcSipStatSignalPacketTable, hwBrasSbcMGCliAddrTable=hwBrasSbcMGCliAddrTable, hwBrasSbcH248MediaMapEntry=hwBrasSbcH248MediaMapEntry, hwBrasSbcMGServAddrRowStatus=hwBrasSbcMGServAddrRowStatus, hwBrasSbcCacRegRateThreshold=hwBrasSbcCacRegRateThreshold, hwBrasSbcMGSofxAddrIP2=hwBrasSbcMGSofxAddrIP2, hwBrasSbcSignalAddrMapClientAddr=hwBrasSbcSignalAddrMapClientAddr, hwBrasSbcUdpTunnelPoolEntry=hwBrasSbcUdpTunnelPoolEntry, hwBrasSbcDefendConnectRateThreshold=hwBrasSbcDefendConnectRateThreshold, hwBrasSbcH323IntercomMapSignalAddr=hwBrasSbcH323IntercomMapSignalAddr, hwBrasSbcMGMdCliAddrIf2=hwBrasSbcMGMdCliAddrIf2, hwBrasSbcMGMatchTable=hwBrasSbcMGMatchTable, hwBrasSbcCacRegTotalTable=hwBrasSbcCacRegTotalTable, hwBrasSbcMediaUsersCalleeID1=hwBrasSbcMediaUsersCalleeID1, hwBrasSbcOm=hwBrasSbcOm, hwBrasSbcIdlecutRtpTimer=hwBrasSbcIdlecutRtpTimer, hwBrasSbcMGMdCliAddrRowStatus=hwBrasSbcMGMdCliAddrRowStatus, hwBrasSbcIntercomPrefixIndex=hwBrasSbcIntercomPrefixIndex, hwBrasSbcRoamlimitTable=hwBrasSbcRoamlimitTable, hwBrasSbcUsergroupRuleType=hwBrasSbcUsergroupRuleType, hwBrasSbcMgcpTables=hwBrasSbcMgcpTables, hwBrasSbcH323StatSignalPacketInOctet=hwBrasSbcH323StatSignalPacketInOctet, hwBrasSbcMGMdCliAddrVPN=hwBrasSbcMGMdCliAddrVPN, hwBrasSbcStatMediaPacketIndex=hwBrasSbcStatMediaPacketIndex, hwBrasSbcMDStatisticRowStatus=hwBrasSbcMDStatisticRowStatus, hwBrasSbcUdpTunnelIfPortRowStatus=hwBrasSbcUdpTunnelIfPortRowStatus, hwBrasSbcIadmsSignalMapAddr=hwBrasSbcIadmsSignalMapAddr, hwBrasSbcUpathIntercomMapSignalEntry=hwBrasSbcUpathIntercomMapSignalEntry, hwBrasSbcImsBandIfName=hwBrasSbcImsBandIfName, hwBrasSbcUdpTunnelPortPort=hwBrasSbcUdpTunnelPortPort, hwBrasSbcUdpTunnelPortTable=hwBrasSbcUdpTunnelPortTable, hwBrasSbcSlotCfgState=hwBrasSbcSlotCfgState, hwBrasSbcMGMdServAddrSlotID4=hwBrasSbcMGMdServAddrSlotID4, hwBrasSbcMDLengthMin=hwBrasSbcMDLengthMin, hwBrasSbcIadmsStatSignalPacketInNumber=hwBrasSbcIadmsStatSignalPacketInNumber, hwBrasSbcImsConnectTable=hwBrasSbcImsConnectTable, hwBrasSbcH248IntercomMapSignalProtocol=hwBrasSbcH248IntercomMapSignalProtocol, hwBrasSbcSlotInforEntry=hwBrasSbcSlotInforEntry, hwBrasSbcIadmsWellknownPortProtocol=hwBrasSbcIadmsWellknownPortProtocol, hwBrasSbcUdpTunnelType=hwBrasSbcUdpTunnelType, hwBrasSbcIdoStatSignalPacketEntry=hwBrasSbcIdoStatSignalPacketEntry, hwBrasSbcQoSReport=hwBrasSbcQoSReport, hwBrasSbcTrapBindTime=hwBrasSbcTrapBindTime, hwBrasSbcDualHoming=hwBrasSbcDualHoming, hwBrasSbcH323SignalMapProtocol=hwBrasSbcH323SignalMapProtocol, hwBrasSbcSessionCarRuleDegreeDscp=hwBrasSbcSessionCarRuleDegreeDscp, hwBrasSbcMGMdServAddrIP4=hwBrasSbcMGMdServAddrIP4, hwBrasSbcTrapBindLeaves=hwBrasSbcTrapBindLeaves, hwBrasSbcCacCallRateEntry=hwBrasSbcCacCallRateEntry, hwBrasSbcMDStatisticIndex=hwBrasSbcMDStatisticIndex, hwBrasSbcRtpSpecialAddrEntry=hwBrasSbcRtpSpecialAddrEntry, hwBrasSbcCacCallTotalEntry=hwBrasSbcCacCallTotalEntry, hwBrasSbcRoamlimitIndex=hwBrasSbcRoamlimitIndex, hwNatAddrGrpBeginningIpAddr=hwNatAddrGrpBeginningIpAddr, hwBrasSbcSipStatSignalPacketEntry=hwBrasSbcSipStatSignalPacketEntry, hwBrasSbcSoftswitchPortTable=hwBrasSbcSoftswitchPortTable, hwBrasSbcH248StatSignalPacketOutNumber=hwBrasSbcH248StatSignalPacketOutNumber, hwBrasSbcH248WellknownPortIndex=hwBrasSbcH248WellknownPortIndex, hwBrasSbcMediaUsersCalleeID4=hwBrasSbcMediaUsersCalleeID4, hwBrasSbcStatisticValue=hwBrasSbcStatisticValue, hwBrasSbcH323MediaMapProtocol=hwBrasSbcH323MediaMapProtocol, hwBrasSbcMGServAddrIP3=hwBrasSbcMGServAddrIP3, hwBrasSbcRoamlimitEntry=hwBrasSbcRoamlimitEntry, hwBrasSbcIadmsMediaMapNumber=hwBrasSbcIadmsMediaMapNumber, hwBrasSbcSessionCarLeaves=hwBrasSbcSessionCarLeaves, hwBrasSbcImsConnectIndex=hwBrasSbcImsConnectIndex, hwBrasSbcHrpSynchronization=hwBrasSbcHrpSynchronization, hwBrasSbcIPCarBWRowStatus=hwBrasSbcIPCarBWRowStatus, hwBrasSbcQRTables=hwBrasSbcQRTables, hwBrasSbcUsergroupTable=hwBrasSbcUsergroupTable, hwBrasSbcUpathStatSignalPacketEntry=hwBrasSbcUpathStatSignalPacketEntry, hwBrasSbcCacCallRateTable=hwBrasSbcCacCallRateTable, hwBrasSbcStatMediaPacketNumber=hwBrasSbcStatMediaPacketNumber, hwBrasSbcH248WellknownPortTable=hwBrasSbcH248WellknownPortTable, hwBrasSbcMediaAddrMapTable=hwBrasSbcMediaAddrMapTable, hwBrasSbcUpath=hwBrasSbcUpath, hwBrasSbcUpathIntercomMapMediaTable=hwBrasSbcUpathIntercomMapMediaTable, hwBrasSbcMGMdServAddrIP2=hwBrasSbcMGMdServAddrIP2, hwBrasSbcH248WellknownPortEntry=hwBrasSbcH248WellknownPortEntry, hwBrasSbcSessionCarDegreeTable=hwBrasSbcSessionCarDegreeTable, hwBrasSbcImsActiveConnectId=hwBrasSbcImsActiveConnectId, hwBrasSbcUdpTunnelTables=hwBrasSbcUdpTunnelTables, hwBrasSbcIadmsWellknownPortTable=hwBrasSbcIadmsWellknownPortTable, hwBrasSbcUpathMediaMapTable=hwBrasSbcUpathMediaMapTable, hwBrasSbcSipWellknownPortAddr=hwBrasSbcSipWellknownPortAddr, hwBrasSbcClientPortPort12=hwBrasSbcClientPortPort12, hwBrasSbcSipCheckheartEnable=hwBrasSbcSipCheckheartEnable, hwBrasSbcMGMdServAddrSlotID2=hwBrasSbcMGMdServAddrSlotID2, hwBrasSbcIadmsPortVPN=hwBrasSbcIadmsPortVPN, hwBrasSbcIadmsIntercomMapMediaEntry=hwBrasSbcIadmsIntercomMapMediaEntry, hwBrasSbcStatisticOffset=hwBrasSbcStatisticOffset, hwBrasSbcMGMdCliAddrEntry=hwBrasSbcMGMdCliAddrEntry, hwBrasSbcMGSofxAddrRowStatus=hwBrasSbcMGSofxAddrRowStatus, hwBrasSbcIadmsMediaMapProtocol=hwBrasSbcIadmsMediaMapProtocol, hwBrasSbcImsMGDomainTable=hwBrasSbcImsMGDomainTable, hwBrasSbcNatCfgTable=hwBrasSbcNatCfgTable, hwBrasSbcImsTimeOut=hwBrasSbcImsTimeOut, hwBrasSbcUsergroupRuleTable=hwBrasSbcUsergroupRuleTable, hwBrasSbcUpathIntercomMapSignalProtocol=hwBrasSbcUpathIntercomMapSignalProtocol, hwBrasSbcTrapBind=hwBrasSbcTrapBind, hwBrasSbcMGServAddrIndex=hwBrasSbcMGServAddrIndex, hwBrasSbcIntercomPrefixTable=hwBrasSbcIntercomPrefixTable, hwBrasSbcMediaDetectValidityEnable=hwBrasSbcMediaDetectValidityEnable, hwBrasSbcH323Leaves=hwBrasSbcH323Leaves, hwBrasSbcCacEnable=hwBrasSbcCacEnable, hwBrasSbcMapGroupsTable=hwBrasSbcMapGroupsTable, hwBrasSbcDefendUserConnectRateEntry=hwBrasSbcDefendUserConnectRateEntry, hwBrasSbcIdoSyslogEnable=hwBrasSbcIdoSyslogEnable, hwBrasSbcBWLimitValue=hwBrasSbcBWLimitValue, hwBrasSbcH248SignalMapNumber=hwBrasSbcH248SignalMapNumber, hwBrasSbcCacCallTotalRowStatus=hwBrasSbcCacCallTotalRowStatus, hwBrasSbcMediaUsersCallerID2=hwBrasSbcMediaUsersCallerID2, hwBrasSbcSessionCarRuleDegreeBandWidth=hwBrasSbcSessionCarRuleDegreeBandWidth, hwBrasSbcMGMdCliAddrSlotID1=hwBrasSbcMGMdCliAddrSlotID1, hwBrasSbcGeneral=hwBrasSbcGeneral, hwBrasSbcImsMGStatus=hwBrasSbcImsMGStatus, hwBrasSbcUdpTunnelTransportTimer=hwBrasSbcUdpTunnelTransportTimer, hwBrasSbcSignalAddrMapSoftAddr=hwBrasSbcSignalAddrMapSoftAddr, hwBrasSbcUdpTunnelPoolEndIP=hwBrasSbcUdpTunnelPoolEndIP, hwBrasSbcMgcpSignalMapProtocol=hwBrasSbcMgcpSignalMapProtocol, hwBrasSbcMGIadmsAddrIP4=hwBrasSbcMGIadmsAddrIP4, hwBrasSbcImsMGIPTable=hwBrasSbcImsMGIPTable, hwBrasSbcIadmsSignalMapProtocol=hwBrasSbcIadmsSignalMapProtocol, hwBrasSbcH248PDHCountLimit=hwBrasSbcH248PDHCountLimit, hwBrasSbcH248IntercomMapSignalEntry=hwBrasSbcH248IntercomMapSignalEntry, hwBrasSbcUpathWellknownPortIndex=hwBrasSbcUpathWellknownPortIndex, hwBrasSbcMapGroup=hwBrasSbcMapGroup, hwBrasSbcIdoWellknownPortPort=hwBrasSbcIdoWellknownPortPort, hwBrasSbcSipPDHCountLimit=hwBrasSbcSipPDHCountLimit, hwBrasSbcH323WellknownPortProtocol=hwBrasSbcH323WellknownPortProtocol)
mibBuilder.exportSymbols("HUAWEI-BRAS-SBC-MIB", hwBrasSbcSipIntercomMapSignalNumber=hwBrasSbcSipIntercomMapSignalNumber, hwBrasSbcIadmsIntercomMapMediaProtocol=hwBrasSbcIadmsIntercomMapMediaProtocol, hwBrasSbcMGPrefixRowStatus=hwBrasSbcMGPrefixRowStatus, hwBrasSbcIadmsSignalMapNumber=hwBrasSbcIadmsSignalMapNumber, hwBrasSbcMGMdServAddrVPN=hwBrasSbcMGMdServAddrVPN, hwBrasSbcIadmsStatSignalPacketEntry=hwBrasSbcIadmsStatSignalPacketEntry, hwBrasSbcMediaPassSyslogEnable=hwBrasSbcMediaPassSyslogEnable, hwBrasSbcStatMediaPacketEntry=hwBrasSbcStatMediaPacketEntry, hwBrasSbcSoftswitchPortProtocol=hwBrasSbcSoftswitchPortProtocol, hwBrasSbcMgcpSignalMapNumber=hwBrasSbcMgcpSignalMapNumber, hwBrasSbcMGMdServAddrIf3=hwBrasSbcMGMdServAddrIf3, hwBrasSbcUmsVersion=hwBrasSbcUmsVersion, hwBrasSbcImsQosLogEnable=hwBrasSbcImsQosLogEnable, hwBrasSbcIadmsIntercomMapMediaNumber=hwBrasSbcIadmsIntercomMapMediaNumber, hwBrasSbcSessionCarRuleTable=hwBrasSbcSessionCarRuleTable, hwBrasSbcSipMediaMapProtocol=hwBrasSbcSipMediaMapProtocol, hwBrasSbcBackupGroupsTable=hwBrasSbcBackupGroupsTable, hwBrasSbcMgcpIntercomMapMediaTable=hwBrasSbcMgcpIntercomMapMediaTable, hwBrasSbcH248IntercomMapMediaAddr=hwBrasSbcH248IntercomMapMediaAddr, hwBrasSbcSipStatSignalPacketOutOctet=hwBrasSbcSipStatSignalPacketOutOctet, hwBrasSbcH323IntercomMapMediaProtocol=hwBrasSbcH323IntercomMapMediaProtocol, hwBrasSbcTrapInfoCac=hwBrasSbcTrapInfoCac, hwBrasSbcRoamlimitExtendEnable=hwBrasSbcRoamlimitExtendEnable, hwBrasSbcUpathStatSignalPacketOutOctet=hwBrasSbcUpathStatSignalPacketOutOctet, hwBrasSbcSipEnable=hwBrasSbcSipEnable, hwBrasSbcIdoStatSignalPacketOutNumber=hwBrasSbcIdoStatSignalPacketOutNumber, hwBrasSbcH248Leaves=hwBrasSbcH248Leaves, hwBrasSbcTimerMediaAging=hwBrasSbcTimerMediaAging, hwBrasSbcBackupGroupType=hwBrasSbcBackupGroupType, hwBrasSbcSipSignalMapEntry=hwBrasSbcSipSignalMapEntry, hwBrasSbcCopsLinkUp=hwBrasSbcCopsLinkUp, hwBrasSbcIadmsLeaves=hwBrasSbcIadmsLeaves, hwBrasSbcH248WellknownPortProtocol=hwBrasSbcH248WellknownPortProtocol, hwBrasSbcIadmsPortProtocol=hwBrasSbcIadmsPortProtocol, hwBrasSbcImsConnectCliType=hwBrasSbcImsConnectCliType, hwBrasSbcPortrangeBegin=hwBrasSbcPortrangeBegin, hwBrasSbcMGProtocolH323=hwBrasSbcMGProtocolH323, hwBrasSbcMGMdServAddrSlotID3=hwBrasSbcMGMdServAddrSlotID3, hwBrasSbcUpathIntercomMapMediaEntry=hwBrasSbcUpathIntercomMapMediaEntry, hwBrasSbcMDStatisticMaxDrop=hwBrasSbcMDStatisticMaxDrop, hwBrasSbcImsMGIPSN=hwBrasSbcImsMGIPSN, hwBrasSbcH248StatSignalPacketEntry=hwBrasSbcH248StatSignalPacketEntry, hwBrasSbcImsMGTable=hwBrasSbcImsMGTable, hwBrasSbcHrp=hwBrasSbcHrp, hwBrasSbcIdoIntercomMapSignalProtocol=hwBrasSbcIdoIntercomMapSignalProtocol, hwBrasSbcNotificationGroup=hwBrasSbcNotificationGroup, hwBrasSbcSipIntercomMapMediaEntry=hwBrasSbcSipIntercomMapMediaEntry, hwBrasSbcH323StatSignalPacketInNumber=hwBrasSbcH323StatSignalPacketInNumber, hwBrasSbcIdoTables=hwBrasSbcIdoTables, hwBrasSbcMGPrefixIndex=hwBrasSbcMGPrefixIndex, hwBrasSbcSipRegReduceStatus=hwBrasSbcSipRegReduceStatus, hwBrasSbcMgcpMediaMapEntry=hwBrasSbcMgcpMediaMapEntry, hwBrasSbcMgcpIntercomMapSignalNumber=hwBrasSbcMgcpIntercomMapSignalNumber, hwBrasSbcMGMdServAddrIP1=hwBrasSbcMGMdServAddrIP1, hwBrasSbcMediaUsersCallerID4=hwBrasSbcMediaUsersCallerID4, hwBrasSbcInstanceEntry=hwBrasSbcInstanceEntry, hwBrasSbcMGMdServAddrTable=hwBrasSbcMGMdServAddrTable, hwBrasSbcNatCfgRowStatus=hwBrasSbcNatCfgRowStatus, hwBrasSbcIadmsMibRegEntry=hwBrasSbcIadmsMibRegEntry, hwBrasSbcSoftswitchPortVPN=hwBrasSbcSoftswitchPortVPN, hwBrasSbcSipWellknownPortProtocol=hwBrasSbcSipWellknownPortProtocol, hwBrasSbcImsConnectPepID=hwBrasSbcImsConnectPepID, hwBrasSbcDHSwitchNormal=hwBrasSbcDHSwitchNormal, hwBrasSbcMDStatus=hwBrasSbcMDStatus, hwBrasSbcClientPortPort16=hwBrasSbcClientPortPort16, hwBrasSbcMGProtocolSip=hwBrasSbcMGProtocolSip, hwBrasSbcMediaDetectSsrcEnable=hwBrasSbcMediaDetectSsrcEnable, hwBrasSbcUpathSignalMapEntry=hwBrasSbcUpathSignalMapEntry, hwBrasSbcCacCallTotalTable=hwBrasSbcCacCallTotalTable, hwBrasSbcDHSIPDetectTimer=hwBrasSbcDHSIPDetectTimer, hwBrasSbcAdvanceLeaves=hwBrasSbcAdvanceLeaves, hwBrasSbcImsTables=hwBrasSbcImsTables, hwBrasSbcIadmsStatSignalPacketOutNumber=hwBrasSbcIadmsStatSignalPacketOutNumber, hwBrasSbcTrapInfoStatistic=hwBrasSbcTrapInfoStatistic, hwBrasSbcSipSignalMapProtocol=hwBrasSbcSipSignalMapProtocol, hwBrasSbcIdoStatSignalPacketInOctet=hwBrasSbcIdoStatSignalPacketInOctet, hwBrasSbcMgcpIntercomMapSignalEntry=hwBrasSbcMgcpIntercomMapSignalEntry, hwBrasSbcTrapBindIndex=hwBrasSbcTrapBindIndex, hwBrasSbcCacRegRatePercent=hwBrasSbcCacRegRatePercent, hwBrasSbcMediaPassEntry=hwBrasSbcMediaPassEntry, hwBrasSbcIdoSignalMapEntry=hwBrasSbcIdoSignalMapEntry, hwBrasSbcMGCliAddrIP=hwBrasSbcMGCliAddrIP, hwBrasSbcIdoWellknownPortAddr=hwBrasSbcIdoWellknownPortAddr, hwBrasSbcBandwidthLimit=hwBrasSbcBandwidthLimit, hwBrasSbcTrapInfoEntry=hwBrasSbcTrapInfoEntry, hwBrasSbcIdoSignalMapProtocol=hwBrasSbcIdoSignalMapProtocol, hwBrasSbcIntercomLeaves=hwBrasSbcIntercomLeaves, hwBrasSbcUpathMediaMapAddr=hwBrasSbcUpathMediaMapAddr, hwBrasSbcMgcpIntercomMapSignalAddr=hwBrasSbcMgcpIntercomMapSignalAddr, hwBrasSbcMGMdCliAddrIP2=hwBrasSbcMGMdCliAddrIP2, hwBrasSbcUdpTunnel=hwBrasSbcUdpTunnel, hwBrasSbcUpathSignalMapAddr=hwBrasSbcUpathSignalMapAddr, hwBrasSbcH323WellknownPortEntry=hwBrasSbcH323WellknownPortEntry, hwBrasSbcMDLengthIndex=hwBrasSbcMDLengthIndex, hwBrasSbcMDStatisticFlowDrop=hwBrasSbcMDStatisticFlowDrop, hwBrasSbcUpathIntercomMapSignalNumber=hwBrasSbcUpathIntercomMapSignalNumber, hwBrasSbcSipStatSignalPacketInOctet=hwBrasSbcSipStatSignalPacketInOctet, hwBrasSbcIntMediaPassEnable=hwBrasSbcIntMediaPassEnable, hwBrasSbcIdoLeaves=hwBrasSbcIdoLeaves, hwBrasSbcMGProtocolRowStatus=hwBrasSbcMGProtocolRowStatus, hwBrasSbcSipSignalMapAddr=hwBrasSbcSipSignalMapAddr, hwBrasSbcUpathWellknownPortPort=hwBrasSbcUpathWellknownPortPort, hwBrasSbcDefendEnable=hwBrasSbcDefendEnable, hwBrasSbcBackupGroupRowStatus=hwBrasSbcBackupGroupRowStatus, hwBrasSbcIPCarBandwidthTable=hwBrasSbcIPCarBandwidthTable, hwBrasSbcUpathSyslogEnable=hwBrasSbcUpathSyslogEnable, hwBrasSbcRestartEnable=hwBrasSbcRestartEnable, hwBrasSbcPortrangeIndex=hwBrasSbcPortrangeIndex, hwBrasSbcImsSessCreate=hwBrasSbcImsSessCreate, hwBrasSbcMgcpSignalMapAddr=hwBrasSbcMgcpSignalMapAddr, hwBrasSbcH248IntercomMapSignalAddr=hwBrasSbcH248IntercomMapSignalAddr, hwBrasSbcDefendConnectRateEntry=hwBrasSbcDefendConnectRateEntry, hwBrasSbcSipTables=hwBrasSbcSipTables, hwBrasSbcSipIntercomMapMediaTable=hwBrasSbcSipIntercomMapMediaTable, hwBrasSbcIadmsStatSignalPacketIndex=hwBrasSbcIadmsStatSignalPacketIndex, hwBrasSbcIntercomPrefixDestAddr=hwBrasSbcIntercomPrefixDestAddr, hwBrasSbcMgcpMediaMapTable=hwBrasSbcMgcpMediaMapTable, hwBrasSbcMGMdCliAddrIf1=hwBrasSbcMGMdCliAddrIf1, hwBrasSbcMgcpTxTimer=hwBrasSbcMgcpTxTimer, hwBrasSbcTrapInfoCpu=hwBrasSbcTrapInfoCpu, hwBrasSbcSipSignalMapTable=hwBrasSbcSipSignalMapTable, hwBrasSbcUpathLeaves=hwBrasSbcUpathLeaves, hwBrasSbcCacCallRateProtocol=hwBrasSbcCacCallRateProtocol, hwNatAddrGrpEndingIpAddr=hwNatAddrGrpEndingIpAddr, hwBrasSbcModule=hwBrasSbcModule, hwBrasSbcH323SignalMapNumber=hwBrasSbcH323SignalMapNumber, hwBrasSbcH248CcbTimer=hwBrasSbcH248CcbTimer, hwBrasSbcIaLinkDown=hwBrasSbcIaLinkDown, hwBrasSbcStatisticEnable=hwBrasSbcStatisticEnable, hwBrasSbcSipCallsessionTimer=hwBrasSbcSipCallsessionTimer, hwBrasSbcMGMdServAddrSlotID1=hwBrasSbcMGMdServAddrSlotID1, hwBrasSbcMgcpCcbTimer=hwBrasSbcMgcpCcbTimer, HWBrasPermitStatus=HWBrasPermitStatus, hwBrasSbcLocalizationStatus=hwBrasSbcLocalizationStatus, hwBrasSbcQRLeaves=hwBrasSbcQRLeaves, hwBrasSbcH248IntercomMapMediaNumber=hwBrasSbcH248IntercomMapMediaNumber, hwBrasSbcTrapBindEntry=hwBrasSbcTrapBindEntry, hwBrasSbcIntercomTables=hwBrasSbcIntercomTables, hwBrasSbcCacRegRateEntry=hwBrasSbcCacRegRateEntry, hwBrasSbcClientPortPort13=hwBrasSbcClientPortPort13, hwBrasSbcIadmsIntercomMapMediaAddr=hwBrasSbcIadmsIntercomMapMediaAddr, hwBrasSbcBackupGroupEntry=hwBrasSbcBackupGroupEntry, hwBrasSbcSessionCarEnable=hwBrasSbcSessionCarEnable, hwBrasSbcCacCallTotalProtocol=hwBrasSbcCacCallTotalProtocol, hwBrasSbcCacCallRatePercent=hwBrasSbcCacCallRatePercent, hwBrasSbcImsBandEntry=hwBrasSbcImsBandEntry, hwBrasSbcImsMGDomainType=hwBrasSbcImsMGDomainType, hwBrasSbcInstanceName=hwBrasSbcInstanceName, hwBrasSbcDefendUserConnectRateProtocol=hwBrasSbcDefendUserConnectRateProtocol, hwBrasSbcH323MediaMapTable=hwBrasSbcH323MediaMapTable, hwBrasSbcMGMdCliAddrSlotID4=hwBrasSbcMGMdCliAddrSlotID4, hwBrasSbcClientPortPort14=hwBrasSbcClientPortPort14, hwBrasSbcClientPortPort01=hwBrasSbcClientPortPort01, hwBrasSbcMediaUsersIndex=hwBrasSbcMediaUsersIndex, hwBrasSbcUpathMediaMapProtocol=hwBrasSbcUpathMediaMapProtocol, hwBrasSbcIadmsMibRegVersion=hwBrasSbcIadmsMibRegVersion, hwBrasSbcUpathIntercomMapSignalAddr=hwBrasSbcUpathIntercomMapSignalAddr, hwBrasSbcRestartButton=hwBrasSbcRestartButton, hwBrasSbcDynamicStatus=hwBrasSbcDynamicStatus, hwBrasSbcSignalAddrMapRowStatus=hwBrasSbcSignalAddrMapRowStatus, hwBrasSbcH248SignalMapEntry=hwBrasSbcH248SignalMapEntry, hwBrasSbcH248StatSignalPacketInNumber=hwBrasSbcH248StatSignalPacketInNumber, hwBrasSbcIPCarBWVpn=hwBrasSbcIPCarBWVpn, hwBrasSbcSessionCarRuleRowStatus=hwBrasSbcSessionCarRuleRowStatus, hwBrasSbcMGMdCliAddrVPNName=hwBrasSbcMGMdCliAddrVPNName, hwBrasSbcUdpTunnelSctpAddr=hwBrasSbcUdpTunnelSctpAddr, hwBrasSbcImsMGAgingTimer=hwBrasSbcImsMGAgingTimer, hwBrasSbcMediaPassTable=hwBrasSbcMediaPassTable, hwBrasSbcMediaPassIndex=hwBrasSbcMediaPassIndex, hwBrasSbcMDLengthTable=hwBrasSbcMDLengthTable, hwBrasSbcMgcp=hwBrasSbcMgcp, hwBrasSbcH248StatSignalPacketIndex=hwBrasSbcH248StatSignalPacketIndex, hwBrasSbcIadmsWellknownPortIndex=hwBrasSbcIadmsWellknownPortIndex, hwBrasSbcMgcpSignalMapTable=hwBrasSbcMgcpSignalMapTable, hwBrasSbcTrapInfoHrp=hwBrasSbcTrapInfoHrp, hwBrasSbcH323IntercomMapMediaTable=hwBrasSbcH323IntercomMapMediaTable, hwBrasSbcUpathStatSignalPacketRowStatus=hwBrasSbcUpathStatSignalPacketRowStatus, hwBrasSbcMediaPassEnable=hwBrasSbcMediaPassEnable, hwBrasSbcMGPortIndex=hwBrasSbcMGPortIndex, HWBrasSecurityProtocol=HWBrasSecurityProtocol, hwBrasSbcUpathSignalMapTable=hwBrasSbcUpathSignalMapTable, hwBrasSbcOmTables=hwBrasSbcOmTables, hwBrasSbcImsActiveRowStatus=hwBrasSbcImsActiveRowStatus, hwBrasSbcCopsLinkDown=hwBrasSbcCopsLinkDown, hwBrasSbcImsMGDomainMapIndex=hwBrasSbcImsMGDomainMapIndex, hwBrasSbcRtpSpecialAddrRowStatus=hwBrasSbcRtpSpecialAddrRowStatus, hwBrasSbcMapGroupLeaves=hwBrasSbcMapGroupLeaves, hwBrasSbcRtpSpecialAddrAddr=hwBrasSbcRtpSpecialAddrAddr, hwBrasSbcUpathIntercomMapMediaAddr=hwBrasSbcUpathIntercomMapMediaAddr, hwBrasSbcIPCarStatus=hwBrasSbcIPCarStatus, hwBrasSbcIPCarBWValue=hwBrasSbcIPCarBWValue, hwBrasSbcRtpSpecialAddrIndex=hwBrasSbcRtpSpecialAddrIndex, hwBrasSbcIdoWellknownPortProtocol=hwBrasSbcIdoWellknownPortProtocol, hwBrasSbcCacCallRateRowStatus=hwBrasSbcCacCallRateRowStatus, hwBrasSbcIadmsMibRegRowStatus=hwBrasSbcIadmsMibRegRowStatus, hwBrasSbcMgcpPDHCountLimit=hwBrasSbcMgcpPDHCountLimit, hwBrasSbcH248Enable=hwBrasSbcH248Enable, hwBrasSbcMGProtocolEntry=hwBrasSbcMGProtocolEntry, hwBrasSbcNatSessionAgingTime=hwBrasSbcNatSessionAgingTime, hwBrasSbcH323Enable=hwBrasSbcH323Enable, HWBrasEnabledStatus=HWBrasEnabledStatus, hwBrasSbcMGIadmsAddrIP1=hwBrasSbcMGIadmsAddrIP1, hwBrasSbcIdoStatSignalPacketTable=hwBrasSbcIdoStatSignalPacketTable, hwBrasSbcIadmsTimer=hwBrasSbcIadmsTimer, hwBrasSbcSipMediaMapEntry=hwBrasSbcSipMediaMapEntry, hwBrasSbcCpu=hwBrasSbcCpu, hwBrasSbcSessionCarRuleName=hwBrasSbcSessionCarRuleName, hwBrasSbcUsergroupIndex=hwBrasSbcUsergroupIndex, hwBrasSbcIdoIntercomMapSignalEntry=hwBrasSbcIdoIntercomMapSignalEntry, hwBrasSbcCacRegRateRowStatus=hwBrasSbcCacRegRateRowStatus, hwBrasSbcUpathHeartbeatTimer=hwBrasSbcUpathHeartbeatTimer, hwBrasSbcMgcpIntercomMapMediaProtocol=hwBrasSbcMgcpIntercomMapMediaProtocol, hwBrasSbcH323IntercomMapMediaEntry=hwBrasSbcH323IntercomMapMediaEntry, hwBrasSbcMediaDetectStatus=hwBrasSbcMediaDetectStatus, hwBrasSbcUpathIntercomMapMediaProtocol=hwBrasSbcUpathIntercomMapMediaProtocol, hwBrasSbcRoamlimitEnable=hwBrasSbcRoamlimitEnable, hwBrasSbcClientPortTable=hwBrasSbcClientPortTable, hwBrasSbcH323StatSignalPacketRowStatus=hwBrasSbcH323StatSignalPacketRowStatus, hwBrasSbcTrapInfoPortStatistic=hwBrasSbcTrapInfoPortStatistic, hwBrasSbcMDStatisticEntry=hwBrasSbcMDStatisticEntry, hwBrasSbcH323WellknownPortIndex=hwBrasSbcH323WellknownPortIndex, hwBrasSbcImsRptFail=hwBrasSbcImsRptFail, hwBrasSbcMGServAddrIP4=hwBrasSbcMGServAddrIP4, hwBrasSbcH248SignalMapAddr=hwBrasSbcH248SignalMapAddr, hwBrasSbcSipSignalMapAddrType=hwBrasSbcSipSignalMapAddrType, hwBrasSbcIdoWellknownPortEntry=hwBrasSbcIdoWellknownPortEntry, hwBrasSbcIdoIntercomMapSignalTable=hwBrasSbcIdoIntercomMapSignalTable, hwBrasSbcMGPrefixEntry=hwBrasSbcMGPrefixEntry, hwBrasSbcMediaAddrMapServerAddr=hwBrasSbcMediaAddrMapServerAddr, hwBrasSbcH323Q931WellknownPort=hwBrasSbcH323Q931WellknownPort, hwBrasSbcMGProtocolMgcp=hwBrasSbcMGProtocolMgcp, hwBrasSbcSoftswitchPortIP=hwBrasSbcSoftswitchPortIP, hwBrasSbcMGSofxAddrVPN=hwBrasSbcMGSofxAddrVPN, hwBrasSbcRoamlimitSyslogEnable=hwBrasSbcRoamlimitSyslogEnable, hwBrasSbcMgcpStatSignalPacketOutOctet=hwBrasSbcMgcpStatSignalPacketOutOctet, hwBrasSbcMgcpIntercomMapMediaAddr=hwBrasSbcMgcpIntercomMapMediaAddr, hwBrasSbcUpathWellknownPortEntry=hwBrasSbcUpathWellknownPortEntry, hwBrasSbcQRBandWidth=hwBrasSbcQRBandWidth, hwBrasSbcMGPrefixID=hwBrasSbcMGPrefixID, hwBrasSbcH323CallsessionTimer=hwBrasSbcH323CallsessionTimer, hwBrasSbcMGMdCliAddrIP3=hwBrasSbcMGMdCliAddrIP3, hwBrasSbcMGMdCliAddrSlotID2=hwBrasSbcMGMdCliAddrSlotID2, hwBrasSbcMGMdServAddrIf4=hwBrasSbcMGMdServAddrIf4, hwBrasSbcImsActiveStatus=hwBrasSbcImsActiveStatus, hwBrasSbcIadmsIntercomMapSignalProtocol=hwBrasSbcIadmsIntercomMapSignalProtocol, hwBrasSbcRtpSpecialAddrTable=hwBrasSbcRtpSpecialAddrTable, hwBrasSbcIadmsIntercomMapSignalNumber=hwBrasSbcIadmsIntercomMapSignalNumber, hwBrasSbcMediaPassAclNumber=hwBrasSbcMediaPassAclNumber, hwBrasSbcMgcpMediaMapProtocol=hwBrasSbcMgcpMediaMapProtocol, hwBrasSbcDefendUserConnectRateThreshold=hwBrasSbcDefendUserConnectRateThreshold, hwBrasSbcImsBandTable=hwBrasSbcImsBandTable, hwBrasSbcIadmsPortTable=hwBrasSbcIadmsPortTable, hwBrasSbcIPCarBWAddress=hwBrasSbcIPCarBWAddress, hwBrasSbcImsMGEntry=hwBrasSbcImsMGEntry)
mibBuilder.exportSymbols("HUAWEI-BRAS-SBC-MIB", hwBrasSbcMGIadmsAddrTable=hwBrasSbcMGIadmsAddrTable, hwBrasSbcIdoSignalMapAddr=hwBrasSbcIdoSignalMapAddr, hwBrasSbcIadmsSignalMapAddrType=hwBrasSbcIadmsSignalMapAddrType, hwBrasSbcMGPrefixTable=hwBrasSbcMGPrefixTable, hwBrasSbcMGMatchRowStatus=hwBrasSbcMGMatchRowStatus, hwBrasSbcUsergroupEntry=hwBrasSbcUsergroupEntry, hwBrasSbcImsMGDomainName=hwBrasSbcImsMGDomainName, hwBrasSbcSipStatSignalPacketRowStatus=hwBrasSbcSipStatSignalPacketRowStatus, hwBrasSbcIdo=hwBrasSbcIdo, hwBrasSbcUdpTunnelPortRowStatus=hwBrasSbcUdpTunnelPortRowStatus, hwBrasSbcH248IntercomMapMediaProtocol=hwBrasSbcH248IntercomMapMediaProtocol, hwBrasSbcSignalAddrMapIadmsAddr=hwBrasSbcSignalAddrMapIadmsAddr, hwBrasSbcBaseLeaves=hwBrasSbcBaseLeaves, hwBrasSbcUdpTunnelIfPortEntry=hwBrasSbcUdpTunnelIfPortEntry, hwBrasSbcViewTables=hwBrasSbcViewTables, hwBrasSbcMapGroupsEntry=hwBrasSbcMapGroupsEntry, hwBrasSbcTrapBindTable=hwBrasSbcTrapBindTable, hwBrasSbcH248IntercomMapSignalTable=hwBrasSbcH248IntercomMapSignalTable, hwBrasSbcH323IntercomMapMediaAddr=hwBrasSbcH323IntercomMapMediaAddr, hwBrasSbcMgcpStatSignalPacketInNumber=hwBrasSbcMgcpStatSignalPacketInNumber, hwBrasSbcMediaUsersTable=hwBrasSbcMediaUsersTable, hwBrasSbcMGCliAddrVPN=hwBrasSbcMGCliAddrVPN, hwBrasSbcMgcpEnable=hwBrasSbcMgcpEnable, hwBrasSbcMGMdCliAddrIndex=hwBrasSbcMGMdCliAddrIndex, hwBrasSbcH248SignalMapProtocol=hwBrasSbcH248SignalMapProtocol, hwBrasSbcMGSofxAddrIP1=hwBrasSbcMGSofxAddrIP1, hwBrasSbcH323SignalMapEntry=hwBrasSbcH323SignalMapEntry, hwNatAddrGrpVpnName=hwNatAddrGrpVpnName, hwBrasSbcIadmsMediaMapAddr=hwBrasSbcIadmsMediaMapAddr, hwBrasSbcIdoSignalMapAddrType=hwBrasSbcIdoSignalMapAddrType, hwBrasSbcIms=hwBrasSbcIms, hwBrasSbcH323WellknownPortTable=hwBrasSbcH323WellknownPortTable, hwBrasSbcClientPortPort02=hwBrasSbcClientPortPort02, hwBrasSbcSipWellknownPortEntry=hwBrasSbcSipWellknownPortEntry, hwBrasSbcPortStatisticNormal=hwBrasSbcPortStatisticNormal, hwBrasSbcMediaOnewayStatus=hwBrasSbcMediaOnewayStatus, hwBrasSbcUdpTunnelLeaves=hwBrasSbcUdpTunnelLeaves, hwBrasSbcUpathSignalMapNumber=hwBrasSbcUpathSignalMapNumber, hwBrasSbcImsMediaProxyEnable=hwBrasSbcImsMediaProxyEnable, hwBrasSbcMGSofxAddrIP3=hwBrasSbcMGSofxAddrIP3, hwBrasSbcSipWellknownPortRowStatus=hwBrasSbcSipWellknownPortRowStatus, hwBrasSbcMGMatchEntry=hwBrasSbcMGMatchEntry, hwBrasSbcSipIntercomMapMediaAddr=hwBrasSbcSipIntercomMapMediaAddr, hwBrasSbcH248MediaMapNumber=hwBrasSbcH248MediaMapNumber, hwBrasSbcIadmsPortIP=hwBrasSbcIadmsPortIP, hwBrasSbcSlotInforTable=hwBrasSbcSlotInforTable, hwBrasSbcMgcpStatSignalPacketTable=hwBrasSbcMgcpStatSignalPacketTable, hwBrasSbcIdoStatSignalPacketInNumber=hwBrasSbcIdoStatSignalPacketInNumber, hwBrasSbcImsMGIPAddr=hwBrasSbcImsMGIPAddr, hwBrasSbcMgcpWellknownPortIndex=hwBrasSbcMgcpWellknownPortIndex, hwBrasSbcPortStatistic=hwBrasSbcPortStatistic, hwBrasSbcRoamlimitAclNumber=hwBrasSbcRoamlimitAclNumber, hwBrasSbcMDLengthEntry=hwBrasSbcMDLengthEntry, hwBrasSbcNatAddressGroupTable=hwBrasSbcNatAddressGroupTable, hwBrasSbcDefendUserConnectRateTable=hwBrasSbcDefendUserConnectRateTable, hwBrasSbcSlotIndex=hwBrasSbcSlotIndex, hwBrasSbcIdoStatSignalPacketIndex=hwBrasSbcIdoStatSignalPacketIndex, hwBrasSbcStatMediaPacketOctet=hwBrasSbcStatMediaPacketOctet, hwBrasSbcH248IntercomMapMediaEntry=hwBrasSbcH248IntercomMapMediaEntry, hwBrasSbcDefendMode=hwBrasSbcDefendMode, hwBrasSbcImsConnectCliPort=hwBrasSbcImsConnectCliPort, hwBrasSbcMGMdCliAddrIf3=hwBrasSbcMGMdCliAddrIf3, hwBrasSbcMGPortNumber=hwBrasSbcMGPortNumber, hwBrasSbcImsMGMidString=hwBrasSbcImsMGMidString, hwBrasSbcMgcpWellknownPortRowStatus=hwBrasSbcMgcpWellknownPortRowStatus, hwBrasSbcClientPortPort05=hwBrasSbcClientPortPort05, hwBrasSbcSignalAddrMapTable=hwBrasSbcSignalAddrMapTable, hwBrasSbcMGPortRowStatus=hwBrasSbcMGPortRowStatus, hwBrasSbcH323SyslogEnable=hwBrasSbcH323SyslogEnable, hwBrasSbcSessionCar=hwBrasSbcSessionCar, hwBrasSbcH248=hwBrasSbcH248, hwBrasSbcIdoIntercomMapSignalNumber=hwBrasSbcIdoIntercomMapSignalNumber, hwBrasSbcSignalingFloodNormal=hwBrasSbcSignalingFloodNormal, hwBrasSbcMediaUsersCallerID3=hwBrasSbcMediaUsersCallerID3, hwBrasSbcImsMGIPVersion=hwBrasSbcImsMGIPVersion, hwBrasSbcMGIadmsAddrRowStatus=hwBrasSbcMGIadmsAddrRowStatus, hwBrasSbcUpathStatSignalPacketInNumber=hwBrasSbcUpathStatSignalPacketInNumber, hwBrasSbcTrapInfoTable=hwBrasSbcTrapInfoTable, hwBrasSbcStatistic=hwBrasSbcStatistic, hwBrasSbcImsLeaves=hwBrasSbcImsLeaves, hwBrasSbcMGProtocolIadms=hwBrasSbcMGProtocolIadms, hwBrasSbcIadmsMibRegRegister=hwBrasSbcIadmsMibRegRegister, hwBrasSbcIadmsMediaMapEntry=hwBrasSbcIadmsMediaMapEntry, hwBrasSbcInstanceTable=hwBrasSbcInstanceTable, hwBrasSbcImsMGConnectTimer=hwBrasSbcImsMGConnectTimer, hwBrasSbcSipStatSignalPacketOutNumber=hwBrasSbcSipStatSignalPacketOutNumber, hwBrasSbcH248WellknownPortPort=hwBrasSbcH248WellknownPortPort, hwBrasSbcSessionCarRuleID=hwBrasSbcSessionCarRuleID, hwBrasSbcTrapInfoSignalingFlood=hwBrasSbcTrapInfoSignalingFlood, hwBrasSbcUsergroupRuleRowStatus=hwBrasSbcUsergroupRuleRowStatus, hwBrasSbcSignalingFlood=hwBrasSbcSignalingFlood, hwBrasSbcIntercomPrefixRowStatus=hwBrasSbcIntercomPrefixRowStatus, hwBrasSbcImsQosEnable=hwBrasSbcImsQosEnable, hwBrasSbcTrapBindType=hwBrasSbcTrapBindType, hwBrasSbcDefendConnectRateTable=hwBrasSbcDefendConnectRateTable, hwBrasSbcSipMediaMapTable=hwBrasSbcSipMediaMapTable, hwBrasSbcAdvanceTables=hwBrasSbcAdvanceTables, hwBrasSbcMgcpStatSignalPacketIndex=hwBrasSbcMgcpStatSignalPacketIndex, hwBrasSbcImsConnectRowStatus=hwBrasSbcImsConnectRowStatus, hwBrasSbcH323StatSignalPacketIndex=hwBrasSbcH323StatSignalPacketIndex, hwBrasSbcMGProtocolIndex=hwBrasSbcMGProtocolIndex, hwBrasSbcDefendUserConnectRatePercent=hwBrasSbcDefendUserConnectRatePercent, hwBrasSbcView=hwBrasSbcView, hwBrasSbcMgcpStatSignalPacketInOctet=hwBrasSbcMgcpStatSignalPacketInOctet, hwBrasSbcMGServAddrTable=hwBrasSbcMGServAddrTable, hwBrasSbcClientPortPort08=hwBrasSbcClientPortPort08, hwBrasSbcSessionCarRuleDegreeID=hwBrasSbcSessionCarRuleDegreeID, hwBrasSbcBackupGroupTable=hwBrasSbcBackupGroupTable, hwBrasSbcIadmsStatSignalPacketInOctet=hwBrasSbcIadmsStatSignalPacketInOctet, hwBrasSbcH248IntercomMapSignalNumber=hwBrasSbcH248IntercomMapSignalNumber, hwBrasSbcH248StatSignalPacketInOctet=hwBrasSbcH248StatSignalPacketInOctet, hwBrasSbcUpathIntercomMapMediaNumber=hwBrasSbcUpathIntercomMapMediaNumber, hwBrasSbcH323WellknownPortRowStatus=hwBrasSbcH323WellknownPortRowStatus, hwBrasSbcMGIadmsAddrIndex=hwBrasSbcMGIadmsAddrIndex, hwBrasSbcMediaAddrMapWeight=hwBrasSbcMediaAddrMapWeight, hwBrasSbcUpathTables=hwBrasSbcUpathTables, hwBrasSbcUdpTunnelPortProtocol=hwBrasSbcUdpTunnelPortProtocol, hwBrasSbcViewLeaves=hwBrasSbcViewLeaves, hwBrasSbcMgcpStatSignalPacketOutNumber=hwBrasSbcMgcpStatSignalPacketOutNumber, hwBrasSbcH323SignalMapAddr=hwBrasSbcH323SignalMapAddr, hwBrasSbcImsConnectServIP=hwBrasSbcImsConnectServIP, hwBrasSbcImsMGDescription=hwBrasSbcImsMGDescription, hwBrasSbcUdpTunnelPoolTable=hwBrasSbcUdpTunnelPoolTable, hwBrasSbcPortrangeRowStatus=hwBrasSbcPortrangeRowStatus, hwBrasSbcImsConnectCliIP=hwBrasSbcImsConnectCliIP, hwBrasSbcCac=hwBrasSbcCac, hwBrasSbcSipIntercomMapSignalEntry=hwBrasSbcSipIntercomMapSignalEntry, hwBrasSbcMGIadmsAddrIP3=hwBrasSbcMGIadmsAddrIP3, hwBrasSbcMGPortEntry=hwBrasSbcMGPortEntry, hwBrasSbcMGMdServAddrIP3=hwBrasSbcMGMdServAddrIP3, hwBrasSbcImsBandIndex=hwBrasSbcImsBandIndex, hwBrasSbcH323IntercomMapSignalTable=hwBrasSbcH323IntercomMapSignalTable, hwBrasSbcImsMGInstanceName=hwBrasSbcImsMGInstanceName, hwBrasSbcSipIntercomMapSignalProtocol=hwBrasSbcSipIntercomMapSignalProtocol, hwBrasSbcMgcpStatSignalPacketEntry=hwBrasSbcMgcpStatSignalPacketEntry, hwBrasSbcUpathStatSignalPacketOutNumber=hwBrasSbcUpathStatSignalPacketOutNumber, hwBrasSbcSipIntercomMapMediaProtocol=hwBrasSbcSipIntercomMapMediaProtocol, hwBrasSbcH323MediaMapNumber=hwBrasSbcH323MediaMapNumber, hwBrasSbcMediaDefend=hwBrasSbcMediaDefend, hwBrasSbcMgcpStatSignalPacketRowStatus=hwBrasSbcMgcpStatSignalPacketRowStatus, hwBrasSbcStatMediaPacketTable=hwBrasSbcStatMediaPacketTable, hwBrasSbcDefendConnectRateRowStatus=hwBrasSbcDefendConnectRateRowStatus, hwBrasSbcNatVpnNameIndex=hwBrasSbcNatVpnNameIndex, hwBrasSbcMgcpLeaves=hwBrasSbcMgcpLeaves, hwBrasSbcIadmsSyslogEnable=hwBrasSbcIadmsSyslogEnable, hwBrasSbcIadmsRegRefreshEnable=hwBrasSbcIadmsRegRefreshEnable, hwBrasSbcBWLimitType=hwBrasSbcBWLimitType, hwBrasSbcMGServAddrEntry=hwBrasSbcMGServAddrEntry, hwBrasSbcImsMgLogEnable=hwBrasSbcImsMgLogEnable, hwNatAddrGrpRowstatus=hwNatAddrGrpRowstatus, hwBrasSbcMapGroupsType=hwBrasSbcMapGroupsType, hwBrasSbcH248WellknownPortRowStatus=hwBrasSbcH248WellknownPortRowStatus, hwBrasSbcDefendConnectRateProtocol=hwBrasSbcDefendConnectRateProtocol, hwBrasSbcIadmsSignalMapEntry=hwBrasSbcIadmsSignalMapEntry, hwBrasSbcUdpTunnelPortEntry=hwBrasSbcUdpTunnelPortEntry, hwBrasSbcIadmsIntercomMapSignalEntry=hwBrasSbcIadmsIntercomMapSignalEntry, hwBrasSbcH248SignalMapAddrType=hwBrasSbcH248SignalMapAddrType, hwBrasSbcMediaAddrMapRowStatus=hwBrasSbcMediaAddrMapRowStatus, hwBrasSbcStatisticDesc=hwBrasSbcStatisticDesc, hwBrasSbcSessionCarDegreeDscp=hwBrasSbcSessionCarDegreeDscp, hwBrasSbcIdoEnable=hwBrasSbcIdoEnable, hwBrasSbcMapGroupsStatus=hwBrasSbcMapGroupsStatus, hwBrasSbcMGProtocolTable=hwBrasSbcMGProtocolTable, hwBrasSbcImsMediaProxyLogEnable=hwBrasSbcImsMediaProxyLogEnable, hwBrasSbcDHLeaves=hwBrasSbcDHLeaves, hwBrasSbcSessionCarRuleEntry=hwBrasSbcSessionCarRuleEntry, hwBrasSbcMgcpWellknownPortPort=hwBrasSbcMgcpWellknownPortPort, hwBrasSbcSctpStatus=hwBrasSbcSctpStatus, hwBrasSbcH248UserAgeTimer=hwBrasSbcH248UserAgeTimer, hwBrasSbcIadmsIntercomMapMediaTable=hwBrasSbcIadmsIntercomMapMediaTable, hwBrasSbcMGSofxAddrTable=hwBrasSbcMGSofxAddrTable, hwBrasSbcMGMatchAcl=hwBrasSbcMGMatchAcl, hwBrasSbcSipIntercomMapSignalAddr=hwBrasSbcSipIntercomMapSignalAddr, hwBrasSbcStatisticIndex=hwBrasSbcStatisticIndex, hwBrasSbcBWLimitLeaves=hwBrasSbcBWLimitLeaves, hwBrasSbcH248StatSignalPacketRowStatus=hwBrasSbcH248StatSignalPacketRowStatus, hwBrasSbcSecurityLeaves=hwBrasSbcSecurityLeaves, hwBrasSbcIadmsWellknownPortEntry=hwBrasSbcIadmsWellknownPortEntry, hwBrasSbcH248StatSignalPacketOutOctet=hwBrasSbcH248StatSignalPacketOutOctet, hwBrasSbcMediaPassRowStatus=hwBrasSbcMediaPassRowStatus, hwBrasSbcH323=hwBrasSbcH323, hwBrasSbcH323IntercomMapSignalEntry=hwBrasSbcH323IntercomMapSignalEntry, hwBrasSbcUpathEnable=hwBrasSbcUpathEnable, hwBrasSbcMGSofxAddrIndex=hwBrasSbcMGSofxAddrIndex, hwBrasSbcSoftswitchPortEntry=hwBrasSbcSoftswitchPortEntry, hwBrasSbcMGMdServAddrIf2=hwBrasSbcMGMdServAddrIf2, hwBrasSbcMgcpWellknownPortEntry=hwBrasSbcMgcpWellknownPortEntry, hwBrasSbcUpathCallsessionTimer=hwBrasSbcUpathCallsessionTimer, hwBrasSbcMDLengthMax=hwBrasSbcMDLengthMax, hwBrasSbcImsMGIPPort=hwBrasSbcImsMGIPPort, hwBrasSbcSipWellknownPortIndex=hwBrasSbcSipWellknownPortIndex, hwBrasSbcClientPortPort03=hwBrasSbcClientPortPort03, hwNatAddrGrpRefCount=hwNatAddrGrpRefCount, hwBrasSbcMGSofxAddrEntry=hwBrasSbcMGSofxAddrEntry, hwBrasSbcSipRegReduceTimer=hwBrasSbcSipRegReduceTimer, hwBrasSbcUsergroupRuleEntry=hwBrasSbcUsergroupRuleEntry, hwBrasSbcSlotInforRowStatus=hwBrasSbcSlotInforRowStatus, hwBrasSbcUsergroupRuleIndex=hwBrasSbcUsergroupRuleIndex, hwBrasSbcIadmsStatSignalPacketOutOctet=hwBrasSbcIadmsStatSignalPacketOutOctet, hwBrasSbcBackupGroupID=hwBrasSbcBackupGroupID, hwBrasSbcSecurity=hwBrasSbcSecurity, hwBrasSbcSipSyslogEnable=hwBrasSbcSipSyslogEnable, hwBrasSbcMGProtocolH248=hwBrasSbcMGProtocolH248, hwBrasSbcSignalAddrMapServerAddr=hwBrasSbcSignalAddrMapServerAddr, hwBrasSbcCacRegTotalThreshold=hwBrasSbcCacRegTotalThreshold, hwBrasSbcMGCliAddrEntry=hwBrasSbcMGCliAddrEntry, hwBrasSbcMGCliAddrIndex=hwBrasSbcMGCliAddrIndex, hwBrasSbcUdpTunnelPoolIndex=hwBrasSbcUdpTunnelPoolIndex, hwBrasSbcUpathStatSignalPacketIndex=hwBrasSbcUpathStatSignalPacketIndex, hwBrasSbcMapGroupsRowStatus=hwBrasSbcMapGroupsRowStatus, hwBrasSbcCacCallTotalThreshold=hwBrasSbcCacCallTotalThreshold, hwNatAddrGrpIndex=hwNatAddrGrpIndex, hwBrasSbcIadmsStatSignalPacketTable=hwBrasSbcIadmsStatSignalPacketTable, hwBrasSbcTrapGroup=hwBrasSbcTrapGroup, hwBrasSbcMediaUsersCalleeID3=hwBrasSbcMediaUsersCalleeID3, hwBrasSbcImsMGRowStatus=hwBrasSbcImsMGRowStatus, hwBrasSbcSignalAddrMapEntry=hwBrasSbcSignalAddrMapEntry, hwBrasSbcImsSessDelete=hwBrasSbcImsSessDelete, hwBrasSbcStatisticSyslogEnable=hwBrasSbcStatisticSyslogEnable, hwBrasSbcCacRegRateProtocol=hwBrasSbcCacRegRateProtocol, hwBrasSbcUpathWellknownPortRowStatus=hwBrasSbcUpathWellknownPortRowStatus, hwBrasSbcMapGroupsIndex=hwBrasSbcMapGroupsIndex, hwBrasSbcRoamlimitDefault=hwBrasSbcRoamlimitDefault, hwBrasSbcImsBandIfType=hwBrasSbcImsBandIfType, hwBrasSbcMDLengthRowStatus=hwBrasSbcMDLengthRowStatus, hwBrasSbcStatisticTable=hwBrasSbcStatisticTable, hwBrasSbcIadmsTables=hwBrasSbcIadmsTables, hwBrasSbcH248SyslogEnable=hwBrasSbcH248SyslogEnable, hwBrasSbcImsMGIndex=hwBrasSbcImsMGIndex, hwBrasSbcCacCallRateThreshold=hwBrasSbcCacCallRateThreshold, hwBrasSbcMgcpSignalMapEntry=hwBrasSbcMgcpSignalMapEntry, hwBrasSbcMediaDefendTables=hwBrasSbcMediaDefendTables, hwBrasSbcH323Tables=hwBrasSbcH323Tables, hwBrasSbcMgcpMediaMapAddr=hwBrasSbcMgcpMediaMapAddr, hwBrasSbcMGServAddrIP2=hwBrasSbcMGServAddrIP2, HwBrasBWLimitType=HwBrasBWLimitType, hwBrasSbcIntercomEnable=hwBrasSbcIntercomEnable, hwBrasSbcStatisticTime=hwBrasSbcStatisticTime, hwBrasSbcH323SignalMapAddrType=hwBrasSbcH323SignalMapAddrType, hwBrasSbcSip=hwBrasSbcSip, hwBrasSbcIdlecutRtcpTimer=hwBrasSbcIdlecutRtcpTimer, hwBrasSbcSipMediaMapNumber=hwBrasSbcSipMediaMapNumber, hwBrasSbcUpathStatSignalPacketTable=hwBrasSbcUpathStatSignalPacketTable, hwBrasSbcClientPortPort15=hwBrasSbcClientPortPort15, hwBrasSbcH248StatSignalPacketTable=hwBrasSbcH248StatSignalPacketTable, hwBrasSbcDHSIPDetectStatus=hwBrasSbcDHSIPDetectStatus, hwBrasSbcCacRegTotalRowStatus=hwBrasSbcCacRegTotalRowStatus, hwBrasSbcMGMdServAddrIf1=hwBrasSbcMGMdServAddrIf1, hwBrasSbcMGMdServAddrIndex=hwBrasSbcMGMdServAddrIndex, hwBrasSbcMgcpIntercomMapMediaNumber=hwBrasSbcMgcpIntercomMapMediaNumber, hwBrasSbcSipLeaves=hwBrasSbcSipLeaves, hwBrasSbcH248MediaMapProtocol=hwBrasSbcH248MediaMapProtocol, hwBrasSbcClientPortRowStatus=hwBrasSbcClientPortRowStatus, hwBrasSbcClientPortPort04=hwBrasSbcClientPortPort04)
mibBuilder.exportSymbols("HUAWEI-BRAS-SBC-MIB", hwBrasSbcMDStatisticFragDrop=hwBrasSbcMDStatisticFragDrop, hwBrasSbcComformance=hwBrasSbcComformance, hwBrasSbcMGIadmsAddrEntry=hwBrasSbcMGIadmsAddrEntry, hwBrasSbcIntercomStatus=hwBrasSbcIntercomStatus, hwBrasSbcClientPortProtocol=hwBrasSbcClientPortProtocol, hwBrasSbcUpathIntercomMapSignalTable=hwBrasSbcUpathIntercomMapSignalTable, hwBrasSbcUpathMediaMapNumber=hwBrasSbcUpathMediaMapNumber, hwBrasSbcTrapBindID=hwBrasSbcTrapBindID, hwBrasSbcMGMdCliAddrIP4=hwBrasSbcMGMdCliAddrIP4, hwBrasSbcMgcpWellknownPortAddr=hwBrasSbcMgcpWellknownPortAddr, hwBrasSbcIdoStatSignalPacketRowStatus=hwBrasSbcIdoStatSignalPacketRowStatus, hwBrasSbcSipStatSignalPacketIndex=hwBrasSbcSipStatSignalPacketIndex, hwBrasSbcIadmsWellknownPortAddr=hwBrasSbcIadmsWellknownPortAddr, hwBrasSbcDefendConnectRatePercent=hwBrasSbcDefendConnectRatePercent, hwBrasSbcMediaAddrMapEntry=hwBrasSbcMediaAddrMapEntry, hwBrasSbcBase=hwBrasSbcBase, hwBrasSbcSessionCarTables=hwBrasSbcSessionCarTables, HwBrasAppMode=HwBrasAppMode, hwBrasSbcSipWellknownPortTable=hwBrasSbcSipWellknownPortTable, hwBrasSbcImsBandIfIndex=hwBrasSbcImsBandIfIndex, hwBrasSbcMGSofxAddrIP4=hwBrasSbcMGSofxAddrIP4, hwBrasSbcIdoWellknownPortIndex=hwBrasSbcIdoWellknownPortIndex, hwBrasSbcImsMGDomainRowStatus=hwBrasSbcImsMGDomainRowStatus, hwBrasSbcTrapInfoImsCcbID=hwBrasSbcTrapInfoImsCcbID, hwBrasSbcMGMdCliAddrSlotID3=hwBrasSbcMGMdCliAddrSlotID3, hwBrasSbcBackupGroupInstanceName=hwBrasSbcBackupGroupInstanceName, hwBrasSbcCpuNormal=hwBrasSbcCpuNormal, hwBrasSbcMgmt=hwBrasSbcMgmt, hwBrasSbcInstanceRowStatus=hwBrasSbcInstanceRowStatus, hwBrasSbcMGIadmsAddrVPN=hwBrasSbcMGIadmsAddrVPN, hwBrasSbcMapGroupSessionLimit=hwBrasSbcMapGroupSessionLimit, hwBrasSbcUdpTunnelEnable=hwBrasSbcUdpTunnelEnable, hwBrasSbcImsMGIPRowStatus=hwBrasSbcImsMGIPRowStatus, hwBrasSbcDHSIPDetectSourcePort=hwBrasSbcDHSIPDetectSourcePort, hwBrasSbcIdoIntercomMapSignalAddr=hwBrasSbcIdoIntercomMapSignalAddr, hwBrasSbcH323StatSignalPacketTable=hwBrasSbcH323StatSignalPacketTable, hwBrasSbcAppMode=hwBrasSbcAppMode, hwBrasSbcUpathWellknownPortTable=hwBrasSbcUpathWellknownPortTable, hwBrasSbcIaLinkUp=hwBrasSbcIaLinkUp, hwBrasSbcMGIadmsAddrIP2=hwBrasSbcMGIadmsAddrIP2, hwBrasSbcClientPortPort07=hwBrasSbcClientPortPort07, hwBrasSbcImsMGProtocol=hwBrasSbcImsMGProtocol, hwBrasSbcUdpTunnelPoolRowStatus=hwBrasSbcUdpTunnelPoolRowStatus, hwBrasSbcClientPortPort06=hwBrasSbcClientPortPort06, hwBrasSbcMGMdServAddrVPNName=hwBrasSbcMGMdServAddrVPNName, hwBrasSbcIntercomPrefixEntry=hwBrasSbcIntercomPrefixEntry, hwBrasSbcImsActiveTable=hwBrasSbcImsActiveTable, hwBrasSbcSoftswitchPortPort=hwBrasSbcSoftswitchPortPort, hwBrasSbcMgcpWellknownPortTable=hwBrasSbcMgcpWellknownPortTable, hwBrasSbcIadms=hwBrasSbcIadms, hwBrasSbcIadmsPortPort=hwBrasSbcIadmsPortPort, hwBrasSbcH323SignalMapTable=hwBrasSbcH323SignalMapTable, hwBrasSbcMapGroupInstanceName=hwBrasSbcMapGroupInstanceName, hwBrasSbcUdpTunnelTunnelTimer=hwBrasSbcUdpTunnelTunnelTimer, hwBrasSbcMapGroupTables=hwBrasSbcMapGroupTables, hwBrasSbcCacRegRateTable=hwBrasSbcCacRegRateTable, hwBrasSbcMGMdCliAddrIP1=hwBrasSbcMGMdCliAddrIP1, hwBrasSbcUdpTunnelIfPortPort=hwBrasSbcUdpTunnelIfPortPort, hwBrasSbcNatCfgEntry=hwBrasSbcNatCfgEntry, hwBrasSbcTrapInfoIndex=hwBrasSbcTrapInfoIndex, hwBrasSbcImsRptDrq=hwBrasSbcImsRptDrq, hwBrasSbcIadmsWellknownPortPort=hwBrasSbcIadmsWellknownPortPort, hwBrasSbcIadmsPortEntry=hwBrasSbcIadmsPortEntry, hwBrasSbcBackupGroupIndex=hwBrasSbcBackupGroupIndex, hwBrasSbcIadmsMibRegTable=hwBrasSbcIadmsMibRegTable, hwBrasSbcIdoWellknownPortRowStatus=hwBrasSbcIdoWellknownPortRowStatus, hwBrasSbcDefendExtStatus=hwBrasSbcDefendExtStatus, hwBrasSbcSessionCarDegreeEntry=hwBrasSbcSessionCarDegreeEntry, hwBrasSbcMediaUsersCallerID1=hwBrasSbcMediaUsersCallerID1, hwBrasSbcImsConnectServPort=hwBrasSbcImsConnectServPort, hwBrasSbcSoftswitchPortRowStatus=hwBrasSbcSoftswitchPortRowStatus, hwBrasSbcUdpTunnelPoolStartIP=hwBrasSbcUdpTunnelPoolStartIP, hwBrasSbcCacActionLogStatus=hwBrasSbcCacActionLogStatus, hwBrasSbcMediaAddrMapClientAddr=hwBrasSbcMediaAddrMapClientAddr, hwBrasSbcImsMGDomainEntry=hwBrasSbcImsMGDomainEntry, hwBrasSbcNatAddressGroupEntry=hwBrasSbcNatAddressGroupEntry, hwBrasSbcH323StatSignalPacketOutNumber=hwBrasSbcH323StatSignalPacketOutNumber, hwBrasSbcSignalingNatLeaves=hwBrasSbcSignalingNatLeaves, hwBrasSbcH323IntercomMapSignalProtocol=hwBrasSbcH323IntercomMapSignalProtocol, hwBrasSbcCacCallTotalPercent=hwBrasSbcCacCallTotalPercent, hwBrasSbcMediaUsersEntry=hwBrasSbcMediaUsersEntry, hwBrasSbcNatGroupIndex=hwBrasSbcNatGroupIndex, hwBrasSbcH323StatSignalPacketOutOctet=hwBrasSbcH323StatSignalPacketOutOctet, hwBrasSbcTrapInfoOldSSIP=hwBrasSbcTrapInfoOldSSIP, hwBrasSbcSessionCarDegreeBandWidth=hwBrasSbcSessionCarDegreeBandWidth, hwBrasSbcNotification=hwBrasSbcNotification, hwBrasSbcH323MediaMapEntry=hwBrasSbcH323MediaMapEntry, hwBrasSbcGroup=hwBrasSbcGroup, hwBrasSbcGroups=hwBrasSbcGroups, hwBrasSbcMediaDefendLeaves=hwBrasSbcMediaDefendLeaves)
