#
# PySNMP MIB module GWWEB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GWWEB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:20:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ObjectIdentity, Unsigned32, iso, Bits, Counter64, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, TimeTicks, NotificationType, Integer32, enterprises, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "Unsigned32", "iso", "Bits", "Counter64", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "TimeTicks", "NotificationType", "Integer32", "enterprises", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
novell = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
gwWeb = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 77))
gwWebAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 77, 1))
gwWebAccessTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1), )
if mibBuilder.loadTexts: gwWebAccessTable.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessTable.setDescription('A table of WebAccess objects')
webAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1), ).setIndexNames((0, "GWWEB-MIB", "gwWebAccessIndex"))
if mibBuilder.loadTexts: webAccessEntry.setStatus('mandatory')
if mibBuilder.loadTexts: webAccessEntry.setDescription('An entry in the WebAccess Table')
gwWebAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwWebAccessIndex.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessIndex.setDescription('Index into the WebAccess table')
gwWebAccessName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessName.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessName.setDescription('The name of this WebAccess agent.')
gwWebAccessCompletedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessCompletedRequests.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessCompletedRequests.setDescription('The number of completed requests.')
gwWebAccessFailedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessFailedRequests.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessFailedRequests.setDescription('The number of failed requests.')
gwWebAccessTotalThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessTotalThreads.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessTotalThreads.setDescription('The number of threads.')
gwWebAccessBusyThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessBusyThreads.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessBusyThreads.setDescription('The number of currently busy threads.')
gwWebAccessPeakBusyThreads = MibScalar((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessPeakBusyThreads.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessPeakBusyThreads.setDescription('The peak number of busy threads.')
gwWebAccessCurrentUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessCurrentUsers.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessCurrentUsers.setDescription('The number of current users.')
gwWebAccessTotalUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessTotalUsers.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessTotalUsers.setDescription('The total number of users.')
gwWebAccessPeakUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessPeakUsers.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessPeakUsers.setDescription('The peak number of users.')
gwWebAccessUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessUptime.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessUptime.setDescription('Uptime of this WebAccess agent.')
gwWebAccessOS = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessOS.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessOS.setDescription('Operating System name and version')
gwWebAccessVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gwWebAccessVersion.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessVersion.setDescription('Version and date of this WebAccess agent.')
gwWebAccessHTTPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 77, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gwWebAccessHTTPPort.setStatus('mandatory')
if mibBuilder.loadTexts: gwWebAccessHTTPPort.setDescription('HTTP Port for this WebAccess agent')
mibBuilder.exportSymbols("GWWEB-MIB", gwWebAccessTable=gwWebAccessTable, gwWebAccessTotalUsers=gwWebAccessTotalUsers, gwWebAccessTotalThreads=gwWebAccessTotalThreads, gwWebAccessCompletedRequests=gwWebAccessCompletedRequests, webAccessEntry=webAccessEntry, gwWebAccessPeakBusyThreads=gwWebAccessPeakBusyThreads, gwWebAccessVersion=gwWebAccessVersion, gwWebAccessUptime=gwWebAccessUptime, gwWebAccessOS=gwWebAccessOS, gwWebAccessBusyThreads=gwWebAccessBusyThreads, novell=novell, gwWebAccessIndex=gwWebAccessIndex, gwWeb=gwWeb, gwWebAccessPeakUsers=gwWebAccessPeakUsers, gwWebAccessFailedRequests=gwWebAccessFailedRequests, gwWebAccessName=gwWebAccessName, mibDoc=mibDoc, gwWebAccessHTTPPort=gwWebAccessHTTPPort, gwWebAccess=gwWebAccess, gwWebAccessCurrentUsers=gwWebAccessCurrentUsers)
