#
# PySNMP MIB module Juniper-Registry (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-Registry
# Produced by pysmi-0.3.4 at Wed May  1 14:02:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
juniperUniAdmin, = mibBuilder.importSymbols("Juniper-UNI-SMI", "juniperUniAdmin")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Bits, Counter64, Integer32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Gauge32, Counter32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Bits", "Counter64", "Integer32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Gauge32", "Counter32", "TimeTicks", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniAdmin = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2))
juniAdmin.setRevisions(('2004-12-23 11:58', '2003-12-17 19:25', '2003-12-17 17:22', '2002-11-13 20:38', '2001-06-01 21:18',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniAdmin.setRevisionsDescriptions(('Updated for the second generation E-series products.', 'Added support for the second generation E-series products.', 'Added 1G flash card.', 'Replaced Unisphere names with Juniper names. Added 512M flash card.', 'Initial version of this SNMP management information module.',))
if mibBuilder.loadTexts: juniAdmin.setLastUpdated('200412231158Z')
if mibBuilder.loadTexts: juniAdmin.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniAdmin.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniAdmin.setDescription('Administratively assigned object identifiers for Juniper Networks E-series edge router products.')
juniRegistry = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1))
juniErxRegistry = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 4, 2, 2))
juniES2Registry = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 4, 2, 3))
juniEntPhysicalType = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1))
juniPcmciaFlashCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1, 1))
if mibBuilder.loadTexts: juniPcmciaFlashCard.setStatus('current')
if mibBuilder.loadTexts: juniPcmciaFlashCard.setDescription('The vendor type ID for a standard PCMCIA flash card.')
juni85MegT2FlashCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1, 1, 1))
if mibBuilder.loadTexts: juni85MegT2FlashCard.setStatus('current')
if mibBuilder.loadTexts: juni85MegT2FlashCard.setDescription('The vendor type ID for an 85 Megabyte Type II ATA PCMCIA flash card (Product Code: PCM-85).')
juni220MegT2FlashCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1, 1, 2))
if mibBuilder.loadTexts: juni220MegT2FlashCard.setStatus('current')
if mibBuilder.loadTexts: juni220MegT2FlashCard.setDescription('The vendor type ID for a 220 Megabyte Type II ATA PCMCIA flash card (Product Code: FLASH-220M).')
juni512MegT2FlashCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1, 1, 3))
if mibBuilder.loadTexts: juni512MegT2FlashCard.setStatus('current')
if mibBuilder.loadTexts: juni512MegT2FlashCard.setDescription('The vendor type ID for a 512 Megabyte Type II ATA PCMCIA flash card (Product Code: RX-FLASH512-FRU).')
juni1GigT2FlashCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 1, 1, 4))
if mibBuilder.loadTexts: juni1GigT2FlashCard.setStatus('current')
if mibBuilder.loadTexts: juni1GigT2FlashCard.setDescription('The vendor type ID for a 1 Gigabyte Type II ATA PCMCIA flash card (Product Code: ERX-FLASH1GB-FRU).')
juniTraceRouteImplementationTypes = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 2))
if mibBuilder.loadTexts: juniTraceRouteImplementationTypes.setStatus('current')
if mibBuilder.loadTexts: juniTraceRouteImplementationTypes.setDescription('The registration node (point) for Juniper Traceroute implementation types.')
if mibBuilder.loadTexts: juniTraceRouteImplementationTypes.setReference('See DISMAN-TRACEROUTE-MIB.traceRouteCtlType (RFC2925) for how these objects are used.')
juniTraceRouteUsingIcmpProbe = ObjectIdentity((1, 3, 6, 1, 4, 1, 4874, 4, 2, 1, 2, 1))
if mibBuilder.loadTexts: juniTraceRouteUsingIcmpProbe.setStatus('current')
if mibBuilder.loadTexts: juniTraceRouteUsingIcmpProbe.setDescription('Indicates that an implementation is using ICMP probes to perform the trace-route operation.')
if mibBuilder.loadTexts: juniTraceRouteUsingIcmpProbe.setReference('DISMAN-TRACEROUTE-MIB.traceRouteCtlType (RFC2925)')
mibBuilder.exportSymbols("Juniper-Registry", juniPcmciaFlashCard=juniPcmciaFlashCard, juniTraceRouteUsingIcmpProbe=juniTraceRouteUsingIcmpProbe, PYSNMP_MODULE_ID=juniAdmin, juniRegistry=juniRegistry, juni85MegT2FlashCard=juni85MegT2FlashCard, juniAdmin=juniAdmin, juniErxRegistry=juniErxRegistry, juni1GigT2FlashCard=juni1GigT2FlashCard, juniTraceRouteImplementationTypes=juniTraceRouteImplementationTypes, juni512MegT2FlashCard=juni512MegT2FlashCard, juni220MegT2FlashCard=juni220MegT2FlashCard, juniES2Registry=juniES2Registry, juniEntPhysicalType=juniEntPhysicalType)
