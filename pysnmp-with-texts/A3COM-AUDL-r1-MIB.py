#
# PySNMP MIB module A3COM-AUDL-r1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-AUDL-R1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:03:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, Counter64, NotificationType, MibIdentifier, ModuleIdentity, TimeTicks, ObjectIdentity, iso, Integer32, Unsigned32, IpAddress, Counter32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "Counter64", "NotificationType", "MibIdentifier", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "iso", "Integer32", "Unsigned32", "IpAddress", "Counter32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
brouterMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2))
a3ComAuditLog = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 29))
a3ComAudlControl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 29, 1))
a3ComAudlConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 29, 2))
a3ComAudlControlAuditTrail = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auditTrail", 1), ("noAuditTrail", 2))).clone('noAuditTrail')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlControlAuditTrail.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlControlAuditTrail.setDescription('This parameter enables/disables the log message AuditTrail category which logs the AuditTrail messages. A default value of 2 means no AuditTrail.')
a3ComAudlControlConfig = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("config", 1), ("noConfig", 2))).clone('noConfig')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlControlConfig.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlControlConfig.setDescription('This parameter enables/disables the log message COnfig category which logs the SET/SETD/ADD/DELETE commands and other commands such as SysPassWord, SU, Login, Listen etc. The default value of 2 means no COnfig.')
a3ComAudlControlMessages = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("messages", 1), ("noMessages", 2))).clone('noMessages')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlControlMessages.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlControlMessages.setDescription('This parameter enables/disables the log message MEssages category which log System Message and Dial History. The default value of 2 means no MEssages.')
a3ComAudlControlSecurity = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("security", 1), ("noSecurity", 2))).clone('noSecurity')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlControlSecurity.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlControlSecurity.setDescription('This parameter enables/disables the log message SEcurity category which logs faulted set privilege, failed login and invalid community string. The default 2 means no SEcurity.')
a3ComAudlLogServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 2, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlLogServerAddr.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlLogServerAddr.setDescription('This is the IP address of a log server which has syslog daemon active with proper syslog configuration.')
a3ComAudlPriorityLevel = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("log-EMERG", 1), ("log-ALERT", 2), ("log-CRITICAL", 3), ("log-ERROR", 4), ("log-WARNING", 5), ("log-NOTICE", 6), ("log-INFO", 7), ("log-DEBUG", 8))).clone('log-INFO')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlPriorityLevel.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlPriorityLevel.setDescription('The level is used with facility to format a priority which used as a tag in log message before sending it to syslog daemon. It also controls the log sending operation, a log message with higher Level will be be sent together with what has been in Audit Log buffer, to a LogServerAddr immediately.')
a3ComAudlMaxLog = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlMaxLog.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlMaxLog.setDescription('It decides the maximum number of log commands/messages could accumulate in Audit Log buffer before sending to a LogServerAddr. Value 1 means send each log without buffering.')
a3ComAudlIdleTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 29, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 480)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComAudlIdleTime.setStatus('mandatory')
if mibBuilder.loadTexts: a3ComAudlIdleTime.setDescription('This controls the idle time in minute till sending Audit log buffer if it has data. Value of 0 means this idle time is disabled.')
mibBuilder.exportSymbols("A3COM-AUDL-r1-MIB", a3ComAuditLog=a3ComAuditLog, a3ComAudlControl=a3ComAudlControl, a3ComAudlControlSecurity=a3ComAudlControlSecurity, a3ComAudlControlAuditTrail=a3ComAudlControlAuditTrail, brouterMIB=brouterMIB, a3ComAudlLogServerAddr=a3ComAudlLogServerAddr, a3ComAudlMaxLog=a3ComAudlMaxLog, a3Com=a3Com, a3ComAudlControlConfig=a3ComAudlControlConfig, a3ComAudlConfig=a3ComAudlConfig, a3ComAudlPriorityLevel=a3ComAudlPriorityLevel, a3ComAudlIdleTime=a3ComAudlIdleTime, a3ComAudlControlMessages=a3ComAudlControlMessages)
