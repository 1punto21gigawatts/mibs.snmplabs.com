#
# PySNMP MIB module TPLINK-DHCPRELAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-DHCPRELAY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:24:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Unsigned32, ModuleIdentity, Bits, IpAddress, Counter32, Counter64, iso, MibIdentifier, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "Bits", "IpAddress", "Counter32", "Counter64", "iso", "MibIdentifier", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkDhcpRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 39))
tplinkDhcpRelayMIB.setRevisions(('2012-12-17 11:21',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setLastUpdated('201212171121Z')
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setOrganization('TPLINK')
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setContactInfo('www.tplink.com.cn')
if mibBuilder.loadTexts: tplinkDhcpRelayMIB.setDescription('Private MIB for DHCP Relay configuration.')
tplinkDhcpRelayMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1))
tplinkDhcpRelayNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 2))
dhcpRelayGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1))
dhcpRelayServerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2))
dhcpRelayEnableState = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayEnableState.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayEnableState.setDescription('Enable or disable the switch as a DHCP relay.')
dhcpRelayOption82Support = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82Support.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayOption82Support.setDescription('Enable or disable DHCP relay option 82 support on the switch.')
dhcpRelayExistedOption82Field = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("keep", 0), ("replace", 1), ("drop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayExistedOption82Field.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayExistedOption82Field.setDescription('Select how to handle existed DHCP relay option 82 field.')
dhcpRelayOption82Customization = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82Customization.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayOption82Customization.setDescription('Select Enable/Disable DHCP relay option 82 customization on the switch.')
dhcpRelayOption82CircuitID = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82CircuitID.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayOption82CircuitID.setDescription('Specify the Option 82 customized Circuit ID.(1-64 characters)')
dhcpRelayOption82RemoteID = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpRelayOption82RemoteID.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayOption82RemoteID.setDescription('Specify the Option 82 customized Remote ID.(1-64 characters)')
dhcpRelayServerVlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1), )
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceTable.setDescription('The list of DHCP server of VLAN interface.')
dhcpRelayServerVlanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1), ).setIndexNames((0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerVlanId"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerVlanInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceEntry.setDescription('DHCP server entries.')
dhcpRelayServerVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerVlanId.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerVlanId.setDescription('VLAN interface ID.')
dhcpRelayServerVlanInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceIp.setDescription('DHCP Server IP address.')
dhcpRelayServerVlanInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 1, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerVlanInterfaceStatus.setDescription(' The following values are states: these values may be used as follow: active(1),if the entry is being used. createAndGo(4),not being used. destroy(6),destory the entry.')
dhcpRelayServerLoopbackInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2), )
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceTable.setDescription('The list of DHCP server of loopback interface.')
dhcpRelayServerLoopbackInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1), ).setIndexNames((0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerLoopbackId"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerLoopbackInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceEntry.setDescription('DHCP server entries.')
dhcpRelayServerLoopbackId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackId.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerLoopbackId.setDescription('Loopback interface ID (1-2147483647).')
dhcpRelayServerLoopbackInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceIp.setDescription('DHCP Server IP address.')
dhcpRelayServerLoopbackInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 2, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerLoopbackInterfaceStatus.setDescription(' The following values are states: these values may be used as follow: active(1),if the entry is being used. createAndGo(4),not being used. destroy(6),destory the entry.')
dhcpRelayServerRoutedPortInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3), )
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceTable.setDescription('The list of DHCP server of routed port interface.')
dhcpRelayServerRoutedPortInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerRoutedPortInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceEntry.setDescription('DHCP server entries.')
dhcpRelayServerRoutedPortPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortPortId.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortPortId.setDescription('Displays the port ID.')
dhcpRelayServerRoutedPortInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceIp.setDescription('DHCP Server IP address.')
dhcpRelayServerRoutedPortInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 3, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerRoutedPortInterfaceStatus.setDescription(' The following values are states: these values may be used as follow: active(1),if the entry is being used. createAndGo(4),not being used. destroy(6),destory the entry.')
dhcpRelayServerPortChannelInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4), )
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceTable.setDescription('The list of DHCP server of port channel interface.')
dhcpRelayServerPortChannelInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TPLINK-DHCPRELAY-MIB", "dhcpRelayServerPortChannelInterfaceIp"))
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceEntry.setDescription('DHCP server entries.')
dhcpRelayServerPortChannelPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelPortId.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerPortChannelPortId.setDescription('Port channel interface ID.')
dhcpRelayServerPortChannelInterfaceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceIp.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceIp.setDescription('DHCP Server IP address.')
dhcpRelayServerPortChannelInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 39, 1, 2, 4, 1, 3), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceStatus.setStatus('current')
if mibBuilder.loadTexts: dhcpRelayServerPortChannelInterfaceStatus.setDescription(' The following values are states: these values may be used as follow: active(1),if the entry is being used. createAndGo(4),not being used. destroy(6),destory the entry.')
mibBuilder.exportSymbols("TPLINK-DHCPRELAY-MIB", tplinkDhcpRelayMIBObjects=tplinkDhcpRelayMIBObjects, dhcpRelayEnableState=dhcpRelayEnableState, dhcpRelayServerVlanInterfaceIp=dhcpRelayServerVlanInterfaceIp, dhcpRelayGlobalConfig=dhcpRelayGlobalConfig, dhcpRelayServerLoopbackId=dhcpRelayServerLoopbackId, dhcpRelayExistedOption82Field=dhcpRelayExistedOption82Field, tplinkDhcpRelayMIB=tplinkDhcpRelayMIB, dhcpRelayServerVlanInterfaceEntry=dhcpRelayServerVlanInterfaceEntry, dhcpRelayServerRoutedPortPortId=dhcpRelayServerRoutedPortPortId, PYSNMP_MODULE_ID=tplinkDhcpRelayMIB, dhcpRelayServerConfig=dhcpRelayServerConfig, dhcpRelayServerRoutedPortInterfaceTable=dhcpRelayServerRoutedPortInterfaceTable, dhcpRelayServerVlanInterfaceStatus=dhcpRelayServerVlanInterfaceStatus, dhcpRelayServerRoutedPortInterfaceIp=dhcpRelayServerRoutedPortInterfaceIp, dhcpRelayServerRoutedPortInterfaceEntry=dhcpRelayServerRoutedPortInterfaceEntry, dhcpRelayServerLoopbackInterfaceIp=dhcpRelayServerLoopbackInterfaceIp, tplinkDhcpRelayNotifications=tplinkDhcpRelayNotifications, dhcpRelayOption82Support=dhcpRelayOption82Support, dhcpRelayOption82Customization=dhcpRelayOption82Customization, dhcpRelayServerVlanInterfaceTable=dhcpRelayServerVlanInterfaceTable, dhcpRelayServerRoutedPortInterfaceStatus=dhcpRelayServerRoutedPortInterfaceStatus, dhcpRelayServerPortChannelInterfaceEntry=dhcpRelayServerPortChannelInterfaceEntry, dhcpRelayServerVlanId=dhcpRelayServerVlanId, dhcpRelayServerLoopbackInterfaceEntry=dhcpRelayServerLoopbackInterfaceEntry, dhcpRelayServerLoopbackInterfaceTable=dhcpRelayServerLoopbackInterfaceTable, dhcpRelayServerPortChannelPortId=dhcpRelayServerPortChannelPortId, dhcpRelayServerLoopbackInterfaceStatus=dhcpRelayServerLoopbackInterfaceStatus, dhcpRelayServerPortChannelInterfaceStatus=dhcpRelayServerPortChannelInterfaceStatus, dhcpRelayServerPortChannelInterfaceTable=dhcpRelayServerPortChannelInterfaceTable, dhcpRelayOption82RemoteID=dhcpRelayOption82RemoteID, dhcpRelayServerPortChannelInterfaceIp=dhcpRelayServerPortChannelInterfaceIp, dhcpRelayOption82CircuitID=dhcpRelayOption82CircuitID)
