#
# PySNMP MIB module ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
dot1dBasePort, dot1dBaseBridgeAddress, dot1dStpPort, dot1dStpPortEntry, dot1dBasePortEntry, dot1dBasePortIfIndex, dot1dStpDesignatedRoot = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort", "dot1dBaseBridgeAddress", "dot1dStpPort", "dot1dStpPortEntry", "dot1dBasePortEntry", "dot1dBasePortIfIndex", "dot1dStpDesignatedRoot")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
dot1qTpFdbPort, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qTpFdbPort")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibIdentifier, iso, Counter32, NotificationType, Integer32, Gauge32, TimeTicks, Bits, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Counter32", "NotificationType", "Integer32", "Gauge32", "TimeTicks", "Bits", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "ObjectIdentity")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
etsysIetfBridgeMibExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31))
etsysIetfBridgeMibExtMIB.setRevisions(('2007-07-31 18:19', '2007-03-21 21:02', '2006-11-09 16:37', '2006-10-04 19:51', '2004-11-04 14:47', '2004-05-28 15:08', '2004-04-08 20:04', '2004-03-04 19:39', '2004-03-01 22:29', '2003-11-14 18:31', '2003-06-19 19:36', '2002-12-13 21:20',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysIetfBridgeMibExtMIB.setRevisionsDescriptions(('Added IMPORT of Unsigned32.', 'Added an additional scalar: etsysIetfBridgeDot1qStaticUcastAsMcast, which is intended to modify the behavior of the filter-database lookup, specifically how static multicast entries in the database may be matched.', "Added a 'link partner capable' object for the Loop Protect feature. Recast the 'CIST error conditions' object as the 'CIST non-forwarding reason' object. Specified suitable default values for all Loop Protect configuration objects.", 'Addition of objects for configuring the Loop Protect feature on the CIST, and an object for summarizing Spanning Tree error conditions on the CIST.', 'Addition of a moved address notification, an object to globally enable/disable this notification, and a port level control for this notification.', 'Changed the etsysIetfBridgeDot1dStpNewRootTrapEnable object syntax to EnabledStatus and removed the reference to edgePortDisabled(3) from the description clause.', 'Changed the description clause for the etsysIetfBridgeDot1dStpBackupRootEnable object to limit its effect to the Common and Internal Spanning Tree.', 'Addition of the etsysIetfBridgeDot1dStpPortCistRoleValue object.', 'Addition of objects for the SpanGuard and Backup Root features, and an object for legacy bridge priorities.', 'Addition of a port level control for the new learned address notification and modifications to the descriptions for the associated objects.', 'Addition of a new address notification and an object to enable/disable this notification.', 'The initial version of this MIB module',))
if mibBuilder.loadTexts: etsysIetfBridgeMibExtMIB.setLastUpdated('200707311819Z')
if mibBuilder.loadTexts: etsysIetfBridgeMibExtMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysIetfBridgeMibExtMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysIetfBridgeMibExtMIB.setDescription("This MIB module defines a portion of the SNMP enterprise MIBs under Enterasys Networks' enterprise OID pertaining to proprietary extensions to the IETF BRIDGE-MIB as specified in RFC1493.")
etsysIetfBridgeMibExt = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1))
etsysIetfBridgeDot1dStp = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1))
etsysIetfBridgeDot1dBase = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 2))
etsysIetfBridgeDot1qBase = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 3))
etsysIetfBridgeDot1dSpanGuard = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 4))
etsysIetfBridgeDot1dBackupRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 5))
etsysIetfBridgeDot1dLoopProtect = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6))
etsysIetfBridgeDot1Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0))
etsysIetfBridgeDot1dStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1), )
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortTable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortTable.setDescription('Extensions to the table that contains port-specific information for the Spanning Tree Protocol.')
etsysIetfBridgeDot1dStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1, 1), )
dot1dStpPortEntry.registerAugmentions(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpPortEntry"))
etsysIetfBridgeDot1dStpPortEntry.setIndexNames(*dot1dStpPortEntry.getIndexNames())
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortEntry.setDescription('A list of extensions to the information maintained by every port about the Spanning Tree Protocol state for that port.')
etsysIetfBridgeDot1dStpPortStpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1, 1, 1), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortStpEnable.setReference('IEEE 802.1D-1990: Section 4.5.5.2')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortStpEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortStpEnable.setDescription('The enabled/disabled status of the Spanning Tree protocol on the port.')
etsysIetfBridgeDot1dStpPortSpanGuardBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortSpanGuardBlocking.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortSpanGuardBlocking.setDescription('The state of the port with respect to the SpanGuard feature. true(1) - this port is being held in the blocking state by the SpanGuard feature. false(2) - this port is not being held in the blocking state by the SpanGuard feature. When this object has a value of true(1) setting its value to false(2) will cause the SpanGuard feature to no longer hold the port in the blocking state. All other set operations on this object are undefined and MUST NOT have any affect.')
etsysIetfBridgeDot1dStpPortCistRoleValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("root", 2), ("designated", 3), ("alternate", 4), ("backUp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortCistRoleValue.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortCistRoleValue.setDescription("Indicates this port's role on the CIST. disabled -- this port has no role on the CIST. root -- this port has the role of root port on the CIST. designated -- this port has the role of designated port on the CIST. alternate -- this port has the role of alternate port on the CIST. backUp -- this port has the role of backup port on the CIST.")
etsysIetfBridgeDot1dStpPortCistNonForwardingReason = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("disputed", 2), ("spanGuardLocked", 3), ("loopProtectEvent", 4), ("loopProtectAdvisory", 5), ("loopbackDetected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortCistNonForwardingReason.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpPortCistNonForwardingReason.setDescription('Indicates the reason why this port has been placed in a non-forwarding state on the CIST (other than as a result of normal Spanning Tree protocol operation). none(1) - the port has not been placed in a non-forwarding state due to any exceptional condition. disputed(2) - the port has been placed in listening state because it has a designated role and an inferior designated BPDU has been received. spanGuardLocked(3) - the port has been placed in blocking state because it is configured as an admin edge port and a BPDU has been received. loopProtectEvent(4) - the port has been placed in listening or blocking state because a BPDU timeout has occurred and the port is awaiting reception of a type 2 BPDU on a point-to-point link. loopProtectAdvisory(5) - the port has been placed in listening state because a BPDU timeout has occurred (as with a Loop Protect event), but this condition may be normal because the link partner does not support the Loop Protect feature. loopbackDetected(6) - the port has been placed in blocking state because a loopback condition has been detected.')
etsysIetfBridgeDot1dStpTopChangeTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("edgePortDisabled", 3))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpTopChangeTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpTopChangeTrapEnable.setDescription('The enabled/disabled status of the Spanning Tree topology change notification. When this object is set to enabled(1) topology change notifications SHOULD be generated by the agent. When this object is set to disabled(2) topology change notifications MUST NOT be generated by the agent. When this object is set to edgePortDisabled(3) topology change notifications MUST NOT be generated by the agent for ports that are operating as edge ports, as specified by dot1dStpPortOperEdgePort, and SHOULD be generated for all other applicable ports.')
etsysIetfBridgeDot1dStpNewRootTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 3), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpNewRootTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpNewRootTrapEnable.setDescription('The enabled/disabled status of the Spanning Tree new root notification. When this object is set to enabled(1) new root notifications SHOULD be generated by the agent. When this object is set to disabled(2) new root notifications MUST NOT be generated by the agent.')
etsysIetfBridgeDot1dStpBridgePriorityDefault = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stp8021d1998", 1), ("stp8021t2001", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBridgePriorityDefault.setReference('IEEE 802.1D-1998 & IEEE 802.1t')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBridgePriorityDefault.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBridgePriorityDefault.setDescription('The version of the Spanning Tree default Bridge Priority that is to be used by this Bridge. stp8021d1998(1) - indicates the use of Bridge Priority as defined in IEEE Std. 802.1D-1998. stp8021t2001(2) - indicates the use of Bridge Priority as defined in IEEE Std. 802.1t.')
etsysIetfBridgeDot1dStpSpanGuardEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 4, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardEnable.setDescription('The enabled/disabled status of the SpanGuard functionality.')
etsysIetfBridgeDot1dStpSpanGuardTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 4, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardTrapEnable.setDescription('The enabled/disabled status of the SpanGuard Port Blocking trap.')
etsysIetfBridgeDot1dStpSpanGuardBlockTime = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardBlockTime.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpSpanGuardBlockTime.setDescription('The number of seconds that a port will be held in the blocking state by the SpanGuard feature. The value zero indicates that ports will be held in the blocking state until the entity is reset. Ports that are being held in the blocking state can be returned to normal service by writing the value of false(2) to their respective etsysIetfBridgeDot1dBasePortSpanGuardBlocking objects.')
etsysIetfBridgeDot1dStpBackupRootEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 5, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBackupRootEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBackupRootEnable.setDescription('The enabled/disabled status of the Backup Root functionality on the Common and Internal Spanning Tree.')
etsysIetfBridgeDot1dStpBackupRootTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 5, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBackupRootTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBackupRootTrapEnable.setDescription('The enabled/disabled status of the Backup Root activation trap.')
etsysIetfBridgeDot1dStpLoopProtectPortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 1), )
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortTable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortTable.setDescription('A table of port based information for the Loop Protect feature.')
etsysIetfBridgeDot1dStpLoopProtectPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 1, 1), )
dot1dStpPortEntry.registerAugmentions(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectPortEntry"))
etsysIetfBridgeDot1dStpLoopProtectPortEntry.setIndexNames(*dot1dStpPortEntry.getIndexNames())
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortEntry.setDescription('The per port information for the Loop Protect feature.')
etsysIetfBridgeDot1dStpLoopProtectPortCistEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortCistEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortCistEnable.setDescription('The enabled/disabled status of the Loop Protect feature for this port on the Common and Internal Spanning Tree (CIST).')
etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking.setDescription('The state of the port on the CIST with respect to the Loop Protect feature. true(1) - this port is being held in the blocking state by the Loop Protect feature. false(2) - this port is not being held in the blocking state by the Loop Protect feature. When this object has a value of true(1) setting its value to false(2) will cause the Loop Protect feature to no longer hold the port in the blocking state. All other set operations on this object are undefined and MUST NOT have any effect.')
etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable.setDescription("The capability of the port's link partner with respect to the Loop Protect feature. true(1) - the partner supports the Loop Protect feature. false(2) - the partner does not support the Loop Protect feature. When this object has a value of true(1) the full functionality of the Loop Protect feature will be utilized on the port. When this object has a value of false(2) limited Loop Protect functionality will be utilized on the port.")
etsysIetfBridgeDot1dStpLoopProtectEventThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 2), Unsigned32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventThreshold.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventThreshold.setDescription('The number of Loop Protect events that must occur on a given port on a given Spanning Tree instance within the interval defined by etsysIetfBridgeDot1dLoopProtectEventWindow for the port to become locked (i.e., held indefinitely in the blocking state). If this object is set to zero no locking will be performed.')
etsysIetfBridgeDot1dStpLoopProtectEventWindow = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 3), Unsigned32().clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventWindow.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventWindow.setDescription('This time value, measured in units of seconds, specifies the length of the interval during which Loop Protect events are counted for a given port on a given Spanning Tree instance.')
etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 6, 4), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable.setDescription('The enabled/disabled status of Loop Protect event notification.')
etsysIetfBridgeDot1dBasePortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 2, 1), )
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortTable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortTable.setDescription('A table of port based controls. Augments the dot1dBasePortTable.')
etsysIetfBridgeDot1dBasePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 2, 1, 1), )
dot1dBasePortEntry.registerAugmentions(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dBasePortEntry"))
etsysIetfBridgeDot1dBasePortEntry.setIndexNames(*dot1dBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortEntry.setDescription('The per port controls for an individual bridge port.')
etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 2, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap.setReference('IEEE 802.1Q/D11 Section 12.7.')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap.setDescription("The status of the new learned address notification feature on this port. When etsysIetfBridgeDot1qNewLearnedAddrTrapEnable and this object are both set to enabled the agent will generate an etsysIetfBridgeDot1qFdbNewLearnedAddr notification for each new entry in the dot1qTpFdbTable with a dot1qTpFdbStatus value equal to learned(3) and a dot1qTpFdbPort value equal to this row's dot1dBasePort value. Setting this object to disabled will prevent the agent from generating etsysIetfBridgeDot1qFdbNewLearnedAddr notifications for this port. If etsysIetfBridgeDot1qNewLearnedAddrTrapEnable is set to disabled, setting this object to enabled will have no effect. Notification generation is not required to match new address rate of learning. A best effort delivery queue is acceptable.")
etsysIetfBridgeDot1dBasePortMovedAddrTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 2, 1, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortMovedAddrTrap.setReference('IEEE 802.1Q/D11 Section 12.7.')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortMovedAddrTrap.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBasePortMovedAddrTrap.setDescription("The status of the moved address notification feature on this port. When etsysIetfBridgeDot1qMovedAddrTrapEnable and this object are both set to enabled the agent will generate an etsysIetfBridgeDot1qFdbMovedAddr notification for each entry in the dot1qTpFdbTable that has a dot1qTpFdbStatus value equal to learned(3) and a dot1qTpFdbPort value equal to this row's dot1dBasePort value when it is detected that the corresponding dot1qTpFdbAddress has moved to this row's dot1dBasePort from another port. Setting this object to disabled will prevent the agent from generating etsysIetfBridgeDot1qFdbMovedAddr notifications for this port. If etsysIetfBridgeDot1qMovedAddrTrapEnable is set to disabled, setting this object to enabled will have no effect. Notification generation is not required to match the dot1qTpFdbTable entry modification rate. A best effort delivery queue is acceptable.")
etsysIetfBridgeDot1qNewLearnedAddrTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 3, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1qNewLearnedAddrTrapEnable.setReference('IEEE 802.1Q/D11 Section 12.7.')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qNewLearnedAddrTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qNewLearnedAddrTrapEnable.setDescription('The global status of the new learned address notification feature. When this object is set to enabled(1), the agent will generate etsysIetfBridgeDot1qFdbNewLearnedAddr notifications for each new address learned on ports that have their corresponding etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap object set to enabled(1). If etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap is set to disabled(2) for all ports then setting this object to enabled(1) will not have any effect. When this object is set to disabled(1), the agent will not generate any etsysIetfBridgeDot1qFdbNewLearnedAddr notifications.')
etsysIetfBridgeDot1qMovedAddrTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 3, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1qMovedAddrTrapEnable.setReference('IEEE 802.1Q/D11 Section 12.7.')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qMovedAddrTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qMovedAddrTrapEnable.setDescription('The global status of the moved address notification feature. When this object is set to enabled(1), the agent will generate etsysIetfBridgeDot1qFdbMovedAddr notifications for each moved address on ports that have their corresponding etsysIetfBridgeDot1dBasePortMovedAddrTrap object set to enabled(1). If etsysIetfBridgeDot1dBasePortMovedAddrTrap is set to disabled(2) for all ports then setting this object to enabled(1) will not have any effect. When this object is set to disabled(1), the agent will not generate any etsysIetfBridgeDot1qFdbMovedAddr notifications.')
etsysIetfBridgeDot1qStaticUcastAsMcast = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 3, 3), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysIetfBridgeDot1qStaticUcastAsMcast.setReference('IEEE 802.1Q/D11 Section 8.10.1')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qStaticUcastAsMcast.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qStaticUcastAsMcast.setDescription('When this object is set to enabled(1), the agent will allow unicast traffic which matches all 48 bits of a static and the source VLAN of a multicast entry in the filter-database, except for the multicast-bit (bit 8). This augments the behavior defined in the IEEE 802.1Q specification. For example, if a static multicast address is configured as 01-02-03-04-05-06, VLAN 7, frames with a destination MAC address of either 01-02-03-04-05-06 or 00-02-03-04-05-06, received on VLAN 7, will match this entry.')
etsysIetfBridgeDot1qFdbNewLearnedAddr = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0, 1)).setObjects(("Q-BRIDGE-MIB", "dot1qTpFdbPort"))
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbNewLearnedAddr.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbNewLearnedAddr.setDescription('This notification indicates that a new entry has been created in the dot1qTpFdbTable with a dot1qTpFdbStatus value equal to learned(3).')
etsysIetfBridgeDot1dSpanGuardPortBlocked = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0, 2)).setObjects(("BRIDGE-MIB", "dot1dBasePort"), ("BRIDGE-MIB", "dot1dBasePortIfIndex"))
if mibBuilder.loadTexts: etsysIetfBridgeDot1dSpanGuardPortBlocked.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dSpanGuardPortBlocked.setDescription('This notification indicates that a bridge port has been placed in the blocking state by the SpanGuard feature.')
etsysIetfBridgeDot1dBackupRootActivation = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0, 3)).setObjects(("BRIDGE-MIB", "dot1dBaseBridgeAddress"), ("BRIDGE-MIB", "dot1dStpDesignatedRoot"))
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBackupRootActivation.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dBackupRootActivation.setDescription('This notification indicates that the BackupRoot feature has activated on this bridge. When multiple spanning trees exist the values of etsysMstpMstId, etsysMstpBridgePriority, and etsysMstpDesignatedRoot for the applicable spanning tree SHOULD be encoded as well.')
etsysIetfBridgeDot1qFdbMovedAddr = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0, 4)).setObjects(("Q-BRIDGE-MIB", "dot1qTpFdbPort"))
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbMovedAddr.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbMovedAddr.setDescription('This notification indicates that a new entry in the dot1qTpFdbTable with a dot1qTpFdbStatus value equal to learned(3) has replaced an entry which had the same dot1qTpFdbAddress but different dot1qTpFdbPort, to indicate a dot1qTpFdbAddress has moved from one port to another.')
etsysIetfBridgeDot1dCistLoopProtectEvent = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 1, 0, 5)).setObjects(("BRIDGE-MIB", "dot1dStpPort"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking"))
if mibBuilder.loadTexts: etsysIetfBridgeDot1dCistLoopProtectEvent.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dCistLoopProtectEvent.setDescription('This notification indicates that a Loop Protect event has occurred on a bridge port on the CIST.')
etsysIetfBridgeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2))
etsysIetfBridgeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1))
etsysIetfBridgeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 2))
etsysIetfBridgeStpPort = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 1)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpPortStpEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeStpPort = etsysIetfBridgeStpPort.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeStpPort.setDescription('A collection of objects relating to per Port Spanning Tree information.')
etsysIetfBridgeStpTrap = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 2)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpTopChangeTrapEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpNewRootTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeStpTrap = etsysIetfBridgeStpTrap.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeStpTrap.setDescription('A collection of objects relating to Spanning Tree SNMP Trap control.')
etsysIetfBridgeBase = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 3)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qNewLearnedAddrTrapEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeBase = etsysIetfBridgeBase.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeBase.setDescription('A collection of objects relating to bridge configuration information.')
etsysIetfBridgeDot1qFdbNewAddrNotification = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 4)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qFdbNewLearnedAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeDot1qFdbNewAddrNotification = etsysIetfBridgeDot1qFdbNewAddrNotification.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbNewAddrNotification.setDescription('The New Learned Address Notification.')
etsysIetfBridgeDot1dStpBridgePriority = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 5)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpBridgePriorityDefault"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeDot1dStpBridgePriority = etsysIetfBridgeDot1dStpBridgePriority.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1dStpBridgePriority.setDescription('An object for support of legacy bridge priorities.')
etsysIetfBridgeSpanGuard = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 6)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpSpanGuardEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpSpanGuardBlockTime"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpSpanGuardTrapEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpPortSpanGuardBlocking"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeSpanGuard = etsysIetfBridgeSpanGuard.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeSpanGuard.setDescription('A collection of objects relating to the SpanGuard feature.')
etsysIetfBridgeSpanGuardNotification = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 7)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dSpanGuardPortBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeSpanGuardNotification = etsysIetfBridgeSpanGuardNotification.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeSpanGuardNotification.setDescription('The SpanGuard Port Blocked Notification.')
etsysIetfBridgeBackupRoot = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 8)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpBackupRootEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpBackupRootTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeBackupRoot = etsysIetfBridgeBackupRoot.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeBackupRoot.setDescription('A collection of objects relating to the BackupRoot feature.')
etsysIetfBridgeBackupRootNotification = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 9)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dBackupRootActivation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeBackupRootNotification = etsysIetfBridgeBackupRootNotification.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeBackupRootNotification.setDescription('The Backup Root Activation Notification.')
etsysIetfBridgePortCistRoleValue = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 10)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpPortCistRoleValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgePortCistRoleValue = etsysIetfBridgePortCistRoleValue.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgePortCistRoleValue.setDescription('The role of the port with respect to the CIST.')
etsysIetfBridgeMovedAddr = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 11)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qMovedAddrTrapEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dBasePortMovedAddrTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeMovedAddr = etsysIetfBridgeMovedAddr.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeMovedAddr.setDescription('A collection of objects relating to enabling moved address notifications.')
etsysIetfBridgeDot1qFdbMovedAddrNotification = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 12)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qFdbMovedAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeDot1qFdbMovedAddrNotification = etsysIetfBridgeDot1qFdbMovedAddrNotification.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeDot1qFdbMovedAddrNotification.setDescription('The Moved Address Notification.')
etsysIetfBridgeLoopProtect = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 13)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectPortCistEnable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectEventThreshold"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectEventWindow"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeLoopProtect = etsysIetfBridgeLoopProtect.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeLoopProtect.setDescription('A collection of objects relating to the Loop Protect feature.')
etsysIetfBridgeLoopProtectNotification = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 14)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dCistLoopProtectEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeLoopProtectNotification = etsysIetfBridgeLoopProtectNotification.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeLoopProtectNotification.setDescription('The Loop Protect Event Notification for the CIST.')
etsysIetfBridgeStpCistNonForwardingReason = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 15)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpPortCistNonForwardingReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeStpCistNonForwardingReason = etsysIetfBridgeStpCistNonForwardingReason.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeStpCistNonForwardingReason.setDescription('An object that indicates the reason for an exceptional non-forwarding condition per port on the CIST.')
etsysIetfBridgeStaticUcastAsMcast = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 1, 16)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qStaticUcastAsMcast"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeStaticUcastAsMcast = etsysIetfBridgeStaticUcastAsMcast.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeStaticUcastAsMcast.setDescription('A collection of objects pertaining to the transmission of unicast packets received by the device.')
etsysIetfBridgeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 2, 1)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeStpPort"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeStpTrap"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeBase"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qFdbNewAddrNotification"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeSpanGuard"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeSpanGuardNotification"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeBackupRoot"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeBackupRootNotification"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1dStpBridgePriority"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgePortCistRoleValue"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeMovedAddr"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeDot1qFdbMovedAddrNotification"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeLoopProtect"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeLoopProtectNotification"), ("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeStpCistNonForwardingReason"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeCompliance = etsysIetfBridgeCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeCompliance.setDescription('The compliance statement for devices that support the IETF BRIDGE-MIB Extension MIB.')
etsysIetfBridgeStaticUcastAsMcastCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 31, 2, 2, 2)).setObjects(("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", "etsysIetfBridgeStaticUcastAsMcast"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysIetfBridgeStaticUcastAsMcastCompliance = etsysIetfBridgeStaticUcastAsMcastCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysIetfBridgeStaticUcastAsMcastCompliance.setDescription('The compliance statement for devices that support the ability to transmit unicast frames as multicast frames.')
mibBuilder.exportSymbols("ENTERASYS-IETF-BRIDGE-MIB-EXT-MIB", etsysIetfBridgeDot1dStpPortTable=etsysIetfBridgeDot1dStpPortTable, etsysIetfBridgeDot1dBasePortEntry=etsysIetfBridgeDot1dBasePortEntry, etsysIetfBridgeStaticUcastAsMcast=etsysIetfBridgeStaticUcastAsMcast, etsysIetfBridgeConformance=etsysIetfBridgeConformance, etsysIetfBridgeDot1dStpPortCistRoleValue=etsysIetfBridgeDot1dStpPortCistRoleValue, etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking=etsysIetfBridgeDot1dStpLoopProtectPortCistBlocking, etsysIetfBridgeDot1dStpLoopProtectPortCistEnable=etsysIetfBridgeDot1dStpLoopProtectPortCistEnable, etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable=etsysIetfBridgeDot1dStpLoopProtectPortPartnerCapable, etsysIetfBridgeDot1dBase=etsysIetfBridgeDot1dBase, etsysIetfBridgeDot1dStpSpanGuardEnable=etsysIetfBridgeDot1dStpSpanGuardEnable, etsysIetfBridgeDot1dCistLoopProtectEvent=etsysIetfBridgeDot1dCistLoopProtectEvent, etsysIetfBridgeSpanGuard=etsysIetfBridgeSpanGuard, etsysIetfBridgeDot1dStpSpanGuardBlockTime=etsysIetfBridgeDot1dStpSpanGuardBlockTime, etsysIetfBridgeDot1qNewLearnedAddrTrapEnable=etsysIetfBridgeDot1qNewLearnedAddrTrapEnable, etsysIetfBridgeDot1qStaticUcastAsMcast=etsysIetfBridgeDot1qStaticUcastAsMcast, etsysIetfBridgeBackupRootNotification=etsysIetfBridgeBackupRootNotification, etsysIetfBridgeDot1dBasePortMovedAddrTrap=etsysIetfBridgeDot1dBasePortMovedAddrTrap, etsysIetfBridgeMibExtMIB=etsysIetfBridgeMibExtMIB, etsysIetfBridgeDot1dStpLoopProtectEventWindow=etsysIetfBridgeDot1dStpLoopProtectEventWindow, etsysIetfBridgeStpPort=etsysIetfBridgeStpPort, etsysIetfBridgeDot1dBackupRoot=etsysIetfBridgeDot1dBackupRoot, etsysIetfBridgeDot1dLoopProtect=etsysIetfBridgeDot1dLoopProtect, etsysIetfBridgeDot1dStpPortEntry=etsysIetfBridgeDot1dStpPortEntry, etsysIetfBridgeDot1dStpBackupRootEnable=etsysIetfBridgeDot1dStpBackupRootEnable, PYSNMP_MODULE_ID=etsysIetfBridgeMibExtMIB, etsysIetfBridgeDot1qFdbNewAddrNotification=etsysIetfBridgeDot1qFdbNewAddrNotification, etsysIetfBridgeCompliance=etsysIetfBridgeCompliance, etsysIetfBridgePortCistRoleValue=etsysIetfBridgePortCistRoleValue, etsysIetfBridgeSpanGuardNotification=etsysIetfBridgeSpanGuardNotification, etsysIetfBridgeDot1dStpBridgePriority=etsysIetfBridgeDot1dStpBridgePriority, etsysIetfBridgeDot1dStpTopChangeTrapEnable=etsysIetfBridgeDot1dStpTopChangeTrapEnable, etsysIetfBridgeBackupRoot=etsysIetfBridgeBackupRoot, etsysIetfBridgeDot1qFdbMovedAddrNotification=etsysIetfBridgeDot1qFdbMovedAddrNotification, etsysIetfBridgeLoopProtect=etsysIetfBridgeLoopProtect, etsysIetfBridgeDot1dStpBackupRootTrapEnable=etsysIetfBridgeDot1dStpBackupRootTrapEnable, etsysIetfBridgeStaticUcastAsMcastCompliance=etsysIetfBridgeStaticUcastAsMcastCompliance, etsysIetfBridgeDot1dStpLoopProtectPortTable=etsysIetfBridgeDot1dStpLoopProtectPortTable, etsysIetfBridgeDot1dStpSpanGuardTrapEnable=etsysIetfBridgeDot1dStpSpanGuardTrapEnable, etsysIetfBridgeCompliances=etsysIetfBridgeCompliances, etsysIetfBridgeBase=etsysIetfBridgeBase, etsysIetfBridgeStpCistNonForwardingReason=etsysIetfBridgeStpCistNonForwardingReason, etsysIetfBridgeDot1dSpanGuardPortBlocked=etsysIetfBridgeDot1dSpanGuardPortBlocked, etsysIetfBridgeLoopProtectNotification=etsysIetfBridgeLoopProtectNotification, etsysIetfBridgeDot1dStpBridgePriorityDefault=etsysIetfBridgeDot1dStpBridgePriorityDefault, etsysIetfBridgeDot1dStpLoopProtectPortEntry=etsysIetfBridgeDot1dStpLoopProtectPortEntry, etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap=etsysIetfBridgeDot1dBasePortNewLearnedAddrTrap, etsysIetfBridgeDot1qBase=etsysIetfBridgeDot1qBase, etsysIetfBridgeDot1dStpNewRootTrapEnable=etsysIetfBridgeDot1dStpNewRootTrapEnable, etsysIetfBridgeDot1dStpPortStpEnable=etsysIetfBridgeDot1dStpPortStpEnable, etsysIetfBridgeDot1qFdbMovedAddr=etsysIetfBridgeDot1qFdbMovedAddr, etsysIetfBridgeDot1qMovedAddrTrapEnable=etsysIetfBridgeDot1qMovedAddrTrapEnable, etsysIetfBridgeDot1qFdbNewLearnedAddr=etsysIetfBridgeDot1qFdbNewLearnedAddr, etsysIetfBridgeDot1dStpPortCistNonForwardingReason=etsysIetfBridgeDot1dStpPortCistNonForwardingReason, etsysIetfBridgeGroups=etsysIetfBridgeGroups, etsysIetfBridgeDot1dSpanGuard=etsysIetfBridgeDot1dSpanGuard, etsysIetfBridgeStpTrap=etsysIetfBridgeStpTrap, etsysIetfBridgeDot1dStpLoopProtectEventThreshold=etsysIetfBridgeDot1dStpLoopProtectEventThreshold, etsysIetfBridgeMibExt=etsysIetfBridgeMibExt, etsysIetfBridgeDot1dBasePortTable=etsysIetfBridgeDot1dBasePortTable, etsysIetfBridgeDot1dStpPortSpanGuardBlocking=etsysIetfBridgeDot1dStpPortSpanGuardBlocking, etsysIetfBridgeDot1dBackupRootActivation=etsysIetfBridgeDot1dBackupRootActivation, etsysIetfBridgeDot1Notifications=etsysIetfBridgeDot1Notifications, etsysIetfBridgeDot1dStp=etsysIetfBridgeDot1dStp, etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable=etsysIetfBridgeDot1dStpLoopProtectEventTrapEnable, etsysIetfBridgeMovedAddr=etsysIetfBridgeMovedAddr)
