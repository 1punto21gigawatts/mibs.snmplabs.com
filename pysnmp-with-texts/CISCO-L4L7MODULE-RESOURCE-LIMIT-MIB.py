#
# PySNMP MIB module CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:04:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, IpAddress, ModuleIdentity, NotificationType, MibIdentifier, Unsigned32, Gauge32, iso, TimeTicks, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "IpAddress", "ModuleIdentity", "NotificationType", "MibIdentifier", "Unsigned32", "Gauge32", "iso", "TimeTicks", "ObjectIdentity", "Integer32")
TimeStamp, DisplayString, RowStatus, StorageType, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "RowStatus", "StorageType", "TruthValue", "TextualConvention")
ciscoL4L7moduleResourceLimitMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 480))
ciscoL4L7moduleResourceLimitMIB.setRevisions(('2013-02-20 00:00', '2012-09-20 00:00', '2011-06-10 00:00', '2011-04-15 00:00', '2010-12-06 00:00', '2008-03-07 00:00', '2008-02-07 00:00', '2006-06-19 00:00', '2005-08-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoL4L7moduleResourceLimitMIB.setRevisionsDescriptions(('Added the following two enum names to CiscoResourceLimitType TC: - cpu - memory Added the following groups: - ciscoL4L7ResourceNotifGroupRev2 - ciscoL4L7ResourceNotifOnlyObjectsGroupExt Deprecated ciscoL4L7ResourceNotifGroupRev1; Updated the DESCRIOTION of the following objects: - clrResourceRateLimitReachedNotifEnabled - clrResourceLimitReachedNotifEnabled', 'Added the following groups - ciscoL4L7ResourceNotifGroupRev1 - ciscoL4L7ResourceNotifOnlyObjectsGroup Deprecated the following groups - ciscoL4L7ResourceNotifGroup Added the following compliance - ciscoL4L7ResourceLimitComplianceRev6', '-Added following OBJECT-TYPEs in table ciscoL4L7BufferUtilizationTable. crlExternalBufferUsageValue crlExternalPercentageBufferUsage crlExternalPercentageBufferUsageDisplay -Deprecated OBJECT-GROUP ciscoL4L7BufferUtilizationGroup. -Added OBJECT-GROUP ciscoL4L7BufferUtilizationGroupRev1. -Deprecated MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev4. -Added MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev5.', '- Added new table ciscoL4L7NpCpuUtilTable. - Added OBJECT-GROUP ciscoL4L7NpCpuUtilizationGroup. - Deprecated MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev3. - Added MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev4.', '- Added TEXTUAL-CONVENTION CiscoBufferUtilPercentage. - Added table ciscoL4L7BufferUtilizationTable. - Added an OBJECT-GROUP ciscoL4L7BufferUtilizationGroup. - Deprecated MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev2. - Added MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev3.', '- Added TEXTUAL-CONVENTION CiscoResourceType. - Added table ciscoL4L7ResourceUsageSummaryTable. - Added an OBJECT-GROUP ciscoL4L7ResourceUsageSummaryGroup. - Deprecated MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev1. - Added MODULE-COMPLIANCE ciscoL4L7ResourceLimitComplianceRev2.', '- Added following enumerations in CiscoRateLimitResourceType sslConnections (9) mgmtBandwidth (10) throughput (11) missedMac (12) httpCompression (13) - Updated the description of bandwidth(4) enumeration in CiscoRateLimitResourceType.', '- Added following enumerations in CiscoResourceLimitType hosts (15) ipsecSessions (16) asdmSessions (17) sshSessions (18) telnetSessions (19) - Added following objects in ciscoL4L7ResourceLimitTable crlResourceLimitCurrentUsage crlResourceLimitPeakUsage crlResourceLimitReqsDeniedCount - Added following objects in ciscoL4L7RateLimitTable crlRateLimitResourceCurrentUsage crlRateLimitResourcePeakUsage crlRateLimitResourceReqsDeniedCount - Added following objects: clrResourceLimitReachedNotifEnabled clrResourceRateLimitReachedNotifEnabled - Added following Notification objects clrResourceLimitReached clrResourceRateLimitReached - Added following in Compliance/Conformance ciscoL4L7ResourceLimitComplianceRev1.', 'Initial version of the MIB module.',))
if mibBuilder.loadTexts: ciscoL4L7moduleResourceLimitMIB.setLastUpdated('201302200000Z')
if mibBuilder.loadTexts: ciscoL4L7moduleResourceLimitMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoL4L7moduleResourceLimitMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-l4l7security@cisco.com')
if mibBuilder.loadTexts: ciscoL4L7moduleResourceLimitMIB.setDescription('The MIB module for managing resource classes and configuring limits(max/min) to different resources. The resource referenced in this MIB are in addition to resource information availale in other MIBs. This MIB is applicable to L4-L7 modules which supports managing resource limits using a centralized approach. The resources (but not limited to) configured are of following categories: - TCP/IP Connections - MAC Addresses - syslog buffer, ACL Memmory - NAT Translations etc ciscoL4L7ResourceClassTable is used for adding/deleting resource classes. Resource class is identified by a name to which limits of multiple resources can be configured. ciscoL4L7ResourceLimitTable is used for adding/deleting limits to resources in a resource class. This limit is either maximum value and/or minimal value. ciscoL4L7ResourceRateLimitTable is used for adding/deleting rate limits to resources in a resource class. Terminologies used: ARP - Address Resolution Protocol. ACL - Access Control List. NAT - Network Address Translation. NBAR - Network Based Application Recognition. BPDU - Bridge Protocol Data Unit.')
ciscoL4L7ResourceLimitNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 0))
ciscoL4L7ResourceLimitMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 1))
ciscoResourceLimitMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 2))
crlResource = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1))
crlNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 2))
crlNotificationOnlyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3))
class CiscoResourceClass(TextualConvention, OctetString):
    description = 'This textual convention is used for representing resource classes. A resource class is identified by a name preferably in human readable form. This resource class is used for identifying different type of resources. The resource class can represent single resource type or multiple resource type. Resource category examples: memory, connections NAT(network address translation) translations, number of syslog messages etc.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

class CiscoResourceLimitType(TextualConvention, Integer32):
    description = 'This object represents the resource type. The possible values are : all (1) : This is not a resource. However this value acts as the wild card value to set all the resources at the same time. If an entry exists with this value, then for all the resources that are not configured in this table will have the value specified in this entry. macAddresses(2) : The number of MAC addresses allowed in the MAC address table. concurrentConns (3) : Concurrent TCP/UDP connections that are supported. Connections exist between any two hosts. This is applicable for through the box connections only. mgmtConnections (4) : This is applicable for to-the-box traffic only. proxyConns (5) : Sticky connections limit traffic to the individual real servers by allowing multiple connections from the same client to stick (or attach) to the same real server using source IP addresses, source IP subnets, cookies, and the secure socket layer (SSL) or by redirecting these connections using Hypertext Transfer Protocol (HTTP) redirect messages. probes (6) : the number of health probes. stickyEntries (7) : the number of sticky entries. This refers to statically configured entries and dynamically created ones. It represents the pool of entries available for use/re-use. natTranslations (8) : the number of NAT Translations. regexState (9) : Regular expression state. Regex states are nodes in the regular expression state graph, used for matching and sticking on HTTP fields such as URL, header, cookies. aclMemory (10) : Memory that is allocated for managing ACLs. ipReassemBuffer (11) : buffer that is allocated for IP Reassembly. syslogBuffer (12) : buffer that is allocated for syslog messages that can be logged in the system. tcpOOOBuffer (13) : buffer that is allocated for TCP Out Of Order packets. sslConnections (14) : The number of SSL Connections. hosts (15) : Number of hosts allowed through the system. ipsecSessions (16) : Number of IPSec management sessions. asdmSessions (17) : Number of ASDM management sessions. sshSessions (18) : Number of SSH management sessions. telnetSessions (19) : Number of Telnet management sessions. cpu (20) : CPU utilization by the system. memory (21) : Memory utilization by the system.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("all", 1), ("macAddresses", 2), ("concurrentConns", 3), ("mgmtConnections", 4), ("proxyConns", 5), ("probes", 6), ("stickyEntries", 7), ("natTranslations", 8), ("regexState", 9), ("aclMemory", 10), ("syslogBuffer", 11), ("ipReassemBuffer", 12), ("tcpOOOBuffer", 13), ("sslConnections", 14), ("hosts", 15), ("ipsecSessions", 16), ("asdmSessions", 17), ("sshSessions", 18), ("telnetSessions", 19), ("cpu", 20), ("memory", 21))

class CiscoRateLimitResourceType(TextualConvention, Integer32):
    description = 'This object represents the resource type for which rate limiting needs to be done. The value for rate limiting is specified in crlRateLimitResourceMin and crlRateLimitResourceMax. The possible value(s) are : all (1) : This value represents a wildcard value to mean all the resources. arpRequestsXmt (2) : ARP requests generated per second arpResponses (3) : ARP responses to received ARP requests per second. bandwidth (4) : Bandwidth of the card in bytes per second. connections (5) : connections per second. appInspections (6) : application inspections per second. syslog (7) : syslog messages per second. sslBandwidth (8) : SSL bandwidth in bytes per second. sslConnections (9) : SSL connections per second. mgmtBandwidth (10): Management (to-the-ACE) traffic in bytes per second. throughput (11): User (through-the-ACE) traffic in bytes per second. missedMac (12): Number of ARP resolution requests in packets per second. httpCompression (13): Compression rate for HTTP traffic in bytes per second.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("all", 1), ("arpRequestsXmt", 2), ("arpResponses", 3), ("bandwidth", 4), ("connections", 5), ("appInspections", 6), ("syslog", 7), ("sslBandwidth", 8), ("sslConnections", 9), ("mgmtBandwidth", 10), ("throughput", 11), ("missedMac", 12), ("httpCompression", 13))

class CiscoResourceType(TextualConvention, Integer32):
    description = "This object represents a resource type. The possible values for this object are: lMacAddresses (1) : Refer to 'macAddresses' in CiscoResourceLimitType. lConcurrentConns (2) : Refer to 'concurrentConns' in CiscoResourceLimitType. lMgmtConnections (3) : Refer to 'mgmtConnections' in CiscoResourceLimitType. lProxyConns (4) : Refer to 'proxyConns' in CiscoResourceLimitType. lProbes (5) : Refer to 'probes' in CiscoResourceLimitType. lStickyEntries (6) : Refer to 'stickyEntries' in CiscoResourceLimitType. lNatTranslations (7) : Refer to 'natTranslations' in CiscoResourceLimitType. lRegexState (8) : Refer to 'regexState' in CiscoResourceLimitType. lAclMemory (9) : Refer to 'aclMemory' in CiscoResourceLimitType. lIpReassemBuffer (10) : Refer to 'ipReassemBuffer' in CiscoResourceLimitType. lSyslogBuffer (11) : Refer to 'syslogBuffer' in CiscoResourceLimitType. lTcpOOOBuffer (12) : Refer to 'tcpOOOBuffer' in CiscoResourceLimitType. lSslConnections (13) : Refer to 'sslConnections' in CiscoResourceLimitType. lHosts (14) : Refer to 'hosts' in CiscoResourceLimitType. lIpsecSessions (15) : Refer to 'ipsecSessions' in CiscoResourceLimitType. lAsdmSessions (16) : Refer to 'asdmSessions' in CiscoResourceLimitType. lSshSessions (17) : Refer to 'sshSessions' in CiscoResourceLimitType. lTelnetSessions (18) : Refer to 'telnetSessions' in CiscoResourceLimitType. rlArpRequestsXmt (19) : Refer to 'arpRequestsXmt' in CiscoRateLimitResourceType. rlArpResponses (20) : Refer to 'arpResponses' in CiscoRateLimitResourceType. rlBandwidth (21) : Refer to 'bandwidth' in CiscoRateLimitResourceType. rlConnections (22) : Refer to 'connections' in CiscoRateLimitResourceType. rlAppInspections (23) : Refer to 'appInspections' in CiscoRateLimitResourceType. rlSyslog (24) : Refer to 'syslog' in CiscoRateLimitResourceType. rlSslBandwidth (25) : Refer to 'sslBandwidth' in CiscoRateLimitResourceType. rlSslConnections (26) : Refer to 'sslConnections' in CiscoRateLimitResourceType. rlMgmtBandwidth (27) : Refer to 'mgmtBandwidth' in CiscoRateLimitResourceType. rlThroughput (28) : Refer to 'throughput' in CiscoRateLimitResourceType. rlMissedMac (29) : Refer to 'missedMac' in CiscoRateLimitResourceType. rlHttpCompression (30) : Refer to 'httpCompression' in CiscoRateLimitResourceType."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))
    namedValues = NamedValues(("lMacAddresses", 1), ("lConcurrentConns", 2), ("lMgmtConnections", 3), ("lProxyConns", 4), ("lProbes", 5), ("lStickyEntries", 6), ("lNatTranslations", 7), ("lRegexState", 8), ("lAclMemory", 9), ("lIpReassemBuffer", 10), ("lSyslogBuffer", 11), ("lTcpOOOBuffer", 12), ("lSslConnections", 13), ("lHosts", 14), ("lIpsecSessions", 15), ("lAsdmSessions", 16), ("lSshSessions", 17), ("lTelnetSessions", 18), ("rlArpRequestsXmt", 19), ("rlArpResponses", 20), ("rlBandwidth", 21), ("rlConnections", 22), ("rlAppInspections", 23), ("rlSyslog", 24), ("rlSslBandwidth", 25), ("rlSslConnections", 26), ("rlMgmtBandwidth", 27), ("rlThroughput", 28), ("rlMissedMac", 29), ("rlHttpCompression", 30))

class CiscoBufferUtilPercentage(TextualConvention, Integer32):
    description = 'Buffer utilization as a percentage and should be presented in using xx.yy format.'
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 10000)

ciscoL4L7ResourceClassTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 1), )
if mibBuilder.loadTexts: ciscoL4L7ResourceClassTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceClassTable.setDescription('This table contains one row per resource class. This table is used for adding/deleting the resource class in the system. A resource class can contain limits for different category of resources and these resources can be configured using other tables.')
ciscoL4L7ResourceClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceClassName"))
if mibBuilder.loadTexts: ciscoL4L7ResourceClassEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceClassEntry.setDescription("Information about a particular resource class. Each entry provides the name of class. The entPhysicalIndex refers to resource manageable component in entPhysicalTable with entPhysicalClass -> 'module'.")
crlResourceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 1, 1, 1), CiscoResourceClass())
if mibBuilder.loadTexts: crlResourceClassName.setStatus('current')
if mibBuilder.loadTexts: crlResourceClassName.setDescription('This object identifies a unique resource class in a resource manageable component identified by entPhysicalIndex.')
crlResourceClassStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 1, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceClassStorageType.setStatus('current')
if mibBuilder.loadTexts: crlResourceClassStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row. This object can not be modified when the value of crlResourceClassRowStatus is 'active'.")
crlResourceClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: crlResourceClassRowStatus.setDescription('This object is used for adding/deleting resource classes in a system.')
ciscoL4L7ResourceLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2), )
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitTable.setDescription('This table is used for adding resource limits to resources in a resource class.')
ciscoL4L7ResourceLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceClassName"), (0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitType"))
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitEntry.setDescription('Information about a particular resource in a resource class. Each entry provides the type of resource, the limit that is supported for that resource and type of the limit value.')
crlResourceLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 2), CiscoResourceLimitType())
if mibBuilder.loadTexts: crlResourceLimitType.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitType.setDescription('This object represents the type of resource in a resource class identified by crlResourceClassName.')
crlResourceLimitValueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absolute", 1), ("percentage", 2))).clone('percentage')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceLimitValueType.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitValueType.setDescription('This object represents the type of value specified in crlResourceLimitMax and crlResourceLimitMin objects. The possible values are : absolute (1) : the value represents an absolute number. percentage (2) : the value represents the % of the total available for the system. In this case only crlResourceLimitMax object is applicable.')
crlResourceLimitMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceLimitMin.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitMin.setDescription("This object represents the rate limit allowed for the resource identified by 'ciscoResourceLimitType'. This value cannot be greater than the value specified in ciscoResourceLimitMax. The value zero signifies that this object is not applicable to the resource.")
crlResourceLimitMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceLimitMax.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitMax.setDescription("This object represents the limit allowed for the resource identified by 'ciscoResourceLimitType'. The value zero specifies that this resource can be used until the system limit reached.")
crlResourceLimitStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceLimitStorageType.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row. This object cannot be modified when the value of crlResourceLimitRowStatus is 'active'.")
crlResourceLimitRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceLimitRowStatus.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitRowStatus.setDescription('This object is used for adding/deleting entries in this table.')
crlResourceLimitCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceLimitCurrentUsage.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitCurrentUsage.setDescription("This object indicates the number of resources identified by 'ciscoResourceLimitType', that are currently being used in the system.")
crlResourceLimitPeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceLimitPeakUsage.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitPeakUsage.setDescription("This object represents the peak usage of the resource identified by 'ciscoResourceLimitType' since the statistics were last cleared either through the command line interface or bacause of the system reboot.")
crlResourceLimitReqsDeniedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceLimitReqsDeniedCount.setStatus('current')
if mibBuilder.loadTexts: crlResourceLimitReqsDeniedCount.setDescription("This object represents the number of resource requests that were denied when the configured resource limit is exceeded for the resource identified by 'ciscoResourceLimitType'. The value for resource limiting is specified in 'crlResourceLimitMax'.")
ciscoL4L7ResourceRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4), )
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitTable.setDescription('This table is used for adding/deleting the rate limiting of the resources in a resource class.')
ciscoL4L7ResourceRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceClassName"), (0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceType"))
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitEntry.setDescription('Information about an entry in the table Each entry provides the name of group, the rate configured for a resource.')
crlRateLimitResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 1), CiscoRateLimitResourceType())
if mibBuilder.loadTexts: crlRateLimitResourceType.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceType.setDescription('This object represents the resource type for which rate limiting needs to be done. The value for rate limiting is specified in crlRateLimitResourceMin and crlRateLimitResourceMax.')
crlRateLimitResourceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlRateLimitResourceMin.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceMin.setDescription("This object represents the rate limit allowed for the resource identified by 'crlRateLimitResourceType'. This value cannot be greater than the value specified in crlRateLimitResourceMax. The value zero signifies that this object is not applicable to the resource.")
crlRateLimitResourceMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlRateLimitResourceMax.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceMax.setDescription("This object represents the limit allowed for the resource identified by 'crlRateLimitResourceType'. The value zero specifies that this resource can be used until the system limit reached.")
crlRateLimitResourceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlRateLimitResourceStorageType.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row. This object cannot be modified when the value of crlRateLimitResourceRowStatus is 'active'.")
crlRateLimitResourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlRateLimitResourceRowStatus.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceRowStatus.setDescription("This object is used for adding/deleting entries in this table. This object cannot be set to 'active' until all the mandatory objects have valid value.")
crlRateLimitResourceCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlRateLimitResourceCurrentUsage.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceCurrentUsage.setDescription("This object indicates the number of resources identified by 'crlRateLimitResourceType', that are currently being used in the system.")
crlRateLimitResourcePeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlRateLimitResourcePeakUsage.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourcePeakUsage.setDescription("This object represents the peak usage of the resource identified by 'crlRateLimitResourceType' since the statistics were last cleared either through the command line interface or bacause of the system reboot.")
crlRateLimitResourceReqsDeniedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlRateLimitResourceReqsDeniedCount.setStatus('current')
if mibBuilder.loadTexts: crlRateLimitResourceReqsDeniedCount.setDescription("This object represents the number of resource requests that were denied when the configured rate limit is exceeded for the resource identified by 'crlRateLimitResourceType'. The value for rate limiting is specified in 'crlRateLimitResourceMax'.")
ciscoL4L7ResourceUsageSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5), )
if mibBuilder.loadTexts: ciscoL4L7ResourceUsageSummaryTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceUsageSummaryTable.setDescription('This table provides the statistics for each resource type in a system. The resource usage statistics can be: - current usage for the resource. - peak usage for the resource. - Number of times the resource request were denied when the configured limit or rate-limit is exceeded for the resource.')
ciscoL4L7ResourceUsageSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryType"))
if mibBuilder.loadTexts: ciscoL4L7ResourceUsageSummaryEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceUsageSummaryEntry.setDescription("An entry in ciscoL4L7ResourceUsageSummaryTable. Each entry provides the resource usage parameters in a system. An entry is created when an entry is created in either 'ciscoL4L7ResourceLimitTable' or 'ciscoL4L7ResourceRateLimitTable'. An entry is deleted when an entry is deleted from either 'ciscoL4L7ResourceLimitTable' or 'ciscoL4L7ResourceRateLimitTable'.")
crlResourceSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 1), CiscoResourceType())
if mibBuilder.loadTexts: crlResourceSummaryType.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryType.setDescription('This object represents a type of resource in the system.')
crlResourceSummaryCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceSummaryCurrentUsage.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryCurrentUsage.setDescription('This object indicates the current usage of the resource in the system.')
crlResourceSummaryPeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceSummaryPeakUsage.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryPeakUsage.setDescription('This object represents the peak usage of the resource in the system.')
crlResourceSummaryReqsDeniedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceSummaryReqsDeniedCount.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryReqsDeniedCount.setDescription("This object represents the number of resource requests that were denied in the system when the configured limit is exceeded for the resource. The value for limiting is specified in 'crlResourceLimitMax' and the value for rate limiting is specified in 'crlRateLimitResourceMax'.")
crlResourceSummaryLastClearedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: crlResourceSummaryLastClearedTime.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryLastClearedTime.setDescription("This object represents the time when the value of the object identified by 'crlResourceSummaryPeakUsage' is last cleared or reset. A value of 0 (zero) signifies that the value has not been cleared since the last system reboot.")
crlResourceSummaryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceSummaryStorageType.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryStorageType.setDescription("The storage type for this conceptual row. Conceptual rows having the value 'permanent' need not allow write-access to any columnar objects in the row. This object cannot be modified when the value of 'crlResourceSummaryRowStatus' is 'active'.")
crlResourceSummaryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crlResourceSummaryRowStatus.setStatus('current')
if mibBuilder.loadTexts: crlResourceSummaryRowStatus.setDescription("This object is used for adding/deleting entries in this table. This object cannot be set to 'active' until all the mandatory objects have valid value.")
ciscoL4L7BufferUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6), )
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationTable.setDescription('This table provides the statistics for buffer utilization in a system. The buffer utilization statistics can be: - absolute buffer usage value per network processor(NP). - percentage buffer usage per network processor(NP).')
ciscoL4L7BufferUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrNetworkProcessor"))
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationEntry.setDescription('An entry in ciscoL4L7BufferUtilizationTable. Each entry provides the buffer usage in a system.')
clrNetworkProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: clrNetworkProcessor.setStatus('current')
if mibBuilder.loadTexts: clrNetworkProcessor.setDescription('This object represents network processor number(NP) in the system.')
crlBufferUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 2), Gauge32()).setUnits('buffers').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlBufferUsageValue.setStatus('current')
if mibBuilder.loadTexts: crlBufferUsageValue.setDescription('This object indicates the absolute buffer usage in the system.')
crlPercentageBufferUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 3), CiscoBufferUtilPercentage()).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlPercentageBufferUsage.setStatus('current')
if mibBuilder.loadTexts: crlPercentageBufferUsage.setDescription('This object represents the percentage buffer usage in the the decimal format to allow historical information to be collected.')
crlPercentageBufferUsageDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 4), SnmpAdminString()).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlPercentageBufferUsageDisplay.setStatus('current')
if mibBuilder.loadTexts: crlPercentageBufferUsageDisplay.setDescription('This object represents the percentage buffer usage in the string format to all interactive access to simple display format.')
crlExternalBufferUsageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 5), Gauge32()).setUnits('buffers').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlExternalBufferUsageValue.setStatus('current')
if mibBuilder.loadTexts: crlExternalBufferUsageValue.setDescription('This object indicates the absolute external buffer usage in the system.')
crlExternalPercentageBufferUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 6), CiscoBufferUtilPercentage()).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlExternalPercentageBufferUsage.setStatus('current')
if mibBuilder.loadTexts: crlExternalPercentageBufferUsage.setDescription('This object represents the percentage external buffer usage in the the decimal format to allow historical information to be collected.')
crlExternalPercentageBufferUsageDisplay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 6, 1, 7), SnmpAdminString()).setUnits('percentage').setMaxAccess("readonly")
if mibBuilder.loadTexts: crlExternalPercentageBufferUsageDisplay.setStatus('current')
if mibBuilder.loadTexts: crlExternalPercentageBufferUsageDisplay.setDescription('This object represents the percentage external buffer usage in the string format to all interactive access to simple display format.')
ciscoL4L7NpCpuUtilTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 7), )
if mibBuilder.loadTexts: ciscoL4L7NpCpuUtilTable.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7NpCpuUtilTable.setDescription('This table lists the CPU utilization statistics for each NP (network processor) in the device.')
ciscoL4L7NpCpuUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrNetworkProcessor"))
if mibBuilder.loadTexts: ciscoL4L7NpCpuUtilEntry.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7NpCpuUtilEntry.setDescription('Each row contains the average CPU utilization of all sub-processors for a network processor identified by its clrNetworkProcessor value.')
clrNpCpuUtilizationAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 1, 7, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clrNpCpuUtilizationAverage.setStatus('current')
if mibBuilder.loadTexts: clrNpCpuUtilizationAverage.setDescription('This object indicates the average CPU utilization of all sub-processors belonged to a particular network processor at that instance.')
clrResourceLimitReachedNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clrResourceLimitReachedNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: clrResourceLimitReachedNotifEnabled.setDescription("This object controls the generation of 'clrResourceLimitReachedNotifRev1' notification. 'true' Indicates that clrResourceLimitReachedNotifRev1 notification is to be generated when the configured resource limit is reached. 'false' Indicates that clrResourceLimitReachedNotifRev1 notification generation is disabled.")
clrResourceRateLimitReachedNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 2, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotifEnabled.setDescription("This object controls the generation of 'clrResourceRateLimitReachedNotifRev1' notification. 'true' Indicates that clrResourceRateLimitReachedNotifRev1 notification is to be generated when the configured resource rate limit is reached. 'false' Indicates that clrResourceRateLimitReachedNotifRev1 notification generation is disabled.")
crlNotifType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("risingHighThresh", 1), ("fallingMinThresh", 2), ("fallingWatermarkThresh", 3), ("risingWatermarkThresh", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifType.setStatus('current')
if mibBuilder.loadTexts: crlNotifType.setDescription('This object indicates type of notification.')
crlNotifContextOrSystem = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("system", 1), ("context", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifContextOrSystem.setStatus('current')
if mibBuilder.loadTexts: crlNotifContextOrSystem.setDescription('This object indicates the notification sent is at the system level or at the context level.')
crlNotifContextName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifContextName.setStatus('current')
if mibBuilder.loadTexts: crlNotifContextName.setDescription('This object indicates the context name associated with notifications.')
crlNotifCurrentUsagePcnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 4), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifCurrentUsagePcnt.setStatus('current')
if mibBuilder.loadTexts: crlNotifCurrentUsagePcnt.setDescription('This object indicates the current usage percent of the resource associated with notifications.')
crlNotifMaxThresholdPcnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifMaxThresholdPcnt.setStatus('current')
if mibBuilder.loadTexts: crlNotifMaxThresholdPcnt.setDescription('This object indicates the maximum threshold percent of the resource/rate associated with notifications. This object is used to raise the risingHighThresh notification when the current usage identified by crlNotifCurrentUsagePcnt exceeds maximum threshold identified by crlNotifMaxThresholdPcnt.')
crlNotifWatermarkPcnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifWatermarkPcnt.setStatus('current')
if mibBuilder.loadTexts: crlNotifWatermarkPcnt.setDescription('This object indicates the watermark threshold percent of the resource/rate associated with notifications. This object is used to raise the risingWatermarkThresh/fallingWatermarkThresh notifications when the current usage identified by crlNotifCurrentUsagePcnt exceeds high or falls below watermark threshold identified by crlNotifWatermarkPcnt.')
crlNotifMinThresholdPcnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifMinThresholdPcnt.setStatus('current')
if mibBuilder.loadTexts: crlNotifMinThresholdPcnt.setDescription('This object indicates the minimum threshold percent of the resource/rate associated with notifications. This object is used to raise the fallingWatermarkThresh notification when the current usage identified by crlNotifCurrentUsagePcnt falls below minimum threshold identified by crlNotifMinThresholdPcnt.')
crlNotifSourceType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("virtualIP", 1), ("realServer", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifSourceType.setStatus('current')
if mibBuilder.loadTexts: crlNotifSourceType.setDescription('This object indicates the notification sent is at the real server level or at virtual ip level. Rserver is a real server e.g. a linux machine which services the client requests. Virtual IP is a IP address which is advertised to the outside world from the Data Center for communication with the server.')
crlNotifRealServerName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 9), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifRealServerName.setStatus('current')
if mibBuilder.loadTexts: crlNotifRealServerName.setDescription('This object indicates the real server name associated with notifications.')
crlNotifVirtualIPAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 10), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifVirtualIPAddrType.setStatus('current')
if mibBuilder.loadTexts: crlNotifVirtualIPAddrType.setDescription('This object indicates type of the Virtual IP address i.e. IPv4 or IPv6.')
crlNotifVirtualIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 480, 1, 3, 11), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: crlNotifVirtualIPAddress.setStatus('current')
if mibBuilder.loadTexts: crlNotifVirtualIPAddress.setDescription('This object indicates the Virtual IP (VIP) Adress associated with notifications.')
clrResourceLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 1)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitValueType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMax"))
if mibBuilder.loadTexts: clrResourceLimitReached.setStatus('deprecated')
if mibBuilder.loadTexts: clrResourceLimitReached.setDescription("This notification is generated when the configured resource limit value specified in 'crlResourceLimitMax' is reached for a particular resource. This resource is identified by 'crlResourceLimitType' in ciscoL4L7ResourceLimitTable. clrResourceLimitReached object is superseded by clrResourceLimitReachedNotif.")
clrResourceRateLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 2)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMax"))
if mibBuilder.loadTexts: clrResourceRateLimitReached.setStatus('deprecated')
if mibBuilder.loadTexts: clrResourceRateLimitReached.setDescription("This notification is generated when the configured rate limit value specified in 'crlRateLimitResourceMax' is reached for a particular resource. This resource is identified by 'crlRateLimitResourceType' in ciscoL4L7ResourceRateLimitTable. clrResourceRateLimitReached object is superseded by clrResourceRateLimitReachedNotif.")
clrResourceLimitReachedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 3)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifCurrentUsagePcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMaxThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifWatermarkPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMinThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextOrSystem"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextName"))
if mibBuilder.loadTexts: clrResourceLimitReachedNotif.setStatus('deprecated')
if mibBuilder.loadTexts: clrResourceLimitReachedNotif.setDescription('The notification will be generated when the current resource usage identified by crlResourceLimitCurrentUsage exceeds/falls below the user configured thresholds identified by crlNotifMaxThresholdPcnt, crlNotifMinThresholdPcnt and crlNotifWatermarkPcnt. Notifications will be generated on the following conditions 1. crlResourceLimitCurrentUsage exceeds crlNotifMaxThresholdPcnt 2. crlResourceLimitCurrentUsage falls below high crlNotifWatermarkPcnt 3. crlResourceLimitCurrentUsage falls below crlNotifMinThresholdPcnt 4. crlResourceLimitCurrentUsage exceeds low crlNotifWatermarkPcnt. clrResourceLimitReachedNotif object is superseded by clrResourceLimitReachedNotifRev1.')
clrResourceRateLimitReachedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 4)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifCurrentUsagePcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMaxThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifWatermarkPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMinThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextOrSystem"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextName"))
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotif.setStatus('deprecated')
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotif.setDescription('The notification will be generated when the current resource rate usage identified by crlResourceRateLimitCurrentUsage exceeds/falls below the user configured thresholds identified by crlNotifMaxThresholdPcnt, crlNotifMinThresholdPcnt and crlNotifWatermarkPcnt. Notifications will be generated on the following conditions 1. crlResourceRateLimitCurrentUsage exceeds crlNotifMaxThresholdPcnt 2. crlResourceRateLimitCurrentUsage falls below high crlNotifWatermarkPcnt 3. crlResourceRateLimitCurrentUsage falls below crlNotifMinThresholdPcnt 4. crlResourceRateLimitCurrentUsage exceeds low crlNotifWatermarkPcnt clrResourceRateLimitReachedNotif object is superseded by clrResourceRateLimitReachedNotifRev1.')
clrResourceRateLimitReachedNotifRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 5)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifCurrentUsagePcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMaxThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifWatermarkPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMinThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextOrSystem"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextName"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifSourceType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifRealServerName"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddrType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddress"))
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotifRev1.setStatus('current')
if mibBuilder.loadTexts: clrResourceRateLimitReachedNotifRev1.setDescription('The notification will be generated when the current resource usage rate identified by crlResourceRateLimitCurrentUsage exceeds/falls below the user configured thresholds identified by crlNotifMaxThresholdPcnt, crlNotifMinThresholdPcnt and crlNotifWatermarkPcnt. Notifications will be generated on the following conditions 1. crlResourceRateLimitCurrentUsage exceeds crlNotifMaxThresholdPcnt 2. crlResourceRateLimitCurrentUsage falls below high crlNotifWatermarkPcnt 3. crlResourceRateLimitCurrentUsage falls below crlNotifMinThresholdPcnt 4. crlResourceRateLimitCurrentUsage exceeds low crlNotifWatermarkPcnt')
clrResourceLimitReachedNotifRev1 = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 480, 0, 6)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifCurrentUsagePcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMaxThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifWatermarkPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMinThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextOrSystem"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextName"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifSourceType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifRealServerName"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddrType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddress"))
if mibBuilder.loadTexts: clrResourceLimitReachedNotifRev1.setStatus('current')
if mibBuilder.loadTexts: clrResourceLimitReachedNotifRev1.setDescription('The notification will be generated when the current resource usage identified by crlResourceLimitCurrentUsage exceeds/falls below the user configured thresholds identified by crlNotifMaxThresholdPcnt, crlNotifMinThresholdPcnt and crlNotifWatermarkPcnt. Notifications will be generated on the following conditions 1. crlResourceLimitCurrentUsage exceeds crlNotifMaxThresholdPcnt 2. crlResourceLimitCurrentUsage falls below high crlNotifWatermarkPcnt 3. crlResourceLimitCurrentUsage falls below crlNotifMinThresholdPcnt 4. crlResourceLimitCurrentUsage exceeds low crlNotifWatermarkPcnt.')
ciscoL4L7ResourceLimitConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 3))
ciscoL4L7ResourceLimitCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1))
ciscoL4L7ResourceLimitGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2))
ciscoL4L7ResourceLimitCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 1)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitCompliance = ciscoL4L7ResourceLimitCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitCompliance.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 2)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev1 = ciscoL4L7ResourceLimitComplianceRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev1.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 3)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev2 = ciscoL4L7ResourceLimitComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev2.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 4)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7BufferUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev3 = ciscoL4L7ResourceLimitComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev3.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 5)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7BufferUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7NpCpuUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev4 = ciscoL4L7ResourceLimitComplianceRev4.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev4.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 6)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7BufferUtilizationGroupRev1"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7NpCpuUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev5 = ciscoL4L7ResourceLimitComplianceRev5.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev5.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 7)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7BufferUtilizationGroupRev1"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7NpCpuUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifOnlyObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev6 = ciscoL4L7ResourceLimitComplianceRev6.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev6.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceLimitComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 1, 8)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceClassGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7BufferUtilizationGroupRev1"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7NpCpuUtilizationGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceRateLimitUsageGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifEnabledGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceUsageSummaryGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifOnlyObjectsGroup"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifOnlyObjectsGroupExt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "ciscoL4L7ResourceNotifGroupRev2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitComplianceRev7 = ciscoL4L7ResourceLimitComplianceRev7.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitComplianceRev7.setDescription('The compliance statement for SNMP entities which implement CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB.')
ciscoL4L7ResourceClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 1)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceClassStorageType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceClassRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceClassGroup = ciscoL4L7ResourceClassGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceClassGroup.setDescription('The collection of objects which are used to represent resource class in a system.')
ciscoL4L7ResourceLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 2)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitValueType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitStorageType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitGroup = ciscoL4L7ResourceLimitGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitGroup.setDescription('The collection of objects which are used to represent limits of resources in a resource class.')
ciscoL4L7ResourceRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 3)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMin"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceMax"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceStorageType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceRateLimitGroup = ciscoL4L7ResourceRateLimitGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitGroup.setDescription('The collection of objects which are used to represent rate limits for resources.')
ciscoL4L7ResourceLimitUsageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 4)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitPeakUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceLimitReqsDeniedCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceLimitUsageGroup = ciscoL4L7ResourceLimitUsageGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceLimitUsageGroup.setDescription('The collection of objects which are used to represent limit usage for resources.')
ciscoL4L7ResourceRateLimitUsageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 5)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourcePeakUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlRateLimitResourceReqsDeniedCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceRateLimitUsageGroup = ciscoL4L7ResourceRateLimitUsageGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceRateLimitUsageGroup.setDescription('The collection of objects which are used to represent rate limit usage for resources.')
ciscoL4L7ResourceNotifEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 6)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceLimitReachedNotifEnabled"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceRateLimitReachedNotifEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifEnabledGroup = ciscoL4L7ResourceNotifEnabledGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifEnabledGroup.setDescription('The collection of objects which are used to represent limit usage for resources.')
ciscoL4L7ResourceNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 7)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceLimitReached"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceRateLimitReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifGroup = ciscoL4L7ResourceNotifGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifGroup.setDescription('The collection of objects which are used to represent rate limit usage for resources. ciscoL4L7ResourceNotifGroup object is superseded by ciscoL4L7ResourceNotifGroupRev1.')
ciscoL4L7ResourceUsageSummaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 8)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryCurrentUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryPeakUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryReqsDeniedCount"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryLastClearedTime"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryStorageType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlResourceSummaryRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceUsageSummaryGroup = ciscoL4L7ResourceUsageSummaryGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceUsageSummaryGroup.setDescription('The collection of objects which are used to represent usage summary for resources across the system.')
ciscoL4L7BufferUtilizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 9)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlBufferUsageValue"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlPercentageBufferUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlPercentageBufferUsageDisplay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7BufferUtilizationGroup = ciscoL4L7BufferUtilizationGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationGroup.setDescription('The collection of objects which are used to represent buffer utilization across the system. ciscoL4L7BufferUtilizationGroup object is superseded by ciscoL4L7BufferUtilizationGroupRev1.')
ciscoL4L7NpCpuUtilizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 10)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrNpCpuUtilizationAverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7NpCpuUtilizationGroup = ciscoL4L7NpCpuUtilizationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7NpCpuUtilizationGroup.setDescription('A collection of objects providing CPU utilization of network processors.')
ciscoL4L7BufferUtilizationGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 11)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlBufferUsageValue"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlPercentageBufferUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlPercentageBufferUsageDisplay"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlExternalBufferUsageValue"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlExternalPercentageBufferUsage"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlExternalPercentageBufferUsageDisplay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7BufferUtilizationGroupRev1 = ciscoL4L7BufferUtilizationGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7BufferUtilizationGroupRev1.setDescription('The collection of objects which are used to represent buffer utilization across the system.')
ciscoL4L7ResourceNotifGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 12)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceLimitReachedNotif"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceRateLimitReachedNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifGroupRev1 = ciscoL4L7ResourceNotifGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifGroupRev1.setDescription('The collection of notifications which are used to report resources usages to raising/falling below the configured thresholds. ciscoL4L7ResourceNotifGroupRev1 object is superseded by ciscoL4L7ResourceNotifGroupRev2.')
ciscoL4L7ResourceNotifOnlyObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 13)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifCurrentUsagePcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMaxThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifWatermarkPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifMinThresholdPcnt"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextOrSystem"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifContextName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifOnlyObjectsGroup = ciscoL4L7ResourceNotifOnlyObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifOnlyObjectsGroup.setDescription('A collection of object(s) providing variable binding information for resource notifications.')
ciscoL4L7ResourceNotifGroupRev2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 14)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceLimitReachedNotifRev1"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "clrResourceRateLimitReachedNotifRev1"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifGroupRev2 = ciscoL4L7ResourceNotifGroupRev2.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifGroupRev2.setDescription('The collection of notifications which are used to report resources usages to raising/falling below the configured thresholds.')
ciscoL4L7ResourceNotifOnlyObjectsGroupExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 480, 3, 2, 15)).setObjects(("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifSourceType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifRealServerName"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddrType"), ("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", "crlNotifVirtualIPAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoL4L7ResourceNotifOnlyObjectsGroupExt = ciscoL4L7ResourceNotifOnlyObjectsGroupExt.setStatus('current')
if mibBuilder.loadTexts: ciscoL4L7ResourceNotifOnlyObjectsGroupExt.setDescription('A collection of object(s) providing variable binding information for resource notifications.')
mibBuilder.exportSymbols("CISCO-L4L7MODULE-RESOURCE-LIMIT-MIB", crlRateLimitResourcePeakUsage=crlRateLimitResourcePeakUsage, clrResourceRateLimitReached=clrResourceRateLimitReached, CiscoResourceClass=CiscoResourceClass, crlNotifVirtualIPAddress=crlNotifVirtualIPAddress, ciscoL4L7ResourceUsageSummaryTable=ciscoL4L7ResourceUsageSummaryTable, crlNotifMaxThresholdPcnt=crlNotifMaxThresholdPcnt, crlResourceLimitCurrentUsage=crlResourceLimitCurrentUsage, ciscoL4L7ResourceRateLimitUsageGroup=ciscoL4L7ResourceRateLimitUsageGroup, ciscoL4L7BufferUtilizationEntry=ciscoL4L7BufferUtilizationEntry, clrNetworkProcessor=clrNetworkProcessor, ciscoL4L7moduleResourceLimitMIB=ciscoL4L7moduleResourceLimitMIB, ciscoL4L7ResourceLimitComplianceRev3=ciscoL4L7ResourceLimitComplianceRev3, crlResourceLimitMax=crlResourceLimitMax, crlBufferUsageValue=crlBufferUsageValue, crlResourceLimitMin=crlResourceLimitMin, ciscoL4L7ResourceLimitMIBObjects=ciscoL4L7ResourceLimitMIBObjects, ciscoL4L7BufferUtilizationGroupRev1=ciscoL4L7BufferUtilizationGroupRev1, crlNotificationObjects=crlNotificationObjects, crlResourceSummaryLastClearedTime=crlResourceSummaryLastClearedTime, crlNotifVirtualIPAddrType=crlNotifVirtualIPAddrType, crlNotifWatermarkPcnt=crlNotifWatermarkPcnt, ciscoL4L7ResourceRateLimitTable=ciscoL4L7ResourceRateLimitTable, crlRateLimitResourceStorageType=crlRateLimitResourceStorageType, crlResourceSummaryStorageType=crlResourceSummaryStorageType, clrNpCpuUtilizationAverage=clrNpCpuUtilizationAverage, ciscoResourceLimitMIBConform=ciscoResourceLimitMIBConform, crlPercentageBufferUsage=crlPercentageBufferUsage, clrResourceLimitReachedNotif=clrResourceLimitReachedNotif, crlResourceLimitType=crlResourceLimitType, PYSNMP_MODULE_ID=ciscoL4L7moduleResourceLimitMIB, clrResourceRateLimitReachedNotifEnabled=clrResourceRateLimitReachedNotifEnabled, CiscoBufferUtilPercentage=CiscoBufferUtilPercentage, ciscoL4L7BufferUtilizationGroup=ciscoL4L7BufferUtilizationGroup, crlRateLimitResourceMin=crlRateLimitResourceMin, ciscoL4L7ResourceClassEntry=ciscoL4L7ResourceClassEntry, crlResourceClassName=crlResourceClassName, clrResourceRateLimitReachedNotif=clrResourceRateLimitReachedNotif, CiscoResourceLimitType=CiscoResourceLimitType, ciscoL4L7ResourceNotifGroupRev2=ciscoL4L7ResourceNotifGroupRev2, ciscoL4L7ResourceUsageSummaryEntry=ciscoL4L7ResourceUsageSummaryEntry, crlResourceLimitRowStatus=crlResourceLimitRowStatus, crlNotifContextName=crlNotifContextName, ciscoL4L7ResourceLimitUsageGroup=ciscoL4L7ResourceLimitUsageGroup, ciscoL4L7ResourceLimitTable=ciscoL4L7ResourceLimitTable, ciscoL4L7ResourceClassTable=ciscoL4L7ResourceClassTable, ciscoL4L7ResourceRateLimitEntry=ciscoL4L7ResourceRateLimitEntry, crlRateLimitResourceType=crlRateLimitResourceType, crlRateLimitResourceRowStatus=crlRateLimitResourceRowStatus, ciscoL4L7NpCpuUtilTable=ciscoL4L7NpCpuUtilTable, crlNotifContextOrSystem=crlNotifContextOrSystem, ciscoL4L7ResourceLimitGroups=ciscoL4L7ResourceLimitGroups, ciscoL4L7ResourceLimitComplianceRev1=ciscoL4L7ResourceLimitComplianceRev1, ciscoL4L7ResourceLimitCompliances=ciscoL4L7ResourceLimitCompliances, crlExternalPercentageBufferUsage=crlExternalPercentageBufferUsage, ciscoL4L7ResourceLimitEntry=ciscoL4L7ResourceLimitEntry, crlNotifType=crlNotifType, ciscoL4L7NpCpuUtilizationGroup=ciscoL4L7NpCpuUtilizationGroup, crlRateLimitResourceMax=crlRateLimitResourceMax, crlResourceClassStorageType=crlResourceClassStorageType, crlResourceLimitValueType=crlResourceLimitValueType, ciscoL4L7ResourceLimitConformance=ciscoL4L7ResourceLimitConformance, ciscoL4L7ResourceNotifEnabledGroup=ciscoL4L7ResourceNotifEnabledGroup, crlResourceLimitStorageType=crlResourceLimitStorageType, crlResourceSummaryRowStatus=crlResourceSummaryRowStatus, ciscoL4L7ResourceLimitNotifs=ciscoL4L7ResourceLimitNotifs, ciscoL4L7ResourceClassGroup=ciscoL4L7ResourceClassGroup, ciscoL4L7ResourceLimitGroup=ciscoL4L7ResourceLimitGroup, CiscoResourceType=CiscoResourceType, ciscoL4L7ResourceNotifGroupRev1=ciscoL4L7ResourceNotifGroupRev1, crlResource=crlResource, clrResourceRateLimitReachedNotifRev1=clrResourceRateLimitReachedNotifRev1, ciscoL4L7BufferUtilizationTable=ciscoL4L7BufferUtilizationTable, crlNotifMinThresholdPcnt=crlNotifMinThresholdPcnt, ciscoL4L7ResourceLimitComplianceRev6=ciscoL4L7ResourceLimitComplianceRev6, crlExternalBufferUsageValue=crlExternalBufferUsageValue, ciscoL4L7NpCpuUtilEntry=ciscoL4L7NpCpuUtilEntry, ciscoL4L7ResourceLimitCompliance=ciscoL4L7ResourceLimitCompliance, clrResourceLimitReached=clrResourceLimitReached, clrResourceLimitReachedNotifEnabled=clrResourceLimitReachedNotifEnabled, crlResourceLimitPeakUsage=crlResourceLimitPeakUsage, crlExternalPercentageBufferUsageDisplay=crlExternalPercentageBufferUsageDisplay, crlNotificationOnlyObjects=crlNotificationOnlyObjects, crlPercentageBufferUsageDisplay=crlPercentageBufferUsageDisplay, crlResourceSummaryType=crlResourceSummaryType, CiscoRateLimitResourceType=CiscoRateLimitResourceType, crlRateLimitResourceCurrentUsage=crlRateLimitResourceCurrentUsage, crlRateLimitResourceReqsDeniedCount=crlRateLimitResourceReqsDeniedCount, crlNotifCurrentUsagePcnt=crlNotifCurrentUsagePcnt, clrResourceLimitReachedNotifRev1=clrResourceLimitReachedNotifRev1, ciscoL4L7ResourceLimitComplianceRev5=ciscoL4L7ResourceLimitComplianceRev5, crlResourceSummaryReqsDeniedCount=crlResourceSummaryReqsDeniedCount, crlResourceSummaryPeakUsage=crlResourceSummaryPeakUsage, ciscoL4L7ResourceNotifGroup=ciscoL4L7ResourceNotifGroup, crlNotifSourceType=crlNotifSourceType, crlNotifRealServerName=crlNotifRealServerName, ciscoL4L7ResourceNotifOnlyObjectsGroup=ciscoL4L7ResourceNotifOnlyObjectsGroup, crlResourceSummaryCurrentUsage=crlResourceSummaryCurrentUsage, ciscoL4L7ResourceLimitComplianceRev2=ciscoL4L7ResourceLimitComplianceRev2, ciscoL4L7ResourceNotifOnlyObjectsGroupExt=ciscoL4L7ResourceNotifOnlyObjectsGroupExt, ciscoL4L7ResourceUsageSummaryGroup=ciscoL4L7ResourceUsageSummaryGroup, ciscoL4L7ResourceLimitComplianceRev7=ciscoL4L7ResourceLimitComplianceRev7, crlResourceClassRowStatus=crlResourceClassRowStatus, crlResourceLimitReqsDeniedCount=crlResourceLimitReqsDeniedCount, ciscoL4L7ResourceLimitComplianceRev4=ciscoL4L7ResourceLimitComplianceRev4, ciscoL4L7ResourceRateLimitGroup=ciscoL4L7ResourceRateLimitGroup)
