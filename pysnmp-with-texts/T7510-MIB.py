#
# PySNMP MIB module T7510-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T7510-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Unsigned32, TimeTicks, ObjectIdentity, IpAddress, Bits, MibIdentifier, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Gauge32, iso, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Unsigned32", "TimeTicks", "ObjectIdentity", "IpAddress", "Bits", "MibIdentifier", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Gauge32", "iso", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

comet = MibIdentifier((1, 3, 6, 1, 4, 1, 22626))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1))
t7510 = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2))
readings = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1))
settings = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2))
readingsint = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3))
settingsint = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5))
tables = MibIdentifier((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6))
temperature = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperature.setStatus('mandatory')
if mibBuilder.loadTexts: temperature.setDescription('Temperature')
humidity = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidity.setStatus('mandatory')
if mibBuilder.loadTexts: humidity.setDescription('Humidity')
computedValue = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: computedValue.setStatus('mandatory')
if mibBuilder.loadTexts: computedValue.setDescription('Computed value')
pressure = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressure.setStatus('mandatory')
if mibBuilder.loadTexts: pressure.setDescription('Pressure')
templow = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: templow.setStatus('mandatory')
if mibBuilder.loadTexts: templow.setDescription('Temperature Limit Low')
temphigh = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temphigh.setStatus('mandatory')
if mibBuilder.loadTexts: temphigh.setDescription('Temperature Limit High')
humiditylow = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humiditylow.setStatus('mandatory')
if mibBuilder.loadTexts: humiditylow.setDescription('Humidity Limit Low')
humidityhigh = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityhigh.setStatus('mandatory')
if mibBuilder.loadTexts: humidityhigh.setDescription('Humidity Limit High')
cvlow = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvlow.setStatus('mandatory')
if mibBuilder.loadTexts: cvlow.setDescription('Computed Value Limit Low')
cvhigh = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvhigh.setStatus('mandatory')
if mibBuilder.loadTexts: cvhigh.setDescription('Computed Value Limit High')
temptime = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temptime.setStatus('mandatory')
if mibBuilder.loadTexts: temptime.setDescription('Temperature alaram delay')
humidityTime = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityTime.setStatus('mandatory')
if mibBuilder.loadTexts: humidityTime.setDescription('Humidity alaram delay')
cvTime = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvTime.setStatus('mandatory')
if mibBuilder.loadTexts: cvTime.setDescription('Computed value alaram delay')
tempHyst = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempHyst.setStatus('mandatory')
if mibBuilder.loadTexts: tempHyst.setDescription('Temperature hysteresis')
humidityHyst = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityHyst.setStatus('mandatory')
if mibBuilder.loadTexts: humidityHyst.setDescription('Humidity hysteresis')
cvHyst = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvHyst.setStatus('mandatory')
if mibBuilder.loadTexts: cvHyst.setDescription('Computed value hysteresis')
presslow = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presslow.setStatus('mandatory')
if mibBuilder.loadTexts: presslow.setDescription('Pressure Limit Low')
presshigh = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presshigh.setStatus('mandatory')
if mibBuilder.loadTexts: presshigh.setDescription('Pressure Limit High')
presstime = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: presstime.setStatus('mandatory')
if mibBuilder.loadTexts: presstime.setDescription('Pressure alaram delay')
pressureHyst = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressureHyst.setStatus('mandatory')
if mibBuilder.loadTexts: pressureHyst.setDescription('Pressure hysteresis')
temperaturei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperaturei.setStatus('mandatory')
if mibBuilder.loadTexts: temperaturei.setDescription('Temperature *10')
humidityi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: humidityi.setStatus('mandatory')
if mibBuilder.loadTexts: humidityi.setDescription('Humidity *10')
cvi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvi.setStatus('mandatory')
if mibBuilder.loadTexts: cvi.setDescription('Computed Value *10')
pressurei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pressurei.setStatus('mandatory')
if mibBuilder.loadTexts: pressurei.setDescription('Pressure *10')
templowi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: templowi.setStatus('mandatory')
if mibBuilder.loadTexts: templowi.setDescription('Temperature Limit Low *10')
temphighi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: temphighi.setStatus('mandatory')
if mibBuilder.loadTexts: temphighi.setDescription('Temperature Limit High *10')
humiditylowi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humiditylowi.setStatus('mandatory')
if mibBuilder.loadTexts: humiditylowi.setDescription('Humidity Limit Low *10')
humidityhighi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityhighi.setStatus('mandatory')
if mibBuilder.loadTexts: humidityhighi.setDescription('Humidity Limit High *10')
cvlowi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvlowi.setStatus('mandatory')
if mibBuilder.loadTexts: cvlowi.setDescription('Computed value Limit Low *10')
cvhighi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvhighi.setStatus('mandatory')
if mibBuilder.loadTexts: cvhighi.setDescription('Computed value Limit High *10')
temptimei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: temptimei.setStatus('mandatory')
if mibBuilder.loadTexts: temptimei.setDescription('Temperature alaram delay')
humidityTimei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityTimei.setStatus('mandatory')
if mibBuilder.loadTexts: humidityTimei.setDescription('Humidity alaram delay')
cvTimei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvTimei.setStatus('mandatory')
if mibBuilder.loadTexts: cvTimei.setDescription('Computed value alaram delay')
tempHysti = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tempHysti.setStatus('mandatory')
if mibBuilder.loadTexts: tempHysti.setDescription('Temperature hysteresis *10')
humidityHysti = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: humidityHysti.setStatus('mandatory')
if mibBuilder.loadTexts: humidityHysti.setDescription('Humidity hysteresis *10')
cvHysti = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cvHysti.setStatus('mandatory')
if mibBuilder.loadTexts: cvHysti.setDescription('Computed value hysteresis *10')
presslowi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presslowi.setStatus('mandatory')
if mibBuilder.loadTexts: presslowi.setDescription('Pressure Limit Low *10')
presshighi = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 11000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presshighi.setStatus('mandatory')
if mibBuilder.loadTexts: presshighi.setDescription('Pressure Limit High *10')
presstimei = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: presstimei.setStatus('mandatory')
if mibBuilder.loadTexts: presstimei.setDescription('Pressure alaram delay')
pressHysti = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2000, 6000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pressHysti.setStatus('mandatory')
if mibBuilder.loadTexts: pressHysti.setDescription('Pressure hysteresis *10')
messageString = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageString.setStatus('mandatory')
if mibBuilder.loadTexts: messageString.setDescription('Message giving more detailed information on alarms.')
alarmTemperature = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmTemperature.setStatus('mandatory')
if mibBuilder.loadTexts: alarmTemperature.setDescription('Temperature alarm 0 = temperature OK 1 = temperature too high 2 = temperature too low')
alarmhumidity = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmhumidity.setStatus('mandatory')
if mibBuilder.loadTexts: alarmhumidity.setDescription('Humidity alarm 0 = humidity OK 1 = humidity too high 2 = humidity too low')
alarmCv = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCv.setStatus('mandatory')
if mibBuilder.loadTexts: alarmCv.setDescription('Computed value alarm 0 = Computed value OK 1 = Computed value too high 2 = Computed value too low')
alarmPressure = MibScalar((1, 3, 6, 1, 4, 1, 22626, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPressure.setStatus('mandatory')
if mibBuilder.loadTexts: alarmPressure.setDescription('Pressure alarm 0 = Computed value OK 1 = Computed value too high 2 = Computed value too low')
historyTable = MibTable((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1), )
if mibBuilder.loadTexts: historyTable.setStatus('mandatory')
if mibBuilder.loadTexts: historyTable.setDescription('Table of the history values.')
historyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1), ).setIndexNames((0, "T7510-MIB", "histtemperature"))
if mibBuilder.loadTexts: historyEntry.setStatus('optional')
if mibBuilder.loadTexts: historyEntry.setDescription('History values entries.')
histtemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: histtemperature.setStatus('mandatory')
if mibBuilder.loadTexts: histtemperature.setDescription('Temperature reading.')
histhumidity = MibTableColumn((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: histhumidity.setStatus('mandatory')
if mibBuilder.loadTexts: histhumidity.setDescription('Humidity reading.')
histcomputedValue = MibTableColumn((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: histcomputedValue.setStatus('mandatory')
if mibBuilder.loadTexts: histcomputedValue.setDescription('Computed value reading.')
histpressure = MibTableColumn((1, 3, 6, 1, 4, 1, 22626, 1, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: histpressure.setStatus('mandatory')
if mibBuilder.loadTexts: histpressure.setDescription('Pressure reading.')
mibBuilder.exportSymbols("T7510-MIB", tables=tables, presstimei=presstimei, humiditylow=humiditylow, pressHysti=pressHysti, readingsint=readingsint, humidityTimei=humidityTimei, historyEntry=historyEntry, humidityHyst=humidityHyst, pressurei=pressurei, presstime=presstime, humidityhighi=humidityhighi, cvi=cvi, cvTime=cvTime, tempHysti=tempHysti, products=products, settings=settings, computedValue=computedValue, t7510=t7510, cvHyst=cvHyst, traps=traps, temphighi=temphighi, pressure=pressure, cvlowi=cvlowi, presshighi=presshighi, histpressure=histpressure, messageString=messageString, histcomputedValue=histcomputedValue, temperature=temperature, humidityTime=humidityTime, settingsint=settingsint, histtemperature=histtemperature, temperaturei=temperaturei, readings=readings, alarmhumidity=alarmhumidity, cvTimei=cvTimei, temptime=temptime, humidity=humidity, presshigh=presshigh, humiditylowi=humiditylowi, pressureHyst=pressureHyst, templowi=templowi, templow=templow, alarmCv=alarmCv, humidityhigh=humidityhigh, humidityi=humidityi, cvhigh=cvhigh, temphigh=temphigh, temptimei=temptimei, historyTable=historyTable, alarmPressure=alarmPressure, histhumidity=histhumidity, tempHyst=tempHyst, cvHysti=cvHysti, comet=comet, alarmTemperature=alarmTemperature, DisplayString=DisplayString, humidityHysti=humidityHysti, presslow=presslow, presslowi=presslowi, cvlow=cvlow, cvhighi=cvhighi)
