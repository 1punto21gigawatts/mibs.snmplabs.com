#
# PySNMP MIB module ARTEM-COMPOINT-FILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ARTEM-COMPOINT-FILTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:25:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Integer32, Counter64, TimeTicks, Counter32, enterprises, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, MibIdentifier, IpAddress, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Integer32", "Counter64", "TimeTicks", "Counter32", "enterprises", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "MibIdentifier", "IpAddress", "Gauge32", "Bits")
MacAddress, RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
artem = ModuleIdentity((1, 3, 6, 1, 4, 1, 4280))
artem.setRevisions(('2005-06-10 12:16', '2005-05-25 13:00', '2005-05-24 13:24', '2005-05-10 07:20', '2005-04-21 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: artem.setRevisionsDescriptions(('Removed 200505251300Z from artemFilterGroup.', 'Changed max-access for artemFilterProtocolType to not-accessible.', 'Removed artemFilterProtocolIndex from artemFilterProtocolTable. Index is now artemFilterProtocolType. Removed artemFilterMACDestIfIndex and artemFilterMACDestIfTableIndex from artemFilterMACDestIfTable. Index is now ifIndex.', 'Added missing index artemFilterMACIndex for artemFilterMACDestIfTable.', 'Initial version.',))
if mibBuilder.loadTexts: artem.setLastUpdated('200506101216Z')
if mibBuilder.loadTexts: artem.setOrganization('Funkwerk Enterprise Communications.')
if mibBuilder.loadTexts: artem.setContactInfo('juergen.lachmann@funkwerk-ec.com.')
if mibBuilder.loadTexts: artem.setDescription('Funkwerk Enterprise Communications MIB file that provides additional attributes not covered by standard MIBs for for layer-2 protocol and MAC address-based filtering functionality in artem products.')
class ArtemFilterProcessing(TextualConvention, Integer32):
    description = 'This type represents the available method for artem filter processing. forward(1) - All frames are forwarded (no filtering takes place). discard(2) - All frames are discarded and none are forwarded. filterMAC(3) - Frames are filtered by applying MAC filtering rules. arpProcess(4) - Special processing for ARP requests if artemFilterArpTranslation is enabled.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("forward", 1), ("discard", 2), ("filterMAC", 3), ("arpProcess", 4))

artemFilter = ObjectIdentity((1, 3, 6, 1, 4, 1, 4280, 7))
if mibBuilder.loadTexts: artemFilter.setStatus('current')
if mibBuilder.loadTexts: artemFilter.setDescription('Definitions and attributes for layer-2 protocol and MAC address-based filtering.')
artemFilterArpTranslation = MibScalar((1, 3, 6, 1, 4, 1, 4280, 7, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: artemFilterArpTranslation.setStatus('current')
if mibBuilder.loadTexts: artemFilterArpTranslation.setDescription('This attribute reflects the enable state of special ARP processing for access point functionality. If ARP processing is enabled, all ARP packets from associated clients are forwarded, disregarding all other filterung rules. ARP requests for associated clients are translated from MAC multicast to MAC unicast frames. All other ARP requests (not for associated clients) are filtered. In the artemFilterProtocolTable, a special rule is created with protocol of ARP (0x0806) and state of arpProcess. This entry cannot be modified.')
artemFilterDefaultProcessing = MibScalar((1, 3, 6, 1, 4, 1, 4280, 7, 2), ArtemFilterProcessing().clone('filterMAC')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: artemFilterDefaultProcessing.setStatus('current')
if mibBuilder.loadTexts: artemFilterDefaultProcessing.setDescription('This attribute defines the default processing rule for all the protocols which have no specific actions defined.')
artemFilterProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 4280, 7, 3), )
if mibBuilder.loadTexts: artemFilterProtocolTable.setStatus('current')
if mibBuilder.loadTexts: artemFilterProtocolTable.setDescription('Table of protocol type based filtering rules.')
artemFilterProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4280, 7, 3, 1), ).setIndexNames((0, "ARTEM-COMPOINT-FILTER-MIB", "artemFilterProtocolType"))
if mibBuilder.loadTexts: artemFilterProtocolEntry.setStatus('current')
if mibBuilder.loadTexts: artemFilterProtocolEntry.setDescription('An entry in artemFilterProtocolTable.')
artemFilterProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterProtocolRowStatus.setStatus('current')
if mibBuilder.loadTexts: artemFilterProtocolRowStatus.setDescription('Auxiliary variable for creation of new object instances and/or the deletion of existing object instances.')
artemFilterProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: artemFilterProtocolType.setStatus('current')
if mibBuilder.loadTexts: artemFilterProtocolType.setDescription('This attribute holds the ethernet protocol type this rule matches. Protocol type examples: 0x0800 IP 0x0806 ARP 0x0bad Banyan VINES IP')
artemFilterProtocolProcessing = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 3, 1, 3), ArtemFilterProcessing().clone('filterMAC')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterProtocolProcessing.setStatus('current')
if mibBuilder.loadTexts: artemFilterProtocolProcessing.setDescription('This rule defines what to do with frames that match the rule in the current table row. forward(1) - All frames are forwarded (no filtering takes place). discard(2) - All frames are discarded and none are forwarded. filterMAC(3) - Frames are filtered by applying MAC filtering rules, according to artemFilterMACTable. arpProcess(4) - Special processing for ARP requests if artemFilterArpTranslation is enabled. Note that rules with type arpProcess(4) are automatically generated by the system according to artemFilterArpTranslation and cannot be directly modified by the user in any form.')
artemFilterMACTable = MibTable((1, 3, 6, 1, 4, 1, 4280, 7, 4), )
if mibBuilder.loadTexts: artemFilterMACTable.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACTable.setDescription('Table of MAC address based filtering rules.')
artemFilterMACEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1), ).setIndexNames((0, "ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACIndex"))
if mibBuilder.loadTexts: artemFilterMACEntry.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACEntry.setDescription('An entry in artemFilterMACTable.')
artemFilterMACIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: artemFilterMACIndex.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACIndex.setDescription('The auxiliary variable used to identify instances of the columnar objects in the artemFilterMACTable.')
artemFilterMACRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterMACRowStatus.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACRowStatus.setDescription('Auxiliary variable for creation of new object instances and/or the deletion of existing object instances.')
artemFilterMACState = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("conflict", 2), ("invalid", 3))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterMACState.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACState.setDescription("This attribute defines the state of the filtering rule in the corresponding table row. disabled(0) - This rule is inactive. enabled(1) - This rule is active and currrently in use for filtering. conflict(2) - This rule conflicts with another table row and has been inactivated. This state cannot be modified by writing this attribute, but rather is changed by the system to 'disabled(0)' as soon as the conflict has been resolved. invalid(3) - This rule has some invalid entries and has been inactivated. This state cannot be modified by writing this attribute, but rather is changed by the system to 'disabled(0)' as soon as the invalid entry has been corrected.")
artemFilterMACSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterMACSourceAddress.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACSourceAddress.setDescription("This attribute defines the source MAC address the filtering rule checks for. The following MAC address values have special meaning: 0xff0000000000 - matches packets originating from the Compoint itself. 0x000000000000 - matches all packets. 0xffffff__0000 - matches packets originating from the interface with a given ifIndex that is encoded at the '_' marked places.")
artemFilterMACDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 4, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterMACDestAddress.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACDestAddress.setDescription('This attribute defines the destination MAC address the filtering rule checks for. The following MAC address values have special meaning: 0x010000000000 - matches any multicast packet. 0x01005E800000 - matches any IP multicast packet.')
artemFilterMACDestIfTable = MibTable((1, 3, 6, 1, 4, 1, 4280, 7, 5), )
if mibBuilder.loadTexts: artemFilterMACDestIfTable.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACDestIfTable.setDescription('This table contains the destination interfaces for each rule in the artemFilterMACTable.')
artemFilterMACDestIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4280, 7, 5, 1), ).setIndexNames((0, "ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: artemFilterMACDestIfEntry.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACDestIfEntry.setDescription('An entry in artemFilterMACDestPortsTable.')
artemFilterMACDestIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4280, 7, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: artemFilterMACDestIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: artemFilterMACDestIfRowStatus.setDescription('Auxiliary variable for creation of new object instances and/or the deletion of existing object instances.')
artemFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4280, 7, 7)).setObjects(("ARTEM-COMPOINT-FILTER-MIB", "artemFilterArpTranslation"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterDefaultProcessing"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterProtocolProcessing"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACState"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACSourceAddress"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACDestAddress"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterProtocolRowStatus"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACRowStatus"), ("ARTEM-COMPOINT-FILTER-MIB", "artemFilterMACDestIfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    artemFilterGroup = artemFilterGroup.setStatus('current')
if mibBuilder.loadTexts: artemFilterGroup.setDescription('parameters not covered in standard 802.11 MIB.')
mibBuilder.exportSymbols("ARTEM-COMPOINT-FILTER-MIB", artemFilterGroup=artemFilterGroup, artemFilterMACState=artemFilterMACState, artemFilterProtocolTable=artemFilterProtocolTable, artemFilterMACTable=artemFilterMACTable, artemFilterDefaultProcessing=artemFilterDefaultProcessing, artemFilterProtocolRowStatus=artemFilterProtocolRowStatus, artemFilterArpTranslation=artemFilterArpTranslation, artemFilterMACDestIfEntry=artemFilterMACDestIfEntry, artemFilterProtocolEntry=artemFilterProtocolEntry, artemFilterMACRowStatus=artemFilterMACRowStatus, artemFilterMACDestIfTable=artemFilterMACDestIfTable, artemFilterMACIndex=artemFilterMACIndex, artemFilterProtocolType=artemFilterProtocolType, artem=artem, artemFilterMACSourceAddress=artemFilterMACSourceAddress, artemFilter=artemFilter, PYSNMP_MODULE_ID=artem, artemFilterProtocolProcessing=artemFilterProtocolProcessing, artemFilterMACDestIfRowStatus=artemFilterMACDestIfRowStatus, ArtemFilterProcessing=ArtemFilterProcessing, artemFilterMACEntry=artemFilterMACEntry, artemFilterMACDestAddress=artemFilterMACDestAddress)
