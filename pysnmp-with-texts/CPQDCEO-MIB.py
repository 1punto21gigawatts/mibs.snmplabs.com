#
# PySNMP MIB module CPQDCEO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQDCEO-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:27:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
compaq, = mibBuilder.importSymbols("CPQHOST-MIB", "compaq")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, sysLocation, sysDescr, sysContact = mibBuilder.importSymbols("SNMPv2-MIB", "sysName", "sysLocation", "sysDescr", "sysContact")
NotificationType, NotificationType, ModuleIdentity, MibIdentifier, Counter32, ObjectIdentity, Bits, Unsigned32, IpAddress, Integer32, Counter64, iso, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "NotificationType", "ModuleIdentity", "MibIdentifier", "Counter32", "ObjectIdentity", "Bits", "Unsigned32", "IpAddress", "Integer32", "Counter64", "iso", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cpqDceo = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 173))
environmentalDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 173, 1))
dceoTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 173, 1, 1))
trapDescription = MibScalar((1, 3, 6, 1, 4, 1, 232, 173, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapDescription.setStatus('mandatory')
if mibBuilder.loadTexts: trapDescription.setDescription('A string identifying the event for that last trap that was sent.')
trapDeviceDetails = MibScalar((1, 3, 6, 1, 4, 1, 232, 173, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapDeviceDetails.setStatus('mandatory')
if mibBuilder.loadTexts: trapDeviceDetails.setDescription('A string details information about the device, including rack name, basestation unique ID, PAN ID, sensor location, sensor temperature, etc....')
trapDeviceMgmtUrl = MibScalar((1, 3, 6, 1, 4, 1, 232, 173, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapDeviceMgmtUrl.setStatus('mandatory')
if mibBuilder.loadTexts: trapDeviceMgmtUrl.setDescription('A string contains the URL for the management software.')
trapDceoHighPriority = NotificationType((1, 3, 6, 1, 4, 1, 232, 173) + (0,1)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQDCEO-MIB", "trapDescription"), ("CPQDCEO-MIB", "trapDeviceDetails"), ("CPQDCEO-MIB", "trapDeviceMgmtUrl"))
if mibBuilder.loadTexts: trapDceoHighPriority.setDescription('A high priority alert has occurred. Action: Check the Trap Details for more information.')
trapDceoMediumPriority = NotificationType((1, 3, 6, 1, 4, 1, 232, 173) + (0,2)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQDCEO-MIB", "trapDescription"), ("CPQDCEO-MIB", "trapDeviceDetails"), ("CPQDCEO-MIB", "trapDeviceMgmtUrl"))
if mibBuilder.loadTexts: trapDceoMediumPriority.setDescription('A medium priority alert has occurred. Action: Check the Trap Details for more information.')
trapDceoLowPriority = NotificationType((1, 3, 6, 1, 4, 1, 232, 173) + (0,3)).setObjects(("SNMPv2-MIB", "sysName"), ("CPQDCEO-MIB", "trapDescription"), ("CPQDCEO-MIB", "trapDeviceDetails"), ("CPQDCEO-MIB", "trapDeviceMgmtUrl"))
if mibBuilder.loadTexts: trapDceoLowPriority.setDescription('A low priority alert has occurred. Action: Check the Trap Details for more information.')
mibBuilder.exportSymbols("CPQDCEO-MIB", environmentalDevice=environmentalDevice, trapDceoHighPriority=trapDceoHighPriority, dceoTrapInfo=dceoTrapInfo, trapDeviceDetails=trapDeviceDetails, trapDescription=trapDescription, trapDceoMediumPriority=trapDceoMediumPriority, trapDceoLowPriority=trapDceoLowPriority, cpqDceo=cpqDceo, trapDeviceMgmtUrl=trapDeviceMgmtUrl)
