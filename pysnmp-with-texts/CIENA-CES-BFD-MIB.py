#
# PySNMP MIB module CIENA-CES-BFD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-BFD-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:49:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
cienaGlobalMacAddress, cienaGlobalSeverity = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress", "cienaGlobalSeverity")
cienaCesConfig, cienaCesNotifications, cienaCesStatistics = mibBuilder.importSymbols("CIENA-SMI", "cienaCesConfig", "cienaCesNotifications", "cienaCesStatistics")
CienaMacAddress, CienaStatsClear, CienaGlobalState = mibBuilder.importSymbols("CIENA-TC", "CienaMacAddress", "CienaStatsClear", "CienaGlobalState")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Integer32, TimeTicks, ObjectIdentity, Bits, NotificationType, Gauge32, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Integer32", "TimeTicks", "ObjectIdentity", "Bits", "NotificationType", "Gauge32", "Unsigned32", "IpAddress")
TruthValue, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "TextualConvention", "DisplayString")
cienaCesBfdMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22))
cienaCesBfdMIB.setRevisions(('2014-04-04 00:00', '2014-03-19 00:00', '2011-07-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cienaCesBfdMIB.setRevisionsDescriptions(('Added Profile Index for BFD Session MIB object', 'Added BFD Profile MIB object', 'Initial creation.',))
if mibBuilder.loadTexts: cienaCesBfdMIB.setLastUpdated('201404040000Z')
if mibBuilder.loadTexts: cienaCesBfdMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: cienaCesBfdMIB.setContactInfo('Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: cienaCesBfdMIB.setDescription('This module defines the BFD SNMP objects.')
class BfdRole(TextualConvention, Integer32):
    description = 'BFD Role'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("passive", 1), ("active", 2))

cienaCesBfdMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1))
cienaCesBfdSession = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2))
cienaCesBfdProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3))
cienaCesBfdSessionStats = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7))
cienaCesBfdSessionMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 19))
cienaCesBfdSessionMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 19, 0))
cienaCesBfdSessionTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesBfdSessionTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionTable.setDescription('The (conceptual) table listing the configuration parameters for the BFD session table.')
cienaCesBfdSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-BFD-MIB", "cienaCesBfdSessionIndex"))
if mibBuilder.loadTexts: cienaCesBfdSessionEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionEntry.setDescription('An entry (conceptual row) in the BFD session table.')
cienaCesBfdSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cienaCesBfdSessionIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionIndex.setDescription('A unique identifier for BFD Session entry.')
cienaCesBfdSessionName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionName.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionName.setDescription('This mib object specifies the BFD session name.')
cienaCesBfdSessionAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1, 3), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionAdminState.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionAdminState.setDescription('This object specifies the admin state of BFD Session.')
cienaCesBfdSessionOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1, 4), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionOperState.setDescription('This object specifies the operational state of BFD Session.')
cienaCesBfdSessionProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionProfileIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionProfileIndex.setDescription('This mib object specifies the BFD Profile Index for the Session.')
cienaCesBfdSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1), )
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTable.setDescription('The (conceptual) table listing the statistics for a given BFD Session')
cienaCesBfdSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1, 1), ).setIndexNames((0, "CIENA-CES-BFD-MIB", "cienaCesBfdSessionIndex"))
if mibBuilder.loadTexts: cienaCesBfdSessionStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionStatsEntry.setDescription('An entry (conceptual row) in the BFD session statistics table.')
cienaCesBfdSessionStatsTotalTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTotalTx.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTotalTx.setDescription('This object indicates the number of transmitted packets in a BFD session.')
cienaCesBfdSessionStatsTotalRx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTotalRx.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionStatsTotalRx.setDescription('This object indicates the number of received packets in a BFD session.')
cienaCesBfdSessionUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionUpTime.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionUpTime.setDescription('This object specifies the time duration in seconds the session has been in the up state')
cienaCesBfdSessionDownTimeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 7, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdSessionDownTimeCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionDownTimeCount.setDescription('This object specifies the total number of times a session changes from up to operationally down state since creation')
cienaCesBfdSessionOperStateChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 19, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-BFD-MIB", "cienaCesBfdSessionName"), ("CIENA-CES-BFD-MIB", "cienaCesBfdSessionIndex"), ("CIENA-CES-BFD-MIB", "cienaCesBfdSessionAdminState"), ("CIENA-CES-BFD-MIB", "cienaCesBfdSessionOperState"))
if mibBuilder.loadTexts: cienaCesBfdSessionOperStateChangeTrap.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdSessionOperStateChangeTrap.setDescription('A notification is sent whenever the BFD session operational state has changed. To enable this notification, the cienaCesBfdSessionOperTrapState object must be enabled (which is enabled by default). Variable bindings include: cienaGlobalSeverity, cienaGlobalMacAddress, cienaCesBfdSessionName, cienaCesBfdSessionIndex, cienaCesBfdSessionAdminState, and cienaCesBfdSessionOperState.')
cienaCesBfdProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1), )
if mibBuilder.loadTexts: cienaCesBfdProfileTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdProfileTable.setDescription('The BFD Profile Table.')
cienaCesBfdProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1), ).setIndexNames((0, "CIENA-CES-BFD-MIB", "cienaCesBfdProfileIndex"))
if mibBuilder.loadTexts: cienaCesBfdProfileEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdProfileEntry.setDescription('An entry (conceptual row) in the cienaCesBfdProfileTable.')
cienaCesBfdProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cienaCesBfdProfileIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdProfileIndex.setDescription('A unique identifier for BFD Profile entry.')
cienaCesBfdProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdProfileName.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdProfileName.setDescription('This mib object specifies the BFD Profile name.')
cienaCesBfdTransmitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdTransmitInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdTransmitInterval.setDescription('This mib object specifies the BFD Transmit Interval in msec.')
cienaCesBfdReceiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdReceiveInterval.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdReceiveInterval.setDescription('This mib object specifies the BFD Receive Interval in msec.')
cienaCesBfdRole = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 5), BfdRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdRole.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdRole.setDescription('This mib object specifies the BFD Role.')
cienaCesBfdLspGachType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdLspGachType.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdLspGachType.setDescription('This mib object specifies the BFD LSP Gach Type. Reference RFC 5586')
cienaCesBfdDetectMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdDetectMultiplier.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdDetectMultiplier.setDescription('This mib object specifies the BFD Detect Multiplier.')
cienaCesBfdUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 22, 1, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesBfdUseCount.setStatus('current')
if mibBuilder.loadTexts: cienaCesBfdUseCount.setDescription('Number of sessions using BFD Profile.')
mibBuilder.exportSymbols("CIENA-CES-BFD-MIB", cienaCesBfdSessionName=cienaCesBfdSessionName, cienaCesBfdMIBObjects=cienaCesBfdMIBObjects, cienaCesBfdSessionOperStateChangeTrap=cienaCesBfdSessionOperStateChangeTrap, cienaCesBfdUseCount=cienaCesBfdUseCount, cienaCesBfdSessionStats=cienaCesBfdSessionStats, cienaCesBfdSession=cienaCesBfdSession, cienaCesBfdSessionStatsEntry=cienaCesBfdSessionStatsEntry, cienaCesBfdProfileTable=cienaCesBfdProfileTable, cienaCesBfdSessionStatsTable=cienaCesBfdSessionStatsTable, cienaCesBfdProfileEntry=cienaCesBfdProfileEntry, cienaCesBfdRole=cienaCesBfdRole, cienaCesBfdSessionEntry=cienaCesBfdSessionEntry, cienaCesBfdSessionUpTime=cienaCesBfdSessionUpTime, BfdRole=BfdRole, cienaCesBfdProfileIndex=cienaCesBfdProfileIndex, cienaCesBfdSessionOperState=cienaCesBfdSessionOperState, cienaCesBfdProfile=cienaCesBfdProfile, cienaCesBfdSessionDownTimeCount=cienaCesBfdSessionDownTimeCount, cienaCesBfdReceiveInterval=cienaCesBfdReceiveInterval, cienaCesBfdSessionIndex=cienaCesBfdSessionIndex, cienaCesBfdSessionStatsTotalRx=cienaCesBfdSessionStatsTotalRx, cienaCesBfdSessionMIBNotification=cienaCesBfdSessionMIBNotification, cienaCesBfdDetectMultiplier=cienaCesBfdDetectMultiplier, cienaCesBfdSessionAdminState=cienaCesBfdSessionAdminState, cienaCesBfdMIB=cienaCesBfdMIB, cienaCesBfdSessionTable=cienaCesBfdSessionTable, cienaCesBfdProfileName=cienaCesBfdProfileName, PYSNMP_MODULE_ID=cienaCesBfdMIB, cienaCesBfdSessionProfileIndex=cienaCesBfdSessionProfileIndex, cienaCesBfdSessionStatsTotalTx=cienaCesBfdSessionStatsTotalTx, cienaCesBfdLspGachType=cienaCesBfdLspGachType, cienaCesBfdTransmitInterval=cienaCesBfdTransmitInterval, cienaCesBfdSessionMIBNotificationPrefix=cienaCesBfdSessionMIBNotificationPrefix)
