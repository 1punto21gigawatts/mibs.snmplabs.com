#
# PySNMP MIB module MSERIES-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSERIES-ALARM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
mseries, = mibBuilder.importSymbols("MSERIES-MIB", "mseries")
PortType, AlarmPerceivedSeverity, UnitType, AlarmProbableCause, AlarmNotificationType = mibBuilder.importSymbols("MSERIES-TC", "PortType", "AlarmPerceivedSeverity", "UnitType", "AlarmProbableCause", "AlarmNotificationType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, NotificationType, Bits, Gauge32, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Unsigned32, Counter64, TimeTicks, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Bits", "Gauge32", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Counter64", "TimeTicks", "iso", "Counter32")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
smartAlarm = ModuleIdentity((1, 3, 6, 1, 4, 1, 30826, 1, 1))
smartAlarm.setRevisions(('2014-02-12 14:15', '2013-10-15 13:41', '2011-12-05 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: smartAlarm.setRevisionsDescriptions(('Added alarmLogList and smartAlarmMIBConformance.', 'Added alarmHostName, alarmPortName and alarmPortType to AlarmEntry. Added alarmHostName, alarmPortName and alarmPortType to alarmNotificationCleared, alarmNotificationWarning, alarmNotificationMinor, alarmNotificationMajor, and alarmNotificationCritical. Also alarmPort reports different numbers against before (changed from SmartOS v2.1). 1-10 means Line ports and 11 and above means Client port. Descriptions are also updated.', 'Initial revision. Added notifications.',))
if mibBuilder.loadTexts: smartAlarm.setLastUpdated('201402121415Z')
if mibBuilder.loadTexts: smartAlarm.setOrganization('SmartOptics')
if mibBuilder.loadTexts: smartAlarm.setContactInfo('http://www.smartoptics.com')
if mibBuilder.loadTexts: smartAlarm.setDescription('This is the enterprise specific Alarm MIB for SmartOptics M-Series')
alarmGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 1))
alarmActiveList = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2))
alarmLogList = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3))
alarmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4))
smartAlarmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5))
smartAlarmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 1))
smartAlarmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 2))
smartAlarmGeneralLastSeqNumber = MibScalar((1, 3, 6, 1, 4, 1, 30826, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smartAlarmGeneralLastSeqNumber.setStatus('current')
if mibBuilder.loadTexts: smartAlarmGeneralLastSeqNumber.setDescription('The sequence number of the last sent notification.')
smartAlarmGeneralHighestSeverity = MibScalar((1, 3, 6, 1, 4, 1, 30826, 1, 1, 1, 2), AlarmPerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smartAlarmGeneralHighestSeverity.setStatus('current')
if mibBuilder.loadTexts: smartAlarmGeneralHighestSeverity.setDescription('The current highest severity of the active alarms.')
smartAlarmGeneralNumberActiveList = MibScalar((1, 3, 6, 1, 4, 1, 30826, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smartAlarmGeneralNumberActiveList.setStatus('current')
if mibBuilder.loadTexts: smartAlarmGeneralNumberActiveList.setDescription('The number of active alarms in the alarmActiveList.')
smartAlarmGeneralNumberLogList = MibScalar((1, 3, 6, 1, 4, 1, 30826, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smartAlarmGeneralNumberLogList.setStatus('current')
if mibBuilder.loadTexts: smartAlarmGeneralNumberLogList.setDescription('The number of alarms in the alarmLogList.')
alarmActiveTable = MibTable((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alarmActiveTable.setStatus('current')
if mibBuilder.loadTexts: alarmActiveTable.setDescription('The active alarm list.')
alarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1), ).setIndexNames((0, "MSERIES-ALARM-MIB", "alarmIndex"))
if mibBuilder.loadTexts: alarmEntry.setStatus('current')
if mibBuilder.loadTexts: alarmEntry.setDescription('An entry in the active alarm list.')
alarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmIndex.setStatus('current')
if mibBuilder.loadTexts: alarmIndex.setDescription('An unique index assigned to each alarm.')
alarmUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 2), UnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmUnit.setStatus('current')
if mibBuilder.loadTexts: alarmUnit.setDescription('The alarming unit associated with this alarm. undefined(0), nmb(1), psu1(2), psu2(3), fan(4), system(5), slaveNmb(6), slavePsu1(7), slavePsu2(8), slaveFan(9).')
alarmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPort.setStatus('current')
if mibBuilder.loadTexts: alarmPort.setDescription('The alarming port associated with this alarm. 1-10 is Line Ports. 11 and higher is Client ports. For non port alarms this value is 0.')
alarmText = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmText.setStatus('current')
if mibBuilder.loadTexts: alarmText.setDescription('The additional text for the alarm.')
alarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 5), AlarmPerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSeverity.setStatus('current')
if mibBuilder.loadTexts: alarmSeverity.setDescription('The severity of the alarm as defined in ITU-T X.733.')
alarmActivationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmActivationTime.setStatus('current')
if mibBuilder.loadTexts: alarmActivationTime.setDescription('The time when the alarm was created.')
alarmCeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCeaseTime.setStatus('current')
if mibBuilder.loadTexts: alarmCeaseTime.setDescription('The time when the alarm was ceased.')
alarmSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmSeqNumber.setStatus('current')
if mibBuilder.loadTexts: alarmSeqNumber.setDescription('The last sequence number used when issuing a notification for this alarm.')
alarmHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmHostName.setStatus('current')
if mibBuilder.loadTexts: alarmHostName.setDescription('The hostname.')
alarmPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPortName.setStatus('current')
if mibBuilder.loadTexts: alarmPortName.setDescription('The Port Name.')
alarmPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 11), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPortType.setStatus('current')
if mibBuilder.loadTexts: alarmPortType.setDescription('The Port Type. undefined(0), rx(1), tx(2), biDi(3).')
alarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 12), AlarmNotificationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmType.setStatus('current')
if mibBuilder.loadTexts: alarmType.setDescription('The type of alarm as defined in ITU-T X.733 undefined (0), other (1), communicationsAlarm (2), qualityOfServiceAlarm (3), processingErrorAlarm (4), equipmentAlarm (5), environmental (6), integrityViolation (7), operationalViolation (8), physicalViolation(9), securityServiceOrMechanismViloation (10), timeDomainViolation (11)')
alarmCause = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 13), AlarmProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmCause.setStatus('current')
if mibBuilder.loadTexts: alarmCause.setDescription('The alarm probable cause as defined in ITU-T X.733. undefined (0) adapterError (1) -- Equipment applicationSubsystemFailure (2) -- Processing bandwidthReduced (3) -- Quality of service callEstablishmentError (4) -- Communications communicationsProtocolError (5) -- Communications communicationsSubsystemFailure (6) -- Communications configurationOrCustomizationError (7) -- Processing congestion (8) -- Quality of service corruptData (9) -- Processing cpuCyclesLimitExceeded (10) -- Processing dTEdCEInterfaceError (11) -- Communications datasetOrModemError (12) -- Equipment degradedSignal (13) -- Communications enclosureDoorOpen (14) -- Environmental equipmentMalfunction (15) -- Equipment excessiveVibration (16) -- Environmental fileError (17) -- Processing fireDetected (18) -- Environmental floodDetected (19) -- Environmental framingError (20) -- Communications heatingOrVentilationOrCoolingSystemProblem (21) -- Environmental humidityUnacceptable (22) -- Environmental inputDeviceError (23) -- Equipment inputOutputDeviceError (24) -- Equipment lANError (25) -- Communications leakDetected (26) -- Environmental localNodeTransmissionError (27) -- Communications lossOfFrame (28) -- Communications lossOfSignal (29) -- Communications materialSupplyExhausted (30) -- Environmental multiplexerProblem (31) -- Equipment outOfMemory (32) -- Processing outputDeviceError (33) -- Equipment performanceDegraded (34) -- Quality of service powerProblem (35) -- Equipment pressureUnacceptable (36) -- Environmental processorProblem (37) -- Equipment pumpFailure (38) -- Environmental queueSizeExceeded (39) -- Quality of service receiveFailure (40) -- Equipment receiverFailure (41) -- Equipment remoteNodeTransmissionError (42) -- Communications resourceAtOrNearingCapacity (43) -- Quality of service responseTimeExcessive (44) -- Quality of service retransmissionRateExcessive (45) -- Quality of service softwareProgramError (46) -- Processing softwareError (47) -- Processing softwareProgramAbnormallyTerminated (48) -- Processing storageCapacityProblem (49) -- Processing temperatureUnacceptable (50) -- Environmental thresholdCrossed (51) -- Quality of service timingProblem (52) -- Equipment toxicLeakDetected (53) -- Environmental transmitFailure (54) -- Equipment transmitterFailure (55) -- Equipment underlyingResourceUnavailable (56) -- Processing versionMismatch (57) -- Processing')
alarmPortAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 2, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmPortAlias.setStatus('current')
if mibBuilder.loadTexts: alarmPortAlias.setDescription('The Port Alias.')
alarmLogTable = MibTable((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alarmLogTable.setStatus('current')
if mibBuilder.loadTexts: alarmLogTable.setDescription('The active alarm list.')
alarmLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1), ).setIndexNames((0, "MSERIES-ALARM-MIB", "alarmLogIndex"))
if mibBuilder.loadTexts: alarmLogEntry.setStatus('current')
if mibBuilder.loadTexts: alarmLogEntry.setDescription('An entry in the alarm log table.')
alarmLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogIndex.setStatus('current')
if mibBuilder.loadTexts: alarmLogIndex.setDescription('An unique index assigned to each alarm.')
alarmLogUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 2), UnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogUnit.setStatus('current')
if mibBuilder.loadTexts: alarmLogUnit.setDescription('The alarming unit associated with this alarm. undefined(0), nmb(1), psu1(2), psu2(3), fan(4), system(5), slaveNmb(6), slavePsu1(7), slavePsu2(8), slaveFan(9).')
alarmLogPort = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogPort.setStatus('current')
if mibBuilder.loadTexts: alarmLogPort.setDescription('The alarming port associated with this alarm. 1-10 is Line Ports. 11 and higher is Client ports. For non port alarms this value is 0.')
alarmLogText = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogText.setStatus('current')
if mibBuilder.loadTexts: alarmLogText.setDescription('The additional text for the alarm.')
alarmLogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 5), AlarmPerceivedSeverity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogSeverity.setStatus('current')
if mibBuilder.loadTexts: alarmLogSeverity.setDescription('The severity of the alarm as defined in ITU-T X.733.')
alarmLogActivationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogActivationTime.setStatus('current')
if mibBuilder.loadTexts: alarmLogActivationTime.setDescription('The time when the alarm was created.')
alarmLogCeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogCeaseTime.setStatus('current')
if mibBuilder.loadTexts: alarmLogCeaseTime.setDescription('The time when the alarm was ceased.')
alarmLogSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogSeqNumber.setStatus('current')
if mibBuilder.loadTexts: alarmLogSeqNumber.setDescription('The last sequence number used when issuing a notification for this alarm.')
alarmLogHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogHostName.setStatus('current')
if mibBuilder.loadTexts: alarmLogHostName.setDescription('The hostname.')
alarmLogPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogPortName.setStatus('current')
if mibBuilder.loadTexts: alarmLogPortName.setDescription('The Port Name.')
alarmLogPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 11), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogPortType.setStatus('current')
if mibBuilder.loadTexts: alarmLogPortType.setDescription('The Port Direction. rx(1), tx(2), biDi(3).')
alarmLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 12), AlarmNotificationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogType.setStatus('current')
if mibBuilder.loadTexts: alarmLogType.setDescription('The type of alarm as defined in ITU-T X.733 undefined (0), other (1), communicationsAlarm (2), qualityOfServiceAlarm (3), processingErrorAlarm (4), equipmentAlarm (5), environmental (6), integrityViolation (7), operationalViolation (8), physicalViolation(9), securityServiceOrMechanismViloation (10), timeDomainViolation (11)')
alarmLogCause = MibTableColumn((1, 3, 6, 1, 4, 1, 30826, 1, 1, 3, 1, 1, 13), AlarmProbableCause()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmLogCause.setStatus('current')
if mibBuilder.loadTexts: alarmLogCause.setDescription('The alarm probable cause as defined in ITU-T X.733. undefined (0) adapterError (1) -- Equipment applicationSubsystemFailure (2) -- Processing bandwidthReduced (3) -- Quality of service callEstablishmentError (4) -- Communications communicationsProtocolError (5) -- Communications communicationsSubsystemFailure (6) -- Communications configurationOrCustomizationError (7) -- Processing congestion (8) -- Quality of service corruptData (9) -- Processing cpuCyclesLimitExceeded (10) -- Processing dTEdCEInterfaceError (11) -- Communications datasetOrModemError (12) -- Equipment degradedSignal (13) -- Communications enclosureDoorOpen (14) -- Environmental equipmentMalfunction (15) -- Equipment excessiveVibration (16) -- Environmental fileError (17) -- Processing fireDetected (18) -- Environmental floodDetected (19) -- Environmental framingError (20) -- Communications heatingOrVentilationOrCoolingSystemProblem (21) -- Environmental humidityUnacceptable (22) -- Environmental inputDeviceError (23) -- Equipment inputOutputDeviceError (24) -- Equipment lANError (25) -- Communications leakDetected (26) -- Environmental localNodeTransmissionError (27) -- Communications lossOfFrame (28) -- Communications lossOfSignal (29) -- Communications materialSupplyExhausted (30) -- Environmental multiplexerProblem (31) -- Equipment outOfMemory (32) -- Processing outputDeviceError (33) -- Equipment performanceDegraded (34) -- Quality of service powerProblem (35) -- Equipment pressureUnacceptable (36) -- Environmental processorProblem (37) -- Equipment pumpFailure (38) -- Environmental queueSizeExceeded (39) -- Quality of service receiveFailure (40) -- Equipment receiverFailure (41) -- Equipment remoteNodeTransmissionError (42) -- Communications resourceAtOrNearingCapacity (43) -- Quality of service responseTimeExcessive (44) -- Quality of service retransmissionRateExcessive (45) -- Quality of service softwareProgramError (46) -- Processing softwareError (47) -- Processing softwareProgramAbnormallyTerminated (48) -- Processing storageCapacityProblem (49) -- Processing temperatureUnacceptable (50) -- Environmental thresholdCrossed (51) -- Quality of service timingProblem (52) -- Equipment toxicLeakDetected (53) -- Environmental transmitFailure (54) -- Equipment transmitterFailure (55) -- Equipment underlyingResourceUnavailable (56) -- Processing versionMismatch (57) -- Processing')
alarmNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0))
alarmNotificationCleared = NotificationType((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0, 1)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmPortAlias"))
if mibBuilder.loadTexts: alarmNotificationCleared.setStatus('current')
if mibBuilder.loadTexts: alarmNotificationCleared.setDescription('Sent when an alarm is cleared.')
alarmNotificationWarning = NotificationType((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0, 2)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmPortAlias"))
if mibBuilder.loadTexts: alarmNotificationWarning.setStatus('current')
if mibBuilder.loadTexts: alarmNotificationWarning.setDescription('Sent when an alarm with warning severity is activated.')
alarmNotificationMinor = NotificationType((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0, 3)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmPortAlias"))
if mibBuilder.loadTexts: alarmNotificationMinor.setStatus('current')
if mibBuilder.loadTexts: alarmNotificationMinor.setDescription('Sent when an alarm with minor severity is activated.')
alarmNotificationMajor = NotificationType((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0, 4)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmPortAlias"))
if mibBuilder.loadTexts: alarmNotificationMajor.setStatus('current')
if mibBuilder.loadTexts: alarmNotificationMajor.setDescription('Sent when an alarm with major severity is activated..')
alarmNotificationCritical = NotificationType((1, 3, 6, 1, 4, 1, 30826, 1, 1, 4, 0, 5)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmPortAlias"))
if mibBuilder.loadTexts: alarmNotificationCritical.setStatus('current')
if mibBuilder.loadTexts: alarmNotificationCritical.setDescription('Sent when an alarm with critical severity is activated.')
smartAlarmGeneralGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 1, 1)).setObjects(("MSERIES-ALARM-MIB", "smartAlarmGeneralLastSeqNumber"), ("MSERIES-ALARM-MIB", "smartAlarmGeneralHighestSeverity"), ("MSERIES-ALARM-MIB", "smartAlarmGeneralNumberActiveList"), ("MSERIES-ALARM-MIB", "smartAlarmGeneralNumberLogList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartAlarmGeneralGroupV1 = smartAlarmGeneralGroupV1.setStatus('current')
if mibBuilder.loadTexts: smartAlarmGeneralGroupV1.setDescription('The general alarm objects V1.')
smartAlarmNotificationGroupV1 = NotificationGroup((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 1, 2)).setObjects(("MSERIES-ALARM-MIB", "alarmNotificationCleared"), ("MSERIES-ALARM-MIB", "alarmNotificationCritical"), ("MSERIES-ALARM-MIB", "alarmNotificationMajor"), ("MSERIES-ALARM-MIB", "alarmNotificationMinor"), ("MSERIES-ALARM-MIB", "alarmNotificationWarning"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartAlarmNotificationGroupV1 = smartAlarmNotificationGroupV1.setStatus('current')
if mibBuilder.loadTexts: smartAlarmNotificationGroupV1.setDescription('The alarm notifications V1.')
smartAlarmActiveTableGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 1, 3)).setObjects(("MSERIES-ALARM-MIB", "alarmIndex"), ("MSERIES-ALARM-MIB", "alarmUnit"), ("MSERIES-ALARM-MIB", "alarmPort"), ("MSERIES-ALARM-MIB", "alarmText"), ("MSERIES-ALARM-MIB", "alarmSeverity"), ("MSERIES-ALARM-MIB", "alarmActivationTime"), ("MSERIES-ALARM-MIB", "alarmCeaseTime"), ("MSERIES-ALARM-MIB", "alarmSeqNumber"), ("MSERIES-ALARM-MIB", "alarmHostName"), ("MSERIES-ALARM-MIB", "alarmPortName"), ("MSERIES-ALARM-MIB", "alarmPortType"), ("MSERIES-ALARM-MIB", "alarmType"), ("MSERIES-ALARM-MIB", "alarmCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartAlarmActiveTableGroupV1 = smartAlarmActiveTableGroupV1.setStatus('current')
if mibBuilder.loadTexts: smartAlarmActiveTableGroupV1.setDescription('The active alarm table objects V1.')
smartAlarmLogTableGroupV1 = ObjectGroup((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 1, 4)).setObjects(("MSERIES-ALARM-MIB", "alarmLogIndex"), ("MSERIES-ALARM-MIB", "alarmLogUnit"), ("MSERIES-ALARM-MIB", "alarmLogPort"), ("MSERIES-ALARM-MIB", "alarmLogText"), ("MSERIES-ALARM-MIB", "alarmLogSeverity"), ("MSERIES-ALARM-MIB", "alarmLogActivationTime"), ("MSERIES-ALARM-MIB", "alarmLogCeaseTime"), ("MSERIES-ALARM-MIB", "alarmLogSeqNumber"), ("MSERIES-ALARM-MIB", "alarmLogHostName"), ("MSERIES-ALARM-MIB", "alarmLogPortName"), ("MSERIES-ALARM-MIB", "alarmLogPortType"), ("MSERIES-ALARM-MIB", "alarmLogType"), ("MSERIES-ALARM-MIB", "alarmLogCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartAlarmLogTableGroupV1 = smartAlarmLogTableGroupV1.setStatus('current')
if mibBuilder.loadTexts: smartAlarmLogTableGroupV1.setDescription('The alarm log table objects V1.')
smartAlarmBasicComplV1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 30826, 1, 1, 5, 2, 1)).setObjects(("MSERIES-ALARM-MIB", "smartAlarmGeneralGroupV1"), ("MSERIES-ALARM-MIB", "smartAlarmNotificationGroupV1"), ("MSERIES-ALARM-MIB", "smartAlarmActiveTableGroupV1"), ("MSERIES-ALARM-MIB", "smartAlarmLogTableGroupV1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartAlarmBasicComplV1 = smartAlarmBasicComplV1.setStatus('current')
if mibBuilder.loadTexts: smartAlarmBasicComplV1.setDescription('Basic implementation requirements for the alarm MIB V1.')
mibBuilder.exportSymbols("MSERIES-ALARM-MIB", alarmLogSeverity=alarmLogSeverity, alarmLogSeqNumber=alarmLogSeqNumber, alarmLogIndex=alarmLogIndex, smartAlarmGeneralLastSeqNumber=smartAlarmGeneralLastSeqNumber, alarmSeverity=alarmSeverity, alarmNotificationMinor=alarmNotificationMinor, alarmCause=alarmCause, alarmHostName=alarmHostName, alarmGeneral=alarmGeneral, alarmPortType=alarmPortType, smartAlarmNotificationGroupV1=smartAlarmNotificationGroupV1, alarmNotifications=alarmNotifications, alarmLogCause=alarmLogCause, PYSNMP_MODULE_ID=smartAlarm, alarmPortAlias=alarmPortAlias, smartAlarm=smartAlarm, alarmLogHostName=alarmLogHostName, alarmUnit=alarmUnit, alarmEntry=alarmEntry, alarmLogEntry=alarmLogEntry, alarmActiveTable=alarmActiveTable, smartAlarmMIBConformance=smartAlarmMIBConformance, alarmSeqNumber=alarmSeqNumber, alarmLogPort=alarmLogPort, smartAlarmGeneralGroupV1=smartAlarmGeneralGroupV1, alarmNotifyPrefix=alarmNotifyPrefix, alarmPortName=alarmPortName, smartAlarmGeneralHighestSeverity=smartAlarmGeneralHighestSeverity, alarmLogCeaseTime=alarmLogCeaseTime, alarmLogList=alarmLogList, smartAlarmGeneralNumberActiveList=smartAlarmGeneralNumberActiveList, alarmLogUnit=alarmLogUnit, alarmLogPortType=alarmLogPortType, smartAlarmLogTableGroupV1=smartAlarmLogTableGroupV1, alarmLogTable=alarmLogTable, smartAlarmGroups=smartAlarmGroups, alarmNotificationMajor=alarmNotificationMajor, alarmText=alarmText, smartAlarmGeneralNumberLogList=smartAlarmGeneralNumberLogList, alarmActiveList=alarmActiveList, alarmLogText=alarmLogText, alarmPort=alarmPort, alarmLogType=alarmLogType, alarmNotificationWarning=alarmNotificationWarning, alarmLogActivationTime=alarmLogActivationTime, alarmNotificationCleared=alarmNotificationCleared, smartAlarmActiveTableGroupV1=smartAlarmActiveTableGroupV1, smartAlarmCompliances=smartAlarmCompliances, alarmLogPortName=alarmLogPortName, alarmActivationTime=alarmActivationTime, smartAlarmBasicComplV1=smartAlarmBasicComplV1, alarmIndex=alarmIndex, alarmType=alarmType, alarmNotificationCritical=alarmNotificationCritical, alarmCeaseTime=alarmCeaseTime)
