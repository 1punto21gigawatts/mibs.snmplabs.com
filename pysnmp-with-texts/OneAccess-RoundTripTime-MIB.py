#
# PySNMP MIB module OneAccess-RoundTripTime-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OneAccess-RoundTripTime-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:35:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
OwnerString, = mibBuilder.importSymbols("IF-MIB", "OwnerString")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
oacExpIMManagement, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMManagement", "oacMIBModules")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, ObjectIdentity, NotificationType, MibIdentifier, iso, Gauge32, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, TimeTicks, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "NotificationType", "MibIdentifier", "iso", "Gauge32", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "TimeTicks", "ModuleIdentity", "Counter32")
TimeStamp, TimeInterval, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TimeInterval", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
oacRttChkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223))
oacRttChkMIB.setRevisions(('2011-07-29 00:00', '2011-06-15 00:00', '2010-07-08 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: oacRttChkMIB.setRevisionsDescriptions(('Contact updated', 'Fixed minor corrections.', 'This MIB module describes a MIB for watching a list of hosts using different protocols for Round Trip Time(RTT)',))
if mibBuilder.loadTexts: oacRttChkMIB.setLastUpdated('201107290000Z')
if mibBuilder.loadTexts: oacRttChkMIB.setOrganization(' OneAccess ')
if mibBuilder.loadTexts: oacRttChkMIB.setContactInfo('Pascal KESTELOOT Postal: ONE ACCESS 381 Avenue du Gnral de Gaulle 92140 Clamart, France FRANCE Tel: (+33) 01 41 87 70 00 Fax: (+33) 01 41 87 74 00 E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacRttChkMIB.setDescription('fixed compilation issues')
class RttResponseSense(TextualConvention, Integer32):
    description = 'Values for status of the operation.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16))
    namedValues = NamedValues(("ok", 1), ("disconnected", 2), ("overThreshold", 3), ("timeout", 4), ("busy", 5), ("notConnected", 6), ("dropped", 7), ("sequenceError", 8), ("verifyError", 9), ("applicationSpecific", 10), ("error", 16))

class OacRttRttType(TextualConvention, Integer32):
    description = 'Describe the type of operation to execute.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("echo", 1), ("pathEcho", 2))

class OacRttProtocol(TextualConvention, Integer32):
    description = 'Describe the protocol to be used for operation.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notApplicable", 1), ("ipIcmpEcho", 2))

class OacRttTargetAddress(TextualConvention, OctetString):
    description = 'Target address'
    status = 'current'

oacRttChkObj = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1))
oacRttControl = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1))
oacRttHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2))
oacRttStats = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3))
oacRttAppl = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4))
oacRttApplVersion = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttApplVersion.setStatus('current')
if mibBuilder.loadTexts: oacRttApplVersion.setDescription('Version')
class OacRttApplType(TextualConvention, Integer32):
    description = 'Values for Rtt Application Type.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("echo", 1), ("pathEcho", 2), ("fileIO", 3), ("script", 4), ("udpEcho", 5), ("tcpConnect", 6), ("http", 7), ("dns", 8), ("jitter", 9), ("dlsw", 10), ("dhcp", 11), ("ftp", 12))

class OacRttApplProtocol(TextualConvention, Integer32):
    description = 'Values for Rtt Application Protocol.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))
    namedValues = NamedValues(("notApplicable", 1), ("ipIcmpEcho", 2), ("ipUdpEchoAppl", 3), ("snaRUEcho", 4), ("snaLU0EchoAppl", 5), ("snaLU2EchoAppl", 6), ("snaLU62Echo", 7), ("snaLU62EchoAppl", 8), ("appleTalkEcho", 9), ("appleTalkEchoAppl", 10), ("decNetEcho", 11), ("decNetEchoAppl", 12), ("ipxEcho", 13), ("ipxEchoAppl", 14), ("isoClnsEcho", 15), ("isoClnsEchoAppl", 16), ("vinesEcho", 17), ("vinesEchoAppl", 18), ("xnsEcho", 19), ("xnsEchoAppl", 20), ("apolloEcho", 21), ("apolloEchoAppl", 22), ("netbiosEchoAppl", 23), ("ipTcpConn", 24), ("httpAppl", 25), ("dnsAppl", 26), ("jitterAppl", 27), ("dlswAppl", 28), ("dhcpAppl", 29), ("ftpAppl", 30))

oacRttApplSuppRttTypesTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 2), )
if mibBuilder.loadTexts: oacRttApplSuppRttTypesTable.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppRttTypesTable.setDescription('A table of which contains the supported Rtt Monitor Types.')
oacRttApplSuppRttTypesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 2, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttApplSuppRttTypes"))
if mibBuilder.loadTexts: oacRttApplSuppRttTypesEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppRttTypesEntry.setDescription('Define valid Rtt Monitor types.')
oacRttApplSuppRttTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 2, 1, 1), OacRttApplType())
if mibBuilder.loadTexts: oacRttApplSuppRttTypes.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppRttTypes.setDescription("This object indexes the supported 'RttType' types.")
oacRttApplSuppRttTypesValid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttApplSuppRttTypesValid.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppRttTypesValid.setDescription("This object defines the supported 'RttMonRttType' types.")
oacRttApplSuppProtocolsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 3), )
if mibBuilder.loadTexts: oacRttApplSuppProtocolsTable.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppProtocolsTable.setDescription('A table of which contains the supported Rtt Monitor Protocols.')
oacRttApplSuppProtocolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 3, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttApplSuppProtocols"))
if mibBuilder.loadTexts: oacRttApplSuppProtocolsEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppProtocolsEntry.setDescription('A list that presents the valid Rtt Monitor Protocols.')
oacRttApplSuppProtocols = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 3, 1, 1), OacRttApplProtocol())
if mibBuilder.loadTexts: oacRttApplSuppProtocols.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppProtocols.setDescription("This object indexes the supported 'oacRttProtocol' protocols.")
oacRttApplSuppProtocolsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 4, 3, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttApplSuppProtocolsValid.setStatus('current')
if mibBuilder.loadTexts: oacRttApplSuppProtocolsValid.setDescription("This object defines the supported 'oacRttProtocol' protocols.")
oacRttControlTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1), )
if mibBuilder.loadTexts: oacRttControlTable.setStatus('current')
if mibBuilder.loadTexts: oacRttControlTable.setDescription('Definitions for RTT operations.')
oacRttControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"))
if mibBuilder.loadTexts: oacRttControlEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttControlEntry.setDescription('List of objetcts defining a conceptual RTT operation.')
oacRttControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttControlIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttControlIndex.setDescription('Identifies a RTT row in oacRttControlTable.')
oacRttControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlStatus.setStatus('current')
if mibBuilder.loadTexts: oacRttControlStatus.setDescription('The status of the RTT row.')
oacRttControlTag = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlTag.setStatus('current')
if mibBuilder.loadTexts: oacRttControlTag.setDescription('String used only by application for identify the row.')
oacRttControlFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlFrequency.setStatus('current')
if mibBuilder.loadTexts: oacRttControlFrequency.setDescription('Define frequency in seconds of RTT operations.')
oacRttControlRttType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 5), OacRttRttType().clone('echo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlRttType.setStatus('current')
if mibBuilder.loadTexts: oacRttControlRttType.setDescription('Define type of RTT operation.')
oacRttControlTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 604800000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlTimeout.setStatus('current')
if mibBuilder.loadTexts: oacRttControlTimeout.setDescription('Defines the timeout for an operation. It must be set to a smaller value then oacRttControlFrequency*1000')
oacRttControlOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 7), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlOwner.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOwner.setDescription('Identifies the creator of the row.')
oacRttControlThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttControlThreshold.setStatus('current')
if mibBuilder.loadTexts: oacRttControlThreshold.setDescription('Define threshold limit.')
oacRttEchoTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2), )
if mibBuilder.loadTexts: oacRttEchoTable.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoTable.setDescription('A table with definitions for an RTT entry.')
oacRttEchoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"))
if mibBuilder.loadTexts: oacRttEchoEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoEntry.setDescription('List of objects for RTT entry configuration.')
oacRttEchoSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 1), OacRttTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoSourceAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoSourceAddress.setDescription('Source address to use when sending probes.')
oacRttEchoTargetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 2), OacRttTargetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoTargetAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoTargetAddress.setDescription('Specifies the IP address of the target.')
oacRttEchoPktDataRequestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384)).clone(1)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoPktDataRequestSize.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoPktDataRequestSize.setDescription('Specifies the size of the packet to send.')
oacRttEchoPktDataResponseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoPktDataResponseSize.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoPktDataResponseSize.setDescription('Specifies the size of the packet to receive.')
oacRttEchoTOS = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoTOS.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoTOS.setDescription('This object represents the type of service in an IP header.')
oacRttEchoProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 2, 1, 6), OacRttProtocol().clone('notApplicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttEchoProtocol.setStatus('current')
if mibBuilder.loadTexts: oacRttEchoProtocol.setDescription('Protocol type to use for the probes.')
oacRttHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3), )
if mibBuilder.loadTexts: oacRttHistoryTable.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryTable.setDescription('Definitions for history chcking for an RTT entry.')
oacRttHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttHistoryEntry"))
oacRttHistoryEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryEntry.setDescription('List of definitions for hisotry collections.')
oacRttHistoryNumBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttHistoryNumBuckets.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryNumBuckets.setDescription('MAximum buckets to record.')
oacRttHistoryFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("overThreshold", 3), ("failures", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttHistoryFilter.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryFilter.setDescription('Define filters for history recording.')
oacRttHistoryNumLives = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttHistoryNumLives.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryNumLives.setDescription('Define number of lives for history recording.')
oacRttHistoryNumSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttHistoryNumSamples.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryNumSamples.setDescription('The number of samples to record for one bucket.')
oacRttSchedTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 4), )
if mibBuilder.loadTexts: oacRttSchedTable.setStatus('current')
if mibBuilder.loadTexts: oacRttSchedTable.setDescription('Probe scheduling table.')
oacRttSchedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 4, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttSchedEntry"))
oacRttSchedEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttSchedEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttSchedEntry.setDescription('Probe scheduling entry in the scheduling table.')
oacRttSchedRttStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 4, 1, 1), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttSchedRttStartTime.setStatus('current')
if mibBuilder.loadTexts: oacRttSchedRttStartTime.setDescription('Specifies when to start the probe.')
oacRttSchedRttLife = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttSchedRttLife.setStatus('current')
if mibBuilder.loadTexts: oacRttSchedRttLife.setDescription('Specifies for how long the probe will remain active.')
oacRttSchedConceptRowAgeout = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2073600)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttSchedConceptRowAgeout.setStatus('current')
if mibBuilder.loadTexts: oacRttSchedConceptRowAgeout.setDescription('Specifies the age of created RTR session.')
oacRttReactTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5), )
if mibBuilder.loadTexts: oacRttReactTable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTable.setDescription('Probe reaction table.')
oacRttReactEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttReactEntry"))
oacRttReactEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttReactEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttReactEntry.setDescription('Probe reaction entry in the table.')
oacRttReactActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("none", 1), ("trapOnly", 2), ("nmvtOnly", 3), ("triggerOnly", 4), ("trapAndNmvt", 5), ("trapAndTrigger", 6), ("nmvtAndTrigger", 7), ("trapNmvtAndTrigger", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactActionType.setStatus('current')
if mibBuilder.loadTexts: oacRttReactActionType.setDescription('Specifies the trigger as reaction.')
oacRttReactThresholdType = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("never", 1), ("immediate", 2), ("consecutive", 3), ("xOfy", 4), ("average", 5))).clone('never')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactThresholdType.setStatus('current')
if mibBuilder.loadTexts: oacRttReactThresholdType.setDescription('Specifies the threshold type for reaction.')
oacRttReactThresholdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactThresholdCount.setStatus('current')
if mibBuilder.loadTexts: oacRttReactThresholdCount.setDescription('Specifies the threshold count for reaction.')
oacRttReactThresholdCount2 = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactThresholdCount2.setStatus('current')
if mibBuilder.loadTexts: oacRttReactThresholdCount2.setDescription('Specifies the threshold count for reaction.')
oacRttReactConnectionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactConnectionEnable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactConnectionEnable.setDescription('Specifies if the connection is enabled for reaction.')
oacRttReactVerifyErrorEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactVerifyErrorEnable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactVerifyErrorEnable.setDescription('Specifies if the error verification is enabled for reaction.')
oacRttReactThresholdFalling = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactThresholdFalling.setStatus('current')
if mibBuilder.loadTexts: oacRttReactThresholdFalling.setDescription('Specifies the threshold falling for reaction.')
oacRttReactTimeoutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 5, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactTimeoutEnable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTimeoutEnable.setDescription('Specifies if the timeout is enabled for reaction.')
oacRttStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6), )
if mibBuilder.loadTexts: oacRttStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsTable.setDescription('RTT statistics table.')
oacRttStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttStatisticsEntry"))
oacRttStatisticsEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsEntry.setDescription('RTT statistics table entry.')
oacRttStatisticsNumDistBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttStatisticsNumDistBuckets.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsNumDistBuckets.setDescription('Number of distibution buckets.')
oacRttStatisticsNumHops = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttStatisticsNumHops.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsNumHops.setDescription('Number of hops.')
oacRttStatisticsNumPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttStatisticsNumPaths.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsNumPaths.setDescription('Number of paths.')
oacRttStatisticsDistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(20)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttStatisticsDistInterval.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsDistInterval.setDescription('Distribution interval.')
oacRttStatisticsNumHourGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 25)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttStatisticsNumHourGroups.setStatus('current')
if mibBuilder.loadTexts: oacRttStatisticsNumHourGroups.setDescription('Number of hour groups.')
oacRttControlOperTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7), )
if mibBuilder.loadTexts: oacRttControlOperTable.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperTable.setDescription('A table with values for a RTT entry.')
oacRttControlOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttControlOperEntry"))
oacRttControlOperEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttControlOperEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperEntry.setDescription('RTT entry.')
oacRttControlOperNumRtts = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperNumRtts.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperNumRtts.setDescription('The number of probe total initialisation.')
oacRttControlOperOctetsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperOctetsInUse.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperOctetsInUse.setDescription('Octets in use by the entry.')
oacRttControlOperDiagText = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 51))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperDiagText.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperDiagText.setDescription('')
oacRttControlOperOverThresholdOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperOverThresholdOccurred.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperOverThresholdOccurred.setDescription('Specifies if threshold occured.')
oacRttControlOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reset", 1), ("orderlyStop", 2), ("immediateStop", 3), ("pending", 4), ("inactive", 5), ("active", 6), ("restart", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacRttControlOperState.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperState.setDescription('Operations state of the RTT entry.')
oacRttControlOperTimeoutOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperTimeoutOccurred.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperTimeoutOccurred.setDescription('True if a timeout occured.')
oacRttControlOperRttLife = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperRttLife.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperRttLife.setDescription('A value witch is decremented on every seconds. When it reaches zero, the RTT entry is suspended.')
oacRttControlOperModificationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperModificationTime.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperModificationTime.setDescription('')
oacRttControlOperConnLostOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 9), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperConnLostOccurred.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperConnLostOccurred.setDescription('Connection loss occured.')
oacRttControlOperResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 7, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttControlOperResetTime.setStatus('current')
if mibBuilder.loadTexts: oacRttControlOperResetTime.setDescription('Reset time.')
oacRttReactTriggerTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 8), )
if mibBuilder.loadTexts: oacRttReactTriggerTable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerTable.setDescription('Table witch defines witch entries became active when a problem is detected.')
oacRttReactTriggerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 8, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttReactTriggerOacRttControlIndex"))
if mibBuilder.loadTexts: oacRttReactTriggerEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerEntry.setDescription('Reaction trigger entry.')
oacRttReactTriggerOacRttControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttReactTriggerOacRttControlIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerOacRttControlIndex.setDescription('Reaction trigger control index.')
oacRttReactTriggerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 8, 1, 2), RowStatus().clone('createAndGo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacRttReactTriggerStatus.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerStatus.setDescription('Used to create a trigger.')
oacRttReactTriggerOperTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 9), )
if mibBuilder.loadTexts: oacRttReactTriggerOperTable.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerOperTable.setDescription('Reaction trigger operation table.')
oacRttReactTriggerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 9, 1), )
oacRttReactTriggerEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttReactTriggerOperEntry"))
oacRttReactTriggerOperEntry.setIndexNames(*oacRttReactTriggerEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttReactTriggerOperEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerOperEntry.setDescription('Reaction trigger operation table entry.')
oacRttReactTriggerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("pending", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttReactTriggerOperState.setStatus('current')
if mibBuilder.loadTexts: oacRttReactTriggerOperState.setDescription('Trigger state.')
oacRttLatestRttOperTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10), )
if mibBuilder.loadTexts: oacRttLatestRttOperTable.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperTable.setDescription('Table with values for the latest RTT operation.')
oacRttLatestRttOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1), )
oacRttControlEntry.registerAugmentions(("OneAccess-RoundTripTime-MIB", "oacRttLatestRttOperEntry"))
oacRttLatestRttOperEntry.setIndexNames(*oacRttControlEntry.getIndexNames())
if mibBuilder.loadTexts: oacRttLatestRttOperEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperEntry.setDescription('Operation entry.')
oacRttLatestRttOperTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperTime.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperTime.setDescription('The system time when the latest operation occured.')
oacRttLatestRttOperSense = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 2), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperSense.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperSense.setDescription('Operation time.')
oacRttLatestRttOperSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperSenseDescription.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperSenseDescription.setDescription('Operation sense description.')
oacRttLatestRttOperAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 4), OacRttTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperAddress.setDescription('The address of the target.')
oacRttLatestRttOperCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperCompletionTime.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperCompletionTime.setDescription('Operation completion time.')
oacRttLatestRttOperApplSpecificSense = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1001, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttLatestRttOperApplSpecificSense.setStatus('current')
if mibBuilder.loadTexts: oacRttLatestRttOperApplSpecificSense.setDescription('Operation application specific sense.')
oacRttHistoryCollectionTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1), )
if mibBuilder.loadTexts: oacRttHistoryCollectionTable.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionTable.setDescription('The table with collected history information.')
oacRttHistoryCollectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionLifeIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionBucketIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionSampleIndex"))
if mibBuilder.loadTexts: oacRttHistoryCollectionEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionEntry.setDescription('History collection entry.')
oacRttHistoryCollectionLifeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttHistoryCollectionLifeIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionLifeIndex.setDescription('History collection life index.')
oacRttHistoryCollectionBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttHistoryCollectionBucketIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionBucketIndex.setDescription('History collection bucket index.')
oacRttHistoryCollectionSampleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: oacRttHistoryCollectionSampleIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionSampleIndex.setDescription('History collection sample index.')
oacRttHistoryCollectionApplSpecificSense = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1001, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionApplSpecificSense.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionApplSpecificSense.setDescription('History collection application specific sense.')
oacRttHistoryCollectionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 5), OacRttTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionAddress.setDescription('History collection address.')
oacRttHistoryCollectionSampleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionSampleTime.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionSampleTime.setDescription('History collection sample time.')
oacRttHistoryCollectionSense = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 7), RttResponseSense()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionSense.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionSense.setDescription('History collection sense.')
oacRttHistoryCollectionSenseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionSenseDescription.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionSenseDescription.setDescription('History collection sense description.')
oacRttHistoryCollectionCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 2, 1, 1, 9), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttHistoryCollectionCompletionTime.setStatus('current')
if mibBuilder.loadTexts: oacRttHistoryCollectionCompletionTime.setDescription('History collection completion time.')
oacRttStatsCollectTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1), )
if mibBuilder.loadTexts: oacRttStatsCollectTable.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectTable.setDescription('Table for collected statistical information.')
oacRttStatsCollectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureStartTimeIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCapturePathIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureHopIndex"))
if mibBuilder.loadTexts: oacRttStatsCollectEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectEntry.setDescription('Statistics collection entry.')
oacRttStatsCollectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 1), OacRttTargetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectAddress.setDescription('Collection address.')
oacRttStatsCollectNoConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectNoConnections.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectNoConnections.setDescription('How many times the connection cannot be etabilished.')
oacRttStatsCollectBusies = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectBusies.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectBusies.setDescription('How many times the connection status was busy.')
oacRttStatsCollectTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectTimeouts.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectTimeouts.setDescription('How many timeouts.')
oacRttStatsCollectSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectSequenceErrors.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectSequenceErrors.setDescription('How many sequence errors.')
oacRttStatsCollectNumDisconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectNumDisconnects.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectNumDisconnects.setDescription('How many times the connection was disconnected.')
oacRttStatsCollectVerifyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectVerifyErrors.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectVerifyErrors.setDescription('How many verify errors.')
oacRttStatsCollectDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCollectDrops.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCollectDrops.setDescription('How many drops.')
oacRttStatsCaptureTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2), )
if mibBuilder.loadTexts: oacRttStatsCaptureTable.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureTable.setDescription('Statistics capture table.')
oacRttStatsCaptureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureStartTimeIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCapturePathIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureHopIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureDistIndex"))
if mibBuilder.loadTexts: oacRttStatsCaptureEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureEntry.setDescription('Statistics capture table entry.')
oacRttStatsCaptureStartTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 1), TimeStamp())
if mibBuilder.loadTexts: oacRttStatsCaptureStartTimeIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureStartTimeIndex.setDescription('Capture start time index.')
oacRttStatsCapturePathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: oacRttStatsCapturePathIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCapturePathIndex.setDescription('Capture path index.')
oacRttStatsCaptureHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: oacRttStatsCaptureHopIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureHopIndex.setDescription('Capture hop index.')
oacRttStatsCaptureDistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)))
if mibBuilder.loadTexts: oacRttStatsCaptureDistIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureDistIndex.setDescription('Identifies buckets for a hop.')
oacRttStatsCaptureSumCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 5), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime.setDescription('Capture sum completion time.')
oacRttStatsCaptureSumCompletionTime2Low = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime2Low.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime2Low.setDescription('Low part of the accumulated squares of completion times.')
oacRttStatsCaptureSumCompletionTime2High = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime2High.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureSumCompletionTime2High.setDescription('High part of the accumulated squares of completion times.')
oacRttStatsCaptureCompletionTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 8), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureCompletionTimeMin.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureCompletionTimeMin.setDescription('Minimum completion time.')
oacRttStatsCaptureCompletionTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 9), Gauge32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureCompletionTimeMax.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureCompletionTimeMax.setDescription('Maximum completion time.')
oacRttStatsCaptureOverThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureOverThresholds.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureOverThresholds.setDescription('Capture over tresholds.')
oacRttStatsCaptureCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsCaptureCompletions.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsCaptureCompletions.setDescription('Number of completed RTT probes.')
oacRttStatsTotalsTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 3), )
if mibBuilder.loadTexts: oacRttStatsTotalsTable.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsTotalsTable.setDescription('Totals table.')
oacRttStatsTotalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 3, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsCaptureStartTimeIndex"))
if mibBuilder.loadTexts: oacRttStatsTotalsEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsTotalsEntry.setDescription('Totals table entry.')
oacRttStatsTotalsInitiations = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsTotalsInitiations.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsTotalsInitiations.setDescription('Totals initiations.')
oacRttStatsTotalsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 3, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsTotalsElapsedTime.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsTotalsElapsedTime.setDescription('Totals elapsed time.')
oacRttStatsJitterHopTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4), )
if mibBuilder.loadTexts: oacRttStatsJitterHopTable.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopTable.setDescription('Jitter HOP table.')
oacRttStatsJitterHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1), ).setIndexNames((0, "OneAccess-RoundTripTime-MIB", "oacRttControlIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsJitterPathIndex"), (0, "OneAccess-RoundTripTime-MIB", "oacRttStatsJitterHopIndex"))
if mibBuilder.loadTexts: oacRttStatsJitterHopEntry.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopEntry.setDescription('Jitter HOP table entry.')
oacRttStatsJitterPathIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttStatsJitterPathIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterPathIndex.setDescription('Identifies a RTT row in oacRttStatsJitterHopTable along with oacRttStatsJitterHopIndex.')
oacRttStatsJitterHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: oacRttStatsJitterHopIndex.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopIndex.setDescription('Identifies a RTT row in oacRttStatsJitterHopTable along with oacRttStatsJitterPathIndex.')
oacRttStatsJitterHopIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopIpAddress.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopIpAddress.setDescription('IP Address of the Hop.')
oacRttStatsJitterHopRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopRTT.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopRTT.setDescription('RTT for the Hop.')
oacRttStatsJitterHopPacketLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopPacketLoss.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopPacketLoss.setDescription('Packet loss for the Hop.')
oacRttStatsJitterHopJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopJitter.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopJitter.setDescription('Jitter for the Hop.')
oacRttStatsJitterHopMinRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMinRTT.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMinRTT.setDescription('Min RTT for the Hop.')
oacRttStatsJitterHopMaxRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxRTT.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxRTT.setDescription('Max RTT for the Hop.')
oacRttStatsJitterHopSumRTT = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSumRTT.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSumRTT.setDescription('Sum RTT for the Hop.')
oacRttStatsJitterHopSum2RTT = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2RTT.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2RTT.setDescription('Sum2 RTT for the Hop.')
oacRttStatsJitterHopMinPosJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMinPosJitter.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMinPosJitter.setDescription('Min pos jitter for the Hop.')
oacRttStatsJitterHopMaxPosJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxPosJitter.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxPosJitter.setDescription('Max pos jitter for the Hop.')
oacRttStatsJitterHopSumPos = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSumPos.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSumPos.setDescription('Sum pos jitter for the Hop.')
oacRttStatsJitterHopSum2Pos = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2Pos.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2Pos.setDescription('Sum2 pos jitter for the Hop.')
oacRttStatsJitterHopMinNegJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMinNegJitter.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMinNegJitter.setDescription('Min neg jitter for the Hop.')
oacRttStatsJitterHopMaxNegJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxNegJitter.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopMaxNegJitter.setDescription('Max neg jitter for the Hop.')
oacRttStatsJitterHopSumNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSumNeg.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSumNeg.setDescription('Sum neg jitter for the Hop.')
oacRttStatsJitterHopSum2Neg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2Neg.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopSum2Neg.setDescription('Sum2 neg jitter for the Hop.')
oacRttStatsJitterHopOutOfSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopOutOfSequence.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopOutOfSequence.setDescription('Out of sequence pkts for the Hop.')
oacRttStatsJitterHopDiscardedSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 1, 3, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacRttStatsJitterHopDiscardedSamples.setStatus('current')
if mibBuilder.loadTexts: oacRttStatsJitterHopDiscardedSamples.setDescription('Discarded samples for the Hop.')
oacRttNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 2))
oacRttNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 2, 0))
oacRttConnectionChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 2, 0, 1)).setObjects(("OneAccess-RoundTripTime-MIB", "oacRttControlTag"), ("OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionAddress"), ("OneAccess-RoundTripTime-MIB", "oacRttControlOperConnLostOccurred"))
if mibBuilder.loadTexts: oacRttConnectionChangeNotification.setStatus('current')
if mibBuilder.loadTexts: oacRttConnectionChangeNotification.setDescription('')
oacRttTimeoutNotification = NotificationType((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 2, 0, 2)).setObjects(("OneAccess-RoundTripTime-MIB", "oacRttControlTag"), ("OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionAddress"), ("OneAccess-RoundTripTime-MIB", "oacRttControlOperTimeoutOccurred"))
if mibBuilder.loadTexts: oacRttTimeoutNotification.setStatus('current')
if mibBuilder.loadTexts: oacRttTimeoutNotification.setDescription('')
oacRttThresholdNotification = NotificationType((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 1223, 2, 0, 3)).setObjects(("OneAccess-RoundTripTime-MIB", "oacRttControlTag"), ("OneAccess-RoundTripTime-MIB", "oacRttHistoryCollectionAddress"), ("OneAccess-RoundTripTime-MIB", "oacRttControlOperOverThresholdOccurred"))
if mibBuilder.loadTexts: oacRttThresholdNotification.setStatus('current')
if mibBuilder.loadTexts: oacRttThresholdNotification.setDescription('')
mibBuilder.exportSymbols("OneAccess-RoundTripTime-MIB", oacRttEchoTOS=oacRttEchoTOS, oacRttStatsJitterHopMaxNegJitter=oacRttStatsJitterHopMaxNegJitter, oacRttStatsCaptureTable=oacRttStatsCaptureTable, oacRttControlOperModificationTime=oacRttControlOperModificationTime, oacRttLatestRttOperAddress=oacRttLatestRttOperAddress, oacRttStatsJitterHopTable=oacRttStatsJitterHopTable, oacRttConnectionChangeNotification=oacRttConnectionChangeNotification, oacRttStatsCaptureStartTimeIndex=oacRttStatsCaptureStartTimeIndex, oacRttStatisticsNumHourGroups=oacRttStatisticsNumHourGroups, oacRttSchedTable=oacRttSchedTable, oacRttReactTable=oacRttReactTable, oacRttLatestRttOperTable=oacRttLatestRttOperTable, oacRttAppl=oacRttAppl, oacRttStatsJitterHopSum2RTT=oacRttStatsJitterHopSum2RTT, oacRttStatsCaptureSumCompletionTime=oacRttStatsCaptureSumCompletionTime, oacRttControlOperTable=oacRttControlOperTable, oacRttHistoryCollectionApplSpecificSense=oacRttHistoryCollectionApplSpecificSense, oacRttControlFrequency=oacRttControlFrequency, oacRttStatsCollectTable=oacRttStatsCollectTable, oacRttStatsJitterHopSumNeg=oacRttStatsJitterHopSumNeg, oacRttReactTriggerStatus=oacRttReactTriggerStatus, oacRttStatisticsTable=oacRttStatisticsTable, oacRttLatestRttOperSense=oacRttLatestRttOperSense, oacRttControlOperTimeoutOccurred=oacRttControlOperTimeoutOccurred, oacRttControlStatus=oacRttControlStatus, oacRttApplSuppRttTypesValid=oacRttApplSuppRttTypesValid, oacRttControlOperState=oacRttControlOperState, oacRttApplSuppProtocolsEntry=oacRttApplSuppProtocolsEntry, oacRttStatsJitterHopJitter=oacRttStatsJitterHopJitter, oacRttStatsCaptureHopIndex=oacRttStatsCaptureHopIndex, oacRttControlTag=oacRttControlTag, oacRttEchoTable=oacRttEchoTable, oacRttReactTriggerTable=oacRttReactTriggerTable, oacRttReactTriggerOperState=oacRttReactTriggerOperState, oacRttLatestRttOperTime=oacRttLatestRttOperTime, oacRttStatsCollectAddress=oacRttStatsCollectAddress, oacRttReactEntry=oacRttReactEntry, oacRttHistoryNumSamples=oacRttHistoryNumSamples, oacRttHistoryCollectionSense=oacRttHistoryCollectionSense, oacRttStatsTotalsElapsedTime=oacRttStatsTotalsElapsedTime, oacRttApplSuppProtocolsValid=oacRttApplSuppProtocolsValid, oacRttReactThresholdCount2=oacRttReactThresholdCount2, oacRttStatisticsNumPaths=oacRttStatisticsNumPaths, OacRttRttType=OacRttRttType, oacRttNotificationsPrefix=oacRttNotificationsPrefix, PYSNMP_MODULE_ID=oacRttChkMIB, oacRttEchoPktDataRequestSize=oacRttEchoPktDataRequestSize, oacRttControlOperRttLife=oacRttControlOperRttLife, oacRttReactTimeoutEnable=oacRttReactTimeoutEnable, oacRttReactVerifyErrorEnable=oacRttReactVerifyErrorEnable, oacRttApplSuppRttTypesEntry=oacRttApplSuppRttTypesEntry, oacRttReactTriggerOperTable=oacRttReactTriggerOperTable, oacRttStatsCaptureCompletions=oacRttStatsCaptureCompletions, oacRttStatsJitterHopSumPos=oacRttStatsJitterHopSumPos, oacRttStatsJitterHopMaxPosJitter=oacRttStatsJitterHopMaxPosJitter, oacRttControlTable=oacRttControlTable, oacRttLatestRttOperEntry=oacRttLatestRttOperEntry, oacRttControlIndex=oacRttControlIndex, oacRttStatsJitterHopSum2Pos=oacRttStatsJitterHopSum2Pos, oacRttControlOperOverThresholdOccurred=oacRttControlOperOverThresholdOccurred, oacRttHistoryCollectionSampleTime=oacRttHistoryCollectionSampleTime, oacRttStatsJitterHopMinNegJitter=oacRttStatsJitterHopMinNegJitter, oacRttHistoryEntry=oacRttHistoryEntry, oacRttControlThreshold=oacRttControlThreshold, oacRttLatestRttOperCompletionTime=oacRttLatestRttOperCompletionTime, oacRttStatsJitterHopMinPosJitter=oacRttStatsJitterHopMinPosJitter, oacRttSchedEntry=oacRttSchedEntry, oacRttStatsJitterHopEntry=oacRttStatsJitterHopEntry, oacRttNotifications=oacRttNotifications, oacRttApplSuppProtocols=oacRttApplSuppProtocols, oacRttLatestRttOperApplSpecificSense=oacRttLatestRttOperApplSpecificSense, oacRttHistory=oacRttHistory, oacRttEchoProtocol=oacRttEchoProtocol, oacRttControlOperConnLostOccurred=oacRttControlOperConnLostOccurred, oacRttStatsCaptureEntry=oacRttStatsCaptureEntry, oacRttStatsJitterPathIndex=oacRttStatsJitterPathIndex, oacRttSchedConceptRowAgeout=oacRttSchedConceptRowAgeout, oacRttLatestRttOperSenseDescription=oacRttLatestRttOperSenseDescription, oacRttStatsJitterHopDiscardedSamples=oacRttStatsJitterHopDiscardedSamples, oacRttStatsJitterHopSumRTT=oacRttStatsJitterHopSumRTT, oacRttStatsJitterHopIpAddress=oacRttStatsJitterHopIpAddress, oacRttControlTimeout=oacRttControlTimeout, oacRttControlOperNumRtts=oacRttControlOperNumRtts, oacRttStatisticsNumDistBuckets=oacRttStatisticsNumDistBuckets, oacRttEchoSourceAddress=oacRttEchoSourceAddress, oacRttStatsCaptureSumCompletionTime2High=oacRttStatsCaptureSumCompletionTime2High, oacRttTimeoutNotification=oacRttTimeoutNotification, oacRttApplSuppRttTypesTable=oacRttApplSuppRttTypesTable, oacRttSchedRttStartTime=oacRttSchedRttStartTime, oacRttSchedRttLife=oacRttSchedRttLife, oacRttHistoryFilter=oacRttHistoryFilter, oacRttStatsJitterHopIndex=oacRttStatsJitterHopIndex, oacRttHistoryCollectionTable=oacRttHistoryCollectionTable, oacRttHistoryCollectionSampleIndex=oacRttHistoryCollectionSampleIndex, oacRttStatisticsNumHops=oacRttStatisticsNumHops, oacRttHistoryCollectionEntry=oacRttHistoryCollectionEntry, oacRttStatsTotalsEntry=oacRttStatsTotalsEntry, oacRttStatsJitterHopPacketLoss=oacRttStatsJitterHopPacketLoss, oacRttStatsJitterHopOutOfSequence=oacRttStatsJitterHopOutOfSequence, oacRttControlOperResetTime=oacRttControlOperResetTime, oacRttHistoryCollectionBucketIndex=oacRttHistoryCollectionBucketIndex, oacRttStatsJitterHopMinRTT=oacRttStatsJitterHopMinRTT, oacRttReactThresholdCount=oacRttReactThresholdCount, oacRttStatsCollectVerifyErrors=oacRttStatsCollectVerifyErrors, oacRttStatsCollectNumDisconnects=oacRttStatsCollectNumDisconnects, oacRttStatsTotalsInitiations=oacRttStatsTotalsInitiations, oacRttStatsJitterHopRTT=oacRttStatsJitterHopRTT, oacRttStatsJitterHopMaxRTT=oacRttStatsJitterHopMaxRTT, oacRttControlOperDiagText=oacRttControlOperDiagText, oacRttReactConnectionEnable=oacRttReactConnectionEnable, oacRttStatsCapturePathIndex=oacRttStatsCapturePathIndex, OacRttApplProtocol=OacRttApplProtocol, oacRttStatsCaptureOverThresholds=oacRttStatsCaptureOverThresholds, oacRttReactActionType=oacRttReactActionType, oacRttStatsCollectDrops=oacRttStatsCollectDrops, oacRttEchoEntry=oacRttEchoEntry, oacRttApplVersion=oacRttApplVersion, oacRttReactTriggerOacRttControlIndex=oacRttReactTriggerOacRttControlIndex, oacRttEchoPktDataResponseSize=oacRttEchoPktDataResponseSize, oacRttStatisticsDistInterval=oacRttStatisticsDistInterval, oacRttStatsCollectEntry=oacRttStatsCollectEntry, oacRttStatsJitterHopSum2Neg=oacRttStatsJitterHopSum2Neg, oacRttStatsCollectSequenceErrors=oacRttStatsCollectSequenceErrors, oacRttControlOperOctetsInUse=oacRttControlOperOctetsInUse, OacRttApplType=OacRttApplType, oacRttThresholdNotification=oacRttThresholdNotification, oacRttApplSuppProtocolsTable=oacRttApplSuppProtocolsTable, oacRttHistoryNumBuckets=oacRttHistoryNumBuckets, oacRttControlOwner=oacRttControlOwner, RttResponseSense=RttResponseSense, oacRttReactThresholdFalling=oacRttReactThresholdFalling, oacRttControlRttType=oacRttControlRttType, oacRttHistoryNumLives=oacRttHistoryNumLives, oacRttStatsCollectBusies=oacRttStatsCollectBusies, oacRttControlOperEntry=oacRttControlOperEntry, oacRttApplSuppRttTypes=oacRttApplSuppRttTypes, oacRttControl=oacRttControl, oacRttHistoryCollectionLifeIndex=oacRttHistoryCollectionLifeIndex, oacRttReactTriggerEntry=oacRttReactTriggerEntry, oacRttStatsCollectNoConnections=oacRttStatsCollectNoConnections, oacRttStatsCaptureSumCompletionTime2Low=oacRttStatsCaptureSumCompletionTime2Low, oacRttStatsCaptureCompletionTimeMax=oacRttStatsCaptureCompletionTimeMax, oacRttStatsTotalsTable=oacRttStatsTotalsTable, oacRttReactThresholdType=oacRttReactThresholdType, OacRttProtocol=OacRttProtocol, oacRttChkMIB=oacRttChkMIB, oacRttReactTriggerOperEntry=oacRttReactTriggerOperEntry, oacRttHistoryCollectionSenseDescription=oacRttHistoryCollectionSenseDescription, oacRttChkObj=oacRttChkObj, oacRttStatisticsEntry=oacRttStatisticsEntry, oacRttHistoryCollectionAddress=oacRttHistoryCollectionAddress, oacRttStatsCaptureCompletionTimeMin=oacRttStatsCaptureCompletionTimeMin, OacRttTargetAddress=OacRttTargetAddress, oacRttControlEntry=oacRttControlEntry, oacRttHistoryTable=oacRttHistoryTable, oacRttStatsCollectTimeouts=oacRttStatsCollectTimeouts, oacRttEchoTargetAddress=oacRttEchoTargetAddress, oacRttStatsCaptureDistIndex=oacRttStatsCaptureDistIndex, oacRttStats=oacRttStats, oacRttHistoryCollectionCompletionTime=oacRttHistoryCollectionCompletionTime)
