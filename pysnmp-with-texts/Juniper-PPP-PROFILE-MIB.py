#
# PySNMP MIB module Juniper-PPP-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-PPP-PROFILE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:03:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniPppAuthentication, = mibBuilder.importSymbols("Juniper-PPP-MIB", "JuniPppAuthentication")
JuniSetMap, JuniNibbleConfig, JuniName, JuniEnable = mibBuilder.importSymbols("Juniper-TC", "JuniSetMap", "JuniNibbleConfig", "JuniName", "JuniEnable")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, Counter32, NotificationType, IpAddress, ModuleIdentity, Bits, TimeTicks, ObjectIdentity, MibIdentifier, Integer32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "NotificationType", "IpAddress", "ModuleIdentity", "Bits", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Integer32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniPppProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45))
juniPppProfileMIB.setRevisions(('2009-09-18 07:24', '2009-08-10 14:23', '2007-07-12 12:15', '2005-10-19 16:26', '2003-11-03 21:10', '2003-09-29 18:58', '2003-03-11 21:59', '2002-09-16 21:44', '2002-09-03 22:38', '2002-01-25 14:00', '2002-01-16 17:58', '2002-01-08 19:43', '2001-10-02 12:41',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniPppProfileMIB.setRevisionsDescriptions(('Added new multiclass multilink objects. Added new traffic class mapping for multiclasses.', 'Added IPCP dns prompt and lockout option element in juniPppProfileTable.', 'Added new ignore magic number mismatch element in juniPppProfileEntry MIB. Added new authentication elements to use JuniNibbleConfig.', 'Added new object for multilink.', 'Added support for MLPPP fragmentation and reassembly.', 'Increased the maximum range of the PPP Profile LCP keep-alive time.', 'Added juniPppProfileInitiateIp and juniPppProfileInitiateIpv6.', 'Replaced Unisphere names with Juniper names.', 'Added juniPppProfileAaaProfile.', 'Added juniPppProfileAuthenticatorVirtualRouter.', 'Added support for negotiation of the IPCP option netmask.', 'Added support for dynamic multilink PPP (MLPPP) interfaces.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniPppProfileMIB.setLastUpdated('200909180724Z')
if mibBuilder.loadTexts: juniPppProfileMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniPppProfileMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniPppProfileMIB.setDescription('The Point-to-Point Protocol (PPP) Profile MIB for the Juniper Netowrks enterprise. This MIB provides configuration parameters that extend the tables found in the Juniper-PROFILE-MIB to support profiles for PPP interfaces.')
juniPppProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1))
juniPppProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1))
juniPppProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1), )
if mibBuilder.loadTexts: juniPppProfileTable.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileTable.setDescription('This table contains profiles for configuring PPP interfaces. Entries in this table are created/deleted as a side-effect of corresponding operations to the juniProfileNameTable in the Juniper-PROFILE-MIB.')
juniPppProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1), ).setIndexNames((0, "Juniper-PPP-PROFILE-MIB", "juniPppProfileId"))
if mibBuilder.loadTexts: juniPppProfileEntry.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileEntry.setDescription('A profile describing configuration of a PPP interface.')
juniPppProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniPppProfileId.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileId.setDescription('The integer identifier associated with this profile. A value for this identifier is determined by locating or creating a profile name in the Juniper-PROFILE-MIB.juniProfileNameTable.')
juniPppProfileSetMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 2), JuniSetMap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileSetMap.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileSetMap.setDescription("A bitmap representing which objects in this entry have been explicitly configured. See the definition of the JuniSetMap TEXTUAL-CONVENTION for details of use. The INDEX object(s) and this object are excluded from representation (i.e. their bits are never set). When a SET request does not explicitly configure JuniSetMap, bits in JuniSetMap are set as a side-effect of configuring other profile attributes in the same entry. If, however, a SET request explicitly configures JuniSetMap, the explicitly configured value overrides 1) any previous bit settings, and 2) any simultaneous 'side-effect' settings that would otherwise occur. Once set, bits can only be cleared by explicitly configuring JuniSetMap.")
juniPppProfileLcpMagicNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileLcpMagicNumber.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileLcpMagicNumber.setDescription('If true(2) then the local node will attempt to perform Magic Number negotiation with the remote node. If false(1) then this negotiation is not performed. In any event, the local node will comply with any magic number negotiations attempted by the remote node, per the PPP specification.')
juniPppProfileLcpKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 64800), )).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileLcpKeepalive.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileLcpKeepalive.setDescription('Keepalive interval in seconds. A value of zero disables keepalive. Keepalive is performed using LCP Echo.')
juniPppProfileLcpAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 5), JuniPppAuthentication().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileLcpAuthentication.setStatus('deprecated')
if mibBuilder.loadTexts: juniPppProfileLcpAuthentication.setDescription('Specifies the type(s) of authentication, if any, to be negotiated with the peer: none No authentication is negotiated. pap PAP negotiation only. chap CHAP negotiation only. papChap PAP negotiation is attempted first; if fails, attempt CHAP. chapPap CHAP negotiation is attempted first; if fails, attempt PAP. Setting this object to none will set the juniPppProfileAuthenticatorVirtualRouter object to an empty string. This object returns a none value on the get operation. New object juniPppProfileLcpAuthentication2 will reflect the configured values. Setting this object along with the juniPppProfileLcpAuthentication2 object will return an inconsistentValue error.')
juniPppProfileIpPeerDnsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 6), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIpPeerDnsPriority.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIpPeerDnsPriority.setDescription("When enabled, allows peer's DNS address to prevail in the event of a negotiation conflict; when disabled, the local PPP interface's DNS address prevails.")
juniPppProfileIpPeerWinsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 7), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIpPeerWinsPriority.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIpPeerWinsPriority.setDescription("When enabled, allows peer's WINS address to prevail in the event of a negotiation conflict; when disabled, the local PPP interface's WINS address prevails.")
juniPppProfileLcpInitialMRU = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(64, 65535), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileLcpInitialMRU.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileLcpInitialMRU.setDescription('The initial Maximum Receive Unit (MRU) that the local PPP entity will advertise to the remote entity. If the value of this variable is 1 then the local PPP entity will advertise an MRU value determined by its underlying media interface.')
juniPppProfilePacketLog = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 9), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfilePacketLog.setStatus('current')
if mibBuilder.loadTexts: juniPppProfilePacketLog.setDescription('When enabled, allows packet logging on dynamic PPP interfaces.')
juniPppProfileStateLog = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 10), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileStateLog.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileStateLog.setDescription('When enabled, allows state machine logging on dynamic PPP interfaces.')
juniPppProfileChapMinChallengeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 63)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileChapMinChallengeLength.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileChapMinChallengeLength.setDescription('Minimum value of the CHAP authenticator challenge length value. This value is never allowed to be set to a value greater than juniPppProfileChapMaxChallengeLength.')
juniPppProfileChapMaxChallengeLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 63)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileChapMaxChallengeLength.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileChapMaxChallengeLength.setDescription('Maximum value of the CHAP authenticator challenge length value. This value is never allowed to be set to a value less than juniPppLinkConfigChapMinChallengeLength.')
juniPppProfilePassiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 13), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfilePassiveMode.setStatus('current')
if mibBuilder.loadTexts: juniPppProfilePassiveMode.setDescription('When enabled, LCP state machine is forced into passive mode on lower layer UP message. It adds compatibility with slow and buggy clients.')
juniPppProfileMlppp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 14), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileMlppp.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMlppp.setDescription('Enables the creation of dynamic multi-link PPP interfaces.')
juniPppProfileIpcpNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 15), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIpcpNetmask.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIpcpNetmask.setDescription('Enables the negotiation of the IPCP option netmask (0x90) during IPCP negotiation.')
juniPppProfileAuthenticatorVirtualRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 16), JuniName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileAuthenticatorVirtualRouter.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileAuthenticatorVirtualRouter.setDescription('The name of the virtual router (Juniper-ROUTER-MIB.juniRouterName) to be used for authentication on the PPP interface. Setting this object statically binds the authenticating virtual router with the PPP interface. If this object is not explicitly set or it is set to null string, then this object is ignored and the virtual router used for authentication is determined by other means. On a Set operation, if the value of this object is not null and does not correspond to an existing virtual router, then an inconsistentValue error is returned. Setting this object to non null string returns inconsistentValue value error if juniPppProfileConfigAuthentication object is none or not configured.')
juniPppProfileAaaProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 17), JuniName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileAaaProfile.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileAaaProfile.setDescription('The name of the AAA profile to be used for authentication on the PPP interface. Setting this object statically binds the aaa profile with the PPP interface. If this object is not explicitly set or it is set to null string, then this object is ignored. On a Set operation, if the value of this object is not null and does not correspond to an existing AAA profile, then an inconsistentValue error is returned.')
juniPppProfileInitiateIp = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 18), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileInitiateIp.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileInitiateIp.setDescription('If enabled, PPP interface will initiate negotiation of IPCP; if disabled, PPP interface will rely on remote PPP client to initiate negotiation of IPCP.')
juniPppProfileInitiateIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 19), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileInitiateIpv6.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileInitiateIpv6.setDescription('If enabled, PPP interface will initiate negotiation of IPv6CP; if disabled, PPP interface will rely on remote PPP client to initiate negotiation of IPv6CP.')
juniPppProfileFragmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 20), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileFragmentation.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileFragmentation.setDescription('Enables MLPPP fragmentation.')
juniPppProfileReassembly = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 21), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileReassembly.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileReassembly.setDescription('Enables MLPPP reassembly.')
juniPppProfileMaxReceiveReconstructedUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(64, 65535), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileMaxReceiveReconstructedUnit.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMaxReceiveReconstructedUnit.setDescription('The Maximum Received Reconstructed Unit (MRRU) that the local PPP entity will advertise to the remote entity. If the value of this variable is 1, then the MRRU is set to the local MRU value.')
juniPppProfileFragmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(128, 65535), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileFragmentSize.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileFragmentSize.setDescription("The size of fragments transmitted by the local PPP entity. If the value of this variable is 1, then the fragment size is set to the link's MTU value.")
juniPppProfileHashLinkSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 24), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileHashLinkSelection.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileHashLinkSelection.setDescription('Enables MLPPP hash-based link selection for non-best-effort data.')
juniPppProfileLcpAuthentication2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 25), JuniNibbleConfig()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileLcpAuthentication2.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileLcpAuthentication2.setDescription('A configuration variable comprised of nibbles i.e. 4 bits, such that a client can supply a list of 0 to 8 selections. The least significant nibble is the first value of the list, and the most significant nibble is the last value. The value in each field ranges from 0 to 15, however the first nibble with value 0 indicates the end of the list. Repetition of values is not allowed. Segregation of values is not allowed. Valid Values are: none - 0 pap - 1 chap - 2 eap - 3 Example valid encoding: 0x00000321 0x00000012 Not a valid encoding: 0x00000121 0x01002001 If authentication negotiation is not supported for this PPP interface, then any attempt to explicitly set this object will result in a notWritable error and it will be implicitly set to the DEFVAL on row creation. Setting this object to null will set juniPppProfileAuthenticatorVirtualRouter object to an empty string. Setting this object along with the juniPppProfileLcpAuthentication object will return an inconsistentValue error.')
juniPppProfileIgnoreMagicNumberMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 26), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIgnoreMagicNumberMismatch.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIgnoreMagicNumberMismatch.setDescription('The ignore magic number mismatch option of the PPP interface determines the action to be taken, when the peer has not negotiated any value yet sent null or invalid magic number in the LCP echo packets. The two actions that can be configured are: 1) Ignore the mismatch and retain connection 2) Disallow the mismatch and terminate connection')
juniPppProfileIpcpPromptDnsOption = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 27), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIpcpPromptDnsOption.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIpcpPromptDnsOption.setDescription('Control prompting of IPCP options to remote peer.')
juniPppProfileIpcpLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 28), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileIpcpLockout.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileIpcpLockout.setDescription('The lockout option for IPCP determines whether IPCP can be negotiated when the interface is already running IPV6CP. On enabling this option, the negotiation will be blocked after the IPV6CP service is up and waited for 10 seconds for peer IPCP initiation. The address is restored to the pool after the 10 second timeout. Disabling this option will re enable simultaneous NCP negotiations that are configured.')
juniPppProfileMultilinkMulticlass = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 29), JuniEnable().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniPppProfileMultilinkMulticlass.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMultilinkMulticlass.setDescription('Enables Multiclass Multilink PPP (MCML). Changing this object has an effect when the link is next restarted.')
juniPppProfileMultilinkMaxMultiClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniPppProfileMultilinkMaxMultiClasses.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMultilinkMaxMultiClasses.setDescription('Maximum number of MCML classes to be negotiated. Changing this object has an effect when the link is next restarted.')
class JuniPppProfileMulticlassTcName(TextualConvention, OctetString):
    description = 'Name of the Traffic class. The bundle name is a characteristic of a MLPPP Multiclass.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 64)

juniPppProfileMulticlassTraffiClassTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2), )
if mibBuilder.loadTexts: juniPppProfileMulticlassTraffiClassTable.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassTraffiClassTable.setDescription('This table contains entries for MLPPP Multiclass to traffic class mapping of the profile present in the system.')
juniPppProfileMulticlassTrafficClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1), ).setIndexNames((0, "Juniper-PPP-PROFILE-MIB", "juniPppProfileId"), (0, "Juniper-PPP-PROFILE-MIB", "juniPppProfileMulticlassIndex"))
if mibBuilder.loadTexts: juniPppProfileMulticlassTrafficClassEntry.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassTrafficClassEntry.setDescription('Each entry describes the MLPPP multiclass to traffic class mapping of profiles.Other characteristics like fragmentation and reassembly for a particular traffic class can be configured.')
juniPppProfileMulticlassId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniPppProfileMulticlassId.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassId.setDescription('The index of the profile. When creating entries in this table, suitable values for this object are determined by reading juniPppProfileId.')
juniPppProfileMulticlassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1, 2), Integer32().clone(15))
if mibBuilder.loadTexts: juniPppProfileMulticlassIndex.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassIndex.setDescription('The multiclass index of a particular traffic class type. This can be configured only when MCMP is enabled in the profile.')
juniPppProfileMulticlassTcName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1, 3), JuniPppProfileMulticlassTcName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileMulticlassTcName.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassTcName.setDescription('The traffic class index mapped to the MCMP multiclass index. This can be configured only when MCMP is enabled in the profile.')
juniPppProfileMulticlassFragmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1, 4), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileMulticlassFragmentation.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassFragmentation.setDescription('Enable or disable fragmentation for a particular multiclass. This can be configured only when MCMP is enaled in the profile.')
juniPppProfileMulticlassReassembly = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 1, 1, 2, 1, 5), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniPppProfileMulticlassReassembly.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassReassembly.setDescription('Enable or disable rassembly for a particular multiclass. This can be configured only when MCMP is enaled in the profile.')
juniPppProfileConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4))
juniPppProfileCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1))
juniPppProfileGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2))
juniPppProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 1)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance = juniPppProfileCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when support was added for multi-link PPP interfaces.')
juniPppProfileCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 2)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance2 = juniPppProfileCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance2.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when support was added for negotiation of IPCP option netmask.')
juniPppProfileCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 3)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance3 = juniPppProfileCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance3.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when the juniPppProfileAuthenticatorVirtualRouter object was added.')
juniPppProfileCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 4)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance4 = juniPppProfileCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance4.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when the juniPppProfileAaaProfile object was added.')
juniPppProfileCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 5)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup5"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance5 = juniPppProfileCompliance5.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance5.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when the juniPppProfileInitiateIp and juniPppProfileInitiateIpv6 objects were added.')
juniPppProfileCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 6)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup6"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance6 = juniPppProfileCompliance6.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance6.setDescription('Obsolete compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when fragmentation and reassembly support was added.')
juniPppProfileCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 7)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup7"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance7 = juniPppProfileCompliance7.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance7.setDescription('The compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when object juniPppProfileHashLinkSelection was added.')
juniPppProfileCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 8)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup8"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance8 = juniPppProfileCompliance8.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance8.setDescription('The compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when object juniPppProfileLcpAuthentication2 was added.')
juniPppProfileCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 9)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup10"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance9 = juniPppProfileCompliance9.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileCompliance9.setDescription('The compliance statement for entities which implement the Juniper PPP Profile MIB. This statement became obsolete when object juniPppProfileIpcpDnsOption and juniPppProfileIpcpLockout was added.')
juniPppProfileCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 1, 10)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileGroup11"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileCompliance10 = juniPppProfileCompliance10.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileCompliance10.setDescription('The compliance statement for entities which implement the Juniper PPP Profile MIB.')
juniPppProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 1)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup = juniPppProfileGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when support was added for MLPPP.')
juniPppProfileGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 2)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup2 = juniPppProfileGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup2.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when support was added for negotiation of IPCP option netmask.')
juniPppProfileGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 3)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup3 = juniPppProfileGroup3.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup3.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when the juniPppProfileAuthenticatorVirtualRouter object was added.')
juniPppProfileGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 4)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup4 = juniPppProfileGroup4.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup4.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when the juniPppProfileAaaProfile object was added.')
juniPppProfileGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 5)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup5 = juniPppProfileGroup5.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup5.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when the juniPppProfileInitiateIp and juniPppProfileInitiateIpv6 objects were added.')
juniPppProfileGroup6 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 6)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup6 = juniPppProfileGroup6.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup6.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when support was added for fragmentation and reassembly.')
juniPppProfileGroup7 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 7)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup7 = juniPppProfileGroup7.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup7.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when support was added for mlppp hash-based link selection.')
juniPppProfileGroup8 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 8)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileHashLinkSelection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup8 = juniPppProfileGroup8.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup8.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when juniPppProfileLcpAuthentication2 was added.')
juniPppProfileGroup9 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 9)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileHashLinkSelection"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup9 = juniPppProfileGroup9.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup9.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when juniPppProfileIgnoreMagicNumberMismatch was added')
juniPppProfileGroup10 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 10)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileHashLinkSelection"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication2"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIgnoreMagicNumberMismatch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup10 = juniPppProfileGroup10.setStatus('obsolete')
if mibBuilder.loadTexts: juniPppProfileGroup10.setDescription('A collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This group became obsolete when juniPppProfileIpcpDnsOption and juniPppProfileIpcpLockout was added')
juniPppProfileGroup11 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 11)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileHashLinkSelection"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication2"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIgnoreMagicNumberMismatch"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpPromptDnsOption"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpLockout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup11 = juniPppProfileGroup11.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileGroup11.setDescription('Obsolete collection of objects providing management of profile functionality for PPP interfaces in a Juniper product. This was obsoleted when the support for multiclass MLPPP was added.')
juniPppProfileGroup12 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 12)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileSetMap"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpMagicNumber"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpKeepalive"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerDnsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpPeerWinsPriority"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpInitialMRU"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePacketLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileStateLog"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMinChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileChapMaxChallengeLength"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfilePassiveMode"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMlppp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIpcpNetmask"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAuthenticatorVirtualRouter"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileAaaProfile"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIp"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileInitiateIpv6"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileReassembly"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMaxReceiveReconstructedUnit"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileFragmentSize"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileHashLinkSelection"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileLcpAuthentication2"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileIgnoreMagicNumberMismatch"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMultilinkMulticlass"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMultilinkMaxMultiClasses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileGroup12 = juniPppProfileGroup12.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileGroup12.setDescription('A collection of objects providing management of profile functionality for PPP interfaces in a Juniper product.')
juniPppProfileMulticlassTrafficClassGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 45, 4, 2, 13)).setObjects(("Juniper-PPP-PROFILE-MIB", "juniPppProfileMulticlassTcName"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMulticlassFragmentation"), ("Juniper-PPP-PROFILE-MIB", "juniPppProfileMulticlassReassembly"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniPppProfileMulticlassTrafficClassGroup1 = juniPppProfileMulticlassTrafficClassGroup1.setStatus('current')
if mibBuilder.loadTexts: juniPppProfileMulticlassTrafficClassGroup1.setDescription(' A collection of object providing management of multiclass MLPPP multiclass to traffic class mapping functionality in the PPP profile in a Juniper product.')
mibBuilder.exportSymbols("Juniper-PPP-PROFILE-MIB", juniPppProfileCompliance9=juniPppProfileCompliance9, juniPppProfileConformance=juniPppProfileConformance, juniPppProfileStateLog=juniPppProfileStateLog, juniPppProfileId=juniPppProfileId, juniPppProfileLcpKeepalive=juniPppProfileLcpKeepalive, juniPppProfileGroup6=juniPppProfileGroup6, juniPppProfileObjects=juniPppProfileObjects, juniPppProfileGroup12=juniPppProfileGroup12, juniPppProfileLcpAuthentication2=juniPppProfileLcpAuthentication2, juniPppProfileMulticlassTraffiClassTable=juniPppProfileMulticlassTraffiClassTable, juniPppProfileCompliance8=juniPppProfileCompliance8, juniPppProfileIgnoreMagicNumberMismatch=juniPppProfileIgnoreMagicNumberMismatch, juniPppProfileCompliance2=juniPppProfileCompliance2, juniPppProfileMulticlassTcName=juniPppProfileMulticlassTcName, juniPppProfileMultilinkMulticlass=juniPppProfileMultilinkMulticlass, juniPppProfileLcpInitialMRU=juniPppProfileLcpInitialMRU, juniPppProfileMulticlassId=juniPppProfileMulticlassId, PYSNMP_MODULE_ID=juniPppProfileMIB, juniPppProfileInitiateIp=juniPppProfileInitiateIp, JuniPppProfileMulticlassTcName=JuniPppProfileMulticlassTcName, juniPppProfileGroup11=juniPppProfileGroup11, juniPppProfileMulticlassTrafficClassGroup1=juniPppProfileMulticlassTrafficClassGroup1, juniPppProfileGroup=juniPppProfileGroup, juniPppProfileIpPeerDnsPriority=juniPppProfileIpPeerDnsPriority, juniPppProfileChapMaxChallengeLength=juniPppProfileChapMaxChallengeLength, juniPppProfileInitiateIpv6=juniPppProfileInitiateIpv6, juniPppProfilePacketLog=juniPppProfilePacketLog, juniPppProfileCompliance10=juniPppProfileCompliance10, juniPppProfileIpPeerWinsPriority=juniPppProfileIpPeerWinsPriority, juniPppProfileFragmentSize=juniPppProfileFragmentSize, juniPppProfileHashLinkSelection=juniPppProfileHashLinkSelection, juniPppProfileGroup10=juniPppProfileGroup10, juniPppProfileAuthenticatorVirtualRouter=juniPppProfileAuthenticatorVirtualRouter, juniPppProfileEntry=juniPppProfileEntry, juniPppProfileCompliance=juniPppProfileCompliance, juniPppProfileCompliance3=juniPppProfileCompliance3, juniPppProfileGroup2=juniPppProfileGroup2, juniPppProfileGroup4=juniPppProfileGroup4, juniPppProfileMulticlassTrafficClassEntry=juniPppProfileMulticlassTrafficClassEntry, juniPppProfileFragmentation=juniPppProfileFragmentation, juniPppProfileGroup7=juniPppProfileGroup7, juniPppProfileMaxReceiveReconstructedUnit=juniPppProfileMaxReceiveReconstructedUnit, juniPppProfileCompliance4=juniPppProfileCompliance4, juniPppProfileMIB=juniPppProfileMIB, juniPppProfileGroup9=juniPppProfileGroup9, juniPppProfileMulticlassReassembly=juniPppProfileMulticlassReassembly, juniPppProfileLcpAuthentication=juniPppProfileLcpAuthentication, juniPppProfileIpcpNetmask=juniPppProfileIpcpNetmask, juniPppProfileMulticlassIndex=juniPppProfileMulticlassIndex, juniPppProfileGroups=juniPppProfileGroups, juniPppProfileAaaProfile=juniPppProfileAaaProfile, juniPppProfileIpcpLockout=juniPppProfileIpcpLockout, juniPppProfileCompliance7=juniPppProfileCompliance7, juniPppProfileTable=juniPppProfileTable, juniPppProfileMultilinkMaxMultiClasses=juniPppProfileMultilinkMaxMultiClasses, juniPppProfileSetMap=juniPppProfileSetMap, juniPppProfileMlppp=juniPppProfileMlppp, juniPppProfileGroup3=juniPppProfileGroup3, juniPppProfileCompliance6=juniPppProfileCompliance6, juniPppProfileReassembly=juniPppProfileReassembly, juniPppProfileLcpMagicNumber=juniPppProfileLcpMagicNumber, juniPppProfileChapMinChallengeLength=juniPppProfileChapMinChallengeLength, juniPppProfileCompliance5=juniPppProfileCompliance5, juniPppProfileGroup8=juniPppProfileGroup8, juniPppProfilePassiveMode=juniPppProfilePassiveMode, juniPppProfile=juniPppProfile, juniPppProfileIpcpPromptDnsOption=juniPppProfileIpcpPromptDnsOption, juniPppProfileGroup5=juniPppProfileGroup5, juniPppProfileMulticlassFragmentation=juniPppProfileMulticlassFragmentation, juniPppProfileCompliances=juniPppProfileCompliances)
