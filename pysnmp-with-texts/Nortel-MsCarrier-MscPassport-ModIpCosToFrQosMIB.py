#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:30:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
mscModIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex")
mscModFrsIndex, mscModFrs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex", "mscModFrs")
DisplayString, RowStatus, Unsigned32, Integer32, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "RowStatus", "Unsigned32", "Integer32", "StorageType")
NonReplicated, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Gauge32, TimeTicks, Bits, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, IpAddress, MibIdentifier, iso, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "TimeTicks", "Bits", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "IpAddress", "MibIdentifier", "iso", "NotificationType", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
modIpCosToFrQosMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81))
mscModFrsIpCosToFrQos = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4))
mscModFrsIpCosToFrQosRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1), )
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatusTable.setDescription('This entry controls the addition and deletion of mscModFrsIpCosToFrQos components.')
mscModFrsIpCosToFrQosRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", "mscModFrsIpCosToFrQosIndex"))
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatusEntry.setDescription('A single entry in the table represents a single mscModFrsIpCosToFrQos component.')
mscModFrsIpCosToFrQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosRowStatus.setDescription('This variable is used as the basis for SNMP naming of mscModFrsIpCosToFrQos components. These components cannot be added nor deleted.')
mscModFrsIpCosToFrQosComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
mscModFrsIpCosToFrQosStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosStorageType.setDescription('This variable represents the storage type value for the mscModFrsIpCosToFrQos tables.')
mscModFrsIpCosToFrQosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosIndex.setDescription('This variable represents the index for the mscModFrsIpCosToFrQos tables.')
mscModFrsIpCosToFrQosTosm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2))
mscModFrsIpCosToFrQosTosmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1), )
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatusTable.setDescription('This entry controls the addition and deletion of mscModFrsIpCosToFrQosTosm components.')
mscModFrsIpCosToFrQosTosmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", "mscModFrsIpCosToFrQosIndex"), (0, "Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", "mscModFrsIpCosToFrQosTosmIndex"))
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatusEntry.setDescription('A single entry in the table represents a single mscModFrsIpCosToFrQosTosm component.')
mscModFrsIpCosToFrQosTosmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmRowStatus.setDescription('This variable is used as the basis for SNMP naming of mscModFrsIpCosToFrQosTosm components. These components can be added.')
mscModFrsIpCosToFrQosTosmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
mscModFrsIpCosToFrQosTosmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmStorageType.setDescription('This variable represents the storage type value for the mscModFrsIpCosToFrQosTosm tables.')
mscModFrsIpCosToFrQosTosmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmIndex.setDescription('This variable represents the index for the mscModFrsIpCosToFrQosTosm tables.')
mscModFrsIpCosToFrQosTosmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 10), )
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmProvTable.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmProvTable.setDescription('This group specifies the mapping from the IP type of service value to the egress emission priority and discard priority. Any changes to TOS mappings will immediately take effect on new calls.')
mscModFrsIpCosToFrQosTosmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", "mscModFrsIpCosToFrQosIndex"), (0, "Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", "mscModFrsIpCosToFrQosTosmIndex"))
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmProvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmProvEntry.setDescription('An entry in the mscModFrsIpCosToFrQosTosmProvTable.')
mscModFrsIpCosToFrQosTosmEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmEmissionPriority.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmEmissionPriority.setDescription('This attribute specifies the egress emission priority at the Frame Relay interface. A value of 3 specifies the highest priority, whereas a value of 0 specifies the lowest priority. Changes to this attribute effect only new calls.')
mscModFrsIpCosToFrQosTosmDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 4, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmDiscardPriority.setStatus('mandatory')
if mibBuilder.loadTexts: mscModFrsIpCosToFrQosTosmDiscardPriority.setDescription('This attribute specifies the egress discard priority at the Frame Relay interface. A value of normal specifies the lowest priority (more readily discarded), whereas a value of high specifies the highest priority (less readily discarded). Changes to this attribute effect only new calls.')
modIpCosToFrQosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 1))
modIpCosToFrQosGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 1, 1))
modIpCosToFrQosGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 1, 1, 3))
modIpCosToFrQosGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 1, 1, 3, 2))
modIpCosToFrQosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 3))
modIpCosToFrQosCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 3, 1))
modIpCosToFrQosCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 3, 1, 3))
modIpCosToFrQosCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 81, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-ModIpCosToFrQosMIB", modIpCosToFrQosCapabilities=modIpCosToFrQosCapabilities, mscModFrsIpCosToFrQosTosmEmissionPriority=mscModFrsIpCosToFrQosTosmEmissionPriority, mscModFrsIpCosToFrQos=mscModFrsIpCosToFrQos, mscModFrsIpCosToFrQosTosmDiscardPriority=mscModFrsIpCosToFrQosTosmDiscardPriority, modIpCosToFrQosCapabilitiesCA02A=modIpCosToFrQosCapabilitiesCA02A, mscModFrsIpCosToFrQosTosm=mscModFrsIpCosToFrQosTosm, mscModFrsIpCosToFrQosIndex=mscModFrsIpCosToFrQosIndex, modIpCosToFrQosGroup=modIpCosToFrQosGroup, modIpCosToFrQosCapabilitiesCA02=modIpCosToFrQosCapabilitiesCA02, modIpCosToFrQosMIB=modIpCosToFrQosMIB, mscModFrsIpCosToFrQosTosmRowStatusEntry=mscModFrsIpCosToFrQosTosmRowStatusEntry, modIpCosToFrQosGroupCA=modIpCosToFrQosGroupCA, mscModFrsIpCosToFrQosTosmProvTable=mscModFrsIpCosToFrQosTosmProvTable, mscModFrsIpCosToFrQosComponentName=mscModFrsIpCosToFrQosComponentName, mscModFrsIpCosToFrQosTosmProvEntry=mscModFrsIpCosToFrQosTosmProvEntry, mscModFrsIpCosToFrQosTosmRowStatus=mscModFrsIpCosToFrQosTosmRowStatus, mscModFrsIpCosToFrQosTosmStorageType=mscModFrsIpCosToFrQosTosmStorageType, mscModFrsIpCosToFrQosTosmIndex=mscModFrsIpCosToFrQosTosmIndex, mscModFrsIpCosToFrQosRowStatus=mscModFrsIpCosToFrQosRowStatus, modIpCosToFrQosCapabilitiesCA=modIpCosToFrQosCapabilitiesCA, mscModFrsIpCosToFrQosTosmComponentName=mscModFrsIpCosToFrQosTosmComponentName, mscModFrsIpCosToFrQosRowStatusEntry=mscModFrsIpCosToFrQosRowStatusEntry, modIpCosToFrQosGroupCA02=modIpCosToFrQosGroupCA02, mscModFrsIpCosToFrQosTosmRowStatusTable=mscModFrsIpCosToFrQosTosmRowStatusTable, mscModFrsIpCosToFrQosRowStatusTable=mscModFrsIpCosToFrQosRowStatusTable, modIpCosToFrQosGroupCA02A=modIpCosToFrQosGroupCA02A, mscModFrsIpCosToFrQosStorageType=mscModFrsIpCosToFrQosStorageType)
