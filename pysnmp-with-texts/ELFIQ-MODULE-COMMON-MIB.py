#
# PySNMP MIB module ELFIQ-MODULE-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELFIQ-MODULE-COMMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:59:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
commonConformance, common = mibBuilder.importSymbols("ELFIQ-INC-MIB", "commonConformance", "common")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
iso, Counter64, ObjectIdentity, TimeTicks, Integer32, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, Bits, Gauge32, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter64", "ObjectIdentity", "TimeTicks", "Integer32", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "Bits", "Gauge32", "MibIdentifier", "Counter32")
VariablePointer, TextualConvention, DisplayString, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "VariablePointer", "TextualConvention", "DisplayString", "DateAndTime", "RowStatus")
commonComponent = ModuleIdentity((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1))
if mibBuilder.loadTexts: commonComponent.setLastUpdated('0902190000Z')
if mibBuilder.loadTexts: commonComponent.setOrganization('Elfiq Inc.')
if mibBuilder.loadTexts: commonComponent.setContactInfo(' Author: Elfiq Network postal: Montreal, QC H3B3A7 CANADA email: support@elfiq.com phone: +1-514-667-0611 ')
if mibBuilder.loadTexts: commonComponent.setDescription('This is the mib representing the common component of all your elfiq products')
systInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1))
class SystIndex(TextualConvention, Integer32):
    description = ' A unique value, greater than zero, for system functionality '
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 10)

systNumber = MibScalar((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systNumber.setStatus('current')
if mibBuilder.loadTexts: systNumber.setDescription('The number of system configured')
systTable = MibTable((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: systTable.setStatus('current')
if mibBuilder.loadTexts: systTable.setDescription('This is a list of syst entries. The number of syst is given by the value of systNumber.')
systEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "ELFIQ-MODULE-COMMON-MIB", "systIndex"))
if mibBuilder.loadTexts: systEntry.setStatus('current')
if mibBuilder.loadTexts: systEntry.setDescription(' An entry containing syst sub-component.')
systIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 1), SystIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systIndex.setStatus('current')
if mibBuilder.loadTexts: systIndex.setDescription('The syst index default is 1')
systModel = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systModel.setStatus('current')
if mibBuilder.loadTexts: systModel.setDescription('The model of your elfiq product')
systHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systHostname.setStatus('current')
if mibBuilder.loadTexts: systHostname.setDescription('The hostname of your elfiq product')
systVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systVersion.setStatus('current')
if mibBuilder.loadTexts: systVersion.setDescription('The version of your elfiq product')
systRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systRevision.setStatus('current')
if mibBuilder.loadTexts: systRevision.setDescription('The revision of your elfiq product')
systRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systRelease.setStatus('current')
if mibBuilder.loadTexts: systRelease.setDescription('The build number of your elfiq product')
systBuild = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systBuild.setStatus('current')
if mibBuilder.loadTexts: systBuild.setDescription('The sub build of your elfiq product')
systTypeDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systTypeDesc.setStatus('current')
if mibBuilder.loadTexts: systTypeDesc.setDescription('The type description of your elfiq product')
systTime = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systTime.setStatus('current')
if mibBuilder.loadTexts: systTime.setDescription('The date and time configured in your elfiq product ')
systLicenceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 1), ("notVerified", 2), ("keyActivated", 3), ("readKeyFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systLicenceStatus.setStatus('current')
if mibBuilder.loadTexts: systLicenceStatus.setDescription('The status of our licence, Valid , No licence , Not verified etc...')
systLicenceType = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("endUser", 1), ("demo", 2), ("nfr", 3), ("hrl", 4), ("isp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systLicenceType.setStatus('current')
if mibBuilder.loadTexts: systLicenceType.setDescription('This is your type of licence. Is it for a user , a demonstration etc...')
systNbVfiActivated = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systNbVfiActivated.setStatus('current')
if mibBuilder.loadTexts: systNbVfiActivated.setDescription('This is the number of vfi you can activate with your licence')
systCpuUsePct = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systCpuUsePct.setStatus('current')
if mibBuilder.loadTexts: systCpuUsePct.setDescription('This is the per cent cpu usage of your elfiq product')
systRamUsePct = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systRamUsePct.setStatus('current')
if mibBuilder.loadTexts: systRamUsePct.setDescription('This is the per cent ram usage of your elfiq product')
systFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systFanSpeed.setStatus('current')
if mibBuilder.loadTexts: systFanSpeed.setDescription('This is the fan speed of your elfiq product Note: depending on your model this value could be not provided')
systCpuTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systCpuTemp.setStatus('current')
if mibBuilder.loadTexts: systCpuTemp.setDescription('This is the current temperature of you elfiq product Note: depending on your model this value could be not provided')
systSmptSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("alert", 1), ("warning", 2), ("notice", 3), ("info", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmptSeverity.setStatus('current')
if mibBuilder.loadTexts: systSmptSeverity.setDescription('This is the severity configured for the smtp messages sent')
systSmtpReciptient1 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient1.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient1.setDescription('This is the first smtp recipient')
systSmtpReciptient2 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient2.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient2.setDescription('This is the first smtp recipient')
systSmtpReciptient3 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient3.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient3.setDescription('This is the third smtp recipient')
systSmtpReciptient4 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient4.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient4.setDescription('This is the fourth smtp recipient')
systSmtpReciptient5 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient5.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient5.setDescription('This is the fifth smtp recipient')
systSmtpReciptient6 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient6.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient6.setDescription('This is the sixth smtp recipient')
systSmtpReciptient7 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient7.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient7.setDescription('This is the seventh smtp recipient')
systSmtpReciptient8 = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 1, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: systSmtpReciptient8.setStatus('current')
if mibBuilder.loadTexts: systSmtpReciptient8.setDescription('This is the eighth smtp recipient')
commonNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2))
systNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 1))
systEOSStart = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 1, 1)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systHostname"))
if mibBuilder.loadTexts: systEOSStart.setStatus('current')
if mibBuilder.loadTexts: systEOSStart.setDescription('This notification is sent every time your elfiq product starts')
systCPUTemp = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 1, 2)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systHostname"), ("ELFIQ-MODULE-COMMON-MIB", "systCpuTemp"))
if mibBuilder.loadTexts: systCPUTemp.setStatus('current')
if mibBuilder.loadTexts: systCPUTemp.setDescription('This notification is sent when the temperature of your CPU is higher than 40�C')
systCPUUsage = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 1, 3)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systHostname"))
if mibBuilder.loadTexts: systCPUUsage.setStatus('current')
if mibBuilder.loadTexts: systCPUUsage.setDescription('This notification is sent when your CPU Usage is higher than 90%')
systCPUFan = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 1, 4)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systHostname"))
if mibBuilder.loadTexts: systCPUFan.setStatus('current')
if mibBuilder.loadTexts: systCPUFan.setDescription('This notification is sent when your CPU Fan speed is under 100 RPM')
systGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 2, 1, 1))
systInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 1, 1)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systNumber"), ("ELFIQ-MODULE-COMMON-MIB", "systIndex"), ("ELFIQ-MODULE-COMMON-MIB", "systModel"), ("ELFIQ-MODULE-COMMON-MIB", "systHostname"), ("ELFIQ-MODULE-COMMON-MIB", "systVersion"), ("ELFIQ-MODULE-COMMON-MIB", "systRevision"), ("ELFIQ-MODULE-COMMON-MIB", "systRelease"), ("ELFIQ-MODULE-COMMON-MIB", "systBuild"), ("ELFIQ-MODULE-COMMON-MIB", "systTypeDesc"), ("ELFIQ-MODULE-COMMON-MIB", "systTime"), ("ELFIQ-MODULE-COMMON-MIB", "systLicenceStatus"), ("ELFIQ-MODULE-COMMON-MIB", "systLicenceType"), ("ELFIQ-MODULE-COMMON-MIB", "systNbVfiActivated"), ("ELFIQ-MODULE-COMMON-MIB", "systCpuUsePct"), ("ELFIQ-MODULE-COMMON-MIB", "systFanSpeed"), ("ELFIQ-MODULE-COMMON-MIB", "systCpuTemp"), ("ELFIQ-MODULE-COMMON-MIB", "systRamUsePct"), ("ELFIQ-MODULE-COMMON-MIB", "systSmptSeverity"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient1"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient2"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient3"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient4"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient5"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient6"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient7"), ("ELFIQ-MODULE-COMMON-MIB", "systSmtpReciptient8"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systInfoGroup = systInfoGroup.setStatus('current')
if mibBuilder.loadTexts: systInfoGroup.setDescription('A collection of objects providing the syst information')
systNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 1, 2)).setObjects(("ELFIQ-MODULE-COMMON-MIB", "systEOSStart"), ("ELFIQ-MODULE-COMMON-MIB", "systCPUTemp"), ("ELFIQ-MODULE-COMMON-MIB", "systCPUUsage"), ("ELFIQ-MODULE-COMMON-MIB", "systCPUFan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systNotificationGroup = systNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: systNotificationGroup.setDescription('A collection of objects notification corresponding to your products changes')
mibBuilder.exportSymbols("ELFIQ-MODULE-COMMON-MIB", systNumber=systNumber, systSmtpReciptient7=systSmtpReciptient7, commonComponent=commonComponent, systFanSpeed=systFanSpeed, commonNotification=commonNotification, systRelease=systRelease, systSmtpReciptient3=systSmtpReciptient3, systCpuTemp=systCpuTemp, systSmtpReciptient4=systSmtpReciptient4, systRevision=systRevision, systLicenceStatus=systLicenceStatus, systNotification=systNotification, systCPUTemp=systCPUTemp, systModel=systModel, systCPUFan=systCPUFan, systSmtpReciptient5=systSmtpReciptient5, systCpuUsePct=systCpuUsePct, systSmtpReciptient6=systSmtpReciptient6, systSmtpReciptient1=systSmtpReciptient1, systTime=systTime, systLicenceType=systLicenceType, systGroups=systGroups, systBuild=systBuild, systEOSStart=systEOSStart, systHostname=systHostname, systNbVfiActivated=systNbVfiActivated, systRamUsePct=systRamUsePct, systCPUUsage=systCPUUsage, systSmtpReciptient8=systSmtpReciptient8, PYSNMP_MODULE_ID=commonComponent, systInfoGroup=systInfoGroup, systTypeDesc=systTypeDesc, systVersion=systVersion, systIndex=systIndex, systSmtpReciptient2=systSmtpReciptient2, SystIndex=SystIndex, systTable=systTable, systSmptSeverity=systSmptSeverity, systEntry=systEntry, systInfo=systInfo, systNotificationGroup=systNotificationGroup)
