#
# PySNMP MIB module HPN-ICF-ARP-RATELIMIT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-ARP-RATELIMIT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:37:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, NotificationType, ObjectIdentity, Integer32, Unsigned32, ModuleIdentity, TimeTicks, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "NotificationType", "ObjectIdentity", "Integer32", "Unsigned32", "ModuleIdentity", "TimeTicks", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfARPRatelimit = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110))
hpnicfARPRatelimit.setRevisions(('2013-10-14 18:00', '2009-12-08 19:12',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfARPRatelimit.setRevisionsDescriptions(('Add hpnicfARPRatelimitConfigTable.', 'The initial version of this MIB file.',))
if mibBuilder.loadTexts: hpnicfARPRatelimit.setLastUpdated('201310141800Z')
if mibBuilder.loadTexts: hpnicfARPRatelimit.setOrganization('')
if mibBuilder.loadTexts: hpnicfARPRatelimit.setContactInfo('')
if mibBuilder.loadTexts: hpnicfARPRatelimit.setDescription('This MIB file defines the ARP packet rate limit configuration. The ARP packet rate limit feature monitors and controls the rate of ARP packets delivered to the CPU on a device. The current version supports the monitoring feature only.')
hpnicfARPRatelimitObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1))
hpnicfARPRatelimitTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1))
hpnicfARPRatelimitConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 2))
hpnicfARPRatelimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 0))
hpnicfARPRatelimitOverspeedTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 0, 1)).setObjects(("HPN-ICF-ARP-RATELIMIT-MIB", "hpnicfARPRatelimitTrapVer"), ("HPN-ICF-ARP-RATELIMIT-MIB", "hpnicfARPRatelimitTrapCount"), ("HPN-ICF-ARP-RATELIMIT-MIB", "hpnicfARPRatelimitTrapMsg"))
if mibBuilder.loadTexts: hpnicfARPRatelimitOverspeedTrap.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitOverspeedTrap.setDescription('If the rate of ARP packets delivered to the CPU on a device exceeds the threshold, a trap message is generated and sent to the remote monitoring device.')
hpnicfARPRatelimitTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 1))
hpnicfARPRatelimitTrapVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapVer.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapVer.setDescription('The version of trap information.')
hpnicfARPRatelimitTrapCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 1, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapCount.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapCount.setDescription('Number of cells in the trap message. A trap message may contain multiple cells, each of which indicates that the rate information of ARP packets exceeds the threshold.')
hpnicfARPRatelimitTrapMsg = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 254))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapMsg.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitTrapMsg.setDescription("This object is the cell section in a trap message sent from a monitored device. This object can contain multiple cells. This object is in the format of '<cell1><cell2>...'. Each cell consists of 17 octets in the format of '<TrapOrigin><IfIndex><OverSpeedValue><Threshold><Interval>'. <TrapOrigin> indicates the source of the trap message and has size of 1 octet. It only supports the following values. 1 - Global. 2 - Interface. <IfIndex> is the index of the interface where the rate of ARP packet exceeds the threshold and has size of 4 octets. It is 0xFFFFFFFF when <TrapOrigin> is 1(Global). <OverSpeedValue> indicates the rate that ARP packets are actually delivered and has size of 4 octets. <Threshold> indicates the threshold that ARP packets can be delivered to CPU and has size of 4 octets. <Interval> indicates the interval that a trap message is sent out and has size of 4 octets.")
hpnicfARPRatelimitConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfARPRatelimitConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitConfigTable.setDescription('The table is used to configure ARP packet rate limit on interfaces.')
hpnicfARPRatelimitConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfARPRatelimitConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitConfigEntry.setDescription('The entry of hpnicfARPRatelimitConfigTable.')
hpnicfARPRatelimitValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 110, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfARPRatelimitValue.setStatus('current')
if mibBuilder.loadTexts: hpnicfARPRatelimitValue.setDescription('Configure ARP packet rate limit. Support for the value range depends on the device model. If the object is set to 0, the ARP packet rate limit will be disabled.')
mibBuilder.exportSymbols("HPN-ICF-ARP-RATELIMIT-MIB", hpnicfARPRatelimitTrap=hpnicfARPRatelimitTrap, hpnicfARPRatelimitTrapObjects=hpnicfARPRatelimitTrapObjects, hpnicfARPRatelimitValue=hpnicfARPRatelimitValue, hpnicfARPRatelimitConfig=hpnicfARPRatelimitConfig, hpnicfARPRatelimitConfigTable=hpnicfARPRatelimitConfigTable, hpnicfARPRatelimitTrapMsg=hpnicfARPRatelimitTrapMsg, hpnicfARPRatelimitTrapVer=hpnicfARPRatelimitTrapVer, PYSNMP_MODULE_ID=hpnicfARPRatelimit, hpnicfARPRatelimitConfigEntry=hpnicfARPRatelimitConfigEntry, hpnicfARPRatelimit=hpnicfARPRatelimit, hpnicfARPRatelimitOverspeedTrap=hpnicfARPRatelimitOverspeedTrap, hpnicfARPRatelimitObjects=hpnicfARPRatelimitObjects, hpnicfARPRatelimitTraps=hpnicfARPRatelimitTraps, hpnicfARPRatelimitTrapCount=hpnicfARPRatelimitTrapCount)
