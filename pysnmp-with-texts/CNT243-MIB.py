#
# PySNMP MIB module CNT243-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CNT243-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:25:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
cnt2Subagent, = mibBuilder.importSymbols("CNT2-MIB", "cnt2Subagent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, Counter64, IpAddress, enterprises, ObjectIdentity, ModuleIdentity, Unsigned32, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "Counter64", "IpAddress", "enterprises", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cnt2Atmf = MibIdentifier((1, 3, 6, 1, 4, 1, 333, 2, 4, 3))
cnt2AtmfTable = MibTable((1, 3, 6, 1, 4, 1, 333, 2, 4, 3, 1), )
if mibBuilder.loadTexts: cnt2AtmfTable.setStatus('mandatory')
if mibBuilder.loadTexts: cnt2AtmfTable.setDescription('A list of entries describing the mapping of atm interfaces. A specific atm object is terminated with the slot number.')
cnt2AtmfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 333, 2, 4, 3, 1, 1), ).setIndexNames((0, "CNT243-MIB", "cnt2AtmfSlot"), (0, "CNT243-MIB", "cnt2AtmfIndex"))
if mibBuilder.loadTexts: cnt2AtmfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: cnt2AtmfEntry.setDescription('An individual atm port entry.')
cnt2AtmfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2AtmfSlot.setStatus('mandatory')
if mibBuilder.loadTexts: cnt2AtmfSlot.setDescription('The slot index for this atm port.')
cnt2AtmfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2AtmfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: cnt2AtmfIndex.setDescription('The local port index for this atm port.')
cnt2AtmfPort = MibTableColumn((1, 3, 6, 1, 4, 1, 333, 2, 4, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnt2AtmfPort.setStatus('mandatory')
if mibBuilder.loadTexts: cnt2AtmfPort.setDescription('The global port index for this atm port.')
mibBuilder.exportSymbols("CNT243-MIB", cnt2AtmfTable=cnt2AtmfTable, cnt2AtmfIndex=cnt2AtmfIndex, cnt2AtmfSlot=cnt2AtmfSlot, cnt2AtmfPort=cnt2AtmfPort, cnt2AtmfEntry=cnt2AtmfEntry, cnt2Atmf=cnt2Atmf)
