#
# PySNMP MIB module PDN-HDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-HDLC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:38:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Bits, ObjectIdentity, Integer32, iso, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Counter64, TimeTicks, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "ObjectIdentity", "Integer32", "iso", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Counter64", "TimeTicks", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pdnHdlcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26))
pdnHdlcMIB.setRevisions(('2004-09-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pdnHdlcMIB.setRevisionsDescriptions(('Initial release.',))
if mibBuilder.loadTexts: pdnHdlcMIB.setLastUpdated('200409100000Z')
if mibBuilder.loadTexts: pdnHdlcMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
if mibBuilder.loadTexts: pdnHdlcMIB.setContactInfo('Paradyne Networks, Inc. 8545 126th Avenue North Largo, FL 33733 www.paradyne.com General Comments to: mibwg_team@paradyne.com Editor Clay Sikes')
if mibBuilder.loadTexts: pdnHdlcMIB.setDescription("The MIB module provides objects to manage an interface's High-level Data Link Control (HDLC) protocol.")
pdnHdlcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 0))
pdnHdlcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1))
pdnHdlcAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 2))
pdnHdlcConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3))
pdnHdlcStatsTotalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1), )
if mibBuilder.loadTexts: pdnHdlcStatsTotalTable.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalTable.setDescription("The HDLC Total Statistics Table. This table contains counters for statistics. Counters in this group contain `total' counts which are marked from the time the system was last re-initialized.")
pdnHdlcStatsTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnHdlcStatsTotalEntry.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalEntry.setDescription('An entry in the HDLC Total Statistics Table.')
pdnHdlcStatsTotalRxGood = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxGood.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxGood.setDescription('The number of HDLC frames that were received without any errors.')
pdnHdlcStatsTotalRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxCRCErrors.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxCRCErrors.setDescription('The number of HDLC frames that were received with CRC errors.')
pdnHdlcStatsTotalRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxAborts.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxAborts.setDescription('The number of HDLC frames that were aborted during receive.')
pdnHdlcStatsTotalRxBadAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxBadAddress.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxBadAddress.setDescription('The number of HDLC frames that were discarded due to a bad address.')
pdnHdlcStatsTotalRxNoBufAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxNoBufAvail.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxNoBufAvail.setDescription('The number of HDLC frames that were discarded because no receive buffers were available.')
pdnHdlcStatsTotalReceiverOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalReceiverOverrun.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalReceiverOverrun.setDescription('The number of times a receiver overrun occurred.')
pdnHdlcStatsTotalRxMaxSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxMaxSizeExceeded.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxMaxSizeExceeded.setDescription('The number of times a frame was received which was discarded due to the frame size exceeding the maximum frame size for the receiver.')
pdnHdlcStatsTotalTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalTx.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalTx.setDescription('The number of HDLC frames transmitted.')
pdnHdlcStatsTotalTxBufUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalTxBufUnderrun.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalTxBufUnderrun.setDescription('The number of times a transmitter underrun occurred.')
pdnHdlcCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 1))
pdnHdlcGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2))
pdnHdlcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 1, 1)).setObjects(("PDN-HDLC-MIB", "pdnHdlcStatsTotalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdlcCompliance = pdnHdlcCompliance.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcCompliance.setDescription('The compliance statement for network elements implementing HDLC Protocol.')
pdnHdlcObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 1))
pdnHdlcAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 2))
pdnHdlcNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 3))
pdnHdlcStatsTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 1, 1)).setObjects(("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxGood"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxCRCErrors"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxAborts"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxBadAddress"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxNoBufAvail"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalReceiverOverrun"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxMaxSizeExceeded"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalTx"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalTxBufUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdlcStatsTotalGroup = pdnHdlcStatsTotalGroup.setStatus('current')
if mibBuilder.loadTexts: pdnHdlcStatsTotalGroup.setDescription('Displays various HDLC related total counters.')
mibBuilder.exportSymbols("PDN-HDLC-MIB", pdnHdlcObjects=pdnHdlcObjects, pdnHdlcGroups=pdnHdlcGroups, pdnHdlcStatsTotalTable=pdnHdlcStatsTotalTable, pdnHdlcStatsTotalRxNoBufAvail=pdnHdlcStatsTotalRxNoBufAvail, pdnHdlcStatsTotalRxMaxSizeExceeded=pdnHdlcStatsTotalRxMaxSizeExceeded, pdnHdlcCompliance=pdnHdlcCompliance, pdnHdlcStatsTotalReceiverOverrun=pdnHdlcStatsTotalReceiverOverrun, pdnHdlcStatsTotalTx=pdnHdlcStatsTotalTx, pdnHdlcStatsTotalRxCRCErrors=pdnHdlcStatsTotalRxCRCErrors, pdnHdlcStatsTotalGroup=pdnHdlcStatsTotalGroup, pdnHdlcCompliances=pdnHdlcCompliances, pdnHdlcStatsTotalEntry=pdnHdlcStatsTotalEntry, pdnHdlcNtfyGroups=pdnHdlcNtfyGroups, pdnHdlcObjGroups=pdnHdlcObjGroups, pdnHdlcNotifications=pdnHdlcNotifications, pdnHdlcStatsTotalRxAborts=pdnHdlcStatsTotalRxAborts, pdnHdlcAfnGroups=pdnHdlcAfnGroups, PYSNMP_MODULE_ID=pdnHdlcMIB, pdnHdlcConformance=pdnHdlcConformance, pdnHdlcStatsTotalRxGood=pdnHdlcStatsTotalRxGood, pdnHdlcStatsTotalTxBufUnderrun=pdnHdlcStatsTotalTxBufUnderrun, pdnHdlcAFNs=pdnHdlcAFNs, pdnHdlcMIB=pdnHdlcMIB, pdnHdlcStatsTotalRxBadAddress=pdnHdlcStatsTotalRxBadAddress)
