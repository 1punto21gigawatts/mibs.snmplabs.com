#
# PySNMP MIB module SNMP553-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNMP553-ALARM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:08:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
snmp553s, = mibBuilder.importSymbols("SNMP553S-MGMT-MIB", "snmp553s")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Bits, iso, TimeTicks, Integer32, ModuleIdentity, NotificationType, Counter32, IpAddress, MibIdentifier, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Bits", "iso", "TimeTicks", "Integer32", "ModuleIdentity", "NotificationType", "Counter32", "IpAddress", "MibIdentifier", "Unsigned32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snmp553sTextAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 3, 9))
snmp553sTextAlarmMIBversion = MibScalar((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmp553sTextAlarmMIBversion.setStatus('mandatory')
if mibBuilder.loadTexts: snmp553sTextAlarmMIBversion.setDescription("Identifies the version of the MIB. The format of the version is x.yzT, where 'x' identifies the major revision number, 'y'identifies the minor revision number, 'z' identifies the typographical revision, and T identifies the test revision. Acceptable values for the individual revision components are as follows x: 1 - 9 y: 0 - 9 z: 0 - 9 T: A - Z Upon formal release, no designation for the test revision will be present.")
snmp553sTextAlarmGlobal = MibScalar((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmp553sTextAlarmGlobal.setStatus('mandatory')
if mibBuilder.loadTexts: snmp553sTextAlarmGlobal.setDescription('This globally enables and disables all text based TRAPs from an agent.')
snmp553sTextAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 3), )
if mibBuilder.loadTexts: snmp553sTextAlarmTable.setStatus('mandatory')
if mibBuilder.loadTexts: snmp553sTextAlarmTable.setDescription('The snmp553AlarmTable contains entries that report the status of alarms. The status of an alarm indicates whether the alarm is currently active or inactive. This information will be determined by the network element depending on the alarm threshold configuration. The structure of the table is such that alarm status is supported on a unit or interface basis, and then on an alarm type basis within the interface. For simplicity sake and to support the reporting of status of all alarms, a unit is treated as an interface in this table.')
snmp553sTextAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 3, 1), ).setIndexNames((0, "SNMP553-ALARM-MIB", "alarmNumber"))
if mibBuilder.loadTexts: snmp553sTextAlarmEntry.setStatus('mandatory')
if mibBuilder.loadTexts: snmp553sTextAlarmEntry.setDescription('An entry in the Alarm table.')
alarmNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alarmNumber.setStatus('mandatory')
if mibBuilder.loadTexts: alarmNumber.setDescription('The index value which uniquely identifies the interface to which this entry is applicable.')
description = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: description.setStatus('mandatory')
if mibBuilder.loadTexts: description.setDescription('The Description of the alarm generated.')
status = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 3, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('mandatory')
if mibBuilder.loadTexts: status.setDescription('The current status of the alarm. The value inactive(1) indicates that this alarm is currently inactive. The value active(2) indicates that this alarm is currently active.')
snmp553sTextAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 498, 6, 3) + (0,1)).setObjects(("SNMP553-ALARM-MIB", "description"), ("SNMP553-ALARM-MIB", "status"))
if mibBuilder.loadTexts: snmp553sTextAlarmTrap.setDescription('The snmp553 alarm trap. This trap is set whenever an alarm status change occurs to report an alarm. The variable bindings contain the description and status for each alarm that changes state. Note that the OBJECT IDENTIFIER of the variable contains the interface, family type, and alarm type of the alarm encoded within. More than one alarm can be sent in the trap, if the network element indicates that more than one has changed at the same time.')
mibBuilder.exportSymbols("SNMP553-ALARM-MIB", snmp553sTextAlarmEntry=snmp553sTextAlarmEntry, description=description, snmp553sTextAlarmTrap=snmp553sTextAlarmTrap, status=status, snmp553sTextAlarm=snmp553sTextAlarm, alarmNumber=alarmNumber, snmp553sTextAlarmTable=snmp553sTextAlarmTable, snmp553sTextAlarmGlobal=snmp553sTextAlarmGlobal, snmp553sTextAlarmMIBversion=snmp553sTextAlarmMIBversion)
