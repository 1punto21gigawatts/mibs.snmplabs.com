#
# PySNMP MIB module MSA2000TRAPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MSA2000TRAPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
connUnitEventDescr, connUnitEventId, connUnitEventType = mibBuilder.importSymbols("FCMGMT-MIB", "connUnitEventDescr", "connUnitEventId", "connUnitEventType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, Gauge32, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Integer32, MibIdentifier, Bits, TimeTicks, iso, IpAddress, Counter64, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Gauge32", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Integer32", "MibIdentifier", "Bits", "TimeTicks", "iso", "IpAddress", "Counter64", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpMSA = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 51))
mibName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 51, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibName.setStatus('mandatory')
if mibBuilder.loadTexts: mibName.setDescription('Product name')
msaEventInfoTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 51) + (0,3001)).setObjects(("FCMGMT-MIB", "connUnitEventId"), ("FCMGMT-MIB", "connUnitEventType"), ("FCMGMT-MIB", "connUnitEventDescr"))
if mibBuilder.loadTexts: msaEventInfoTrap.setDescription('An event has been generated by the storage array. Recommended severity level (for filtering): info')
msaEventWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 51) + (0,3002)).setObjects(("FCMGMT-MIB", "connUnitEventId"), ("FCMGMT-MIB", "connUnitEventType"), ("FCMGMT-MIB", "connUnitEventDescr"))
if mibBuilder.loadTexts: msaEventWarningTrap.setDescription('An event has been generated by the storage array. Recommended severity level (for filtering): warning')
msaEventErrorTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 51) + (0,3003)).setObjects(("FCMGMT-MIB", "connUnitEventId"), ("FCMGMT-MIB", "connUnitEventType"), ("FCMGMT-MIB", "connUnitEventDescr"))
if mibBuilder.loadTexts: msaEventErrorTrap.setDescription('An event has been generated by the storage array. Recommended severity level (for filtering): error')
msaEventCriticalTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 51) + (0,3004)).setObjects(("FCMGMT-MIB", "connUnitEventId"), ("FCMGMT-MIB", "connUnitEventType"), ("FCMGMT-MIB", "connUnitEventDescr"))
if mibBuilder.loadTexts: msaEventCriticalTrap.setDescription('An event has been generated by the storage array. Recommended severity level (for filtering): critical')
mibBuilder.exportSymbols("MSA2000TRAPS-MIB", hp=hp, msaEventErrorTrap=msaEventErrorTrap, msaEventInfoTrap=msaEventInfoTrap, hpMSA=hpMSA, msaEventCriticalTrap=msaEventCriticalTrap, msaEventWarningTrap=msaEventWarningTrap, mibName=mibName, nm=nm)
