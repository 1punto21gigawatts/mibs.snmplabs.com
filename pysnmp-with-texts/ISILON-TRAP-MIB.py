#
# PySNMP MIB module ISILON-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISILON-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:57:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
isilon, = mibBuilder.importSymbols("ISILON-MIB", "isilon")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, ObjectIdentity, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Unsigned32, MibIdentifier, iso, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Unsigned32", "MibIdentifier", "iso", "Counter32", "NotificationType", "Integer32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
isilonTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 12124, 250))
isilonTraps.setRevisions(('2015-04-08 00:00', '2013-06-21 00:00', '2013-03-21 00:00', '2012-09-21 00:00', '2012-08-01 00:00', '2012-05-23 00:00', '2012-04-30 00:00', '2011-09-29 00:00', '2009-11-12 00:00', '2009-11-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: isilonTraps.setRevisionsDescriptions(('MIB maintenance, added compliance groups and reorder positions, but not OIDs.', 'Traps for Isilon Systems CloudPools.', 'Added trap for missing required bootdisk mirror failures. Added: bootdiskMirrorReqMissingCrit', 'Updated some traps that were wrong. Removed: sasPhyErrorWarn, sasPhyErrorCrit Added: sasPhyErrorExpanderWarn, sasPhyErrorControllerWarn', 'Add instanceIdentifier to object list for all traps.', 'Renamed FlexProtectRunning* objects to be lower case per SMI/SNMP standards. Added OBJECTS list to traps. Minor cleanup and formatting.', 'Added traps for different priority job failures.', 'Added storage transport traps.', 'Reworked to align with the new event management and notification system', 'Initial revision.',))
if mibBuilder.loadTexts: isilonTraps.setLastUpdated('201512180000Z')
if mibBuilder.loadTexts: isilonTraps.setOrganization('Isilon Systems LLC')
if mibBuilder.loadTexts: isilonTraps.setContactInfo('Isilon Systems LLC Support phone: 1-800.782.4362 Support website: http://support.emc.com ')
if mibBuilder.loadTexts: isilonTraps.setDescription('Traps for Isilon Systems OneFS operating system.')
groupStateTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10))
filesystemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11))
smartQuotaTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 12))
snapshotTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 13))
syncIQTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 14))
softwareTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15))
avscanTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 16))
netProtoTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17))
networkingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 18))
hardwareTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19))
systemDiskTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20))
sensorTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21))
storageTransportTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 22))
cloudPoolsTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23))
upgradeTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24))
variables = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 50))
trapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 51))
trapCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 52))
nodeIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nodeIdentifier.setStatus('current')
if mibBuilder.loadTexts: nodeIdentifier.setDescription('The Logical Node Number of the node referenced in the notification. ')
measuredValue = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: measuredValue.setStatus('current')
if mibBuilder.loadTexts: measuredValue.setDescription('The measured value that triggered the event ')
units = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: units.setStatus('current')
if mibBuilder.loadTexts: units.setDescription('The units of the measurement ')
oid = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 4), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: oid.setStatus('current')
if mibBuilder.loadTexts: oid.setDescription('The OID of the sensor reporting a problem ')
bay = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bay.setStatus('current')
if mibBuilder.loadTexts: bay.setDescription('Drive bay number ')
ifName = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 6), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ifName.setStatus('current')
if mibBuilder.loadTexts: ifName.setDescription('Interface name ')
phy = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: phy.setStatus('current')
if mibBuilder.loadTexts: phy.setDescription('PHY connection ')
errorMessage = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: errorMessage.setStatus('current')
if mibBuilder.loadTexts: errorMessage.setDescription('Error message ')
errno = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: errno.setStatus('current')
if mibBuilder.loadTexts: errno.setDescription('Error number ')
stringArg = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 10), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: stringArg.setStatus('current')
if mibBuilder.loadTexts: stringArg.setDescription('A trap-related string argument. ')
message = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: message.setStatus('current')
if mibBuilder.loadTexts: message.setDescription('A trap-related message string. ')
i64Arg = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 12), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: i64Arg.setStatus('current')
if mibBuilder.loadTexts: i64Arg.setDescription('Error number ')
i32Arg = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 13), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: i32Arg.setStatus('current')
if mibBuilder.loadTexts: i32Arg.setDescription('Integer argument ')
measuredValueStr = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 14), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: measuredValueStr.setStatus('current')
if mibBuilder.loadTexts: measuredValueStr.setDescription('The measured value that triggered the event represented as string ')
instanceIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 15), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: instanceIdentifier.setStatus('current')
if mibBuilder.loadTexts: instanceIdentifier.setDescription('Instance ID of event generating the trap ')
deviceIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 12124, 250, 50, 16), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: deviceIdentifier.setStatus('current')
if mibBuilder.loadTexts: deviceIdentifier.setDescription('The Device Node Number of the node referenced in the notification. ')
nodeStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 1))
nodeStatusCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 1, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeStatusCrit.setStatus('current')
if mibBuilder.loadTexts: nodeStatusCrit.setDescription('A critical node status event has occurred. ')
nodeStatusInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 1, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeStatusInfo.setStatus('current')
if mibBuilder.loadTexts: nodeStatusInfo.setDescription('A node status event has occurred. ')
nodeExpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 2))
nodeExpStatusCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 2, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeExpStatusCrit.setStatus('current')
if mibBuilder.loadTexts: nodeExpStatusCrit.setDescription('A disk-only node has gone offline and cannot be contacted by the cluster. ')
nodeShutdown = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 3))
nodeShutdownInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 3, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeShutdownInfo.setStatus('current')
if mibBuilder.loadTexts: nodeShutdownInfo.setDescription('A node is being shut down or rebooted. ')
nodeShutdownFail = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 4))
nodeShutdownFailCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 4, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeShutdownFailCrit.setStatus('current')
if mibBuilder.loadTexts: nodeShutdownFailCrit.setDescription('Shut down or reboot failed for a node. ')
nodeRebootCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 20))
nodeRebootCoalescedInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 20, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeRebootCoalescedInfo.setStatus('current')
if mibBuilder.loadTexts: nodeRebootCoalescedInfo.setDescription('A node is being rebooted. ')
nodeStatusCoalescing = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 10, 21))
nodeStatusCoalescingCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 21, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeStatusCoalescingCrit.setStatus('current')
if mibBuilder.loadTexts: nodeStatusCoalescingCrit.setDescription('Critical node status events are occurring ')
nodeStatusCoalescingWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 10, 21, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeStatusCoalescingWarn.setStatus('current')
if mibBuilder.loadTexts: nodeStatusCoalescingWarn.setDescription('Warning node status events are occurring ')
partitionUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 1))
partitionUsageCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 1, 3)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: partitionUsageCrit.setStatus('current')
if mibBuilder.loadTexts: partitionUsageCrit.setDescription('A partition is over the critical threshold percentage. ')
partitionUsageWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 1, 5)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: partitionUsageWarn.setStatus('current')
if mibBuilder.loadTexts: partitionUsageWarn.setDescription('A partition is over the warning threshold percentage. ')
partitionUsageInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 1, 7)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: partitionUsageInfo.setStatus('current')
if mibBuilder.loadTexts: partitionUsageInfo.setDescription('A partition is over the info threshold percentage. ')
clusterStorageUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 2))
clusterStorageUsageCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: clusterStorageUsageCrit.setStatus('current')
if mibBuilder.loadTexts: clusterStorageUsageCrit.setDescription('The /ifs partition is near capacity. ')
clusterStorageUsageWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 2, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: clusterStorageUsageWarn.setStatus('current')
if mibBuilder.loadTexts: clusterStorageUsageWarn.setDescription('The /ifs partition is near capacity. ')
filesysError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 3))
filesysErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 3, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: filesysErrorCrit.setStatus('current')
if mibBuilder.loadTexts: filesysErrorCrit.setDescription('A critical /ifs filesystem error has occurred ')
filesysErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 3, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: filesysErrorWarn.setStatus('current')
if mibBuilder.loadTexts: filesysErrorWarn.setDescription('A warning-level /ifs filesystem error has occurred ')
filesysErrorInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 3, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: filesysErrorInfo.setStatus('current')
if mibBuilder.loadTexts: filesysErrorInfo.setDescription('An /ifs filesystem error has occurred. ')
diskPoolUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 4))
diskPoolUsageCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 4, 3)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskPoolUsageCrit.setStatus('current')
if mibBuilder.loadTexts: diskPoolUsageCrit.setDescription('A disk pool is near capacity. ')
diskPoolUsageWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 4, 5)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskPoolUsageWarn.setStatus('current')
if mibBuilder.loadTexts: diskPoolUsageWarn.setDescription('A disk pool is near capacity. ')
diskPoolOldDbVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 5))
diskPoolOldDbVersionWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 5, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskPoolOldDbVersionWarn.setStatus('current')
if mibBuilder.loadTexts: diskPoolOldDbVersionWarn.setDescription('The SmartPools upgrade has not completed. ')
ssdUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 6))
ssdUsageCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 6, 1)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: ssdUsageCrit.setStatus('current')
if mibBuilder.loadTexts: ssdUsageCrit.setDescription('The SSD drives are at capacity. ')
ssdUsageWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 6, 2)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: ssdUsageWarn.setStatus('current')
if mibBuilder.loadTexts: ssdUsageWarn.setDescription('The SSD drives are near capacity. ')
ssdUsageInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 6, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: ssdUsageInfo.setStatus('current')
if mibBuilder.loadTexts: ssdUsageInfo.setDescription('The SSD drives are near capacity. ')
filesysCoalesce = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 11, 20))
filesysCoalesceCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: filesysCoalesceCrit.setStatus('current')
if mibBuilder.loadTexts: filesysCoalesceCrit.setDescription('Filesystem issues are occurring at a critical level ')
filesysCoalesceWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 11, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: filesysCoalesceWarn.setStatus('current')
if mibBuilder.loadTexts: filesysCoalesceWarn.setDescription('Filesystem issues are occurring at a warning level ')
quotaThreshError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 12, 1))
quotaThreshErrorInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 12, 1, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: quotaThreshErrorInfo.setStatus('current')
if mibBuilder.loadTexts: quotaThreshErrorInfo.setDescription('SmartQuotas threshold violation ')
quotaNotifyError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 12, 2))
quotaNotifyErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 12, 2, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: quotaNotifyErrorWarn.setStatus('current')
if mibBuilder.loadTexts: quotaNotifyErrorWarn.setDescription('SmartQuotas threshold notification failed ')
quotaError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 12, 3))
quotaErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 12, 3, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: quotaErrorWarn.setStatus('current')
if mibBuilder.loadTexts: quotaErrorWarn.setDescription('SmartQuotas error ')
snapshotError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 13, 1))
snapshotErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 13, 1, 5)).setObjects(("ISILON-TRAP-MIB", "errno"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: snapshotErrorWarn.setStatus('current')
if mibBuilder.loadTexts: snapshotErrorWarn.setDescription('Snapshot error ')
snapshotReserve = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 13, 2))
snapshotReserveCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 13, 2, 3)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: snapshotReserveCrit.setStatus('current')
if mibBuilder.loadTexts: snapshotReserveCrit.setDescription('Snapshot reserve space is over its critical limit ')
snapshotReserveWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 13, 2, 5)).setObjects(("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: snapshotReserveWarn.setStatus('current')
if mibBuilder.loadTexts: snapshotReserveWarn.setDescription('Snapshot reserve space is over its warning limit ')
siqEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 14, 1))
siqEventCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 1, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqEventCrit.setStatus('current')
if mibBuilder.loadTexts: siqEventCrit.setDescription('SyncIQ event ')
siqEventWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 1, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqEventWarn.setStatus('current')
if mibBuilder.loadTexts: siqEventWarn.setDescription('SyncIQ event ')
siqError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 14, 2))
siqErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 2, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqErrorWarn.setStatus('current')
if mibBuilder.loadTexts: siqErrorWarn.setDescription('SyncIQ error ')
siqPolicyCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 14, 20))
siqPolicyCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqPolicyCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: siqPolicyCoalescedCrit.setDescription('SyncIQ policy errors are occurring ')
siqPolicyCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqPolicyCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: siqPolicyCoalescedWarn.setDescription('SyncIQ policy errors are occurring ')
siqTargetCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 14, 21))
siqTargetCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 21, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqTargetCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: siqTargetCoalescedCrit.setDescription('SyncIQ errors are occurring for target ')
siqTargetCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 14, 21, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: siqTargetCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: siqTargetCoalescedWarn.setDescription('SyncIQ errors are occurring for target ')
jobEngineError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 1))
jobEngineErrorEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 1, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: jobEngineErrorEmerg.setStatus('current')
if mibBuilder.loadTexts: jobEngineErrorEmerg.setDescription('The cluster encountered one or more job failures. ')
jobEngineErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 1, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: jobEngineErrorCrit.setStatus('current')
if mibBuilder.loadTexts: jobEngineErrorCrit.setDescription('The cluster encountered one or more job failures. ')
jobEngineErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 1, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: jobEngineErrorWarn.setStatus('current')
if mibBuilder.loadTexts: jobEngineErrorWarn.setDescription('The cluster encountered one or more job failures. ')
jobEngineErrorInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 1, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: jobEngineErrorInfo.setStatus('current')
if mibBuilder.loadTexts: jobEngineErrorInfo.setDescription('The cluster encountered one or more job failures. ')
flexProtectRunning = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 2))
flexProtectRunningCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: flexProtectRunningCrit.setStatus('current')
if mibBuilder.loadTexts: flexProtectRunningCrit.setDescription('Cluster is in need of restripe but FlexProtect is not running ')
flexProtectRunningWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 2, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: flexProtectRunningWarn.setStatus('current')
if mibBuilder.loadTexts: flexProtectRunningWarn.setDescription('Cluster is in need of restripe but FlexProtect is not running ')
flexProtectRunningInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 2, 7)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: flexProtectRunningInfo.setStatus('current')
if mibBuilder.loadTexts: flexProtectRunningInfo.setDescription('Cluster is in need of restripe but FlexProtect is not running ')
mcpProcFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 5))
mcpProcFailedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 5, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: mcpProcFailedWarn.setStatus('current')
if mibBuilder.loadTexts: mcpProcFailedWarn.setDescription('MCP reports a process has failed on a node ')
mcpProcKilled = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 6))
mcpProcKilledWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 6, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: mcpProcKilledWarn.setStatus('current')
if mibBuilder.loadTexts: mcpProcKilledWarn.setDescription('MCP killed a process on a node ')
licenseExpiration = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 7))
licenseExpirationWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 7, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: licenseExpirationWarn.setStatus('current')
if mibBuilder.loadTexts: licenseExpirationWarn.setDescription('One or more licenses has expired ')
licenseExpirationInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 7, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: licenseExpirationInfo.setStatus('current')
if mibBuilder.loadTexts: licenseExpirationInfo.setDescription('One or more licenses is about to expire ')
firmwareUpdateIncomplete = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 8))
firmwareUpdateIncompleteWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 8, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: firmwareUpdateIncompleteWarn.setStatus('current')
if mibBuilder.loadTexts: firmwareUpdateIncompleteWarn.setDescription('A firmware update was not completely applied ')
testEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 9))
testEventCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 9, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: testEventCrit.setStatus('current')
if mibBuilder.loadTexts: testEventCrit.setDescription('Test event ')
nodeCPU = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 10))
nodeCPUWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 10, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeCPUWarn.setStatus('current')
if mibBuilder.loadTexts: nodeCPUWarn.setDescription('A node has exceeded the Warning-level CPU utilization. ')
nodeCPUInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 10, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nodeCPUInfo.setStatus('current')
if mibBuilder.loadTexts: nodeCPUInfo.setDescription('A node has exceeded the Info-level CPU utilization. ')
mountdClientMountFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 11))
mountdClientMountFailedInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 11, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: mountdClientMountFailedInfo.setStatus('current')
if mibBuilder.loadTexts: mountdClientMountFailedInfo.setDescription('Mountd denied client mount request ')
mountdHostLookupFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 12))
mountdHostLookupFailedInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 12, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: mountdHostLookupFailedInfo.setStatus('current')
if mibBuilder.loadTexts: mountdHostLookupFailedInfo.setDescription('Mountd host lookup failed ')
nfsCookieTranslationFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 15))
nfsCookieTranslationFailedInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 15, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: nfsCookieTranslationFailedInfo.setStatus('current')
if mibBuilder.loadTexts: nfsCookieTranslationFailedInfo.setDescription('64bit to 32bit cookie translation failed')
mixedSedNonSedCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 13))
mixedSedNonSedClusterCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 13, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: mixedSedNonSedClusterCrit.setStatus('current')
if mibBuilder.loadTexts: mixedSedNonSedClusterCrit.setDescription('Cluster contains a mix of encrypting nodes and non-encrypting nodes ')
avscanNoServersConf = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 16, 1))
avscanNoServersConfCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 1, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanNoServersConfCrit.setStatus('current')
if mibBuilder.loadTexts: avscanNoServersConfCrit.setDescription('No ICAP servers configured for AVScan ')
avscanNoServersConfWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 1, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanNoServersConfWarn.setStatus('current')
if mibBuilder.loadTexts: avscanNoServersConfWarn.setDescription('No ICAP servers configured for AVScan ')
avscanNoServersConfInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 1, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanNoServersConfInfo.setStatus('current')
if mibBuilder.loadTexts: avscanNoServersConfInfo.setDescription('No ICAP servers configured for AVScan ')
avscanError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 16, 2))
avscanErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanErrorCrit.setStatus('current')
if mibBuilder.loadTexts: avscanErrorCrit.setDescription('AVscan has encountered an error ')
avscanErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 2, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanErrorWarn.setStatus('current')
if mibBuilder.loadTexts: avscanErrorWarn.setDescription('AVscan has encountered an error ')
avscanErrorInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 2, 7)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanErrorInfo.setStatus('current')
if mibBuilder.loadTexts: avscanErrorInfo.setDescription('AVscan has encountered an error ')
avscanInfectedFile = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 15, 3))
avscanInfectedFileCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 3, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanInfectedFileCrit.setStatus('current')
if mibBuilder.loadTexts: avscanInfectedFileCrit.setDescription('AVScan found an infected file ')
avscanInfectedFileWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 3, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanInfectedFileWarn.setStatus('current')
if mibBuilder.loadTexts: avscanInfectedFileWarn.setDescription('AVScan found an infected file ')
avscanInfectedFileInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 15, 3, 7)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanInfectedFileInfo.setStatus('current')
if mibBuilder.loadTexts: avscanInfectedFileInfo.setDescription('AVScan found an infected file ')
avscanCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 16, 20))
avscanCoalescedInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanCoalescedInfo.setStatus('current')
if mibBuilder.loadTexts: avscanCoalescedInfo.setDescription('AVScan is detecting problems ')
avscanCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: avscanCoalescedWarn.setDescription('AVScan is detecting problems ')
avscanCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 16, 20, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: avscanCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: avscanCoalescedCrit.setDescription('AVscan is detecting critical problems ')
clockSkew = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 1))
clockSkewCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 1, 3)).setObjects(("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: clockSkewCrit.setStatus('current')
if mibBuilder.loadTexts: clockSkewCrit.setDescription('Windows ADS time skew outside limits. ')
sharePermsUpgradeFail = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 2))
sharePermsUpgradeFailCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sharePermsUpgradeFailCrit.setStatus('current')
if mibBuilder.loadTexts: sharePermsUpgradeFailCrit.setDescription('Windows share permissions upgrade failed ')
winTimeConnectivityLost = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 3))
winTimeConnectivityLostWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 3, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winTimeConnectivityLostWarn.setStatus('current')
if mibBuilder.loadTexts: winTimeConnectivityLostWarn.setDescription('Connectivity to the Windows Time server was lost ')
winNetMapFull = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 4))
winNetMapFullCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 4, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winNetMapFullCrit.setStatus('current')
if mibBuilder.loadTexts: winNetMapFullCrit.setDescription('Windows ID map range is full. Authentication may fail. ')
winNetAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 5))
winNetAuthCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 5, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winNetAuthCrit.setStatus('current')
if mibBuilder.loadTexts: winNetAuthCrit.setDescription('Active Directory connectivity failure ')
winNetAuthWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 5, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winNetAuthWarn.setStatus('current')
if mibBuilder.loadTexts: winNetAuthWarn.setDescription('Active Directory connectivity issue ')
lwioParam = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 6))
lwioParamCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 6, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: lwioParamCrit.setStatus('current')
if mibBuilder.loadTexts: lwioParamCrit.setDescription('LWIO Parameter Invalid ')
winSmbUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 7))
winSmbUpgradeWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 7, 2)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winSmbUpgradeWarn.setStatus('current')
if mibBuilder.loadTexts: winSmbUpgradeWarn.setDescription('Windows networking ')
winSmbUpgradeCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 7, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winSmbUpgradeCrit.setStatus('current')
if mibBuilder.loadTexts: winSmbUpgradeCrit.setDescription('Windows networking ')
winNetworkCoalesce = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 20))
winNetworkCoalesceCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winNetworkCoalesceCrit.setStatus('current')
if mibBuilder.loadTexts: winNetworkCoalesceCrit.setDescription('There are problems with Windows networking components ')
winNetworkCoalesceWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winNetworkCoalesceWarn.setStatus('current')
if mibBuilder.loadTexts: winNetworkCoalesceWarn.setDescription('There are problems with Windows networking components ')
winIDmapCoalesce = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 21))
winIDmapCoalesceCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 21, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winIDmapCoalesceCrit.setStatus('current')
if mibBuilder.loadTexts: winIDmapCoalesceCrit.setDescription('There are problems with the Windows ID map ')
winIDmapCoalesceWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 21, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winIDmapCoalesceWarn.setStatus('current')
if mibBuilder.loadTexts: winIDmapCoalesceWarn.setDescription('There are problems with the Windows ID map ')
winAuthCoalesce = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 22))
winAuthCoalesceCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 22, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winAuthCoalesceCrit.setStatus('current')
if mibBuilder.loadTexts: winAuthCoalesceCrit.setDescription('There are problems with Windows authentication components ')
winAuthCoalesceWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 22, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winAuthCoalesceWarn.setStatus('current')
if mibBuilder.loadTexts: winAuthCoalesceWarn.setDescription('There are problems with Windows authentication components ')
winAuthUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 17, 23))
winAuthUpgradeCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 17, 23, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: winAuthUpgradeCrit.setStatus('current')
if mibBuilder.loadTexts: winAuthUpgradeCrit.setDescription('There are problems with upgrading authentication components ')
netStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 18, 1))
netStatusCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 18, 1, 3)).setObjects(("ISILON-TRAP-MIB", "ifName"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: netStatusCrit.setStatus('current')
if mibBuilder.loadTexts: netStatusCrit.setDescription('A network interface is down ')
netStatusWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 18, 1, 5)).setObjects(("ISILON-TRAP-MIB", "ifName"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: netStatusWarn.setStatus('current')
if mibBuilder.loadTexts: netStatusWarn.setDescription('A network interface is degraded or down ')
netStatusCoalescing = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 18, 20))
netStatusCoalescingCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 18, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: netStatusCoalescingCrit.setStatus('current')
if mibBuilder.loadTexts: netStatusCoalescingCrit.setDescription('Critical network problems are occurring ')
netStatusCoalescingWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 18, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: netStatusCoalescingWarn.setStatus('current')
if mibBuilder.loadTexts: netStatusCoalescingWarn.setDescription('Warning network problems are occurring ')
hardwareError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1))
hardwareErrorMsg = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 1))
hardwareErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareErrorCrit.setStatus('current')
if mibBuilder.loadTexts: hardwareErrorCrit.setDescription('A critical hardware error has occurred. ')
hardwareErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareErrorWarn.setStatus('current')
if mibBuilder.loadTexts: hardwareErrorWarn.setDescription('A node has a hardware error ')
hardwareErrorInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareErrorInfo.setStatus('current')
if mibBuilder.loadTexts: hardwareErrorInfo.setDescription('A hardware problem is occurring. ')
hardwareErrorMsgCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 1, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareErrorMsgCrit.setStatus('current')
if mibBuilder.loadTexts: hardwareErrorMsgCrit.setDescription('There is a message concerning a hardware faliure ')
hardwareErrorMsgWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 1, 1, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareErrorMsgWarn.setStatus('current')
if mibBuilder.loadTexts: hardwareErrorMsgWarn.setDescription('There is a message concerning a potential hardware faliure ')
hwError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 2))
hwErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 2, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwErrorCrit.setStatus('current')
if mibBuilder.loadTexts: hwErrorCrit.setDescription('Power Supply AC Failiure. ')
diskNodeOffline = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 10))
diskNodeOfflineCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 10, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskNodeOfflineCrit.setStatus('current')
if mibBuilder.loadTexts: diskNodeOfflineCrit.setDescription('The expander is offline ')
hardwareCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 20))
hardwareCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 20, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: hardwareCoalescedEmerg.setDescription('There are hardware issues on a node ')
hardwareCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: hardwareCoalescedCrit.setDescription('There are hardware issues on a node ')
hardwareCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hardwareCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: hardwareCoalescedWarn.setDescription('There are hardware issues on a node ')
sasPhyError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 22, 1))
sasPhyErrorExpanderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 22, 1, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sasPhyErrorExpanderWarn.setStatus('current')
if mibBuilder.loadTexts: sasPhyErrorExpanderWarn.setDescription('A SAS PHY error was detected in the expander. ')
sasPhyErrorControllerWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 22, 1, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sasPhyErrorControllerWarn.setStatus('current')
if mibBuilder.loadTexts: sasPhyErrorControllerWarn.setDescription('A SAS PHY error was detected in the controller. ')
driveStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20, 1))
driveStatusInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 1, 1)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "bay"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: driveStatusInfo.setStatus('current')
if mibBuilder.loadTexts: driveStatusInfo.setDescription('A node has detected a problem with a drive ')
driveStatusCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 1, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "bay"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: driveStatusCrit.setStatus('current')
if mibBuilder.loadTexts: driveStatusCrit.setDescription('A node has detected a problem with a drive ')
driveStatusWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 1, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "bay"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: driveStatusWarn.setStatus('current')
if mibBuilder.loadTexts: driveStatusWarn.setDescription('A node has detected a problem with a drive ')
bootDiskFail = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20, 2))
bootDiskFailCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 2, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: bootDiskFailCrit.setStatus('current')
if mibBuilder.loadTexts: bootDiskFailCrit.setDescription('Unhealthy boot disks, mirror is degraded. ')
bootDiskFailWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 2, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: bootDiskFailWarn.setStatus('current')
if mibBuilder.loadTexts: bootDiskFailWarn.setDescription('Unhealthy boot disks, mirror is degraded. ')
diskError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20, 3))
diskErrorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 3, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskErrorWarn.setStatus('current')
if mibBuilder.loadTexts: diskErrorWarn.setDescription("A node's disks are having problems ")
bootDiskMirrorReqMissing = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20, 4))
bootdiskMirrorReqMissingCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 4, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: bootdiskMirrorReqMissingCrit.setStatus('current')
if mibBuilder.loadTexts: bootdiskMirrorReqMissingCrit.setDescription('Error creating mirror on bootdisks. ')
diskErrorCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 20, 20))
diskErrorCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 20, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskErrorCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: diskErrorCoalescedCrit.setDescription("A node's disks are having critical problems ")
diskErrorCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 20, 20, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: diskErrorCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: diskErrorCoalescedWarn.setDescription("A node's disks are having warning level problems ")
hwPwrSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1))
hwPwrSupplyOver = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 1))
hwPwrSupplyOverCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 1, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPwrSupplyOverCrit.setStatus('current')
if mibBuilder.loadTexts: hwPwrSupplyOverCrit.setDescription('Power supply current over critical threshold ')
hwPwrSupplyOverWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 1, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPwrSupplyOverWarn.setStatus('current')
if mibBuilder.loadTexts: hwPwrSupplyOverWarn.setDescription('Power supply current over warning threshold ')
hwPwrSupplyUnder = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 2))
hwPwrSupplyUnderCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 2, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPwrSupplyUnderCrit.setStatus('current')
if mibBuilder.loadTexts: hwPwrSupplyUnderCrit.setDescription('Power supply current under critical threshold ')
hwPwrSupplyUnderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 1, 2, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPwrSupplyUnderWarn.setStatus('current')
if mibBuilder.loadTexts: hwPwrSupplyUnderWarn.setDescription('Power supply current under warning threshold ')
hwFan = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2))
hwFanOver = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 1))
hwFanOverCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 1, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanOverCrit.setStatus('current')
if mibBuilder.loadTexts: hwFanOverCrit.setDescription("A node's fan is over critical threshold ")
hwFanOverWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 1, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanOverWarn.setStatus('current')
if mibBuilder.loadTexts: hwFanOverWarn.setDescription("A node's fan is over warning threshold ")
hwFanOverInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 1, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanOverInfo.setStatus('current')
if mibBuilder.loadTexts: hwFanOverInfo.setDescription("A node's fan is over warning threshold ")
hwFanUnder = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 2))
hwFanUnderCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 2, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanUnderCrit.setStatus('current')
if mibBuilder.loadTexts: hwFanUnderCrit.setDescription("A node's fan is under critical threshold ")
hwFanUnderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 2, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanUnderWarn.setStatus('current')
if mibBuilder.loadTexts: hwFanUnderWarn.setDescription("A node's fan is under warning threshold ")
hwFanUnderInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 2, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanUnderInfo.setStatus('current')
if mibBuilder.loadTexts: hwFanUnderInfo.setDescription("A node's fan is under warning threshold ")
hwFanCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanCrit.setStatus('current')
if mibBuilder.loadTexts: hwFanCrit.setDescription("A node's fan failed ")
hwFanWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 2, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwFanWarn.setStatus('current')
if mibBuilder.loadTexts: hwFanWarn.setDescription("A node's fan monitor is about to fail ")
hwVoltage = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10))
hwVoltageOver = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 1))
hwVoltageOverCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 1, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageOverCrit.setStatus('current')
if mibBuilder.loadTexts: hwVoltageOverCrit.setDescription("A node's voltage is over critical threshold ")
hwVoltageOverWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 1, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageOverWarn.setStatus('current')
if mibBuilder.loadTexts: hwVoltageOverWarn.setDescription("A node's voltage is over warning threshold ")
hwVoltageOverInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 1, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageOverInfo.setStatus('current')
if mibBuilder.loadTexts: hwVoltageOverInfo.setDescription("A node's voltage is over a threshold ")
hwVoltageUnder = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 2))
hwVoltageUnderCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 2, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageUnderCrit.setStatus('current')
if mibBuilder.loadTexts: hwVoltageUnderCrit.setDescription("A node's voltage is under critical threshold ")
hwVoltageUnderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 2, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageUnderWarn.setStatus('current')
if mibBuilder.loadTexts: hwVoltageUnderWarn.setDescription("A node's voltage is under warning threshold ")
hwVoltageUnderInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 10, 2, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwVoltageUnderInfo.setStatus('current')
if mibBuilder.loadTexts: hwVoltageUnderInfo.setDescription("A node's voltage is under a threshold ")
hwTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11))
hwTempOver = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 1))
hwTempOverEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 1, 1)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempOverEmerg.setStatus('current')
if mibBuilder.loadTexts: hwTempOverEmerg.setDescription("A node's temperature is over emergency threshold ")
hwTempOverCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 1, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempOverCrit.setStatus('current')
if mibBuilder.loadTexts: hwTempOverCrit.setDescription("A node's temperature is over critical threshold ")
hwTempOverWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 1, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempOverWarn.setStatus('current')
if mibBuilder.loadTexts: hwTempOverWarn.setDescription("A node's temperature is over warning threshold ")
hwTempOverInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 1, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempOverInfo.setStatus('current')
if mibBuilder.loadTexts: hwTempOverInfo.setDescription("A node's temperature is over a threshold ")
hwTempUnder = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 2))
hwTempUnderEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 2, 1)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempUnderEmerg.setStatus('current')
if mibBuilder.loadTexts: hwTempUnderEmerg.setDescription("A node's temperature is under emergency threshold ")
hwTempUnderCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 2, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempUnderCrit.setStatus('current')
if mibBuilder.loadTexts: hwTempUnderCrit.setDescription("A node's temperature is under critical threshold ")
hwTempUnderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 2, 5)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempUnderWarn.setStatus('current')
if mibBuilder.loadTexts: hwTempUnderWarn.setDescription("A node's temperature is under warning threshold ")
hwTempUnderInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 11, 2, 7)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwTempUnderInfo.setStatus('current')
if mibBuilder.loadTexts: hwTempUnderInfo.setDescription("A node's temperature is under a threshold ")
hwPower = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 12))
hwPowerCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 12, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPowerCrit.setStatus('current')
if mibBuilder.loadTexts: hwPowerCrit.setDescription('A node has a power supply problem ')
hwPowerWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 12, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwPowerWarn.setStatus('current')
if mibBuilder.loadTexts: hwPowerWarn.setDescription('A node has a power supply monitoring problem ')
hwMem = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 13))
hwMemCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 13, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwMemCrit.setStatus('current')
if mibBuilder.loadTexts: hwMemCrit.setDescription('A node is low on memory ')
hwCpuThrottle = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 14))
hwCpuThrottleCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 14, 3)).setObjects(("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCpuThrottleCrit.setStatus('current')
if mibBuilder.loadTexts: hwCpuThrottleCrit.setDescription('A node is at 100% CPU utilization ')
sensorMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 15))
sensorMonitorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 15, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sensorMonitorCrit.setStatus('current')
if mibBuilder.loadTexts: sensorMonitorCrit.setDescription('A sensor failed ')
sensorMonitorWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 15, 2)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sensorMonitorWarn.setStatus('current')
if mibBuilder.loadTexts: sensorMonitorWarn.setDescription('A sensor is failing ')
sensorCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 50))
sensorCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 50, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sensorCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: sensorCoalescedEmerg.setDescription('There are sensor issues on a node ')
sensorCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 50, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sensorCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: sensorCoalescedCrit.setDescription('There are sensor issues on a node ')
sensorCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 50, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: sensorCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: sensorCoalescedWarn.setDescription('There are sensor issues on a node ')
fanCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 51))
fanCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 51, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: fanCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: fanCoalescedEmerg.setDescription('There are fan issues on a node ')
fanCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 51, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: fanCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: fanCoalescedCrit.setDescription('There are fan issues on a node ')
fanCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 51, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: fanCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: fanCoalescedWarn.setDescription('There are fan issues on a node ')
tempCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 52))
tempCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 52, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: tempCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: tempCoalescedEmerg.setDescription('There are temp issues on a node ')
tempCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 52, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: tempCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: tempCoalescedCrit.setDescription('There are temp issues on a node ')
tempCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 52, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: tempCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: tempCoalescedWarn.setDescription('There are temp issues on a node ')
voltsCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 19, 53))
voltsCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 53, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: voltsCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: voltsCoalescedEmerg.setDescription('There are voltage issues on a node ')
voltsCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 53, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: voltsCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: voltsCoalescedCrit.setDescription('There are voltage issues on a node ')
voltsCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 19, 53, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: voltsCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: voltsCoalescedWarn.setDescription('There are voltage issues on a node ')
hwCurrent = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16))
hwCurrentOver = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 1))
hwCurrentOverEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 1, 1)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentOverEmerg.setStatus('current')
if mibBuilder.loadTexts: hwCurrentOverEmerg.setDescription("A node's current is over emergency threshold ")
hwCurrentOverCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 1, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentOverCrit.setStatus('current')
if mibBuilder.loadTexts: hwCurrentOverCrit.setDescription("A node's current is over critical threshold ")
hwCurrentOverWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 1, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentOverWarn.setStatus('current')
if mibBuilder.loadTexts: hwCurrentOverWarn.setDescription("A node's current is over warning threshold ")
hwCurrentOverInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 1, 7)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentOverInfo.setStatus('current')
if mibBuilder.loadTexts: hwCurrentOverInfo.setDescription("A node's current is over a threshold ")
hwCurrentUnder = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 2))
hwCurrentUnderEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 2, 1)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentUnderEmerg.setStatus('current')
if mibBuilder.loadTexts: hwCurrentUnderEmerg.setDescription("A node's current is under emergency threshold ")
hwCurrentUnderCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentUnderCrit.setStatus('current')
if mibBuilder.loadTexts: hwCurrentUnderCrit.setDescription("A node's current is under critical threshold ")
hwCurrentUnderWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 2, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentUnderWarn.setStatus('current')
if mibBuilder.loadTexts: hwCurrentUnderWarn.setDescription("A node's current is under warning threshold ")
hwCurrentUnderInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 21, 16, 2, 7)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: hwCurrentUnderInfo.setStatus('current')
if mibBuilder.loadTexts: hwCurrentUnderInfo.setDescription("A node's current is under a threshold ")
storageTransportCoalesced = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 22, 2))
storageTransportCoalescedEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 22, 2, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: storageTransportCoalescedEmerg.setStatus('current')
if mibBuilder.loadTexts: storageTransportCoalescedEmerg.setDescription('There are storage transport issues on a node ')
storageCoalescedCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 22, 2, 3)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: storageCoalescedCrit.setStatus('current')
if mibBuilder.loadTexts: storageCoalescedCrit.setDescription('There are storage transport issues on a node ')
storageCoalescedWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 22, 2, 5)).setObjects(("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: storageCoalescedWarn.setStatus('current')
if mibBuilder.loadTexts: storageCoalescedWarn.setDescription('There are storage transport issues on a node ')
cloudpoolNetworkError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 1))
cloudpoolNetworkErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 1, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "deviceIdentifier"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolNetworkErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolNetworkErrorCrit.setDescription('CloudPools network issues ')
cloudpoolAuthenticationError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 2))
cloudpoolAuthenticationErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 2, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolAuthenticationErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolAuthenticationErrorCrit.setDescription('CloudPools authentication issues ')
cloudpoolAuthorizationError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 3))
cloudpoolAuthorizationErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 3, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolAuthorizationErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolAuthorizationErrorCrit.setDescription('CloudPools authorization issues ')
cloudpoolBucketNotFoundError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 4))
cloudpoolBucketNotFoundErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 4, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolBucketNotFoundErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolBucketNotFoundErrorCrit.setDescription('CloudPools bucket not found issues ')
cloudpoolObjectNotFoundError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 5))
cloudpoolObjectNotFoundErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 5, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolObjectNotFoundErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolObjectNotFoundErrorCrit.setDescription('CloudPools Object not found issues ')
cloudpoolDataCorruptionIntegrityError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 6))
cloudpoolDataCorruptionIntegrityErrorEmerg = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 6, 1)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolDataCorruptionIntegrityErrorEmerg.setStatus('current')
if mibBuilder.loadTexts: cloudpoolDataCorruptionIntegrityErrorEmerg.setDescription('CloudPools data corruption integrity emergency issues ')
cloudpoolNoUsableAccountFoundError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 7))
cloudpoolNoUsableAccountFoundErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 7, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolNoUsableAccountFoundErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolNoUsableAccountFoundErrorCrit.setDescription('CloudPools no usable account found for the policy, cloudpool ')
cloudpoolCertificateError = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 23, 8))
cloudpoolCertificateErrorCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 23, 8, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "instanceIdentifier"))
if mibBuilder.loadTexts: cloudpoolCertificateErrorCrit.setStatus('current')
if mibBuilder.loadTexts: cloudpoolCertificateErrorCrit.setDescription('CloudPools Certificate issues ')
upgradeStart = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24, 1))
upgradeStartInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 1, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeStartInfo.setStatus('current')
if mibBuilder.loadTexts: upgradeStartInfo.setDescription('An upgrade or rollback has been started.')
upgradeFinish = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24, 2))
upgradeFinishInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 2, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeFinishInfo.setStatus('current')
if mibBuilder.loadTexts: upgradeFinishInfo.setDescription('An upgrade or rollback has finished.')
upgradeClusterEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24, 3))
upgradeClusterEventCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 3, 3)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeClusterEventCrit.setStatus('current')
if mibBuilder.loadTexts: upgradeClusterEventCrit.setDescription('Upgrade cluster event.')
upgradeClusterEventWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 3, 5)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeClusterEventWarn.setStatus('current')
if mibBuilder.loadTexts: upgradeClusterEventWarn.setDescription('Upgrade cluster event.')
upgradeClusterEventInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 3, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeClusterEventInfo.setStatus('current')
if mibBuilder.loadTexts: upgradeClusterEventInfo.setDescription('Upgrade cluster event.')
upgradeNodeEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24, 4))
upgradeNodeEventCrit = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 4, 3)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeNodeEventCrit.setStatus('current')
if mibBuilder.loadTexts: upgradeNodeEventCrit.setDescription('Upgrade node event.')
upgradeNodeEventWarn = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 4, 5)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeNodeEventWarn.setStatus('current')
if mibBuilder.loadTexts: upgradeNodeEventWarn.setDescription('Upgrade node event.')
upgradeNodeEventInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 4, 7)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeNodeEventInfo.setStatus('current')
if mibBuilder.loadTexts: upgradeNodeEventInfo.setDescription('Upgrade node event.')
upgradeRollbackStart = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 250, 24, 5))
upgradeRollbackStartInfo = NotificationType((1, 3, 6, 1, 4, 1, 12124, 250, 24, 5, 7)).setObjects(("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "stringArg"))
if mibBuilder.loadTexts: upgradeRollbackStartInfo.setStatus('current')
if mibBuilder.loadTexts: upgradeRollbackStartInfo.setDescription('Upgrade rollback start.')
groupStateTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 1)).setObjects(("ISILON-TRAP-MIB", "nodeStatusCrit"), ("ISILON-TRAP-MIB", "nodeStatusInfo"), ("ISILON-TRAP-MIB", "nodeExpStatusCrit"), ("ISILON-TRAP-MIB", "nodeShutdownInfo"), ("ISILON-TRAP-MIB", "nodeShutdownFailCrit"), ("ISILON-TRAP-MIB", "nodeRebootCoalescedInfo"), ("ISILON-TRAP-MIB", "nodeStatusCoalescingCrit"), ("ISILON-TRAP-MIB", "nodeStatusCoalescingWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    groupStateTrapsGroup = groupStateTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: groupStateTrapsGroup.setDescription('Collection of traps for group state.')
filesystemTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 11)).setObjects(("ISILON-TRAP-MIB", "partitionUsageCrit"), ("ISILON-TRAP-MIB", "partitionUsageWarn"), ("ISILON-TRAP-MIB", "partitionUsageInfo"), ("ISILON-TRAP-MIB", "clusterStorageUsageCrit"), ("ISILON-TRAP-MIB", "clusterStorageUsageWarn"), ("ISILON-TRAP-MIB", "filesysErrorCrit"), ("ISILON-TRAP-MIB", "filesysErrorWarn"), ("ISILON-TRAP-MIB", "filesysErrorInfo"), ("ISILON-TRAP-MIB", "diskPoolUsageCrit"), ("ISILON-TRAP-MIB", "diskPoolUsageWarn"), ("ISILON-TRAP-MIB", "diskPoolOldDbVersionWarn"), ("ISILON-TRAP-MIB", "ssdUsageCrit"), ("ISILON-TRAP-MIB", "ssdUsageWarn"), ("ISILON-TRAP-MIB", "ssdUsageInfo"), ("ISILON-TRAP-MIB", "filesysCoalesceCrit"), ("ISILON-TRAP-MIB", "filesysCoalesceWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    filesystemTrapsGroup = filesystemTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: filesystemTrapsGroup.setDescription('Collection of filesystem traps.')
smartQuotaTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 12)).setObjects(("ISILON-TRAP-MIB", "quotaThreshErrorInfo"), ("ISILON-TRAP-MIB", "quotaNotifyErrorWarn"), ("ISILON-TRAP-MIB", "quotaErrorWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    smartQuotaTrapsGroup = smartQuotaTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: smartQuotaTrapsGroup.setDescription('Collection of smartQuota traps.')
snapshotTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 13)).setObjects(("ISILON-TRAP-MIB", "snapshotErrorWarn"), ("ISILON-TRAP-MIB", "snapshotReserveCrit"), ("ISILON-TRAP-MIB", "snapshotReserveWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    snapshotTrapsGroup = snapshotTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: snapshotTrapsGroup.setDescription('Collection of snapshot traps.')
syncIQTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 14)).setObjects(("ISILON-TRAP-MIB", "siqEventCrit"), ("ISILON-TRAP-MIB", "siqEventWarn"), ("ISILON-TRAP-MIB", "siqErrorWarn"), ("ISILON-TRAP-MIB", "siqPolicyCoalescedCrit"), ("ISILON-TRAP-MIB", "siqPolicyCoalescedWarn"), ("ISILON-TRAP-MIB", "siqTargetCoalescedCrit"), ("ISILON-TRAP-MIB", "siqTargetCoalescedWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    syncIQTrapsGroup = syncIQTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: syncIQTrapsGroup.setDescription('Collection of syncIQ traps.')
softwareTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 15)).setObjects(("ISILON-TRAP-MIB", "jobEngineErrorEmerg"), ("ISILON-TRAP-MIB", "jobEngineErrorCrit"), ("ISILON-TRAP-MIB", "jobEngineErrorWarn"), ("ISILON-TRAP-MIB", "jobEngineErrorInfo"), ("ISILON-TRAP-MIB", "flexProtectRunningCrit"), ("ISILON-TRAP-MIB", "flexProtectRunningWarn"), ("ISILON-TRAP-MIB", "flexProtectRunningInfo"), ("ISILON-TRAP-MIB", "mcpProcFailedWarn"), ("ISILON-TRAP-MIB", "mcpProcKilledWarn"), ("ISILON-TRAP-MIB", "licenseExpirationWarn"), ("ISILON-TRAP-MIB", "licenseExpirationInfo"), ("ISILON-TRAP-MIB", "firmwareUpdateIncompleteWarn"), ("ISILON-TRAP-MIB", "testEventCrit"), ("ISILON-TRAP-MIB", "nodeCPUWarn"), ("ISILON-TRAP-MIB", "nodeCPUInfo"), ("ISILON-TRAP-MIB", "mountdClientMountFailedInfo"), ("ISILON-TRAP-MIB", "mountdHostLookupFailedInfo"), ("ISILON-TRAP-MIB", "nfsCookieTranslationFailedInfo"), ("ISILON-TRAP-MIB", "mixedSedNonSedClusterCrit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    softwareTrapsGroup = softwareTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: softwareTrapsGroup.setDescription('Collection of software traps.')
avscanTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 16)).setObjects(("ISILON-TRAP-MIB", "avscanNoServersConfCrit"), ("ISILON-TRAP-MIB", "avscanNoServersConfWarn"), ("ISILON-TRAP-MIB", "avscanNoServersConfInfo"), ("ISILON-TRAP-MIB", "avscanErrorCrit"), ("ISILON-TRAP-MIB", "avscanErrorWarn"), ("ISILON-TRAP-MIB", "avscanErrorInfo"), ("ISILON-TRAP-MIB", "avscanInfectedFileCrit"), ("ISILON-TRAP-MIB", "avscanInfectedFileWarn"), ("ISILON-TRAP-MIB", "avscanInfectedFileInfo"), ("ISILON-TRAP-MIB", "avscanCoalescedInfo"), ("ISILON-TRAP-MIB", "avscanCoalescedWarn"), ("ISILON-TRAP-MIB", "avscanCoalescedCrit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    avscanTrapsGroup = avscanTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: avscanTrapsGroup.setDescription('Collection of avscan traps.')
netProtoTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 17)).setObjects(("ISILON-TRAP-MIB", "clockSkewCrit"), ("ISILON-TRAP-MIB", "sharePermsUpgradeFailCrit"), ("ISILON-TRAP-MIB", "winTimeConnectivityLostWarn"), ("ISILON-TRAP-MIB", "winNetMapFullCrit"), ("ISILON-TRAP-MIB", "winNetAuthCrit"), ("ISILON-TRAP-MIB", "winNetAuthWarn"), ("ISILON-TRAP-MIB", "lwioParamCrit"), ("ISILON-TRAP-MIB", "winSmbUpgradeWarn"), ("ISILON-TRAP-MIB", "winSmbUpgradeCrit"), ("ISILON-TRAP-MIB", "winNetworkCoalesceCrit"), ("ISILON-TRAP-MIB", "winNetworkCoalesceWarn"), ("ISILON-TRAP-MIB", "winIDmapCoalesceCrit"), ("ISILON-TRAP-MIB", "winIDmapCoalesceWarn"), ("ISILON-TRAP-MIB", "winAuthUpgradeCrit"), ("ISILON-TRAP-MIB", "winAuthCoalesceCrit"), ("ISILON-TRAP-MIB", "winAuthCoalesceWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    netProtoTrapsGroup = netProtoTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: netProtoTrapsGroup.setDescription('Collection of net protocol traps.')
networkingTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 18)).setObjects(("ISILON-TRAP-MIB", "netStatusCrit"), ("ISILON-TRAP-MIB", "netStatusWarn"), ("ISILON-TRAP-MIB", "netStatusCoalescingCrit"), ("ISILON-TRAP-MIB", "netStatusCoalescingWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    networkingTrapsGroup = networkingTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: networkingTrapsGroup.setDescription('Collection of networking traps.')
hardwareTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 19)).setObjects(("ISILON-TRAP-MIB", "hardwareErrorMsgCrit"), ("ISILON-TRAP-MIB", "hardwareErrorMsgWarn"), ("ISILON-TRAP-MIB", "hardwareErrorCrit"), ("ISILON-TRAP-MIB", "hardwareErrorWarn"), ("ISILON-TRAP-MIB", "hardwareErrorInfo"), ("ISILON-TRAP-MIB", "hwErrorCrit"), ("ISILON-TRAP-MIB", "diskNodeOfflineCrit"), ("ISILON-TRAP-MIB", "hardwareCoalescedEmerg"), ("ISILON-TRAP-MIB", "hardwareCoalescedCrit"), ("ISILON-TRAP-MIB", "hardwareCoalescedWarn"), ("ISILON-TRAP-MIB", "sensorCoalescedEmerg"), ("ISILON-TRAP-MIB", "sensorCoalescedCrit"), ("ISILON-TRAP-MIB", "sensorCoalescedWarn"), ("ISILON-TRAP-MIB", "fanCoalescedEmerg"), ("ISILON-TRAP-MIB", "fanCoalescedCrit"), ("ISILON-TRAP-MIB", "fanCoalescedWarn"), ("ISILON-TRAP-MIB", "tempCoalescedEmerg"), ("ISILON-TRAP-MIB", "tempCoalescedCrit"), ("ISILON-TRAP-MIB", "tempCoalescedWarn"), ("ISILON-TRAP-MIB", "voltsCoalescedEmerg"), ("ISILON-TRAP-MIB", "voltsCoalescedCrit"), ("ISILON-TRAP-MIB", "voltsCoalescedWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hardwareTrapsGroup = hardwareTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: hardwareTrapsGroup.setDescription('Collection of sensor traps.')
systemDiskTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 20)).setObjects(("ISILON-TRAP-MIB", "driveStatusInfo"), ("ISILON-TRAP-MIB", "driveStatusCrit"), ("ISILON-TRAP-MIB", "driveStatusWarn"), ("ISILON-TRAP-MIB", "bootDiskFailCrit"), ("ISILON-TRAP-MIB", "bootDiskFailWarn"), ("ISILON-TRAP-MIB", "diskErrorWarn"), ("ISILON-TRAP-MIB", "bootdiskMirrorReqMissingCrit"), ("ISILON-TRAP-MIB", "diskErrorCoalescedCrit"), ("ISILON-TRAP-MIB", "diskErrorCoalescedWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systemDiskTrapsGroup = systemDiskTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: systemDiskTrapsGroup.setDescription('Collection of system disk traps.')
sensorTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 21)).setObjects(("ISILON-TRAP-MIB", "hwPwrSupplyOverCrit"), ("ISILON-TRAP-MIB", "hwPwrSupplyOverWarn"), ("ISILON-TRAP-MIB", "hwPwrSupplyUnderCrit"), ("ISILON-TRAP-MIB", "hwPwrSupplyUnderWarn"), ("ISILON-TRAP-MIB", "hwFanOverCrit"), ("ISILON-TRAP-MIB", "hwFanOverWarn"), ("ISILON-TRAP-MIB", "hwFanOverInfo"), ("ISILON-TRAP-MIB", "hwFanUnderCrit"), ("ISILON-TRAP-MIB", "hwFanUnderWarn"), ("ISILON-TRAP-MIB", "hwFanUnderInfo"), ("ISILON-TRAP-MIB", "hwVoltageOverCrit"), ("ISILON-TRAP-MIB", "hwVoltageOverWarn"), ("ISILON-TRAP-MIB", "hwVoltageOverInfo"), ("ISILON-TRAP-MIB", "hwVoltageUnderCrit"), ("ISILON-TRAP-MIB", "hwVoltageUnderWarn"), ("ISILON-TRAP-MIB", "hwVoltageUnderInfo"), ("ISILON-TRAP-MIB", "hwTempOverEmerg"), ("ISILON-TRAP-MIB", "hwTempOverCrit"), ("ISILON-TRAP-MIB", "hwTempOverWarn"), ("ISILON-TRAP-MIB", "hwTempOverInfo"), ("ISILON-TRAP-MIB", "hwTempUnderEmerg"), ("ISILON-TRAP-MIB", "hwTempUnderCrit"), ("ISILON-TRAP-MIB", "hwTempUnderWarn"), ("ISILON-TRAP-MIB", "hwTempUnderInfo"), ("ISILON-TRAP-MIB", "hwPowerCrit"), ("ISILON-TRAP-MIB", "hwPowerWarn"), ("ISILON-TRAP-MIB", "hwMemCrit"), ("ISILON-TRAP-MIB", "hwFanCrit"), ("ISILON-TRAP-MIB", "hwFanWarn"), ("ISILON-TRAP-MIB", "hwCpuThrottleCrit"), ("ISILON-TRAP-MIB", "sensorMonitorCrit"), ("ISILON-TRAP-MIB", "sensorMonitorWarn"), ("ISILON-TRAP-MIB", "hwCurrentOverEmerg"), ("ISILON-TRAP-MIB", "hwCurrentOverCrit"), ("ISILON-TRAP-MIB", "hwCurrentOverWarn"), ("ISILON-TRAP-MIB", "hwCurrentOverInfo"), ("ISILON-TRAP-MIB", "hwCurrentUnderEmerg"), ("ISILON-TRAP-MIB", "hwCurrentUnderCrit"), ("ISILON-TRAP-MIB", "hwCurrentUnderWarn"), ("ISILON-TRAP-MIB", "hwCurrentUnderInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sensorTrapsGroup = sensorTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: sensorTrapsGroup.setDescription('Collection of sensor traps.')
storageTransportTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 22)).setObjects(("ISILON-TRAP-MIB", "sasPhyErrorExpanderWarn"), ("ISILON-TRAP-MIB", "sasPhyErrorControllerWarn"), ("ISILON-TRAP-MIB", "storageTransportCoalescedEmerg"), ("ISILON-TRAP-MIB", "storageCoalescedCrit"), ("ISILON-TRAP-MIB", "storageCoalescedWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    storageTransportTrapsGroup = storageTransportTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: storageTransportTrapsGroup.setDescription('Collection of storage transport traps.')
cloudPoolsTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 23)).setObjects(("ISILON-TRAP-MIB", "cloudpoolNetworkErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolAuthenticationErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolAuthorizationErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolBucketNotFoundErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolObjectNotFoundErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolDataCorruptionIntegrityErrorEmerg"), ("ISILON-TRAP-MIB", "cloudpoolNoUsableAccountFoundErrorCrit"), ("ISILON-TRAP-MIB", "cloudpoolCertificateErrorCrit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cloudPoolsTrapsGroup = cloudPoolsTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: cloudPoolsTrapsGroup.setDescription('Collection of cloud pools traps.')
upgradeTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 24)).setObjects(("ISILON-TRAP-MIB", "upgradeStartInfo"), ("ISILON-TRAP-MIB", "upgradeFinishInfo"), ("ISILON-TRAP-MIB", "upgradeClusterEventCrit"), ("ISILON-TRAP-MIB", "upgradeClusterEventWarn"), ("ISILON-TRAP-MIB", "upgradeClusterEventInfo"), ("ISILON-TRAP-MIB", "upgradeNodeEventCrit"), ("ISILON-TRAP-MIB", "upgradeNodeEventWarn"), ("ISILON-TRAP-MIB", "upgradeNodeEventInfo"), ("ISILON-TRAP-MIB", "upgradeRollbackStartInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    upgradeTrapsGroup = upgradeTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: upgradeTrapsGroup.setDescription('Collection of upgrade traps.')
variablesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12124, 250, 51, 50)).setObjects(("ISILON-TRAP-MIB", "nodeIdentifier"), ("ISILON-TRAP-MIB", "measuredValue"), ("ISILON-TRAP-MIB", "units"), ("ISILON-TRAP-MIB", "oid"), ("ISILON-TRAP-MIB", "bay"), ("ISILON-TRAP-MIB", "ifName"), ("ISILON-TRAP-MIB", "phy"), ("ISILON-TRAP-MIB", "errorMessage"), ("ISILON-TRAP-MIB", "errno"), ("ISILON-TRAP-MIB", "stringArg"), ("ISILON-TRAP-MIB", "message"), ("ISILON-TRAP-MIB", "i64Arg"), ("ISILON-TRAP-MIB", "i32Arg"), ("ISILON-TRAP-MIB", "measuredValueStr"), ("ISILON-TRAP-MIB", "instanceIdentifier"), ("ISILON-TRAP-MIB", "deviceIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    variablesGroup = variablesGroup.setStatus('current')
if mibBuilder.loadTexts: variablesGroup.setDescription('Collection of variable traps.')
trapGroupCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12124, 250, 52, 1)).setObjects(("ISILON-TRAP-MIB", "groupStateTrapsGroup"), ("ISILON-TRAP-MIB", "filesystemTrapsGroup"), ("ISILON-TRAP-MIB", "smartQuotaTrapsGroup"), ("ISILON-TRAP-MIB", "snapshotTrapsGroup"), ("ISILON-TRAP-MIB", "syncIQTrapsGroup"), ("ISILON-TRAP-MIB", "softwareTrapsGroup"), ("ISILON-TRAP-MIB", "avscanTrapsGroup"), ("ISILON-TRAP-MIB", "netProtoTrapsGroup"), ("ISILON-TRAP-MIB", "networkingTrapsGroup"), ("ISILON-TRAP-MIB", "hardwareTrapsGroup"), ("ISILON-TRAP-MIB", "systemDiskTrapsGroup"), ("ISILON-TRAP-MIB", "sensorTrapsGroup"), ("ISILON-TRAP-MIB", "storageTransportTrapsGroup"), ("ISILON-TRAP-MIB", "cloudPoolsTrapsGroup"), ("ISILON-TRAP-MIB", "upgradeTrapsGroup"), ("ISILON-TRAP-MIB", "variablesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trapGroupCompliance = trapGroupCompliance.setStatus('current')
if mibBuilder.loadTexts: trapGroupCompliance.setDescription('Compliance statement for the Isilon traps.')
mibBuilder.exportSymbols("ISILON-TRAP-MIB", avscanError=avscanError, hwTempUnderEmerg=hwTempUnderEmerg, hwPowerCrit=hwPowerCrit, voltsCoalescedCrit=voltsCoalescedCrit, mixedSedNonSedCluster=mixedSedNonSedCluster, hardwareTraps=hardwareTraps, hwTempUnderWarn=hwTempUnderWarn, winAuthCoalesceCrit=winAuthCoalesceCrit, sensorMonitorCrit=sensorMonitorCrit, upgradeStartInfo=upgradeStartInfo, errorMessage=errorMessage, upgradeClusterEventCrit=upgradeClusterEventCrit, isilonTraps=isilonTraps, quotaError=quotaError, tempCoalescedWarn=tempCoalescedWarn, jobEngineError=jobEngineError, systemDiskTraps=systemDiskTraps, cloudpoolNoUsableAccountFoundErrorCrit=cloudpoolNoUsableAccountFoundErrorCrit, hwTempOverInfo=hwTempOverInfo, hwTempOverCrit=hwTempOverCrit, winAuthUpgradeCrit=winAuthUpgradeCrit, bootDiskFailCrit=bootDiskFailCrit, upgradeNodeEvent=upgradeNodeEvent, cloudpoolObjectNotFoundError=cloudpoolObjectNotFoundError, groupStateTraps=groupStateTraps, clusterStorageUsageCrit=clusterStorageUsageCrit, cloudpoolBucketNotFoundErrorCrit=cloudpoolBucketNotFoundErrorCrit, hwCpuThrottleCrit=hwCpuThrottleCrit, upgradeFinishInfo=upgradeFinishInfo, siqError=siqError, clockSkew=clockSkew, tempCoalesced=tempCoalesced, avscanCoalescedCrit=avscanCoalescedCrit, winAuthUpgrade=winAuthUpgrade, diskPoolOldDbVersion=diskPoolOldDbVersion, hwFan=hwFan, avscanNoServersConf=avscanNoServersConf, filesysCoalesceCrit=filesysCoalesceCrit, winNetMapFullCrit=winNetMapFullCrit, partitionUsage=partitionUsage, sensorCoalesced=sensorCoalesced, mixedSedNonSedClusterCrit=mixedSedNonSedClusterCrit, quotaNotifyErrorWarn=quotaNotifyErrorWarn, cloudpoolAuthorizationError=cloudpoolAuthorizationError, stringArg=stringArg, winIDmapCoalesceCrit=winIDmapCoalesceCrit, cloudpoolNetworkError=cloudpoolNetworkError, flexProtectRunningInfo=flexProtectRunningInfo, driveStatusWarn=driveStatusWarn, nodeShutdownFail=nodeShutdownFail, testEvent=testEvent, hwCurrentUnderInfo=hwCurrentUnderInfo, sensorTrapsGroup=sensorTrapsGroup, netStatusCoalescing=netStatusCoalescing, hwCurrentUnderWarn=hwCurrentUnderWarn, hwFanCrit=hwFanCrit, cloudpoolAuthenticationError=cloudpoolAuthenticationError, trapGroupCompliance=trapGroupCompliance, nodeRebootCoalesced=nodeRebootCoalesced, avscanTrapsGroup=avscanTrapsGroup, hwCurrentOver=hwCurrentOver, cloudpoolAuthorizationErrorCrit=cloudpoolAuthorizationErrorCrit, cloudpoolDataCorruptionIntegrityError=cloudpoolDataCorruptionIntegrityError, hwVoltageUnderInfo=hwVoltageUnderInfo, filesysErrorCrit=filesysErrorCrit, avscanInfectedFileWarn=avscanInfectedFileWarn, softwareTrapsGroup=softwareTrapsGroup, sensorMonitor=sensorMonitor, winSmbUpgradeWarn=winSmbUpgradeWarn, hwFanUnder=hwFanUnder, units=units, bootdiskMirrorReqMissingCrit=bootdiskMirrorReqMissingCrit, hwMem=hwMem, hwCurrent=hwCurrent, nodeStatusCrit=nodeStatusCrit, avscanNoServersConfCrit=avscanNoServersConfCrit, fanCoalescedWarn=fanCoalescedWarn, ssdUsageCrit=ssdUsageCrit, partitionUsageCrit=partitionUsageCrit, cloudPoolsTrapsGroup=cloudPoolsTrapsGroup, quotaNotifyError=quotaNotifyError, filesysError=filesysError, nodeStatusInfo=nodeStatusInfo, snapshotReserveWarn=snapshotReserveWarn, storageCoalescedCrit=storageCoalescedCrit, upgradeFinish=upgradeFinish, upgradeRollbackStart=upgradeRollbackStart, quotaErrorWarn=quotaErrorWarn, jobEngineErrorCrit=jobEngineErrorCrit, licenseExpirationWarn=licenseExpirationWarn, i64Arg=i64Arg, lwioParamCrit=lwioParamCrit, clusterStorageUsage=clusterStorageUsage, diskErrorWarn=diskErrorWarn, message=message, nodeCPUWarn=nodeCPUWarn, upgradeStart=upgradeStart, siqPolicyCoalesced=siqPolicyCoalesced, hardwareError=hardwareError, winNetAuth=winNetAuth, bootDiskFail=bootDiskFail, sensorCoalescedCrit=sensorCoalescedCrit, groupStateTrapsGroup=groupStateTrapsGroup, cloudpoolNetworkErrorCrit=cloudpoolNetworkErrorCrit, phy=phy, hwFanUnderCrit=hwFanUnderCrit, voltsCoalesced=voltsCoalesced, bay=bay, deviceIdentifier=deviceIdentifier, licenseExpirationInfo=licenseExpirationInfo, siqTargetCoalesced=siqTargetCoalesced, hwTempUnderInfo=hwTempUnderInfo, mountdHostLookupFailed=mountdHostLookupFailed, mcpProcKilled=mcpProcKilled, hwCurrentOverInfo=hwCurrentOverInfo, siqPolicyCoalescedWarn=siqPolicyCoalescedWarn, hwPwrSupplyOver=hwPwrSupplyOver, siqEvent=siqEvent, hwCurrentOverEmerg=hwCurrentOverEmerg, cloudpoolCertificateErrorCrit=cloudpoolCertificateErrorCrit, networkingTraps=networkingTraps, hwTempUnderCrit=hwTempUnderCrit, hwPwrSupply=hwPwrSupply, hwMemCrit=hwMemCrit, hwTempOver=hwTempOver, avscanCoalescedWarn=avscanCoalescedWarn, hardwareErrorMsg=hardwareErrorMsg, diskErrorCoalescedCrit=diskErrorCoalescedCrit, firmwareUpdateIncomplete=firmwareUpdateIncomplete, sharePermsUpgradeFailCrit=sharePermsUpgradeFailCrit, avscanErrorWarn=avscanErrorWarn, lwioParam=lwioParam, siqTargetCoalescedWarn=siqTargetCoalescedWarn, cloudpoolBucketNotFoundError=cloudpoolBucketNotFoundError, fanCoalescedEmerg=fanCoalescedEmerg, siqEventCrit=siqEventCrit, flexProtectRunningWarn=flexProtectRunningWarn, sensorCoalescedEmerg=sensorCoalescedEmerg, siqTargetCoalescedCrit=siqTargetCoalescedCrit, hwFanWarn=hwFanWarn, driveStatus=driveStatus, winNetworkCoalesce=winNetworkCoalesce, hwFanUnderWarn=hwFanUnderWarn, netStatusCoalescingWarn=netStatusCoalescingWarn, hardwareCoalescedWarn=hardwareCoalescedWarn, tempCoalescedEmerg=tempCoalescedEmerg, siqPolicyCoalescedCrit=siqPolicyCoalescedCrit, upgradeRollbackStartInfo=upgradeRollbackStartInfo, hwTemp=hwTemp, nodeCPU=nodeCPU, upgradeNodeEventWarn=upgradeNodeEventWarn, snapshotTraps=snapshotTraps, avscanErrorCrit=avscanErrorCrit, partitionUsageWarn=partitionUsageWarn, firmwareUpdateIncompleteWarn=firmwareUpdateIncompleteWarn, hardwareErrorInfo=hardwareErrorInfo, upgradeClusterEvent=upgradeClusterEvent, avscanNoServersConfInfo=avscanNoServersConfInfo, winTimeConnectivityLostWarn=winTimeConnectivityLostWarn, nodeStatusCoalescingCrit=nodeStatusCoalescingCrit, winIDmapCoalesce=winIDmapCoalesce, snapshotReserveCrit=snapshotReserveCrit, upgradeTrapsGroup=upgradeTrapsGroup, flexProtectRunning=flexProtectRunning, testEventCrit=testEventCrit, sasPhyErrorControllerWarn=sasPhyErrorControllerWarn, ssdUsageWarn=ssdUsageWarn, hardwareCoalescedCrit=hardwareCoalescedCrit, instanceIdentifier=instanceIdentifier, mcpProcFailedWarn=mcpProcFailedWarn, hwPowerWarn=hwPowerWarn, i32Arg=i32Arg, winNetAuthCrit=winNetAuthCrit, netStatusCoalescingCrit=netStatusCoalescingCrit, avscanTraps=avscanTraps, sharePermsUpgradeFail=sharePermsUpgradeFail, hwVoltageUnder=hwVoltageUnder, hwVoltage=hwVoltage, diskPoolOldDbVersionWarn=diskPoolOldDbVersionWarn, jobEngineErrorInfo=jobEngineErrorInfo, hwError=hwError, hwTempOverWarn=hwTempOverWarn, nodeShutdownFailCrit=nodeShutdownFailCrit, filesysErrorWarn=filesysErrorWarn, filesysErrorInfo=filesysErrorInfo, syncIQTrapsGroup=syncIQTrapsGroup, jobEngineErrorEmerg=jobEngineErrorEmerg, cloudPoolsTraps=cloudPoolsTraps, hardwareErrorWarn=hardwareErrorWarn, hardwareErrorMsgCrit=hardwareErrorMsgCrit, winAuthCoalesceWarn=winAuthCoalesceWarn, snapshotErrorWarn=snapshotErrorWarn, winNetworkCoalesceWarn=winNetworkCoalesceWarn, sasPhyError=sasPhyError, avscanInfectedFileCrit=avscanInfectedFileCrit, filesysCoalesceWarn=filesysCoalesceWarn, netStatusWarn=netStatusWarn, hwFanOver=hwFanOver, diskPoolUsageCrit=diskPoolUsageCrit, hwCurrentOverWarn=hwCurrentOverWarn, siqEventWarn=siqEventWarn, hwFanUnderInfo=hwFanUnderInfo, storageTransportCoalesced=storageTransportCoalesced, ssdUsageInfo=ssdUsageInfo, hwErrorCrit=hwErrorCrit, partitionUsageInfo=partitionUsageInfo, hwCurrentUnderEmerg=hwCurrentUnderEmerg, hwCurrentUnder=hwCurrentUnder, filesysCoalesce=filesysCoalesce, hwCurrentOverCrit=hwCurrentOverCrit, hwVoltageOverInfo=hwVoltageOverInfo, mountdClientMountFailedInfo=mountdClientMountFailedInfo, syncIQTraps=syncIQTraps, ssdUsage=ssdUsage, winNetworkCoalesceCrit=winNetworkCoalesceCrit, upgradeClusterEventWarn=upgradeClusterEventWarn, variables=variables, fanCoalesced=fanCoalesced, tempCoalescedCrit=tempCoalescedCrit, driveStatusCrit=driveStatusCrit, storageCoalescedWarn=storageCoalescedWarn, trapCompliance=trapCompliance, hwTempUnder=hwTempUnder, diskNodeOffline=diskNodeOffline, winAuthCoalesce=winAuthCoalesce, smartQuotaTrapsGroup=smartQuotaTrapsGroup, upgradeTraps=upgradeTraps, hwTempOverEmerg=hwTempOverEmerg, sasPhyErrorExpanderWarn=sasPhyErrorExpanderWarn, hwPwrSupplyOverWarn=hwPwrSupplyOverWarn, avscanCoalescedInfo=avscanCoalescedInfo, trapConformance=trapConformance, mountdHostLookupFailedInfo=mountdHostLookupFailedInfo, hwPower=hwPower, netStatusCrit=netStatusCrit, winTimeConnectivityLost=winTimeConnectivityLost, nodeStatusCoalescing=nodeStatusCoalescing, avscanInfectedFile=avscanInfectedFile, hwFanOverInfo=hwFanOverInfo, bootDiskMirrorReqMissing=bootDiskMirrorReqMissing, hwFanOverCrit=hwFanOverCrit, diskPoolUsageWarn=diskPoolUsageWarn, jobEngineErrorWarn=jobEngineErrorWarn, storageTransportTrapsGroup=storageTransportTrapsGroup, clockSkewCrit=clockSkewCrit, filesystemTraps=filesystemTraps, measuredValue=measuredValue, avscanCoalesced=avscanCoalesced, diskNodeOfflineCrit=diskNodeOfflineCrit, fanCoalescedCrit=fanCoalescedCrit, voltsCoalescedEmerg=voltsCoalescedEmerg, storageTransportCoalescedEmerg=storageTransportCoalescedEmerg, quotaThreshError=quotaThreshError, avscanErrorInfo=avscanErrorInfo)
mibBuilder.exportSymbols("ISILON-TRAP-MIB", ifName=ifName, avscanNoServersConfWarn=avscanNoServersConfWarn, variablesGroup=variablesGroup, flexProtectRunningCrit=flexProtectRunningCrit, cloudpoolNoUsableAccountFoundError=cloudpoolNoUsableAccountFoundError, nodeCPUInfo=nodeCPUInfo, hwVoltageUnderWarn=hwVoltageUnderWarn, nodeStatusCoalescingWarn=nodeStatusCoalescingWarn, winSmbUpgradeCrit=winSmbUpgradeCrit, hwPwrSupplyUnderCrit=hwPwrSupplyUnderCrit, mountdClientMountFailed=mountdClientMountFailed, hardwareErrorCrit=hardwareErrorCrit, snapshotError=snapshotError, sensorMonitorWarn=sensorMonitorWarn, filesystemTrapsGroup=filesystemTrapsGroup, hardwareCoalescedEmerg=hardwareCoalescedEmerg, quotaThreshErrorInfo=quotaThreshErrorInfo, cloudpoolDataCorruptionIntegrityErrorEmerg=cloudpoolDataCorruptionIntegrityErrorEmerg, diskPoolUsage=diskPoolUsage, sensorCoalescedWarn=sensorCoalescedWarn, upgradeClusterEventInfo=upgradeClusterEventInfo, diskErrorCoalescedWarn=diskErrorCoalescedWarn, hardwareTrapsGroup=hardwareTrapsGroup, siqErrorWarn=siqErrorWarn, hwCurrentUnderCrit=hwCurrentUnderCrit, softwareTraps=softwareTraps, nfsCookieTranslationFailed=nfsCookieTranslationFailed, PYSNMP_MODULE_ID=isilonTraps, licenseExpiration=licenseExpiration, hwCpuThrottle=hwCpuThrottle, netProtoTrapsGroup=netProtoTrapsGroup, nodeExpStatusCrit=nodeExpStatusCrit, smartQuotaTraps=smartQuotaTraps, upgradeNodeEventInfo=upgradeNodeEventInfo, hwPwrSupplyUnderWarn=hwPwrSupplyUnderWarn, nodeStatus=nodeStatus, nfsCookieTranslationFailedInfo=nfsCookieTranslationFailedInfo, clusterStorageUsageWarn=clusterStorageUsageWarn, winNetMapFull=winNetMapFull, cloudpoolCertificateError=cloudpoolCertificateError, avscanInfectedFileInfo=avscanInfectedFileInfo, networkingTrapsGroup=networkingTrapsGroup, winIDmapCoalesceWarn=winIDmapCoalesceWarn, driveStatusInfo=driveStatusInfo, hwPwrSupplyUnder=hwPwrSupplyUnder, mcpProcKilledWarn=mcpProcKilledWarn, snapshotReserve=snapshotReserve, nodeRebootCoalescedInfo=nodeRebootCoalescedInfo, nodeShutdown=nodeShutdown, upgradeNodeEventCrit=upgradeNodeEventCrit, voltsCoalescedWarn=voltsCoalescedWarn, hwVoltageUnderCrit=hwVoltageUnderCrit, hwVoltageOverCrit=hwVoltageOverCrit, hwFanOverWarn=hwFanOverWarn, sensorTraps=sensorTraps, cloudpoolAuthenticationErrorCrit=cloudpoolAuthenticationErrorCrit, hwPwrSupplyOverCrit=hwPwrSupplyOverCrit, errno=errno, mcpProcFailed=mcpProcFailed, nodeShutdownInfo=nodeShutdownInfo, nodeExpStatus=nodeExpStatus, measuredValueStr=measuredValueStr, cloudpoolObjectNotFoundErrorCrit=cloudpoolObjectNotFoundErrorCrit, diskError=diskError, storageTransportTraps=storageTransportTraps, hwVoltageOverWarn=hwVoltageOverWarn, oid=oid, winSmbUpgrade=winSmbUpgrade, winNetAuthWarn=winNetAuthWarn, snapshotTrapsGroup=snapshotTrapsGroup, diskErrorCoalesced=diskErrorCoalesced, hardwareErrorMsgWarn=hardwareErrorMsgWarn, nodeIdentifier=nodeIdentifier, hardwareCoalesced=hardwareCoalesced, netProtoTraps=netProtoTraps, hwVoltageOver=hwVoltageOver, systemDiskTrapsGroup=systemDiskTrapsGroup, bootDiskFailWarn=bootDiskFailWarn, netStatus=netStatus)
