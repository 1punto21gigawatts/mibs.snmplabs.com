#
# PySNMP MIB module A3COM-HUAWEI-VOGENERAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-VOGENERAL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:07:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cVoice, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cVoice")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, Counter64, ObjectIdentity, TimeTicks, Unsigned32, ModuleIdentity, Bits, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "Counter64", "ObjectIdentity", "TimeTicks", "Unsigned32", "ModuleIdentity", "Bits", "NotificationType", "Gauge32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
h3cVoiceGeneral = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1))
h3cVoiceGeneral.setRevisions(('2005-03-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3cVoiceGeneral.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: h3cVoiceGeneral.setLastUpdated('200503150000Z')
if mibBuilder.loadTexts: h3cVoiceGeneral.setOrganization('Huawei-3COM Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cVoiceGeneral.setContactInfo('PLAT Team Huawei 3Com Technologies co.,Ltd. Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei-3com.com Zip:100085')
if mibBuilder.loadTexts: h3cVoiceGeneral.setDescription('This MIB is to provide the definition of voice voice general configuration.')
h3cVoiceGeneralObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1))
h3cVoGeneralJitterLen = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralJitterLen.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralJitterLen.setDescription('This object indicates the length of the Jitter buffer.')
h3cVoGeneralMatchPolicy = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("long", 1), ("short", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralMatchPolicy.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralMatchPolicy.setDescription('This object indicates the policy of number matching.')
h3cVoGeneralDataStatistics = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralDataStatistics.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralDataStatistics.setDescription('This object indicates whether the data statistics is enabled.')
h3cVoGeneralDialTerminator = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralDialTerminator.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralDialTerminator.setDescription('This object indicates the global character, which is used to notify gateway that dialing is completed.')
h3cVoGeneralCallStart = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fast", 1), ("normal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralCallStart.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralCallStart.setDescription('This object indicates whether to support the FAST START mode which the caller side initiates.')
h3cVoGeneralCalledTunnel = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralCalledTunnel.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralCalledTunnel.setDescription('This object indicates whether the called tunnel function is enabled.')
h3cVoGeneralSpecialService = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralSpecialService.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralSpecialService.setDescription('This object indicates whether special service number function is enabled.')
h3cVoGeneralPeerSearchStop = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralPeerSearchStop.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralPeerSearchStop.setDescription('This object indicates the maximum amount of the entities which the system will scan when a call has been initiated.')
h3cVoGeneralPeerSelectOrderRule = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25))).clone(namedValues=NamedValues(("epr", 1), ("epl", 2), ("elp", 3), ("elr", 4), ("per", 5), ("pel", 6), ("ple", 7), ("plr", 8), ("lep", 9), ("ler", 10), ("lpe", 11), ("lpr", 12), ("er", 13), ("pr", 14), ("lr", 15), ("explicitMatch", 16), ("priority", 17), ("random", 18), ("longestNoUse", 19), ("ep", 20), ("el", 21), ("pe", 22), ("pl", 23), ("le", 24), ("lp", 25)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralPeerSelectOrderRule.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralPeerSelectOrderRule.setDescription('This object indicates the rule order applied in voice entity selection. epr(1) --- explicit match, priority, random epl(2) --- explicit match, priority, longest no use elp(3) --- explicit match, longest no use, priority elr(4) --- explicit match, longest no use, random per(5) --- priority, explicit match, random pel(6) --- priority, explicit match, longest no use ple(7) --- priority, longest no use, explicit match plr(8) --- priority, longest no use, random lep(9) --- longest no use, explicit match, priority ler(10) --- longest no use, explicit match, random lpe(11) --- longest no use, priority, explicit match lpr(12) --- longest no use, priority, random er(13) --- explicit match, random pr(14) --- priority, random lr(15) --- longest no use, random explicitMatch(16) --- explicit match priority(17) --- priority random(18) --- random longestNoUse(19) --- longest no use ep(20) --- explicit match, priority el(21) --- explicit match, longest no use pe(22) --- priority, explicit match pl(23) --- priority, longest no use le(24) --- longest no use, explicit match lp(25) --- longest no use, priority ')
h3cVoGeneralPeerSelectTypePriority = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noneType", 1), ("voipPotsVofr", 2), ("voipVofrPots", 3), ("potsVoipVofr", 4), ("potsVofrVoip", 5), ("vofrPotsVoip", 6), ("vofrVoipPots", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralPeerSelectTypePriority.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralPeerSelectTypePriority.setDescription('This object indicates the priority-ranked type of voice entity. 1ST 2DN 3RD noneType(1) --- NONE TYPE voipPotsVofr(2) --- VOIP POTS VOFR voipVofrPots(3) --- VOIP VOFR POTS potsVoipVofr(4) --- POTS VOIP VOFR potsVofrVoip(5) --- POTS VOFR VOIP vofrPotsVoip(6) --- VOFR POTS VOIP vofrVoipPots(7) --- VOFR VOIP POTS ')
h3cVoGeneralDscpSignal = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralDscpSignal.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralDscpSignal.setDescription('This object indicates DSCP(Different Service Code Point) signal value.')
h3cVoGeneralDscpMedia = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cVoGeneralDscpMedia.setStatus('current')
if mibBuilder.loadTexts: h3cVoGeneralDscpMedia.setDescription('This object indicates DSCP(Different Service Code Point) media value.')
h3cVoiceNumberSubstGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4))
h3cVoNumSubstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1), )
if mibBuilder.loadTexts: h3cVoNumSubstTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstTable.setDescription('The table contains the number substitute rule.')
h3cVoNumSubstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoNumSubstIndex"))
if mibBuilder.loadTexts: h3cVoNumSubstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstEntry.setDescription('The entry of h3cVoNumSubstTable.')
h3cVoNumSubstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoNumSubstIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstIndex.setDescription('The index of the number substitute rule table.')
h3cVoNumSubstFirstRule = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstFirstRule.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstFirstRule.setDescription('This object indicates the first rule to be used.')
h3cVoNumSubstDotMatchRule = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("endOnly", 1), ("leftRight", 2), ("rightLeft", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstDotMatchRule.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstDotMatchRule.setDescription('This object indicates the dot wildcard match rule. endOnly - only end of E.164 number (input format) leftRight - match form left to right (input format) rightLeft - match form right to left (input format) ')
h3cVoNumSubstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
h3cVoNumSubstRuleTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2), )
if mibBuilder.loadTexts: h3cVoNumSubstRuleTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleTable.setDescription('The table contains the number-substitute rule information.')
h3cVoNumSubstRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoNumSubstIndex"), (0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoNumSubstRuleIndex"))
if mibBuilder.loadTexts: h3cVoNumSubstRuleEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleEntry.setDescription('The entry of a single number substitute rule.')
h3cVoNumSubstRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)))
if mibBuilder.loadTexts: h3cVoNumSubstRuleIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleIndex.setDescription('The index of a number-substitute rule.')
h3cVoNumSubstRuleInputFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstRuleInputFormat.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleInputFormat.setDescription('This object specifies the match format for input.')
h3cVoNumSubstRuleOutputFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstRuleOutputFormat.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleOutputFormat.setDescription('This object specifies the output format.')
h3cVoNumSubstRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 4, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoNumSubstRuleRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoNumSubstRuleRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
h3cVoMaxCallTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 5), )
if mibBuilder.loadTexts: h3cVoMaxCallTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoMaxCallTable.setDescription('The table contains the maximum number of the calls which can be established simultaneously.')
h3cVoMaxCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoMaxCallTableIndex"))
if mibBuilder.loadTexts: h3cVoMaxCallEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoMaxCallEntry.setDescription('The entry of the max call table.')
h3cVoMaxCallTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoMaxCallTableIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoMaxCallTableIndex.setDescription('The index uniquely identifies a single maximum call value.')
h3cVoMaxCallValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoMaxCallValue.setStatus('current')
if mibBuilder.loadTexts: h3cVoMaxCallValue.setDescription('This object specifies a single maximum call value.')
h3cVoMaxCallTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoMaxCallTableRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoMaxCallTableRowStatus.setDescription('This object is used to create, delete or modify a row in this table. Note: when create a new row, h3cVoMaxCallValue must be configured.')
h3cVoInCallingNumSubstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 6), )
if mibBuilder.loadTexts: h3cVoInCallingNumSubstTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCallingNumSubstTable.setDescription('This table contains the rules of caller number substitute for incoming call.')
h3cVoInCallingNumSubstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 6, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoInCallingNumSubstIndex"))
if mibBuilder.loadTexts: h3cVoInCallingNumSubstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCallingNumSubstEntry.setDescription('The entry of h3cVoInCallingNumSubstTable.')
h3cVoInCallingNumSubstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoInCallingNumSubstIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCallingNumSubstIndex.setDescription('The index of incoming call substitute table.')
h3cVoInCallingSubstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoInCallingSubstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCallingSubstRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
h3cVoInCalledNumSubstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 7), )
if mibBuilder.loadTexts: h3cVoInCalledNumSubstTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCalledNumSubstTable.setDescription('This table contains the rules of called number substitute for incoming call.')
h3cVoInCalledNumSubstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 7, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoInCalledNumSubstIndex"))
if mibBuilder.loadTexts: h3cVoInCalledNumSubstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCalledNumSubstEntry.setDescription('The entry of h3cVoInCalledNumSubstTable.')
h3cVoInCalledNumSubstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoInCalledNumSubstIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCalledNumSubstIndex.setDescription('The index of incomed call substitute table.')
h3cVoInCalledSubstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoInCalledSubstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoInCalledSubstRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
h3cVoOutCallingNumSubstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 8), )
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstTable.setDescription('This table contains the rules of caller number substitute for outgoing call.')
h3cVoOutCallingNumSubstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 8, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoOutCallingNumSubstIndex"))
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstEntry.setDescription('The entry of h3cVoOutCallingNumSubstTable.')
h3cVoOutCallingNumSubstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCallingNumSubstIndex.setDescription('The index of outgoing calling substitute table.')
h3cVoOutCallingSubstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoOutCallingSubstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCallingSubstRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
h3cVoOutCalledNumSubstTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 9), )
if mibBuilder.loadTexts: h3cVoOutCalledNumSubstTable.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCalledNumSubstTable.setDescription('This table contains the rules of called number substitute for outgoing call.')
h3cVoOutgoingCalledNumSubstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-VOGENERAL-MIB", "h3cVoOutCalledNumSubstIndex"))
if mibBuilder.loadTexts: h3cVoOutgoingCalledNumSubstEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutgoingCalledNumSubstEntry.setDescription('The entry of h3cVoOutCalledNumSubstTable.')
h3cVoOutCalledNumSubstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cVoOutCalledNumSubstIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCalledNumSubstIndex.setDescription('The index of outgoing called substitute table.')
h3cVoOutCalledSubstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 39, 1, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVoOutCalledSubstRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVoOutCalledSubstRowStatus.setDescription('This object is used to create, delete or modify a row in this table.')
mibBuilder.exportSymbols("A3COM-HUAWEI-VOGENERAL-MIB", h3cVoNumSubstRuleInputFormat=h3cVoNumSubstRuleInputFormat, h3cVoGeneralDataStatistics=h3cVoGeneralDataStatistics, h3cVoGeneralPeerSearchStop=h3cVoGeneralPeerSearchStop, h3cVoNumSubstDotMatchRule=h3cVoNumSubstDotMatchRule, h3cVoOutCallingNumSubstIndex=h3cVoOutCallingNumSubstIndex, h3cVoNumSubstEntry=h3cVoNumSubstEntry, h3cVoGeneralCallStart=h3cVoGeneralCallStart, h3cVoMaxCallEntry=h3cVoMaxCallEntry, h3cVoInCalledNumSubstTable=h3cVoInCalledNumSubstTable, h3cVoGeneralSpecialService=h3cVoGeneralSpecialService, h3cVoiceNumberSubstGroup=h3cVoiceNumberSubstGroup, h3cVoNumSubstRuleTable=h3cVoNumSubstRuleTable, h3cVoNumSubstRuleRowStatus=h3cVoNumSubstRuleRowStatus, h3cVoMaxCallTableRowStatus=h3cVoMaxCallTableRowStatus, h3cVoMaxCallTableIndex=h3cVoMaxCallTableIndex, h3cVoOutgoingCalledNumSubstEntry=h3cVoOutgoingCalledNumSubstEntry, h3cVoOutCallingSubstRowStatus=h3cVoOutCallingSubstRowStatus, h3cVoOutCallingNumSubstTable=h3cVoOutCallingNumSubstTable, h3cVoNumSubstRuleIndex=h3cVoNumSubstRuleIndex, h3cVoGeneralDscpMedia=h3cVoGeneralDscpMedia, h3cVoNumSubstTable=h3cVoNumSubstTable, h3cVoNumSubstRuleEntry=h3cVoNumSubstRuleEntry, h3cVoOutCallingNumSubstEntry=h3cVoOutCallingNumSubstEntry, h3cVoGeneralPeerSelectOrderRule=h3cVoGeneralPeerSelectOrderRule, h3cVoiceGeneralObjects=h3cVoiceGeneralObjects, h3cVoInCallingNumSubstTable=h3cVoInCallingNumSubstTable, h3cVoOutCalledNumSubstIndex=h3cVoOutCalledNumSubstIndex, h3cVoMaxCallValue=h3cVoMaxCallValue, h3cVoInCallingSubstRowStatus=h3cVoInCallingSubstRowStatus, h3cVoGeneralPeerSelectTypePriority=h3cVoGeneralPeerSelectTypePriority, h3cVoNumSubstFirstRule=h3cVoNumSubstFirstRule, h3cVoGeneralCalledTunnel=h3cVoGeneralCalledTunnel, h3cVoInCallingNumSubstIndex=h3cVoInCallingNumSubstIndex, h3cVoNumSubstRowStatus=h3cVoNumSubstRowStatus, h3cVoInCalledNumSubstEntry=h3cVoInCalledNumSubstEntry, h3cVoGeneralDscpSignal=h3cVoGeneralDscpSignal, h3cVoGeneralMatchPolicy=h3cVoGeneralMatchPolicy, h3cVoGeneralDialTerminator=h3cVoGeneralDialTerminator, h3cVoInCalledNumSubstIndex=h3cVoInCalledNumSubstIndex, h3cVoNumSubstIndex=h3cVoNumSubstIndex, h3cVoiceGeneral=h3cVoiceGeneral, h3cVoMaxCallTable=h3cVoMaxCallTable, h3cVoGeneralJitterLen=h3cVoGeneralJitterLen, h3cVoInCalledSubstRowStatus=h3cVoInCalledSubstRowStatus, h3cVoOutCalledNumSubstTable=h3cVoOutCalledNumSubstTable, h3cVoInCallingNumSubstEntry=h3cVoInCallingNumSubstEntry, h3cVoNumSubstRuleOutputFormat=h3cVoNumSubstRuleOutputFormat, h3cVoOutCalledSubstRowStatus=h3cVoOutCalledSubstRowStatus, PYSNMP_MODULE_ID=h3cVoiceGeneral)
