#
# PySNMP MIB module AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:32:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
AvWlanMobVlanRole, AvWlanMobVlanState, AvWlanSwitchNotifAuxLimitsMap = mibBuilder.importSymbols("AVAYA-WLAN-TC-MIB", "AvWlanMobVlanRole", "AvWlanMobVlanState", "AvWlanSwitchNotifAuxLimitsMap")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ObjectIdentity, MibIdentifier, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Bits, ModuleIdentity, Counter32, Integer32, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ObjectIdentity", "MibIdentifier", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Bits", "ModuleIdentity", "Counter32", "Integer32", "IpAddress", "Gauge32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
avayaWlanMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "avayaWlanMibs")
avayaWlanMobSwitchNotificationsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 7, 19))
avayaWlanMobSwitchNotificationsMib.setRevisions(('2011-12-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: avayaWlanMobSwitchNotificationsMib.setRevisionsDescriptions(('v1: Initial version.',))
if mibBuilder.loadTexts: avayaWlanMobSwitchNotificationsMib.setLastUpdated('201112150000Z')
if mibBuilder.loadTexts: avayaWlanMobSwitchNotificationsMib.setOrganization('Avaya, Inc')
if mibBuilder.loadTexts: avayaWlanMobSwitchNotificationsMib.setContactInfo('Avaya, Inc')
if mibBuilder.loadTexts: avayaWlanMobSwitchNotificationsMib.setDescription("AVAYA WLAN Mobility Switch Notifications MIB Copyright 2011 Avaya, Inc. All rights reserved. This Avaya SNMP Management Information Base Specification (Specification) embodies Avaya's confidential and proprietary intellectual property. Avaya retains all title and ownership in the Specification, including any revisions. This Specification is supplied 'AS IS,' and Avaya makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
avWlanMobSwNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 19, 0))
avWlanMobSwNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 19, 1))
avWlanMobSwNotificationAuxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1))
avWlanNotifAuxMobilityControllerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMobilityControllerInetAddressType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMobilityControllerInetAddressType.setDescription('The type of address contained in a corresponding instance of avWlanNotifAuxMobilityControllerInetAddress.')
avWlanNotifAuxMobilityControllerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMobilityControllerInetAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMobilityControllerInetAddress.setDescription('This object identifies a controller network address.')
avWlanNotifAuxNumberOfVlanEntries = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxNumberOfVlanEntries.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxNumberOfVlanEntries.setDescription('This object identifies the number of Mobility VLAN entries that were successfully downloaded by the WSP.')
avWlanNotifAuxMSTDownloadEntries = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMSTDownloadEntries.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMSTDownloadEntries.setDescription('This object identifies the number of Mobility switches that were successfully downloaded by the WSP.')
avWlanNotifAuxPeerDeviceInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 5), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceInetAddressType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceInetAddressType.setDescription('The type of address contained in a corresponding instance of avWlanNotifAuxPeerDeviceInetAddress.')
avWlanNotifAuxPeerDeviceInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 6), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceInetAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceInetAddress.setDescription('This object identifies the IP address of any peer device connected to the WSP.')
avWlanNotifAuxPeerDeviceAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceAddress.setDescription('This object specifies the MAC address of the peer device.')
avWlanNotifAuxPeerDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accessPoint", 1), ("mobilitySwitch", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxPeerDeviceType.setDescription('This object specifies the peer device type.')
avWlanNotifAuxConnectionFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("kaLoss", 1), ("controlPlane", 2), ("peerReset", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxConnectionFailureReason.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxConnectionFailureReason.setDescription('This object indicate the reason for connection failure with the peer device. The peer device is either a Access Point or Wireless Switching Point. The supported values are: kaLoss - loss of keep alive packets between the peers. controlPlane - connection closed by the controller peerReset - peer device closed the connection ')
avWlanNotifAuxMobilityVlanName = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanName.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanName.setDescription('This object specifies the name of the mobility VLAN.')
avWlanNotifAuxVlanServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 11), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerInetAddressType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerInetAddressType.setDescription('The type of address contained in a corresponding instance of avWlanNotifAuxVlanServerInetAddress.')
avWlanNotifAuxVlanServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 12), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerInetAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerInetAddress.setDescription('This object identifies the IP address of VLAN server.')
avWlanNotifAuxVlanServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 13), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxVlanServerAddress.setDescription('This object specifies the MAC address of the VLAN server.')
avWlanNotifAuxMobilityVlanSelfGenerationNumber = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 14), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanSelfGenerationNumber.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanSelfGenerationNumber.setDescription('This object identifies the self generation number associated with the mobility VLAN in the WSP device. This number will be received by the WSP during a MVT download.')
avWlanNotifAuxMobilityVlanPeerGenerationNumber = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 15), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanPeerGenerationNumber.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxMobilityVlanPeerGenerationNumber.setDescription('This object identifies the peer generation number for each mobility VLAN received from the WSP (during VLAN advertisements).')
avWlanNotifAuxOldVlanRole = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 16), AvWlanMobVlanRole()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxOldVlanRole.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxOldVlanRole.setDescription('This object specifies the old role of the mobility VLAN.')
avWlanNotifAuxNewVlanRole = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 17), AvWlanMobVlanRole()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxNewVlanRole.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxNewVlanRole.setDescription('This object specifies the new role of the mobility VLAN.')
avWlanNotifAuxRoleChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("administrator", 1), ("clientRoam", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxRoleChangeReason.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxRoleChangeReason.setDescription('This object specifies the reason for change in mobility VLAN role by this WSP. The following values are supported: administrator - role change due to admin configuration clientRoam - role change due to client roaming. ')
avWlanNotifAuxOldState = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 19), AvWlanMobVlanState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxOldState.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxOldState.setDescription('This object specifies the old state of the mobility vlan MAP.')
avWlanNotifAuxNewState = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 20), AvWlanMobVlanState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxNewState.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxNewState.setDescription('This object specifies the new state of the mobility vlan MAP.')
avWlanNotifAuxStateChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mobVlanDeleted", 1), ("mobVlanCreated", 2), ("localVlanDeleted", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxStateChangeReason.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxStateChangeReason.setDescription('This object specifies the reason for change in mobility VLAN state in this WSP device. The following values are supported: mobVlanDeleted - state change due to deletion of mobility VLAN mobVlanCreated - state change due to creation of mobility VLAN localVlanDeleted - state change due to deletion of local VLAN ')
avWlanNotifAuxVlanState = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 22), AvWlanMobVlanState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxVlanState.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxVlanState.setDescription('This object specifies the current state of the mobility VLAN.')
avWlanNotifAuxRemoveReason = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("administrator", 1), ("lvidDeletion", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxRemoveReason.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxRemoveReason.setDescription('This object specifies the reason for removal of mobility VLAN in this WSP. The following values are supported: administrator - removed due to admin configuration clientRoam - removed due to deletion of lvid. ')
avWlanNotifAuxControlFrameType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("igmpReport", 1), ("igmpLeave", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxControlFrameType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxControlFrameType.setDescription('This object specifies the IGMP control frame type.')
avWlanNotifAuxInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 25), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxInetAddressType.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxInetAddressType.setDescription('The type of address contained in a corresponding instance of avWlanNotifAuxInetAddress.')
avWlanNotifAuxInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 26), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanNotifAuxInetAddress.setStatus('current')
if mibBuilder.loadTexts: avWlanNotifAuxInetAddress.setDescription('This object identifies the source IP in the IGMP control frame.')
avWlanSwitchNotifAuxAuxLimitsReached = MibScalar((1, 3, 6, 1, 4, 1, 45, 7, 19, 1, 1, 27), AvWlanSwitchNotifAuxLimitsMap()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: avWlanSwitchNotifAuxAuxLimitsReached.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchNotifAuxAuxLimitsReached.setDescription('This objects is included in the avWlanSwitchLimitsReached notification to indicate which limits have been reached.')
avWlanSwitchNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1))
avWlanSwitchMCPConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 1)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddress"))
if mibBuilder.loadTexts: avWlanSwitchMCPConnectionEstablished.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchMCPConnectionEstablished.setDescription('A avWlanSwitchMCPConnectionEstablished trap signifies that the SNMP entity, acting in an agent role, MCP client successfully established connection with the MCP server in Wireless Controller. The Trap is Enabled by default.')
avWlanSwitchMCPLostConnection = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 2)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddress"))
if mibBuilder.loadTexts: avWlanSwitchMCPLostConnection.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchMCPLostConnection.setDescription('A avWlanSwitchMCPLostConnection trap signifies that the SNMP entity, acting in an agent role, MCP client lost connection with the MCP server in Wireless Controller. The Trap is Enabled by default.')
avWlanSwitchMVTDownload = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 3)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxNumberOfVlanEntries"))
if mibBuilder.loadTexts: avWlanSwitchMVTDownload.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchMVTDownload.setDescription('A avWlanSwitchMVTDownload trap signifies that the SNMP entity, acting in an agent role, has received Mobility Vlan Table download from the Mobility controller. Mobility Switch receives MVT when it registers with the Mobility Controller. Controller address and number of entries in the table is passed as parameter. The Trap is Enabled by default.')
avWlanSwitchMSTDownload = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 4)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityControllerInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMSTDownloadEntries"))
if mibBuilder.loadTexts: avWlanSwitchMSTDownload.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchMSTDownload.setDescription('A avWlanSwitchMSTDownload trap signifies that the SNMP entity, acting in an agent role, has received Mobility Switch Table download from the Mobility Controller. Mobility Switch receives MST when it registers with the Mobility controller. Controller address and number of entries in the table is passed as parameter. The Trap is Enabled by default.')
avWlanSwitchPeerDeviceConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 5)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceType"))
if mibBuilder.loadTexts: avWlanSwitchPeerDeviceConnectionEstablished.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchPeerDeviceConnectionEstablished.setDescription('A avWlanSwitchPeerDeviceConnectionEstablished trap signifies that the SNMP entity, acting in an agent role, has established connection to the peer device. Peer switch IP, MAC address and device type is passed as parameter. The Trap is Enabled by default.')
avWlanSwitchPeerDeviceLostConnection = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 6)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxConnectionFailureReason"))
if mibBuilder.loadTexts: avWlanSwitchPeerDeviceLostConnection.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchPeerDeviceLostConnection.setDescription('A avWlanSwitchPeerDeviceLostConnection trap signifies that the SNMP entity, acting in an agent role, has lost connection to the peer device. Peer switch IP, MAC, device type and failure reason are passed as parameter. The Trap is Enabled by default.')
avWlanSwitchVlanServerElected = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 7)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerAddress"))
if mibBuilder.loadTexts: avWlanSwitchVlanServerElected.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanServerElected.setDescription('A avWlanSwitchVlanServerElected trap signifies that the SNMP entity, acting in an agent role, has elected vlan server for a mobility vlan. Mobility vlan name, vlan server IP and MAC address is passed as parameter. The Trap is Disabled by default.')
avWlanSwitchLostConnectionToVlanServer = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 8)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerInetAddress"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanServerAddress"))
if mibBuilder.loadTexts: avWlanSwitchLostConnectionToVlanServer.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchLostConnectionToVlanServer.setDescription('A avWlanSwitchLostConnectionToVlanServer trap signifies that the SNMP entity, acting in an agent role, has lost connection to vlan server and there are no other alternative vlan servers for the mobility vlan. Mobility vlan name, vlan server IP and MAC address is passed as parameter. The trap is Enabled by default.')
avWlanSwitchVlanGenNumberMismatch = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 9)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanSelfGenerationNumber"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanPeerGenerationNumber"))
if mibBuilder.loadTexts: avWlanSwitchVlanGenNumberMismatch.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanGenNumberMismatch.setDescription('A avWlanSwitchVlanGenNumberMismatch trap signifies that the SNMP entity, acting in an agent role, has detected change in the generation number. Mobility switches advertise the generation numbers for the mapped mobility vlans in the mobility domain. Generation numbers are used to detect stale mobility vlans. The mobility vlan name, mobility switch generation number and the peer switch generation number is passed as parameter. This is enabled by default.')
avWlanSwitchVlanRoleChanged = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 10)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxOldVlanRole"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxNewVlanRole"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxRoleChangeReason"))
if mibBuilder.loadTexts: avWlanSwitchVlanRoleChanged.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanRoleChanged.setDescription('A avWlanSwitchVlanRoleChanged trap signifies that the SNMP entity, acting in an agent role, has changed the role of the mobility vlan. Mobility vlan name, old and new role, reason for the role change is passed as parameter. The trap is Disabled by default.')
avWlanSwitchVlanMapStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 11)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxOldState"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxNewState"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxStateChangeReason"))
if mibBuilder.loadTexts: avWlanSwitchVlanMapStateChanged.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanMapStateChanged.setDescription('A avWlanSwitchVlanMapStateChanged trap signifies that the SNMP entity, acting in an agent role, has changed the state of the mobility vlan map. A vlan map is the association between mobility vlan name and the local static vlan. The state is Active as long as Mobility vlan name and the local static vlan are active. Deletion of mobility vlan or the local static vlan results in a InActive state for a vlan map. Vlan map will become Active if the mobility vlan is created before the next MVT download. Mobility vlan name, old, new state and the reason is passed as parameter. The trap is Disabled by default.')
avWlanSwitchVlanMapRemoved = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 12)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxVlanState"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxRemoveReason"))
if mibBuilder.loadTexts: avWlanSwitchVlanMapRemoved.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanMapRemoved.setDescription('A avWlanSwitchVlanMapRemoved trap signifies that the SNMP entity, acting in an agent role, has deleted the mobility vlan map. InActive maps are deleted when the mobility vlan is not present in the MVT download. Active maps are deleted either from the config or when the lvid to which mobility vlan is mapped is deleted. Mobility vlan name, vlan state and reason for removal is passed as parameter. The trap is Enabled by default.')
avWlanSwitchVlanTrackAffected = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 13)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"))
if mibBuilder.loadTexts: avWlanSwitchVlanTrackAffected.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchVlanTrackAffected.setDescription('A avWlanSwitchVlanTrackAffected trap signifies that the SNMP entity, acting in an agent role, has detected a mobility vlan in server role has no ports active in its track list. Mobility vlan name is passed as parameter. The trap is Disabled by default.')
avWlanSwitchIgmpSnoopingEnabled = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 14)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"))
if mibBuilder.loadTexts: avWlanSwitchIgmpSnoopingEnabled.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchIgmpSnoopingEnabled.setDescription('A avWlanSwitchIgmpSnoopingEnabled trap signifies that the SNMP entity, acting in an agent role, has successfully enabled IGMP snooping on a mobility vlan. local vlan identifier which is mapped to mobility vlan is passed as parameter. The trap is Disabled by default.')
avWlanSwitchIgmpSnoopingDisabled = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 15)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"))
if mibBuilder.loadTexts: avWlanSwitchIgmpSnoopingDisabled.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchIgmpSnoopingDisabled.setDescription('A avWlanSwitchIgmpSnoopingDisabled trap signifies that the SNMP entity, acting in an agent role, has successfully disabled IGMP snooping on a mobility vlan. Mobility vlan name is passed as parameter. The trap is Disabled by default.')
avWlanSwitchIgmpControlFrameReceived = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 16)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxMobilityVlanName"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxControlFrameType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxPeerDeviceType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxInetAddressType"), ("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanNotifAuxInetAddress"))
if mibBuilder.loadTexts: avWlanSwitchIgmpControlFrameReceived.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchIgmpControlFrameReceived.setDescription('A avWlanSwitchIgmpControlFrameReceived trap signifies that the SNMP entity, acting in an agent role, has snooped IGMP control frame on a mobility vlan. Mobility vlan name, Frame Type, device type and IGMP source IP are passed as parameters. The trap is Disabled by default.')
avWlanSwitchLimitsReached = NotificationType((1, 3, 6, 1, 4, 1, 45, 7, 19, 0, 1, 17)).setObjects(("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", "avWlanSwitchNotifAuxAuxLimitsReached"))
if mibBuilder.loadTexts: avWlanSwitchLimitsReached.setStatus('current')
if mibBuilder.loadTexts: avWlanSwitchLimitsReached.setDescription('This trap signifies that the SNMP entity, acting in an agent role, has detected some switch limits being reached. The bit mask avWlanSwitchNotifAuxLimitsReached is send in the trap to indicate the parameter for which limits are reached. This trap is enabled by default.')
mibBuilder.exportSymbols("AVAYA-WLAN-MOB-SW-NOTIFICATIONS-MIB", avWlanSwitchLostConnectionToVlanServer=avWlanSwitchLostConnectionToVlanServer, avWlanNotifAuxPeerDeviceAddress=avWlanNotifAuxPeerDeviceAddress, avWlanNotifAuxMobilityControllerInetAddressType=avWlanNotifAuxMobilityControllerInetAddressType, avWlanNotifAuxNumberOfVlanEntries=avWlanNotifAuxNumberOfVlanEntries, avWlanNotifAuxPeerDeviceType=avWlanNotifAuxPeerDeviceType, avWlanSwitchIgmpControlFrameReceived=avWlanSwitchIgmpControlFrameReceived, avWlanMobSwNotificationObjects=avWlanMobSwNotificationObjects, avWlanNotifAuxVlanServerAddress=avWlanNotifAuxVlanServerAddress, PYSNMP_MODULE_ID=avayaWlanMobSwitchNotificationsMib, avWlanMobSwNotifications=avWlanMobSwNotifications, avWlanNotifAuxMobilityVlanPeerGenerationNumber=avWlanNotifAuxMobilityVlanPeerGenerationNumber, avWlanNotifAuxNewState=avWlanNotifAuxNewState, avWlanSwitchIgmpSnoopingEnabled=avWlanSwitchIgmpSnoopingEnabled, avWlanSwitchVlanMapRemoved=avWlanSwitchVlanMapRemoved, avWlanSwitchMCPLostConnection=avWlanSwitchMCPLostConnection, avWlanSwitchPeerDeviceConnectionEstablished=avWlanSwitchPeerDeviceConnectionEstablished, avWlanNotifAuxVlanServerInetAddressType=avWlanNotifAuxVlanServerInetAddressType, avWlanNotifAuxMobilityVlanSelfGenerationNumber=avWlanNotifAuxMobilityVlanSelfGenerationNumber, avWlanNotifAuxPeerDeviceInetAddress=avWlanNotifAuxPeerDeviceInetAddress, avWlanSwitchVlanMapStateChanged=avWlanSwitchVlanMapStateChanged, avWlanSwitchIgmpSnoopingDisabled=avWlanSwitchIgmpSnoopingDisabled, avWlanNotifAuxMSTDownloadEntries=avWlanNotifAuxMSTDownloadEntries, avWlanSwitchVlanGenNumberMismatch=avWlanSwitchVlanGenNumberMismatch, avWlanNotifAuxMobilityControllerInetAddress=avWlanNotifAuxMobilityControllerInetAddress, avWlanNotifAuxRemoveReason=avWlanNotifAuxRemoveReason, avWlanSwitchMVTDownload=avWlanSwitchMVTDownload, avWlanSwitchMCPConnectionEstablished=avWlanSwitchMCPConnectionEstablished, avWlanNotifAuxInetAddress=avWlanNotifAuxInetAddress, avWlanSwitchMSTDownload=avWlanSwitchMSTDownload, avWlanNotifAuxOldVlanRole=avWlanNotifAuxOldVlanRole, avWlanSwitchNotifications=avWlanSwitchNotifications, avWlanNotifAuxControlFrameType=avWlanNotifAuxControlFrameType, avWlanNotifAuxMobilityVlanName=avWlanNotifAuxMobilityVlanName, avWlanNotifAuxRoleChangeReason=avWlanNotifAuxRoleChangeReason, avWlanNotifAuxConnectionFailureReason=avWlanNotifAuxConnectionFailureReason, avayaWlanMobSwitchNotificationsMib=avayaWlanMobSwitchNotificationsMib, avWlanMobSwNotificationAuxObjects=avWlanMobSwNotificationAuxObjects, avWlanNotifAuxInetAddressType=avWlanNotifAuxInetAddressType, avWlanNotifAuxVlanServerInetAddress=avWlanNotifAuxVlanServerInetAddress, avWlanSwitchLimitsReached=avWlanSwitchLimitsReached, avWlanSwitchPeerDeviceLostConnection=avWlanSwitchPeerDeviceLostConnection, avWlanSwitchVlanRoleChanged=avWlanSwitchVlanRoleChanged, avWlanNotifAuxVlanState=avWlanNotifAuxVlanState, avWlanNotifAuxPeerDeviceInetAddressType=avWlanNotifAuxPeerDeviceInetAddressType, avWlanNotifAuxStateChangeReason=avWlanNotifAuxStateChangeReason, avWlanSwitchVlanServerElected=avWlanSwitchVlanServerElected, avWlanSwitchVlanTrackAffected=avWlanSwitchVlanTrackAffected, avWlanSwitchNotifAuxAuxLimitsReached=avWlanSwitchNotifAuxAuxLimitsReached, avWlanNotifAuxNewVlanRole=avWlanNotifAuxNewVlanRole, avWlanNotifAuxOldState=avWlanNotifAuxOldState)
