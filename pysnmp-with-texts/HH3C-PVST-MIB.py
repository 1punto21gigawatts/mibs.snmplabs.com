#
# PySNMP MIB module HH3C-PVST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-PVST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:29:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Gauge32, IpAddress, Integer32, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, NotificationType, Counter32, iso, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "IpAddress", "Integer32", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "NotificationType", "Counter32", "iso", "Unsigned32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cPvst = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 131))
hh3cPvst.setRevisions(('2014-05-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cPvst.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: hh3cPvst.setLastUpdated('201405270000Z')
if mibBuilder.loadTexts: hh3cPvst.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cPvst.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085')
if mibBuilder.loadTexts: hh3cPvst.setDescription('This MIB defines objects for managing Per-VLAN spanning tree (PVST).')
hh3cPvstObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1))
hh3cPvstNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 131, 2))
hh3cPvstVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 1), )
if mibBuilder.loadTexts: hh3cPvstVlanConfigTable.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanConfigTable.setDescription('PVST VLAN configuration table.')
hh3cPvstVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 1, 1), ).setIndexNames((0, "HH3C-PVST-MIB", "hh3cPvstVlanID"))
if mibBuilder.loadTexts: hh3cPvstVlanConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanConfigEntry.setDescription('PVST VLAN configuration table entry.')
hh3cPvstVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPvstVlanID.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanID.setDescription('The index of the VLAN configuration table.')
hh3cPvstVlanPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 2), )
if mibBuilder.loadTexts: hh3cPvstVlanPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanPortConfigTable.setDescription('PVST VLAN port configuration table.')
hh3cPvstVlanPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 2, 1), ).setIndexNames((0, "HH3C-PVST-MIB", "hh3cPvstPortVlanID"), (0, "HH3C-PVST-MIB", "hh3cPvstPortIndex"))
if mibBuilder.loadTexts: hh3cPvstVlanPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanPortConfigEntry.setDescription('PVST VLAN port configuration table entry.')
hh3cPvstPortVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPvstPortVlanID.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstPortVlanID.setDescription('The index of the VLAN.')
hh3cPvstPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 131, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cPvstPortIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstPortIndex.setDescription('The index of the bridge port.')
hh3cPvstEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 131, 2, 0))
hh3cPvstVlanPortDetectedTc = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 131, 2, 0, 1)).setObjects(("HH3C-PVST-MIB", "hh3cPvstPortVlanID"), ("HH3C-PVST-MIB", "hh3cPvstPortIndex"))
if mibBuilder.loadTexts: hh3cPvstVlanPortDetectedTc.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanPortDetectedTc.setDescription('The SNMP trap is generated when a port detects a topology change in a VLAN.')
hh3cPvstVlanPortRcvdTc = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 131, 2, 0, 2)).setObjects(("HH3C-PVST-MIB", "hh3cPvstPortVlanID"), ("HH3C-PVST-MIB", "hh3cPvstPortIndex"))
if mibBuilder.loadTexts: hh3cPvstVlanPortRcvdTc.setStatus('current')
if mibBuilder.loadTexts: hh3cPvstVlanPortRcvdTc.setDescription('The SNMP trap is generated when a port receives a topology change in a VLAN.')
mibBuilder.exportSymbols("HH3C-PVST-MIB", hh3cPvstVlanPortDetectedTc=hh3cPvstVlanPortDetectedTc, hh3cPvstVlanPortConfigTable=hh3cPvstVlanPortConfigTable, hh3cPvstVlanConfigEntry=hh3cPvstVlanConfigEntry, hh3cPvstPortVlanID=hh3cPvstPortVlanID, hh3cPvstNotifications=hh3cPvstNotifications, hh3cPvstPortIndex=hh3cPvstPortIndex, hh3cPvstEvents=hh3cPvstEvents, PYSNMP_MODULE_ID=hh3cPvst, hh3cPvstVlanID=hh3cPvstVlanID, hh3cPvstObjects=hh3cPvstObjects, hh3cPvstVlanPortRcvdTc=hh3cPvstVlanPortRcvdTc, hh3cPvstVlanPortConfigEntry=hh3cPvstVlanPortConfigEntry, hh3cPvst=hh3cPvst, hh3cPvstVlanConfigTable=hh3cPvstVlanConfigTable)
