#
# PySNMP MIB module FORTINET-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FORTINET-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:14:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
fortinet, fortinetTrap = mibBuilder.importSymbols("FORTINET-MIB", "fortinet", "fortinetTrap")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Integer32, IpAddress, MibIdentifier, Counter64, NotificationType, Unsigned32, TimeTicks, Counter32, Gauge32, ModuleIdentity, NotificationType, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "IpAddress", "MibIdentifier", "Counter64", "NotificationType", "Unsigned32", "TimeTicks", "Counter32", "Gauge32", "ModuleIdentity", "NotificationType", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
fnTrapSysSn = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapSysSn.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapSysSn.setDescription('The serial number of the Fortigate.')
fnTrapIfName = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfName.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapIfName.setDescription('The interface name')
fnTrapIfIp = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfIp.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapIfIp.setDescription('The IP address of the corresponding interface.')
fnTrapIfNetmask = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapIfNetmask.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapIfNetmask.setDescription('The netmask of the interface.')
fnTrapType = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(51, 52, 101, 102, 103, 104, 105, 106, 107, 301, 401, 402, 501, 502, 601, 901))).clone(namedValues=NamedValues(("link-up", 51), ("link-down", 52), ("cpu-usage-high", 101), ("memory-low", 102), ("disk-low", 103), ("interface-ip-change", 104), ("system-dead", 105), ("ha-swtich", 106), ("hardware-problem", 107), ("auth-srv-unreachable", 301), ("vpn-tunnel-up", 401), ("vpn-tunnel-down", 402), ("syn-flood-attack", 501), ("port-scan-attack", 502), ("virus-detected", 601), ("log-full", 901)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapType.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapType.setDescription('The integer value of the raised trap type. Note that the type should be interpreted within a specific description')
fnTrapDesc = MibScalar((1, 3, 6, 1, 4, 1, 12356, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fnTrapDesc.setStatus('mandatory')
if mibBuilder.loadTexts: fnTrapDesc.setDescription('The textual description of the trap')
fnTrapColdStart = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,0))
if mibBuilder.loadTexts: fnTrapColdStart.setDescription('This trap indicates that the system just rebooted.')
fnTrapSystemDown = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,10))
if mibBuilder.loadTexts: fnTrapSystemDown.setDescription('This trap indicates the that snmp agent went down as the result of SIGTERM. ')
fnTrapAgentDown = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,11))
if mibBuilder.loadTexts: fnTrapAgentDown.setDescription('This trap indicates that the snmp agent just stopped.')
fnTrapAgentUp = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,12))
if mibBuilder.loadTexts: fnTrapAgentUp.setDescription('This trap indicates that the snmp agent just started.')
fnTrapInfChg = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,100)).setObjects(("FORTINET-TRAP-MIB", "fnTrapSysSn"), ("FORTINET-TRAP-MIB", "fnTrapIfName"), ("FORTINET-TRAP-MIB", "fnTrapIfNetmask"), ("FORTINET-TRAP-MIB", "fnTrapSysSn"))
if mibBuilder.loadTexts: fnTrapInfChg.setDescription('This trap indicates that the IP address of the inerface has been changed.')
fnTrapSystem = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,101)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapSystem.setDescription('This trap indicates that some kind of system issue.')
fnTrapFirewall = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,200)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapFirewall.setDescription('This trap indicates that some kind of system issue.')
fnTrapUser = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,300)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapUser.setDescription('This trap indicates that some kind of system issue.')
fnTrapVpn = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,400)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapVpn.setDescription('This trap indicates that some kind of system issue.')
fnTrapNids = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,500)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapNids.setDescription('This trap indicates that some kind of system issue.')
fnTrapAntiVirus = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,600)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapAntiVirus.setDescription('This trap indicates that some kind of system issue.')
fnTrapWebFilter = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,700)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapWebFilter.setDescription('This trap indicates that some kind of system issue.')
fnTrapEmailFilter = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,800)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapEmailFilter.setDescription('This trap indicates that some kind of system issue.')
fnTrapLog = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,900)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapLog.setDescription('This trap indicates that some kind of system issue.')
fnTrapMisc = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,1000)).setObjects(("FORTINET-TRAP-MIB", "fnTrapType"), ("FORTINET-TRAP-MIB", "fnTrapDesc"))
if mibBuilder.loadTexts: fnTrapMisc.setDescription('This trap indicates that some kind of system issue.')
fnTrapDemoUpdateConfig = NotificationType((1, 3, 6, 1, 4, 1, 12356) + (0,10000)).setObjects(("FORTINET-TRAP-MIB", "fnTrapSysSn"), ("FORTINET-TRAP-MIB", "fnTrapIfName"), ("FORTINET-TRAP-MIB", "fnTrapIfNetmask"), ("FORTINET-TRAP-MIB", "fnTrapSysSn"))
if mibBuilder.loadTexts: fnTrapDemoUpdateConfig.setDescription('This trap indicates that the FGT requests new configuration from management application, including FortiManager. When management application receives this trap, it should push device configuration to FGT. So this trap should be used very carefully, it causes FGT configuration being overwritten by the configuration received from management application.')
mibBuilder.exportSymbols("FORTINET-TRAP-MIB", fnTrapFirewall=fnTrapFirewall, fnTrapAgentDown=fnTrapAgentDown, fnTrapIfNetmask=fnTrapIfNetmask, fnTrapType=fnTrapType, fnTrapMisc=fnTrapMisc, fnTrapSystemDown=fnTrapSystemDown, fnTrapColdStart=fnTrapColdStart, fnTrapEmailFilter=fnTrapEmailFilter, fnTrapInfChg=fnTrapInfChg, fnTrapVpn=fnTrapVpn, fnTrapAgentUp=fnTrapAgentUp, fnTrapDemoUpdateConfig=fnTrapDemoUpdateConfig, fnTrapWebFilter=fnTrapWebFilter, fnTrapLog=fnTrapLog, fnTrapSysSn=fnTrapSysSn, fnTrapUser=fnTrapUser, fnTrapSystem=fnTrapSystem, fnTrapAntiVirus=fnTrapAntiVirus, fnTrapDesc=fnTrapDesc, fnTrapNids=fnTrapNids, fnTrapIfIp=fnTrapIfIp, fnTrapIfName=fnTrapIfName)
