#
# PySNMP MIB module ONEACCESS-SSH-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-SSH-CONFIG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:34:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
oacExpIMIpAcl, oacExpIMManagement, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMIpAcl", "oacExpIMManagement", "oacMIBModules")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, Unsigned32, Integer32, TimeTicks, MibIdentifier, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, IpAddress, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Unsigned32", "Integer32", "TimeTicks", "MibIdentifier", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "IpAddress", "Counter32", "Counter64")
TextualConvention, PhysAddress, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "PhysAddress", "DisplayString", "TruthValue", "RowStatus")
oacSshConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 2004))
oacSshConfigMIB.setRevisions(('2011-07-26 00:00', '2011-06-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: oacSshConfigMIB.setRevisionsDescriptions(('Contact updated', 'MIB for displaying and configuring Secure Shell (SSH) related features.',))
if mibBuilder.loadTexts: oacSshConfigMIB.setLastUpdated('201107260000Z')
if mibBuilder.loadTexts: oacSshConfigMIB.setOrganization(' OneAccess ')
if mibBuilder.loadTexts: oacSshConfigMIB.setContactInfo('Pascal KESTELOOT Postal: ONE ACCESS 381 Avenue du Gnral de Gaulle 92140 Clamart, France FRANCE Tel: (+33) 01 41 87 70 00 Fax: (+33) 01 41 87 74 00 E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacSshConfigMIB.setDescription('Fixed the issues related to octet string range')
oacSshConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22))
oacSshConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1))
oacSshConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 2))
oacSshDsaKey = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 256, 512, 1024, 2048))).clone(namedValues=NamedValues(("keysize-0bits", 0), ("keysize-256bits", 256), ("keysize-512bits", 512), ("keysize-1024bits", 1024), ("keysize-2048bits", 2048)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshDsaKey.setStatus('current')
if mibBuilder.loadTexts: oacSshDsaKey.setDescription('To generate a public key.')
oacSshEnabled = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshEnabled.setStatus('current')
if mibBuilder.loadTexts: oacSshEnabled.setDescription('Controls the operation of the Secure Shell server task on the oneos. When enabled, the SSH server will accept connection requests and create a secure transport layer on which to transmit system configuration data.')
oacSshIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(120, 4294967295)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshIdleTimeout.setStatus('current')
if mibBuilder.loadTexts: oacSshIdleTimeout.setDescription('If a connected SSH client is inactive during a certain time, it is disconnected. By default, any inactive SSH client is disconnected after 10 minutes.')
oacSshAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshAuthTimeout.setStatus('current')
if mibBuilder.loadTexts: oacSshAuthTimeout.setDescription('If an SSH client is in the authentication phase and it is inactive during a certain time it is disconnected. By default, any inactive SSH client doing an authentication is disconnected after 2 minutes.')
oacSshAuthRetries = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 5), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshAuthRetries.setStatus('current')
if mibBuilder.loadTexts: oacSshAuthRetries.setDescription('By default, the authentication retries number is 3.')
oacSshBindInterface = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshBindInterface.setStatus('current')
if mibBuilder.loadTexts: oacSshBindInterface.setDescription('To permit SSH access from an interface, default configuration is any.')
oacSshBindAcl = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshBindAcl.setStatus('current')
if mibBuilder.loadTexts: oacSshBindAcl.setDescription('To restrict access to SSH clients by using a list of addresses standing for the list of permitted source IP addresses.')
oacSshMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshMaxSessions.setStatus('current')
if mibBuilder.loadTexts: oacSshMaxSessions.setDescription('By default, the maximum number of channels per session is 5 and the maximum number of local port forwarding sessions is 5.')
oacSshMaxSessionChannels = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacSshMaxSessionChannels.setStatus('current')
if mibBuilder.loadTexts: oacSshMaxSessionChannels.setDescription('Maximum number of channels that a SSH session can use.')
oacSshConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 2, 1))
oacSshConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 2, 1, 1)).setObjects(("ONEACCESS-SSH-CONFIG-MIB", "oacSshEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacSshConfigGroup = oacSshConfigGroup.setStatus('current')
if mibBuilder.loadTexts: oacSshConfigGroup.setDescription('Group of SSH objects')
oacSshCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 4, 22, 2, 2))
mibBuilder.exportSymbols("ONEACCESS-SSH-CONFIG-MIB", oacSshConfigMIB=oacSshConfigMIB, oacSshAuthRetries=oacSshAuthRetries, oacSshIdleTimeout=oacSshIdleTimeout, oacSshConfig=oacSshConfig, oacSshEnabled=oacSshEnabled, oacSshMaxSessions=oacSshMaxSessions, oacSshMaxSessionChannels=oacSshMaxSessionChannels, oacSshConfigGroups=oacSshConfigGroups, oacSshConfigObjects=oacSshConfigObjects, oacSshBindAcl=oacSshBindAcl, PYSNMP_MODULE_ID=oacSshConfigMIB, oacSshCompls=oacSshCompls, oacSshBindInterface=oacSshBindInterface, oacSshConfigConformance=oacSshConfigConformance, oacSshConfigGroup=oacSshConfigGroup, oacSshAuthTimeout=oacSshAuthTimeout, oacSshDsaKey=oacSshDsaKey)
