#
# PySNMP MIB module HUAWEI-RBRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-RBRP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:48:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Unsigned32, ObjectIdentity, IpAddress, Counter32, Bits, TimeTicks, MibIdentifier, Integer32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Unsigned32", "ObjectIdentity", "IpAddress", "Counter32", "Bits", "TimeTicks", "MibIdentifier", "Integer32", "iso", "ModuleIdentity")
DisplayString, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "RowStatus")
hwRBRPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117))
if mibBuilder.loadTexts: hwRBRPMIB.setLastUpdated('200703310130Z')
if mibBuilder.loadTexts: hwRBRPMIB.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwRBRPMIB.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwRBRPMIB.setDescription('The MIB module for RBRP feature. RPR Bridge Redundancy Protocol (RBRP) is the protocol for detecting and initializing the intersection ring configuration, and providing protection for data transfer from one rpr ring to another one via intersection rpr stations.')
class EnabledStatus(TextualConvention, Integer32):
    description = 'A simple status value for the object.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

hwRBRPMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1))
hwRBRPLocalDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPLocalDeviceID.setStatus('current')
if mibBuilder.loadTexts: hwRBRPLocalDeviceID.setDescription('Set the identity which distinguishes local device from other devices in a specific group.')
hwRBRPWrapToNormalTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2), )
if mibBuilder.loadTexts: hwRBRPWrapToNormalTable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPWrapToNormalTable.setDescription('Table contains WrapToNormalDelay information in the ring-if .')
hwRBRPWrapToNormalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPRingIfIndex"))
if mibBuilder.loadTexts: hwRBRPWrapToNormalEntry.setStatus('current')
if mibBuilder.loadTexts: hwRBRPWrapToNormalEntry.setDescription('An entry contains WrapToNormalDelay information of ring-if in the device.')
hwRBRPRingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwRBRPRingIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwRBRPRingIfIndex.setDescription('RPR logic interface index.')
hwRBRPWrapToNormalVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPWrapToNormalVal.setStatus('current')
if mibBuilder.loadTexts: hwRBRPWrapToNormalVal.setDescription('This object sets WrapToNormalDelay time of ring-if.')
hwRBRPGroupCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3), )
if mibBuilder.loadTexts: hwRBRPGroupCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupCfgTable.setDescription('Table contains group based configuration information for RBRP.')
hwRBRPGroupCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPGroupCfgGroupID"))
if mibBuilder.loadTexts: hwRBRPGroupCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupCfgEntry.setDescription('An entry, which contains configuration information for a specific group, is created for each group in the device and deleted when the device exit the group.')
hwRBRPGroupCfgGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPGroupCfgGroupID.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupCfgGroupID.setDescription('This object distinguishes a specific group from other groups in the device.')
hwRBRPPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPriorityValue.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPriorityValue.setDescription("This object indicates the device's priority which determines the status of a device in a specific group. The non-unready device with the largest priority value is in active status. When a device's priority is equal to another device's, the DeviceId will be the determining factor of a device's status.")
hwRBRPPreemptedEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 12), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPreemptedEnable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPreemptedEnable.setDescription('If PreemptedEnable is configured in a device which is in active status in a specific group, its status could be preempted by device with larger priority value.')
hwRBRPStatePromptSwitchEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 13), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPStatePromptSwitchEnable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatePromptSwitchEnable.setDescription('If StatePromptSwitchEnable is configured on a common station which belongs to a specific group, The common station moves from standby state to active state promptly when multiple-site faults occur to the primary ring.')
hwRBRPPreemptDelayValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 1200)).clone(120)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPPreemptDelayValue.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPreemptDelayValue.setDescription('This object is used to set the delay for the station moving from the active state to the ready state after preempted.')
hwRBRPGroupCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 3, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPGroupCfgRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupCfgRowStatus.setDescription('RowStatus, Now support three value:CreateAndGo,Active,Destroy.')
hwRBRPPGRingIfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4), )
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgTable.setDescription('Table contains configuration information of ring-if in specific group.')
hwRBRPPGRingIfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPPGGroupID"), (0, "HUAWEI-RBRP-MIB", "hwRBRPRingType"))
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgEntry.setDescription('An entry contains configuration information of ring-if in specific group.')
hwRBRPPGGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPPGGroupID.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPGGroupID.setDescription('This object distinguishes a specific group from other groups in the device.')
hwRBRPRingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: hwRBRPRingType.setStatus('current')
if mibBuilder.loadTexts: hwRBRPRingType.setDescription('This object indicates a ring-if is on the primary rpr ring or on the secondary rpr ring.')
hwRBRPRGRingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 11), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPRGRingIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwRBRPRGRingIfIndex.setDescription('RPR logic interface index.')
hwRBRPGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 4, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRBRPGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupRowStatus.setDescription('RowStatus, Now support three value:CreateAndGo,Active,Destroy.')
hwRBRPPStatisTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5), )
if mibBuilder.loadTexts: hwRBRPPStatisTable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPStatisTable.setDescription('Table contains statistics information of RBRP packets.')
hwRBRPPStatisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPStatisGroupID"))
if mibBuilder.loadTexts: hwRBRPPStatisEntry.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPStatisEntry.setDescription('An entry contains statistics information of RBRP packets.')
hwRBRPStatisGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPStatisGroupID.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatisGroupID.setDescription('This object distinguishes a specific group from other groups in the device.')
hwRBRPStatisRevPacketsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisRevPacketsNum.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatisRevPacketsNum.setDescription('This object indicates the number of RBRP packets received from a specific group.')
hwRBRPStatisRevByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisRevByteNum.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatisRevByteNum.setDescription('This object indicates the number of RBRP bytes received from a specific group.')
hwRBRPStatisSendPacketsNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisSendPacketsNum.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatisSendPacketsNum.setDescription('This object indicates the number of RBRP packets sendedd to a specific group.')
hwRBRPStatisSendByteNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPStatisSendByteNum.setStatus('current')
if mibBuilder.loadTexts: hwRBRPStatisSendByteNum.setDescription('This object indicates the number of RBRP bytes sendedd to a specific group.')
hwRBRPClearStatisticPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 5, 1, 15), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwRBRPClearStatisticPacket.setStatus('current')
if mibBuilder.loadTexts: hwRBRPClearStatisticPacket.setDescription('Clear the statistics information of RBRP packets.')
hwRBRPGroupInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6), )
if mibBuilder.loadTexts: hwRBRPGroupInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupInfoTable.setDescription('Table contains RBRP group information.')
hwRBRPGroupInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1), ).setIndexNames((0, "HUAWEI-RBRP-MIB", "hwRBRPGroupID"), (0, "HUAWEI-RBRP-MIB", "hwRBRPDeviceId"))
if mibBuilder.loadTexts: hwRBRPGroupInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupInfoEntry.setDescription('An entry contains RBRP group information.')
hwRBRPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwRBRPGroupID.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupID.setDescription('This object distinguishes a specific group from other groups in the device.')
hwRBRPDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwRBRPDeviceId.setStatus('current')
if mibBuilder.loadTexts: hwRBRPDeviceId.setDescription('This object distinguishes a specific device from other devices in the groups.')
hwRBRPPrimaryRPRMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPPrimaryRPRMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPrimaryRPRMacAddress.setDescription('This object indicates the mac address of rpr station on the primary rpr ring.')
hwRBRPSecondaryRPRMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPSecondaryRPRMacAddress.setStatus('current')
if mibBuilder.loadTexts: hwRBRPSecondaryRPRMacAddress.setDescription('This object indicates the mac address of rpr station on the secondary rpr ring.')
hwRBRPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPPriority.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPriority.setDescription('This object indicates the priority of a device in specific group.')
hwRBRPCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRBRPCurrentStatus.setStatus('current')
if mibBuilder.loadTexts: hwRBRPCurrentStatus.setDescription('This object indicates the status of a device in specific group. Now support four state:Unready, Ready, Standby, and Active.')
hwRBRPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2))
hwRBRPDeviceIDConflict = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 1)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPCurrentStatus"))
if mibBuilder.loadTexts: hwRBRPDeviceIDConflict.setStatus('current')
if mibBuilder.loadTexts: hwRBRPDeviceIDConflict.setDescription('The device id conflict defect. When a device id conflict defect is present, a notification may be generated.')
hwRBRPUnreadyStatus = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 2)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if mibBuilder.loadTexts: hwRBRPUnreadyStatus.setStatus('current')
if mibBuilder.loadTexts: hwRBRPUnreadyStatus.setDescription('The Unready status defect. When an Unready status defect is present, a notification may be generated.')
hwRBRPClearUnreadyStatus = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 2, 3)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if mibBuilder.loadTexts: hwRBRPClearUnreadyStatus.setStatus('current')
if mibBuilder.loadTexts: hwRBRPClearUnreadyStatus.setDescription('The Unready status restore. When a Ready status is present, a notification may be generated.')
hwRBRPConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3))
hwRBRPGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1))
hwRBRPLoclaDeveceIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 1)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPLocalDeviceID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPLoclaDeveceIDGroup = hwRBRPLoclaDeveceIDGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPLoclaDeveceIDGroup.setDescription('Description.')
hwRBRPWrapToNormalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 2)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPWrapToNormalVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPWrapToNormalGroup = hwRBRPWrapToNormalGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPWrapToNormalGroup.setDescription('Description.')
hwRBRPGroupCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 3)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPPriorityValue"), ("HUAWEI-RBRP-MIB", "hwRBRPPreemptDelayValue"), ("HUAWEI-RBRP-MIB", "hwRBRPGroupCfgRowStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPStatePromptSwitchEnable"), ("HUAWEI-RBRP-MIB", "hwRBRPPreemptedEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPGroupCfgGroup = hwRBRPGroupCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupCfgGroup.setDescription('Description.')
hwRBRPPGRingIfCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 4)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPRGRingIfIndex"), ("HUAWEI-RBRP-MIB", "hwRBRPGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPPGRingIfCfgGroup = hwRBRPPGRingIfCfgGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPGRingIfCfgGroup.setDescription('Description.')
hwRBRPPStatisGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 5)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPStatisRevPacketsNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisRevByteNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisSendPacketsNum"), ("HUAWEI-RBRP-MIB", "hwRBRPStatisSendByteNum"), ("HUAWEI-RBRP-MIB", "hwRBRPClearStatisticPacket"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPPStatisGroup = hwRBRPPStatisGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPPStatisGroup.setDescription('Description.')
hwRBRPGroupInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 6)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPCurrentStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPPriority"), ("HUAWEI-RBRP-MIB", "hwRBRPSecondaryRPRMacAddress"), ("HUAWEI-RBRP-MIB", "hwRBRPPrimaryRPRMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPGroupInfoGroup = hwRBRPGroupInfoGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPGroupInfoGroup.setDescription('Description.')
hwRBRPTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 117, 3, 1, 7)).setObjects(("HUAWEI-RBRP-MIB", "hwRBRPClearUnreadyStatus"), ("HUAWEI-RBRP-MIB", "hwRBRPDeviceIDConflict"), ("HUAWEI-RBRP-MIB", "hwRBRPUnreadyStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRBRPTrapGroup = hwRBRPTrapGroup.setStatus('current')
if mibBuilder.loadTexts: hwRBRPTrapGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-RBRP-MIB", hwRBRPGroupInfoEntry=hwRBRPGroupInfoEntry, hwRBRPGroupRowStatus=hwRBRPGroupRowStatus, EnabledStatus=EnabledStatus, hwRBRPStatisRevByteNum=hwRBRPStatisRevByteNum, hwRBRPRGRingIfIndex=hwRBRPRGRingIfIndex, hwRBRPGroupCfgGroup=hwRBRPGroupCfgGroup, hwRBRPGroupCfgRowStatus=hwRBRPGroupCfgRowStatus, hwRBRPWrapToNormalGroup=hwRBRPWrapToNormalGroup, hwRBRPClearUnreadyStatus=hwRBRPClearUnreadyStatus, hwRBRPMibObject=hwRBRPMibObject, hwRBRPCurrentStatus=hwRBRPCurrentStatus, hwRBRPSecondaryRPRMacAddress=hwRBRPSecondaryRPRMacAddress, hwRBRPPStatisGroup=hwRBRPPStatisGroup, hwRBRPWrapToNormalTable=hwRBRPWrapToNormalTable, hwRBRPDeviceId=hwRBRPDeviceId, hwRBRPStatisSendPacketsNum=hwRBRPStatisSendPacketsNum, hwRBRPConformance=hwRBRPConformance, hwRBRPPGRingIfCfgEntry=hwRBRPPGRingIfCfgEntry, hwRBRPClearStatisticPacket=hwRBRPClearStatisticPacket, hwRBRPTrapGroup=hwRBRPTrapGroup, hwRBRPPGGroupID=hwRBRPPGGroupID, hwRBRPPStatisTable=hwRBRPPStatisTable, hwRBRPPGRingIfCfgGroup=hwRBRPPGRingIfCfgGroup, hwRBRPTraps=hwRBRPTraps, hwRBRPUnreadyStatus=hwRBRPUnreadyStatus, hwRBRPLoclaDeveceIDGroup=hwRBRPLoclaDeveceIDGroup, hwRBRPGroupCfgEntry=hwRBRPGroupCfgEntry, hwRBRPWrapToNormalEntry=hwRBRPWrapToNormalEntry, hwRBRPLocalDeviceID=hwRBRPLocalDeviceID, hwRBRPPreemptDelayValue=hwRBRPPreemptDelayValue, hwRBRPWrapToNormalVal=hwRBRPWrapToNormalVal, hwRBRPPStatisEntry=hwRBRPPStatisEntry, hwRBRPStatisGroupID=hwRBRPStatisGroupID, hwRBRPGroupInfoTable=hwRBRPGroupInfoTable, hwRBRPGroupID=hwRBRPGroupID, hwRBRPGroups=hwRBRPGroups, hwRBRPMIB=hwRBRPMIB, hwRBRPPriority=hwRBRPPriority, hwRBRPGroupInfoGroup=hwRBRPGroupInfoGroup, hwRBRPPriorityValue=hwRBRPPriorityValue, hwRBRPRingIfIndex=hwRBRPRingIfIndex, hwRBRPGroupCfgTable=hwRBRPGroupCfgTable, hwRBRPPGRingIfCfgTable=hwRBRPPGRingIfCfgTable, hwRBRPRingType=hwRBRPRingType, hwRBRPPrimaryRPRMacAddress=hwRBRPPrimaryRPRMacAddress, hwRBRPDeviceIDConflict=hwRBRPDeviceIDConflict, PYSNMP_MODULE_ID=hwRBRPMIB, hwRBRPPreemptedEnable=hwRBRPPreemptedEnable, hwRBRPGroupCfgGroupID=hwRBRPGroupCfgGroupID, hwRBRPStatePromptSwitchEnable=hwRBRPStatePromptSwitchEnable, hwRBRPStatisRevPacketsNum=hwRBRPStatisRevPacketsNum, hwRBRPStatisSendByteNum=hwRBRPStatisSendByteNum)
