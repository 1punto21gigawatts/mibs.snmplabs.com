#
# PySNMP MIB module MULTICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MULTICAST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:16:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
switch, quanta = mibBuilder.importSymbols("QUANTA-SWITCH-MIB", "switch", "quanta")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, ModuleIdentity, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Counter64, Counter32, NotificationType, IpAddress, TimeTicks, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Counter64", "Counter32", "NotificationType", "IpAddress", "TimeTicks", "Gauge32", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
multicast = ModuleIdentity((1, 3, 6, 1, 4, 1, 7244, 2, 4))
multicast.setRevisions(('2011-08-31 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: multicast.setRevisionsDescriptions(('Updated for release',))
if mibBuilder.loadTexts: multicast.setLastUpdated('201108310000Z')
if mibBuilder.loadTexts: multicast.setOrganization('Quanta Computer Inc.')
if mibBuilder.loadTexts: multicast.setContactInfo(' Customer Support Postal: Quanta Computer Inc. No. 211, Wen Hwa 2nd Rd., Kuei Shan Hsiang, Tao Yuan Shien, Taiwan, R.O.C. Tel: +886 3 327 2345')
if mibBuilder.loadTexts: multicast.setDescription('The MIB definitions for Multicast Routing Flex package.')
agentMulticastIGMPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1))
agentMulticastIGMPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIGMPAdminMode.setDescription('This enables or disables IGMP on the system.')
agentMulticastIGMPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 2), )
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceTable.setDescription('Provides Per-Interface configuration of IGMP.')
agentMulticastIGMPInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 2, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIGMPInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastIGMPInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastIGMPInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPInterfaceAdminMode.setDescription('This enables or disables IGMP on this interface.')
agentMulticastIGMPProxyInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 3), )
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceTable.setDescription('Provides Per-Interface configuration of IGMP.')
agentMulticastIGMPProxyInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 3, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIGMPProxyInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastIGMPProxyInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastIGMPProxyInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceAdminMode.setDescription('This enables or disables IGMP proxy on this interface.')
agentMulticastIGMPProxyInterfaceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 260)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIGMPProxyInterfaceInterval.setDescription('IGMP proxy interval on this interface.')
agentMulticastPIMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 2))
agentMulticastPIMConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("sparse", 1), ("dense", 2))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastPIMConfigMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMConfigMode.setDescription('This shows which PIM mode configuration the PIM-MIB displays.')
agentMulticastPIMSMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3))
agentMulticastPIMSMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMSMAdminMode.setDescription('This enables or disables PIM Sparse Mode on the system.')
agentMulticastPIMSMDataThresholdRate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMDataThresholdRate.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMDataThresholdRate.setDescription('Specifies the minimum rate in Kbits/sec for the last hop router to initiate switching to the shortest path. Only support 0 and 1 (infinity).')
agentMulticastPIMSMStaticRPTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4), )
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMStaticRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMSMStaticRPIpAddr"), (0, "MULTICAST-MIB", "agentMulticastPIMSMStaticRPGroupIpAddr"), (0, "MULTICAST-MIB", "agentMulticastPIMSMStaticRPGroupIpMask"))
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPEntry.setDescription('Information about a table entry.')
agentMulticastPIMSMStaticRPIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPIpAddr.setDescription('IP Address of the RP.')
agentMulticastPIMSMStaticRPGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpAddr.setDescription('Group IP Address supported by the RP.')
agentMulticastPIMSMStaticRPGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4, 1, 3), IpAddress())
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPGroupIpMask.setDescription('Group mask for the group IP Address.')
agentMulticastPIMSMStaticRPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMStaticRPStatus.setDescription('Status of this entry in the Static RP Table. Allowed values are: active(1) - This entry is active destroy(6) - Setting an entry to this value removes the entry from the table.')
agentMulticastPIMSMCBSRInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 5), )
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMCBSRInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 5, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMSMCBSRInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMSMCBSRInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceIndex.setDescription('Routing Interface associated with this PIM SM configuration entry.')
agentMulticastPIMSMCBSRInterfaceHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceHashMaskLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfaceHashMaskLength.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMCBSRInterfacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfacePriority.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCBSRInterfacePriority.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMSSMTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 6), )
if mibBuilder.loadTexts: agentMulticastPIMSMSSMTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMSSMTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMSSMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 6, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMSMSSMGroupAddress"), (0, "MULTICAST-MIB", "agentMulticastPIMSMSSMGroupMask"))
if mibBuilder.loadTexts: agentMulticastPIMSMSSMEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMSSMEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMSMSSMGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 6, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMSSMGroupAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMSSMGroupAddress.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMSSMGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMSSMGroupMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMSSMGroupMask.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMSSMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMSSMStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMSSMStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7), )
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMSMInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMSMInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceIndex.setDescription('Routing Interface associated with this PIM SM configuration entry.')
agentMulticastPIMSMInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceAdminMode.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastPIMSMInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceHelloInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceHelloInterval.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMInterfaceJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceJoinPruneInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceJoinPruneInterval.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMInterfaceBsrBorder = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceBsrBorder.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceBsrBorder.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastPIMSMInterfaceDrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 6), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceDrPriority.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceDrPriority.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMInterfaceCBSRHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCBSRHashMaskLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCBSRHashMaskLength.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMInterfaceCRPPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCRPPreference.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMInterfaceCRPPreference.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMCandRPTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8), )
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastPIMSMCandRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMSMCandRPAddress"), (0, "MULTICAST-MIB", "agentMulticastPIMSMCandRPGroupAddress"), (0, "MULTICAST-MIB", "agentMulticastPIMSMCandRPGroupPrefixLength"))
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMSMCandRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPAddress.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastPIMSMCandRPGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPGroupAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPGroupAddress.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMCandRPGroupPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPGroupPrefixLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPGroupPrefixLength.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMSMCandRPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 3, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMSMCandRPStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastPIMDMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4))
agentMulticastPIMDMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMDMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastPIMDMAdminMode.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastPIMDMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 2), )
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-DM.')
agentMulticastPIMDMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 2, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastPIMDMInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastPIMDMInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceIndex.setDescription('Routing Interface associated with this PIM DM configuration entry.')
agentMulticastPIMDMInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceMode.setDescription('This enables or disables PIM Dense Interface Mode on the system.')
agentMulticastPIMDMInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceHelloInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastPIMDMInterfaceHelloInterval.setDescription('The hello interval of PIM Dense.')
agentMulticastRoutingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 5))
agentMulticastRoutingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastRoutingAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastRoutingAdminMode.setDescription('This enables or disables Multicast Routing Mode on the system.')
agentMulticastDVMRPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6))
agentMulticastDVMRPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastDVMRPAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastDVMRPAdminMode.setDescription('This enables or disables DVMRP on the system.')
agentMulticastDVMRPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2), )
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceTable.setDescription('Provides Per-Interface configuration of IGMP.')
agentMulticastDVMRPInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastDVMRPInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastDVMRPInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastDVMRPInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceAdminMode.setDescription('This enables or disables DVMRP on this interface.')
agentMulticastDVMRPInterfaceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceMetric.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceMetric.setDescription('DVMRP metric on this interface.')
agentMulticastDVMRPInterfaceGenerationId = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 6, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceGenerationId.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastDVMRPInterfaceGenerationId.setDescription('DVMRP Generation Id on this interface. The value of -1 is used to indicate NULL.')
agentMulticastMLDConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8))
agentMulticastMLDAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastMLDAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastMLDAdminMode.setDescription('This enables or disables MLD on the system.')
agentMulticastMLDInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 2), )
if mibBuilder.loadTexts: agentMulticastMLDInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDInterfaceTable.setDescription('Provides Per-Interface configuration of MLD.')
agentMulticastMLDInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 2, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastMLDInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastMLDInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastMLDInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastMLDInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastMLDInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastMLDInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDInterfaceAdminMode.setDescription('This enables or disables MLD on this interface.')
agentMulticastMLDProxyInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 3), )
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceTable.setDescription('Provides Per-Interface configuration of MLD.')
agentMulticastMLDProxyInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 3, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastMLDProxyInterfaceIfIndex"))
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceEntry.setDescription('Information about a table entry.')
agentMulticastMLDProxyInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceIfIndex.setDescription('Identifies the external interface number.')
agentMulticastMLDProxyInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceAdminMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceAdminMode.setDescription('This enables or disables MLD proxy on this interface.')
agentMulticastMLDProxyInterfaceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 260)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastMLDProxyInterfaceInterval.setDescription('MLD proxy interval on this interface.')
agentMulticastIPv6PIMSMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9))
agentMulticastIPv6PIMSMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMAdminMode.setDescription('This enables or disables PIM Sparse Mode on the system.')
agentMulticastIPv6PIMSMDataThresholdRate = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMDataThresholdRate.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMDataThresholdRate.setDescription('Specifies the minimum rate in Kbits/sec for the last hop router to initiate switching to the shortest path.')
agentMulticastIPv6PIMSMStaticRPTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastIPv6PIMSMStaticRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMStaticRPIpAddr"), (0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMStaticRPGroupIpAddr"), (0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMStaticRPGroupIpPrefix"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPEntry.setDescription('Information about a table entry.')
agentMulticastIPv6PIMSMStaticRPIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPIpAddr.setDescription('IPv6 Address of the RP.')
agentMulticastIPv6PIMSMStaticRPGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPGroupIpAddr.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPGroupIpAddr.setDescription('Group IPv6 Address supported by the RP.')
agentMulticastIPv6PIMSMStaticRPGroupIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPGroupIpPrefix.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPGroupIpPrefix.setDescription('Group mask for the group IP Address.')
agentMulticastIPv6PIMSMStaticRPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMStaticRPStatus.setDescription('Status of this entry in the Static RP Table. Allowed values are: active(1) - This entry is active destroy(6) - Setting an entry to this value removes the entry from the table.')
agentMulticastIPv6PIMSMCBSRInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 5), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastIPv6PIMSMCBSRInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 5, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMCBSRInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastIPv6PIMSMCBSRInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceIndex.setDescription('Routing Interface associated with this PIM SM configuration entry.')
agentMulticastIPv6PIMSMCBSRInterfaceHashMaskLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceHashMaskLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfaceHashMaskLength.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastIPv6PIMSMCBSRInterfacePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfacePriority.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCBSRInterfacePriority.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMSSMTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 6), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastIPv6PIMSMSSMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 6, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMSSMGroupAddress"), (0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMSSMGroupMask"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastIPv6PIMSMSSMGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 6, 1, 1), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMGroupAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMGroupAddress.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastIPv6PIMSMSSMGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMGroupMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMGroupMask.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMSSMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMSSMStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastIPv6PIMSMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastIPv6PIMSMInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceIndex.setDescription('Routing Interface associated with this PIM SM configuration entry.')
agentMulticastIPv6PIMSMInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceAdminMode.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastIPv6PIMSMInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceHelloInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceHelloInterval.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastIPv6PIMSMInterfaceJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceJoinPruneInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceJoinPruneInterval.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMInterfaceBsrBorder = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceBsrBorder.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceBsrBorder.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastIPv6PIMSMInterfaceDrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 7, 1, 6), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceDrPriority.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMInterfaceDrPriority.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMCandRPTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPTable.setDescription('Provides Per-Interface configuration of PIM-SM.')
agentMulticastIPv6PIMSMCandRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMCandRPAddress"), (0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMCandRPGroupAddress"), (0, "MULTICAST-MIB", "agentMulticastIPv6PIMSMCandRPGroupPrefixLength"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastIPv6PIMSMCandRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8, 1, 1), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPAddress.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastIPv6PIMSMCandRPGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8, 1, 2), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPGroupAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPGroupAddress.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMCandRPGroupPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPGroupPrefixLength.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPGroupPrefixLength.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMSMCandRPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 9, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMSMCandRPStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastIPv6PIMDMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10))
agentMulticastIPv6PIMDMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMAdminMode.setStatus('current')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMAdminMode.setDescription('This enables or disables PIM Dense Mode on the system.')
agentMulticastIPv6PIMDMInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 2), )
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceTable.setDescription('Provides Per-Interface configuration of PIM-DM.')
agentMulticastIPv6PIMDMInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 2, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastIPv6PIMDMInterfaceIndex"))
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastIPv6PIMDMInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceIndex.setDescription('Routing Interface associated with this PIM DM configuration entry.')
agentMulticastIPv6PIMDMInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceMode.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceMode.setDescription('This enables or disables PIM Dense Interface Mode on the system.')
agentMulticastIPv6PIMDMInterfaceHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceHelloInterval.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastIPv6PIMDMInterfaceHelloInterval.setDescription('The hello interval of PIM Dense.')
agentMulticastAdminBoundaryConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11))
agentMulticastAdminBoundaryTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1), )
if mibBuilder.loadTexts: agentMulticastAdminBoundaryTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryTable.setDescription('Provides Per-Interface configuration of PIM-DM.')
agentMulticastAdminBoundaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastAdminBoundaryIndex"), (0, "MULTICAST-MIB", "agentMulticastAdminBoundaryGroupAddress"), (0, "MULTICAST-MIB", "agentMulticastAdminBoundaryGroupMask"))
if mibBuilder.loadTexts: agentMulticastAdminBoundaryEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastAdminBoundaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastAdminBoundaryIndex.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryIndex.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastAdminBoundaryGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastAdminBoundaryGroupAddress.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryGroupAddress.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastAdminBoundaryGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastAdminBoundaryGroupMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryGroupMask.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastAdminBoundaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastAdminBoundaryStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastAdminBoundaryStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastStaticRouteConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12))
agentMulticastStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1), )
if mibBuilder.loadTexts: agentMulticastStaticRouteTable.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteTable.setDescription('Provides Per-Interface configuration of PIM-DM.')
agentMulticastStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentMulticastStaticRouteSourceIP"))
if mibBuilder.loadTexts: agentMulticastStaticRouteEntry.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteEntry.setDescription('Allows configuration of parameters not provided in the standard PIM-MIB.')
agentMulticastStaticRouteSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteSourceIP.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteSourceIP.setDescription('The BSR hash mask length to be advertised in bootstrap messages if this interface is elected as the bootstrap router. This hash mask length will be used in the hash algorith for selecting the RP for a particular group.')
agentMulticastStaticRouteSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteSourceMask.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteSourceMask.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastStaticRouteRPFNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteRPFNeighbor.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteRPFNeighbor.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastStaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteMetric.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteMetric.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastStaticRouteInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteInterface.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteInterface.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentMulticastStaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("create", 4), ("destory", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentMulticastStaticRouteStatus.setStatus('obsolete')
if mibBuilder.loadTexts: agentMulticastStaticRouteStatus.setDescription('The preference value for the local interface as a Candidate Rendezvous Point. The value of -1 is used to indicate that the local interface is not a Candidate RP interface.')
agentIpStaticMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13), )
if mibBuilder.loadTexts: agentIpStaticMRouteTable.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteTable.setDescription('The table listing the Static Multicast Route Entries.')
agentIpStaticMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1), ).setIndexNames((0, "MULTICAST-MIB", "agentIpStaticMRouteSrcAddressType"), (0, "MULTICAST-MIB", "agentIpStaticMRouteSrcIpAddr"), (0, "MULTICAST-MIB", "agentIpStaticMRouteSrcNetMask"))
if mibBuilder.loadTexts: agentIpStaticMRouteEntry.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteEntry.setDescription('Information about a table entry.')
agentIpStaticMRouteSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 1), InetAddressType())
if mibBuilder.loadTexts: agentIpStaticMRouteSrcAddressType.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcAddressType.setDescription('The address type of this Multicast data source.')
agentIpStaticMRouteSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 2), InetAddress())
if mibBuilder.loadTexts: agentIpStaticMRouteSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcIpAddr.setDescription('The address of the Multicast data source.')
agentIpStaticMRouteSrcNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: agentIpStaticMRouteSrcNetMask.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteSrcNetMask.setDescription('The network mask for the IP address of the Multicast data source.')
agentIpStaticMRouteRpfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteRpfIpAddr.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteRpfIpAddr.setDescription('The RPF Address.')
agentIpStaticMRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteIfIndex.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteIfIndex.setDescription('The interface index is valid only for IPv6 and only if RPF address is link-local.')
agentIpStaticMRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRoutePreference.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRoutePreference.setDescription('The preference of this route entry.')
agentIpStaticMRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 7244, 2, 4, 13, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpStaticMRouteStatus.setStatus('current')
if mibBuilder.loadTexts: agentIpStaticMRouteStatus.setDescription('The preference of this route entry.')
mibBuilder.exportSymbols("MULTICAST-MIB", agentMulticastIPv6PIMSMCandRPStatus=agentMulticastIPv6PIMSMCandRPStatus, PYSNMP_MODULE_ID=multicast, agentMulticastIPv6PIMSMConfigGroup=agentMulticastIPv6PIMSMConfigGroup, agentMulticastPIMDMConfigGroup=agentMulticastPIMDMConfigGroup, agentMulticastPIMSMInterfaceHelloInterval=agentMulticastPIMSMInterfaceHelloInterval, agentMulticastPIMDMInterfaceHelloInterval=agentMulticastPIMDMInterfaceHelloInterval, agentMulticastPIMSMInterfaceCRPPreference=agentMulticastPIMSMInterfaceCRPPreference, agentMulticastPIMSMStaticRPGroupIpAddr=agentMulticastPIMSMStaticRPGroupIpAddr, agentMulticastDVMRPInterfaceIfIndex=agentMulticastDVMRPInterfaceIfIndex, agentMulticastPIMConfigMode=agentMulticastPIMConfigMode, agentMulticastIGMPInterfaceEntry=agentMulticastIGMPInterfaceEntry, agentMulticastPIMSMInterfaceIndex=agentMulticastPIMSMInterfaceIndex, agentMulticastStaticRouteRPFNeighbor=agentMulticastStaticRouteRPFNeighbor, agentMulticastPIMSMInterfaceTable=agentMulticastPIMSMInterfaceTable, agentMulticastMLDInterfaceAdminMode=agentMulticastMLDInterfaceAdminMode, agentMulticastIPv6PIMSMCBSRInterfacePriority=agentMulticastIPv6PIMSMCBSRInterfacePriority, agentMulticastIPv6PIMDMInterfaceEntry=agentMulticastIPv6PIMDMInterfaceEntry, agentIpStaticMRouteSrcNetMask=agentIpStaticMRouteSrcNetMask, agentMulticastIPv6PIMDMAdminMode=agentMulticastIPv6PIMDMAdminMode, agentMulticastIPv6PIMSMDataThresholdRate=agentMulticastIPv6PIMSMDataThresholdRate, agentMulticastPIMSMDataThresholdRate=agentMulticastPIMSMDataThresholdRate, agentMulticastPIMSMCandRPStatus=agentMulticastPIMSMCandRPStatus, agentIpStaticMRouteTable=agentIpStaticMRouteTable, agentMulticastIGMPProxyInterfaceIfIndex=agentMulticastIGMPProxyInterfaceIfIndex, agentMulticastMLDInterfaceIfIndex=agentMulticastMLDInterfaceIfIndex, agentMulticastIPv6PIMSMInterfaceIndex=agentMulticastIPv6PIMSMInterfaceIndex, agentMulticastPIMDMInterfaceMode=agentMulticastPIMDMInterfaceMode, agentMulticastIGMPProxyInterfaceAdminMode=agentMulticastIGMPProxyInterfaceAdminMode, agentMulticastStaticRouteSourceMask=agentMulticastStaticRouteSourceMask, agentMulticastIGMPInterfaceAdminMode=agentMulticastIGMPInterfaceAdminMode, agentMulticastIPv6PIMSMCandRPGroupAddress=agentMulticastIPv6PIMSMCandRPGroupAddress, agentMulticastIPv6PIMSMStaticRPGroupIpPrefix=agentMulticastIPv6PIMSMStaticRPGroupIpPrefix, agentMulticastAdminBoundaryGroupAddress=agentMulticastAdminBoundaryGroupAddress, agentMulticastIPv6PIMSMSSMGroupAddress=agentMulticastIPv6PIMSMSSMGroupAddress, agentMulticastMLDProxyInterfaceInterval=agentMulticastMLDProxyInterfaceInterval, agentIpStaticMRouteIfIndex=agentIpStaticMRouteIfIndex, agentMulticastIGMPInterfaceIfIndex=agentMulticastIGMPInterfaceIfIndex, agentMulticastPIMConfigGroup=agentMulticastPIMConfigGroup, agentMulticastPIMDMInterfaceIndex=agentMulticastPIMDMInterfaceIndex, agentMulticastMLDInterfaceEntry=agentMulticastMLDInterfaceEntry, agentMulticastDVMRPInterfaceEntry=agentMulticastDVMRPInterfaceEntry, agentMulticastDVMRPConfigGroup=agentMulticastDVMRPConfigGroup, agentMulticastMLDInterfaceTable=agentMulticastMLDInterfaceTable, agentMulticastAdminBoundaryEntry=agentMulticastAdminBoundaryEntry, agentIpStaticMRouteRpfIpAddr=agentIpStaticMRouteRpfIpAddr, agentMulticastMLDAdminMode=agentMulticastMLDAdminMode, agentMulticastPIMDMAdminMode=agentMulticastPIMDMAdminMode, agentMulticastDVMRPInterfaceAdminMode=agentMulticastDVMRPInterfaceAdminMode, agentMulticastIPv6PIMSMStaticRPEntry=agentMulticastIPv6PIMSMStaticRPEntry, agentMulticastPIMSMSSMEntry=agentMulticastPIMSMSSMEntry, agentMulticastPIMSMCandRPAddress=agentMulticastPIMSMCandRPAddress, agentMulticastIPv6PIMSMInterfaceBsrBorder=agentMulticastIPv6PIMSMInterfaceBsrBorder, agentMulticastRoutingAdminMode=agentMulticastRoutingAdminMode, agentMulticastPIMSMInterfaceJoinPruneInterval=agentMulticastPIMSMInterfaceJoinPruneInterval, agentMulticastIPv6PIMDMInterfaceMode=agentMulticastIPv6PIMDMInterfaceMode, agentMulticastPIMSMStaticRPStatus=agentMulticastPIMSMStaticRPStatus, agentMulticastIPv6PIMSMCandRPAddress=agentMulticastIPv6PIMSMCandRPAddress, agentMulticastPIMSMSSMTable=agentMulticastPIMSMSSMTable, agentMulticastIPv6PIMDMConfigGroup=agentMulticastIPv6PIMDMConfigGroup, agentMulticastPIMSMStaticRPEntry=agentMulticastPIMSMStaticRPEntry, agentIpStaticMRouteEntry=agentIpStaticMRouteEntry, agentMulticastStaticRouteSourceIP=agentMulticastStaticRouteSourceIP, agentIpStaticMRouteSrcIpAddr=agentIpStaticMRouteSrcIpAddr, agentMulticastAdminBoundaryConfigGroup=agentMulticastAdminBoundaryConfigGroup, agentMulticastPIMSMCBSRInterfaceHashMaskLength=agentMulticastPIMSMCBSRInterfaceHashMaskLength, agentMulticastIPv6PIMSMStaticRPGroupIpAddr=agentMulticastIPv6PIMSMStaticRPGroupIpAddr, agentMulticastMLDProxyInterfaceAdminMode=agentMulticastMLDProxyInterfaceAdminMode, agentMulticastDVMRPAdminMode=agentMulticastDVMRPAdminMode, agentMulticastDVMRPInterfaceTable=agentMulticastDVMRPInterfaceTable, agentMulticastStaticRouteStatus=agentMulticastStaticRouteStatus, agentMulticastIPv6PIMSMSSMEntry=agentMulticastIPv6PIMSMSSMEntry, agentMulticastMLDProxyInterfaceEntry=agentMulticastMLDProxyInterfaceEntry, agentMulticastPIMSMCBSRInterfaceTable=agentMulticastPIMSMCBSRInterfaceTable, agentMulticastIPv6PIMSMStaticRPIpAddr=agentMulticastIPv6PIMSMStaticRPIpAddr, agentMulticastIPv6PIMSMInterfaceJoinPruneInterval=agentMulticastIPv6PIMSMInterfaceJoinPruneInterval, agentMulticastPIMSMCandRPTable=agentMulticastPIMSMCandRPTable, agentMulticastIPv6PIMDMInterfaceTable=agentMulticastIPv6PIMDMInterfaceTable, agentMulticastPIMSMAdminMode=agentMulticastPIMSMAdminMode, agentMulticastPIMSMInterfaceDrPriority=agentMulticastPIMSMInterfaceDrPriority, agentMulticastIPv6PIMSMAdminMode=agentMulticastIPv6PIMSMAdminMode, agentMulticastPIMSMStaticRPGroupIpMask=agentMulticastPIMSMStaticRPGroupIpMask, agentMulticastPIMSMInterfaceBsrBorder=agentMulticastPIMSMInterfaceBsrBorder, agentMulticastIPv6PIMSMInterfaceDrPriority=agentMulticastIPv6PIMSMInterfaceDrPriority, agentMulticastIPv6PIMSMCandRPEntry=agentMulticastIPv6PIMSMCandRPEntry, agentMulticastIGMPConfigGroup=agentMulticastIGMPConfigGroup, agentMulticastPIMSMInterfaceAdminMode=agentMulticastPIMSMInterfaceAdminMode, agentMulticastStaticRouteTable=agentMulticastStaticRouteTable, agentMulticastPIMSMConfigGroup=agentMulticastPIMSMConfigGroup, agentMulticastIPv6PIMDMInterfaceIndex=agentMulticastIPv6PIMDMInterfaceIndex, agentMulticastAdminBoundaryTable=agentMulticastAdminBoundaryTable, agentMulticastStaticRouteMetric=agentMulticastStaticRouteMetric, agentMulticastPIMDMInterfaceTable=agentMulticastPIMDMInterfaceTable, agentMulticastPIMDMInterfaceEntry=agentMulticastPIMDMInterfaceEntry, agentMulticastIGMPInterfaceTable=agentMulticastIGMPInterfaceTable, agentMulticastMLDProxyInterfaceIfIndex=agentMulticastMLDProxyInterfaceIfIndex, agentMulticastDVMRPInterfaceGenerationId=agentMulticastDVMRPInterfaceGenerationId, agentMulticastMLDProxyInterfaceTable=agentMulticastMLDProxyInterfaceTable, agentMulticastIPv6PIMDMInterfaceHelloInterval=agentMulticastIPv6PIMDMInterfaceHelloInterval, agentMulticastIPv6PIMSMCandRPTable=agentMulticastIPv6PIMSMCandRPTable, agentMulticastStaticRouteInterface=agentMulticastStaticRouteInterface, agentMulticastPIMSMCBSRInterfacePriority=agentMulticastPIMSMCBSRInterfacePriority, agentMulticastPIMSMInterfaceCBSRHashMaskLength=agentMulticastPIMSMInterfaceCBSRHashMaskLength, agentMulticastPIMSMInterfaceEntry=agentMulticastPIMSMInterfaceEntry, agentMulticastAdminBoundaryGroupMask=agentMulticastAdminBoundaryGroupMask, agentMulticastPIMSMCandRPGroupPrefixLength=agentMulticastPIMSMCandRPGroupPrefixLength, agentMulticastIGMPProxyInterfaceTable=agentMulticastIGMPProxyInterfaceTable, agentMulticastIPv6PIMSMStaticRPStatus=agentMulticastIPv6PIMSMStaticRPStatus, agentMulticastDVMRPInterfaceMetric=agentMulticastDVMRPInterfaceMetric, agentMulticastIPv6PIMSMCBSRInterfaceEntry=agentMulticastIPv6PIMSMCBSRInterfaceEntry, agentMulticastPIMSMCBSRInterfaceIndex=agentMulticastPIMSMCBSRInterfaceIndex, agentMulticastPIMSMStaticRPIpAddr=agentMulticastPIMSMStaticRPIpAddr, multicast=multicast, agentMulticastPIMSMSSMStatus=agentMulticastPIMSMSSMStatus, agentMulticastPIMSMCandRPEntry=agentMulticastPIMSMCandRPEntry, agentMulticastIPv6PIMSMCBSRInterfaceHashMaskLength=agentMulticastIPv6PIMSMCBSRInterfaceHashMaskLength, agentMulticastIGMPProxyInterfaceInterval=agentMulticastIGMPProxyInterfaceInterval, agentMulticastPIMSMCBSRInterfaceEntry=agentMulticastPIMSMCBSRInterfaceEntry, agentMulticastIPv6PIMSMStaticRPTable=agentMulticastIPv6PIMSMStaticRPTable, agentIpStaticMRouteSrcAddressType=agentIpStaticMRouteSrcAddressType, agentMulticastRoutingConfigGroup=agentMulticastRoutingConfigGroup, agentIpStaticMRoutePreference=agentIpStaticMRoutePreference, agentMulticastIPv6PIMSMSSMTable=agentMulticastIPv6PIMSMSSMTable, agentMulticastIPv6PIMSMInterfaceEntry=agentMulticastIPv6PIMSMInterfaceEntry, agentMulticastIPv6PIMSMInterfaceAdminMode=agentMulticastIPv6PIMSMInterfaceAdminMode, agentMulticastIGMPAdminMode=agentMulticastIGMPAdminMode, agentMulticastIPv6PIMSMSSMGroupMask=agentMulticastIPv6PIMSMSSMGroupMask, agentMulticastStaticRouteConfigGroup=agentMulticastStaticRouteConfigGroup, agentMulticastPIMSMStaticRPTable=agentMulticastPIMSMStaticRPTable, agentMulticastMLDConfigGroup=agentMulticastMLDConfigGroup, agentMulticastIPv6PIMSMInterfaceHelloInterval=agentMulticastIPv6PIMSMInterfaceHelloInterval, agentMulticastIPv6PIMSMCandRPGroupPrefixLength=agentMulticastIPv6PIMSMCandRPGroupPrefixLength, agentMulticastPIMSMSSMGroupAddress=agentMulticastPIMSMSSMGroupAddress, agentMulticastPIMSMCandRPGroupAddress=agentMulticastPIMSMCandRPGroupAddress, agentMulticastIPv6PIMSMSSMStatus=agentMulticastIPv6PIMSMSSMStatus, agentMulticastPIMSMSSMGroupMask=agentMulticastPIMSMSSMGroupMask, agentMulticastIPv6PIMSMCBSRInterfaceTable=agentMulticastIPv6PIMSMCBSRInterfaceTable, agentMulticastAdminBoundaryIndex=agentMulticastAdminBoundaryIndex, agentMulticastStaticRouteEntry=agentMulticastStaticRouteEntry, agentMulticastIGMPProxyInterfaceEntry=agentMulticastIGMPProxyInterfaceEntry, agentMulticastIPv6PIMSMCBSRInterfaceIndex=agentMulticastIPv6PIMSMCBSRInterfaceIndex, agentMulticastIPv6PIMSMInterfaceTable=agentMulticastIPv6PIMSMInterfaceTable, agentIpStaticMRouteStatus=agentIpStaticMRouteStatus, agentMulticastAdminBoundaryStatus=agentMulticastAdminBoundaryStatus)
