#
# PySNMP MIB module MERU-CONFIG-GRE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MERU-CONFIG-GRE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:11:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
mwConfiguration, = mibBuilder.importSymbols("MERU-SMI", "mwConfiguration")
MwlProfileOwner, MwlOnOffSwitch = mibBuilder.importSymbols("MERU-TC", "MwlProfileOwner", "MwlOnOffSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, Counter64, IpAddress, MibIdentifier, Integer32, Unsigned32, iso, Bits, Gauge32, NotificationType, enterprises, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Counter64", "IpAddress", "MibIdentifier", "Integer32", "Unsigned32", "iso", "Bits", "Gauge32", "NotificationType", "enterprises", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, MacAddress, TimeInterval, TimeStamp, DisplayString, TruthValue, DateAndTime, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "TimeInterval", "TimeStamp", "DisplayString", "TruthValue", "DateAndTime", "RowStatus")
mwConfigGRE = ModuleIdentity((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15))
if mibBuilder.loadTexts: mwConfigGRE.setLastUpdated('200506050000Z')
if mibBuilder.loadTexts: mwConfigGRE.setOrganization('Meru Networks')
if mibBuilder.loadTexts: mwConfigGRE.setContactInfo('support@merunetworks.com')
if mibBuilder.loadTexts: mwConfigGRE.setDescription('This MIB defines all the managed objects used to manage the Meru WLAN GRE Configuration infrastructure')
mwGreTable = MibTable((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1), )
if mibBuilder.loadTexts: mwGreTable.setStatus('current')
if mibBuilder.loadTexts: mwGreTable.setDescription('This object describes GRE Configuration ')
mwGreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1), ).setIndexNames((0, "MERU-CONFIG-GRE-MIB", "mwGreTableIndex"))
if mibBuilder.loadTexts: mwGreEntry.setStatus('current')
if mibBuilder.loadTexts: mwGreEntry.setDescription('This object describes GRE Configuration ')
mwGreTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: mwGreTableIndex.setStatus('current')
if mibBuilder.loadTexts: mwGreTableIndex.setDescription('The index value of the table ')
mwGreName = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreName.setStatus('current')
if mibBuilder.loadTexts: mwGreName.setDescription('This object describes GRE Name')
mwGreInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: mwGreInterfaceIndex.setDescription('This object describes Local External FastEthernet Index')
mwGreDHCPServerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreDHCPServerIpAddress.setStatus('current')
if mibBuilder.loadTexts: mwGreDHCPServerIpAddress.setDescription('This object describes DHCP Server IP Address')
mwGreLocalInternalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreLocalInternalAddress.setStatus('current')
if mibBuilder.loadTexts: mwGreLocalInternalAddress.setDescription('This object describes Tunnel IP address')
mwGreLocalInternalNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreLocalInternalNetmask.setStatus('current')
if mibBuilder.loadTexts: mwGreLocalInternalNetmask.setDescription('This object describes Tunnel IP Netmask')
mwGreRemoteEndpointAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreRemoteEndpointAddress.setStatus('current')
if mibBuilder.loadTexts: mwGreRemoteEndpointAddress.setDescription('This object describes Remote External Address')
mwGreOverrideDefaultDHCPServer = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 8), MwlOnOffSwitch()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreOverrideDefaultDHCPServer.setStatus('current')
if mibBuilder.loadTexts: mwGreOverrideDefaultDHCPServer.setDescription('This object describes Override Default DHCP Server Flag')
mwGreOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 9), MwlProfileOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mwGreOwner.setStatus('current')
if mibBuilder.loadTexts: mwGreOwner.setDescription('This object describes Owner')
mwGreRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 15983, 1, 1, 4, 15, 1, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mwGreRowStatus.setStatus('current')
if mibBuilder.loadTexts: mwGreRowStatus.setDescription('This object is used to create and delete rows in the table')
mibBuilder.exportSymbols("MERU-CONFIG-GRE-MIB", mwGreTableIndex=mwGreTableIndex, mwGreLocalInternalNetmask=mwGreLocalInternalNetmask, PYSNMP_MODULE_ID=mwConfigGRE, mwGreRemoteEndpointAddress=mwGreRemoteEndpointAddress, mwGreOverrideDefaultDHCPServer=mwGreOverrideDefaultDHCPServer, mwGreOwner=mwGreOwner, mwGreDHCPServerIpAddress=mwGreDHCPServerIpAddress, mwGreLocalInternalAddress=mwGreLocalInternalAddress, mwGreName=mwGreName, mwConfigGRE=mwConfigGRE, mwGreRowStatus=mwGreRowStatus, mwGreTable=mwGreTable, mwGreInterfaceIndex=mwGreInterfaceIndex, mwGreEntry=mwGreEntry)
