#
# PySNMP MIB module ZYXEL-DHCP-OPTION82-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-DHCP-OPTION82-PROFILE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:49:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, ObjectIdentity, IpAddress, NotificationType, Integer32, Counter32, Bits, ModuleIdentity, TimeTicks, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "ObjectIdentity", "IpAddress", "NotificationType", "Integer32", "Counter32", "Bits", "ModuleIdentity", "TimeTicks", "Unsigned32", "MibIdentifier")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelDhcpOption82Profile = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17))
if mibBuilder.loadTexts: zyxelDhcpOption82Profile.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelDhcpOption82Profile.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelDhcpOption82Profile.setContactInfo('')
if mibBuilder.loadTexts: zyxelDhcpOption82Profile.setDescription('The subtree for dhcp option 82 profile')
zyxelDhcpOption82ProfileSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1))
zyDhcpOption82ProfileMaxNumberOfProfiles = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyDhcpOption82ProfileMaxNumberOfProfiles.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileMaxNumberOfProfiles.setDescription('The maximum number of DHCP option 82 entries that can be created.')
zyxelDhcpOption82ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2), )
if mibBuilder.loadTexts: zyxelDhcpOption82ProfileTable.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpOption82ProfileTable.setDescription('The table contains DHCP option 82 profile configuration.')
zyxelDhcpOption82ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1), ).setIndexNames((0, "ZYXEL-DHCP-OPTION82-PROFILE-MIB", "zyDhcpOption82ProfileName"))
if mibBuilder.loadTexts: zyxelDhcpOption82ProfileEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelDhcpOption82ProfileEntry.setDescription('An entry contains DHCP option 82 profile configuration. ')
zyDhcpOption82ProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: zyDhcpOption82ProfileName.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileName.setDescription('DHCP option 82 profile Name.')
zyDhcpOption82ProfileCircuitIdState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdState.setDescription('Enable/Disable DHCP option 82 circuit-ID.')
zyDhcpOption82ProfileCircuitIdSlotPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdSlotPortState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdSlotPortState.setDescription('Add DHCP option 82 circuit-ID with slot-port.')
zyDhcpOption82ProfileCircuitIdVidState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 4), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdVidState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdVidState.setDescription('Add DHCP option 82 circuit-ID with VLAN.')
zyDhcpOption82ProfileCircuitIdHostnameState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdHostnameState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdHostnameState.setDescription('Add DHCP option 82 circuit-ID with hostname.')
zyDhcpOption82ProfileCircuitIdString = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdString.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileCircuitIdString.setDescription('Add DHCP option 82 circuit-ID with string.')
zyDhcpOption82ProfileRemoteIdState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 7), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdState.setDescription('Enable/Disable DHCP option 82 remote-ID.')
zyDhcpOption82ProfileRemoteIdMacAddressState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdMacAddressState.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdMacAddressState.setDescription('Add DHCP option 82 remote-ID with MAC address.')
zyDhcpOption82ProfileRemoteIdString = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdString.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileRemoteIdString.setDescription('Add DHCP option 82 remote-ID with string.')
zyDhcpOption82ProfileRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 17, 1, 2, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyDhcpOption82ProfileRowstatus.setStatus('current')
if mibBuilder.loadTexts: zyDhcpOption82ProfileRowstatus.setDescription('This object allows a DHCP option 82 profile entry to be created and deleted.')
mibBuilder.exportSymbols("ZYXEL-DHCP-OPTION82-PROFILE-MIB", zyDhcpOption82ProfileMaxNumberOfProfiles=zyDhcpOption82ProfileMaxNumberOfProfiles, PYSNMP_MODULE_ID=zyxelDhcpOption82Profile, zyDhcpOption82ProfileName=zyDhcpOption82ProfileName, zyxelDhcpOption82ProfileSetup=zyxelDhcpOption82ProfileSetup, zyDhcpOption82ProfileCircuitIdState=zyDhcpOption82ProfileCircuitIdState, zyxelDhcpOption82ProfileEntry=zyxelDhcpOption82ProfileEntry, zyxelDhcpOption82ProfileTable=zyxelDhcpOption82ProfileTable, zyDhcpOption82ProfileCircuitIdSlotPortState=zyDhcpOption82ProfileCircuitIdSlotPortState, zyDhcpOption82ProfileCircuitIdString=zyDhcpOption82ProfileCircuitIdString, zyDhcpOption82ProfileRemoteIdState=zyDhcpOption82ProfileRemoteIdState, zyDhcpOption82ProfileRemoteIdString=zyDhcpOption82ProfileRemoteIdString, zyxelDhcpOption82Profile=zyxelDhcpOption82Profile, zyDhcpOption82ProfileRemoteIdMacAddressState=zyDhcpOption82ProfileRemoteIdMacAddressState, zyDhcpOption82ProfileCircuitIdHostnameState=zyDhcpOption82ProfileCircuitIdHostnameState, zyDhcpOption82ProfileCircuitIdVidState=zyDhcpOption82ProfileCircuitIdVidState, zyDhcpOption82ProfileRowstatus=zyDhcpOption82ProfileRowstatus)
