#
# PySNMP MIB module Nortel-Magellan-Passport-HuntGroupEngMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-HuntGroupEngMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:27:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
lpEngIndex, lpEng, lpIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex", "lpEng", "lpIndex")
StorageType, DisplayString, RowStatus, Counter32, Unsigned32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "StorageType", "DisplayString", "RowStatus", "Counter32", "Unsigned32")
NonReplicated, = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, ObjectIdentity, Unsigned32, Counter64, MibIdentifier, IpAddress, Integer32, ModuleIdentity, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "ObjectIdentity", "Unsigned32", "Counter64", "MibIdentifier", "IpAddress", "Integer32", "ModuleIdentity", "Counter32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
huntGroupEngMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131))
lpEngHgs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4))
lpEngHgsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1), )
if mibBuilder.loadTexts: lpEngHgsRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsRowStatusTable.setDescription('This entry controls the addition and deletion of lpEngHgs components.')
lpEngHgsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-HuntGroupEngMIB", "lpEngHgsIndex"))
if mibBuilder.loadTexts: lpEngHgsRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsRowStatusEntry.setDescription('A single entry in the table represents a single lpEngHgs component.')
lpEngHgsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpEngHgsRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsRowStatus.setDescription('This variable is used as the basis for SNMP naming of lpEngHgs components. These components can be added and deleted.')
lpEngHgsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
lpEngHgsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsStorageType.setDescription('This variable represents the storage type value for the lpEngHgs tables.')
lpEngHgsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpEngHgsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsIndex.setDescription('This variable represents the index for the lpEngHgs tables.')
lpEngHgsOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10), )
if mibBuilder.loadTexts: lpEngHgsOperationalTable.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsOperationalTable.setDescription('The Operational group contains attributes for all hunt groups on the LP.')
lpEngHgsOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpEngIndex"), (0, "Nortel-Magellan-Passport-HuntGroupEngMIB", "lpEngHgsIndex"))
if mibBuilder.loadTexts: lpEngHgsOperationalEntry.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsOperationalEntry.setDescription('An entry in the lpEngHgsOperationalTable.')
lpEngHgsHuntGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsHuntGroups.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsHuntGroups.setDescription('This attribute indicates the number of hunt groups provisioned on the LP.')
lpEngHgsHuntAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 23, 4, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpEngHgsHuntAttempts.setStatus('mandatory')
if mibBuilder.loadTexts: lpEngHgsHuntAttempts.setDescription('This attribute counts the total number of hunt attempts made by all hunt groups. The count includes both initial and subsequent hunt attempts. Individual hunt groups maintain this counter within the huntAttempts attribute of the Hg/n component. This counter wraps to 0 when it exceeds its maximum value.')
huntGroupEngGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1))
huntGroupEngGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5))
huntGroupEngGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5, 2))
huntGroupEngGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 1, 5, 2, 2))
huntGroupEngCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3))
huntGroupEngCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5))
huntGroupEngCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5, 2))
huntGroupEngCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 131, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-HuntGroupEngMIB", huntGroupEngMIB=huntGroupEngMIB, lpEngHgsRowStatusTable=lpEngHgsRowStatusTable, huntGroupEngCapabilitiesBE=huntGroupEngCapabilitiesBE, lpEngHgs=lpEngHgs, huntGroupEngGroup=huntGroupEngGroup, huntGroupEngCapabilitiesBE01=huntGroupEngCapabilitiesBE01, lpEngHgsIndex=lpEngHgsIndex, huntGroupEngCapabilitiesBE01A=huntGroupEngCapabilitiesBE01A, lpEngHgsHuntGroups=lpEngHgsHuntGroups, huntGroupEngGroupBE=huntGroupEngGroupBE, huntGroupEngGroupBE01=huntGroupEngGroupBE01, lpEngHgsRowStatusEntry=lpEngHgsRowStatusEntry, lpEngHgsHuntAttempts=lpEngHgsHuntAttempts, huntGroupEngGroupBE01A=huntGroupEngGroupBE01A, lpEngHgsComponentName=lpEngHgsComponentName, lpEngHgsStorageType=lpEngHgsStorageType, lpEngHgsOperationalTable=lpEngHgsOperationalTable, lpEngHgsOperationalEntry=lpEngHgsOperationalEntry, huntGroupEngCapabilities=huntGroupEngCapabilities, lpEngHgsRowStatus=lpEngHgsRowStatus)
