#
# PySNMP MIB module HP-SWITCH-IMAGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SWITCH-IMAGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:36:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, NotificationType, Counter64, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, iso, Counter32, ModuleIdentity, Unsigned32, ObjectIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "Counter64", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "iso", "Counter32", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpSwitchImage = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59))
hpSwitchImage.setRevisions(('2013-04-01 00:00', '2008-12-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpSwitchImage.setRevisionsDescriptions(('Added INTEGER named syncing in hpSwitchMgmtModuleStatus.', 'Initial revision.',))
if mibBuilder.loadTexts: hpSwitchImage.setLastUpdated('201304010000Z')
if mibBuilder.loadTexts: hpSwitchImage.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpSwitchImage.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpSwitchImage.setDescription('This MIB describes information like build date, image version, build number, image size for the images in the flash(non-volatile memory). This mib will also give similar details for running software version.')
hpSwitchImageObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1))
hpSwitchImageConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2))
hpSwitchDefaultBoot = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchDefaultBoot.setStatus('current')
if mibBuilder.loadTexts: hpSwitchDefaultBoot.setDescription('This object describes the default flash boot image. It may be either primary or secondary image.')
hpSwitchBootRomVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchBootRomVersion.setStatus('current')
if mibBuilder.loadTexts: hpSwitchBootRomVersion.setDescription('This object describes version details of Monitor Rom Console.')
hpSwitchFlashImageTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3), )
if mibBuilder.loadTexts: hpSwitchFlashImageTable.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageTable.setDescription('Each entry of this table describes information like size of image, build date, image version and build number for the images that are present in the flash. Build number is accessible only in debug build.')
hpSwitchFlashImageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1), ).setIndexNames((0, "HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImageType"))
if mibBuilder.loadTexts: hpSwitchFlashImageEntry.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageEntry.setDescription('Each entry describes information like size of image, build date, version and build number. Build number is accessible only in debug build.')
hpSwitchFlashImageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2))))
if mibBuilder.loadTexts: hpSwitchFlashImageType.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageType.setDescription('This object describes flash image type. It may be primary or secondary image.')
hpSwitchFlashImageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1, 2), Unsigned32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchFlashImageSize.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageSize.setDescription('This object describes the image size in bytes.')
hpSwitchFlashImageBuildDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchFlashImageBuildDate.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageBuildDate.setDescription('This object describes the date on which this image is built.')
hpSwitchFlashImageVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchFlashImageVersion.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageVersion.setDescription('This object describes the version number.')
hpSwitchFlashImageBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchFlashImageBuildNumber.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImageBuildNumber.setDescription('This object describes the build number. This object is accessible only in debug build.')
hpSwitchMgmtModuleVersionTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4), )
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersionTable.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersionTable.setDescription('Each entry of this table describes information like status, image directory path, build date, image version, image build number, boot-image type, build options and watchdog status of the running software version for management modules. In switches other than 8200, only one management module is present. In 8200 switches, two management modules are present.')
hpSwitchMgmtModuleVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1), ).setIndexNames((0, "HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleID"))
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersionEntry.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersionEntry.setDescription('This entry describes information like status, image directory, build date, image version, image build number, boot-image type, build options and watchdog status of the running software version for management modules.')
hpSwitchMgmtModuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mgmtModule1", 1), ("mgmtModule2", 2))))
if mibBuilder.loadTexts: hpSwitchMgmtModuleID.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleID.setDescription('This module ID object is used to uniquely identify the entry in the table.')
hpSwitchMgmtModuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("redundancyDisabled", 3), ("standby", 4), ("offline", 5), ("failed", 6), ("syncing", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleStatus.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleStatus.setDescription('This object describes the status of the running software version for management module. This status can be active, disabled, standby, offline, failed, syncing or unknown.')
hpSwitchMgmtModuleDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleDirectory.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleDirectory.setDescription('This object describes the directory path of the running software version.')
hpSwitchMgmtModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleDate.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleDate.setDescription('This object describes the build date of the running software version.')
hpSwitchMgmtModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersion.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleVersion.setDescription('This object describes the version number of the running software version.')
hpSwitchMgmtModuleBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleBuildNumber.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleBuildNumber.setDescription('This object describes the build number of the running software version. This object is accessible only in debug build.')
hpSwitchMgmtModuleBootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("primary", 2), ("secondary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleBootImage.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleBootImage.setDescription('This object gives the image type in which switch is booted up recently. It may be primary or secondary image. It gives unknown if neither primary nor secondary image is present.')
hpSwitchMgmtModuleBuildOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("qa", 2), ("hubmode", 3), ("debug", 4), ("asicLogging", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleBuildOptions.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleBuildOptions.setDescription('This object describes the build options of the running software version.')
hpSwitchMgmtModuleWatchDog = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpSwitchMgmtModuleWatchDog.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleWatchDog.setDescription('This object describes whether watchdog is enabled or disabled for the running software version. This gives unknown if not available.')
hpSwitchImageGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 1))
hpSwitchImageCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 2))
hpSwitchImageCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 2, 1)).setObjects(("HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImagesGroup"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleGroup"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchBuildGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchImageCompliance = hpSwitchImageCompliance.setStatus('current')
if mibBuilder.loadTexts: hpSwitchImageCompliance.setDescription('The compliance statement is for hpSwitchFlashImagesGroup, hpSwitchMgmtModuleGroup and hpSwitchBuildGroup.')
hpSwitchFlashImagesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 1, 1)).setObjects(("HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImageSize"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImageBuildDate"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImageVersion"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchBootRomVersion"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchDefaultBoot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchFlashImagesGroup = hpSwitchFlashImagesGroup.setStatus('current')
if mibBuilder.loadTexts: hpSwitchFlashImagesGroup.setDescription('A mandatory group which is required to give the details like image size, image build date, image version, default boot image for the images in the flash. This also gives version of monitor rom console.')
hpSwitchMgmtModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 1, 2)).setObjects(("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleStatus"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleDirectory"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleDate"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleVersion"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleBootImage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchMgmtModuleGroup = hpSwitchMgmtModuleGroup.setStatus('current')
if mibBuilder.loadTexts: hpSwitchMgmtModuleGroup.setDescription('A mandatory group which is required to give the details like status, boot directory-path, image build date, image version and boot-image of the running software version for the management modules.')
hpSwitchBuildGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59, 2, 1, 3)).setObjects(("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleBuildNumber"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchFlashImageBuildNumber"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleBuildOptions"), ("HP-SWITCH-IMAGE-MIB", "hpSwitchMgmtModuleWatchDog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpSwitchBuildGroup = hpSwitchBuildGroup.setStatus('current')
if mibBuilder.loadTexts: hpSwitchBuildGroup.setDescription('This optional group is accessible only in debug build.')
mibBuilder.exportSymbols("HP-SWITCH-IMAGE-MIB", PYSNMP_MODULE_ID=hpSwitchImage, hpSwitchImage=hpSwitchImage, hpSwitchImageObject=hpSwitchImageObject, hpSwitchFlashImageSize=hpSwitchFlashImageSize, hpSwitchMgmtModuleID=hpSwitchMgmtModuleID, hpSwitchMgmtModuleGroup=hpSwitchMgmtModuleGroup, hpSwitchImageCompliances=hpSwitchImageCompliances, hpSwitchFlashImageType=hpSwitchFlashImageType, hpSwitchImageGroups=hpSwitchImageGroups, hpSwitchMgmtModuleVersion=hpSwitchMgmtModuleVersion, hpSwitchDefaultBoot=hpSwitchDefaultBoot, hpSwitchBootRomVersion=hpSwitchBootRomVersion, hpSwitchMgmtModuleVersionEntry=hpSwitchMgmtModuleVersionEntry, hpSwitchMgmtModuleBuildNumber=hpSwitchMgmtModuleBuildNumber, hpSwitchImageCompliance=hpSwitchImageCompliance, hpSwitchFlashImageBuildNumber=hpSwitchFlashImageBuildNumber, hpSwitchImageConformance=hpSwitchImageConformance, hpSwitchFlashImageEntry=hpSwitchFlashImageEntry, hpSwitchMgmtModuleBuildOptions=hpSwitchMgmtModuleBuildOptions, hpSwitchMgmtModuleDate=hpSwitchMgmtModuleDate, hpSwitchMgmtModuleStatus=hpSwitchMgmtModuleStatus, hpSwitchFlashImageTable=hpSwitchFlashImageTable, hpSwitchMgmtModuleVersionTable=hpSwitchMgmtModuleVersionTable, hpSwitchFlashImagesGroup=hpSwitchFlashImagesGroup, hpSwitchMgmtModuleBootImage=hpSwitchMgmtModuleBootImage, hpSwitchBuildGroup=hpSwitchBuildGroup, hpSwitchFlashImageVersion=hpSwitchFlashImageVersion, hpSwitchMgmtModuleDirectory=hpSwitchMgmtModuleDirectory, hpSwitchFlashImageBuildDate=hpSwitchFlashImageBuildDate, hpSwitchMgmtModuleWatchDog=hpSwitchMgmtModuleWatchDog)
