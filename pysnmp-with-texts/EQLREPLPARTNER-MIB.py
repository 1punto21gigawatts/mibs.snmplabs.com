#
# PySNMP MIB module EQLREPLPARTNER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EQLREPLPARTNER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:05:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
SiteIndex, eqliscsiVolumeReplSiteIndex = mibBuilder.importSymbols("EQLVOLUME-MIB", "SiteIndex", "eqliscsiVolumeReplSiteIndex")
equalLogic, = mibBuilder.importSymbols("EQUALLOGIC-SMI", "equalLogic")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, iso, Bits, IpAddress, Gauge32, MibIdentifier, TimeTicks, NotificationType, Unsigned32, ObjectIdentity, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "iso", "Bits", "IpAddress", "Gauge32", "MibIdentifier", "TimeTicks", "NotificationType", "Unsigned32", "ObjectIdentity", "Integer32", "Counter32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
eqlReplPartnerModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 12740, 26))
eqlReplPartnerModule.setRevisions(('2013-03-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eqlReplPartnerModule.setRevisionsDescriptions(('Initial revision',))
if mibBuilder.loadTexts: eqlReplPartnerModule.setLastUpdated('201403121459Z')
if mibBuilder.loadTexts: eqlReplPartnerModule.setOrganization('EqualLogic Inc.')
if mibBuilder.loadTexts: eqlReplPartnerModule.setContactInfo('Contact: Customer Support Postal: Dell Inc 300 Innovative Way, Suite 301, Nashua, NH 03062 Tel: +1 603-579-9762 E-mail: US-NH-CS-TechnicalSupport@dell.com WEB: www.equallogic.com')
if mibBuilder.loadTexts: eqlReplPartnerModule.setDescription('Replication Partner information Copyright (c) 2013 by Dell Inc. All rights reserved. This software may not be copied, disclosed, transferred, or used except in accordance with a license granted by Dell Inc. This software embodies proprietary information and trade secrets of Dell Inc. ')
eqlReplPartnerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 26, 1))
eqlReplPartnerTestTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1), )
if mibBuilder.loadTexts: eqlReplPartnerTestTable.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestTable.setDescription('EqualLogic-Persistent ReplPartnerTestTable. This table contains replication partner test information. TimeoutCreate:60 TimeoutDelete:60')
eqlReplPartnerTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1), ).setIndexNames((0, "EQLVOLUME-MIB", "eqliscsiVolumeReplSiteIndex"))
if mibBuilder.loadTexts: eqlReplPartnerTestEntry.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestEntry.setDescription('An entry (row) containing replication partner test info.')
class EqlReplPartnerTestStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("valid", 1), ("invalid", 2), ("remote-partner-not-configured", 3))

eqlReplPartnerTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestRowStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestRowStatus.setDescription('The row status.')
eqlReplPartnerTestIPAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 2), EqlReplPartnerTestStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestIPAddrStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestIPAddrStatus.setDescription('The replication partner IP address test status.')
eqlReplPartnerTestAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 3), EqlReplPartnerTestStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestAuthStatus.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestAuthStatus.setDescription('The replication partner authentication test status.')
eqlReplPartnerTestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("start", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestAction.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestAction.setDescription('The replication partner test action.')
eqlReplPartnerTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("in-progress", 1), ("complete", 2), ("error", 3), ("restarted", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: eqlReplPartnerTestState.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestState.setDescription('The replication partner test state.')
eqlReplPartnerTestMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMajorVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMajorVersion.setDescription('This field specifies the Major part of the lowest member software version of the remote replication site group.')
eqlReplPartnerTestMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMinorVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMinorVersion.setDescription('This field specifies the Minor part of the lowest member software version of the remote replication site group.')
eqlReplPartnerTestMaintVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestMaintVersion.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestMaintVersion.setDescription('This field specifies the Maintenance part of the lowest member software version of the remote replication site group.')
eqlReplPartnerTestDelegatedSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpace.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpace.setDescription('This field indicates the total delegated space for the partners. This is a dynamic value, it is not Administrator setable.')
eqlReplPartnerTestDelegatedSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpaceUsed.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestDelegatedSpaceUsed.setDescription('This field indicates the total delegated space used by partners. This is a dynamic value, it is not Administrator setable.')
eqlReplPartnerTestTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 26, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlReplPartnerTestTimestamp.setStatus('current')
if mibBuilder.loadTexts: eqlReplPartnerTestTimestamp.setDescription('This field specifies the date/time when replication partner test was started. Time is represented as the time in seconds since 00:00:00 UTC, 1970-01-01.')
mibBuilder.exportSymbols("EQLREPLPARTNER-MIB", eqlReplPartnerObjects=eqlReplPartnerObjects, eqlReplPartnerTestEntry=eqlReplPartnerTestEntry, eqlReplPartnerTestIPAddrStatus=eqlReplPartnerTestIPAddrStatus, eqlReplPartnerTestAction=eqlReplPartnerTestAction, eqlReplPartnerTestState=eqlReplPartnerTestState, PYSNMP_MODULE_ID=eqlReplPartnerModule, eqlReplPartnerTestAuthStatus=eqlReplPartnerTestAuthStatus, eqlReplPartnerModule=eqlReplPartnerModule, eqlReplPartnerTestDelegatedSpace=eqlReplPartnerTestDelegatedSpace, eqlReplPartnerTestMaintVersion=eqlReplPartnerTestMaintVersion, eqlReplPartnerTestMinorVersion=eqlReplPartnerTestMinorVersion, EqlReplPartnerTestStatus=EqlReplPartnerTestStatus, eqlReplPartnerTestDelegatedSpaceUsed=eqlReplPartnerTestDelegatedSpaceUsed, eqlReplPartnerTestTable=eqlReplPartnerTestTable, eqlReplPartnerTestMajorVersion=eqlReplPartnerTestMajorVersion, eqlReplPartnerTestRowStatus=eqlReplPartnerTestRowStatus, eqlReplPartnerTestTimestamp=eqlReplPartnerTestTimestamp)
