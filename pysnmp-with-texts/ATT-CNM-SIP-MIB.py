#
# PySNMP MIB module ATT-CNM-SIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATT-CNM-SIP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:31:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Counter64, Unsigned32, MibIdentifier, IpAddress, Gauge32, ObjectIdentity, Counter32, enterprises, NotificationType, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "Unsigned32", "MibIdentifier", "IpAddress", "Gauge32", "ObjectIdentity", "Counter32", "enterprises", "NotificationType", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
att_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 74)).setLabel("att-2")
att_products = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1)).setLabel("att-products")
att_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2)).setLabel("att-mgmt")
att_cnmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1, 9)).setLabel("att-cnmAgent")
att_cnm = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15)).setLabel("att-cnm")
att_cnm_sip = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 5)).setLabel("att-cnm-sip")
class SMDSAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

attCNMsipConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1), )
if mibBuilder.loadTexts: attCNMsipConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipConfigTable.setDescription('A list of entries containing configuration information for all SIP interfaces managed by this system.')
attCNMsipConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipConfigIndex"))
if mibBuilder.loadTexts: attCNMsipConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipConfigEntry.setDescription('An entry containing configuration information for a particular SIP interface.')
attCNMsipConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipConfigIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipConfigIndex.setDescription('A unique value for each SIP interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMsipMeasMaxIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasMaxIntervals.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasMaxIntervals.setDescription('This variable identifies the maximum number of measurement intervals supported for the measurements maintained by this SIP interface in the attCNMsipMeasTable.')
attCNMsipMeasIntervalLen = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasIntervalLen.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasIntervalLen.setDescription('This variable identifies the number of seconds that make up one complete measurement interval for the measurements maintained by this SIP interface in the attCNMsipMeasTable.')
attCNMsipMeasTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2), )
if mibBuilder.loadTexts: attCNMsipMeasTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasTable.setDescription('A list of entries containing traffic measurements, maintained during the specified measurement interval, for all SIP interfaces managed by this system.')
attCNMsipMeasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipMeasIndex"), (0, "ATT-CNM-SIP-MIB", "attCNMsipMeasInterval"))
if mibBuilder.loadTexts: attCNMsipMeasEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasEntry.setDescription('An entry containing traffic measurements, maintained during the specified measurement interval, for a particular SIP interface.')
attCNMsipMeasIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasIndex.setDescription('A unique value for each SIP interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMsipMeasInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasInterval.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasInterval.setDescription('This variable identifies the measurement interval number for which measurement is provided. It is a number between 1 and XX, where 1 identifies the most recently completed measurement interval and XX is the least recently completed measurement interval. The value of XX is specified by the attCNMsipMeasMaxIntervals object given in the attCNMsipConfigTable. The maximum length of each measurement interval is specified by the attCNMsipMeasIntervalLen object given in the attCNMsipConfigTable.')
attCNMsipMeasTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasTimeStamp.setDescription('The time stamp corresponding to the end of the specified measurement interval, as measured in seconds from 00:00:00 UTC (Coordinated Universal Time) January 1, 1970. Any fraction is rounded up.')
attCNMsipMeasLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipMeasLocalTime.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipMeasLocalTime.setDescription('The time stamp corresponding to the end of the specified measurement interval. Any fraction is rounded up. It is given as a printable ASCII string showing the local time at the end of the interval.')
attCNMsipReceivedL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedL3PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipReceivedL3PDUs.setDescription('The counter associated with the number of individual-addressed and group-addressed L3 PDUs received by a SIP interface during the specified measurement interval.')
attCNMsipSentL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentL3PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipSentL3PDUs.setDescription('The counter associated with the number of individual-addressed and group-addressed L3 PDUs sent by a SIP interface during the specified measurement interval.')
attCNMsipReceivedGroupL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedGroupL3PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipReceivedGroupL3PDUs.setDescription('The counter associated with the number of group-addressed L3 PDUs received by a SIP interface during the specified measurement interval.')
attCNMsipSentGroupL3PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentGroupL3PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipSentGroupL3PDUs.setDescription('The counter associated with the number of group-addressed L3 PDUs sent by a SIP interface during the specified measurement interval.')
attCNMsipReceivedL2PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipReceivedL2PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipReceivedL2PDUs.setDescription('The counter associated with the number of L2 PDUs received by a SIP interface during the specified measurement interval.')
attCNMsipSentL2PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipSentL2PDUs.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipSentL2PDUs.setDescription('The counter associated with the number of L2 PDUs sent by a SIP interface during the specified measurement interval.')
attCNMsipL3ErrorLogTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3), )
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTable.setDescription('A list of entries identifying the latest occurrence of protocol errors encountered at the Level 3 layer of all SIP interfaces managed by this system.')
attCNMsipL3ErrorLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1), ).setIndexNames((0, "ATT-CNM-SIP-MIB", "attCNMsipL3ErrorLogIndex"), (0, "ATT-CNM-SIP-MIB", "attCNMsipL3ErrorLogType"))
if mibBuilder.loadTexts: attCNMsipL3ErrorLogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogEntry.setDescription('An entry identifying the latest occurrence of a specific protocol error encountered at the Level 3 layer of a particular SIP interface.')
attCNMsipL3ErrorLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogIndex.setDescription('A unique value for each SIP interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMsipL3ErrorLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("daFieldFormatError", 1), ("saFieldFormatError", 2), ("baSizeFieldValueInvalid", 3), ("heLengthInvalid", 4), ("heElementLengthInvalid", 5), ("heVersionElementInvalid", 6), ("heCarrierSelectionElementInvalid", 7), ("hePADInvalid", 8), ("beTagMismatch", 9), ("baSizeFieldNotEqualLengthField", 10), ("incorrectLength", 11), ("mriTimeout", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogType.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogType.setDescription('The type of error. It could be one of: - Destination Address Field Format Error, - Source Address Field Format Error, - Invalid BAsize Field Value, - Invalid Header Extension Length, - Invalid Header Extension: Element Length, - Invalid Header Extension: Carrier Selection Element Format, - Invalid Header Extension: Carrier Selection Element Length, - Invalid Header Extension: Version Element Position, Length or Value, - BEtag Mismatch, - BAsize Field Not Equal To Length Field, - Incorrect Length, - MSS Receive Interval Timeout.')
attCNMsipL3ErrorLogSA = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 3), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogSA.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogSA.setDescription('The SMDS source address in the rejected L3 PDU.')
attCNMsipL3ErrorLogDA = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 4), SMDSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogDA.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogDA.setDescription('The SMDS destination address in the rejected L3 PDU.')
attCNMsipL3ErrorLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTimeStamp.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogTimeStamp.setDescription('The time stamp for the latest occurrence of the specified error, as measured in seconds from 00:00:00 UTC (Coordinated Universal Time) January 1, 1970. Any fraction is rounded up.')
attCNMsipL3ErrorLogLocalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 5, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsipL3ErrorLogLocalTime.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsipL3ErrorLogLocalTime.setDescription('The time stamp for the latest occurrence of the specified error. It is given as a printable ASCII string showing the local time at the latest occurrence of this type of error.')
mibBuilder.exportSymbols("ATT-CNM-SIP-MIB", attCNMsipMeasTable=attCNMsipMeasTable, attCNMsipConfigIndex=attCNMsipConfigIndex, SMDSAddress=SMDSAddress, attCNMsipSentL2PDUs=attCNMsipSentL2PDUs, att_cnm=att_cnm, attCNMsipConfigEntry=attCNMsipConfigEntry, attCNMsipL3ErrorLogLocalTime=attCNMsipL3ErrorLogLocalTime, attCNMsipMeasLocalTime=attCNMsipMeasLocalTime, att_2=att_2, attCNMsipMeasInterval=attCNMsipMeasInterval, attCNMsipL3ErrorLogTimeStamp=attCNMsipL3ErrorLogTimeStamp, attCNMsipMeasMaxIntervals=attCNMsipMeasMaxIntervals, attCNMsipReceivedL3PDUs=attCNMsipReceivedL3PDUs, attCNMsipReceivedGroupL3PDUs=attCNMsipReceivedGroupL3PDUs, attCNMsipSentL3PDUs=attCNMsipSentL3PDUs, attCNMsipMeasIntervalLen=attCNMsipMeasIntervalLen, att_cnmAgent=att_cnmAgent, attCNMsipL3ErrorLogTable=attCNMsipL3ErrorLogTable, attCNMsipMeasTimeStamp=attCNMsipMeasTimeStamp, attCNMsipSentGroupL3PDUs=attCNMsipSentGroupL3PDUs, attCNMsipL3ErrorLogType=attCNMsipL3ErrorLogType, attCNMsipConfigTable=attCNMsipConfigTable, att_products=att_products, att_mgmt=att_mgmt, attCNMsipReceivedL2PDUs=attCNMsipReceivedL2PDUs, attCNMsipL3ErrorLogEntry=attCNMsipL3ErrorLogEntry, att_cnm_sip=att_cnm_sip, attCNMsipL3ErrorLogDA=attCNMsipL3ErrorLogDA, attCNMsipL3ErrorLogSA=attCNMsipL3ErrorLogSA, attCNMsipMeasIndex=attCNMsipMeasIndex, attCNMsipMeasEntry=attCNMsipMeasEntry, attCNMsipL3ErrorLogIndex=attCNMsipL3ErrorLogIndex)
