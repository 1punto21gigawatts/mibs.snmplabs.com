#
# PySNMP MIB module PDN-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-RADIUS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:39:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
pdn_radius, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-radius")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ModuleIdentity, Unsigned32, Integer32, Counter32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, Bits, NotificationType, MibIdentifier, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Unsigned32", "Integer32", "Counter32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "Bits", "NotificationType", "MibIdentifier", "Counter64", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sysDevRadiusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1))
sysDevRadiusMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 2))
sysDevRadiusAuthEnable = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthEnable.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthEnable.setDescription('Enable and disable RADIUS Authentication.')
sysDevRadiusAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthTimeout.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthTimeout.setDescription('This object corresponds to the maximum response time of the RADIUS Server.')
sysDevRadiusAuthAttempts = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthAttempts.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthAttempts.setDescription('This object corresponds to the number of retries in the event of authentication timeout.')
sysDevRadiusAuthConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4), )
if mibBuilder.loadTexts: sysDevRadiusAuthConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthConfigTable.setDescription('This table contains variables that facilitate the configuration of RADIUS authentication servers.')
sysDevRadiusAuthConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4, 1), ).setIndexNames((0, "PDN-RADIUS-MIB", "sysDevRadiusAuthServerIndex"))
if mibBuilder.loadTexts: sysDevRadiusAuthConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthConfigEntry.setDescription('An entry containing RADIUS Authentication Server configuration.')
sysDevRadiusAuthServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthServerIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthServerIndex.setDescription('This object corresponds to the Index to the RADIUS server Configuration table.')
sysDevRadiusAuthServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthServerAddress.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthServerAddress.setDescription('This object corresponds to the IP address of the RADIUS server.')
sysDevRadiusAuthServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysDevRadiusAuthServerPort.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthServerPort.setDescription('This object corresponds to the UDP Port that the RADIUS server will accept Access-Request.')
sysDevRadiusAuthSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 25, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDevRadiusAuthSecret.setStatus('mandatory')
if mibBuilder.loadTexts: sysDevRadiusAuthSecret.setDescription('This object corresponds to the RADIUS secret used by RADIUS server and NAS.')
mibBuilder.exportSymbols("PDN-RADIUS-MIB", sysDevRadiusAuthAttempts=sysDevRadiusAuthAttempts, sysDevRadiusMIBTraps=sysDevRadiusMIBTraps, sysDevRadiusAuthEnable=sysDevRadiusAuthEnable, sysDevRadiusAuthConfigTable=sysDevRadiusAuthConfigTable, sysDevRadiusAuthConfigEntry=sysDevRadiusAuthConfigEntry, sysDevRadiusMIBObjects=sysDevRadiusMIBObjects, sysDevRadiusAuthServerPort=sysDevRadiusAuthServerPort, sysDevRadiusAuthSecret=sysDevRadiusAuthSecret, sysDevRadiusAuthServerAddress=sysDevRadiusAuthServerAddress, sysDevRadiusAuthTimeout=sysDevRadiusAuthTimeout, sysDevRadiusAuthServerIndex=sysDevRadiusAuthServerIndex)
