#
# PySNMP MIB module CISCO-MEDIA-QUALITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MEDIA-QUALITY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:07:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
cCallHistoryIndex, = mibBuilder.importSymbols("CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CvcCoderTypeRate, CvcCallReferenceIdOrZero, CvcGUid = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcCoderTypeRate", "CvcCallReferenceIdOrZero", "CvcGUid")
callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "callActiveSetupTime", "callActiveIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, Counter32, Bits, IpAddress, TimeTicks, MibIdentifier, NotificationType, Gauge32, ObjectIdentity, iso, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Bits", "IpAddress", "TimeTicks", "MibIdentifier", "NotificationType", "Gauge32", "ObjectIdentity", "iso", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ciscoMediaQualityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 769))
ciscoMediaQualityMIB.setRevisions(('2011-03-23 00:00', '2011-03-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoMediaQualityMIB.setRevisionsDescriptions(('Modified descriptions of cmqVideoCallActiveEntry and cmqVideoCallHistoryEntry.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoMediaQualityMIB.setLastUpdated('201103230000Z')
if mibBuilder.loadTexts: ciscoMediaQualityMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoMediaQualityMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-voice@cisco.com')
if mibBuilder.loadTexts: ciscoMediaQualityMIB.setDescription('This MIB module enhances the DIAL-CONTROL-MIB (RFC2128) by providing call information and voice and video quality statistics of call legs over a telephony and voice over IP network. *** ABBREVIATIONS, ACRONYMS AND SYMBOLS *** ASP - Acoustic Shock Protection MIC - Microphone MOS - Mean Opinion Score NR - Noise Reduction TDM - Time-Division Multiplexing VOIP - Voice Over IP')
ciscoMediaQualityMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 0))
ciscoMediaQualityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 1))
ciscoMediaQualityMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 2))
ciscoMediaQualityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 1))
cmqVoiceCallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1))
cmqVoiceCallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2))
cmqVideoCallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3))
cmqVideoCallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4))
cmqVoIPCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1), )
if mibBuilder.loadTexts: cmqVoIPCallActiveTable.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTable.setDescription('This table is the VoIP extension to the callActiveTable of DIAL-CONTROL-MIB. It contains voice quality information and statistics for the VoIP call leg.')
cmqVoIPCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cmqVoIPCallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveEntry.setDescription("An entry (conceptual row) in the cmqVoIPCallActiveTable. An entry into this table is created when its associated call active entry in the DIAL-CONTROL-MIB is created which has corresponding callActiveInfoType equals to 'speech'. The entry is deleted when its associated call active entry in the DIAL-CONTROL-MIB is deleted.")
cmqVoIPCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveConnectionId.setDescription('The global connection identifier for the active VoIP leg of the call.')
cmqVoIPCallActiveCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqVoIPCallActiveRxCodecId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 3), CvcCoderTypeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCodecId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCodecId.setDescription('The codec type of the endpoint for the established voice path.')
cmqVoIPCallActiveRxSevConcealRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 4), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSevConcealRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSevConcealRatioPct.setDescription('The ratio of severely concealed seconds to the sum of unimpaired seconds and concealed seconds.')
cmqVoIPCallActiveRxCallConcealRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 5), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCallConcealRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCallConcealRatioPct.setDescription('The ratio of the recent concealment time to recent talk-mode time interval. The talk-mode interval is 3 seconds.')
cmqVoIPCallActiveRxPktLossRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 6), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktLossRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktLossRatioPct.setDescription('The ratio of total effective received packet loss to the number of RTP packets expected.')
cmqVoIPCallActiveRxRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxRoundTripTime.setDescription('The round-trip delay is the sum of measured network delay plus transmit and receive endpoint processing delays.')
cmqVoIPCallActiveRxCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCallDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxCallDur.setDescription('Duration of receive path open from this peer to voice gateway for the call leg.')
cmqVoIPCallActiveRxVoiceDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxVoiceDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxVoiceDur.setDescription('Duration of speech received from this peer to voice gateway for the call leg.')
cmqVoIPCallActiveRxPktLossConcealDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktLossConcealDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktLossConcealDur.setDescription('The sum of error predictive concealment and bad protocol concealment in milliseconds.')
cmqVoIPCallActiveRxPktCntExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntExpected.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntExpected.setDescription('The expected number of packets to be received.')
cmqVoIPCallActiveRxPktCntNotArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntNotArrived.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntNotArrived.setDescription('The expected number of packets minus the number of received packets.')
cmqVoIPCallActiveRxPktCntComfortNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntComfortNoise.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntComfortNoise.setDescription('The number of received comfort noise packets for the call leg.')
cmqVoIPCallActiveRxPktCntUnusableLate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntUnusableLate.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntUnusableLate.setDescription('The number of received voice packets that arrived too late to playout with CODEC (Coder/Decoder) during the call.')
cmqVoIPCallActiveRxPktCntDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntDiscarded.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntDiscarded.setDescription('The sum of the number of late packets and the number of bad protocol packets.')
cmqVoIPCallActiveRxPktCntEffLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntEffLoss.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPktCntEffLoss.setDescription('The total number of never-arrived packets and the number of discarded packets.')
cmqVoIPCallActiveRxUnimpairedSecOK = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxUnimpairedSecOK.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxUnimpairedSecOK.setDescription('The cumulative number of seconds during which there was no concealment and is considered as OK seconds.')
cmqVoIPCallActiveRxConcealSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxConcealSec.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxConcealSec.setDescription('The cumulative number of seconds during which there was some concealment.')
cmqVoIPCallActiveRxSevConcealSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 19), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSevConcealSec.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSevConcealSec.setDescription('The total number of seconds that are severely concealed from the start of the voice stream. A severly concealed second has more than 50ms of concealment.')
cmqVoIPCallActiveRxJBufMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("adaptive", 1), ("fixed", 2), ("unknown", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufMode.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufMode.setDescription('The jitter buffer mode configured for the endpoint. adaptive (1): an adaptive size algorithm for jitter buffer, fixed (2): a fixed size algorithm for jitter buffer, unknown (3): an unknown size algorithm for jitter buffer, disabled (4): no jitter buffer is configured.')
cmqVoIPCallActiveRxJBufNomDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 21), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufNomDelay.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufNomDelay.setDescription('The nominal jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallActiveRxJBufDlyNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 22), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufDlyNow.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufDlyNow.setDescription('The playout delay buffer in milliseconds to accommodate interarrival jitter. The interarrival jitter is the network arrival jitter between consecutive frames measured at the receiver.')
cmqVoIPCallActiveRxJBufLowWater = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 23), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufLowWater.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBufLowWater.setDescription('The minimum jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallActiveRxJBuffHiWater = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 24), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBuffHiWater.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxJBuffHiWater.setDescription('The maximum jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallActive3550JShortTermAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 25), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActive3550JShortTermAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActive3550JShortTermAvg.setDescription('The instantaneous RFC3550 playout delay buffer in milliseconds to accommodate packet jitter.')
cmqVoIPCallActive3550JCallAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 26), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActive3550JCallAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActive3550JCallAvg.setDescription('The long-term average of multiple RFC3550 playout delay buffer in milliseconds to accommodate packet jitter.')
cmqVoIPCallActiveRxSignalLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 27), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSignalLvl.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxSignalLvl.setDescription('The instantaneous input signal level to the telephony interface (TDM to IP network) that is used by the call leg.')
cmqVoIPCallActiveRxPred107Rscore = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107Rscore.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107Rscore.setDescription('The R-factor based MOS Listening Quality, which is listening quality minus clarity only, with no delay component. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPred107RMosListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 29), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RMosListen.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RMosListen.setDescription('The MOS Listening Quality Estimate is computed on a running basis with a new value every 10 seconds of received speech. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPred107RScoreConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RScoreConv.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RScoreConv.setDescription('The R-factor based MOS Conversation Quality, which is based on loss plus absolute delay. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPred107RMosConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 31), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RMosConv.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107RMosConv.setDescription('Th MOS Conversation Quality Estimate is computed on a running basis with a new value every 10 seconds of received speech. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPred107CodecIeBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107CodecIeBase.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107CodecIeBase.setDescription('The base Ie score is a factor to calculate IeEff value. It is obtained from G.113 table according to the codec type and is defined in kilobits per second.')
cmqVoIPCallActiveRxPred107CodecBPL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107CodecBPL.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107CodecBPL.setDescription('The bpl is a factor to calculate IeEff value. It is obtained from G.113 table according to the codec type and is defined in kilobits per second.')
cmqVoIPCallActiveRxPred107DefaultR0 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107DefaultR0.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107DefaultR0.setDescription('R0 is a factor based on signal-to-noise ratio which also includes loudness ratings.')
cmqVoIPCallActiveRxPred107IeEff = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107IeEff.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107IeEff.setDescription('Ie-eff is one of the components to contribute to MOS R-factor calculations, where R-factor is based on ITU-T G.107. Ie is a component which depends on the real-time packet loss, where as Ie-eff stands for equipment impairment factor which includes codec type and packet loss.')
cmqVoIPCallActiveRxPred107Idd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107Idd.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPred107Idd.setDescription('Idd is one of the components to contribute to MOS R-factor calculations, where R-factor is based on ITU-T G.107. Idd is a delay impairment factor which depends on the real-time round trip delay and echo.')
cmqVoIPCallActiveRxPredMosLqoAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 37), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoAvg.setDescription('The statistical average MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPredMosLqoRecent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 38), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoRecent.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoRecent.setDescription('The most recent MOS score with K-factor input based on frame loss and codec. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPredMosLqoBaseline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 39), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoBaseline.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoBaseline.setDescription('The maximum or codec zero-impairment baseline MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPredMosLqoMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 40), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoMin.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoMin.setDescription('The statistical minimum MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPredMosLqoNumWin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoNumWin.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoNumWin.setDescription('A window in 8 seconds of frame loss data required to calculate the MOS estimate.')
cmqVoIPCallActiveRxPredMosLqoBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoBursts.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoBursts.setDescription('The MOS score calculated with K-factor input of consecutive frame loss events, or error bursts. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallActiveRxPredMosLqoFrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoFrLoss.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoFrLoss.setDescription('The average frame loss count since call start.')
cmqVoIPCallActiveRxPredMosLqoVerID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoVerID.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveRxPredMosLqoVerID.setDescription('The MOS K-factor version ID, e.g. CVTQ v0.95')
cmqVoIPCallActiveTxCodecId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 45), CvcCoderTypeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxCodecId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxCodecId.setDescription('The codec type of the endpoint for the established voice path.')
cmqVoIPCallActiveTxVadEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 46), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxVadEnabled.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxVadEnabled.setDescription("This flag indicates whether VAD (Voice Activation Detector) is enabled or disabled. A value of 'true' indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqVoIPCallActiveTxTmrCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 47), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxTmrCallDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxTmrCallDur.setDescription('Duration of transmit path open from this peer to voice gateway for the call leg.')
cmqVoIPCallActiveTxTmrActSpeechDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 48), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxTmrActSpeechDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxTmrActSpeechDur.setDescription('Duration of speech transmitted from this peer to voice gateway for the call leg.')
cmqVoIPCallActiveTxSignalLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 49), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxSignalLvl.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxSignalLvl.setDescription('The instantaneous output signal level from the telephony interface (TDM to IP network) that is used by the call leg.')
cmqVoIPCallActiveTxNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallActiveTxNoiseFloor.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallActiveTxNoiseFloor.setDescription('The instantaneous noise floor level estimate if VAD is enabled.')
cmqCommonCallActiveNRTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2), )
if mibBuilder.loadTexts: cmqCommonCallActiveNRTable.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRTable.setDescription('This table is the voice and VoIP extension to the callActiveTable of DIAL-CONTROL-MIB. It contains voice quality information and statistics when noise reduction is applied to the call leg.')
cmqCommonCallActiveNREntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cmqCommonCallActiveNREntry.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNREntry.setDescription("An entry (conceptual row) in the cmqCommonCallActiveNRTable. An entry into this table is created when its associated call active entry in the DIAL-CONTROL-MIB is created which has corresponding callActiveInfoType equals to 'speech'. The entry is deleted when its associated call active entry in the DIAL-CONTROL-MIB is deleted.")
cmqCommonCallActiveNRConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRConnectionId.setDescription('The global connection identifier for the active leg of the call.')
cmqCommonCallActiveNRCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqCommonCallActiveNRCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tdm", 1), ("voip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRCallType.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRCallType.setDescription('This object indicates the call type of the active call leg. tdm(1): TDM call leg. voip (2): VoIP call leg.')
cmqCommonCallActiveNREnabledMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNREnabledMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNREnabledMic.setDescription("This flag indicates whether noise reduction is enabled or disabled in the MIC direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallActiveNREnabledEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNREnabledEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNREnabledEar.setDescription("This flag indicates whether noise reduction is enabled or disabled in the ear direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallActiveNRDirMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRDirMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRDirMic.setDescription('This object indicates the direction to which noise reduction is applied in the network with respect to MIC. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallActiveNRDirEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRDirEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRDirEar.setDescription('This object indicates the direction to which noise reduction is applied in the network with respect to ear. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallActiveNRLibVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRLibVer.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRLibVer.setDescription('The library version of noise reduction module being used.')
cmqCommonCallActiveNRIntensity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNRIntensity.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNRIntensity.setDescription('The intensity of the noise reduction being applied to audio signals.')
cmqCommonCallActivePreNRNoiseFloorEstMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 10), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActivePreNRNoiseFloorEstMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActivePreNRNoiseFloorEstMic.setDescription('The estimated noise floor level before noise redunction is applied in the MIC direction.')
cmqCommonCallActivePostNRNoiseFloorEstMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 11), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActivePostNRNoiseFloorEstMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActivePostNRNoiseFloorEstMic.setDescription('The estimated noise floor level after noise redunction is applied in the MIC direction.')
cmqCommonCallActivePreNRNoiseFloorEstEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 12), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActivePreNRNoiseFloorEstEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActivePreNRNoiseFloorEstEar.setDescription('The estimated noise floor level before noise redunction is applied in the ear direction.')
cmqCommonCallActivePostNRNoiseFloorEstEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 2, 1, 13), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActivePostNRNoiseFloorEstEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActivePostNRNoiseFloorEstEar.setDescription('The estimated noise floor level after noise redunction is applied in the ear direction.')
cmqCommonCallActiveASPTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3), )
if mibBuilder.loadTexts: cmqCommonCallActiveASPTable.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPTable.setDescription('This table is the voice and VoIP extension to the callActiveTable of DIAL-CONTROL-MIB. It contains voice quality information and statistics when acoustic shock protection is applied to the call leg.')
cmqCommonCallActiveASPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cmqCommonCallActiveASPEntry.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPEntry.setDescription("An entry (conceptual row) in the cmqCommonCallActiveASPTable. An entry into this table is created when its associated call active entry in the DIAL-CONTROL-MIB is created which has corresponding callActiveInfoType equals to 'speech'. The entry is deleted when its associated call active entry in the DIAL-CONTROL-MIB is deleted.")
cmqCommonCallActiveASPConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPConnectionId.setDescription('The global connection identifier for the active leg of the call.')
cmqCommonCallActiveASPCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqCommonCallActiveASPCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tdm", 1), ("voip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPCallType.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPCallType.setDescription('This object indicates the call type of the active call leg. tdm (1): TDM call leg. voip (2): VoIP call leg.')
cmqCommonCallActiveASPEnabledMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPEnabledMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPEnabledMic.setDescription("This flag indicates whether acoustic shock protection is enabled or disabled in the MIC direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallActiveASPEnabledEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPEnabledEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPEnabledEar.setDescription("This flag indicates whether acoustic shock protection is enabled or disabled in the ear direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallActiveASPDirMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPDirMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPDirMic.setDescription('This object indicates the direction to which acoustic shock protection is applied in the network with respect to MIC. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallActiveASPDirEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPDirEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPDirEar.setDescription('This object indicates the direction to which acoustic shock protection is applied in the network with respect to ear. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallActiveASPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("slow", 2), ("fast", 3), ("expert", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPMode.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPMode.setDescription('The acoutsic shock protection mode indicates the sensitivity of operation. auto (1): default mode, a trade-off between slow and fast mode, slow (2): slower detection mode, fast (3): faster detection mode, expert (4): expert defined mode.')
cmqCommonCallActiveASPVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveASPVer.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveASPVer.setDescription('The version of acoustic shock protection applied to the audio signal.')
cmqCommonCallActiveNumSigASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNumSigASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNumSigASPTriggMic.setDescription('The number of significant acoustic shock protection triggers which has a duration of greater than 2 seconds and is applied in the MIC direction.')
cmqCommonCallActiveDurSigASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 11), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveDurSigASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveDurSigASPTriggMic.setDescription('The cumulative duration of all significant aooustic shock protection triggers in the MIC direction.')
cmqCommonCallActiveTotNumASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveTotNumASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveTotNumASPTriggMic.setDescription('The total number of acoustic shock protection triggers in the MIC direction.')
cmqCommonCallActiveTotASPDurMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 13), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveTotASPDurMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveTotASPDurMic.setDescription('The total duration of active acoustic shock protection suppression in milliseconds in the MIC direction.')
cmqCommonCallActiveLoudestFreqEstForLongEpiMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 14), Unsigned32()).setUnits('frequency').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveLoudestFreqEstForLongEpiMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveLoudestFreqEstForLongEpiMic.setDescription('The loudest frequency estimate for the longest acoustic shock protection episode in the MIC direction.')
cmqCommonCallActiveLongestDurEpiMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 15), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveLongestDurEpiMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveLongestDurEpiMic.setDescription('The duration of the longest acoustic shock protection episode in the MIC direction.')
cmqCommonCallActiveNumSigASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveNumSigASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveNumSigASPTriggEar.setDescription('The number of significant acoustic shock protection triggers which has a duration of greater than 2 seconds and is applied in the ear direction.')
cmqCommonCallActiveDurSigASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 17), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveDurSigASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveDurSigASPTriggEar.setDescription('The cumulative duration of all significant aooustic shock protection triggers in the ear direction.')
cmqCommonCallActiveTotNumASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveTotNumASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveTotNumASPTriggEar.setDescription('The total number of acoustic shock protection triggers in the ear direction.')
cmqCommonCallActiveTotASPDurEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 19), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveTotASPDurEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveTotASPDurEar.setDescription('The total duration of active acoustic shock protection suppression in milliseconds in the ear direction.')
cmqCommonCallActiveLoudestFreqEstForLongEpiEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 20), Unsigned32()).setUnits('frequency').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveLoudestFreqEstForLongEpiEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveLoudestFreqEstForLongEpiEar.setDescription('The loudest frequency estimate for the longest acoustic shock protection episode in the ear direction.')
cmqCommonCallActiveLongestDurEpiEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 1, 3, 1, 21), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallActiveLongestDurEpiEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallActiveLongestDurEpiEar.setDescription('The duration of the longest acoustic shock protection episode in the ear direction.')
cmqVoIPCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1), )
if mibBuilder.loadTexts: cmqVoIPCallHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTable.setDescription('This table is the VoIP extension to the cCallHistoryTable of CISCO-DIAL-CONTROL-MIB. It contains voice quality information and statistics for the VoIP call leg.')
cmqVoIPCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cmqVoIPCallHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryEntry.setDescription("An entry (conceptual row) in the cmqVoIPCallHistoryTable. An entry into this table is created when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is created which has corresponding cCallHistoryInfoType equals to 'speech'. The entry is deleted when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is deleted.")
cmqVoIPCallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryConnectionId.setDescription('The global connection identifier for the VoIP leg of the call.')
cmqVoIPCallHistoryCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqVoIPCallHistoryRxCodecId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 3), CvcCoderTypeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCodecId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCodecId.setDescription('The codec type of the endpoint for the established voice path.')
cmqVoIPCallHistoryRxSevConcealRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 4), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSevConcealRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSevConcealRatioPct.setDescription('The ratio of severely concealed seconds to the sum of unimpaired seconds and concealed seconds.')
cmqVoIPCallHistoryRxCallConcealRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 5), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCallConcealRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCallConcealRatioPct.setDescription('The ratio of the recent concealment time to recent talk-mode time interval. The talk-mode interval is 3 seconds.')
cmqVoIPCallHistoryRxPktLossRatioPct = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 6), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktLossRatioPct.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktLossRatioPct.setDescription('The ratio of total effective received packet loss to the number of RTP packets expected.')
cmqVoIPCallHistoryRxRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxRoundTripTime.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxRoundTripTime.setDescription('The round-trip delay is the sum of measured network delay plus transmit and receive endpoint processing delays.')
cmqVoIPCallHistoryRxCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCallDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxCallDur.setDescription('Duration of receive path open from this peer to voice gateway for the call leg.')
cmqVoIPCallHistoryRxVoiceDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxVoiceDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxVoiceDur.setDescription('Duration of speech received from this peer to voice gateway for the call leg.')
cmqVoIPCallHistoryRxPktLossConcealDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 10), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktLossConcealDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktLossConcealDur.setDescription('The sum of error predictive concealment and bad protocol concealment in milliseconds.')
cmqVoIPCallHistoryRxPktCntExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntExpected.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntExpected.setDescription('The expected number of packets to be received.')
cmqVoIPCallHistoryRxPktCntNotArrived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntNotArrived.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntNotArrived.setDescription('The expected number of packets minus the number of received packets.')
cmqVoIPCallHistoryRxPktCntComfortNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntComfortNoise.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntComfortNoise.setDescription('The number of received comfort noise packets for the call leg.')
cmqVoIPCallHistoryRxPktCntUnusableLate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntUnusableLate.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntUnusableLate.setDescription('The number of received voice packets that arrived too late to playout with CODEC (Coder/Decoder) during the call.')
cmqVoIPCallHistoryRxPktCntDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntDiscarded.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntDiscarded.setDescription('The sum of the number of late packets and the number of bad protocol packets.')
cmqVoIPCallHistoryRxPktCntEffLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntEffLoss.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPktCntEffLoss.setDescription('The total number of never-arrived packets and the number of discarded packets.')
cmqVoIPCallHistoryRxUnimpairedSecOK = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 17), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxUnimpairedSecOK.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxUnimpairedSecOK.setDescription('The cumulative number of seconds during which there was no concealment and is considered as OK seconds.')
cmqVoIPCallHistoryRxConcealSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxConcealSec.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxConcealSec.setDescription('The cumulative number of seconds during which there was some concealment.')
cmqVoIPCallHistoryRxSevConcealSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 19), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSevConcealSec.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSevConcealSec.setDescription('The total number of seconds that are severely concealed from the start of the voice stream. A severly concealed second has more than 50ms of concealment.')
cmqVoIPCallHistoryRxJBufMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("adaptive", 1), ("fixed", 2), ("unknown", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufMode.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufMode.setDescription('The jitter buffer mode configured for the endpoint. adaptive(1): an adaptive size algorithm for jitter buffer, fixed (2): a fixed size algorithm for jitter buffer, unknown (3): an unknown size algorithm for jitter buffer, disabled (4): no jitter buffer is configured.')
cmqVoIPCallHistoryRxJBufNomDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 21), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufNomDelay.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufNomDelay.setDescription('The nominal jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallHistoryRxJBufDlyNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 22), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufDlyNow.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufDlyNow.setDescription('The playout delay buffer in milliseconds to accommodate interarrival jitter. The interarrival jitter is the network arrival jitter between consecutive frames measured at the receiver.')
cmqVoIPCallHistoryRxJBufLowWater = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 23), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufLowWater.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBufLowWater.setDescription('The minimum jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallHistoryRxJBuffHiWater = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 24), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBuffHiWater.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxJBuffHiWater.setDescription('The maximum jitter buffer playout delay in milliseconds configured for the endpoint.')
cmqVoIPCallHistory3550JShortTermAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 25), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistory3550JShortTermAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistory3550JShortTermAvg.setDescription('The instantaneous RFC3550 playout delay buffer in milliseconds to accommodate packet jitter.')
cmqVoIPCallHistory3550JCallAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 26), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistory3550JCallAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistory3550JCallAvg.setDescription('The long-term average of multiple RFC3550 playout delay buffer in milliseconds to accommodate packet jitter.')
cmqVoIPCallHistoryRxSignalLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 27), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSignalLvl.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxSignalLvl.setDescription('The instantaneous input signal level to the telephony interface (TDM to IP network) that is used by the call leg.')
cmqVoIPCallHistoryRxPred107Rscore = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107Rscore.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107Rscore.setDescription('The R-factor based MOS Listening Quality, which is listening quality minus clarity only, with no delay component. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPred107RMosListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 29), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RMosListen.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RMosListen.setDescription('The MOS Listening Quality Estimate is computed on a running basis with a new value every 10 seconds of received speech. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPred107RScoreConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RScoreConv.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RScoreConv.setDescription('The R-factor based MOS Conversation Quality, which is based on loss plus absolute delay. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPred107RMosConv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 31), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RMosConv.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107RMosConv.setDescription('Th MOS Conversation Quality Estimate is computed on a running basis with a new value every 10 seconds of received speech. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPred107CodecIeBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 32), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107CodecIeBase.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107CodecIeBase.setDescription('The base Ie score is a factor to calculate IeEff value. It is obtained from G.113 table according to the codec type and is defined in killobits per second.')
cmqVoIPCallHistoryRxPred107CodecBPL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107CodecBPL.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107CodecBPL.setDescription('The bpl is a factor to calculate IeEff value. It is obtained from G.113 table according to the codec type and is defined in kilobits per second.')
cmqVoIPCallHistoryRxPred107DefaultR0 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107DefaultR0.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107DefaultR0.setDescription('R0 is a factor based on signal-to-noise ratio which also includes loudness ratings.')
cmqVoIPCallHistoryRxPred107IeEff = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 35), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107IeEff.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107IeEff.setDescription('Ie-eff is one of the components to contribute to MOS R-factor calculations, where R-factor is based on ITU-T G.107. Ie is a component which depends on the real-time packet loss, where as Ie-eff stands for equipment impairment factor which includes codec type and packet loss.')
cmqVoIPCallHistoryRxPred107Idd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107Idd.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPred107Idd.setDescription('Idd is one of the components to contribute to MOS R-factor calculations, where R-factor is based on ITU-T G.107. Idd is a delay impairment factor which depends on the real-time round trip delay and echo.')
cmqVoIPCallHistoryRxPredMosLqoAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 37), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoAvg.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoAvg.setDescription('The statistical average MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPredMosLqoRecent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 38), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoRecent.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoRecent.setDescription('The most recent MOS score with K-factor input based on frame loss and codec. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPredMosLqoBaseline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 39), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoBaseline.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoBaseline.setDescription('The maximum or codec zero-impairment baseline MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPredMosLqoMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 40), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoMin.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoMin.setDescription('The statistical minimum MOS score of all the previous instantaneous values. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPredMosLqoNumWin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 41), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoNumWin.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoNumWin.setDescription('A window in 8 seconds of frame loss data required to calculate the MOS estimate.')
cmqVoIPCallHistoryRxPredMosLqoBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 42), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoBursts.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoBursts.setDescription('The MOS score calculated with K-factor input of consecutive frame loss events, or error bursts. A value of 0 indicates an invalid score and a positive value indicates a valid score.')
cmqVoIPCallHistoryRxPredMosLqoFrLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 43), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoFrLoss.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoFrLoss.setDescription('The average frame loss count since call start.')
cmqVoIPCallHistoryRxPredMosLqoVerID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoVerID.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryRxPredMosLqoVerID.setDescription('The MOS K-factor version ID, e.g. CVTQ v0.95')
cmqVoIPCallHistoryTxCodecId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 45), CvcCoderTypeRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxCodecId.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxCodecId.setDescription('The codec type of the endpoint for the established voice path.')
cmqVoIPCallHistoryTxVadEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 46), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxVadEnabled.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxVadEnabled.setDescription("This flag indicates whether VAD (Voice Activation Detector) is enabled or disabled. A value of 'true' indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqVoIPCallHistoryTxTmrCallDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 47), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxTmrCallDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxTmrCallDur.setDescription('Duration of transmit path open from this peer to voice gateway for the call leg.')
cmqVoIPCallHistoryTxTmrActSpeechDur = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 48), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxTmrActSpeechDur.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxTmrActSpeechDur.setDescription('Duration of speech transmitted from this peer to voice gateway for the call leg.')
cmqVoIPCallHistoryTxSignalLvl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 49), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxSignalLvl.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxSignalLvl.setDescription('The instantaneous output signal level from the telephony interface (TDM to IP network) that is used by the call leg.')
cmqVoIPCallHistoryTxNoiseFloor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 1, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxNoiseFloor.setStatus('current')
if mibBuilder.loadTexts: cmqVoIPCallHistoryTxNoiseFloor.setDescription('The instantaneous noise floor level estimate if VAD is enabled.')
cmqCommonCallHistoryNRTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2), )
if mibBuilder.loadTexts: cmqCommonCallHistoryNRTable.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRTable.setDescription('This table is the voice and VoIP extension to the cCallHistoryTable of CISCO-DIAL-CONTROL-MIB. It contains voice quality information and statistics when noise reduction is applied to the call leg.')
cmqCommonCallHistoryNREntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cmqCommonCallHistoryNREntry.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNREntry.setDescription("An entry (conceptual row) in the cmqCommonCallHistoryTable. An entry into this table is created when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is created which has corresponding cCallHistoryInfoType equals to 'speech'. The entry is deleted when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is deleted.")
cmqCommonCallHistoryNRConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRConnectionId.setDescription('The global connection identifier for the history leg of the call.')
cmqCommonCallHistoryNRCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqCommonCallHistoryNRCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tdm", 1), ("voip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRCallType.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRCallType.setDescription('This object indicates the call type of the history call leg. tdm (1): TDM call leg. voip (2): VoIP call leg.')
cmqCommonCallHistoryNREnabledMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNREnabledMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNREnabledMic.setDescription("This flag indicates whether noise reduction is enabled or disabled in the MIC direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallHistoryNREnabledEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNREnabledEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNREnabledEar.setDescription("This flag indicates whether noise reduction is enabled or disabled in the ear direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallHistoryNRDirMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRDirMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRDirMic.setDescription('This object indicates the direction to which noise reduction is applied in the network with respect to MIC. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallHistoryNRDirEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRDirEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRDirEar.setDescription('This object indicates the direction to which noise reduction is applied in the network with respect to ear. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallHistoryNRLibVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRLibVer.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRLibVer.setDescription('The library version of noise reduction module being used.')
cmqCommonCallHistoryNRIntensity = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNRIntensity.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNRIntensity.setDescription('The intensity of the noise reduction being applied to audio signals.')
cmqCommonCallHistoryPreNRNoiseFloorEstMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 10), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryPreNRNoiseFloorEstMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryPreNRNoiseFloorEstMic.setDescription('The estimated noise floor level before noise redunction is applied in the MIC direction.')
cmqCommonCallHistoryPostNRNoiseFloorEstMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 11), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryPostNRNoiseFloorEstMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryPostNRNoiseFloorEstMic.setDescription('The estimated noise floor level after noise redunction is applied in the MIC direction.')
cmqCommonCallHistoryPreNRNoiseFloorEstEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 12), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryPreNRNoiseFloorEstEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryPreNRNoiseFloorEstEar.setDescription('The estimated noise floor level before noise redunction is applied in the ear direction.')
cmqCommonCallHistoryPostNRNoiseFloorEstEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 2, 1, 13), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryPostNRNoiseFloorEstEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryPostNRNoiseFloorEstEar.setDescription('The estimated noise floor level after noise redunction is applied in the ear direction.')
cmqCommonCallHistoryASPTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3), )
if mibBuilder.loadTexts: cmqCommonCallHistoryASPTable.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPTable.setDescription('This table is the voice and VoIP extension to the cCallHistoryTable of CISCO-DIAL-CONTROL-MIB. It contains voice quality information and statistics when acoustic shock protection is applied to the call leg.')
cmqCommonCallHistoryASPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEntry.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEntry.setDescription("An entry (conceptual row) in the cmqCommonCallHistoryTable. An entry into this table is created when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is created which has corresponding cCallHistoryInfoType equals to 'speech'. The entry is deleted when its associated call history entry in the CISCO-DIAL-CONTROL-MIB is deleted.")
cmqCommonCallHistoryASPConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPConnectionId.setDescription('The global connection identifier for the history leg of the call.')
cmqCommonCallHistoryASPCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint. An audio-only call with a call reference ID of zero will not have a video call entry associated with it, although an audio-only call can also have a reference ID greater than zero.')
cmqCommonCallHistoryASPCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tdm", 1), ("voip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPCallType.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPCallType.setDescription('This object indicates the call type of the history call leg. tdm (1): TDM call leg voip (2): VoIP call leg.')
cmqCommonCallHistoryASPEnabledMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEnabledMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEnabledMic.setDescription("This flag indicates whether acoustic shock protection is enabled or disabled in the MIC direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallHistoryASPEnabledEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEnabledEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPEnabledEar.setDescription("This flag indicates whether acoustic shock protection is enabled or disabled in the ear direction. A value of 'true' for this object indicates enabled and a value of 'false' indicates disabled. Default is disabled.")
cmqCommonCallHistoryASPDirMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPDirMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPDirMic.setDescription('This object indicates the direction to which acoustic shock protection is applied in the network with respect to MIC. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallHistoryASPDirEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tdm", 1), ("wan", 2), ("lan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPDirEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPDirEar.setDescription('This object indicates the direction to which acoustic shock protection is applied in the network with respect to ear. tdm (1): audio stream is from TDM, wan (2): audio stream is from WAN, lan (3): audio stream is from LAN.')
cmqCommonCallHistoryASPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("slow", 2), ("fast", 3), ("expert", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPMode.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPMode.setDescription('The acoutsic shock protection mode indicates the sensitivity of operation. auto (1): default mode, a trade-off between slow and fast mode, slow (2): slower detection mode, fast (3): faster detection mode, expert (4): expert defined mode.')
cmqCommonCallHistoryASPVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryASPVer.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryASPVer.setDescription('The version of acoutsic shock protection applied to audio signals.')
cmqCommonCallHistoryNumSigASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNumSigASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNumSigASPTriggMic.setDescription('The number of significant acoustic shock protection triggers which has a duration of greater than 2 seconds and is applied in the MIC direction.')
cmqCommonCallHistoryDurSigASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 11), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryDurSigASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryDurSigASPTriggMic.setDescription('The cumulative duration of all significant aooustic shock protection triggers in the MIC direction.')
cmqCommonCallHistoryTotNumASPTriggMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryTotNumASPTriggMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryTotNumASPTriggMic.setDescription('The total number of acoustic shock protection triggers in the MIC direction.')
cmqCommonCallHistoryTotASPDurMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 13), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryTotASPDurMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryTotASPDurMic.setDescription('The total duration of acoustic shock protection suppression in milliseconds in the MIC direction.')
cmqCommonCallHistoryLoudestFreqEstForLongEpiMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 14), Unsigned32()).setUnits('frequency').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryLoudestFreqEstForLongEpiMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryLoudestFreqEstForLongEpiMic.setDescription('The loudest frequency estimate for the longest acoustic shock protection episode in the MIC direction.')
cmqCommonCallHistoryLongestDurEpiMic = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 15), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryLongestDurEpiMic.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryLongestDurEpiMic.setDescription('The duration of the longest acoustic shock protection episode in the MIC direction.')
cmqCommonCallHistoryNumSigASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryNumSigASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryNumSigASPTriggEar.setDescription('The number of significant acoustic shock protection triggers which has a duration of greater than 2 seconds and is applied in the ear direction.')
cmqCommonCallHistoryDurSigASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 17), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryDurSigASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryDurSigASPTriggEar.setDescription('The cumulative duration of all significant aooustic shock protection triggers in the ear direction.')
cmqCommonCallHistoryTotNumASPTriggEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryTotNumASPTriggEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryTotNumASPTriggEar.setDescription('The total number of acoustic shock protection triggers in the ear direction.')
cmqCommonCallHistoryTotASPDurEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 19), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryTotASPDurEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryTotASPDurEar.setDescription('The total duration of acoustic shock protection suppression in milliseconds in the ear direction.')
cmqCommonCallHistoryLoudestFreqEstForLongEpiEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 20), Unsigned32()).setUnits('frequency').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryLoudestFreqEstForLongEpiEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryLoudestFreqEstForLongEpiEar.setDescription('The loudest frequency estimate for the longest acoustic shock protection episode in the ear direction.')
cmqCommonCallHistoryLongestDurEpiEar = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 2, 3, 1, 21), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqCommonCallHistoryLongestDurEpiEar.setStatus('current')
if mibBuilder.loadTexts: cmqCommonCallHistoryLongestDurEpiEar.setDescription('The duration of the longest acoustic shock protection episode in the ear direction.')
cmqVideoCallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1), )
if mibBuilder.loadTexts: cmqVideoCallActiveTable.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveTable.setDescription('This table is the video extension to the call active table of DIAL-CONTROL-MIB. It contains video quality information for the VoIP call leg.')
cmqVideoCallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cmqVideoCallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveEntry.setDescription('An entry (conceptual row) in the cmqVideoCallActiveTable. An entry is added to the table when the below conditions are met: 1. A call active entry in callActiveTable of the IETF Dial Control MIB with video callActiveInfoType is created. 2. An entry in cVideoCommonActiveTable of the Cisco Video Session MIB is created whose cVideoCommonActiveCallType is pointToPointCall, conferenceCall, or monitoredCall. The entry is deleted when its associated call active entry in callActiveTable of the IETF Dial Control MIB is deleted.')
cmqVideoCallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveConnectionId.setDescription('The global connection identifier for the video leg of the call.')
cmqVideoCallActiveCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint.')
cmqVideoCallActiveRxMOSInstant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxMOSInstant.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxMOSInstant.setDescription('Instantaneous aggregated MOS in the receive direction, where 0 is an invalid score and the lowest score starts with 1. A value of 100 indicates the best video quality.')
cmqVideoCallActiveRxCompressDegradeInstant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxCompressDegradeInstant.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxCompressDegradeInstant.setDescription('The percentage of quality loss (indicated by RX instantaneous MOS) due to the initial compression of video at an end point introduced by a video encoder.')
cmqVideoCallActiveRxNetworkDegradeInstant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxNetworkDegradeInstant.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxNetworkDegradeInstant.setDescription('The percentage of quality loss (indicated by RX instantaneous MOS) due to network factors, such as jitter, delay and packet loss.')
cmqVideoCallActiveRxTransscodeDegradeInstant = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxTransscodeDegradeInstant.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxTransscodeDegradeInstant.setDescription('The percentage of quality loss (indicated by RX instantaneous MOS) due to the transcoding, including transrating, of a video stream.')
cmqVideoCallActiveRxMOSAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxMOSAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxMOSAverage.setDescription('Average aggregated MOS in the receive direction since the beginning of the video session. 0 indicates an invalid score and the lowest score starts with 1. A value of 100 indicates the best video quality.')
cmqVideoCallActiveRxCompressDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxCompressDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxCompressDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to the initial compression of video at an end point introduced by a video encoder.')
cmqVideoCallActiveRxNetworkDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxNetworkDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxNetworkDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to network factors, such as jitter, delay and packet loss.')
cmqVideoCallActiveRxTransscodeDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 3, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallActiveRxTransscodeDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveRxTransscodeDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to the transcoding, including transrating, of a video stream.')
cmqVideoCallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1), )
if mibBuilder.loadTexts: cmqVideoCallHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryTable.setDescription('This table is the video extension to the call history table of CISCO-DIAL-CONTROL-MIB. It contains video quality information for the VoIP call leg.')
cmqVideoCallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cmqVideoCallHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryEntry.setDescription('An entry (conceptual row) in the cmqVideoCallHistoryTable. An entry is added to the table when the below conditions are met: 1. A call history entry in cCallHistoryTable of the Cisco Dial Control MIB with video cCallHistoryInfoType is created. 2. An entry in cVideoCommonActiveTable of the Cisco Video Session MIB is created whose cVideoCommonActiveCallType is pointToPointCall, conferenceCall, or monitoredCall. The entry is deleted when its associated call history entriy in cCallHistoryTable of the Cisco Dial Control MIB is deleted.')
cmqVideoCallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryConnectionId.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryConnectionId.setDescription('The global connection identifier for the video leg of the call.')
cmqVideoCallHistoryCallReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 2), CvcCallReferenceIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryCallReferenceId.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryCallReferenceId.setDescription('The call reference ID associates the video call entry and voice call entry of the same endpoint.')
cmqVideoCallHistoryRxMOSAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryRxMOSAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryRxMOSAverage.setDescription('Average aggregated MOS in the receive direction since the beginning of the video session. 0 indicates an invalid score and the lowest score starts with 1. A value of 100 indicates the best video quality.')
cmqVideoCallHistoryRxCompressDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryRxCompressDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryRxCompressDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to the initial compression of video at an end point introduced by a video encoder.')
cmqVideoCallHistoryRxNetworkDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryRxNetworkDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryRxNetworkDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to network factors, such as jitter, delay and packet loss.')
cmqVideoCallHistoryRxTransscodeDegradeAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 769, 1, 4, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmqVideoCallHistoryRxTransscodeDegradeAverage.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryRxTransscodeDegradeAverage.setDescription('The percentage of quality loss (indicated by RX average MOS) due to the transcoding, including transrating, of a video stream.')
ciscoMediaQualityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 2))
ciscoMediaQualityMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 1, 1)).setObjects(("CISCO-MEDIA-QUALITY-MIB", "cmqVoiceCallActiveGroup"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoiceCallHistoryGroup"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveGroup"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMediaQualityMIBCompliance = ciscoMediaQualityMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoMediaQualityMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement ciscoMediaQualityMIB module.')
cmqVoiceCallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 2, 1)).setObjects(("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxSevConcealRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxCallConcealRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktLossRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxRoundTripTime"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxCallDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxVoiceDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktLossConcealDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntExpected"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntNotArrived"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntComfortNoise"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntUnusableLate"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntDiscarded"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPktCntEffLoss"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxUnimpairedSecOK"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxConcealSec"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxSevConcealSec"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxJBufMode"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxJBufNomDelay"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxJBufDlyNow"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxJBufLowWater"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxJBuffHiWater"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActive3550JShortTermAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActive3550JCallAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxSignalLvl"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107Rscore"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107RMosListen"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107RScoreConv"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107RMosConv"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107CodecIeBase"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107CodecBPL"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107DefaultR0"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107IeEff"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPred107Idd"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoRecent"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoBaseline"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoMin"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoNumWin"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoBursts"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoFrLoss"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxPredMosLqoVerID"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxCodecId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxVadEnabled"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxTmrCallDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxTmrActSpeechDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxSignalLvl"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveTxNoiseFloor"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallActiveRxCodecId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNREnabledMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActivePreNRNoiseFloorEstMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActivePostNRNoiseFloorEstMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPEnabledMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNumSigASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveTotNumASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveTotASPDurMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveLongestDurEpiMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveLoudestFreqEstForLongEpiMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveDurSigASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNREnabledEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRDirEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNumSigASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveTotNumASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveTotASPDurEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveLongestDurEpiEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveLoudestFreqEstForLongEpiEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveDurSigASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRDirMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRLibVer"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRIntensity"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPDirMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPMode"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPVer"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveNRCallType"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPCallType"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActivePreNRNoiseFloorEstEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActivePostNRNoiseFloorEstEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPEnabledEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallActiveASPDirEar"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmqVoiceCallActiveGroup = cmqVoiceCallActiveGroup.setStatus('current')
if mibBuilder.loadTexts: cmqVoiceCallActiveGroup.setDescription('The collection of objects that provide voice quality statistics for active voice calls.')
cmqVoiceCallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 2, 2)).setObjects(("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxCodecId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxSevConcealRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxCallConcealRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktLossRatioPct"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxRoundTripTime"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxCallDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxVoiceDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktLossConcealDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntExpected"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntNotArrived"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntComfortNoise"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntUnusableLate"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntDiscarded"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPktCntEffLoss"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxUnimpairedSecOK"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxConcealSec"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxSevConcealSec"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxJBufMode"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxJBufNomDelay"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxJBufDlyNow"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxJBufLowWater"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxJBuffHiWater"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistory3550JShortTermAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistory3550JCallAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxSignalLvl"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107Rscore"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107RMosListen"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107RScoreConv"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107RMosConv"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107CodecIeBase"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107CodecBPL"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107DefaultR0"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107IeEff"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPred107Idd"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoAvg"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoRecent"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoBaseline"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoMin"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoNumWin"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoBursts"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoFrLoss"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryRxPredMosLqoVerID"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxCodecId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxVadEnabled"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxTmrCallDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxTmrActSpeechDur"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxSignalLvl"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryTxNoiseFloor"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVoIPCallHistoryCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNREnabledMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryPreNRNoiseFloorEstMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryPostNRNoiseFloorEstMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPEnabledMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNumSigASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryDurSigASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryTotNumASPTriggMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryTotASPDurMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryLongestDurEpiMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryLoudestFreqEstForLongEpiMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryPreNRNoiseFloorEstEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryPostNRNoiseFloorEstEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNumSigASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryDurSigASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryTotNumASPTriggEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryTotASPDurEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryLongestDurEpiEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryLoudestFreqEstForLongEpiEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRDirMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRLibVer"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRIntensity"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPDirMic"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPMode"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPVer"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRCallType"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPCallType"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNREnabledEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryNRDirEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPEnabledEar"), ("CISCO-MEDIA-QUALITY-MIB", "cmqCommonCallHistoryASPDirEar"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmqVoiceCallHistoryGroup = cmqVoiceCallHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: cmqVoiceCallHistoryGroup.setDescription('The collection of objects that provide voice quality statistics for history voice calls.')
cmqVideoCallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 2, 3)).setObjects(("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxMOSInstant"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxMOSAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxCompressDegradeInstant"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxNetworkDegradeInstant"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxTransscodeDegradeInstant"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxCompressDegradeAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxNetworkDegradeAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallActiveRxTransscodeDegradeAverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmqVideoCallActiveGroup = cmqVideoCallActiveGroup.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallActiveGroup.setDescription('The collection of objects that provide video quality statistics for active video calls.')
cmqVideoCallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 769, 2, 2, 4)).setObjects(("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryConnectionId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryCallReferenceId"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryRxMOSAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryRxCompressDegradeAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryRxNetworkDegradeAverage"), ("CISCO-MEDIA-QUALITY-MIB", "cmqVideoCallHistoryRxTransscodeDegradeAverage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmqVideoCallHistoryGroup = cmqVideoCallHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: cmqVideoCallHistoryGroup.setDescription('The collection of objects that provide video quality statistics for history video calls.')
mibBuilder.exportSymbols("CISCO-MEDIA-QUALITY-MIB", cmqVoIPCallHistoryRxRoundTripTime=cmqVoIPCallHistoryRxRoundTripTime, cmqVoIPCallHistoryRxJBufDlyNow=cmqVoIPCallHistoryRxJBufDlyNow, cmqVoIPCallHistoryRxPred107RScoreConv=cmqVoIPCallHistoryRxPred107RScoreConv, cmqCommonCallHistoryDurSigASPTriggEar=cmqCommonCallHistoryDurSigASPTriggEar, cmqCommonCallActiveLoudestFreqEstForLongEpiMic=cmqCommonCallActiveLoudestFreqEstForLongEpiMic, cmqVideoCallHistoryConnectionId=cmqVideoCallHistoryConnectionId, cmqCommonCallHistoryNRConnectionId=cmqCommonCallHistoryNRConnectionId, cmqVideoCallActiveRxNetworkDegradeInstant=cmqVideoCallActiveRxNetworkDegradeInstant, cmqVoIPCallHistoryRxPred107IeEff=cmqVoIPCallHistoryRxPred107IeEff, cmqCommonCallActiveNRTable=cmqCommonCallActiveNRTable, cmqVoIPCallHistoryRxUnimpairedSecOK=cmqVoIPCallHistoryRxUnimpairedSecOK, cmqVoIPCallActiveRxPktCntNotArrived=cmqVoIPCallActiveRxPktCntNotArrived, cmqVideoCallActiveRxTransscodeDegradeAverage=cmqVideoCallActiveRxTransscodeDegradeAverage, cmqVoIPCallActiveTxCodecId=cmqVoIPCallActiveTxCodecId, cmqCommonCallActiveASPMode=cmqCommonCallActiveASPMode, cmqVoIPCallActiveRxPredMosLqoBursts=cmqVoIPCallActiveRxPredMosLqoBursts, cmqCommonCallHistoryASPTable=cmqCommonCallHistoryASPTable, cmqVoIPCallActiveRxPred107DefaultR0=cmqVoIPCallActiveRxPred107DefaultR0, cmqVoIPCallHistoryRxConcealSec=cmqVoIPCallHistoryRxConcealSec, cmqVoIPCallHistoryRxPktCntUnusableLate=cmqVoIPCallHistoryRxPktCntUnusableLate, cmqVideoCallActiveRxMOSInstant=cmqVideoCallActiveRxMOSInstant, cmqVoIPCallHistoryRxPred107Rscore=cmqVoIPCallHistoryRxPred107Rscore, cmqCommonCallHistoryNRCallReferenceId=cmqCommonCallHistoryNRCallReferenceId, cmqVoIPCallActiveRxPred107CodecBPL=cmqVoIPCallActiveRxPred107CodecBPL, cmqVoIPCallActiveTxSignalLvl=cmqVoIPCallActiveTxSignalLvl, cmqCommonCallHistoryASPCallReferenceId=cmqCommonCallHistoryASPCallReferenceId, cmqVoIPCallHistoryRxPktCntComfortNoise=cmqVoIPCallHistoryRxPktCntComfortNoise, cmqVoIPCallActiveRxPktCntDiscarded=cmqVoIPCallActiveRxPktCntDiscarded, cmqVoIPCallActiveRxJBufLowWater=cmqVoIPCallActiveRxJBufLowWater, cmqVoIPCallActiveRxPredMosLqoVerID=cmqVoIPCallActiveRxPredMosLqoVerID, cmqVoIPCallHistoryRxJBufLowWater=cmqVoIPCallHistoryRxJBufLowWater, cmqVoIPCallHistoryRxPredMosLqoBaseline=cmqVoIPCallHistoryRxPredMosLqoBaseline, cmqCommonCallHistoryNRCallType=cmqCommonCallHistoryNRCallType, cmqCommonCallHistoryLongestDurEpiEar=cmqCommonCallHistoryLongestDurEpiEar, cmqVoIPCallActiveTxNoiseFloor=cmqVoIPCallActiveTxNoiseFloor, cmqVoIPCallHistoryRxPktLossRatioPct=cmqVoIPCallHistoryRxPktLossRatioPct, cmqCommonCallActiveLongestDurEpiEar=cmqCommonCallActiveLongestDurEpiEar, cmqVoIPCallHistoryRxPktCntExpected=cmqVoIPCallHistoryRxPktCntExpected, cmqVoIPCallActiveRxPredMosLqoRecent=cmqVoIPCallActiveRxPredMosLqoRecent, cmqVoIPCallHistoryRxPredMosLqoRecent=cmqVoIPCallHistoryRxPredMosLqoRecent, cmqVoIPCallActiveRxSevConcealSec=cmqVoIPCallActiveRxSevConcealSec, cmqVoIPCallActiveRxUnimpairedSecOK=cmqVoIPCallActiveRxUnimpairedSecOK, cmqCommonCallHistoryPostNRNoiseFloorEstMic=cmqCommonCallHistoryPostNRNoiseFloorEstMic, cmqVoIPCallActiveRxSignalLvl=cmqVoIPCallActiveRxSignalLvl, cmqVoIPCallActiveCallReferenceId=cmqVoIPCallActiveCallReferenceId, cmqVoIPCallHistoryRxPredMosLqoFrLoss=cmqVoIPCallHistoryRxPredMosLqoFrLoss, cmqCommonCallActiveASPDirMic=cmqCommonCallActiveASPDirMic, cmqCommonCallHistoryNRTable=cmqCommonCallHistoryNRTable, cmqCommonCallHistoryNRDirEar=cmqCommonCallHistoryNRDirEar, cmqVoIPCallActiveRxPred107RMosConv=cmqVoIPCallActiveRxPred107RMosConv, cmqCommonCallHistoryASPCallType=cmqCommonCallHistoryASPCallType, cmqVoIPCallActiveRxRoundTripTime=cmqVoIPCallActiveRxRoundTripTime, cmqVoIPCallHistoryRxPred107RMosListen=cmqVoIPCallHistoryRxPred107RMosListen, cmqCommonCallHistoryASPVer=cmqCommonCallHistoryASPVer, cmqVoIPCallHistoryRxPredMosLqoBursts=cmqVoIPCallHistoryRxPredMosLqoBursts, cmqCommonCallHistoryLongestDurEpiMic=cmqCommonCallHistoryLongestDurEpiMic, cmqVideoCallActiveRxNetworkDegradeAverage=cmqVideoCallActiveRxNetworkDegradeAverage, cmqCommonCallActiveNREntry=cmqCommonCallActiveNREntry, cmqVoIPCallHistoryRxCodecId=cmqVoIPCallHistoryRxCodecId, cmqVoIPCallHistoryRxPktCntEffLoss=cmqVoIPCallHistoryRxPktCntEffLoss, cmqVideoCallHistoryRxNetworkDegradeAverage=cmqVideoCallHistoryRxNetworkDegradeAverage, cmqVideoCallHistoryRxTransscodeDegradeAverage=cmqVideoCallHistoryRxTransscodeDegradeAverage, cmqCommonCallActiveNRCallReferenceId=cmqCommonCallActiveNRCallReferenceId, cmqVideoCallActiveRxCompressDegradeInstant=cmqVideoCallActiveRxCompressDegradeInstant, cmqVoiceCallActive=cmqVoiceCallActive, cmqVideoCallHistoryRxCompressDegradeAverage=cmqVideoCallHistoryRxCompressDegradeAverage, cmqVoIPCallHistoryCallReferenceId=cmqVoIPCallHistoryCallReferenceId, cmqVideoCallActiveEntry=cmqVideoCallActiveEntry, cmqVoIPCallActiveRxPred107CodecIeBase=cmqVoIPCallActiveRxPred107CodecIeBase, cmqCommonCallHistoryASPConnectionId=cmqCommonCallHistoryASPConnectionId, cmqCommonCallActiveTotASPDurEar=cmqCommonCallActiveTotASPDurEar, cmqCommonCallHistoryTotASPDurMic=cmqCommonCallHistoryTotASPDurMic, cmqVoIPCallActiveRxPktCntEffLoss=cmqVoIPCallActiveRxPktCntEffLoss, cmqCommonCallActiveNRDirMic=cmqCommonCallActiveNRDirMic, cmqCommonCallActiveASPVer=cmqCommonCallActiveASPVer, cmqCommonCallActiveASPCallReferenceId=cmqCommonCallActiveASPCallReferenceId, cmqCommonCallActiveNREnabledEar=cmqCommonCallActiveNREnabledEar, cmqVoIPCallActiveRxPktLossConcealDur=cmqVoIPCallActiveRxPktLossConcealDur, cmqVoIPCallActiveRxPktCntComfortNoise=cmqVoIPCallActiveRxPktCntComfortNoise, cmqCommonCallActiveNREnabledMic=cmqCommonCallActiveNREnabledMic, cmqVoIPCallActiveRxCodecId=cmqVoIPCallActiveRxCodecId, cmqCommonCallActiveNRIntensity=cmqCommonCallActiveNRIntensity, cmqVideoCallActiveRxCompressDegradeAverage=cmqVideoCallActiveRxCompressDegradeAverage, cmqCommonCallHistoryDurSigASPTriggMic=cmqCommonCallHistoryDurSigASPTriggMic, cmqVoIPCallActiveRxSevConcealRatioPct=cmqVoIPCallActiveRxSevConcealRatioPct, cmqVoIPCallActiveRxJBuffHiWater=cmqVoIPCallActiveRxJBuffHiWater, cmqVoIPCallHistoryRxPktCntNotArrived=cmqVoIPCallHistoryRxPktCntNotArrived, cmqVoIPCallHistoryRxPktCntDiscarded=cmqVoIPCallHistoryRxPktCntDiscarded, cmqCommonCallActiveASPDirEar=cmqCommonCallActiveASPDirEar, cmqCommonCallActivePostNRNoiseFloorEstMic=cmqCommonCallActivePostNRNoiseFloorEstMic, cmqVoIPCallActiveRxCallDur=cmqVoIPCallActiveRxCallDur, cmqCommonCallHistoryLoudestFreqEstForLongEpiEar=cmqCommonCallHistoryLoudestFreqEstForLongEpiEar, cmqCommonCallHistoryPreNRNoiseFloorEstMic=cmqCommonCallHistoryPreNRNoiseFloorEstMic, cmqVoIPCallHistory3550JCallAvg=cmqVoIPCallHistory3550JCallAvg, cmqVoIPCallHistoryRxJBufMode=cmqVoIPCallHistoryRxJBufMode, cmqVoIPCallHistoryRxPred107CodecIeBase=cmqVoIPCallHistoryRxPred107CodecIeBase, cmqVoIPCallActiveRxPredMosLqoNumWin=cmqVoIPCallActiveRxPredMosLqoNumWin, cmqCommonCallHistoryASPDirEar=cmqCommonCallHistoryASPDirEar, cmqVoIPCallActiveRxPred107RScoreConv=cmqVoIPCallActiveRxPred107RScoreConv, cmqVoIPCallHistoryTxNoiseFloor=cmqVoIPCallHistoryTxNoiseFloor, cmqVoIPCallActive3550JCallAvg=cmqVoIPCallActive3550JCallAvg, cmqCommonCallHistoryASPEnabledEar=cmqCommonCallHistoryASPEnabledEar, cmqVoIPCallActiveRxPktCntExpected=cmqVoIPCallActiveRxPktCntExpected, cmqCommonCallHistoryPreNRNoiseFloorEstEar=cmqCommonCallHistoryPreNRNoiseFloorEstEar, cmqVoIPCallHistoryRxPred107DefaultR0=cmqVoIPCallHistoryRxPred107DefaultR0, cmqVoIPCallHistoryRxPredMosLqoVerID=cmqVoIPCallHistoryRxPredMosLqoVerID, cmqCommonCallHistoryLoudestFreqEstForLongEpiMic=cmqCommonCallHistoryLoudestFreqEstForLongEpiMic, cmqVoIPCallActiveRxPred107RMosListen=cmqVoIPCallActiveRxPred107RMosListen, cmqCommonCallActiveNRCallType=cmqCommonCallActiveNRCallType, cmqCommonCallActiveASPEntry=cmqCommonCallActiveASPEntry, cmqCommonCallHistoryNREnabledEar=cmqCommonCallHistoryNREnabledEar, cmqCommonCallHistoryNRIntensity=cmqCommonCallHistoryNRIntensity, cmqVoIPCallActiveRxPredMosLqoBaseline=cmqVoIPCallActiveRxPredMosLqoBaseline, cmqCommonCallActiveDurSigASPTriggMic=cmqCommonCallActiveDurSigASPTriggMic, cmqVoiceCallHistory=cmqVoiceCallHistory, cmqCommonCallActiveLongestDurEpiMic=cmqCommonCallActiveLongestDurEpiMic, cmqVoIPCallHistoryRxPredMosLqoNumWin=cmqVoIPCallHistoryRxPredMosLqoNumWin, cmqVoIPCallHistoryRxPred107CodecBPL=cmqVoIPCallHistoryRxPred107CodecBPL, cmqCommonCallHistoryTotNumASPTriggMic=cmqCommonCallHistoryTotNumASPTriggMic, cmqVoIPCallHistoryTxTmrCallDur=cmqVoIPCallHistoryTxTmrCallDur, cmqCommonCallActiveNumSigASPTriggMic=cmqCommonCallActiveNumSigASPTriggMic, cmqVideoCallActiveRxTransscodeDegradeInstant=cmqVideoCallActiveRxTransscodeDegradeInstant, cmqVoIPCallActiveRxPktCntUnusableLate=cmqVoIPCallActiveRxPktCntUnusableLate, cmqVoIPCallActiveTxTmrCallDur=cmqVoIPCallActiveTxTmrCallDur, cmqVoIPCallActiveRxPred107IeEff=cmqVoIPCallActiveRxPred107IeEff, ciscoMediaQualityMIBConform=ciscoMediaQualityMIBConform, cmqVoIPCallActiveTable=cmqVoIPCallActiveTable, cmqVoIPCallActiveTxVadEnabled=cmqVoIPCallActiveTxVadEnabled, cmqVoIPCallHistory3550JShortTermAvg=cmqVoIPCallHistory3550JShortTermAvg, cmqVoIPCallActiveRxPredMosLqoMin=cmqVoIPCallActiveRxPredMosLqoMin, cmqCommonCallActiveTotNumASPTriggEar=cmqCommonCallActiveTotNumASPTriggEar, cmqVoIPCallHistoryRxPred107RMosConv=cmqVoIPCallHistoryRxPred107RMosConv, cmqVideoCallHistory=cmqVideoCallHistory, cmqVoIPCallActive3550JShortTermAvg=cmqVoIPCallActive3550JShortTermAvg, cmqCommonCallHistoryASPDirMic=cmqCommonCallHistoryASPDirMic, cmqCommonCallActiveASPConnectionId=cmqCommonCallActiveASPConnectionId, cmqVoIPCallHistoryRxSevConcealRatioPct=cmqVoIPCallHistoryRxSevConcealRatioPct, cmqCommonCallActiveNRConnectionId=cmqCommonCallActiveNRConnectionId, cmqVideoCallActiveGroup=cmqVideoCallActiveGroup, cmqCommonCallActiveASPEnabledEar=cmqCommonCallActiveASPEnabledEar, cmqCommonCallActiveNRLibVer=cmqCommonCallActiveNRLibVer, cmqVideoCallHistoryEntry=cmqVideoCallHistoryEntry, cmqCommonCallActivePreNRNoiseFloorEstEar=cmqCommonCallActivePreNRNoiseFloorEstEar, cmqVoIPCallActiveRxPredMosLqoAvg=cmqVoIPCallActiveRxPredMosLqoAvg, cmqVideoCallHistoryCallReferenceId=cmqVideoCallHistoryCallReferenceId, cmqCommonCallHistoryNumSigASPTriggMic=cmqCommonCallHistoryNumSigASPTriggMic, cmqVideoCallActive=cmqVideoCallActive, cmqVoIPCallHistoryRxCallDur=cmqVoIPCallHistoryRxCallDur, cmqVoIPCallActiveRxVoiceDur=cmqVoIPCallActiveRxVoiceDur, cmqCommonCallHistoryNRDirMic=cmqCommonCallHistoryNRDirMic, cmqCommonCallHistoryASPEnabledMic=cmqCommonCallHistoryASPEnabledMic, ciscoMediaQualityMIB=ciscoMediaQualityMIB, cmqCommonCallHistoryPostNRNoiseFloorEstEar=cmqCommonCallHistoryPostNRNoiseFloorEstEar, cmqCommonCallHistoryASPEntry=cmqCommonCallHistoryASPEntry, cmqCommonCallHistoryTotASPDurEar=cmqCommonCallHistoryTotASPDurEar, cmqVideoCallHistoryRxMOSAverage=cmqVideoCallHistoryRxMOSAverage, cmqCommonCallActiveTotNumASPTriggMic=cmqCommonCallActiveTotNumASPTriggMic, cmqVideoCallActiveTable=cmqVideoCallActiveTable, cmqVoIPCallHistoryConnectionId=cmqVoIPCallHistoryConnectionId, cmqCommonCallActiveNRDirEar=cmqCommonCallActiveNRDirEar, cmqCommonCallActiveASPTable=cmqCommonCallActiveASPTable, ciscoMediaQualityMIBGroups=ciscoMediaQualityMIBGroups, cmqCommonCallActiveDurSigASPTriggEar=cmqCommonCallActiveDurSigASPTriggEar, ciscoMediaQualityMIBNotifs=ciscoMediaQualityMIBNotifs, cmqVoIPCallHistoryRxPredMosLqoAvg=cmqVoIPCallHistoryRxPredMosLqoAvg, cmqVoIPCallHistoryRxCallConcealRatioPct=cmqVoIPCallHistoryRxCallConcealRatioPct, cmqVoIPCallActiveRxPredMosLqoFrLoss=cmqVoIPCallActiveRxPredMosLqoFrLoss, cmqVideoCallHistoryTable=cmqVideoCallHistoryTable, cmqCommonCallActiveASPCallType=cmqCommonCallActiveASPCallType, cmqCommonCallHistoryNREntry=cmqCommonCallHistoryNREntry, cmqCommonCallHistoryTotNumASPTriggEar=cmqCommonCallHistoryTotNumASPTriggEar, cmqCommonCallActiveASPEnabledMic=cmqCommonCallActiveASPEnabledMic, cmqVideoCallActiveCallReferenceId=cmqVideoCallActiveCallReferenceId, cmqCommonCallActiveTotASPDurMic=cmqCommonCallActiveTotASPDurMic, cmqVoIPCallHistoryTxVadEnabled=cmqVoIPCallHistoryTxVadEnabled, cmqCommonCallHistoryASPMode=cmqCommonCallHistoryASPMode, cmqCommonCallActiveNumSigASPTriggEar=cmqCommonCallActiveNumSigASPTriggEar, cmqVoIPCallActiveTxTmrActSpeechDur=cmqVoIPCallActiveTxTmrActSpeechDur, cmqVoIPCallHistoryTxTmrActSpeechDur=cmqVoIPCallHistoryTxTmrActSpeechDur, cmqCommonCallHistoryNREnabledMic=cmqCommonCallHistoryNREnabledMic, cmqCommonCallHistoryNumSigASPTriggEar=cmqCommonCallHistoryNumSigASPTriggEar, cmqVoIPCallHistoryEntry=cmqVoIPCallHistoryEntry, cmqVoIPCallActiveRxConcealSec=cmqVoIPCallActiveRxConcealSec, cmqVoIPCallHistoryRxSignalLvl=cmqVoIPCallHistoryRxSignalLvl, cmqVoIPCallActiveRxPktLossRatioPct=cmqVoIPCallActiveRxPktLossRatioPct, cmqVoIPCallHistoryRxPktLossConcealDur=cmqVoIPCallHistoryRxPktLossConcealDur, cmqVoIPCallHistoryRxJBufNomDelay=cmqVoIPCallHistoryRxJBufNomDelay, cmqVoiceCallActiveGroup=cmqVoiceCallActiveGroup, cmqCommonCallActivePostNRNoiseFloorEstEar=cmqCommonCallActivePostNRNoiseFloorEstEar, ciscoMediaQualityMIBCompliances=ciscoMediaQualityMIBCompliances, cmqVoIPCallActiveRxPred107Rscore=cmqVoIPCallActiveRxPred107Rscore, cmqVoIPCallHistoryRxVoiceDur=cmqVoIPCallHistoryRxVoiceDur, cmqVoIPCallHistoryRxPredMosLqoMin=cmqVoIPCallHistoryRxPredMosLqoMin, cmqVideoCallHistoryGroup=cmqVideoCallHistoryGroup, cmqVoIPCallActiveRxPred107Idd=cmqVoIPCallActiveRxPred107Idd, cmqVoIPCallHistoryRxJBuffHiWater=cmqVoIPCallHistoryRxJBuffHiWater, ciscoMediaQualityMIBObjects=ciscoMediaQualityMIBObjects, cmqVideoCallActiveConnectionId=cmqVideoCallActiveConnectionId, cmqVoIPCallActiveRxJBufDlyNow=cmqVoIPCallActiveRxJBufDlyNow, cmqVoiceCallHistoryGroup=cmqVoiceCallHistoryGroup, cmqVoIPCallActiveRxJBufNomDelay=cmqVoIPCallActiveRxJBufNomDelay, cmqVoIPCallHistoryTxSignalLvl=cmqVoIPCallHistoryTxSignalLvl, cmqCommonCallActivePreNRNoiseFloorEstMic=cmqCommonCallActivePreNRNoiseFloorEstMic, cmqVoIPCallHistoryTxCodecId=cmqVoIPCallHistoryTxCodecId, cmqVoIPCallActiveConnectionId=cmqVoIPCallActiveConnectionId, cmqVoIPCallActiveRxCallConcealRatioPct=cmqVoIPCallActiveRxCallConcealRatioPct, cmqVideoCallActiveRxMOSAverage=cmqVideoCallActiveRxMOSAverage, cmqVoIPCallActiveRxJBufMode=cmqVoIPCallActiveRxJBufMode, ciscoMediaQualityMIBCompliance=ciscoMediaQualityMIBCompliance, cmqVoIPCallActiveEntry=cmqVoIPCallActiveEntry, cmqVoIPCallHistoryRxPred107Idd=cmqVoIPCallHistoryRxPred107Idd, PYSNMP_MODULE_ID=ciscoMediaQualityMIB, cmqVoIPCallHistoryTable=cmqVoIPCallHistoryTable, cmqCommonCallHistoryNRLibVer=cmqCommonCallHistoryNRLibVer, cmqCommonCallActiveLoudestFreqEstForLongEpiEar=cmqCommonCallActiveLoudestFreqEstForLongEpiEar, cmqVoIPCallHistoryRxSevConcealSec=cmqVoIPCallHistoryRxSevConcealSec)
