#
# PySNMP MIB module Cajun-Switch-ROOT (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Cajun-Switch-ROOT
# Produced by pysmi-0.3.4 at Wed May  1 12:34:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Counter32, iso, TimeTicks, Bits, Integer32, enterprises, ModuleIdentity, MibIdentifier, Counter64, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "iso", "TimeTicks", "Bits", "Integer32", "enterprises", "ModuleIdentity", "MibIdentifier", "Counter64", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
lucent = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751))
if mibBuilder.loadTexts: lucent.setLastUpdated('9901300000Z')
if mibBuilder.loadTexts: lucent.setOrganization("Lucent's Concord Technology Center (CTC) ")
if mibBuilder.loadTexts: lucent.setContactInfo('Erick M. Crowell -- ecrowell@lucent.com, Raj Duggal -- rduggal@lucent.com, Ira Steckler -- isteckler@lucent.com')
if mibBuilder.loadTexts: lucent.setDescription('Cajun p220 / p550 / p660 / p880 Private Mib top level Architecture.')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2))
cajunSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45))
cajunSwitchProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45))
cajunAgentGen = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 1))
cajunAgentCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 2))
cajunChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 3))
cajunLayer2Switching = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 4))
cajunVlanMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 5))
cajunEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 6))
cajunlarmMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 7))
cajunSnmpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 45, 8))
cajunL2P550 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 1))
cajunL3P550 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 2))
cajunP220G = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 3))
cajunP220FE = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 4))
cajunL2P660 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 5))
cajunL3P660 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 6))
cajunL2P850 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 7))
cajunL3P850 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 8))
cajunL2P880 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 9))
cajunL3P880 = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 1, 45, 10))
mibBuilder.exportSymbols("Cajun-Switch-ROOT", cajunP220G=cajunP220G, cajunSwitch=cajunSwitch, cajunL3P850=cajunL3P850, cajunP220FE=cajunP220FE, cajunAgentCommunity=cajunAgentCommunity, cajunChassis=cajunChassis, cajunVlanMgt=cajunVlanMgt, cajunAgentGen=cajunAgentGen, cajunL3P550=cajunL3P550, cajunlarmMgt=cajunlarmMgt, lucent=lucent, cajunL3P660=cajunL3P660, cajunL3P880=cajunL3P880, products=products, cajunL2P880=cajunL2P880, cajunL2P660=cajunL2P660, cajunEvents=cajunEvents, cajunSwitchProduct=cajunSwitchProduct, PYSNMP_MODULE_ID=lucent, cajunSnmpTraps=cajunSnmpTraps, cajunL2P550=cajunL2P550, cajunL2P850=cajunL2P850, cajunLayer2Switching=cajunLayer2Switching, mibs=mibs)
