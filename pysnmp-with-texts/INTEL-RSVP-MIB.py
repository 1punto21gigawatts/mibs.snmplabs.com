#
# PySNMP MIB module INTEL-RSVP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-RSVP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:54:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, NotificationType, Gauge32, Integer32, Unsigned32, Bits, Counter64, ModuleIdentity, Counter32, MibIdentifier, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "Gauge32", "Integer32", "Unsigned32", "Bits", "Counter64", "ModuleIdentity", "Counter32", "MibIdentifier", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rsvp = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 33))
conf = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 33, 1))
confIfTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1), )
if mibBuilder.loadTexts: confIfTable.setStatus('mandatory')
if mibBuilder.loadTexts: confIfTable.setDescription('The table contains configuration information for each RSVP link.')
confIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1), ).setIndexNames((0, "INTEL-RSVP-MIB", "confIfIndex"))
if mibBuilder.loadTexts: confIfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: confIfEntry.setDescription('Configuration information for the RSVP link.')
confIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: confIfIndex.setDescription('The ifIndex of the RSVP link.')
confIfCreateObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfCreateObj.setStatus('mandatory')
if mibBuilder.loadTexts: confIfCreateObj.setDescription('Create a non existing table entry. If the entry already exist, genError is returned. Binary format: 1 byte : confIfUdpEncap 2 bytes : confIfRsvpTotalBw 2 bytes : confIfMaxBwPerFlow ')
confIfDeleteObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("delete", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfDeleteObj.setStatus('mandatory')
if mibBuilder.loadTexts: confIfDeleteObj.setDescription('Delete an existing table entry')
confIfUdpEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfUdpEncap.setStatus('mandatory')
if mibBuilder.loadTexts: confIfUdpEncap.setDescription('Indicates whether RSVP messages are also sent using UDP encapsulation on the link.')
confIfRsvpTotalBw = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfRsvpTotalBw.setStatus('mandatory')
if mibBuilder.loadTexts: confIfRsvpTotalBw.setDescription('The percentage of the link bandwidth which is allowed for RSVP reservations on the link. The range 0-10000 is mapped to 0-100 %.')
confIfMaxBwPerFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confIfMaxBwPerFlow.setStatus('mandatory')
if mibBuilder.loadTexts: confIfMaxBwPerFlow.setDescription('The percentage of the link bandwidth which is allowed for an RSVP reservation on the link. The range 0-10000 is mapped to 0-100 %.')
confRsvpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confRsvpEnabled.setStatus('mandatory')
if mibBuilder.loadTexts: confRsvpEnabled.setDescription('Indicates whether RSVP is enabled in this system.')
confRefreshTimer = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confRefreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: confRefreshTimer.setDescription('The time interval in seconds between RSVP messages.')
confCleanupFactor = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 33, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confCleanupFactor.setStatus('mandatory')
if mibBuilder.loadTexts: confCleanupFactor.setDescription('The number of refresh messages that can be lost before RSVP state information times out.')
mibBuilder.exportSymbols("INTEL-RSVP-MIB", confCleanupFactor=confCleanupFactor, confIfIndex=confIfIndex, confIfTable=confIfTable, confRefreshTimer=confRefreshTimer, confRsvpEnabled=confRsvpEnabled, confIfRsvpTotalBw=confIfRsvpTotalBw, confIfUdpEncap=confIfUdpEncap, conf=conf, confIfCreateObj=confIfCreateObj, confIfEntry=confIfEntry, confIfDeleteObj=confIfDeleteObj, rsvp=rsvp, confIfMaxBwPerFlow=confIfMaxBwPerFlow)
