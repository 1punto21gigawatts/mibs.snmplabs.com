#
# PySNMP MIB module ATT-CNM-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATT-CNM-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:31:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, Counter32, IpAddress, iso, enterprises, ModuleIdentity, Unsigned32, ObjectIdentity, TimeTicks, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "Counter32", "IpAddress", "iso", "enterprises", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
att_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 74)).setLabel("att-2")
att_products = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1)).setLabel("att-products")
att_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2)).setLabel("att-mgmt")
att_cnmAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 1, 9)).setLabel("att-cnmAgent")
att_cnm = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15)).setLabel("att-cnm")
att_cnm_system = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 1)).setLabel("att-cnm-system")
att_cnm_interfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 74, 2, 15, 2)).setLabel("att-cnm-interfaces")
attCNMsysDescr = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysDescr.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysDescr.setDescription('A printable ASCII string that is a textual description of this system. This value typically includes the full name and version identification of the system. This identification can be used to distinguish this system from other systems for the purpose of fault identification/isolation, trouble reporting etc.')
attCNMsysObjectID = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysObjectID.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysObjectID.setDescription("The vendor's authoritative identification of the network management subsystem contained in the entity. This value is allocated within the SMI enterprises subtree (1.3.6.1.4.1) and provides an easy and unambiguous means for determining `what kind of box' is being managed. For example, if vendor `Flintstones, Inc.' was assigned the subtree 1.3.6.1.4.1.4242, it could assign the identifier 1.3.6.1.4.1.4242.1.1 to its `Fred Router'. This identification can be used to distinguish this system from other systems.")
attCNMsysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysUpTime.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysUpTime.setDescription('The time (in hundredths of a second) since the SNMP interface portion of the system was last re-initialized. This value may be used to determine the last time this system was re-initialized (i.e. the most recent reset for the SNMP interface).')
attCNMsysContact = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysContact.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysContact.setDescription('The textual identification of the contact person(s) or organization(s) for this system, along with information on how to contact them.')
attCNMsysName = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysName.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysName.setDescription("An administratively-assigned name for this system. By convention, this is the system's fully-qualified domain name. This variable distinguishes this system from other systems in the network.")
attCNMsysLocation = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysLocation.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysLocation.setDescription('The physical location of this system. This variable distinguishes this system from others for location purposes.')
attCNMsysServices = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMsysServices.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMsysServices.setDescription('A value which indicates the set of services offered by the managed network elements. The value is a sum. This sum initially takes the value zero, Then, for each layer, L, in the range 1 through 7, that this node performs transactions for, 2 raised to (L - 1) is added to the sum. For example, a node which performs primarily routing functions would have a value of 4 (2^(3-1)). In contrast, a node which is a host offering application services would have a value of 72 (2^(4-1) + 2^(7-1)). Note that in the context of the Internet suite of protocols, values should be calculated accordingly: layer functionality 1 physical (e.g., repeaters) 2 datalink/subnetwork (e.g., bridges) 3 internet (e.g., IP gateways) 4 end-to-end (e.g., IP hosts) 7 applications (e.g., mail relays) For systems including OSI protocols, layers 5 and 6 may also be counted. For SMDS and Frame Relay Service, this agent will return a value of 2 which indicates that the managed network elements offer a subnetwork-level service.')
attCNMifNumber = MibScalar((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifNumber.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifNumber.setDescription('The number of network interfaces (regardless of their current state) that can be managed by a specific subscriber.')
attCNMifConfigTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2), )
if mibBuilder.loadTexts: attCNMifConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifConfigTable.setDescription('A list of entries containing general information for all interfaces managed by this system.')
attCNMifConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1), ).setIndexNames((0, "ATT-CNM-SYSTEM-MIB", "attCNMifConfigIndex"))
if mibBuilder.loadTexts: attCNMifConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifConfigEntry.setDescription('An entry containing general configuration information for a particular interface.')
attCNMifConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifConfigIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifConfigIndex.setDescription('A unique value assigned to each interface by the administrator of this system.')
attCNMifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifDescr.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifDescr.setDescription('A textual string containing information about this interface. This string typically contains the name of the service provider, the service offered by this interface, and the name of the subscriber to this interface.')
attCNMifType = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 31, 32))).clone(namedValues=NamedValues(("other", 1), ("sip", 31), ("frame-relay", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifType.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifType.setDescription('The type of interface being managed.')
attCNMifMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifMtu.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifMtu.setDescription('The size of the largest data PDU which can be sent/received on the interface, specified in octets. For SMDS, this value represents the maximum L3 PDU size that is supported on this interface.')
attCNMifSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifSpeed.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifSpeed.setDescription("An estimate of the interface's current nominal bandwidth in bits per second.")
attCNMifContact = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifContact.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifContact.setDescription('A printable ASCII string that identifies the contact person(s) or organization(s) responsible for support of this interface.')
attCNMifLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifLocation.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifLocation.setDescription('A printable ASCII string that identifies the physical location of the switching system that terminates this interface.')
attCNMifSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifSubscriber.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifSubscriber.setDescription('A printable ASCII string that identifies the contact person(s) or organization(s) that have subscribed to this interface.')
attCNMifStatusTable = MibTable((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 3), )
if mibBuilder.loadTexts: attCNMifStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifStatusTable.setDescription('A list of entries containing status information for all interfaces managed by this system.')
attCNMifStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 3, 1), ).setIndexNames((0, "ATT-CNM-SYSTEM-MIB", "attCNMifStatusIndex"))
if mibBuilder.loadTexts: attCNMifStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifStatusEntry.setDescription('An entry containing status information for a particular interface.')
attCNMifStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifStatusIndex.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifStatusIndex.setDescription('A unique value for each interface. The interface identified by a particular value of this index is the same interface as identified by the same value of an attCNMifConfigIndex object instance.')
attCNMifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifAdminStatus.setDescription('The desired state of this interface.')
attCNMifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 74, 2, 15, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: attCNMifOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: attCNMifOperStatus.setDescription('The current operational state of this interface.')
mibBuilder.exportSymbols("ATT-CNM-SYSTEM-MIB", att_products=att_products, attCNMsysContact=attCNMsysContact, att_mgmt=att_mgmt, att_2=att_2, attCNMifType=attCNMifType, attCNMifMtu=attCNMifMtu, attCNMifAdminStatus=attCNMifAdminStatus, attCNMifLocation=attCNMifLocation, attCNMifOperStatus=attCNMifOperStatus, attCNMsysServices=attCNMsysServices, att_cnm=att_cnm, attCNMifSubscriber=attCNMifSubscriber, attCNMsysLocation=attCNMsysLocation, attCNMsysName=attCNMsysName, attCNMifConfigTable=attCNMifConfigTable, attCNMifStatusEntry=attCNMifStatusEntry, attCNMifConfigEntry=attCNMifConfigEntry, attCNMifStatusIndex=attCNMifStatusIndex, attCNMsysObjectID=attCNMsysObjectID, attCNMifSpeed=attCNMifSpeed, att_cnmAgent=att_cnmAgent, attCNMsysDescr=attCNMsysDescr, attCNMifConfigIndex=attCNMifConfigIndex, attCNMifContact=attCNMifContact, attCNMifNumber=attCNMifNumber, att_cnm_system=att_cnm_system, attCNMifStatusTable=attCNMifStatusTable, attCNMifDescr=attCNMifDescr, att_cnm_interfaces=att_cnm_interfaces, attCNMsysUpTime=attCNMsysUpTime)
