#
# PySNMP MIB module HPN-ICF-FC-NAME-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FC-NAME-SERVER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:38:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
HpnicfFcNameId, = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcNameId")
hpnicfSan, hpnicfVsanIndex = mibBuilder.importSymbols("HPN-ICF-VSAN-MIB", "hpnicfSan", "hpnicfVsanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, Bits, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, iso, Integer32, IpAddress, Counter64, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Bits", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "iso", "Integer32", "IpAddress", "Counter64", "Counter32", "Gauge32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
hpnicfFcNameServer = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10))
hpnicfFcNameServer.setRevisions(('2014-03-03 10:18',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfFcNameServer.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: hpnicfFcNameServer.setLastUpdated('201403031018Z')
if mibBuilder.loadTexts: hpnicfFcNameServer.setOrganization('')
if mibBuilder.loadTexts: hpnicfFcNameServer.setContactInfo('')
if mibBuilder.loadTexts: hpnicfFcNameServer.setDescription('This MIB module is intended for the management of Fibre Channel (FC) Name Server.')
hpnicfFcNameServerMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1))
hpnicfFcNsNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1))
hpnicfFcNsNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 0))
hpnicfFcNsNotificationSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 1))
hpnicfFcNsObjsForNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 2))
hpnicfFcNsPortLoginNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 0, 1)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-NAME-SERVER-MIB", "hpnicfFcNsLocalSwitchWWN"), ("HPN-ICF-FC-NAME-SERVER-MIB", "hpnicfFcNsFloginPortWWN"))
if mibBuilder.loadTexts: hpnicfFcNsPortLoginNotify.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsPortLoginNotify.setDescription('This notification will be generated when an entry is added to the Name Server database by Nx_Port locally logging in.')
hpnicfFcNsPortLogoutNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 0, 2)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-FC-NAME-SERVER-MIB", "hpnicfFcNsLocalSwitchWWN"), ("HPN-ICF-FC-NAME-SERVER-MIB", "hpnicfFcNsFloginPortWWN"))
if mibBuilder.loadTexts: hpnicfFcNsPortLogoutNotify.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsPortLogoutNotify.setDescription('This notification will be generated when an entry is deleted from the Name Server database by Nx_Port locally logging out.')
hpnicfFcNsPortLoginNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcNsPortLoginNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsPortLoginNotifyEnable.setDescription('This object is used to determine whether hpnicfFcNsPortLoginNotify will be generated for Nx_Port locally logging in.')
hpnicfFcNsPortLogoutNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfFcNsPortLogoutNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsPortLogoutNotifyEnable.setDescription('This object is used to determine whether hpnicfFcNsPortLogoutNotify will be generated for Nx_Port locally logging out.')
hpnicfFcNsLocalSwitchWWN = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 2, 1), HpnicfFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcNsLocalSwitchWWN.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsLocalSwitchWWN.setDescription('The world wide name of the local switch.')
hpnicfFcNsFloginPortWWN = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 10, 1, 1, 2, 2), HpnicfFcNameId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcNsFloginPortWWN.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcNsFloginPortWWN.setDescription('The world wide name of the local logged-in Nx_Port.')
mibBuilder.exportSymbols("HPN-ICF-FC-NAME-SERVER-MIB", hpnicfFcNameServer=hpnicfFcNameServer, hpnicfFcNsNotificationPrefix=hpnicfFcNsNotificationPrefix, hpnicfFcNsNotificationSwitch=hpnicfFcNsNotificationSwitch, hpnicfFcNsPortLogoutNotifyEnable=hpnicfFcNsPortLogoutNotifyEnable, hpnicfFcNsFloginPortWWN=hpnicfFcNsFloginPortWWN, hpnicfFcNsPortLoginNotify=hpnicfFcNsPortLoginNotify, PYSNMP_MODULE_ID=hpnicfFcNameServer, hpnicfFcNsObjsForNotification=hpnicfFcNsObjsForNotification, hpnicfFcNsLocalSwitchWWN=hpnicfFcNsLocalSwitchWWN, hpnicfFcNsNotification=hpnicfFcNsNotification, hpnicfFcNsPortLoginNotifyEnable=hpnicfFcNsPortLoginNotifyEnable, hpnicfFcNsPortLogoutNotify=hpnicfFcNsPortLogoutNotify, hpnicfFcNameServerMibObjects=hpnicfFcNameServerMibObjects)
