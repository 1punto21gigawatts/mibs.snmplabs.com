#
# PySNMP MIB module NETSCREEN-VPN-PHASETWO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-PHASETWO-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
netscreenVpnMibModule, netscreenVpn = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpnMibModule", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, iso, NotificationType, ObjectIdentity, MibIdentifier, TimeTicks, Counter32, Counter64, ModuleIdentity, Unsigned32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "iso", "NotificationType", "ObjectIdentity", "MibIdentifier", "TimeTicks", "Counter32", "Counter64", "ModuleIdentity", "Unsigned32", "Bits", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenVpnPhasetwoMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 6))
netscreenVpnPhasetwoMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2001-05-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'Correct spelling mistake', 'no comment', 'Creation Date',))
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setDescription('This module defines NetScreen private MIBs for VPN Phase two negotiation.')
nsVpnPhaseTwoCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 6))
nsVpnPhTwoTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1), )
if mibBuilder.loadTexts: nsVpnPhTwoTable.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoTable.setDescription('To establish an IKE IPSec tunnel, two phases of negotiation are required. This table specifies the configuration attributes for Phase Two negotiation. In Phase 2, the participants negotiate the IPSec SAs for encrypting and authenticating the ensuing exchanges of user data.')
nsVpnPhTwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-PHASETWO-MIB", "nsVpnPhTwoIndex"))
if mibBuilder.loadTexts: nsVpnPhTwoEntry.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoEntry.setDescription('Each entry in the nsVpnPhTwoTable holds a set of configuration parameters associated with an instance of Phase 2 setting.')
nsVpnPhTwoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoIndex.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoIndex.setDescription('A unique value for phase Two table. Its value ranges between 1 and 65535 and may not be contiguous. The index has no other meaning but a pure index')
nsVpnPhTwoName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoName.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoName.setDescription('Phase two proposal name.')
nsVpnPhTwoPFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoPFS.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoPFS.setDescription('Perfect Forward Secrecy - Diffie-Hellman exchange group.')
nsVpnPhTwoEncapMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ah", 0), ("esp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoEncapMethod.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoEncapMethod.setDescription('Phase two proposal encapsulation method.')
nsVpnPhTwoESPEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("null", 0), ("des", 1), ("triple-des", 2), ("aes", 3), ("aes-192", 4), ("aes-256", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoESPEncryp.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoESPEncryp.setDescription('Phase two proposal ESP encryption algorithm.')
nsVpnPhTwoESPAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2), ("sha-256", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoESPAuth.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoESPAuth.setDescription('Phase two proposal ESP authentication Algorithm.')
nsVpnPhTwoAhAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoAhAuth.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoAhAuth.setDescription('Phase two proposal AH authentication Algorithm.')
nsVpnPhTwoLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetime.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoLifetime.setDescription('Lifetime in time')
nsVpnPhTwoLifetimeMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("second", 0), ("minute", 1), ("hours", 2), ("days", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeMeasure.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeMeasure.setDescription('life time measurement.')
nsVpnPhTwoLifetimeKb = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeKb.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeKb.setDescription('Lifetime in KBytes')
nsVpnPhTwoVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoVsys.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhTwoVsys.setDescription('vsys this proposal configuration belongs to.')
mibBuilder.exportSymbols("NETSCREEN-VPN-PHASETWO-MIB", nsVpnPhTwoLifetimeKb=nsVpnPhTwoLifetimeKb, PYSNMP_MODULE_ID=netscreenVpnPhasetwoMibModule, nsVpnPhTwoIndex=nsVpnPhTwoIndex, nsVpnPhTwoPFS=nsVpnPhTwoPFS, nsVpnPhTwoAhAuth=nsVpnPhTwoAhAuth, nsVpnPhTwoLifetime=nsVpnPhTwoLifetime, nsVpnPhTwoVsys=nsVpnPhTwoVsys, nsVpnPhTwoTable=nsVpnPhTwoTable, nsVpnPhTwoEncapMethod=nsVpnPhTwoEncapMethod, nsVpnPhTwoESPEncryp=nsVpnPhTwoESPEncryp, nsVpnPhTwoLifetimeMeasure=nsVpnPhTwoLifetimeMeasure, netscreenVpnPhasetwoMibModule=netscreenVpnPhasetwoMibModule, nsVpnPhTwoEntry=nsVpnPhTwoEntry, nsVpnPhTwoESPAuth=nsVpnPhTwoESPAuth, nsVpnPhTwoName=nsVpnPhTwoName, nsVpnPhaseTwoCfg=nsVpnPhaseTwoCfg)
