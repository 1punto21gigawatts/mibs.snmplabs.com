#
# PySNMP MIB module AISYSCFGPOWER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AISYSCFGPOWER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, Gauge32, Unsigned32, enterprises, Bits, Integer32, TimeTicks, ObjectIdentity, iso, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "Gauge32", "Unsigned32", "enterprises", "Bits", "Integer32", "TimeTicks", "ObjectIdentity", "iso", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSysCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32))
aiSysCfgPower = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 32, 3))
aiSysCfgPower.setRevisions(('2001-04-30 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aiSysCfgPower.setRevisionsDescriptions(('The initial revision of this module.',))
if mibBuilder.loadTexts: aiSysCfgPower.setLastUpdated('200104301700Z')
if mibBuilder.loadTexts: aiSysCfgPower.setOrganization('Applied Innovation Inc.')
if mibBuilder.loadTexts: aiSysCfgPower.setContactInfo(' Engineering MIB Administrator Postal: Applied Innovation Inc. 5800 Innovation Drive Dublin, Ohio 43017-3271 Tel: 614-798-2000 Fax: 614-798-1770 Email: snmp@aiinet.com')
if mibBuilder.loadTexts: aiSysCfgPower.setDescription('MIB module for Power Supplies.')
aiSCPowerTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32, 3, 0))
aiSCPowerTrapFeedFail = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 3, 0, 1)).setObjects(("AISYSCFGPOWER-MIB", "aiSCPowerFeedIndex"), ("AISYSCFGPOWER-MIB", "aiSCPowerFeedStatus"))
if mibBuilder.loadTexts: aiSCPowerTrapFeedFail.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerTrapFeedFail.setDescription('Trap sent when a powerFeed goes into a failure mode.')
aiSCPowerTrapFeedOk = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 3, 0, 2)).setObjects(("AISYSCFGPOWER-MIB", "aiSCPowerFeedIndex"), ("AISYSCFGPOWER-MIB", "aiSCPowerFeedStatus"))
if mibBuilder.loadTexts: aiSCPowerTrapFeedOk.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerTrapFeedOk.setDescription('Trap sent when a powerFeed reverts from a failure mode.')
aiSCPowerTrapConverterFail = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 3, 0, 3)).setObjects(("AISYSCFGPOWER-MIB", "aiSCPowerConverterIndex"), ("AISYSCFGPOWER-MIB", "aiSCPowerConverterStatus"))
if mibBuilder.loadTexts: aiSCPowerTrapConverterFail.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerTrapConverterFail.setDescription('Trap sent when a powerConverter goes into a failure mode.')
aiSCPowerTrapConverterOk = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 3, 0, 4)).setObjects(("AISYSCFGPOWER-MIB", "aiSCPowerConverterIndex"), ("AISYSCFGPOWER-MIB", "aiSCPowerConverterStatus"))
if mibBuilder.loadTexts: aiSCPowerTrapConverterOk.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerTrapConverterOk.setDescription('Trap sent when a powerConverter reverts from a failure mode.')
aiSCPowerAgregateStatus = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("okay", 1), ("trouble", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerAgregateStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerAgregateStatus.setDescription('Aggregate status of the power in the system. okay(1) indicates no problems, while trouble(2) indicates that some part of the power supply system is not functioning properly.')
aiSCPowerFeedTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 3, 2), )
if mibBuilder.loadTexts: aiSCPowerFeedTable.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerFeedTable.setDescription('A table of information on each power supply.')
aiSCPowerFeedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 3, 2, 1), ).setIndexNames((0, "AISYSCFGPOWER-MIB", "aiSCPowerFeedIndex"))
if mibBuilder.loadTexts: aiSCPowerFeedEntry.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerFeedEntry.setDescription('Information on a given power supply.')
aiSCPowerFeedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerFeedIndex.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerFeedIndex.setDescription('Self referential index into this table.')
aiSCPowerFeedDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerFeedDescription.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerFeedDescription.setDescription('Description of the power feed to which this table entry refers.')
aiSCPowerFeedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("okay", 1), ("fail", 2), ("underVoltage", 3), ("overVoltage", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerFeedStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerFeedStatus.setDescription('Status of a given power feed.')
aiSCPowerConverterTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 3, 3), )
if mibBuilder.loadTexts: aiSCPowerConverterTable.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerConverterTable.setDescription('A table of information on each power converter.')
aiSCPowerConverterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 3, 3, 1), ).setIndexNames((0, "AISYSCFGPOWER-MIB", "aiSCPowerConverterIndex"))
if mibBuilder.loadTexts: aiSCPowerConverterEntry.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerConverterEntry.setDescription('Information on a given power supply.')
aiSCPowerConverterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerConverterIndex.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerConverterIndex.setDescription('Self referential index into this table.')
aiSCPowerConverterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerConverterDescription.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerConverterDescription.setDescription('Description of the converter to which this table entry refers.')
aiSCPowerConverterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("okay", 1), ("fail", 2), ("underVoltage", 3), ("overVoltage", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCPowerConverterStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCPowerConverterStatus.setDescription('Status of a given power converter.')
mibBuilder.exportSymbols("AISYSCFGPOWER-MIB", aiSCPowerConverterEntry=aiSCPowerConverterEntry, aiSysCfg=aiSysCfg, aii=aii, aiSCPowerTrapFeedOk=aiSCPowerTrapFeedOk, PYSNMP_MODULE_ID=aiSysCfgPower, aiSysCfgPower=aiSysCfgPower, aiSCPowerConverterStatus=aiSCPowerConverterStatus, aiSCPowerAgregateStatus=aiSCPowerAgregateStatus, aiSCPowerFeedEntry=aiSCPowerFeedEntry, aiSCPowerFeedTable=aiSCPowerFeedTable, aiSCPowerTrapConverterOk=aiSCPowerTrapConverterOk, aiSCPowerFeedIndex=aiSCPowerFeedIndex, aiSCPowerConverterDescription=aiSCPowerConverterDescription, aiSCPowerFeedDescription=aiSCPowerFeedDescription, aiSCPowerConverterIndex=aiSCPowerConverterIndex, aiSCPowerTrapInfo=aiSCPowerTrapInfo, aiSCPowerTrapConverterFail=aiSCPowerTrapConverterFail, aiSCPowerTrapFeedFail=aiSCPowerTrapFeedFail, aiSCPowerConverterTable=aiSCPowerConverterTable, aiSCPowerFeedStatus=aiSCPowerFeedStatus)
