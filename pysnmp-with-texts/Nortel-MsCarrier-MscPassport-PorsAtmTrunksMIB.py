#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:31:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
mscTrkPaIndex, mscTrkPa = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex", "mscTrkPa")
RowStatus, StorageType, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "RowStatus", "StorageType", "DisplayString")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "NonReplicated")
mscTrkIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Gauge32, TimeTicks, ModuleIdentity, ObjectIdentity, IpAddress, MibIdentifier, Counter32, Unsigned32, Counter64, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Gauge32", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "Unsigned32", "Counter64", "Integer32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
porsAtmTrunksMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137))
mscTrkPaAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3))
mscTrkPaAtmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1), )
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusTable.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusTable.setDescription('This entry controls the addition and deletion of mscTrkPaAtm components.')
mscTrkPaAtmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", "mscTrkPaAtmIndex"))
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmRowStatusEntry.setDescription('A single entry in the table represents a single mscTrkPaAtm component.')
mscTrkPaAtmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmRowStatus.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmRowStatus.setDescription('This variable is used as the basis for SNMP naming of mscTrkPaAtm components. These components can be added and deleted.')
mscTrkPaAtmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrkPaAtmComponentName.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmComponentName.setDescription("This variable provides the component's string name for use with the ASCII Console Interface")
mscTrkPaAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscTrkPaAtmStorageType.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmStorageType.setDescription('This variable represents the storage type value for the mscTrkPaAtm tables.')
mscTrkPaAtmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscTrkPaAtmIndex.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmIndex.setDescription('This variable represents the index for the mscTrkPaAtm tables.')
mscTrkPaAtmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10), )
if mibBuilder.loadTexts: mscTrkPaAtmProvTable.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmProvTable.setDescription('This group of attributes provides the parameters used by the AtmAccess component for specifying access to an ATM interface.')
mscTrkPaAtmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-TrunksMIB", "mscTrkIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsTrunksMIB", "mscTrkPaIndex"), (0, "Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", "mscTrkPaAtmIndex"))
if mibBuilder.loadTexts: mscTrkPaAtmProvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmProvEntry.setDescription('An entry in the mscTrkPaAtmProvTable.')
mscTrkPaAtmAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmAtmConnection.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmAtmConnection.setDescription('This attribute specifies the component name of the ATM Virtual Circuit that the AtmAccess component will use. The format of the component name is AtmIf/n Vcc/x.y Nep')
mscTrkPaAtmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 60, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("multiplexing", 0), ("mapping", 1))).clone('multiplexing')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscTrkPaAtmMode.setStatus('mandatory')
if mibBuilder.loadTexts: mscTrkPaAtmMode.setDescription("This attribute specifies the operating mode of the PathAdmin. When set to multiplexing the PathAdmin to multiplex voice calls to the given atmConnection using single cell per voice packet transport. All other calls will be multiplexed using AAL5 over the Trunk's VCC. When set to mapping the PathAdmin will allocate a VCC per LCh/n. In mapping mode the atmConnection should not be set. The VCC chosen for a given connection can be seen in the LCh localConnection attribute.")
porsAtmTrunksGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1))
porsAtmTrunksGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1))
porsAtmTrunksGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1, 3))
porsAtmTrunksGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 1, 1, 3, 2))
porsAtmTrunksCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3))
porsAtmTrunksCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1))
porsAtmTrunksCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1, 3))
porsAtmTrunksCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 137, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-PorsAtmTrunksMIB", mscTrkPaAtmRowStatusTable=mscTrkPaAtmRowStatusTable, porsAtmTrunksCapabilities=porsAtmTrunksCapabilities, mscTrkPaAtmProvEntry=mscTrkPaAtmProvEntry, porsAtmTrunksGroupCA02=porsAtmTrunksGroupCA02, porsAtmTrunksCapabilitiesCA02=porsAtmTrunksCapabilitiesCA02, mscTrkPaAtmRowStatusEntry=mscTrkPaAtmRowStatusEntry, porsAtmTrunksGroupCA=porsAtmTrunksGroupCA, mscTrkPaAtmMode=mscTrkPaAtmMode, mscTrkPaAtmIndex=mscTrkPaAtmIndex, mscTrkPaAtm=mscTrkPaAtm, mscTrkPaAtmProvTable=mscTrkPaAtmProvTable, porsAtmTrunksMIB=porsAtmTrunksMIB, mscTrkPaAtmComponentName=mscTrkPaAtmComponentName, porsAtmTrunksGroup=porsAtmTrunksGroup, porsAtmTrunksGroupCA02A=porsAtmTrunksGroupCA02A, mscTrkPaAtmRowStatus=mscTrkPaAtmRowStatus, mscTrkPaAtmStorageType=mscTrkPaAtmStorageType, porsAtmTrunksCapabilitiesCA=porsAtmTrunksCapabilitiesCA, mscTrkPaAtmAtmConnection=mscTrkPaAtmAtmConnection, porsAtmTrunksCapabilitiesCA02A=porsAtmTrunksCapabilitiesCA02A)
