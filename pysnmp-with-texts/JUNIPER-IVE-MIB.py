#
# PySNMP MIB module JUNIPER-IVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-IVE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:59:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, iso, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, IpAddress, Counter64, enterprises, Counter32, MibIdentifier, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "iso", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "IpAddress", "Counter64", "enterprises", "Counter32", "MibIdentifier", "TimeTicks", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
juniper_ive = ModuleIdentity((1, 3, 6, 1, 4, 1, 12532)).setLabel("juniper-ive")
juniper_ive.setRevisions(('2010-02-22 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniper_ive.setRevisionsDescriptions(('Initial Version',))
if mibBuilder.loadTexts: juniper_ive.setLastUpdated('201005180000Z')
if mibBuilder.loadTexts: juniper_ive.setOrganization('Juniper')
if mibBuilder.loadTexts: juniper_ive.setContactInfo('Internet: https://www.juniper.net/cm/index.jsp')
if mibBuilder.loadTexts: juniper_ive.setDescription('This file defines the private Juniper Networks MIB extensions.')
logFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFullPercent.setStatus('current')
if mibBuilder.loadTexts: logFullPercent.setDescription('Percentage of log file full')
signedInWebUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInWebUsers.setStatus('current')
if mibBuilder.loadTexts: signedInWebUsers.setDescription('Number of Signed-In Web Users')
signedInMailUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInMailUsers.setStatus('current')
if mibBuilder.loadTexts: signedInMailUsers.setDescription('Number of Signed-In Mail Users')
blockedIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 4), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: blockedIP.setStatus('current')
if mibBuilder.loadTexts: blockedIP.setDescription('IP Address that is blocked due to consecutive failed login attempts')
authServerName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 5), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: authServerName.setStatus('current')
if mibBuilder.loadTexts: authServerName.setDescription('Name of an external authentication server')
productName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setStatus('current')
if mibBuilder.loadTexts: productName.setDescription('IVE Licensed Product Name')
productVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productVersion.setStatus('current')
if mibBuilder.loadTexts: productVersion.setDescription('IVE System Software Version')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: fileName.setStatus('current')
if mibBuilder.loadTexts: fileName.setDescription('File name')
meetingUserCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 9), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: meetingUserCount.setStatus('current')
if mibBuilder.loadTexts: meetingUserCount.setDescription('the number of concurrent meeting users')
iveCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveCpuUtil.setStatus('current')
if mibBuilder.loadTexts: iveCpuUtil.setDescription('The CPU Utilization of the IVE system')
iveMemoryUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveMemoryUtil.setStatus('current')
if mibBuilder.loadTexts: iveMemoryUtil.setDescription('The Memory Utilization of the IVE system')
iveConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveConcurrentUsers.setStatus('current')
if mibBuilder.loadTexts: iveConcurrentUsers.setDescription('The Total number of Users Logged In for the IVE Node')
clusterConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusterConcurrentUsers.setStatus('current')
if mibBuilder.loadTexts: clusterConcurrentUsers.setDescription('The Total number of Users Logged In for the Cluster')
iveTotalHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTotalHits.setStatus('current')
if mibBuilder.loadTexts: iveTotalHits.setDescription('The Total number of hits to the IVE since last reboot')
iveFileHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveFileHits.setStatus('current')
if mibBuilder.loadTexts: iveFileHits.setDescription('The Total number of File hits to the IVE since last reboot')
iveWebHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveWebHits.setStatus('current')
if mibBuilder.loadTexts: iveWebHits.setDescription('The Total number of hits via the Web Interface since the last reboot')
iveAppletHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveAppletHits.setStatus('current')
if mibBuilder.loadTexts: iveAppletHits.setDescription('The Total number of applet hits to the IVE since last reboot')
ivetermHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ivetermHits.setStatus('current')
if mibBuilder.loadTexts: ivetermHits.setDescription('The Total number of terminal hits to the IVE since last reboot')
iveSAMHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSAMHits.setStatus('current')
if mibBuilder.loadTexts: iveSAMHits.setDescription('The Total number of SAM(Secure Application manager)hits of since last reboot')
iveNCHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveNCHits.setStatus('current')
if mibBuilder.loadTexts: iveNCHits.setDescription('The Total number of NC(Network Connect) hits of since last reboot')
meetingHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: meetingHits.setStatus('current')
if mibBuilder.loadTexts: meetingHits.setDescription('The Total number of Meeting hits of since last reboot')
meetingCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 22), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: meetingCount.setStatus('current')
if mibBuilder.loadTexts: meetingCount.setDescription('the number of concurrent meetings')
logName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 23), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logName.setStatus('current')
if mibBuilder.loadTexts: logName.setDescription('Name of the log (admin/user/event)')
iveSwapUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSwapUtil.setStatus('current')
if mibBuilder.loadTexts: iveSwapUtil.setDescription('The Swap Utilization of the IVE system')
diskFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diskFullPercent.setStatus('current')
if mibBuilder.loadTexts: diskFullPercent.setDescription('Percentage of disk space full')
blockedIPList = MibTable((1, 3, 6, 1, 4, 1, 12532, 26), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: blockedIPList.setStatus('current')
if mibBuilder.loadTexts: blockedIPList.setDescription('Table of 10 most recently blocked IPs')
ipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12532, 26, 1), ).setIndexNames((0, "JUNIPER-IVE-MIB", "ipIndex"))
if mibBuilder.loadTexts: ipEntry.setStatus('current')
if mibBuilder.loadTexts: ipEntry.setDescription('An entry containing a blocked IP')
ipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipIndex.setStatus('current')
if mibBuilder.loadTexts: ipIndex.setDescription('Index for IP Table')
ipValue = MibTableColumn((1, 3, 6, 1, 4, 1, 12532, 26, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipValue.setStatus('current')
if mibBuilder.loadTexts: ipValue.setDescription('Blocked IP Entry')
logID = MibScalar((1, 3, 6, 1, 4, 1, 12532, 27), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logID.setStatus('current')
if mibBuilder.loadTexts: logID.setDescription('The unique ID of the log message.')
logType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 28), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logType.setStatus('current')
if mibBuilder.loadTexts: logType.setDescription('String stating whether log message is major or critical.')
logDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 29), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: logDescription.setStatus('current')
if mibBuilder.loadTexts: logDescription.setDescription('The actual log message string.')
ivsName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 30), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ivsName.setStatus('current')
if mibBuilder.loadTexts: ivsName.setDescription('Virtual System name')
ocspResponderURL = MibScalar((1, 3, 6, 1, 4, 1, 12532, 31), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ocspResponderURL.setStatus('current')
if mibBuilder.loadTexts: ocspResponderURL.setDescription('Name of an OCSP Responder')
fanDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 32), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: fanDescription.setStatus('current')
if mibBuilder.loadTexts: fanDescription.setDescription('The status of the fans')
psDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 33), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: psDescription.setStatus('current')
if mibBuilder.loadTexts: psDescription.setDescription('The status of the power supplies')
raidDescription = MibScalar((1, 3, 6, 1, 4, 1, 12532, 34), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: raidDescription.setStatus('current')
if mibBuilder.loadTexts: raidDescription.setDescription('The status of the RAID')
clusterName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 35), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: clusterName.setStatus('current')
if mibBuilder.loadTexts: clusterName.setDescription('Cluster Name')
nodeList = MibScalar((1, 3, 6, 1, 4, 1, 12532, 36), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nodeList.setStatus('current')
if mibBuilder.loadTexts: nodeList.setDescription('List of disabled nodes')
vipType = MibScalar((1, 3, 6, 1, 4, 1, 12532, 37), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: vipType.setStatus('current')
if mibBuilder.loadTexts: vipType.setDescription('Whether the VIP is external or internal')
currentVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 38), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: currentVIP.setStatus('current')
if mibBuilder.loadTexts: currentVIP.setDescription('Current value of VIP being changed')
newVIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 39), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: newVIP.setStatus('current')
if mibBuilder.loadTexts: newVIP.setDescription('New value for the VIp being changed')
nicEvent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 40), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nicEvent.setStatus('current')
if mibBuilder.loadTexts: nicEvent.setDescription('Type of event that generated a the Trap: admin, external')
nodeName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 41), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: nodeName.setStatus('current')
if mibBuilder.loadTexts: nodeName.setDescription('Node Name')
iveTemperature = MibScalar((1, 3, 6, 1, 4, 1, 12532, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTemperature.setStatus('current')
if mibBuilder.loadTexts: iveTemperature.setDescription('The Temperature of MAG application blade. Other platform such as SA and IC will return 0')
iveTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 251))
iveLogNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 4)).setObjects(("JUNIPER-IVE-MIB", "logFullPercent"), ("JUNIPER-IVE-MIB", "logName"))
if mibBuilder.loadTexts: iveLogNearlyFull.setStatus('current')
if mibBuilder.loadTexts: iveLogNearlyFull.setDescription('Log file nearly full')
iveLogFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 5)).setObjects(("JUNIPER-IVE-MIB", "logName"))
if mibBuilder.loadTexts: iveLogFull.setStatus('current')
if mibBuilder.loadTexts: iveLogFull.setDescription('Log file full')
iveMaxConcurrentUsersSignedIn = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 6))
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setStatus('current')
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setDescription('Maximum number of concurrent users signed in')
iveTooManyFailedLoginAttempts = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 7)).setObjects(("JUNIPER-IVE-MIB", "blockedIP"))
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setStatus('current')
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setDescription('Too many failed login attempts')
externalAuthServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 8)).setObjects(("JUNIPER-IVE-MIB", "authServerName"))
if mibBuilder.loadTexts: externalAuthServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: externalAuthServerUnreachable.setDescription('External authentication server is not responding')
iveStart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 9))
if mibBuilder.loadTexts: iveStart.setStatus('current')
if mibBuilder.loadTexts: iveStart.setDescription("IVE startup under administrator's instruction.")
iveShutdown = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 10))
if mibBuilder.loadTexts: iveShutdown.setStatus('current')
if mibBuilder.loadTexts: iveShutdown.setDescription("IVE shutdown under administrator's instruction.")
iveReboot = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 11))
if mibBuilder.loadTexts: iveReboot.setStatus('current')
if mibBuilder.loadTexts: iveReboot.setDescription("IVE reboot under administrator's instruction.")
archiveServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 12))
if mibBuilder.loadTexts: archiveServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: archiveServerUnreachable.setDescription('Archive server is not responding')
archiveServerLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 13))
if mibBuilder.loadTexts: archiveServerLoginFailed.setStatus('current')
if mibBuilder.loadTexts: archiveServerLoginFailed.setDescription('Could not login into archive server. Verify FTP username and password.')
archiveFileTransferFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 14)).setObjects(("JUNIPER-IVE-MIB", "fileName"))
if mibBuilder.loadTexts: archiveFileTransferFailed.setStatus('current')
if mibBuilder.loadTexts: archiveFileTransferFailed.setDescription('Could not store file on archive server')
meetingUserLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 15)).setObjects(("JUNIPER-IVE-MIB", "meetingUserCount"))
if mibBuilder.loadTexts: meetingUserLimit.setStatus('current')
if mibBuilder.loadTexts: meetingUserLimit.setDescription('Concurrent user count over license limit')
iveRestart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 16))
if mibBuilder.loadTexts: iveRestart.setStatus('current')
if mibBuilder.loadTexts: iveRestart.setDescription("IVE has restarted under administrator's instruction.")
meetingLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 17)).setObjects(("JUNIPER-IVE-MIB", "meetingCount"))
if mibBuilder.loadTexts: meetingLimit.setStatus('current')
if mibBuilder.loadTexts: meetingLimit.setDescription('Concurrent meeting count over license limit')
iveDiskNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 18)).setObjects(("JUNIPER-IVE-MIB", "diskFullPercent"))
if mibBuilder.loadTexts: iveDiskNearlyFull.setStatus('current')
if mibBuilder.loadTexts: iveDiskNearlyFull.setDescription('Disk space nearly full')
iveDiskFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 19))
if mibBuilder.loadTexts: iveDiskFull.setStatus('current')
if mibBuilder.loadTexts: iveDiskFull.setDescription('Disk space full')
logMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 20)).setObjects(("JUNIPER-IVE-MIB", "logID"), ("JUNIPER-IVE-MIB", "logType"), ("JUNIPER-IVE-MIB", "logDescription"))
if mibBuilder.loadTexts: logMessageTrap.setStatus('current')
if mibBuilder.loadTexts: logMessageTrap.setDescription('The TRAP generated from a log message.')
memUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 21)).setObjects(("JUNIPER-IVE-MIB", "iveMemoryUtil"))
if mibBuilder.loadTexts: memUtilNotify.setStatus('current')
if mibBuilder.loadTexts: memUtilNotify.setDescription('IVE memory utilization above threshold')
cpuUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 22)).setObjects(("JUNIPER-IVE-MIB", "iveCpuUtil"))
if mibBuilder.loadTexts: cpuUtilNotify.setStatus('current')
if mibBuilder.loadTexts: cpuUtilNotify.setDescription('IVE CPU utilization above threshold')
swapUtilNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 23)).setObjects(("JUNIPER-IVE-MIB", "iveSwapUtil"))
if mibBuilder.loadTexts: swapUtilNotify.setStatus('current')
if mibBuilder.loadTexts: swapUtilNotify.setDescription('IVE swap utilization above threshold')
iveMaxConcurrentUsersVirtualSystem = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 24)).setObjects(("JUNIPER-IVE-MIB", "ivsName"))
if mibBuilder.loadTexts: iveMaxConcurrentUsersVirtualSystem.setStatus('current')
if mibBuilder.loadTexts: iveMaxConcurrentUsersVirtualSystem.setDescription('Maximum number of concurrent Virtual System users signed in')
ocspResponderConnectionFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 25)).setObjects(("JUNIPER-IVE-MIB", "ocspResponderURL"))
if mibBuilder.loadTexts: ocspResponderConnectionFailed.setStatus('current')
if mibBuilder.loadTexts: ocspResponderConnectionFailed.setDescription('OCSP Responder cannot be connected')
iveFanNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 26)).setObjects(("JUNIPER-IVE-MIB", "fanDescription"))
if mibBuilder.loadTexts: iveFanNotify.setStatus('current')
if mibBuilder.loadTexts: iveFanNotify.setDescription('The status of the fans has changed')
ivePowerSupplyNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 27)).setObjects(("JUNIPER-IVE-MIB", "psDescription"))
if mibBuilder.loadTexts: ivePowerSupplyNotify.setStatus('current')
if mibBuilder.loadTexts: ivePowerSupplyNotify.setDescription('The status of the power supplies has changed')
iveRaidNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 28)).setObjects(("JUNIPER-IVE-MIB", "raidDescription"))
if mibBuilder.loadTexts: iveRaidNotify.setStatus('current')
if mibBuilder.loadTexts: iveRaidNotify.setDescription('The status of the RAID has changed')
iveClusterDisableNodeTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 29)).setObjects(("JUNIPER-IVE-MIB", "clusterName"), ("JUNIPER-IVE-MIB", "nodeList"))
if mibBuilder.loadTexts: iveClusterDisableNodeTrap.setStatus('current')
if mibBuilder.loadTexts: iveClusterDisableNodeTrap.setDescription('A Given node(s) in a cluster has(have) been disabled')
iveClusterChangedVIPTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 30)).setObjects(("JUNIPER-IVE-MIB", "vipType"), ("JUNIPER-IVE-MIB", "currentVIP"), ("JUNIPER-IVE-MIB", "newVIP"))
if mibBuilder.loadTexts: iveClusterChangedVIPTrap.setStatus('current')
if mibBuilder.loadTexts: iveClusterChangedVIPTrap.setDescription('A external/internal VIP has changed from its current value to a new one')
iveNetExternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 31)).setObjects(("JUNIPER-IVE-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetExternalInterfaceDownTrap.setStatus('current')
if mibBuilder.loadTexts: iveNetExternalInterfaceDownTrap.setDescription('The External interface has gone down, reason is in nicEvent')
iveClusterDeleteTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 32)).setObjects(("JUNIPER-IVE-MIB", "nodeName"))
if mibBuilder.loadTexts: iveClusterDeleteTrap.setStatus('current')
if mibBuilder.loadTexts: iveClusterDeleteTrap.setDescription('Cluster delete inititaed by nodeName')
iveNetInternalInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 33)).setObjects(("JUNIPER-IVE-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetInternalInterfaceDownTrap.setStatus('current')
if mibBuilder.loadTexts: iveNetInternalInterfaceDownTrap.setDescription('The Internal interface has gone down, reason is in nicEvent')
iveNetManagementInterfaceDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 34)).setObjects(("JUNIPER-IVE-MIB", "nicEvent"))
if mibBuilder.loadTexts: iveNetManagementInterfaceDownTrap.setStatus('current')
if mibBuilder.loadTexts: iveNetManagementInterfaceDownTrap.setDescription('The Management interface has gone down, reason is in nicEvent')
iveTemperatureNotify = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 35)).setObjects(("JUNIPER-IVE-MIB", "iveTemperature"))
if mibBuilder.loadTexts: iveTemperatureNotify.setStatus('current')
if mibBuilder.loadTexts: iveTemperatureNotify.setDescription('IVE Temperature is above threshold')
iveSAProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252))
iveICProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253))
iveMAGProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254))
iveProductSA700 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 1))
iveProductSA2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 2))
iveProductSA2500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 3))
iveProductSA4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4))
iveProductSA4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5))
iveProductSA6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6))
iveProductSA6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7))
iveProductIC4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 1))
iveProductIC4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 2))
iveProductIC6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3))
iveProductIC6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 4))
iveProductMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1))
iveProductMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2))
iveProductSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3))
iveProductSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4))
iveSA700 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 1, 1))
iveSA2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 2, 1))
iveSA2500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 3, 1))
iveSA4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4, 1))
iveSA4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5, 1))
iveSA4000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 4, 2))
iveSA4500FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 5, 2))
iveSA6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6, 1))
iveSA6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7, 1))
iveSA6000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 6, 2))
iveSA6500FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 252, 7, 2))
iveIC4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 1, 1))
iveIC6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3, 1))
iveIC4500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 2, 1))
iveIC6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 4, 1))
iveIC6000FIPS = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 253, 3, 2))
iveMAG2600 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 1, 1))
iveMAG4610 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 2, 1))
iveMAGSM160 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 3, 1))
iveMAGSM360 = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 254, 4, 1))
mibBuilder.exportSymbols("JUNIPER-IVE-MIB", meetingCount=meetingCount, iveStart=iveStart, archiveServerUnreachable=archiveServerUnreachable, iveProductSA2000=iveProductSA2000, iveLogFull=iveLogFull, ivePowerSupplyNotify=ivePowerSupplyNotify, iveSAMHits=iveSAMHits, iveIC4500=iveIC4500, iveMaxConcurrentUsersSignedIn=iveMaxConcurrentUsersSignedIn, ocspResponderConnectionFailed=ocspResponderConnectionFailed, nodeName=nodeName, vipType=vipType, iveTemperatureNotify=iveTemperatureNotify, iveTotalHits=iveTotalHits, memUtilNotify=memUtilNotify, iveICProduct=iveICProduct, diskFullPercent=diskFullPercent, logType=logType, iveProductIC6000=iveProductIC6000, meetingHits=meetingHits, iveDiskNearlyFull=iveDiskNearlyFull, iveSA700=iveSA700, iveSAProduct=iveSAProduct, iveMAG4610=iveMAG4610, iveRaidNotify=iveRaidNotify, iveMAGSM160=iveMAGSM160, iveSA4000FIPS=iveSA4000FIPS, iveLogNearlyFull=iveLogNearlyFull, meetingUserLimit=meetingUserLimit, iveTraps=iveTraps, iveReboot=iveReboot, meetingLimit=meetingLimit, newVIP=newVIP, blockedIP=blockedIP, iveFanNotify=iveFanNotify, iveIC6000FIPS=iveIC6000FIPS, productVersion=productVersion, iveMAGProduct=iveMAGProduct, iveProductIC6500=iveProductIC6500, authServerName=authServerName, clusterName=clusterName, logMessageTrap=logMessageTrap, iveProductSA2500=iveProductSA2500, iveSA4000=iveSA4000, iveProductIC4000=iveProductIC4000, iveProductIC4500=iveProductIC4500, iveSA6000FIPS=iveSA6000FIPS, ipValue=ipValue, iveProductMAG4610=iveProductMAG4610, logName=logName, nodeList=nodeList, archiveServerLoginFailed=archiveServerLoginFailed, meetingUserCount=meetingUserCount, signedInMailUsers=signedInMailUsers, ocspResponderURL=ocspResponderURL, iveProductSM360=iveProductSM360, iveNCHits=iveNCHits, iveMAG2600=iveMAG2600, fileName=fileName, iveProductSA6000=iveProductSA6000, iveShutdown=iveShutdown, iveMemoryUtil=iveMemoryUtil, iveWebHits=iveWebHits, externalAuthServerUnreachable=externalAuthServerUnreachable, iveSA6000=iveSA6000, iveTooManyFailedLoginAttempts=iveTooManyFailedLoginAttempts, ipIndex=ipIndex, raidDescription=raidDescription, iveClusterDisableNodeTrap=iveClusterDisableNodeTrap, logID=logID, signedInWebUsers=signedInWebUsers, iveConcurrentUsers=iveConcurrentUsers, iveIC6500=iveIC6500, iveProductSM160=iveProductSM160, productName=productName, iveMAGSM360=iveMAGSM360, iveProductMAG2600=iveProductMAG2600, PYSNMP_MODULE_ID=juniper_ive, iveSA6500FIPS=iveSA6500FIPS, fanDescription=fanDescription, iveTemperature=iveTemperature, iveNetManagementInterfaceDownTrap=iveNetManagementInterfaceDownTrap, iveSwapUtil=iveSwapUtil, ivsName=ivsName, archiveFileTransferFailed=archiveFileTransferFailed, iveSA2000=iveSA2000, iveProductSA700=iveProductSA700, cpuUtilNotify=cpuUtilNotify, iveSA6500=iveSA6500, ipEntry=ipEntry, clusterConcurrentUsers=clusterConcurrentUsers, iveProductSA6500=iveProductSA6500, iveClusterChangedVIPTrap=iveClusterChangedVIPTrap, iveSA2500=iveSA2500, iveDiskFull=iveDiskFull, blockedIPList=blockedIPList, nicEvent=nicEvent, iveIC6000=iveIC6000, iveRestart=iveRestart, iveIC4000=iveIC4000, iveNetExternalInterfaceDownTrap=iveNetExternalInterfaceDownTrap, iveProductSA4500=iveProductSA4500, logFullPercent=logFullPercent, iveFileHits=iveFileHits, ivetermHits=ivetermHits, iveNetInternalInterfaceDownTrap=iveNetInternalInterfaceDownTrap, iveProductSA4000=iveProductSA4000, iveSA4500=iveSA4500, logDescription=logDescription, swapUtilNotify=swapUtilNotify, currentVIP=currentVIP, iveSA4500FIPS=iveSA4500FIPS, iveCpuUtil=iveCpuUtil, iveAppletHits=iveAppletHits, iveMaxConcurrentUsersVirtualSystem=iveMaxConcurrentUsersVirtualSystem, psDescription=psDescription, juniper_ive=juniper_ive, iveClusterDeleteTrap=iveClusterDeleteTrap)
