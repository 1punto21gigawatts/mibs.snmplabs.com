#
# PySNMP MIB module HUAWEI-FR-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-FR-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Unsigned32, TimeTicks, NotificationType, iso, IpAddress, ModuleIdentity, ObjectIdentity, Counter64, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "TimeTicks", "NotificationType", "iso", "IpAddress", "ModuleIdentity", "ObjectIdentity", "Counter64", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits")
DisplayString, RowStatus, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "MacAddress", "TextualConvention")
class DirectionType(TextualConvention, Integer32):
    description = 'The Direction Policy apply on.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

hwQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32))
hwFrQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3))
if mibBuilder.loadTexts: hwFrQoSMib.setLastUpdated('200407120000Z')
if mibBuilder.loadTexts: hwFrQoSMib.setOrganization('Huawei Technologies co.,Ltd.')
if mibBuilder.loadTexts: hwFrQoSMib.setContactInfo(' R&D BeiJing, Huawei Technologies co.,Ltd. Huawei Bld.,NO.3 Xinxi Rd., Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China Zip:100085 Http://www.huawei.com E-mail:support@huawei.com ')
if mibBuilder.loadTexts: hwFrQoSMib.setDescription('The HUAWEI-FR-QOS-MIB contains objects to Manage configuration and Monitor running state for Class Based FR QoS feature. ********************************* MIB Tables ********************************** This MIB consists of the following tables: 1 : hwFrClassCfgInfoTable 2 : hwCirAllowCfgInfoTable 3 : hwCirCfgInfoTable 4 : hwIfApplyFrClassTable 5 : hwPvcApplyFrClassTable 6 : hwFrPvcBandwidthTable 7 : hwRTPFrClassApplyTable 8 : hwRTPFrPvcQueueRunInfoTable ')
hwFrQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1))
hwFrClassObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1))
hwFrClassIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrClassIndexNext.setStatus('current')
if mibBuilder.loadTexts: hwFrClassIndexNext.setDescription('This object contains an appropriate value to be used for hwFrClassIndex when creating rows in the hwFrClassCfgInfoTable. Begin with 0. ')
hwFrClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2), )
if mibBuilder.loadTexts: hwFrClassCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwFrClassCfgInfoTable.setDescription('A table of Fr Class configuration information.')
hwFrClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwFrClassIndex"))
if mibBuilder.loadTexts: hwFrClassCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwFrClassCfgInfoEntry.setDescription('Fr Class Configuration Information Entry.')
hwFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwFrClassIndex.setDescription('Index of Fr Class. Begin with 0.')
hwFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrClassName.setStatus('current')
if mibBuilder.loadTexts: hwFrClassName.setDescription('Name of Fr Class.')
hwFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hwCirAllowCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3), )
if mibBuilder.loadTexts: hwCirAllowCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowCfgInfoTable.setDescription('A table of DCE allowed rate Configuration information.')
hwCirAllowCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwCirAllowFrClassIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwCirAllowDirection"))
if mibBuilder.loadTexts: hwCirAllowCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowCfgInfoEntry.setDescription('DCE allowed ratee Configuration Information Entry.')
hwCirAllowFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirAllowFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hwFrClassIndex')
hwCirAllowDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirAllowDirection.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowDirection.setDescription('Packet Direction. value 1,2,3 Used by hwCirAllowValue. inbound (1) outbound (2) inbound and outbound (3) ')
hwCirAllowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirAllowValue.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowValue.setDescription('DCE allowed rate (value greater than CIR) Unit : Bits per second. Value : <1-45000000> .')
hwCirAllowRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirAllowRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwCirAllowRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hwCirCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4), )
if mibBuilder.loadTexts: hwCirCfgInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwCirCfgInfoTable.setDescription('A table of Committed Information Rate Configuration information.')
hwCirCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwCirFrClassIndex"))
if mibBuilder.loadTexts: hwCirCfgInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwCirCfgInfoEntry.setDescription('Committed Information Rate Configuration Information Entry.')
hwCirFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCirFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwCirFrClassIndex.setDescription('Index of Fr Class. Begin with 0.Equal to hwFrClassIndex')
hwCirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 45000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirValue.setStatus('current')
if mibBuilder.loadTexts: hwCirValue.setDescription(' CIR in packet output direction ,bps. Value : <1000-45000000>.')
hwCirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCirRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwCirRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hwIfApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5), )
if mibBuilder.loadTexts: hwIfApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hwIfApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hwIfApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwIfApplyFrClassIfIndex"))
if mibBuilder.loadTexts: hwIfApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hwIfApplyFrClassEntry.setDescription('FrClass applied on interface Configuration Information Entry.')
hwIfApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIfApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwIfApplyFrClassIfIndex.setDescription('Interface Index, equal to ifIndex.')
hwIfApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwIfApplyFrClassIndex.setDescription('Index of Fr Class, equal to hwFrClassIndex')
hwIfApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIfApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwIfApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hwPvcApplyFrClassTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6), )
if mibBuilder.loadTexts: hwPvcApplyFrClassTable.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassTable.setDescription('A table of QoS Fr Class instance.')
hwPvcApplyFrClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwPvcApplyFrClassEntry.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassEntry.setDescription('Fr Class applied on FR Pvc Configuration Information Entry.')
hwPvcApplyFrClassIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPvcApplyFrClassIfIndex.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassIfIndex.setDescription('Fr Interface Index, equal to ifIndex.')
hwPvcApplyFrClassDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPvcApplyFrClassDlciNum.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassDlciNum.setDescription('Fr DLCI number.')
hwPvcApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPvcApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassIndex.setDescription('Index of Fr Class, equal to hwFrClassIndex')
hwPvcApplyFrClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPvcApplyFrClassRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwPvcApplyFrClassRowStatus.setDescription('RowStatus. Three actions are used: active, createAndGo, destroy')
hwFrPvcBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7), )
if mibBuilder.loadTexts: hwFrPvcBandwidthTable.setStatus('current')
if mibBuilder.loadTexts: hwFrPvcBandwidthTable.setDescription('A table of Running statistics for bandwidth. ')
hwFrPvcBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwFrPvcBandwidthEntry.setStatus('current')
if mibBuilder.loadTexts: hwFrPvcBandwidthEntry.setDescription('Bandwidth Running statistics')
hwFrPvcBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcBandwidthMaxReservedBW.setStatus('current')
if mibBuilder.loadTexts: hwFrPvcBandwidthMaxReservedBW.setDescription('Max reserved bandWidth. Unit : Kbps')
hwFrPvcBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwFrPvcBandwidthAvailable.setStatus('current')
if mibBuilder.loadTexts: hwFrPvcBandwidthAvailable.setDescription('Available bandWidth. Unit : Kbps')
hwRTPQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2))
hwRTPFrClassApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1), )
if mibBuilder.loadTexts: hwRTPFrClassApplyTable.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyTable.setDescription('A table of QoS rtpq instance.')
hwRTPFrClassApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwRTPFrClassApplyFrClassIndex"))
if mibBuilder.loadTexts: hwRTPFrClassApplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyEntry.setDescription('Rtpq Configuration Information Entry.')
hwRTPFrClassApplyFrClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrClassApplyFrClassIndex.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyFrClassIndex.setDescription('Fr Class Index, equal to HwFrClassIndex.')
hwRTPFrClassApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyStartPort.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyStartPort.setDescription(' RTP-PORT(3): start-port: 2000~65535 ')
hwRTPFrClassApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyEndPort.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyEndPort.setDescription(' RTP-PORT(3): end-port: 2000~65535 ')
hwRTPFrClassApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyBandWidth.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyBandWidth.setDescription('Max bandWidth Value: Absolute value: 8~1000000. Unit: Kbps ')
hwRTPFrClassApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyCbs.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyCbs.setDescription(' Committed Burst Size: 1500~2000000. Unit: byte ')
hwRTPFrClassApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwRTPFrClassApplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrClassApplyRowStatus.setDescription('RowStatus for RTPFrClassApply Table. Three actions are used: active, createAndGo, destroy')
hwRTPFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2), )
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoTable.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoTable.setDescription('A table of Running statistics for RTPQ Queue applied on the FR PVC')
hwRTPFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassIfIndex"), (0, "HUAWEI-FR-QOS-MIB", "hwPvcApplyFrClassDlciNum"))
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueRunInfoEntry.setDescription('Queue statistics entry.')
hwRTPFrPvcQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueSize.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueSize.setDescription('Size of Rtpq Queue.')
hwRTPFrPvcQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueMaxSize.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueMaxSize.setDescription('Max size of Rtpq Queue.')
hwRTPFrPvcQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueOutputs.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueOutputs.setDescription('Outputs of Rtpq Queue.')
hwRTPFrPvcQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 3, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRTPFrPvcQueueDiscards.setStatus('current')
if mibBuilder.loadTexts: hwRTPFrPvcQueueDiscards.setDescription('Discards of Rtpq Queue.')
mibBuilder.exportSymbols("HUAWEI-FR-QOS-MIB", hwPvcApplyFrClassEntry=hwPvcApplyFrClassEntry, hwRTPFrClassApplyBandWidth=hwRTPFrClassApplyBandWidth, hwFrClassName=hwFrClassName, hwIfApplyFrClassIfIndex=hwIfApplyFrClassIfIndex, hwRTPFrClassApplyEntry=hwRTPFrClassApplyEntry, hwFrClassRowStatus=hwFrClassRowStatus, hwPvcApplyFrClassRowStatus=hwPvcApplyFrClassRowStatus, PYSNMP_MODULE_ID=hwFrQoSMib, hwQoS=hwQoS, hwFrPvcBandwidthTable=hwFrPvcBandwidthTable, hwFrClassIndexNext=hwFrClassIndexNext, hwFrClassCfgInfoEntry=hwFrClassCfgInfoEntry, hwRTPFrClassApplyCbs=hwRTPFrClassApplyCbs, hwRTPFrClassApplyRowStatus=hwRTPFrClassApplyRowStatus, hwFrClassIndex=hwFrClassIndex, hwIfApplyFrClassIndex=hwIfApplyFrClassIndex, hwFrClassCfgInfoTable=hwFrClassCfgInfoTable, hwFrPvcBandwidthEntry=hwFrPvcBandwidthEntry, hwRTPFrPvcQueueSize=hwRTPFrPvcQueueSize, hwRTPFrClassApplyTable=hwRTPFrClassApplyTable, hwIfApplyFrClassTable=hwIfApplyFrClassTable, hwRTPFrPvcQueueRunInfoTable=hwRTPFrPvcQueueRunInfoTable, hwCirValue=hwCirValue, hwRTPFrPvcQueueOutputs=hwRTPFrPvcQueueOutputs, hwFrPvcBandwidthMaxReservedBW=hwFrPvcBandwidthMaxReservedBW, hwRTPQoSObjects=hwRTPQoSObjects, hwRTPFrPvcQueueRunInfoEntry=hwRTPFrPvcQueueRunInfoEntry, hwPvcApplyFrClassTable=hwPvcApplyFrClassTable, hwCirAllowDirection=hwCirAllowDirection, hwIfApplyFrClassEntry=hwIfApplyFrClassEntry, DirectionType=DirectionType, hwRTPFrClassApplyStartPort=hwRTPFrClassApplyStartPort, hwCirAllowRowStatus=hwCirAllowRowStatus, hwRTPFrPvcQueueMaxSize=hwRTPFrPvcQueueMaxSize, hwIfApplyFrClassRowStatus=hwIfApplyFrClassRowStatus, hwCirAllowCfgInfoEntry=hwCirAllowCfgInfoEntry, hwCirCfgInfoEntry=hwCirCfgInfoEntry, hwPvcApplyFrClassIfIndex=hwPvcApplyFrClassIfIndex, hwCirCfgInfoTable=hwCirCfgInfoTable, hwRTPFrPvcQueueDiscards=hwRTPFrPvcQueueDiscards, hwCirRowStatus=hwCirRowStatus, hwFrPvcBandwidthAvailable=hwFrPvcBandwidthAvailable, hwFrClassObjects=hwFrClassObjects, hwFrQoSObjects=hwFrQoSObjects, hwCirAllowFrClassIndex=hwCirAllowFrClassIndex, hwCirAllowCfgInfoTable=hwCirAllowCfgInfoTable, hwRTPFrClassApplyEndPort=hwRTPFrClassApplyEndPort, hwCirAllowValue=hwCirAllowValue, hwRTPFrClassApplyFrClassIndex=hwRTPFrClassApplyFrClassIndex, hwCirFrClassIndex=hwCirFrClassIndex, hwFrQoSMib=hwFrQoSMib, hwPvcApplyFrClassIndex=hwPvcApplyFrClassIndex, hwPvcApplyFrClassDlciNum=hwPvcApplyFrClassDlciNum)
