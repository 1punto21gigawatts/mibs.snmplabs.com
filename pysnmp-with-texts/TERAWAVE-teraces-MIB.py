#
# PySNMP MIB module TERAWAVE-teraces-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-teraces-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Bits, Integer32, Unsigned32, MibIdentifier, Gauge32, enterprises, iso, TimeTicks, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Bits", "Integer32", "Unsigned32", "MibIdentifier", "Gauge32", "enterprises", "iso", "TimeTicks", "IpAddress", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terawave = MibIdentifier((1, 3, 6, 1, 4, 1, 4513))
bandwidthGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4513, 9))
teraCESConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 1), )
if mibBuilder.loadTexts: teraCESConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESConfigTable.setDescription(' table teraCESConfigTable')
teraCESConfigTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 1, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"))
if mibBuilder.loadTexts: teraCESConfigTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESConfigTableEntry.setDescription(' table entry teraCESConfigTableEntry ')
teraCesSignalling = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aal1-signalling", 1), ("aal1-no-signalling", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCesSignalling.setStatus('mandatory')
if mibBuilder.loadTexts: teraCesSignalling.setDescription('')
teraCesCheckParity = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aal1-no-parity", 1), ("aal1-parity", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCesCheckParity.setStatus('mandatory')
if mibBuilder.loadTexts: teraCesCheckParity.setDescription('')
teraCesTestLine = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no-action", 1), ("line-test-relay-off", 2), ("line-test-relay-on", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCesTestLine.setStatus('mandatory')
if mibBuilder.loadTexts: teraCesTestLine.setDescription('')
teraCesSRTSSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCesSRTSSize.setStatus('mandatory')
if mibBuilder.loadTexts: teraCesSRTSSize.setDescription('')
teraCESStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 2), )
if mibBuilder.loadTexts: teraCESStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESStatTable.setDescription(' table teraCESStatTable')
teraCESStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 2, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"))
if mibBuilder.loadTexts: teraCESStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESStatTableEntry.setDescription(' table entry teraCESStatTableEntry ')
teraCESTCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTCellCount.setDescription('')
teraCESRLostCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESRLostCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESRLostCellCount.setDescription('')
teraCESRReplacedCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESRReplacedCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESRReplacedCellCount.setDescription('')
teraCESIntervalStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 3), )
if mibBuilder.loadTexts: teraCESIntervalStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalStatTable.setDescription(' table teraCESIntervalStatTable')
teraCESIntervalStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 3, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"), (0, "TERAWAVE-teraces-MIB", "teraCESIntervalNumber"))
if mibBuilder.loadTexts: teraCESIntervalStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalStatTableEntry.setDescription(' table entry teraCESIntervalStatTableEntry ')
teraCESIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESIntervalNumber.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalNumber.setDescription('')
teraCESIntervalTCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESIntervalTCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalTCellCount.setDescription('')
teraCESIntervalRLostCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESIntervalRLostCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalRLostCellCount.setDescription('')
teraCESIntervalRReplacedCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESIntervalRReplacedCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESIntervalRReplacedCellCount.setDescription('')
teraCESTotalStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 4), )
if mibBuilder.loadTexts: teraCESTotalStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalStatTable.setDescription(' table teraCESTotalStatTable')
teraCESTotalStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 4, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"))
if mibBuilder.loadTexts: teraCESTotalStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalStatTableEntry.setDescription(' table entry teraCESTotalStatTableEntry ')
teraCESTotalTCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTotalTCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalTCellCount.setDescription('')
teraCESTotalRLostCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTotalRLostCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalRLostCellCount.setDescription('')
teraCESTotalRReplacedCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTotalRReplacedCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalRReplacedCellCount.setDescription('')
teraCESTotalStatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraCESTotalStatStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTotalStatStatus.setDescription('')
teraAtmfCESIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 5), )
if mibBuilder.loadTexts: teraAtmfCESIntervalStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalStatsTable.setDescription(' table teraAtmfCESIntervalStatsTable')
teraAtmfCESIntervalStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"), (0, "TERAWAVE-teraces-MIB", "teraAtmfCESIntervalNumber"))
if mibBuilder.loadTexts: teraAtmfCESIntervalStatsTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalStatsTableEntry.setDescription(' table entry teraAtmfCESIntervalStatsTableEntry ')
teraAtmfCESIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalNumber.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalNumber.setDescription('')
teraAtmfCESIntervalReassCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalReassCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalReassCells.setDescription('')
teraAtmfCESIntervalHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalHdrErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalHdrErrors.setDescription('')
teraAtmfCESIntervalPointerReframes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalPointerReframes.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalPointerReframes.setDescription('')
teraAtmfCESIntervalPointerParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalPointerParityErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalPointerParityErrors.setDescription('')
teraAtmfCESIntervalAal1SeqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalAal1SeqErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalAal1SeqErrors.setDescription('')
teraAtmfCESIntervalLostCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalLostCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalLostCells.setDescription('')
teraAtmfCESIntervalMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalMisinsertedCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalMisinsertedCells.setDescription('')
teraAtmfCESIntervalBufUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalBufUnderflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalBufUnderflows.setDescription('')
teraAtmfCESIntervalBufOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalBufOverflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalBufOverflows.setDescription('')
teraAtmfCESIntervalCellLossStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noloss", 1), ("loss", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESIntervalCellLossStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESIntervalCellLossStatus.setDescription('')
teraAtmfCESTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 6), )
if mibBuilder.loadTexts: teraAtmfCESTotalStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalStatsTable.setDescription(' table teraAtmfCESTotalStatsTable')
teraAtmfCESTotalStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"))
if mibBuilder.loadTexts: teraAtmfCESTotalStatsTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalStatsTableEntry.setDescription(' table entry teraAtmfCESTotalStatsTableEntry ')
teraAtmfCESTotalReassCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalReassCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalReassCells.setDescription('')
teraAtmfCESTotalHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalHdrErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalHdrErrors.setDescription('')
teraAtmfCESTotalPointerReframes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalPointerReframes.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalPointerReframes.setDescription('')
teraAtmfCESTotalPointerParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalPointerParityErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalPointerParityErrors.setDescription('')
teraAtmfCESTotalAal1SeqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalAal1SeqErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalAal1SeqErrors.setDescription('')
teraAtmfCESTotalLostCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalLostCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalLostCells.setDescription('')
teraAtmfCESTotalMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalMisinsertedCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalMisinsertedCells.setDescription('')
teraAtmfCESTotalBufUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalBufUnderflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalBufUnderflows.setDescription('')
teraAtmfCESTotalBufOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalBufOverflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalBufOverflows.setDescription('')
teraAtmfCESTotalCellLossStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noloss", 1), ("loss", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESTotalCellLossStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalCellLossStatus.setDescription('')
teraAtmfCESTotalStatsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("clear", 2), ("clrall", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: teraAtmfCESTotalStatsStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESTotalStatsStatus.setDescription('')
teraAtmfCESStandard7DayTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 7), )
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalStatsTable.setDescription(' table teraAtmfCESStandard7DayTotalStatsTable')
teraAtmfCESStandard7DayTotalStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"), (0, "TERAWAVE-teraces-MIB", "teraAtmfCESStandard7DayTotalNumber"))
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalStatsTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalStatsTableEntry.setDescription(' table entry teraAtmfCESStandard7DayTotalStatsTableEntry ')
teraAtmfCESStandard7DayTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalNumber.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalNumber.setDescription('')
teraAtmfCESStandard7DayTotalReassCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalReassCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalReassCells.setDescription('')
teraAtmfCESStandard7DayTotalHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalHdrErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalHdrErrors.setDescription('')
teraAtmfCESStandard7DayTotalPointerReframes = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalPointerReframes.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalPointerReframes.setDescription('')
teraAtmfCESStandard7DayTotalPointerParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalPointerParityErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalPointerParityErrors.setDescription('')
teraAtmfCESStandard7DayTotalAal1SeqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalAal1SeqErrors.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalAal1SeqErrors.setDescription('')
teraAtmfCESStandard7DayTotalLostCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalLostCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalLostCells.setDescription('')
teraAtmfCESStandard7DayTotalMisinsertedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalMisinsertedCells.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalMisinsertedCells.setDescription('')
teraAtmfCESStandard7DayTotalBufUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalBufUnderflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalBufUnderflows.setDescription('')
teraAtmfCESStandard7DayTotalBufOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalBufOverflows.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalBufOverflows.setDescription('')
teraAtmfCESStandard7DayTotalCellLossStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noloss", 1), ("loss", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalCellLossStatus.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayTotalCellLossStatus.setDescription('')
teraAtmfCESStandard7DayDayTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraAtmfCESStandard7DayDayTotalValidData.setStatus('mandatory')
if mibBuilder.loadTexts: teraAtmfCESStandard7DayDayTotalValidData.setDescription('')
teraCESTera7DayTotalStatTable = MibTable((1, 3, 6, 1, 4, 1, 4513, 9, 8), )
if mibBuilder.loadTexts: teraCESTera7DayTotalStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalStatTable.setDescription(' table teraCESTera7DayTotalStatTable')
teraCESTera7DayTotalStatTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1), ).setIndexNames((0, "TERAWAVE-teraces-MIB", "atmfCESCbrIndex"), (0, "TERAWAVE-teraces-MIB", "teraCESTera7DayTotalNumber"))
if mibBuilder.loadTexts: teraCESTera7DayTotalStatTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalStatTableEntry.setDescription(' table entry teraCESTera7DayTotalStatTableEntry ')
teraCESTera7DayTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTera7DayTotalNumber.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalNumber.setDescription('')
teraCESTera7DayTotalTCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTera7DayTotalTCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalTCellCount.setDescription('')
teraCESTera7DayTotalRLostCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTera7DayTotalRLostCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalRLostCellCount.setDescription('')
teraCESTera7DayTotalRReplacedCellCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTera7DayTotalRReplacedCellCount.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayTotalRReplacedCellCount.setDescription('')
teraCESTera7DayDayTotalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 4513, 9, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: teraCESTera7DayDayTotalValidData.setStatus('mandatory')
if mibBuilder.loadTexts: teraCESTera7DayDayTotalValidData.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-teraces-MIB", teraAtmfCESStandard7DayTotalAal1SeqErrors=teraAtmfCESStandard7DayTotalAal1SeqErrors, teraCESTera7DayTotalStatTable=teraCESTera7DayTotalStatTable, teraAtmfCESStandard7DayTotalBufUnderflows=teraAtmfCESStandard7DayTotalBufUnderflows, teraAtmfCESTotalStatsTableEntry=teraAtmfCESTotalStatsTableEntry, teraCESTotalStatStatus=teraCESTotalStatStatus, teraCESIntervalStatTable=teraCESIntervalStatTable, teraCESIntervalTCellCount=teraCESIntervalTCellCount, teraAtmfCESIntervalHdrErrors=teraAtmfCESIntervalHdrErrors, teraAtmfCESTotalLostCells=teraAtmfCESTotalLostCells, teraCESStatTableEntry=teraCESStatTableEntry, teraCESRReplacedCellCount=teraCESRReplacedCellCount, teraCESIntervalNumber=teraCESIntervalNumber, teraAtmfCESTotalMisinsertedCells=teraAtmfCESTotalMisinsertedCells, teraAtmfCESIntervalStatsTable=teraAtmfCESIntervalStatsTable, teraAtmfCESStandard7DayTotalPointerReframes=teraAtmfCESStandard7DayTotalPointerReframes, teraCESTera7DayDayTotalValidData=teraCESTera7DayDayTotalValidData, teraAtmfCESTotalBufUnderflows=teraAtmfCESTotalBufUnderflows, terawave=terawave, teraAtmfCESIntervalReassCells=teraAtmfCESIntervalReassCells, teraCesSRTSSize=teraCesSRTSSize, teraCESStatTable=teraCESStatTable, teraAtmfCESIntervalPointerParityErrors=teraAtmfCESIntervalPointerParityErrors, teraAtmfCESIntervalCellLossStatus=teraAtmfCESIntervalCellLossStatus, teraAtmfCESTotalStatsStatus=teraAtmfCESTotalStatsStatus, teraAtmfCESTotalHdrErrors=teraAtmfCESTotalHdrErrors, teraAtmfCESIntervalLostCells=teraAtmfCESIntervalLostCells, teraCESTotalStatTable=teraCESTotalStatTable, teraAtmfCESStandard7DayTotalNumber=teraAtmfCESStandard7DayTotalNumber, teraCESTera7DayTotalRLostCellCount=teraCESTera7DayTotalRLostCellCount, teraCESConfigTableEntry=teraCESConfigTableEntry, teraCesSignalling=teraCesSignalling, teraAtmfCESIntervalBufUnderflows=teraAtmfCESIntervalBufUnderflows, teraAtmfCESStandard7DayTotalPointerParityErrors=teraAtmfCESStandard7DayTotalPointerParityErrors, teraAtmfCESIntervalBufOverflows=teraAtmfCESIntervalBufOverflows, teraCESConfigTable=teraCESConfigTable, teraCESTera7DayTotalStatTableEntry=teraCESTera7DayTotalStatTableEntry, teraAtmfCESStandard7DayTotalMisinsertedCells=teraAtmfCESStandard7DayTotalMisinsertedCells, teraCESIntervalStatTableEntry=teraCESIntervalStatTableEntry, bandwidthGroup=bandwidthGroup, teraCESTotalRLostCellCount=teraCESTotalRLostCellCount, teraCESTera7DayTotalRReplacedCellCount=teraCESTera7DayTotalRReplacedCellCount, teraCESTera7DayTotalTCellCount=teraCESTera7DayTotalTCellCount, teraAtmfCESTotalStatsTable=teraAtmfCESTotalStatsTable, teraCESIntervalRReplacedCellCount=teraCESIntervalRReplacedCellCount, teraAtmfCESStandard7DayTotalHdrErrors=teraAtmfCESStandard7DayTotalHdrErrors, teraCESRLostCellCount=teraCESRLostCellCount, teraAtmfCESTotalReassCells=teraAtmfCESTotalReassCells, teraAtmfCESTotalAal1SeqErrors=teraAtmfCESTotalAal1SeqErrors, teraAtmfCESStandard7DayTotalStatsTableEntry=teraAtmfCESStandard7DayTotalStatsTableEntry, teraCESIntervalRLostCellCount=teraCESIntervalRLostCellCount, teraCESTotalTCellCount=teraCESTotalTCellCount, teraAtmfCESStandard7DayTotalBufOverflows=teraAtmfCESStandard7DayTotalBufOverflows, teraCESTera7DayTotalNumber=teraCESTera7DayTotalNumber, teraAtmfCESIntervalNumber=teraAtmfCESIntervalNumber, teraAtmfCESStandard7DayTotalLostCells=teraAtmfCESStandard7DayTotalLostCells, teraCesCheckParity=teraCesCheckParity, teraAtmfCESIntervalPointerReframes=teraAtmfCESIntervalPointerReframes, teraCesTestLine=teraCesTestLine, teraAtmfCESIntervalStatsTableEntry=teraAtmfCESIntervalStatsTableEntry, teraCESTCellCount=teraCESTCellCount, teraAtmfCESIntervalAal1SeqErrors=teraAtmfCESIntervalAal1SeqErrors, teraAtmfCESTotalPointerParityErrors=teraAtmfCESTotalPointerParityErrors, teraCESTotalStatTableEntry=teraCESTotalStatTableEntry, teraAtmfCESTotalBufOverflows=teraAtmfCESTotalBufOverflows, teraAtmfCESStandard7DayTotalStatsTable=teraAtmfCESStandard7DayTotalStatsTable, teraAtmfCESStandard7DayTotalReassCells=teraAtmfCESStandard7DayTotalReassCells, teraAtmfCESTotalCellLossStatus=teraAtmfCESTotalCellLossStatus, teraAtmfCESTotalPointerReframes=teraAtmfCESTotalPointerReframes, teraCESTotalRReplacedCellCount=teraCESTotalRReplacedCellCount, teraAtmfCESStandard7DayDayTotalValidData=teraAtmfCESStandard7DayDayTotalValidData, teraAtmfCESStandard7DayTotalCellLossStatus=teraAtmfCESStandard7DayTotalCellLossStatus, teraAtmfCESIntervalMisinsertedCells=teraAtmfCESIntervalMisinsertedCells)
