#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-ATM-E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-ATM-E1-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter32, Counter64, ObjectIdentity, Integer32, Gauge32, MibIdentifier, Unsigned32, IpAddress, NotificationType, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "ObjectIdentity", "Integer32", "Gauge32", "MibIdentifier", "Unsigned32", "IpAddress", "NotificationType", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sonomaATM, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaATM")
sonomaE1ATMAdapterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6))
atmE1ConfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1))
atmE1StatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2))
atmE1ConfPhyTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1), )
if mibBuilder.loadTexts: atmE1ConfPhyTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfPhyTable.setDescription('A table of physical layer configuration for the E1 interface')
atmE1ConfPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ATM-E1-MIB", "atmE1ConfPhysIndex"))
if mibBuilder.loadTexts: atmE1ConfPhyEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfPhyEntry.setDescription('A entry in the table, containing information about the physical layer of a E1 interface')
atmE1ConfPhysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1ConfPhysIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfPhysIndex.setDescription('The physical interface index.')
atmE1ConfLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("internal", 2), ("external", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmE1ConfLoopback.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfLoopback.setDescription('This object is used to modify the state of internal loopback....')
atmE1ConfTxClockSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("recovered", 2))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmE1ConfTxClockSelect.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfTxClockSelect.setDescription('Configure the transmit clock.')
atmE1ConfFillerCells = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unassigned", 1), ("idle", 2))).clone('unassigned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmE1ConfFillerCells.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1ConfFillerCells.setDescription('This parameter indicates the type of filler cells to send when there are no data cells.')
atmE1StatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1), )
if mibBuilder.loadTexts: atmE1StatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsTable.setDescription('A table of physical layer statistics information for the E1 interface')
atmE1StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1), ).setIndexNames((0, "SONOMASYSTEMS-SONOMA-ATM-E1-MIB", "atmE1StatsPhysIndex"))
if mibBuilder.loadTexts: atmE1StatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsEntry.setDescription('A entry in the table, containing information about the physical layer of a E1 interface')
atmE1StatsPhysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsPhysIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsPhysIndex.setDescription('The physical interface index.')
atmE1StatsNoSignals = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsNoSignals.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsNoSignals.setDescription('No signal error counter.')
atmE1StatsRAIDetects = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsRAIDetects.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsRAIDetects.setDescription('RAI Detect counter.')
atmE1StatsFASErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsFASErrors.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsFASErrors.setDescription('FAS (Frame Alignment Signal) error counter.')
atmE1StatsCVErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsCVErrors.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsCVErrors.setDescription('CV (Code Violation) error counter.')
atmE1StatsCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsCRCErrors.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsCRCErrors.setDescription('CRC4 error counter.')
atmE1StatsEBitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsEBitErrors.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsEBitErrors.setDescription('E-Bit (FEBE) error counter.')
atmE1StatsSyncLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsSyncLossCount.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsSyncLossCount.setDescription('Sync Loss counter.')
atmE1StatsHECErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsHECErrors.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsHECErrors.setDescription('HEC error counter.')
atmE1StatsSignalLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsSignalLoss.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsSignalLoss.setDescription('Signal loss indication.')
atmE1StatsRAIDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsRAIDetect.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsRAIDetect.setDescription('RAI indication.')
atmE1StatsSyncLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsSyncLoss.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsSyncLoss.setDescription('Loss of sync indication.')
atmE1StatsTxClockLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmE1StatsTxClockLoss.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsTxClockLoss.setDescription('Loss of transmit clock indication.')
atmE1StatsClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 7, 6, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmE1StatsClearCounters.setStatus('mandatory')
if mibBuilder.loadTexts: atmE1StatsClearCounters.setDescription('Clear all counters in this group ONLY.')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-ATM-E1-MIB", sonomaE1ATMAdapterGroup=sonomaE1ATMAdapterGroup, atmE1ConfPhysIndex=atmE1ConfPhysIndex, atmE1StatsFASErrors=atmE1StatsFASErrors, atmE1StatsCRCErrors=atmE1StatsCRCErrors, atmE1StatsPhysIndex=atmE1StatsPhysIndex, atmE1StatsHECErrors=atmE1StatsHECErrors, atmE1StatsSyncLoss=atmE1StatsSyncLoss, atmE1ConfLoopback=atmE1ConfLoopback, atmE1StatsEBitErrors=atmE1StatsEBitErrors, atmE1ConfGroup=atmE1ConfGroup, atmE1StatsTxClockLoss=atmE1StatsTxClockLoss, atmE1StatsRAIDetect=atmE1StatsRAIDetect, atmE1StatsCVErrors=atmE1StatsCVErrors, atmE1ConfPhyTable=atmE1ConfPhyTable, atmE1StatsClearCounters=atmE1StatsClearCounters, atmE1StatsSignalLoss=atmE1StatsSignalLoss, atmE1StatsEntry=atmE1StatsEntry, atmE1StatsSyncLossCount=atmE1StatsSyncLossCount, atmE1StatsTable=atmE1StatsTable, atmE1ConfFillerCells=atmE1ConfFillerCells, atmE1ConfTxClockSelect=atmE1ConfTxClockSelect, atmE1StatsGroup=atmE1StatsGroup, atmE1StatsRAIDetects=atmE1StatsRAIDetects, atmE1ConfPhyEntry=atmE1ConfPhyEntry, atmE1StatsNoSignals=atmE1StatsNoSignals)
