#
# PySNMP MIB module CISCO-DMN-DSG-ABOUT-REV2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-ABOUT-REV2-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Bits, Counter64, Gauge32, NotificationType, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, IpAddress, ObjectIdentity, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter64", "Gauge32", "NotificationType", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "IpAddress", "ObjectIdentity", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGAboutRev2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42))
ciscoDSGAboutRev2.setRevisions(('2013-05-15 06:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGAboutRev2.setRevisionsDescriptions(('V01.00.00 2013-05-15 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGAboutRev2.setLastUpdated('201305150600Z')
if mibBuilder.loadTexts: ciscoDSGAboutRev2.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGAboutRev2.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGAboutRev2.setDescription('Cisco About MIB Rev 2.')
aboutRev2Table = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2))
pcbVersionTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1), )
if mibBuilder.loadTexts: pcbVersionTable.setStatus('current')
if mibBuilder.loadTexts: pcbVersionTable.setDescription('Pcb Version Table.')
pcbVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "pcbVersionIdx"))
if mibBuilder.loadTexts: pcbVersionEntry.setStatus('current')
if mibBuilder.loadTexts: pcbVersionEntry.setDescription('Entry for Pcb Version Table.')
pcbVersionIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionIdx.setStatus('current')
if mibBuilder.loadTexts: pcbVersionIdx.setDescription('Index of PCB version Table.')
pcbVersionPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionPosition.setStatus('current')
if mibBuilder.loadTexts: pcbVersionPosition.setDescription('PCB Position.')
pcbVersionID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionID.setStatus('current')
if mibBuilder.loadTexts: pcbVersionID.setDescription('PCB identification.')
pcbVersionRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionRev.setStatus('current')
if mibBuilder.loadTexts: pcbVersionRev.setDescription('PCB Revision.')
pcbVersionOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionOptions.setStatus('current')
if mibBuilder.loadTexts: pcbVersionOptions.setDescription('Installation Options.')
pcbVersionSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcbVersionSerialNum.setStatus('current')
if mibBuilder.loadTexts: pcbVersionSerialNum.setDescription('PCB Serial Number.')
firmwareVersionTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2), )
if mibBuilder.loadTexts: firmwareVersionTable.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionTable.setDescription('Firmware Version Table.')
firmwareVersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "firmwareVersionBoard"), (0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "firmwareVersionrow"))
if mibBuilder.loadTexts: firmwareVersionEntry.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionEntry.setDescription('Entry for Firmware Version Table.')
firmwareVersionBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersionBoard.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionBoard.setDescription('Board index of Firmware Version Table.')
firmwareVersionrow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersionrow.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionrow.setDescription('Row index of Firmware Version on each board.')
firmwareVersionID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersionID.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionID.setDescription('Firware Version Identification.')
firmwareVersionVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersionVersion.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionVersion.setDescription('Firware Version Numbers.')
firmwareVersionValidationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersionValidationCode.setStatus('current')
if mibBuilder.loadTexts: firmwareVersionValidationCode.setDescription('Firware Validation Code.')
currentAppTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3), )
if mibBuilder.loadTexts: currentAppTable.setStatus('current')
if mibBuilder.loadTexts: currentAppTable.setDescription('Current App Table.')
currentAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "currentAppBoard"), (0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "currentApprow"))
if mibBuilder.loadTexts: currentAppEntry.setStatus('current')
if mibBuilder.loadTexts: currentAppEntry.setDescription('Entry for Current App Table.')
currentAppBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAppBoard.setStatus('current')
if mibBuilder.loadTexts: currentAppBoard.setDescription('Board index of Current App Table.')
currentApprow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentApprow.setStatus('current')
if mibBuilder.loadTexts: currentApprow.setDescription('Row index of Current App on each board.')
currentAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAppID.setStatus('current')
if mibBuilder.loadTexts: currentAppID.setDescription('Current App Identification.')
currentAppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAppVersion.setStatus('current')
if mibBuilder.loadTexts: currentAppVersion.setDescription('Current App Version Numbers.')
currentAppValidationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAppValidationCode.setStatus('current')
if mibBuilder.loadTexts: currentAppValidationCode.setDescription('Current App Validation Code.')
currentFpgaTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4), )
if mibBuilder.loadTexts: currentFpgaTable.setStatus('current')
if mibBuilder.loadTexts: currentFpgaTable.setDescription('Current Fpga Table.')
currentFpgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "currentFpgaBoard"), (0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "currentFpgarow"))
if mibBuilder.loadTexts: currentFpgaEntry.setStatus('current')
if mibBuilder.loadTexts: currentFpgaEntry.setDescription('Entry for Current Fpga Table.')
currentFpgaBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentFpgaBoard.setStatus('current')
if mibBuilder.loadTexts: currentFpgaBoard.setDescription('Board index of Current Fpga Table.')
currentFpgarow = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentFpgarow.setStatus('current')
if mibBuilder.loadTexts: currentFpgarow.setDescription('Row index of Current Fpga on each board.')
currentFpgaID = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentFpgaID.setStatus('current')
if mibBuilder.loadTexts: currentFpgaID.setDescription('Current Fpga Identification.')
currentFpgaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentFpgaVersion.setStatus('current')
if mibBuilder.loadTexts: currentFpgaVersion.setDescription('Current Fpga Version Numbers.')
currentFpgaValidationCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentFpgaValidationCode.setStatus('current')
if mibBuilder.loadTexts: currentFpgaValidationCode.setDescription('Current Fpga Validation Code.')
runnableAppTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5), )
if mibBuilder.loadTexts: runnableAppTable.setStatus('current')
if mibBuilder.loadTexts: runnableAppTable.setDescription('Runnable App Table.')
runnableAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "runnableAppIdx"))
if mibBuilder.loadTexts: runnableAppEntry.setStatus('current')
if mibBuilder.loadTexts: runnableAppEntry.setDescription('Entry for Runnable App Table.')
runnableAppIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableAppIdx.setStatus('current')
if mibBuilder.loadTexts: runnableAppIdx.setDescription('Runnable App Table Index.')
runnableAppFileIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableAppFileIdx.setStatus('current')
if mibBuilder.loadTexts: runnableAppFileIdx.setDescription('File Index in Nonvolatile File System.')
runnableAppVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableAppVersion.setStatus('current')
if mibBuilder.loadTexts: runnableAppVersion.setDescription('Runnable App Version.')
runnableAppSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableAppSelect.setStatus('current')
if mibBuilder.loadTexts: runnableAppSelect.setDescription('Select yes to change Runnable App.')
runnableAppErase = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableAppErase.setStatus('current')
if mibBuilder.loadTexts: runnableAppErase.setDescription('Select yes to erase Runnable App.')
runnableFpgaTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6), )
if mibBuilder.loadTexts: runnableFpgaTable.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaTable.setDescription('Runnable Fpga Table.')
runnableFpgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "runnableFpgaIdx"))
if mibBuilder.loadTexts: runnableFpgaEntry.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaEntry.setDescription('Entry for Runnable Fpga Table.')
runnableFpgaIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFpgaIdx.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaIdx.setDescription('Runnable Fpga Table Index.')
runnableFpgaFileIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFpgaFileIdx.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaFileIdx.setDescription('File Index in Nonvolatile File System.')
runnableFpgaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFpgaVersion.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaVersion.setDescription('Runnable Fpga Version.')
runnableFpgaSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableFpgaSelect.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaSelect.setDescription('Select yes to change Runnable Fpga.')
runnableFpgaErase = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableFpgaErase.setStatus('current')
if mibBuilder.loadTexts: runnableFpgaErase.setDescription('Select yes to erase Runnable Fpga.')
runnableFecFpgaTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7), )
if mibBuilder.loadTexts: runnableFecFpgaTable.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaTable.setDescription('Runnable FecFpga Table.')
runnableFecFpgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1), ).setIndexNames((0, "CISCO-DMN-DSG-ABOUT-REV2-MIB", "runnableFecFpgaIdx"))
if mibBuilder.loadTexts: runnableFecFpgaEntry.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaEntry.setDescription('Entry for Runnable FecFpga Table.')
runnableFecFpgaIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFecFpgaIdx.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaIdx.setDescription('Runnable FecFpga Table Index.')
runnableFecFpgaFileIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFecFpgaFileIdx.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaFileIdx.setDescription('File Index in Nonvolatile File System.')
runnableFecFpgaVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: runnableFecFpgaVersion.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaVersion.setDescription('Runnable FecFpga Version.')
runnableFecFpgaSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableFecFpgaSelect.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaSelect.setDescription('Select yes to change Runnable FecFpga.')
runnableFecFpgaErase = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 42, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: runnableFecFpgaErase.setStatus('current')
if mibBuilder.loadTexts: runnableFecFpgaErase.setDescription('Select yes to erase Runnable FecFpga.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-ABOUT-REV2-MIB", currentFpgarow=currentFpgarow, runnableFecFpgaVersion=runnableFecFpgaVersion, runnableAppEntry=runnableAppEntry, pcbVersionPosition=pcbVersionPosition, firmwareVersionValidationCode=firmwareVersionValidationCode, currentAppVersion=currentAppVersion, runnableFecFpgaEntry=runnableFecFpgaEntry, currentFpgaID=currentFpgaID, runnableFecFpgaSelect=runnableFecFpgaSelect, pcbVersionID=pcbVersionID, runnableAppSelect=runnableAppSelect, aboutRev2Table=aboutRev2Table, firmwareVersionBoard=firmwareVersionBoard, pcbVersionOptions=pcbVersionOptions, runnableAppTable=runnableAppTable, currentApprow=currentApprow, firmwareVersionTable=firmwareVersionTable, currentFpgaEntry=currentFpgaEntry, firmwareVersionEntry=firmwareVersionEntry, runnableFpgaFileIdx=runnableFpgaFileIdx, currentAppID=currentAppID, pcbVersionRev=pcbVersionRev, runnableFpgaEntry=runnableFpgaEntry, pcbVersionIdx=pcbVersionIdx, currentAppValidationCode=currentAppValidationCode, PYSNMP_MODULE_ID=ciscoDSGAboutRev2, pcbVersionEntry=pcbVersionEntry, currentFpgaVersion=currentFpgaVersion, runnableAppErase=runnableAppErase, runnableFecFpgaErase=runnableFecFpgaErase, runnableFpgaIdx=runnableFpgaIdx, runnableAppFileIdx=runnableAppFileIdx, firmwareVersionID=firmwareVersionID, currentAppTable=currentAppTable, runnableFecFpgaTable=runnableFecFpgaTable, runnableFpgaErase=runnableFpgaErase, firmwareVersionVersion=firmwareVersionVersion, ciscoDSGAboutRev2=ciscoDSGAboutRev2, runnableFecFpgaFileIdx=runnableFecFpgaFileIdx, pcbVersionTable=pcbVersionTable, pcbVersionSerialNum=pcbVersionSerialNum, currentFpgaValidationCode=currentFpgaValidationCode, currentFpgaBoard=currentFpgaBoard, runnableFpgaSelect=runnableFpgaSelect, firmwareVersionrow=firmwareVersionrow, runnableAppIdx=runnableAppIdx, runnableFecFpgaIdx=runnableFecFpgaIdx, currentAppBoard=currentAppBoard, runnableFpgaVersion=runnableFpgaVersion, currentAppEntry=currentAppEntry, runnableAppVersion=runnableAppVersion, currentFpgaTable=currentFpgaTable, runnableFpgaTable=runnableFpgaTable)
