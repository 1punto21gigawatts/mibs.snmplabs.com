#
# PySNMP MIB module JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:00:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
jnxMbgGwName, jnxMbgGwIndex = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName", "jnxMbgGwIndex")
jnxMobileGatewayMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMobileGatewayMibRoot")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, MibIdentifier, iso, IpAddress, Unsigned32, Counter32, Counter64, ModuleIdentity, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "MibIdentifier", "iso", "IpAddress", "Unsigned32", "Counter32", "Counter64", "ModuleIdentity", "ObjectIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxMobileGatewayPgwSMIPPoolMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5))
jnxMobileGatewayPgwSMIPPoolMib.setRevisions(('2011-01-13 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setLastUpdated('201111151200Z')
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net')
if mibBuilder.loadTexts: jnxMobileGatewayPgwSMIPPoolMib.setDescription('This module defines objects pertaining to Mobile-Edge Subscriber Management IP pool Services')
jnxMbgSMIPPoolNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0))
jnxMbgSMIPPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1))
jnxMbgSMIPPoolNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2))
jnxMbgIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3), )
if mibBuilder.loadTexts: jnxMbgIPPoolTable.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolTable.setDescription('The table exposes the local address pools attributes and their statistics. This table contains information about local address pools only.')
jnxMbgIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolId"))
if mibBuilder.loadTexts: jnxMbgIPPoolEntry.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolEntry.setDescription('An entry representing a single address range or prefix entry in the pool. It is indexed by Pool Id.')
jnxMbgIPPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: jnxMbgIPPoolId.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolId.setDescription('A Pool Id which identifies a pool on the mobile-gateway.')
jnxMbgIPPoolLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolLogicalSystem.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolLogicalSystem.setDescription('A name which identifies the logical-system to which the address pool belongs on the mobile gateway.')
jnxMbgIPPoolRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRoutingInstance.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRoutingInstance.setDescription('A name which identifies the routing instance to which the address pool belongs on the mobile gateway.')
jnxMbgIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolName.setDescription('A name which identifies the pool on the mobile-gateway.')
jnxMbgIPPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolType.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolType.setDescription('The type configured for this pool on the mobile gateway. Types supported are Ipv4(1) or IPv6(2).')
jnxMbgIPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolFree.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolFree.setDescription('Total number of free addresses in this pool.')
jnxMbgIPPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolInUse.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolInUse.setDescription('Total number of used addresses in this pool.')
jnxMbgIPPoolUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 3, 1, 8), Gauge32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolUtil.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolUtil.setDescription('Percentage utilization for this pool.')
jnxMbgIPPoolRangeTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4), )
if mibBuilder.loadTexts: jnxMbgIPPoolRangeTable.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeTable.setDescription("The table exposes the local address pool range's attributes and their statistics. This table contains information about local address pools only.")
jnxMbgIPPoolRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolId"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolRangeName"))
if mibBuilder.loadTexts: jnxMbgIPPoolRangeEntry.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeEntry.setDescription('An entry representing a address ranges in the pool. It is indexed by the Gateway Index, Logical System Id, Routing Instance Id, Pool Id and Range Id.')
jnxMbgIPPoolRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxMbgIPPoolRangeName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeName.setDescription('The name of the local IP address pool range')
jnxMbgIPPoolRangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeType.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeType.setDescription('The type configured for this range on the mobile gateway. Types supported are Ipv4(1) or IPv6(2).')
jnxMbgIPPoolRangeFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeFree.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeFree.setDescription('Total number of free addresses in this range.')
jnxMbgIPPoolRangeInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeInUse.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeInUse.setDescription('Total number of used addresses in this range.')
jnxMbgIPPoolRangeUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 4, 1, 5), Gauge32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgIPPoolRangeUtil.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolRangeUtil.setDescription('Percentage utilization for this range.')
jnxMbgSMIPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1), )
if mibBuilder.loadTexts: jnxMbgSMIPPoolTable.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolTable.setDescription('The table lists local address pools and their statistics')
jnxMbgSMIPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolLogicalSystem"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolRoutingInstance"), (0, "JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolName"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolEntry.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolEntry.setDescription('An entry representing a single address range or prefix entry in the pool')
jnxMbgSMIPPoolLogicalSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxMbgSMIPPoolLogicalSystem.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolLogicalSystem.setDescription('A name which identifies the logical-system to which the address pool belongs.')
jnxMbgSMIPPoolRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128)))
if mibBuilder.loadTexts: jnxMbgSMIPPoolRoutingInstance.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolRoutingInstance.setDescription('A name which identifies the routing instance to which the address pool belongs.')
jnxMbgSMIPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxMbgSMIPPoolName.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolName.setDescription('A name which identifies this pool on the mobile-gateway.')
jnxMbgSMIPPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolType.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolType.setDescription('Indicates whether this pool entry is of type ipv4 or ipv6.')
jnxMbgSMIPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolFree.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolFree.setDescription('Total number of free addresses in this pool entry.')
jnxMbgSMIPPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolInUse.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolInUse.setDescription('Total number of used addresses in this pool entry.')
jnxMbgSMIPPoolUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 1, 1, 7), Unsigned32()).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSMIPPoolUtil.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolUtil.setDescription('Percentage utilization for this pool entry.')
jnxMbgSMIPPoolThresholdPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdPoolName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdPoolName.setDescription('The name which identifies the address pool on the mobile-gateway for which the threshold was exceeded.')
jnxMbgSMIPPoolThresholdLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdLSName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdLSName.setDescription('The name which identifies the logical-system on the mobile-gateway in which the address pool threshold was exceeded.')
jnxMbgSMIPPoolThresholdRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdRIName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdRIName.setDescription('The name which identifies the routing instance on the mobile-gateway in which the address pool threshold was exceeded.')
jnxMbgSMIPPoolConfiguredThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 4), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolConfiguredThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolConfiguredThreshold.setDescription('The threshold value configured for an address pool on the mobile gateway exceeding which a notification is generated.')
jnxMbgSMIPPoolCurrentThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 5), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrentThreshold.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrentThreshold.setDescription('The current threshold value for an address pool on the mobile gateway. This can be equal to or greater than the configured threshold value.')
jnxMbgSMIPPoolMMPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 6), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMPoolName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMPoolName.setDescription('The name which identifies the address pool on the mobile-gateway which underwent a change in the maintenance-mode state.')
jnxMbgSMIPPoolMMLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMLSName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMLSName.setDescription('The name which identifies the logical-system on the mobile-gateway which underwent a change in the maintenance-mode state.')
jnxMbgSMIPPoolMMRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 8), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMRIName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMRIName.setDescription('The name which identifies the routing instance on the mobile-gateway which underwent a change in the maintenance-mode state.')
jnxMbgSMIPPoolPrevMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolPrevMMState.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolPrevMMState.setDescription('A string that indicates the maintenance-mode state .')
jnxMbgSMIPPoolNewMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolNewMMState.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolNewMMState.setDescription('A string that indicates the maintenance-mode state .')
jnxMbgSMIPRangeHiThresRangeName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 11), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresRangeName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresRangeName.setDescription("The name which identifies the address pool's range on the mobile-gateway for which the threshold was exceeded.")
jnxMbgSMIPRangeHiThresPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 12), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresPoolName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiThresPoolName.setDescription('The name which identifies the address pool on the mobile-gateway, whose range threshold was exceeded.')
jnxMbgSMIPRangeHiLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 13), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiLSName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiLSName.setDescription('The name which identifies the logical-system on the mobile-gateway in which the address range threshold was exceeded.')
jnxMbgSMIPRangeHiRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 14), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiRIName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiRIName.setDescription('The name which identifies the routing instance on the mobile-gateway in which the address range threshold was exceeded.')
jnxMbgSMIPRangeHiCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 15), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCfgThres.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCfgThres.setDescription('The threshold value configured for an address pool range on the mobile gateway exceeding which a notification is generated.')
jnxMbgSMIPRangeHiCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 16), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCurrUtil.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHiCurrUtil.setDescription('The current threshold value for an address pool range on the mobile gateway. This can be equal to or greater than the configured threshold value.')
jnxMbgSMIPRangeLowThresRangeName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 17), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRangeName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRangeName.setDescription("The name which identifies the address pool's range on the mobile-gateway for which the low threshold was reached.")
jnxMbgSMIPRangeLowThresPoolName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 18), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresPoolName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresPoolName.setDescription('The name which identifies the address pool on the mobile-gateway, whose range low threshold was reached.')
jnxMbgSMIPRangeLowLSName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 19), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowLSName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowLSName.setDescription('The name which identifies the logical-system on the mobile-gateway in which the address range low threshold was reached.')
jnxMbgSMIPRangeLowRIName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 20), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowRIName.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowRIName.setDescription('The name which identifies the routing instance on the mobile-gateway in which the address range low threshold was reached.')
jnxMbgSMIPRangeLowCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 21), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCfgThres.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCfgThres.setDescription('The threshold value configured for an address pool range on the mobile gateway reaching which a notification is generated.')
jnxMbgSMIPRangeLowCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 22), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCurrUtil.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowCurrUtil.setDescription('The current threshold value for an address pool range on the mobile gateway. This can be equal to or greater than the configured threshold value.')
jnxMbgSMIPPoolHTCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 23), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolHTCfgThres.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolHTCfgThres.setDescription('The threshold value configured for an address pool on the mobile gateway exceeding which a notification is generated.')
jnxMbgSMIPPoolCurrUtil = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 24), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrUtil.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolCurrUtil.setDescription('The current utilization value for an address pool on the mobile gateway. This can be equal to or greater than the configured threshold value.')
jnxMbgSMIPPoolLTCfgThres = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 1, 2, 25), Unsigned32()).setUnits('percent').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSMIPPoolLTCfgThres.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolLTCfgThres.setDescription('The threshold value configured for an address pool on the mobile gateway reaching which a notification is generated.')
jnxMbgSMIPPoolThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 1)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolConfiguredThreshold"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrentThreshold"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdExceeded.setStatus('deprecated')
if mibBuilder.loadTexts: jnxMbgSMIPPoolThresholdExceeded.setDescription('This notification signifies that the number of addresses allocated from a given address pool has exceeded a pre-configured threshold value.')
jnxMbgSMIPPoolMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 2)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolMMRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolNewMMState"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMStateChange.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolMMStateChange.setDescription('This notification indicates that the pool name indicated by LS-name, RI-name and pool-name undergoes a change in the maintenance-mode state.')
jnxMbgSMIPRangeHighThresExcd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 3)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiThresRangeName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiThresPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeHiCurrUtil"))
if mibBuilder.loadTexts: jnxMbgSMIPRangeHighThresExcd.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeHighThresExcd.setDescription('This notification indicates that the range name that exceeded higher threshold.')
jnxMbgSMIPRangeLowThresRchd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 4)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowThresRangeName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowThresPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPRangeLowCurrUtil"))
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRchd.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPRangeLowThresRchd.setDescription('This notification indicates that the range name that reached lower threshold.')
jnxMbgSMIPPoolHighThresExcd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 5)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolHTCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrUtil"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolHighThresExcd.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolHighThresExcd.setDescription('This notification signifies that the number of addresses allocated from a given address pool has exceeded a pre-configured threshold value.')
jnxMbgSMIPPoolLowThresRchd = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 6)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdPoolName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdLSName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolThresholdRIName"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolLTCfgThres"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgSMIPPoolCurrUtil"))
if mibBuilder.loadTexts: jnxMbgSMIPPoolLowThresRchd.setStatus('current')
if mibBuilder.loadTexts: jnxMbgSMIPPoolLowThresRchd.setDescription('This notification signifies that the number of addresses allocated from a given address pool has reached the lower threshold value.')
jnxMbgIPPoolExhausted = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 5, 0, 7)).setObjects(("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolLogicalSystem"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolRoutingInstance"), ("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", "jnxMbgIPPoolName"))
if mibBuilder.loadTexts: jnxMbgIPPoolExhausted.setStatus('current')
if mibBuilder.loadTexts: jnxMbgIPPoolExhausted.setDescription('This notification signifies that the given pool has exhausted all its addresses and there are no free addresses left.')
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SM-IP-POOL-MIB", jnxMbgSMIPPoolConfiguredThreshold=jnxMbgSMIPPoolConfiguredThreshold, jnxMbgSMIPPoolObjects=jnxMbgSMIPPoolObjects, jnxMbgIPPoolInUse=jnxMbgIPPoolInUse, jnxMbgSMIPPoolPrevMMState=jnxMbgSMIPPoolPrevMMState, jnxMbgSMIPRangeLowLSName=jnxMbgSMIPRangeLowLSName, jnxMbgSMIPPoolHTCfgThres=jnxMbgSMIPPoolHTCfgThres, jnxMbgSMIPRangeLowCurrUtil=jnxMbgSMIPRangeLowCurrUtil, jnxMbgSMIPRangeHiThresPoolName=jnxMbgSMIPRangeHiThresPoolName, jnxMbgSMIPPoolFree=jnxMbgSMIPPoolFree, jnxMbgIPPoolLogicalSystem=jnxMbgIPPoolLogicalSystem, jnxMbgSMIPPoolUtil=jnxMbgSMIPPoolUtil, jnxMbgIPPoolId=jnxMbgIPPoolId, jnxMbgIPPoolRangeUtil=jnxMbgIPPoolRangeUtil, jnxMbgSMIPPoolMMLSName=jnxMbgSMIPPoolMMLSName, jnxMbgSMIPRangeLowThresRchd=jnxMbgSMIPRangeLowThresRchd, jnxMbgIPPoolExhausted=jnxMbgIPPoolExhausted, jnxMbgSMIPPoolTable=jnxMbgSMIPPoolTable, jnxMbgSMIPRangeHiLSName=jnxMbgSMIPRangeHiLSName, jnxMbgIPPoolRangeType=jnxMbgIPPoolRangeType, jnxMobileGatewayPgwSMIPPoolMib=jnxMobileGatewayPgwSMIPPoolMib, jnxMbgIPPoolRoutingInstance=jnxMbgIPPoolRoutingInstance, jnxMbgSMIPPoolEntry=jnxMbgSMIPPoolEntry, jnxMbgSMIPRangeLowRIName=jnxMbgSMIPRangeLowRIName, jnxMbgIPPoolRangeTable=jnxMbgIPPoolRangeTable, jnxMbgSMIPPoolLTCfgThres=jnxMbgSMIPPoolLTCfgThres, jnxMbgSMIPRangeHighThresExcd=jnxMbgSMIPRangeHighThresExcd, jnxMbgIPPoolFree=jnxMbgIPPoolFree, jnxMbgSMIPPoolRoutingInstance=jnxMbgSMIPPoolRoutingInstance, jnxMbgSMIPPoolMMPoolName=jnxMbgSMIPPoolMMPoolName, jnxMbgSMIPRangeLowThresRangeName=jnxMbgSMIPRangeLowThresRangeName, jnxMbgIPPoolTable=jnxMbgIPPoolTable, jnxMbgSMIPPoolMMRIName=jnxMbgSMIPPoolMMRIName, jnxMbgIPPoolName=jnxMbgIPPoolName, jnxMbgIPPoolUtil=jnxMbgIPPoolUtil, jnxMbgIPPoolRangeName=jnxMbgIPPoolRangeName, jnxMbgSMIPRangeHiCfgThres=jnxMbgSMIPRangeHiCfgThres, jnxMbgSMIPPoolNewMMState=jnxMbgSMIPPoolNewMMState, jnxMbgSMIPPoolThresholdExceeded=jnxMbgSMIPPoolThresholdExceeded, jnxMbgIPPoolType=jnxMbgIPPoolType, jnxMbgSMIPPoolType=jnxMbgSMIPPoolType, jnxMbgSMIPPoolHighThresExcd=jnxMbgSMIPPoolHighThresExcd, jnxMbgSMIPPoolNotificationVars=jnxMbgSMIPPoolNotificationVars, jnxMbgSMIPPoolCurrentThreshold=jnxMbgSMIPPoolCurrentThreshold, jnxMbgSMIPPoolThresholdLSName=jnxMbgSMIPPoolThresholdLSName, jnxMbgSMIPPoolLogicalSystem=jnxMbgSMIPPoolLogicalSystem, jnxMbgSMIPPoolInUse=jnxMbgSMIPPoolInUse, jnxMbgSMIPPoolMMStateChange=jnxMbgSMIPPoolMMStateChange, jnxMbgSMIPPoolLowThresRchd=jnxMbgSMIPPoolLowThresRchd, jnxMbgSMIPRangeHiCurrUtil=jnxMbgSMIPRangeHiCurrUtil, jnxMbgSMIPRangeLowCfgThres=jnxMbgSMIPRangeLowCfgThres, jnxMbgSMIPRangeHiThresRangeName=jnxMbgSMIPRangeHiThresRangeName, jnxMbgIPPoolRangeEntry=jnxMbgIPPoolRangeEntry, jnxMbgSMIPRangeLowThresPoolName=jnxMbgSMIPRangeLowThresPoolName, PYSNMP_MODULE_ID=jnxMobileGatewayPgwSMIPPoolMib, jnxMbgSMIPPoolName=jnxMbgSMIPPoolName, jnxMbgSMIPPoolThresholdPoolName=jnxMbgSMIPPoolThresholdPoolName, jnxMbgSMIPPoolThresholdRIName=jnxMbgSMIPPoolThresholdRIName, jnxMbgSMIPPoolCurrUtil=jnxMbgSMIPPoolCurrUtil, jnxMbgSMIPRangeHiRIName=jnxMbgSMIPRangeHiRIName, jnxMbgSMIPPoolNotifications=jnxMbgSMIPPoolNotifications, jnxMbgIPPoolEntry=jnxMbgIPPoolEntry, jnxMbgIPPoolRangeFree=jnxMbgIPPoolRangeFree, jnxMbgIPPoolRangeInUse=jnxMbgIPPoolRangeInUse)
