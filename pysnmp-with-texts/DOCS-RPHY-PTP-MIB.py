#
# PySNMP MIB module DOCS-RPHY-PTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-RPHY-PTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:53:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
IfDirection, = mibBuilder.importSymbols("DOCS-IF3-MIB", "IfDirection")
docsRphyRpdDevInfoUniqueId, = mibBuilder.importSymbols("DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId")
IANAPhysicalClass, = mibBuilder.importSymbols("IANA-ENTITY-MIB", "IANAPhysicalClass")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ifIndex, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress, InetPortNumber, InetVersion, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber", "InetVersion", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, ModuleIdentity, ObjectIdentity, Integer32, NotificationType, iso, Counter64, MibIdentifier, Unsigned32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Integer32", "NotificationType", "iso", "Counter64", "MibIdentifier", "Unsigned32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits")
AutonomousType, MacAddress, DateAndTime, DisplayString, TimeStamp, TruthValue, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "MacAddress", "DateAndTime", "DisplayString", "TimeStamp", "TruthValue", "PhysAddress", "TextualConvention")
UUIDorZero, = mibBuilder.importSymbols("UUID-TC-MIB", "UUIDorZero")
docsRphyPtpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32))
docsRphyPtpMib.setRevisions(('2017-04-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: docsRphyPtpMib.setRevisionsDescriptions(('Initial version, created by R-OSSI-N-17.1721-3.',))
if mibBuilder.loadTexts: docsRphyPtpMib.setLastUpdated('201704130000Z')
if mibBuilder.loadTexts: docsRphyPtpMib.setOrganization('Cable Television Laboratories, Inc')
if mibBuilder.loadTexts: docsRphyPtpMib.setContactInfo(' Postal: Cable Television Laboratories, Inc. 400 Centennial Parkway Louisville, Colorado 80027-1266 U.S.A. Phone: +1 303-661-9100 Fax: +1 303-661-9199 E-mail: mibs@cablelabs.com')
if mibBuilder.loadTexts: docsRphyPtpMib.setDescription('This MIB module contains the status and reporting objects for the Remote PHY CCAP Core and RPD PTP management. Copyright 2017 Cable Television Laboratories, Inc. All rights reserved.')
docsRphyPtpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 0))
docsRphyPtpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1))
docsRphyPtpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2))
docsRphyPtpRpdMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1))
docsRphyPtpCcapMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2))
docsRphyPtpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 1))
docsRphyPtpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2))
docsRphyPtpCcapDefaultDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1))
docsRphyPtpCcapDefaultDataSetTwoStepFlag = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetTwoStepFlag.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetTwoStepFlag.setDescription('This attribute specifies whether the Two Step process is used (i.e., the clock is a two-step clock).')
docsRphyPtpCcapDefaultDataSetClockIdentity = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetClockIdentity.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetClockIdentity.setDescription('This attribute specifies the default Dataset clock identity.')
docsRphyPtpCcapDefaultDataSetPriority1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority1.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority1.setDescription('This attribute specifies the default Dataset clock Priority1. Lower values take precedence.')
docsRphyPtpCcapDefaultDataSetPriority2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority2.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetPriority2.setDescription('This attribute specifies the default Dataset clock Priority2. Lower values take precedence.')
docsRphyPtpCcapDefaultDataSetSlaveOnly = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetSlaveOnly.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetSlaveOnly.setDescription('This attribute specifies whether the SlaveOnly flag is set.')
docsRphyPtpCcapDefaultDataSetQualityClass = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityClass.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityClass.setDescription('This attribute of an ordinary or boundary clock denotes the traceability of the time or frequency distributed by the grandmaster clock. See section 7.6.2.4 in [IEEE 1588].')
docsRphyPtpCcapDefaultDataSetQualityAccuracy = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityAccuracy.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityAccuracy.setDescription('This attribute characterizes a clock for the purpose of the best master clock (BMC) algorithm. See section 7.6.2.5 in [IEEE 1588].')
docsRphyPtpCcapDefaultDataSetQualityOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapDefaultDataSetQualityOffset.setDescription('This attribute is the offset, scaled, logarithmic representation of the clock variance. See Section 7.6.3.5 in [IEEE 1588].')
docsRphyPtpCcapCurrentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2))
docsRphyPtpCcapCurrentDataSetStepsRemoved = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 1), Unsigned32()).setUnits('steps').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetStepsRemoved.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetStepsRemoved.setDescription('This attribute is the number of communication paths traversed between the local clock and the grandmaster clock. The initialization value is 0.')
docsRphyPtpCcapCurrentDataSetOffsetFromMaster = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 2), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetOffsetFromMaster.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetOffsetFromMaster.setDescription('This attribute is an implementation-specific representation of the current value of the time difference between a master and a slave as computed by the slave.')
docsRphyPtpCcapCurrentDataSetMeanPathDelay = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 2, 3), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetMeanPathDelay.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCurrentDataSetMeanPathDelay.setDescription('This attribute is an implementation-specific representation of the current value of the mean propagation time between a master and slave clock as computed by the slave. Zero means that the path delay is unavailable.')
docsRphyPtpCcapParentDataSet = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3))
docsRphyPtpCcapParentDataSetParentClockId = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentClockId.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentClockId.setDescription('This attribute is the clock identifier of the clock port on the master that issues the Sync messages used in synchronizing this clock.')
docsRphyPtpCcapParentDataSetParentPortNumber = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentPortNumber.setDescription('This attribute is the port number of the clock port on the master that issues the Sync messages used in synchronizing this clock.')
docsRphyPtpCcapParentDataSetParentStats = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentStats.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetParentStats.setDescription('This attribute is set to True if the clock has a port in the slave state and the clock has computed statistically valid estimates of the ClockOffset Scaled Log Variance and the Clock PhaseChangeRate. If either the ClockOffset Scaled Log Variance or the Clock PhaseChangeRate is not computed, then the CCAP core MUST set the value of ParentStats to false.')
docsRphyPtpCcapParentDataSetClockOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 4), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetClockOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetClockOffset.setDescription("This attribute represents the value of the observed Parent Offset Scaled Log Variance, which is an estimate of the parent clock's PTP variance as observed by the slave clock. The computation of this value is optional, but if not computed, the value of parentStats is FALSE. The initialization value of ClockOffset is 0xFFFF.")
docsRphyPtpCcapParentDataSetPhaseChangeRate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 5), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetPhaseChangeRate.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetPhaseChangeRate.setDescription("This attribute represents the value of Phase Change Rate, which is an estimate of the parent clock's phase change rate as observed by the slave clock. If the estimate exceeds the capacity of its data type, this value is set to 0x7FFF FFFF. A positive sign indicates that the parent clock's phase change rate is greater than the rate of the slave clock. The computation of this value is optional, but if not computed,the value of parentStats is FALSE.")
docsRphyPtpCcapParentDataSetGmClockIdentity = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmClockIdentity.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmClockIdentity.setDescription('This attribute represents the clock Identity of the grandmaster clock.')
docsRphyPtpCcapParentDataSetGmPriority1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority1.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority1.setDescription('This attribute represents the priority1 of the grandmaster clock. Lower values take precedence.')
docsRphyPtpCcapParentDataSetGmPriority2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority2.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmPriority2.setDescription('This attribute represents the priority2 of the grandmaster clock. Lower values take precedence.')
docsRphyPtpCcapParentDataSetGmQualityClass = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityClass.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityClass.setDescription('This attribute is the clock class for the grandmaster clock. The clock class attribute of an ordinary or boundary clock denotes the traceability of the time or frequency distributed by the grandmaster clock. See section 7.6.2.4 in [IEEE 1588].')
docsRphyPtpCcapParentDataSetGmQualityAccuracy = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityAccuracy.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityAccuracy.setDescription('This attribute characterizes the grandmaster clock for the purpose of the best master clock (BMC) algorithm. See section 7.6.2.5 in [IEEE 1588].')
docsRphyPtpCcapParentDataSetGmQualityOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 3, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapParentDataSetGmQualityOffset.setDescription('This attribute represents the offset, scaled, logarithmic representation of the grandmaster clock variance. See Section 7.6.3.5 in [IEEE 1588].')
docsRphyPtpCcapTimeProperties = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4))
docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid.setDescription('This attribute represents the value of currentUtcOffsetValid is TRUE if the currentUtcOffset is known to be correct.')
docsRphyPtpCcapTimePropertiesCurrentUtcOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 2), Integer32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesCurrentUtcOffset.setDescription('This attribute represents the offset between International Atomic Time (TAI) and Universal Coordinated Time (UTC).')
docsRphyPtpCcapTimePropertiesLeap59 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap59.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap59.setDescription('This attribute represents whether or not there are 59 seconds in the last minute of the current UTC day for PTP systems whose epoch is the PTP epoch,; a TRUE value for Leap59 indicates that the last minute of the current UTC day contains 59 seconds.')
docsRphyPtpCcapTimePropertiesLeap61 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap61.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesLeap61.setDescription('This attribute represents whether or not there are 61 seconds in the last minute of the current UTC day for PTP systems whose epoch is the PTP epoch; a TRUE value for Leap61 indicates that the last minute of the current UTC day contains 61 seconds.')
docsRphyPtpCcapTimePropertiesTimeTraceable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeTraceable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeTraceable.setDescription('This attribute represents whether the timescale and the value of currentUtcOffset are traceable to a primary reference. TimeTraceable is TRUE if the timescale and the value of currentUtcOffset are traceable to a primary reference; otherwise, the value is FALSE.')
docsRphyPtpCcapTimePropertiesFreqTraceable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 6), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesFreqTraceable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesFreqTraceable.setDescription('This attribute represents whether the frequency determining the timescale is traceable to a primary reference. The value of FrequencyTraceable is TRUE if the frequency determining the timescale is traceable to a primary reference; otherwise, the value is FALSE.')
docsRphyPtpCcapTimePropertiesPtpTimescale = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesPtpTimescale.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesPtpTimescale.setDescription('This attribute is always true for grandmaster clocks with a clock timescale of PTP.')
docsRphyPtpCcapTimePropertiesTimeSource = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 4, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeSource.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapTimePropertiesTimeSource.setDescription('This attribute represents the source of time used by the grandmaster clock. See Table 7 in [IEEE 1588]. If the time source of the grandmaster clock is unknown, the CCAP Core MUST set the TimeSource value to INTERNAL_OSCILLATOR (0xA0).')
docsRphyPtpCcapPortDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5), )
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetTable.setDescription('See section 8.2.5 in [IEEE 1588] for details of the 1588 port dataset.')
docsRphyPtpCcapPortDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetEntry.setDescription('The conceptual row of docsRphyPtpCcapPortDataSetTable.')
docsRphyPtpCcapPortDataSetPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortNumber.setDescription('This key attribute is the port number of the local clock port. Port numbers 0 and 65,535 are reserved and cannot be used for real clock ports. See [IEEE 1588] for more information. When a PTP clock has N ports, the CCAP Core MUST set the port number to a value in the interval 1..N.')
docsRphyPtpCcapPortDataSetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortState.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetPortState.setDescription('This attribute is the state of this PTP clock port. See Table 8 in [IEEE 1588].')
docsRphyPtpCcapPortDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetMeanPathDelay.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortDataSetMeanPathDelay.setDescription('This attribute is an implementation-specific representation of the current value of the mean propagation time between a master and slave clock as computed by the slave. Zero means that the path delay is unavailable.')
docsRphyPtpCcapClockStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6))
docsRphyPtpCcapClockStatusClockState = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("freerun", 1), ("holdover", 2), ("acquiring", 3), ("freqLocked", 4), ("phaseAligned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusClockState.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusClockState.setDescription('This attribute represents the current state of the clock.')
docsRphyPtpCcapClockStatusLastStateChange = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusLastStateChange.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusLastStateChange.setDescription('This attribute represents the value in TimeTicks when the clock state last changed.')
docsRphyPtpCcapClockStatusPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent for this clock.')
docsRphyPtpCcapClockStatusPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received for this clock.')
docsRphyPtpCcapClockStatusComputedPhaseOffset = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 5), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusComputedPhaseOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusComputedPhaseOffset.setDescription('This attribute specifies the phase offset that the locking algorithm computed in the last 60 sec interval. 0xFFFFFFFF means offset unknown.')
docsRphyPtpCcapClockStatusCounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 6, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapClockStatusCounterDiscontinuityTime.setDescription("This attribute represents the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpCcapCorePtpPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7), )
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusTable.setDescription('CorePtpCoreStatus is an instantiation of the abstract class PtpPortStatus and inherits those common attributes')
docsRphyPtpCcapCorePtpPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusEntry.setDescription('The conceptual row of docsRphyPtpCcapCorePtpPortStatusTable .')
docsRphyPtpCcapCorePtpPortStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPortNumber.setDescription('This key attribute is the port number of the local clock port.')
docsRphyPtpCcapCorePtpPortStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent for this clock port.')
docsRphyPtpCcapCorePtpPortStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received for this clock port.')
docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 7, 1, 4), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime.setDescription("This attribute represents the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpCcapPortMasterClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8), )
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTable.setDescription('This table contains Port MasterClock Status attributes.')
docsRphyPtpCcapPortMasterClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1), ).setIndexNames((0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPortNumber"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterPriority"))
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusEntry.setDescription('The conceptual row of docsRphyPtpCcapPortMasterClockStatusTable.')
docsRphyPtpCcapPortMasterClockStatusMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterPriority.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterPriority.setDescription('This key attribute is the priority of the master clock configured for the PTP template assigned to this PTP clock port. Low numbers are higher priority.')
docsRphyPtpCcapPortMasterClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent to this master for this slave clock port.')
docsRphyPtpCcapPortMasterClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received from this master for this slave clock port.')
docsRphyPtpCcapPortMasterClockStatusMasterClockId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockId.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockId.setDescription('This attribute specifies the clock identifier of this master clock.')
docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber.setDescription("This attribute specifies master clock's port number.")
docsRphyPtpCcapPortMasterClockStatusTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTwoStepFlag.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusTwoStepFlag.setDescription('This attribute specifies whether the Two Step process is used (i.e., the clock is a two-step clock).')
docsRphyPtpCcapPortMasterClockStatusIsBmc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsBmc.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsBmc.setDescription('This attribute represents whether or not this master is the current Best Master Clock (i.e., the master clock currently in use for this slave clock).')
docsRphyPtpCcapPortMasterClockStatusIsMasterConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsMasterConnected.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusIsMasterConnected.setDescription('This attribute is set to TRUE if a signaling session with the master is successfully established. When a slave node receives an announce and a sync message from the master, the CCAP Core SHOULD consider the session to be successfully established.')
docsRphyPtpCcapPortMasterClockStatusStatusDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusStatusDomain.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusStatusDomain.setDescription('This attribute is the PTP master domain.')
docsRphyPtpCcapPortMasterClockStatusFreqOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 10), Unsigned32()).setUnits('PPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusFreqOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusFreqOffset.setDescription('This attribute specifies the frequency offset that the locking algorithm computed per master in the last 60 sec interval. 0xFFFFFFFF means offset unknown.')
docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 2, 8, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime.setDescription("This attribute contains the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpRpdCurrentDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1), )
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetTable.setDescription('See section 8.2.5 in [IEEE 1588] for details of the 1588 port dataset.')
docsRphyPtpRpdCurrentDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetEntry.setDescription('The conceptual row of docsRphyPtpRpdCurrentDataSetTable.')
docsRphyPtpRpdCurrentDataSetStepsRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 1), Unsigned32()).setUnits('steps').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetStepsRemoved.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetStepsRemoved.setDescription('This attribute is the number of communication paths traversed between the local clock and the grandmaster clock. The initialization value is 0.')
docsRphyPtpRpdCurrentDataSetOffsetFromMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 2), Integer32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetOffsetFromMaster.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetOffsetFromMaster.setDescription('This attribute is an implementation-specific representation of the current value of the time difference between a master and a slave as computed by the slave.')
docsRphyPtpRpdCurrentDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 1, 1, 3), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetMeanPathDelay.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdCurrentDataSetMeanPathDelay.setDescription('This attribute is an implementation-specific representation of the current value of the mean propagation time between a master and slave clock as computed by the slave. Zero means that the path delay is unavailable.')
docsRphyPtpRpdClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2), )
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusTable.setDescription('See section 8.2.5 in [IEEE 1588] for details of the 1588 port dataset.')
docsRphyPtpRpdClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"))
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusEntry.setDescription('The conceptual row of docsRphyPtpRpdClockStatusTable.')
docsRphyPtpRpdClockStatusClockState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("freerun", 1), ("holdover", 2), ("acquiring", 3), ("freqLocked", 4), ("phaseAligned", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusClockState.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusClockState.setDescription('This attribute represents the current state of the clock.')
docsRphyPtpRpdClockStatusLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusLastStateChange.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusLastStateChange.setDescription('This attribute represents the value in TimeTicks when the clock state last changed.')
docsRphyPtpRpdClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent for this clock.')
docsRphyPtpRpdClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received for this clock.')
docsRphyPtpRpdClockStatusComputedPhaseOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 5), Unsigned32()).setUnits('Nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusComputedPhaseOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusComputedPhaseOffset.setDescription('This attribute specifies the phase offset that the locking algorithm computed in the last 60 sec interval. 0xFFFFFFFF means offset unknown.')
docsRphyPtpRpdClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 2, 1, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdClockStatusCounterDiscontinuityTime.setDescription("This attribute represents the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpRpdPortDataSetTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3), )
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetTable.setDescription('See section 8.2.5 in [IEEE 1588] for details of the 1588 port dataset.')
docsRphyPtpRpdPortDataSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetPortNumber"))
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetEntry.setDescription('The conceptual row of docsRphyPtpRpdPortDataSetTable.')
docsRphyPtpRpdPortDataSetPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortNumber.setDescription('This key attribute is the port number of the local clock port. Port numbers 0 and 65,535 are reserved and cannot be used for real clock ports. See [IEEE 1588] for more information. When a PTP clock has N ports, the CCAP Core MUST set the port number to a value in the interval 1..N.')
docsRphyPtpRpdPortDataSetPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortState.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetPortState.setDescription('This attribute is the state of this PTP clock port. See Table 8 in [IEEE 1588].')
docsRphyPtpRpdPortDataSetMeanPathDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetMeanPathDelay.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortDataSetMeanPathDelay.setDescription('This attribute is an implementation-specific representation of the current value of the mean propagation time between a master and slave clock as computed by the slave. Zero means that the path delay is unavailable.')
docsRphyPtpRpdPtpPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4), )
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusTable.setDescription('Port Ptp Status is an instantiation of the abstract class PtpPortStatus and inherits those common attributes')
docsRphyPtpRpdPtpPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPortNumber"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex"))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusEntry.setDescription('The conceptual row of docsRphyPtpRpdCorePtpPortStatusTable .')
docsRphyPtpRpdPtpPortStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPortNumber.setDescription('This key attribute is the port number of the local clock port.')
docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex.setDescription('This key attribute is the port number of the local clock port.')
docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 3), Unsigned32())
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex.setDescription('This key attribute is the port number of the local clock port.')
docsRphyPtpRpdPtpPortStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent for this clock port.')
docsRphyPtpRpdPtpPortStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received for this clock port.')
docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 4, 1, 6), TimeStamp()).setUnits('TimeTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime.setDescription("This attribute represents the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpRpdPortMasterClockStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5), )
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTable.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTable.setDescription('This table contains Port MasterClock Status attributes.')
docsRphyPtpRpdPortMasterClockStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1), ).setIndexNames((0, "DOCS-RPHY-MIB", "docsRphyRpdDevInfoUniqueId"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex"), (0, "DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterPriority"))
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusEntry.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusEntry.setDescription('The conceptual row of docsRphyPtpRpdPortMasterClockStatusTable.')
docsRphyPtpRpdPortMasterClockStatusMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterPriority.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterPriority.setDescription('This key attribute is the priority of the master clock configured for the PTP template assigned to this PTP clock port. Low numbers are higher priority.')
docsRphyPtpRpdPortMasterClockStatusPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsSent.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsSent.setDescription('This attribute represents the number of PTP packets sent to this master for this slave clock port.')
docsRphyPtpRpdPortMasterClockStatusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsReceived.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusPacketsReceived.setDescription('This attribute represents the number of PTP packets received from this master for this slave clock port.')
docsRphyPtpRpdPortMasterClockStatusMasterClockId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockId.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockId.setDescription('This attribute specifies the clock identifier of this master clock.')
docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber.setDescription("This attribute specifies master clock's port number.")
docsRphyPtpRpdPortMasterClockStatusTwoStepFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTwoStepFlag.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusTwoStepFlag.setDescription('This attribute specifies whether the Two Step process is used (i.e., the clock is a two-step clock).')
docsRphyPtpRpdPortMasterClockStatusIsBmc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsBmc.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsBmc.setDescription('This attribute represents whether or not this master is the current Best Master Clock (i.e., the master clock currently in use for this slave clock).')
docsRphyPtpRpdPortMasterClockStatusIsMasterConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsMasterConnected.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusIsMasterConnected.setDescription('This attribute is set to TRUE if a signaling session with the master is successfully established. When a slave node receives an announce and a sync message from the master, the CCAP Core SHOULD consider the session to be successfully established.')
docsRphyPtpRpdPortMasterClockStatusStatusDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusStatusDomain.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusStatusDomain.setDescription('This attribute is the PTP master domain.')
docsRphyPtpRpdPortMasterClockStatusFreqOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 10), Unsigned32()).setUnits('PPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusFreqOffset.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusFreqOffset.setDescription('This attribute specifies the frequency offset that the locking algorithm computed per master in the last 60 sec interval. 0xFFFFFFFF means offset unknown.')
docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 1, 1, 5, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime.setDescription("This attribute contains the value of sysUpTime on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object contains a zero value.")
docsRphyPtpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 1, 1)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdGroup"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpCompliance = docsRphyPtpCompliance.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCompliance.setDescription('The compliance statement for CCAP Core and RPD PTP features.')
docsRphyPtpRpdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2, 1)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetStepsRemoved"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetOffsetFromMaster"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdCurrentDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusClockState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusLastStateChange"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusComputedPhaseOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdClockStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetPortState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusIsBmc"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusIsMasterConnected"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusStatusDomain"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusFreqOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpRpdGroup = docsRphyPtpRpdGroup.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpRpdGroup.setDescription('Group of objects implemented in CCAP Cores which represent RPD managed objects derived via the GCP protocol.')
docsRphyPtpCcapCoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 32, 2, 2, 2)).setObjects(("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetClockIdentity"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetPriority1"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetPriority2"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetSlaveOnly"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityClass"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityAccuracy"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapDefaultDataSetQualityOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetStepsRemoved"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetOffsetFromMaster"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCurrentDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetParentStats"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetClockOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetPhaseChangeRate"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmClockIdentity"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmPriority1"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmPriority2"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityClass"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityAccuracy"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapParentDataSetGmQualityOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesCurrentUtcOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesLeap59"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesLeap61"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesTimeTraceable"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesFreqTraceable"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesPtpTimescale"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapTimePropertiesTimeSource"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetPortState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortDataSetMeanPathDelay"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusClockState"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusLastStateChange"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusComputedPhaseOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapClockStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusPacketsSent"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusPacketsReceived"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterClockId"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusTwoStepFlag"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusIsBmc"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusIsMasterConnected"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusStatusDomain"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusFreqOffset"), ("DOCS-RPHY-PTP-MIB", "docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsRphyPtpCcapCoreGroup = docsRphyPtpCcapCoreGroup.setStatus('current')
if mibBuilder.loadTexts: docsRphyPtpCcapCoreGroup.setDescription('Group of objects implemented in CCAP Cores.')
mibBuilder.exportSymbols("DOCS-RPHY-PTP-MIB", docsRphyPtpCcapCurrentDataSetStepsRemoved=docsRphyPtpCcapCurrentDataSetStepsRemoved, docsRphyPtpCcapPortMasterClockStatusTwoStepFlag=docsRphyPtpCcapPortMasterClockStatusTwoStepFlag, docsRphyPtpRpdPortMasterClockStatusMasterPriority=docsRphyPtpRpdPortMasterClockStatusMasterPriority, docsRphyPtpRpdMibObjects=docsRphyPtpRpdMibObjects, docsRphyPtpCcapDefaultDataSetQualityAccuracy=docsRphyPtpCcapDefaultDataSetQualityAccuracy, docsRphyPtpCompliances=docsRphyPtpCompliances, docsRphyPtpCcapClockStatusLastStateChange=docsRphyPtpCcapClockStatusLastStateChange, docsRphyPtpRpdCurrentDataSetMeanPathDelay=docsRphyPtpRpdCurrentDataSetMeanPathDelay, docsRphyPtpCcapParentDataSetGmPriority2=docsRphyPtpCcapParentDataSetGmPriority2, docsRphyPtpRpdPortMasterClockStatusStatusDomain=docsRphyPtpRpdPortMasterClockStatusStatusDomain, docsRphyPtpCcapTimePropertiesLeap59=docsRphyPtpCcapTimePropertiesLeap59, docsRphyPtpCcapTimePropertiesLeap61=docsRphyPtpCcapTimePropertiesLeap61, docsRphyPtpCcapClockStatus=docsRphyPtpCcapClockStatus, docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex=docsRphyPtpRpdPtpPortStatusRpdEnetPortIndex, docsRphyPtpCcapClockStatusComputedPhaseOffset=docsRphyPtpCcapClockStatusComputedPhaseOffset, docsRphyPtpConformance=docsRphyPtpConformance, docsRphyPtpCcapCorePtpPortStatusPortNumber=docsRphyPtpCcapCorePtpPortStatusPortNumber, docsRphyPtpCcapCurrentDataSetOffsetFromMaster=docsRphyPtpCcapCurrentDataSetOffsetFromMaster, docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime=docsRphyPtpCcapCorePtpPortStatusCounterDiscontinuityTime, docsRphyPtpCcapParentDataSetParentStats=docsRphyPtpCcapParentDataSetParentStats, docsRphyPtpObjects=docsRphyPtpObjects, docsRphyPtpCcapDefaultDataSetQualityClass=docsRphyPtpCcapDefaultDataSetQualityClass, docsRphyPtpCcapDefaultDataSetQualityOffset=docsRphyPtpCcapDefaultDataSetQualityOffset, docsRphyPtpRpdPtpPortStatusPortNumber=docsRphyPtpRpdPtpPortStatusPortNumber, docsRphyPtpRpdPortMasterClockStatusTable=docsRphyPtpRpdPortMasterClockStatusTable, docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex=docsRphyPtpRpdPtpPortStatusRpdPtpPortIndex, docsRphyPtpRpdClockStatusClockState=docsRphyPtpRpdClockStatusClockState, docsRphyPtpCcapPortMasterClockStatusMasterPriority=docsRphyPtpCcapPortMasterClockStatusMasterPriority, docsRphyPtpRpdPtpPortStatusPacketsReceived=docsRphyPtpRpdPtpPortStatusPacketsReceived, docsRphyPtpCcapPortMasterClockStatusFreqOffset=docsRphyPtpCcapPortMasterClockStatusFreqOffset, docsRphyPtpRpdCurrentDataSetOffsetFromMaster=docsRphyPtpRpdCurrentDataSetOffsetFromMaster, docsRphyPtpCcapPortMasterClockStatusIsMasterConnected=docsRphyPtpCcapPortMasterClockStatusIsMasterConnected, docsRphyPtpRpdClockStatusPacketsReceived=docsRphyPtpRpdClockStatusPacketsReceived, docsRphyPtpCcapParentDataSetClockOffset=docsRphyPtpCcapParentDataSetClockOffset, docsRphyPtpRpdPortMasterClockStatusIsBmc=docsRphyPtpRpdPortMasterClockStatusIsBmc, docsRphyPtpCompliance=docsRphyPtpCompliance, docsRphyPtpRpdPortDataSetPortNumber=docsRphyPtpRpdPortDataSetPortNumber, docsRphyPtpCcapParentDataSetParentClockId=docsRphyPtpCcapParentDataSetParentClockId, docsRphyPtpCcapClockStatusPacketsSent=docsRphyPtpCcapClockStatusPacketsSent, docsRphyPtpRpdClockStatusCounterDiscontinuityTime=docsRphyPtpRpdClockStatusCounterDiscontinuityTime, docsRphyPtpCcapPortMasterClockStatusIsBmc=docsRphyPtpCcapPortMasterClockStatusIsBmc, docsRphyPtpRpdClockStatusPacketsSent=docsRphyPtpRpdClockStatusPacketsSent, docsRphyPtpCcapParentDataSet=docsRphyPtpCcapParentDataSet, docsRphyPtpCcapCoreGroup=docsRphyPtpCcapCoreGroup, docsRphyPtpCcapPortDataSetTable=docsRphyPtpCcapPortDataSetTable, docsRphyPtpCcapTimePropertiesTimeSource=docsRphyPtpCcapTimePropertiesTimeSource, docsRphyPtpCcapCorePtpPortStatusPacketsReceived=docsRphyPtpCcapCorePtpPortStatusPacketsReceived, docsRphyPtpCcapParentDataSetParentPortNumber=docsRphyPtpCcapParentDataSetParentPortNumber, PYSNMP_MODULE_ID=docsRphyPtpMib, docsRphyPtpCcapTimePropertiesFreqTraceable=docsRphyPtpCcapTimePropertiesFreqTraceable, docsRphyPtpRpdPortMasterClockStatusMasterClockId=docsRphyPtpRpdPortMasterClockStatusMasterClockId, docsRphyPtpRpdClockStatusLastStateChange=docsRphyPtpRpdClockStatusLastStateChange, docsRphyPtpCcapPortMasterClockStatusPacketsSent=docsRphyPtpCcapPortMasterClockStatusPacketsSent, docsRphyPtpCcapDefaultDataSet=docsRphyPtpCcapDefaultDataSet, docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber=docsRphyPtpCcapPortMasterClockStatusMasterClockPortNumber, docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime=docsRphyPtpRpdPtpPortStatusCounterDiscontinuityTime, docsRphyPtpCcapDefaultDataSetPriority2=docsRphyPtpCcapDefaultDataSetPriority2, docsRphyPtpCcapPortMasterClockStatusTable=docsRphyPtpCcapPortMasterClockStatusTable, docsRphyPtpCcapCorePtpPortStatusEntry=docsRphyPtpCcapCorePtpPortStatusEntry, docsRphyPtpGroups=docsRphyPtpGroups, docsRphyPtpRpdPtpPortStatusTable=docsRphyPtpRpdPtpPortStatusTable, docsRphyPtpRpdPortMasterClockStatusFreqOffset=docsRphyPtpRpdPortMasterClockStatusFreqOffset, docsRphyPtpCcapCorePtpPortStatusPacketsSent=docsRphyPtpCcapCorePtpPortStatusPacketsSent, docsRphyPtpRpdPortDataSetEntry=docsRphyPtpRpdPortDataSetEntry, docsRphyPtpCcapPortMasterClockStatusPacketsReceived=docsRphyPtpCcapPortMasterClockStatusPacketsReceived, docsRphyPtpCcapCurrentDataSet=docsRphyPtpCcapCurrentDataSet, docsRphyPtpCcapDefaultDataSetTwoStepFlag=docsRphyPtpCcapDefaultDataSetTwoStepFlag, docsRphyPtpCcapMibObjects=docsRphyPtpCcapMibObjects, docsRphyPtpRpdPortMasterClockStatusTwoStepFlag=docsRphyPtpRpdPortMasterClockStatusTwoStepFlag, docsRphyPtpCcapParentDataSetGmQualityClass=docsRphyPtpCcapParentDataSetGmQualityClass, docsRphyPtpRpdClockStatusEntry=docsRphyPtpRpdClockStatusEntry, docsRphyPtpCcapCurrentDataSetMeanPathDelay=docsRphyPtpCcapCurrentDataSetMeanPathDelay, docsRphyPtpCcapClockStatusCounterDiscontinuityTime=docsRphyPtpCcapClockStatusCounterDiscontinuityTime, docsRphyPtpRpdPortDataSetPortState=docsRphyPtpRpdPortDataSetPortState, docsRphyPtpCcapParentDataSetGmPriority1=docsRphyPtpCcapParentDataSetGmPriority1, docsRphyPtpCcapTimeProperties=docsRphyPtpCcapTimeProperties, docsRphyPtpCcapParentDataSetGmQualityOffset=docsRphyPtpCcapParentDataSetGmQualityOffset, docsRphyPtpRpdCurrentDataSetEntry=docsRphyPtpRpdCurrentDataSetEntry, docsRphyPtpCcapParentDataSetGmClockIdentity=docsRphyPtpCcapParentDataSetGmClockIdentity, docsRphyPtpCcapPortDataSetMeanPathDelay=docsRphyPtpCcapPortDataSetMeanPathDelay, docsRphyPtpRpdPtpPortStatusEntry=docsRphyPtpRpdPtpPortStatusEntry, docsRphyPtpRpdPortDataSetMeanPathDelay=docsRphyPtpRpdPortDataSetMeanPathDelay, docsRphyPtpRpdPtpPortStatusPacketsSent=docsRphyPtpRpdPtpPortStatusPacketsSent, docsRphyPtpCcapTimePropertiesTimeTraceable=docsRphyPtpCcapTimePropertiesTimeTraceable, docsRphyPtpRpdCurrentDataSetTable=docsRphyPtpRpdCurrentDataSetTable, docsRphyPtpRpdPortMasterClockStatusIsMasterConnected=docsRphyPtpRpdPortMasterClockStatusIsMasterConnected, docsRphyPtpMib=docsRphyPtpMib, docsRphyPtpCcapPortMasterClockStatusMasterClockId=docsRphyPtpCcapPortMasterClockStatusMasterClockId, docsRphyPtpCcapPortMasterClockStatusEntry=docsRphyPtpCcapPortMasterClockStatusEntry, docsRphyPtpCcapClockStatusPacketsReceived=docsRphyPtpCcapClockStatusPacketsReceived, docsRphyPtpCcapTimePropertiesCurrentUtcOffset=docsRphyPtpCcapTimePropertiesCurrentUtcOffset, docsRphyPtpCcapPortDataSetPortState=docsRphyPtpCcapPortDataSetPortState, docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber=docsRphyPtpRpdPortMasterClockStatusMasterClockPortNumber, docsRphyPtpRpdCurrentDataSetStepsRemoved=docsRphyPtpRpdCurrentDataSetStepsRemoved, docsRphyPtpCcapTimePropertiesPtpTimescale=docsRphyPtpCcapTimePropertiesPtpTimescale, docsRphyPtpRpdClockStatusComputedPhaseOffset=docsRphyPtpRpdClockStatusComputedPhaseOffset, docsRphyPtpCcapParentDataSetGmQualityAccuracy=docsRphyPtpCcapParentDataSetGmQualityAccuracy, docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid=docsRphyPtpCcapTimePropertiesCurrentUtcOffsetValid, docsRphyPtpRpdPortDataSetTable=docsRphyPtpRpdPortDataSetTable, docsRphyPtpCcapDefaultDataSetPriority1=docsRphyPtpCcapDefaultDataSetPriority1, docsRphyPtpRpdPortMasterClockStatusEntry=docsRphyPtpRpdPortMasterClockStatusEntry, docsRphyPtpCcapParentDataSetPhaseChangeRate=docsRphyPtpCcapParentDataSetPhaseChangeRate, docsRphyPtpCcapCorePtpPortStatusTable=docsRphyPtpCcapCorePtpPortStatusTable, docsRphyPtpRpdPortMasterClockStatusPacketsReceived=docsRphyPtpRpdPortMasterClockStatusPacketsReceived, docsRphyPtpCcapDefaultDataSetClockIdentity=docsRphyPtpCcapDefaultDataSetClockIdentity, docsRphyPtpNotifications=docsRphyPtpNotifications, docsRphyPtpRpdPortMasterClockStatusPacketsSent=docsRphyPtpRpdPortMasterClockStatusPacketsSent, docsRphyPtpCcapClockStatusClockState=docsRphyPtpCcapClockStatusClockState, docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime=docsRphyPtpCcapPortMasterClockStatusCounterDiscontinuityTime, docsRphyPtpCcapPortDataSetEntry=docsRphyPtpCcapPortDataSetEntry, docsRphyPtpCcapPortDataSetPortNumber=docsRphyPtpCcapPortDataSetPortNumber, docsRphyPtpCcapPortMasterClockStatusStatusDomain=docsRphyPtpCcapPortMasterClockStatusStatusDomain, docsRphyPtpCcapDefaultDataSetSlaveOnly=docsRphyPtpCcapDefaultDataSetSlaveOnly, docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime=docsRphyPtpRpdPortMasterClockStatusCounterDiscontinuityTime, docsRphyPtpRpdGroup=docsRphyPtpRpdGroup, docsRphyPtpRpdClockStatusTable=docsRphyPtpRpdClockStatusTable)
