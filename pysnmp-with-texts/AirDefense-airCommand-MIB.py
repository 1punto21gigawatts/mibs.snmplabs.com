#
# PySNMP MIB module AirDefense-airCommand-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AirDefense-airCommand-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:33:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, enterprises, TimeTicks, iso, Bits, Integer32, ModuleIdentity, Gauge32, ObjectIdentity, MibIdentifier, NotificationType, IpAddress, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "enterprises", "TimeTicks", "iso", "Bits", "Integer32", "ModuleIdentity", "Gauge32", "ObjectIdentity", "MibIdentifier", "NotificationType", "IpAddress", "Counter64", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
airDefense = MibIdentifier((1, 3, 6, 1, 4, 1, 13416))
airDefenseProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 13416, 1))
airCommand = MibIdentifier((1, 3, 6, 1, 4, 1, 13416, 1, 1))
airCommandEventTable = MibTable((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCommandEventTable.setStatus('current')
if mibBuilder.loadTexts: airCommandEventTable.setDescription('Table of airCommand Events')
airCommandEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1, 1), ).setIndexNames((0, "AirDefense-airCommand-MIB", "airCommandEventId"))
if mibBuilder.loadTexts: airCommandEventEntry.setStatus('current')
if mibBuilder.loadTexts: airCommandEventEntry.setDescription('')
airCommandEventId = MibTableColumn((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCommandEventId.setStatus('current')
if mibBuilder.loadTexts: airCommandEventId.setDescription('Unique Identifier for the Event')
airCommandEventPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("low", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCommandEventPriority.setStatus('current')
if mibBuilder.loadTexts: airCommandEventPriority.setDescription('The priority of Event that Occurred')
airCommandEventDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCommandEventDescriptor.setStatus('current')
if mibBuilder.loadTexts: airCommandEventDescriptor.setDescription('Information to Provide Detail Regarding the Event')
airCommandEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 13416, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: airCommandEventCount.setStatus('current')
if mibBuilder.loadTexts: airCommandEventCount.setDescription('Count of the Number of Events of this Priority since the Last Update')
airCommandAlarm = NotificationType((1, 3, 6, 1, 4, 1, 13416, 1, 1, 2)).setObjects(("AirDefense-airCommand-MIB", "airCommandEventPriority"), ("AirDefense-airCommand-MIB", "airCommandEventDescriptor"), ("AirDefense-airCommand-MIB", "airCommandEventCount"))
if mibBuilder.loadTexts: airCommandAlarm.setStatus('current')
if mibBuilder.loadTexts: airCommandAlarm.setDescription('AirCommand Alarms with ID,Priority and Description')
mibBuilder.exportSymbols("AirDefense-airCommand-MIB", airDefenseProducts=airDefenseProducts, airCommandEventPriority=airCommandEventPriority, airCommandEventDescriptor=airCommandEventDescriptor, airCommandEventId=airCommandEventId, airCommand=airCommand, airCommandEventEntry=airCommandEventEntry, airCommandEventTable=airCommandEventTable, airCommandEventCount=airCommandEventCount, airCommandAlarm=airCommandAlarm, airDefense=airDefense)
