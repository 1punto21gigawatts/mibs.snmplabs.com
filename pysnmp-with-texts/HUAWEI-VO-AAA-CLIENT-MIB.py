#
# PySNMP MIB module HUAWEI-VO-AAA-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VO-AAA-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
voice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "voice")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Unsigned32, TimeTicks, iso, MibIdentifier, Bits, Counter32, NotificationType, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "TimeTicks", "iso", "MibIdentifier", "Bits", "Counter32", "NotificationType", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwVoiceAAAClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9))
hwVoiceAAAClientMIB.setRevisions(('2004-04-08 13:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwVoiceAAAClientMIB.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: hwVoiceAAAClientMIB.setLastUpdated('200410200000Z')
if mibBuilder.loadTexts: hwVoiceAAAClientMIB.setOrganization('Huawei-3COM Technologies Co., Ltd.')
if mibBuilder.loadTexts: hwVoiceAAAClientMIB.setContactInfo('PLAT Team Huawei 3Com Technologies co.,Ltd. Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei-3com.com Zip:100085')
if mibBuilder.loadTexts: hwVoiceAAAClientMIB.setDescription(' ')
class EntryStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4))

hwVoAAAClientObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1))
hwVoAAAClientCfgObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1))
hwVoAAAEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAEnable.setDescription('Whether or not the AAA service is enabled ')
hwVoAAAClienttype = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("huawei", 1), ("nonstandard-compatible-vsa", 2), ("nonstandard-compatible-overload", 3), ("ietf-rfc", 4))).clone('huawei')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAClienttype.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClienttype.setDescription('The AAA client type of this gateway.')
hwVoAAAGwAuthenDidH323 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAuthenDidH323.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAuthenDidH323.setDescription('Whether or not the Authentication of this gateway is enabled. ')
hwVoAAAGwAuthorDidH323 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAuthorDidH323.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAuthorDidH323.setDescription('Whether or not the Authorization of this gateway is enabled.When hwVoAAAGwAuthenDidH323 is disabled,this object cannot be set to enable . ')
hwVoAAAGwAccounting = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAccounting.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAccounting.setDescription('Whether or not the Accounting of this gateway is enabled.')
hwVoAAAGwAccountMethod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("start-ack", 2), ("start-no-ack", 3), ("stop-only", 4))).clone('start-no-ack')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAccountMethod.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAccountMethod.setDescription('Set the sending mode of accounting packets of this gateway none No accounting start-ack send start accounting packets waiting the answer. start-no-ack send start and stop accounting packets without waiting answer. stop-only send stop accounting packets waiting the answer. ')
hwVoAAAClientLocalUserTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 2), )
if mibBuilder.loadTexts: hwVoAAAClientLocalUserTable.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClientLocalUserTable.setDescription('The table contains the information of the AAA client local user .')
hwVoAAAClientLocalUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 2, 1), ).setIndexNames((0, "HUAWEI-VO-AAA-CLIENT-MIB", "hwVoAAAClientLocalUserName"))
if mibBuilder.loadTexts: hwVoAAAClientLocalUserEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClientLocalUserEntry.setDescription('The information regarding a single AAA client local user.')
hwVoAAAClientLocalUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAAAClientLocalUserName.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClientLocalUserName.setDescription('The name of the AAA client local user. ')
hwVoAAAClientLocalUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAClientLocalUserPassword.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClientLocalUserPassword.setDescription('The password of the AAA client local user.')
hwVoAAAClientLocalRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 2, 1, 3), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAClientLocalRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAClientLocalRowStatus.setDescription('This object is used to create a new row or modify or delete an existing row in this table. ')
hwVoAAAGwAccessNumberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3), )
if mibBuilder.loadTexts: hwVoAAAGwAccessNumberTable.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAccessNumberTable.setDescription('The table contains the information of the AAA access number .')
hwVoAAAGwAccessNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1), ).setIndexNames((0, "HUAWEI-VO-AAA-CLIENT-MIB", "hwVoAAAGwAccessnumber"))
if mibBuilder.loadTexts: hwVoAAAGwAccessNumberEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAccessNumberEntry.setDescription('The information regarding a single access number.')
hwVoAAAGwAccessnumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAAAGwAccessnumber.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAccessnumber.setDescription("The access number of the AAA client . In this string only character from '0' to '9' can present.")
hwVoAAAGwAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAuthentication.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAuthentication.setDescription('Whether or not the Authentication of this access number is enabled.')
hwVoAAAGwAuthorization = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwAuthorization.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwAuthorization.setDescription('Whether or not the Authorization of this access number is enabled.When hwVoAAAGwAuthentication of this access number is disabled,this object cannot be set to enable .')
hwVoAAAGwProcessConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("callernumber", 1), ("cardnumber", 2))).clone('cardnumber')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwProcessConfig.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwProcessConfig.setDescription('The dial process type of this access number .')
hwVoAAAGwCardDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwCardDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwCardDigit.setDescription('The card number digit of this access number.')
hwVoAAAGwPasswordDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwPasswordDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwPasswordDigit.setDescription('The password digit of this access number. ')
hwVoAAAGwRedialtimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwRedialtimes.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwRedialtimes.setDescription('The redial times of this access number. ')
hwVoAAAGwRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 9, 1, 3, 1, 8), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAAAGwRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwVoAAAGwRowStatus.setDescription('This object is used to create a new row or modify or delete an existing row in this table. ')
mibBuilder.exportSymbols("HUAWEI-VO-AAA-CLIENT-MIB", hwVoAAAGwAccessNumberTable=hwVoAAAGwAccessNumberTable, hwVoAAAGwRedialtimes=hwVoAAAGwRedialtimes, hwVoAAAClienttype=hwVoAAAClienttype, hwVoAAAClientLocalUserPassword=hwVoAAAClientLocalUserPassword, hwVoAAAGwAuthentication=hwVoAAAGwAuthentication, hwVoAAAGwCardDigit=hwVoAAAGwCardDigit, hwVoAAAGwAccountMethod=hwVoAAAGwAccountMethod, hwVoAAAGwRowStatus=hwVoAAAGwRowStatus, hwVoAAAGwAccounting=hwVoAAAGwAccounting, hwVoAAAGwAuthorDidH323=hwVoAAAGwAuthorDidH323, hwVoAAAClientObjects=hwVoAAAClientObjects, hwVoAAAGwAuthenDidH323=hwVoAAAGwAuthenDidH323, hwVoAAAClientLocalUserTable=hwVoAAAClientLocalUserTable, hwVoiceAAAClientMIB=hwVoiceAAAClientMIB, hwVoAAAGwProcessConfig=hwVoAAAGwProcessConfig, hwVoAAAClientLocalUserEntry=hwVoAAAClientLocalUserEntry, hwVoAAAEnable=hwVoAAAEnable, hwVoAAAClientLocalUserName=hwVoAAAClientLocalUserName, hwVoAAAGwAuthorization=hwVoAAAGwAuthorization, hwVoAAAGwAccessNumberEntry=hwVoAAAGwAccessNumberEntry, hwVoAAAClientCfgObjects=hwVoAAAClientCfgObjects, hwVoAAAGwAccessnumber=hwVoAAAGwAccessnumber, EntryStatus=EntryStatus, hwVoAAAGwPasswordDigit=hwVoAAAGwPasswordDigit, PYSNMP_MODULE_ID=hwVoiceAAAClientMIB, hwVoAAAClientLocalRowStatus=hwVoAAAClientLocalRowStatus)
