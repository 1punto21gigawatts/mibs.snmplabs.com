#
# PySNMP MIB module CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:08:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
VlanIndexOrZero, = mibBuilder.importSymbols("CISCO-PRIVATE-VLAN-MIB", "VlanIndexOrZero")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Bits, Gauge32, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, Counter64, NotificationType, MibIdentifier, ModuleIdentity, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Gauge32", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "Counter64", "NotificationType", "MibIdentifier", "ModuleIdentity", "TimeTicks", "ObjectIdentity")
StorageType, TextualConvention, DisplayString, RowStatus, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "DisplayString", "RowStatus", "DateAndTime")
ciscoNetworkVirtualizationOverlayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 820))
ciscoNetworkVirtualizationOverlayMIB.setRevisions(('2015-01-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoNetworkVirtualizationOverlayMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoNetworkVirtualizationOverlayMIB.setLastUpdated('201501260000Z')
if mibBuilder.loadTexts: ciscoNetworkVirtualizationOverlayMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoNetworkVirtualizationOverlayMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoNetworkVirtualizationOverlayMIB.setDescription('This MIB module is for managing Network Virtualization Overlay functionality on Cisco devices. The following terms are used throughout this MIB: NVE Network Virtualization Endpoint NVGRE Network Virtualization using Generic Routing Encapsulation NVO Network Virtualization Overlay VLAN Virtual Local Area Network VNet Virtual Network VNI Virtual Network Identifier VXLAN Virtual Extensible LAN')
cnvoMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 0))
cnvoMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 1))
cnvoMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 2))
cnvoNvoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1))
cnvoNvoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1), )
if mibBuilder.loadTexts: cnvoNvoTable.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoTable.setDescription('This table provides network virtualization overlays configured on the system.')
cnvoNvoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoInstanceId"))
if mibBuilder.loadTexts: cnvoNvoEntry.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoEntry.setDescription('An entry containing management information for network virtualization overlay.')
cnvoNvoInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cnvoNvoInstanceId.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoInstanceId.setDescription('A unique number to identify a NVO instance.')
cnvoNvoEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("vxlan", 2), ("nvgre", 3))).clone('vxlan')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnvoNvoEncapType.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoEncapType.setDescription("This object specifies the encapsulation type for the NVO instance. 'unknown' - The read-only value 'unknown' indicates that encapsulation type is none of the following 'vxlan' - encapsulation type is VXLAN 'nvgre' - encapsulation type is NVGRE This object may be modified when the row is active.")
cnvoNvoSourceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnvoNvoSourceInterface.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoSourceInterface.setDescription('This object specifies the Source Interface for the NVO instance. This object may be modified when the row is active.')
cnvoNvoConfiguredVni = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoConfiguredVni.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoConfiguredVni.setDescription('This object indicates the list of VNIs associated with this NVO instance.')
cnvoNvoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnvoNvoStorageType.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoStorageType.setDescription('This object specifies the storage type for this conceptual row.')
cnvoNvoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnvoNvoRowStatus.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoRowStatus.setDescription('This object specifies the status of this conceptual row.')
cnvoVNetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2), )
if mibBuilder.loadTexts: cnvoVNetTable.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetTable.setDescription('This table provides information for virtual networks on the system.')
cnvoVNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoInstanceId"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetLocalVNetId"))
if mibBuilder.loadTexts: cnvoVNetEntry.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetEntry.setDescription('An entry containing status information for a virtual network.')
cnvoVNetLocalVNetId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cnvoVNetLocalVNetId.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetLocalVNetId.setDescription('A unique number to identify a local virtual network.')
cnvoVNetIpMcastAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetIpMcastAddrType.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetIpMcastAddrType.setDescription('This object indicates the type of Internet address to be used as Multicast Group Address.')
cnvoVNetIpMcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetIpMcastAddr.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetIpMcastAddr.setDescription('This object specifies the Internet address to be used as Multicast Group Address. The type of this address is determined by cnvoVNetIpMcastAddrType.')
cnvoVNetVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 4), VlanIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetVlan.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetVlan.setDescription('This object specifies the mapping vlan for the virtual network.')
cnvoVNetArpSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("arpSupON", 1), ("arpSupOFF", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetArpSuppression.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetArpSuppression.setDescription('This object specifies if ARP seppression is turned ON/OFF for the virtual network.')
cnvoVNetReplication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mcast", 1), ("unconf", 2), ("ucastBgp", 3), ("ucastStatic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetReplication.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetReplication.setDescription('This object specifies the replication mode of the virtual network identifier.')
cnvoVNetHostReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("hostReachabilityUnconf", 2), ("dataPlaneL2", 3), ("controlPlaneL3", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetHostReachability.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetHostReachability.setDescription('This object specifies if the virtual network identifier is configured via data plane, control plane or is unconfigured.')
cnvoVNetVniType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("l2", 2), ("l3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetVniType.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetVniType.setDescription('This object specifies the type of the virtual network identifier - unknown, L2 or L3.')
cnvoVNetIpVrfOrBridgeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 9), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cnvoVNetIpVrfOrBridgeDomainName.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetIpVrfOrBridgeDomainName.setDescription('This object specifies the ip vrf (for L3 vni) or bridge-domain name (for L2 vni) virtual network identifier')
cnvoVNetRouterMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 2, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetRouterMacAddr.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetRouterMacAddr.setDescription('This object indicates the hardware MAC of the physical router.')
cnvoPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3), )
if mibBuilder.loadTexts: cnvoPeerTable.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerTable.setDescription('This table provides information of remote peers for virtual network overlay on this system.')
cnvoPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoInstanceId"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerIpAddrType"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerIpAddr"))
if mibBuilder.loadTexts: cnvoPeerEntry.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerEntry.setDescription('An entry containing remote peer information for virtual network overlay.')
cnvoPeerIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cnvoPeerIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerIpAddrType.setDescription('This object indicates the type of Internet address of NVO peer.')
cnvoPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cnvoPeerIpAddr.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerIpAddr.setDescription('This object indicates the Internet address of NVO peer. The type of this address is determined by cnvoPeerIpAddrType.')
cnvoPeerUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoPeerUpTime.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerUpTime.setDescription('This object indicates the time at which the peer became up. This object contains value 0x0000010100000000 when the NVO peer is down.')
cnvoPeerLearningSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("dataPlane", 2), ("controlPlane", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoPeerLearningSourceType.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerLearningSourceType.setDescription('This object indicates the way in which in peer was learnt - either via data plane or control plane.')
cnvoVNetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4), )
if mibBuilder.loadTexts: cnvoVNetStatsTable.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetStatsTable.setDescription('This table provides statistics information of virtual networks on the system.')
cnvoVNetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoInstanceId"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetLocalVNetId"))
if mibBuilder.loadTexts: cnvoVNetStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetStatsEntry.setDescription('An entry containing statistics information for a virtual network.')
cnvoVNetOutUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetOutUnicastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetOutUnicastPackets.setDescription('This object indicates the total number of unicast packets transmitted out of this virtual network.')
cnvoVNetOutUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetOutUnicastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetOutUnicastBytes.setDescription('This object indicates the number of bytes for unicast packet transmitted out of this virtual network.')
cnvoVNetOutMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetOutMulticastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetOutMulticastPackets.setDescription('This object indicates the number of multicast packets transmitted out of this virtual network.')
cnvoVNetOutMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetOutMulticastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetOutMulticastBytes.setDescription('This object indicates the number of bytes for multicast packet transmitted of this virtual network.')
cnvoVNetInUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetInUnicastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetInUnicastPackets.setDescription('This object indicates the number of unicast packets received by this virtual network.')
cnvoVNetInUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetInUnicastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetInUnicastBytes.setDescription('This object indicates the number of bytes for unicast packet received by this virtual network.')
cnvoVNetInMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetInMulticastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetInMulticastPackets.setDescription('This object indicates the number of multicast packets received by this virtual network.')
cnvoVNetInMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoVNetInMulticastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoVNetInMulticastBytes.setDescription('This object indicates the number of bytes for multicast packet received by this virtual network.')
cnvoNvoPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5), )
if mibBuilder.loadTexts: cnvoNvoPeerStatsTable.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerStatsTable.setDescription('This table provides remote peers statistics information for virtual network overlay.')
cnvoNvoPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoInstanceId"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerIpAddrType"), (0, "CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerIpAddr"))
if mibBuilder.loadTexts: cnvoNvoPeerStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerStatsEntry.setDescription('An entry containing statistics information for a particular peer of a virtual network overlay.')
cnvoNvoPeerOutUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerOutUnicastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerOutUnicastPackets.setDescription('This object indicates the number of unicast packets transmitted to the peer.')
cnvoNvoPeerOutUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerOutUnicastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerOutUnicastBytes.setDescription('This object indicates the number of bytes for unicast packet transmitted to the peer.')
cnvoNvoPeerOutMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerOutMulticastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerOutMulticastPackets.setDescription('This object indicates the number of multicast packets transmitted to the peer.')
cnvoNvoPeerOutMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerOutMulticastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerOutMulticastBytes.setDescription('This object indicates the number of bytes for multicast packet transmitted to the peer.')
cnvoNvoPeerInUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerInUnicastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerInUnicastPackets.setDescription('This object indicates the number of unicast packets received from the peer.')
cnvoNvoPeerInUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerInUnicastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerInUnicastBytes.setDescription('This object indicates the number of bytes for unicast packet received from the peer.')
cnvoNvoPeerInMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerInMulticastPackets.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerInMulticastPackets.setDescription('This object indicates the number of multicast packets received from the peer.')
cnvoNvoPeerInMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 820, 1, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnvoNvoPeerInMulticastBytes.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPeerInMulticastBytes.setDescription('This object indicates the number of bytes for multicast packet received from the peer.')
cnvoMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 1))
cnvoMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2))
cnvoMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 1, 1)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVirtualNetworkGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVirtualNetworkStatsGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPerPeerOutUnicastStatsGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPerPeerOutMulticastStatsGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPerPeerInUnicastStatsGroup"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPerPeerInMulticastStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoMIBCompliance = cnvoMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: cnvoMIBCompliance.setDescription('The compliance statement for CISCO-NETWORK-VIRTUALIZATION- OVERLAY-MIB.')
cnvoNvoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 1)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoEncapType"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoSourceInterface"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoConfiguredVni"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoStorageType"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoNvoGroup = cnvoNvoGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoGroup.setDescription('A collection of objects providing NVO information.')
cnvoVirtualNetworkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 2)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetIpMcastAddrType"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetIpMcastAddr"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetVlan"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetArpSuppression"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetReplication"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetHostReachability"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetVniType"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetIpVrfOrBridgeDomainName"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetRouterMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoVirtualNetworkGroup = cnvoVirtualNetworkGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoVirtualNetworkGroup.setDescription('A collection of objects providing VNI status information.')
cnvoPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 3)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerUpTime"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoPeerLearningSourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoPeerGroup = cnvoPeerGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoPeerGroup.setDescription('A collection of objects providing NVO peer information.')
cnvoVirtualNetworkStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 4)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetOutUnicastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetOutUnicastBytes"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetOutMulticastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetOutMulticastBytes"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetInUnicastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetInUnicastBytes"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetInMulticastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoVNetInMulticastBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoVirtualNetworkStatsGroup = cnvoVirtualNetworkStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoVirtualNetworkStatsGroup.setDescription('A collection of objects providing virtual network statistics information.')
cnvoNvoPerPeerOutUnicastStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 5)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerOutUnicastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerOutUnicastBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoNvoPerPeerOutUnicastStatsGroup = cnvoNvoPerPeerOutUnicastStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPerPeerOutUnicastStatsGroup.setDescription('A collection of objects providing transmitted peer unicast statistics information.')
cnvoNvoPerPeerInUnicastStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 6)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerInUnicastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerInUnicastBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoNvoPerPeerInUnicastStatsGroup = cnvoNvoPerPeerInUnicastStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPerPeerInUnicastStatsGroup.setDescription('A collection of objects providing received peer unicast statistics information.')
cnvoNvoPerPeerInMulticastStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 7)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerInMulticastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerInMulticastBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoNvoPerPeerInMulticastStatsGroup = cnvoNvoPerPeerInMulticastStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPerPeerInMulticastStatsGroup.setDescription('A collection of objects providing received peer multicast statistics information.')
cnvoNvoPerPeerOutMulticastStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 820, 2, 2, 8)).setObjects(("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerOutMulticastPackets"), ("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", "cnvoNvoPeerOutMulticastBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnvoNvoPerPeerOutMulticastStatsGroup = cnvoNvoPerPeerOutMulticastStatsGroup.setStatus('current')
if mibBuilder.loadTexts: cnvoNvoPerPeerOutMulticastStatsGroup.setDescription('A collection of objects providing transmitted peer unicast statistics information.')
mibBuilder.exportSymbols("CISCO-NETWORK-VIRTUALIZATION-OVERLAY-MIB", ciscoNetworkVirtualizationOverlayMIB=ciscoNetworkVirtualizationOverlayMIB, cnvoNvoEncapType=cnvoNvoEncapType, cnvoNvoRowStatus=cnvoNvoRowStatus, cnvoVNetRouterMacAddr=cnvoVNetRouterMacAddr, cnvoVNetStatsTable=cnvoVNetStatsTable, cnvoPeerUpTime=cnvoPeerUpTime, cnvoNvoPeerOutMulticastPackets=cnvoNvoPeerOutMulticastPackets, cnvoNvoPerPeerOutMulticastStatsGroup=cnvoNvoPerPeerOutMulticastStatsGroup, cnvoPeerIpAddr=cnvoPeerIpAddr, cnvoNvoConfiguredVni=cnvoNvoConfiguredVni, cnvoPeerTable=cnvoPeerTable, cnvoPeerLearningSourceType=cnvoPeerLearningSourceType, cnvoNvoPeerInUnicastBytes=cnvoNvoPeerInUnicastBytes, cnvoNvoPerPeerOutUnicastStatsGroup=cnvoNvoPerPeerOutUnicastStatsGroup, cnvoNvoPerPeerInMulticastStatsGroup=cnvoNvoPerPeerInMulticastStatsGroup, cnvoNvoPeerInUnicastPackets=cnvoNvoPeerInUnicastPackets, cnvoVNetIpMcastAddrType=cnvoVNetIpMcastAddrType, cnvoVNetReplication=cnvoVNetReplication, cnvoNvoGroup=cnvoNvoGroup, cnvoPeerIpAddrType=cnvoPeerIpAddrType, cnvoNvoTable=cnvoNvoTable, cnvoVNetLocalVNetId=cnvoVNetLocalVNetId, cnvoVNetInUnicastPackets=cnvoVNetInUnicastPackets, cnvoVNetInMulticastPackets=cnvoVNetInMulticastPackets, cnvoVNetOutUnicastBytes=cnvoVNetOutUnicastBytes, cnvoVNetInUnicastBytes=cnvoVNetInUnicastBytes, cnvoNvoPeerStatsEntry=cnvoNvoPeerStatsEntry, cnvoNvoPeerInMulticastBytes=cnvoNvoPeerInMulticastBytes, PYSNMP_MODULE_ID=ciscoNetworkVirtualizationOverlayMIB, cnvoMIBGroups=cnvoMIBGroups, cnvoNvoPeerOutUnicastBytes=cnvoNvoPeerOutUnicastBytes, cnvoVNetArpSuppression=cnvoVNetArpSuppression, cnvoVNetTable=cnvoVNetTable, cnvoVNetHostReachability=cnvoVNetHostReachability, cnvoVNetIpVrfOrBridgeDomainName=cnvoVNetIpVrfOrBridgeDomainName, cnvoNvoPeerStatsTable=cnvoNvoPeerStatsTable, cnvoVirtualNetworkStatsGroup=cnvoVirtualNetworkStatsGroup, cnvoNvoEntry=cnvoNvoEntry, cnvoVNetOutMulticastBytes=cnvoVNetOutMulticastBytes, cnvoMIBNotifs=cnvoMIBNotifs, cnvoVNetOutUnicastPackets=cnvoVNetOutUnicastPackets, cnvoVNetStatsEntry=cnvoVNetStatsEntry, cnvoPeerGroup=cnvoPeerGroup, cnvoVNetVniType=cnvoVNetVniType, cnvoNvoPeerOutUnicastPackets=cnvoNvoPeerOutUnicastPackets, cnvoVNetOutMulticastPackets=cnvoVNetOutMulticastPackets, cnvoNvoPerPeerInUnicastStatsGroup=cnvoNvoPerPeerInUnicastStatsGroup, cnvoVNetVlan=cnvoVNetVlan, cnvoVirtualNetworkGroup=cnvoVirtualNetworkGroup, cnvoMIBObjects=cnvoMIBObjects, cnvoVNetEntry=cnvoVNetEntry, cnvoNvoInstanceId=cnvoNvoInstanceId, cnvoNvoPeerInMulticastPackets=cnvoNvoPeerInMulticastPackets, cnvoMIBConform=cnvoMIBConform, cnvoMIBCompliance=cnvoMIBCompliance, cnvoNvoStorageType=cnvoNvoStorageType, cnvoVNetInMulticastBytes=cnvoVNetInMulticastBytes, cnvoMIBCompliances=cnvoMIBCompliances, cnvoNvoPeerOutMulticastBytes=cnvoNvoPeerOutMulticastBytes, cnvoNvoObjects=cnvoNvoObjects, cnvoPeerEntry=cnvoPeerEntry, cnvoVNetIpMcastAddr=cnvoVNetIpMcastAddr, cnvoNvoSourceInterface=cnvoNvoSourceInterface)
