#
# PySNMP MIB module HH3C-SNMP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-SNMP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:29:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
SnmpAdminString, SnmpSecurityLevel, SnmpSecurityModel = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString", "SnmpSecurityLevel", "SnmpSecurityModel")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, ObjectIdentity, IpAddress, iso, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "IpAddress", "iso", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "Gauge32", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cSnmpExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 104))
hh3cSnmpExt.setRevisions(('2009-04-07 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cSnmpExt.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: hh3cSnmpExt.setLastUpdated('200904071700Z')
if mibBuilder.loadTexts: hh3cSnmpExt.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
if mibBuilder.loadTexts: hh3cSnmpExt.setContactInfo('Platform Team H3C Technologies Co., Ltd. Hai-Dian District Beijing P.R. China Http://www.h3c.com Zip: 100085')
if mibBuilder.loadTexts: hh3cSnmpExt.setDescription('This MIB file is to provide the object definition of the SNMP extended information.')
hh3cSnmpExtScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 104, 1))
hh3cSnmpExtTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2))
hh3cSnmpExtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 104, 3))
hh3cSnmpExtSnmpChannel = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 104, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(161)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnmpExtSnmpChannel.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtSnmpChannel.setDescription('The channel number used by SNMP.')
hh3cSnmpExtReadCommunitySingle = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 104, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnmpExtReadCommunitySingle.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtReadCommunitySingle.setDescription('The first read community.')
hh3cSnmpExtWriteCommunitySingle = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 104, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnmpExtWriteCommunitySingle.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtWriteCommunitySingle.setDescription('The first write community.')
hh3cSnmpExtCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1), )
if mibBuilder.loadTexts: hh3cSnmpExtCommunityTable.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunityTable.setDescription('Modify the extended properties of SNMP community or user.')
hh3cSnmpExtCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1, 1), ).setIndexNames((0, "HH3C-SNMP-EXT-MIB", "hh3cSnmpExtCommunitySecurityLevel"), (0, "HH3C-SNMP-EXT-MIB", "hh3cSnmpExtCommunitySecurityName"))
if mibBuilder.loadTexts: hh3cSnmpExtCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunityEntry.setDescription('The entry of hh3cSnmpExtCommunityTable')
hh3cSnmpExtCommunitySecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1, 1, 1), SnmpSecurityModel())
if mibBuilder.loadTexts: hh3cSnmpExtCommunitySecurityLevel.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunitySecurityLevel.setDescription("The Security Model of the specified community or user. This object may not take the 'any' (0) value.")
hh3cSnmpExtCommunitySecurityName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1, 1, 2), SnmpAdminString())
if mibBuilder.loadTexts: hh3cSnmpExtCommunitySecurityName.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunitySecurityName.setDescription('The Security Name of the specified community or user.')
hh3cSnmpExtCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSnmpExtCommunityName.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunityName.setDescription('The specified community name.')
hh3cSnmpExtCommunityAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 104, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSnmpExtCommunityAclNum.setStatus('current')
if mibBuilder.loadTexts: hh3cSnmpExtCommunityAclNum.setDescription('The specified ACL (Access Control List) number used by the community or the user.')
mibBuilder.exportSymbols("HH3C-SNMP-EXT-MIB", hh3cSnmpExtCommunityName=hh3cSnmpExtCommunityName, hh3cSnmpExtSnmpChannel=hh3cSnmpExtSnmpChannel, hh3cSnmpExtCommunityTable=hh3cSnmpExtCommunityTable, hh3cSnmpExtCommunitySecurityLevel=hh3cSnmpExtCommunitySecurityLevel, hh3cSnmpExtCommunitySecurityName=hh3cSnmpExtCommunitySecurityName, hh3cSnmpExtTables=hh3cSnmpExtTables, hh3cSnmpExtNotifications=hh3cSnmpExtNotifications, PYSNMP_MODULE_ID=hh3cSnmpExt, hh3cSnmpExtScalarObjects=hh3cSnmpExtScalarObjects, hh3cSnmpExtCommunityAclNum=hh3cSnmpExtCommunityAclNum, hh3cSnmpExtReadCommunitySingle=hh3cSnmpExtReadCommunitySingle, hh3cSnmpExtWriteCommunitySingle=hh3cSnmpExtWriteCommunitySingle, hh3cSnmpExt=hh3cSnmpExt, hh3cSnmpExtCommunityEntry=hh3cSnmpExtCommunityEntry)
