#
# PySNMP MIB module ChrComPmOpticsOCH-Day-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ChrComPmOpticsOCH-Day-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:35:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
chrComIfifIndex, = mibBuilder.importSymbols("ChrComIfifTable-MIB", "chrComIfifIndex")
TruthValue, = mibBuilder.importSymbols("ChrTyp-MIB", "TruthValue")
chrComPmOptics, = mibBuilder.importSymbols("Chromatis-MIB", "chrComPmOptics")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, iso, Counter32, Integer32, NotificationType, IpAddress, TimeTicks, Counter64, Gauge32, ObjectIdentity, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Counter32", "Integer32", "NotificationType", "IpAddress", "TimeTicks", "Counter64", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
chrComPmOpticsOCH_DayTable = MibTable((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15), ).setLabel("chrComPmOpticsOCH-DayTable")
if mibBuilder.loadTexts: chrComPmOpticsOCH_DayTable.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsOCH_DayTable.setDescription('')
chrComPmOpticsOCH_DayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1), ).setLabel("chrComPmOpticsOCH-DayEntry").setIndexNames((0, "ChrComIfifTable-MIB", "chrComIfifIndex"), (0, "ChrComPmOpticsOCH-Day-MIB", "chrComPmOpticsDayNumber"))
if mibBuilder.loadTexts: chrComPmOpticsOCH_DayEntry.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsOCH_DayEntry.setDescription('')
chrComPmOpticsDayNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsDayNumber.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsDayNumber.setDescription('')
chrComPmOpticsSuspectedIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSuspectedIntrvl.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSuspectedIntrvl.setDescription('a flag marking the validity of the entry data')
chrComPmOpticsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsElapsedTime.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsElapsedTime.setDescription('measurment duration, in 0.01 seconds')
chrComPmOpticsSuppressedIntrvls = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSuppressedIntrvls.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSuppressedIntrvls.setDescription('invalid for first version. indicates how many all-zero periods have passed.')
chrComPmOpticsORS_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsORS-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsORS_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsORS_R.setDescription('')
chrComPmOpticsSES_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsSES-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSES_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSES_R.setDescription('')
chrComPmOpticsUAS_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsUAS-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsUAS_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsUAS_R.setDescription('')
chrComPmOpticsORS_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsORS-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsORS_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsORS_S.setDescription('')
chrComPmOpticsSES_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsSES-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSES_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSES_S.setDescription('')
chrComPmOpticsUAS_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsUAS-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsUAS_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsUAS_S.setDescription('')
chrComPmOpticsMean_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsMean-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMean_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMean_R.setDescription('')
chrComPmOpticsMax_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsMax-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMax_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMax_R.setDescription('')
chrComPmOpticsMin_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsMin-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMin_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMin_R.setDescription('')
chrComPmOpticsSD_R = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsSD-R").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSD_R.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSD_R.setDescription('')
chrComPmOpticsMean_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsMean-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMean_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMean_S.setDescription('')
chrComPmOpticsMax_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsMax-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMax_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMax_S.setDescription('')
chrComPmOpticsMin_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 17), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setLabel("chrComPmOpticsMin-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsMin_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsMin_S.setDescription('')
chrComPmOpticsSD_S = MibScalar((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setLabel("chrComPmOpticsSD-S").setMaxAccess("readonly")
if mibBuilder.loadTexts: chrComPmOpticsSD_S.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsSD_S.setDescription('')
chrComPmOpticsThresholdProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmOpticsThresholdProfIndex.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsThresholdProfIndex.setDescription('')
chrComPmOpticsResetCountersAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3695, 1, 10, 1, 15, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: chrComPmOpticsResetCountersAction.setStatus('current')
if mibBuilder.loadTexts: chrComPmOpticsResetCountersAction.setDescription('')
mibBuilder.exportSymbols("ChrComPmOpticsOCH-Day-MIB", chrComPmOpticsUAS_S=chrComPmOpticsUAS_S, chrComPmOpticsResetCountersAction=chrComPmOpticsResetCountersAction, chrComPmOpticsMean_R=chrComPmOpticsMean_R, chrComPmOpticsORS_R=chrComPmOpticsORS_R, chrComPmOpticsMax_S=chrComPmOpticsMax_S, chrComPmOpticsDayNumber=chrComPmOpticsDayNumber, chrComPmOpticsSD_S=chrComPmOpticsSD_S, chrComPmOpticsMin_S=chrComPmOpticsMin_S, chrComPmOpticsOCH_DayTable=chrComPmOpticsOCH_DayTable, chrComPmOpticsMin_R=chrComPmOpticsMin_R, chrComPmOpticsORS_S=chrComPmOpticsORS_S, chrComPmOpticsSD_R=chrComPmOpticsSD_R, chrComPmOpticsOCH_DayEntry=chrComPmOpticsOCH_DayEntry, chrComPmOpticsElapsedTime=chrComPmOpticsElapsedTime, chrComPmOpticsUAS_R=chrComPmOpticsUAS_R, chrComPmOpticsMean_S=chrComPmOpticsMean_S, chrComPmOpticsSuppressedIntrvls=chrComPmOpticsSuppressedIntrvls, chrComPmOpticsSES_R=chrComPmOpticsSES_R, chrComPmOpticsMax_R=chrComPmOpticsMax_R, chrComPmOpticsSuspectedIntrvl=chrComPmOpticsSuspectedIntrvl, chrComPmOpticsThresholdProfIndex=chrComPmOpticsThresholdProfIndex, chrComPmOpticsSES_S=chrComPmOpticsSES_S)
