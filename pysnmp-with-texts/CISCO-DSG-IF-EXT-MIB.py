#
# PySNMP MIB module CISCO-DSG-IF-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DSG-IF-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:56:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
dsgIfClassifierEntry, dsgIfDownstreamEntry = mibBuilder.importSymbols("DSG-IF-MIB", "dsgIfClassifierEntry", "dsgIfDownstreamEntry")
InetAddressDNS, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressDNS")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
IpAddress, Bits, Gauge32, NotificationType, MibIdentifier, Counter64, Counter32, Unsigned32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Gauge32", "NotificationType", "MibIdentifier", "Counter64", "Counter32", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "iso")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
ciscoDsgIfExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 777))
ciscoDsgIfExtMIB.setRevisions(('2011-08-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDsgIfExtMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoDsgIfExtMIB.setLastUpdated('201109090000Z')
if mibBuilder.loadTexts: ciscoDsgIfExtMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDsgIfExtMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ubr@cisco.com')
if mibBuilder.loadTexts: ciscoDsgIfExtMIB.setDescription('A MIB module for extending the DSG-IF-MIB (ITU-T J.128 10/2008) to add objects which provide additional management information about DOCSIS Set-top Gateway (DSG) not available in DSG-IF-MIB. The DSG provides a one-way IP datagram transport for Out-Of-Band (OOB) messaging to cable set-top clients. The one-way IP datagram transport is called a DSG Tunnel. A DSG Tunnel carrying either a broadcast, unicast or multicast IP datagram stream originating at the DOCSIS Set-top Gateway and carrying Out-Of-Band messages intended for set-top clients. It is carried over one or more downstream DOCSIS channels. Multiple DSG tunnels may exist on a single downstream DOCSIS channel.')
ciscoDsgIfExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 777, 0))
ciscoDsgIfExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 777, 1))
ciscoDsgIfExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 777, 2))
cdsgIfExtClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 1), )
if mibBuilder.loadTexts: cdsgIfExtClassifierTable.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtClassifierTable.setDescription('This table extends DSG-IF-MIB dsgIfClassifierTable for classifiers which classify inbound packets into the tunnel and classifiers for the DSG clients, encoding in the DCD (Downstream Channel Descriptor) messages on the downstream channels to which the classifiers apply.')
cdsgIfExtClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 1, 1), )
dsgIfClassifierEntry.registerAugmentions(("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtClassifierEntry"))
cdsgIfExtClassifierEntry.setIndexNames(*dsgIfClassifierEntry.getIndexNames())
if mibBuilder.loadTexts: cdsgIfExtClassifierEntry.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtClassifierEntry.setDescription('A cdsgIfExtClassifierEntry extends a corresponding dsgIfClassifierTable entry. This entry provides additional information for a particular ADSG classifier of the DSG-IF-MIB dsgIfClassifierEntry. For example, the configuration of the fully qualified domain name (FQDN) of ADSG classifier multicast group and source addresses. An entry in this table exists for each configured ADSG classifier in DSG-IF-MIB dsgIfClassifierTable.')
cdsgIfExtClassSrcHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 1, 1, 1), InetAddressDNS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsgIfExtClassSrcHostName.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtClassSrcHostName.setDescription('This object specifies the multicast source FQDN of which the CMTS (Cable Modem Termination System) would be able to utilize the CMTS configured domain name server(s) to conduct a lookup and then define the IGMP join with the lookup response.')
cdsgIfExtClassDestHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 1, 1, 2), InetAddressDNS()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsgIfExtClassDestHostName.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtClassDestHostName.setDescription('This object specifies the multicast group FQDN of which the CMTS would be able to utilize the CMTS configured domain name server(s) to conduct a lookup and then define the IGMP join with the lookup response.')
cdsgIfExtDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 2), )
if mibBuilder.loadTexts: cdsgIfExtDownstreamTable.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtDownstreamTable.setDescription('This table extends DSG-IF-MIB dsgIfDownstreamTable for ADSG downstream tunnels.')
cdsgIfExtDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 2, 1), )
dsgIfDownstreamEntry.registerAugmentions(("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtDownstreamEntry"))
cdsgIfExtDownstreamEntry.setIndexNames(*dsgIfDownstreamEntry.getIndexNames())
if mibBuilder.loadTexts: cdsgIfExtDownstreamEntry.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtDownstreamEntry.setDescription('A cdsgIfExtDownstreamEntry extends a corresponding dsgIfDownstreamEntry. This entry displays and controls more characteristics of ADSG downstream tunnel. For example, provide management information that CMTS would has the ability to turn off DSG forwarding on certain primary interfaces where the DSG tunnels are not required.')
cdsgIfExtDownDsgDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 777, 1, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsgIfExtDownDsgDisable.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtDownDsgDisable.setDescription("This object specifies whether the DSG tunnel is disabled on the primary interface. A value of 'true' indicates that the DSG tunnel is disabled on the primary interface. A value of 'false' indicates that the DSG tunnel is not disabled on the primary interface.")
ciscoDsgIfExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 777, 2, 1))
ciscoDsgIfExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 777, 2, 2))
ciscoDsgIfExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 777, 2, 1, 1)).setObjects(("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtHostGroup"), ("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtDownControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDsgIfExtMIBCompliance = ciscoDsgIfExtMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoDsgIfExtMIBCompliance.setDescription('This compliance statement for CISCO-DSG-IF-EXT-MIB.')
cdsgIfExtHostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 777, 2, 2, 1)).setObjects(("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtClassSrcHostName"), ("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtClassDestHostName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsgIfExtHostGroup = cdsgIfExtHostGroup.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtHostGroup.setDescription('A collection of objects which provides fully qualified domain name of classifier multicast group and source addresses of DOCSIS Set-top Gateway systems.')
cdsgIfExtDownControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 777, 2, 2, 2)).setObjects(("CISCO-DSG-IF-EXT-MIB", "cdsgIfExtDownDsgDisable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cdsgIfExtDownControlGroup = cdsgIfExtDownControlGroup.setStatus('current')
if mibBuilder.loadTexts: cdsgIfExtDownControlGroup.setDescription('A collection of objects which provides control of DSG tunnel for DOCSIS Set-top Gateway systems.')
mibBuilder.exportSymbols("CISCO-DSG-IF-EXT-MIB", cdsgIfExtClassifierTable=cdsgIfExtClassifierTable, cdsgIfExtClassDestHostName=cdsgIfExtClassDestHostName, cdsgIfExtDownstreamEntry=cdsgIfExtDownstreamEntry, cdsgIfExtDownDsgDisable=cdsgIfExtDownDsgDisable, ciscoDsgIfExtMIBCompliance=ciscoDsgIfExtMIBCompliance, cdsgIfExtClassSrcHostName=cdsgIfExtClassSrcHostName, PYSNMP_MODULE_ID=ciscoDsgIfExtMIB, ciscoDsgIfExtMIB=ciscoDsgIfExtMIB, ciscoDsgIfExtMIBNotifs=ciscoDsgIfExtMIBNotifs, ciscoDsgIfExtMIBGroups=ciscoDsgIfExtMIBGroups, ciscoDsgIfExtMIBObjects=ciscoDsgIfExtMIBObjects, cdsgIfExtClassifierEntry=cdsgIfExtClassifierEntry, ciscoDsgIfExtMIBCompliances=ciscoDsgIfExtMIBCompliances, cdsgIfExtHostGroup=cdsgIfExtHostGroup, cdsgIfExtDownControlGroup=cdsgIfExtDownControlGroup, ciscoDsgIfExtMIBConform=ciscoDsgIfExtMIBConform, cdsgIfExtDownstreamTable=cdsgIfExtDownstreamTable)
