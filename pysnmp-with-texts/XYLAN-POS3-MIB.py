#
# PySNMP MIB module XYLAN-POS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-POS3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:45:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, Counter64, Gauge32, iso, IpAddress, Integer32, ModuleIdentity, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "Counter64", "Gauge32", "iso", "IpAddress", "Integer32", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanPportArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanPportArch")
sonetPort = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 11, 4))
sonetPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1), )
if mibBuilder.loadTexts: sonetPortConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortConfigTable.setDescription('A table of Sonet physical layer status and parameter information.')
sonetPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1), ).setIndexNames((0, "XYLAN-POS3-MIB", "sonetPortConfigSlotIndex"), (0, "XYLAN-POS3-MIB", "sonetPortConfigPortIndex"))
if mibBuilder.loadTexts: sonetPortConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortConfigEntry.setDescription('An entry in the table, containing information about the physical layer of a Sonet interface.')
sonetPortConfigSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonetPortConfigSlotIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortConfigSlotIndex.setDescription('A unique value which identifies this HSM board slot.')
sonetPortConfigPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonetPortConfigPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortConfigPortIndex.setDescription('A unique value which identifies this port.')
sonetPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortDescription.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortDescription.setDescription('The name in ascii characters describing the interface')
sonetPortFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sonet", 1), ("sdh", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortFramingType.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortFramingType.setDescription('Physical layer medium type.')
sonetPortLoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sonetNoLoop", 1), ("sonetPayloadLoop", 2), ("sonetLineLoop", 3), ("sonetOtherLoop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortLoopbackConfig.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortLoopbackConfig.setDescription("This variable represents the loopback confi- guration of the Sonet interface. Agents support- ing read/write access should return badValue in response to a requested loopback state that the interface does not support. The values mean: sonetNoLoop Not in the loopback state. A device that is not capable of performing a loopback on the interface shall always return this as it's value. sonetPayloadLoop The received signal at this interface is looped through the device. Typically the received signal is looped back for re- transmission after it has passed through the device's framing function. sonetLineLoop The received signal at this interface does not go through the device (minimum pene- tration) but is looped back out. sonetOtherLoop Loopbacks that are not defined here.")
sonetPortTransmitClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopTiming", 1), ("localTiming", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortTransmitClockSource.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortTransmitClockSource.setDescription("The source of Transmit Clock. 'loopTiming' indicates that the recovered re- ceive clock is used as the transmit clock. 'localTiming' indicates that a local clock source is used.")
sonetPortPlScramble = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortPlScramble.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortPlScramble.setDescription('Payload Scrambling enabled/disabled')
sonetPortStatusChangeTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortStatusChangeTrapEnable.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortStatusChangeTrapEnable.setDescription('Indicates whether traps should be generated for this interface.')
sonetPortFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 11, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fcs16", 1), ("fcs32", 2))).clone('fcs16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonetPortFcsSize.setStatus('mandatory')
if mibBuilder.loadTexts: sonetPortFcsSize.setDescription('The size of the FCS, in bits.')
mibBuilder.exportSymbols("XYLAN-POS3-MIB", sonetPortConfigPortIndex=sonetPortConfigPortIndex, sonetPortDescription=sonetPortDescription, sonetPortPlScramble=sonetPortPlScramble, sonetPortConfigTable=sonetPortConfigTable, sonetPortTransmitClockSource=sonetPortTransmitClockSource, sonetPortFcsSize=sonetPortFcsSize, sonetPortFramingType=sonetPortFramingType, sonetPortStatusChangeTrapEnable=sonetPortStatusChangeTrapEnable, sonetPortConfigEntry=sonetPortConfigEntry, sonetPortLoopbackConfig=sonetPortLoopbackConfig, sonetPort=sonetPort, sonetPortConfigSlotIndex=sonetPortConfigSlotIndex)
