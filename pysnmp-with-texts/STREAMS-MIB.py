#
# PySNMP MIB module STREAMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STREAMS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:11:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Gauge32, enterprises, Bits, ModuleIdentity, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32, iso, ObjectIdentity, MibIdentifier, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "enterprises", "Bits", "ModuleIdentity", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32", "iso", "ObjectIdentity", "MibIdentifier", "Integer32", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSLC2 = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 16))
streams = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 16, 4))
if mibBuilder.loadTexts: streams.setLastUpdated('9506281200Z')
if mibBuilder.loadTexts: streams.setOrganization('Copestone Research Ltd')
if mibBuilder.loadTexts: streams.setContactInfo(' Nick Felisiak Postal: Copestone Research Ltd 8 Burnside, Eddleston, Peebles, EH45 8QP, Scotland Tel: +44 1721 730 288 E-Mail: nick@copestone.com')
if mibBuilder.loadTexts: streams.setDescription('This MIB provides configuration and status information for a STREAMS subsystem.')
streamsAdmnTable = MibTable((1, 3, 6, 1, 4, 1, 539, 16, 4, 1), )
if mibBuilder.loadTexts: streamsAdmnTable.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnTable.setDescription('This table contains configuration information, for a STREAMS Subsystem. There is one entry for each such such subsystem in a managed system.')
streamsAdmnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1), ).setIndexNames((0, "STREAMS-MIB", "streamsAdmnSubsystemIndex"))
if mibBuilder.loadTexts: streamsAdmnEntry.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnEntry.setDescription('A list of STREAMS configuration values')
streamsAdmnSubsystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSubsystemIndex.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSubsystemIndex.setDescription('T B S')
streamsAdmnMaxStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnMaxStorage.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnMaxStorage.setDescription('T B S')
streamsAdmnNumQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsAdmnNumQueues.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumQueues.setDescription('T B S')
streamsAdmnNumStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumStreams.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumStreams.setDescription('T B S')
streamsAdmnNumBufcalls = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufcalls.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufcalls.setDescription('T B S')
streamsAdmnNumTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumTimeouts.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumTimeouts.setDescription('T B S')
streamsAdmnNumMblks = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumMblks.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumMblks.setDescription('T B S')
streamsAdmnNumExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumExtended.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumExtended.setDescription('T B S')
streamsAdmnLoSafetyMark = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnLoSafetyMark.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnLoSafetyMark.setDescription('T B S')
streamsAdmnMidSafetyMark = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnMidSafetyMark.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnMidSafetyMark.setDescription('T B S')
streamsAdmnNumBufs0 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs0.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs0.setDescription('T B S')
streamsAdmnNumBufs1 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs1.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs1.setDescription('T B S')
streamsAdmnNumBufs2 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs2.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs2.setDescription('T B S')
streamsAdmnNumBufs3 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs3.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs3.setDescription('T B S')
streamsAdmnNumBufs4 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs4.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs4.setDescription('T B S')
streamsAdmnNumBufs5 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs5.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs5.setDescription('T B S')
streamsAdmnNumBufs6 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs6.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs6.setDescription('T B S')
streamsAdmnNumBufs7 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs7.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs7.setDescription('T B S')
streamsAdmnNumBufs8 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs8.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs8.setDescription('T B S')
streamsAdmnNumBufs9 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnNumBufs9.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnNumBufs9.setDescription('T B S')
streamsAdmnSizeBufs0 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs0.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs0.setDescription('T B S')
streamsAdmnSizeBufs1 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs1.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs1.setDescription('T B S')
streamsAdmnSizeBufs2 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs2.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs2.setDescription('T B S')
streamsAdmnSizeBufs3 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs3.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs3.setDescription('T B S')
streamsAdmnSizeBufs4 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs4.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs4.setDescription('T B S')
streamsAdmnSizeBufs5 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs5.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs5.setDescription('T B S')
streamsAdmnSizeBufs6 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs6.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs6.setDescription('T B S')
streamsAdmnSizeBufs7 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs7.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs7.setDescription('T B S')
streamsAdmnSizeBufs8 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs8.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs8.setDescription('T B S')
streamsAdmnSizeBufs9 = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 1, 1, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: streamsAdmnSizeBufs9.setStatus('current')
if mibBuilder.loadTexts: streamsAdmnSizeBufs9.setDescription('T B S')
streamsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 539, 16, 4, 2), )
if mibBuilder.loadTexts: streamsStatsTable.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTable.setDescription('This table contains run-time staus information, for a STREAMS Subsystem. There is one entry for each such such subsystem in a managed system.')
streamsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1), ).setIndexNames((0, "STREAMS-MIB", "streamsStatsSubsystemIndex"))
if mibBuilder.loadTexts: streamsStatsEntry.setStatus('current')
if mibBuilder.loadTexts: streamsStatsEntry.setDescription('A list of STREAMS Statistics')
streamsStatsSubsystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsSubsystemIndex.setStatus('current')
if mibBuilder.loadTexts: streamsStatsSubsystemIndex.setDescription('The particular STREAMS subsystem on the host for which statistics are required.')
streamsStatsAllocStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsAllocStorage.setStatus('current')
if mibBuilder.loadTexts: streamsStatsAllocStorage.setDescription('The amount of storage allocated to the STREAMS system for buffers, queues, etc')
streamsStatsQueuesConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsQueuesConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsQueuesConfig.setDescription('The number of queues configured in the running system. If dynamically, created, the number currently in existence')
streamsStatsQueuesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsQueuesInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsQueuesInUse.setDescription('The number of queues currently in use')
streamsStatsQueuesUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsQueuesUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsQueuesUsed.setDescription('The number of queues used since the system was initialised')
streamsStatsQueuesMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsQueuesMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsQueuesMaxUsed.setDescription('The maximum number of queues concurrently in use at any time since the system was initialised')
streamsStatsQueuesFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsQueuesFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsQueuesFails.setDescription('The number of times a queue allocation request has been denied')
streamsStatsStreamsConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsStreamsConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsStreamsConfig.setDescription('The number of streams configured in the running system. If dynamically, created, the number currently in existence')
streamsStatsStreamsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsStreamsInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsStreamsInUse.setDescription('The number of streams currently in use')
streamsStatsStreamsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsStreamsUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsStreamsUsed.setDescription('The number of streams used since the system was initialised')
streamsStatsStreamsMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsStreamsMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsStreamsMaxUsed.setDescription('The maximum number of streams concurrently in use at any time since the system was initialised')
streamsStatsStreamsFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsStreamsFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsStreamsFails.setDescription('The number of times a stream allocation request has been denied')
streamsStatsBufcallsConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufcallsConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufcallsConfig.setDescription(' T B S')
streamsStatsBufcallsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufcallsInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufcallsInUse.setDescription(' T B S')
streamsStatsBufcallsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufcallsUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufcallsUsed.setDescription(' T B S')
streamsStatsBufcallsMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufcallsMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufcallsMaxUsed.setDescription(' T B S')
streamsStatsBufcallsFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufcallsFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufcallsFails.setDescription(' T B S')
streamsStatsTimeoutsConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsTimeoutsConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTimeoutsConfig.setDescription(' T B S')
streamsStatsTimeoutsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsTimeoutsInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTimeoutsInUse.setDescription(' T B S')
streamsStatsTimeoutsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsTimeoutsUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTimeoutsUsed.setDescription(' T B S')
streamsStatsTimeoutsMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsTimeoutsMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTimeoutsMaxUsed.setDescription(' T B S')
streamsStatsTimeoutsFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsTimeoutsFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsTimeoutsFails.setDescription(' T B S')
streamsStatsMblksConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsMblksConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsMblksConfig.setDescription(' T B S')
streamsStatsMblksInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsMblksInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsMblksInUse.setDescription(' T B S')
streamsStatsMblksUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsMblksUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsMblksUsed.setDescription(' T B S')
streamsStatsMblksMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsMblksMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsMblksMaxUsed.setDescription(' T B S')
streamsStatsMblksFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsMblksFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsMblksFails.setDescription(' T B S')
streamsStatsExtendedConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsExtendedConfig.setStatus('current')
if mibBuilder.loadTexts: streamsStatsExtendedConfig.setDescription(' T B S')
streamsStatsExtendedInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsExtendedInUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsExtendedInUse.setDescription(' T B S')
streamsStatsExtendedUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsExtendedUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsExtendedUsed.setDescription(' T B S')
streamsStatsExtendedMaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsExtendedMaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsExtendedMaxUsed.setDescription(' T B S')
streamsStatsExtendedFails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsExtendedFails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsExtendedFails.setDescription(' T B S')
streamsStatsBufs0Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs0Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs0Config.setDescription(' T B S')
streamsStatsBufs0InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs0InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs0InUse.setDescription(' T B S')
streamsStatsBufs0Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs0Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs0Used.setDescription(' T B S')
streamsStatsBufs0MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs0MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs0MaxUsed.setDescription(' T B S')
streamsStatsBufs0Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs0Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs0Fails.setDescription(' T B S')
streamsStatsBufs1Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs1Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs1Config.setDescription(' T B S')
streamsStatsBufs1InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs1InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs1InUse.setDescription(' T B S')
streamsStatsBufs1Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs1Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs1Used.setDescription(' T B S')
streamsStatsBufs1MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs1MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs1MaxUsed.setDescription(' T B S')
streamsStatsBufs1Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs1Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs1Fails.setDescription(' T B S')
streamsStatsBufs2Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs2Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs2Config.setDescription(' T B S')
streamsStatsBufs2InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs2InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs2InUse.setDescription(' T B S')
streamsStatsBufs2Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs2Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs2Used.setDescription(' T B S')
streamsStatsBufs2MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs2MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs2MaxUsed.setDescription(' T B S')
streamsStatsBufs2Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs2Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs2Fails.setDescription(' T B S')
streamsStatsBufs3Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs3Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs3Config.setDescription(' T B S')
streamsStatsBufs3InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs3InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs3InUse.setDescription(' T B S')
streamsStatsBufs3Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs3Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs3Used.setDescription(' T B S')
streamsStatsBufs3MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs3MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs3MaxUsed.setDescription(' T B S')
streamsStatsBufs3Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs3Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs3Fails.setDescription(' T B S')
streamsStatsBufs4Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs4Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs4Config.setDescription(' T B S')
streamsStatsBufs4InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs4InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs4InUse.setDescription(' T B S')
streamsStatsBufs4Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs4Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs4Used.setDescription(' T B S')
streamsStatsBufs4MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs4MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs4MaxUsed.setDescription(' T B S')
streamsStatsBufs4Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs4Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs4Fails.setDescription(' T B S')
streamsStatsBufs5Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs5Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs5Config.setDescription(' T B S')
streamsStatsBufs5InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs5InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs5InUse.setDescription(' T B S')
streamsStatsBufs5Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs5Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs5Used.setDescription(' T B S')
streamsStatsBufs5MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs5MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs5MaxUsed.setDescription(' T B S')
streamsStatsBufs5Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs5Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs5Fails.setDescription(' T B S')
streamsStatsBufs6Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs6Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs6Config.setDescription(' T B S')
streamsStatsBufs6InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs6InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs6InUse.setDescription(' T B S')
streamsStatsBufs6Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs6Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs6Used.setDescription(' T B S')
streamsStatsBufs6MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs6MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs6MaxUsed.setDescription(' T B S')
streamsStatsBufs6Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 67), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs6Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs6Fails.setDescription(' T B S')
streamsStatsBufs7Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs7Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs7Config.setDescription(' T B S')
streamsStatsBufs7InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 69), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs7InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs7InUse.setDescription(' T B S')
streamsStatsBufs7Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs7Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs7Used.setDescription(' T B S')
streamsStatsBufs7MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 71), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs7MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs7MaxUsed.setDescription(' T B S')
streamsStatsBufs7Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs7Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs7Fails.setDescription(' T B S')
streamsStatsBufs8Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs8Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs8Config.setDescription(' T B S')
streamsStatsBufs8InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs8InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs8InUse.setDescription(' T B S')
streamsStatsBufs8Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs8Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs8Used.setDescription(' T B S')
streamsStatsBufs8MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs8MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs8MaxUsed.setDescription(' T B S')
streamsStatsBufs8Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs8Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs8Fails.setDescription(' T B S')
streamsStatsBufs9Config = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs9Config.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs9Config.setDescription(' T B S')
streamsStatsBufs9InUse = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs9InUse.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs9InUse.setDescription(' T B S')
streamsStatsBufs9Used = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs9Used.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs9Used.setDescription(' T B S')
streamsStatsBufs9MaxUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs9MaxUsed.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs9MaxUsed.setDescription(' T B S')
streamsStatsBufs9Fails = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 16, 4, 2, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: streamsStatsBufs9Fails.setStatus('current')
if mibBuilder.loadTexts: streamsStatsBufs9Fails.setDescription(' T B S')
mibBuilder.exportSymbols("STREAMS-MIB", streamsStatsBufs6Fails=streamsStatsBufs6Fails, streamsAdmnSizeBufs9=streamsAdmnSizeBufs9, streamsStatsBufs0Fails=streamsStatsBufs0Fails, streamsStatsMblksConfig=streamsStatsMblksConfig, streamsStatsBufcallsInUse=streamsStatsBufcallsInUse, streamsStatsExtendedUsed=streamsStatsExtendedUsed, streamsStatsBufs9Fails=streamsStatsBufs9Fails, streamsStatsMblksFails=streamsStatsMblksFails, streamsStatsBufs2Used=streamsStatsBufs2Used, streamsStatsBufs6MaxUsed=streamsStatsBufs6MaxUsed, streamsAdmnNumBufs6=streamsAdmnNumBufs6, streamsStatsExtendedInUse=streamsStatsExtendedInUse, streamsStatsBufs2MaxUsed=streamsStatsBufs2MaxUsed, streamsStatsBufs1MaxUsed=streamsStatsBufs1MaxUsed, streamsStatsQueuesInUse=streamsStatsQueuesInUse, streamsStatsBufs7MaxUsed=streamsStatsBufs7MaxUsed, streamsStatsTimeoutsConfig=streamsStatsTimeoutsConfig, streamsStatsBufs2InUse=streamsStatsBufs2InUse, streamsStatsBufs9MaxUsed=streamsStatsBufs9MaxUsed, streamsStatsBufs0Used=streamsStatsBufs0Used, streamsAdmnNumBufs4=streamsAdmnNumBufs4, aiSLC2=aiSLC2, streams=streams, streamsAdmnNumBufs5=streamsAdmnNumBufs5, streamsStatsBufcallsUsed=streamsStatsBufcallsUsed, streamsStatsQueuesConfig=streamsStatsQueuesConfig, PYSNMP_MODULE_ID=streams, streamsStatsMblksInUse=streamsStatsMblksInUse, streamsStatsBufs4InUse=streamsStatsBufs4InUse, streamsStatsBufs3Fails=streamsStatsBufs3Fails, streamsStatsTable=streamsStatsTable, streamsAdmnNumBufs8=streamsAdmnNumBufs8, streamsStatsBufs8Used=streamsStatsBufs8Used, streamsStatsEntry=streamsStatsEntry, streamsStatsQueuesUsed=streamsStatsQueuesUsed, streamsStatsBufcallsConfig=streamsStatsBufcallsConfig, streamsAdmnNumBufs0=streamsAdmnNumBufs0, streamsAdmnSubsystemIndex=streamsAdmnSubsystemIndex, streamsAdmnNumBufs3=streamsAdmnNumBufs3, streamsStatsBufs7Fails=streamsStatsBufs7Fails, streamsStatsBufs2Fails=streamsStatsBufs2Fails, streamsAdmnSizeBufs0=streamsAdmnSizeBufs0, streamsAdmnMaxStorage=streamsAdmnMaxStorage, streamsAdmnNumBufs9=streamsAdmnNumBufs9, streamsAdmnSizeBufs6=streamsAdmnSizeBufs6, streamsStatsQueuesFails=streamsStatsQueuesFails, streamsStatsBufs3Used=streamsStatsBufs3Used, streamsStatsTimeoutsFails=streamsStatsTimeoutsFails, streamsAdmnNumBufs2=streamsAdmnNumBufs2, streamsAdmnSizeBufs1=streamsAdmnSizeBufs1, streamsAdmnSizeBufs5=streamsAdmnSizeBufs5, streamsAdmnMidSafetyMark=streamsAdmnMidSafetyMark, streamsStatsBufs8MaxUsed=streamsStatsBufs8MaxUsed, streamsStatsBufs7Config=streamsStatsBufs7Config, streamsAdmnSizeBufs3=streamsAdmnSizeBufs3, streamsStatsTimeoutsMaxUsed=streamsStatsTimeoutsMaxUsed, streamsStatsStreamsUsed=streamsStatsStreamsUsed, streamsAdmnSizeBufs2=streamsAdmnSizeBufs2, streamsStatsBufs5Used=streamsStatsBufs5Used, streamsStatsBufs5Fails=streamsStatsBufs5Fails, streamsStatsBufs5InUse=streamsStatsBufs5InUse, streamsStatsTimeoutsInUse=streamsStatsTimeoutsInUse, streamsStatsBufs7InUse=streamsStatsBufs7InUse, streamsStatsBufs0Config=streamsStatsBufs0Config, streamsAdmnNumStreams=streamsAdmnNumStreams, streamsAdmnSizeBufs4=streamsAdmnSizeBufs4, streamsStatsQueuesMaxUsed=streamsStatsQueuesMaxUsed, streamsStatsBufs4Config=streamsStatsBufs4Config, streamsStatsMblksMaxUsed=streamsStatsMblksMaxUsed, streamsStatsBufs8InUse=streamsStatsBufs8InUse, streamsAdmnLoSafetyMark=streamsAdmnLoSafetyMark, streamsAdmnNumMblks=streamsAdmnNumMblks, streamsStatsBufs4Fails=streamsStatsBufs4Fails, streamsAdmnNumBufs1=streamsAdmnNumBufs1, streamsStatsStreamsConfig=streamsStatsStreamsConfig, streamsStatsStreamsMaxUsed=streamsStatsStreamsMaxUsed, streamsStatsStreamsInUse=streamsStatsStreamsInUse, streamsStatsExtendedFails=streamsStatsExtendedFails, streamsStatsBufs3InUse=streamsStatsBufs3InUse, streamsAdmnEntry=streamsAdmnEntry, streamsStatsBufs1Used=streamsStatsBufs1Used, streamsStatsBufs2Config=streamsStatsBufs2Config, streamsAdmnNumBufcalls=streamsAdmnNumBufcalls, streamsStatsBufs6Config=streamsStatsBufs6Config, streamsAdmnNumExtended=streamsAdmnNumExtended, streamsStatsAllocStorage=streamsStatsAllocStorage, streamsStatsBufs8Config=streamsStatsBufs8Config, streamsStatsBufs3Config=streamsStatsBufs3Config, streamsAdmnNumQueues=streamsAdmnNumQueues, streamsStatsBufs4Used=streamsStatsBufs4Used, streamsStatsBufs7Used=streamsStatsBufs7Used, aii=aii, streamsAdmnTable=streamsAdmnTable, streamsAdmnSizeBufs7=streamsAdmnSizeBufs7, streamsStatsBufcallsMaxUsed=streamsStatsBufcallsMaxUsed, streamsStatsBufs4MaxUsed=streamsStatsBufs4MaxUsed, streamsStatsSubsystemIndex=streamsStatsSubsystemIndex, streamsStatsBufs6InUse=streamsStatsBufs6InUse, streamsStatsBufs5Config=streamsStatsBufs5Config, streamsStatsBufs8Fails=streamsStatsBufs8Fails, streamsStatsBufs1Fails=streamsStatsBufs1Fails, streamsStatsBufs0MaxUsed=streamsStatsBufs0MaxUsed, streamsStatsBufs9Used=streamsStatsBufs9Used, streamsStatsExtendedConfig=streamsStatsExtendedConfig, streamsStatsBufs1Config=streamsStatsBufs1Config, streamsAdmnSizeBufs8=streamsAdmnSizeBufs8, streamsAdmnNumBufs7=streamsAdmnNumBufs7, streamsStatsExtendedMaxUsed=streamsStatsExtendedMaxUsed, streamsStatsBufs1InUse=streamsStatsBufs1InUse, streamsStatsBufcallsFails=streamsStatsBufcallsFails, streamsStatsStreamsFails=streamsStatsStreamsFails, streamsStatsTimeoutsUsed=streamsStatsTimeoutsUsed, streamsStatsBufs3MaxUsed=streamsStatsBufs3MaxUsed, streamsStatsMblksUsed=streamsStatsMblksUsed, streamsAdmnNumTimeouts=streamsAdmnNumTimeouts, streamsStatsBufs9Config=streamsStatsBufs9Config, streamsStatsBufs0InUse=streamsStatsBufs0InUse, streamsStatsBufs6Used=streamsStatsBufs6Used, streamsStatsBufs9InUse=streamsStatsBufs9InUse, streamsStatsBufs5MaxUsed=streamsStatsBufs5MaxUsed)
