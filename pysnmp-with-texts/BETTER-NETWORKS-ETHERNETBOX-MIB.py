#
# PySNMP MIB module BETTER-NETWORKS-ETHERNETBOX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BETTER-NETWORKS-ETHERNETBOX-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:37:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Counter64, Unsigned32, Gauge32, IpAddress, ObjectIdentity, Integer32, iso, Bits, MibIdentifier, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Unsigned32", "Gauge32", "IpAddress", "ObjectIdentity", "Integer32", "iso", "Bits", "MibIdentifier", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
betternetworks = MibIdentifier((1, 3, 6, 1, 4, 1, 14848))
ethernetbox = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2))
ethernetboxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2, 1))
misc = MibIdentifier((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1))
class DisplayString(OctetString):
    pass

version = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: version.setStatus('mandatory')
if mibBuilder.loadTexts: version.setDescription('Ethernetbox Software version')
location = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: location.setStatus('mandatory')
if mibBuilder.loadTexts: location.setDescription('location string for caption in browser window')
tempunit = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tempunit.setStatus('mandatory')
if mibBuilder.loadTexts: tempunit.setDescription('Temperature unit, 0=Celsius, 1=Fahrenheit, 2=Kelvin')
refreshinterval = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: refreshinterval.setStatus('mandatory')
if mibBuilder.loadTexts: refreshinterval.setDescription('Refresh Interval for Browser Window')
numbersensors = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numbersensors.setStatus('mandatory')
if mibBuilder.loadTexts: numbersensors.setDescription('Number of sensors')
address = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: address.setStatus('mandatory')
if mibBuilder.loadTexts: address.setDescription('IP address of Ethernetbox')
uptime = MibScalar((1, 3, 6, 1, 4, 1, 14848, 2, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uptime.setStatus('mandatory')
if mibBuilder.loadTexts: uptime.setDescription('Uptime of Ethernetbox in 1/100 seconds')
sensorTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2), )
if mibBuilder.loadTexts: sensorTable.setStatus('mandatory')
if mibBuilder.loadTexts: sensorTable.setDescription('')
sensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "sensorindex"))
if mibBuilder.loadTexts: sensorEntry.setStatus('mandatory')
if mibBuilder.loadTexts: sensorEntry.setDescription('')
sensorindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorindex.setStatus('mandatory')
if mibBuilder.loadTexts: sensorindex.setDescription('Index of Sensor entry')
name = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: name.setStatus('mandatory')
if mibBuilder.loadTexts: name.setDescription('Sensor label')
sensortype = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sensortype.setStatus('mandatory')
if mibBuilder.loadTexts: sensortype.setDescription('sensor type 0=no sensor, 1=temperature, 2=brightness, 3=humidity, 4= switch contact 5 = voltage detector 6 = smoke sensor')
valueint = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valueint.setStatus('mandatory')
if mibBuilder.loadTexts: valueint.setDescription('value as integer')
valueint10 = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valueint10.setStatus('mandatory')
if mibBuilder.loadTexts: valueint10.setDescription('value x 10')
valuestr = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valuestr.setStatus('mandatory')
if mibBuilder.loadTexts: valuestr.setDescription('value as string with unit')
valid = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: valid.setStatus('mandatory')
if mibBuilder.loadTexts: valid.setDescription('sensor status')
lowlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lowlimit.setStatus('mandatory')
if mibBuilder.loadTexts: lowlimit.setDescription('low limit for threshold violation')
highlimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: highlimit.setStatus('mandatory')
if mibBuilder.loadTexts: highlimit.setDescription('high limit for threshold violation')
hysteresis = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hysteresis.setStatus('mandatory')
if mibBuilder.loadTexts: hysteresis.setDescription('hysteresis before new notification')
status = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('mandatory')
if mibBuilder.loadTexts: status.setDescription('sensor level 0=undefined, 1 = to low, 2= normal, 3= to high')
inputTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3), )
if mibBuilder.loadTexts: inputTable.setStatus('mandatory')
if mibBuilder.loadTexts: inputTable.setDescription('')
inputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"))
if mibBuilder.loadTexts: inputEntry.setStatus('mandatory')
if mibBuilder.loadTexts: inputEntry.setDescription('')
inputindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputindex.setStatus('mandatory')
if mibBuilder.loadTexts: inputindex.setDescription('Index of Input entry')
inputstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputstatus.setStatus('mandatory')
if mibBuilder.loadTexts: inputstatus.setDescription('binary input signal 0=low, 1=high')
outputTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4), )
if mibBuilder.loadTexts: outputTable.setStatus('mandatory')
if mibBuilder.loadTexts: outputTable.setDescription('')
outputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "outputindex"))
if mibBuilder.loadTexts: outputEntry.setStatus('mandatory')
if mibBuilder.loadTexts: outputEntry.setDescription('')
outputindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputindex.setStatus('mandatory')
if mibBuilder.loadTexts: outputindex.setDescription('Index of Output entry')
outputstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outputstatus.setStatus('mandatory')
if mibBuilder.loadTexts: outputstatus.setDescription('binary output signal 0=low, 1=high')
analogTable = MibTable((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5), )
if mibBuilder.loadTexts: analogTable.setStatus('mandatory')
if mibBuilder.loadTexts: analogTable.setDescription('')
analogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1), ).setIndexNames((0, "BETTER-NETWORKS-ETHERNETBOX-MIB", "analogindex"))
if mibBuilder.loadTexts: analogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: analogEntry.setDescription('')
analogindex = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogindex.setStatus('mandatory')
if mibBuilder.loadTexts: analogindex.setDescription('Index of Analog entry')
analogname = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogname.setStatus('mandatory')
if mibBuilder.loadTexts: analogname.setDescription('Analog Input label')
analogvalueint = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvalueint.setStatus('mandatory')
if mibBuilder.loadTexts: analogvalueint.setDescription('value as integer')
analogvalueint10 = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvalueint10.setStatus('mandatory')
if mibBuilder.loadTexts: analogvalueint10.setDescription('value x 10')
analogvaluestr = MibTableColumn((1, 3, 6, 1, 4, 1, 14848, 2, 1, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogvaluestr.setStatus('mandatory')
if mibBuilder.loadTexts: analogvaluestr.setDescription('value as string')
sensorstatusChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,1))
if mibBuilder.loadTexts: sensorstatusChangeToLow.setDescription('WARNING: Sensor status has changed to low')
sensorstatusChangeToNormal = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,2))
if mibBuilder.loadTexts: sensorstatusChangeToNormal.setDescription('INFORMATION: Sensor status has changed to normal')
sensorstatusChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,3))
if mibBuilder.loadTexts: sensorstatusChangeToHigh.setDescription('WARNING: Sensor status has changed to high')
inputlineChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,4))
if mibBuilder.loadTexts: inputlineChangeToLow.setDescription('Information: Input line has changed to low')
inputlineChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,5))
if mibBuilder.loadTexts: inputlineChangeToHigh.setDescription('Information: Input line has changed to high')
ethernetboxPowerUp = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,100))
if mibBuilder.loadTexts: ethernetboxPowerUp.setDescription('Information: Ethernetbox is switched on')
ethernetboxConfigSaved = NotificationType((1, 3, 6, 1, 4, 1, 14848) + (0,101))
if mibBuilder.loadTexts: ethernetboxConfigSaved.setDescription('Information: Ethernetbox Configuration has written')
ethernetboxNotificationInputLineChangeToLow = NotificationType((1, 3, 6, 1, 4, 1, 14848, 4)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "name"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "sensortype"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputstatus"))
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToLow.setStatus('current')
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToLow.setDescription('Event sent when status of Input line is changed to low')
ethernetboxNotificationInputLineChangeToHigh = NotificationType((1, 3, 6, 1, 4, 1, 14848, 5)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputindex"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "name"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "sensortype"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "inputstatus"))
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToHigh.setStatus('current')
if mibBuilder.loadTexts: ethernetboxNotificationInputLineChangeToHigh.setDescription('Event sent when status of Input line is changed to high')
ethernetboxNotificationPowerUp = NotificationType((1, 3, 6, 1, 4, 1, 14848, 100)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"))
if mibBuilder.loadTexts: ethernetboxNotificationPowerUp.setStatus('current')
if mibBuilder.loadTexts: ethernetboxNotificationPowerUp.setDescription('Event sent when Ethernet Box is switched on')
ethernetboxNotificationConfigSaved = NotificationType((1, 3, 6, 1, 4, 1, 14848, 101)).setObjects(("BETTER-NETWORKS-ETHERNETBOX-MIB", "uptime"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "location"), ("BETTER-NETWORKS-ETHERNETBOX-MIB", "address"))
if mibBuilder.loadTexts: ethernetboxNotificationConfigSaved.setStatus('current')
if mibBuilder.loadTexts: ethernetboxNotificationConfigSaved.setDescription('Event sent when Ethernet Box Configuration is written in flash memory')
mibBuilder.exportSymbols("BETTER-NETWORKS-ETHERNETBOX-MIB", inputlineChangeToLow=inputlineChangeToLow, highlimit=highlimit, outputTable=outputTable, analogvaluestr=analogvaluestr, name=name, sensortype=sensortype, enterprises=enterprises, ethernetboxNotificationInputLineChangeToHigh=ethernetboxNotificationInputLineChangeToHigh, ethernetboxNotificationConfigSaved=ethernetboxNotificationConfigSaved, sensorstatusChangeToNormal=sensorstatusChangeToNormal, internet=internet, sensorTable=sensorTable, uptime=uptime, ethernetboxPowerUp=ethernetboxPowerUp, inputstatus=inputstatus, analogvalueint=analogvalueint, analogTable=analogTable, sensorindex=sensorindex, analogvalueint10=analogvalueint10, org=org, ethernetbox=ethernetbox, refreshinterval=refreshinterval, tempunit=tempunit, inputTable=inputTable, sensorstatusChangeToLow=sensorstatusChangeToLow, status=status, dod=dod, valuestr=valuestr, numbersensors=numbersensors, analogname=analogname, valueint10=valueint10, ethernetboxConfigSaved=ethernetboxConfigSaved, inputlineChangeToHigh=inputlineChangeToHigh, ethernetboxNotificationPowerUp=ethernetboxNotificationPowerUp, address=address, analogindex=analogindex, valueint=valueint, outputstatus=outputstatus, hysteresis=hysteresis, misc=misc, ethernetboxNotificationInputLineChangeToLow=ethernetboxNotificationInputLineChangeToLow, valid=valid, analogEntry=analogEntry, outputindex=outputindex, betternetworks=betternetworks, private=private, DisplayString=DisplayString, inputEntry=inputEntry, lowlimit=lowlimit, sensorstatusChangeToHigh=sensorstatusChangeToHigh, outputEntry=outputEntry, inputindex=inputindex, version=version, ethernetboxObjects=ethernetboxObjects, sensorEntry=sensorEntry, location=location)
