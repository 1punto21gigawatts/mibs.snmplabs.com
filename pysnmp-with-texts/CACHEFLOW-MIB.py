#
# PySNMP MIB module CACHEFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CACHEFLOW-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:44:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, TimeTicks, Gauge32, Counter64, Unsigned32, iso, enterprises, Counter32, IpAddress, ObjectIdentity, MibIdentifier, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "TimeTicks", "Gauge32", "Counter64", "Unsigned32", "iso", "enterprises", "Counter32", "IpAddress", "ObjectIdentity", "MibIdentifier", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cacheFlow = ModuleIdentity((1, 3, 6, 1, 4, 1, 3417))
if mibBuilder.loadTexts: cacheFlow.setLastUpdated('9910181700')
if mibBuilder.loadTexts: cacheFlow.setOrganization('CacheFlow Inc.')
if mibBuilder.loadTexts: cacheFlow.setContactInfo('support@CacheFlow.com http://www.CacheFlow.com')
if mibBuilder.loadTexts: cacheFlow.setDescription('The MIB module for CacheFlow')
products = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1))
cacheFlowMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 2))
cache = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1))
cacheFlow1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 1))
cacheFlow100 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 2))
cacheFlow500 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 3))
cacheFlow2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 4))
cacheFlow5000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 5))
cacheFlow500A = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 6))
cacheFlow3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 7))
cacheFlow5x5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 8))
cacheFlow110 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 9))
cacheFlow600 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 10))
cacheFlow6000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 11))
cacheFlow610 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 12))
cacheFlow6x5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 13))
cacheFlow3000s = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 14))
cacheFlow5000s = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 15))
cacheFlow7x5 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 16))
cacheFlow710 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 17))
cacheFlow7000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 18))
cacheFlow611 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 19))
cacheFlow800 = MibIdentifier((1, 3, 6, 1, 4, 1, 3417, 1, 1, 20))
mibBuilder.exportSymbols("CACHEFLOW-MIB", cacheFlow1000=cacheFlow1000, cacheFlow5000s=cacheFlow5000s, PYSNMP_MODULE_ID=cacheFlow, cacheFlow3000=cacheFlow3000, cacheFlow100=cacheFlow100, products=products, cacheFlowMgmt=cacheFlowMgmt, cacheFlow6x5=cacheFlow6x5, cache=cache, cacheFlow500A=cacheFlow500A, cacheFlow5000=cacheFlow5000, cacheFlow6000=cacheFlow6000, cacheFlow7000=cacheFlow7000, cacheFlow610=cacheFlow610, cacheFlow3000s=cacheFlow3000s, cacheFlow=cacheFlow, cacheFlow7x5=cacheFlow7x5, cacheFlow5x5=cacheFlow5x5, cacheFlow800=cacheFlow800, cacheFlow110=cacheFlow110, cacheFlow500=cacheFlow500, cacheFlow600=cacheFlow600, cacheFlow611=cacheFlow611, cacheFlow710=cacheFlow710, cacheFlow2000=cacheFlow2000)
