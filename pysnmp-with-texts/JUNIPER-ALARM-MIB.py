#
# PySNMP MIB module JUNIPER-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-ALARM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:58:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, MibIdentifier, Bits, iso, ObjectIdentity, NotificationType, Gauge32, IpAddress, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "MibIdentifier", "Bits", "iso", "ObjectIdentity", "NotificationType", "Gauge32", "IpAddress", "Unsigned32", "TimeTicks")
TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DisplayString")
jnxAlarms = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 4))
if mibBuilder.loadTexts: jnxAlarms.setLastUpdated('200307182153Z')
if mibBuilder.loadTexts: jnxAlarms.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxAlarms.setContactInfo(' Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net')
if mibBuilder.loadTexts: jnxAlarms.setDescription("This is Juniper Networks' implementation of enterprise specific MIB for alarms from the router chassis box.")
jnxCraftAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2))
jnxAlarmRelayMode = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("passOn", 2), ("cutOff", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAlarmRelayMode.setStatus('current')
if mibBuilder.loadTexts: jnxAlarmRelayMode.setDescription('The alarm relay mode of the craft interface panel for both yellow and red alarms. Both yellow and red alarms could be cut off by a front panel Alarm Cutoff / Lamp Test (ACO/LT) button. In the pass-on mode, the alarm relay will be activated to pass on the yellow or red alarms. In the cut-off mode, both yellow and red alarms will be cut off from the alarm relays which are normally connected to audible sirens or visual flashing devices.')
jnxYellowAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2))
jnxYellowAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmState.setStatus('current')
if mibBuilder.loadTexts: jnxYellowAlarmState.setDescription('The yellow alarm state on the craft interface panel. The yellow alarm is on when there is some system warning such as maintenance alert or significant temperature increase. This yellow alarm state could be turned off by the ACO/LT (Alarm Cut Off / Lamp Test) button on the front panel module.')
jnxYellowAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmCount.setStatus('current')
if mibBuilder.loadTexts: jnxYellowAlarmCount.setDescription('The number of currently active and non-silent yellow alarms. This object is independent of the ACO/LT (Alarm Cut Off / Lamp Test) button.')
jnxYellowAlarmLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmLastChange.setStatus('current')
if mibBuilder.loadTexts: jnxYellowAlarmLastChange.setDescription('The value of sysUpTime when the yellow alarm last changed - either from off to on or vice versa. Zero if unknown or never changed since the agent was up.')
jnxRedAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3))
jnxRedAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmState.setStatus('current')
if mibBuilder.loadTexts: jnxRedAlarmState.setDescription('The red alarm indication on the craft interface panel. The red alarm is on when there is some system failure or power supply failure or the system is experiencing a hardware malfunction or some threshold is being exceeded. This red alarm state could be turned off by the ACO/LT (Alarm Cut Off / Lamp Test) button on the front panel module.')
jnxRedAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmCount.setStatus('current')
if mibBuilder.loadTexts: jnxRedAlarmCount.setDescription('The number of currently active and non-silent red alarms. This object is independent of the ACO/LT (Alarm Cut Off / Lamp Test) button.')
jnxRedAlarmLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmLastChange.setStatus('current')
if mibBuilder.loadTexts: jnxRedAlarmLastChange.setDescription('The value of sysUpTime when the red alarm last changed - either from off to on or vice versa. Zero if unknown or never changed since the agent was up.')
mibBuilder.exportSymbols("JUNIPER-ALARM-MIB", jnxYellowAlarmState=jnxYellowAlarmState, jnxRedAlarmLastChange=jnxRedAlarmLastChange, PYSNMP_MODULE_ID=jnxAlarms, jnxRedAlarms=jnxRedAlarms, jnxYellowAlarms=jnxYellowAlarms, jnxRedAlarmState=jnxRedAlarmState, jnxAlarms=jnxAlarms, jnxRedAlarmCount=jnxRedAlarmCount, jnxYellowAlarmLastChange=jnxYellowAlarmLastChange, jnxCraftAlarms=jnxCraftAlarms, jnxYellowAlarmCount=jnxYellowAlarmCount, jnxAlarmRelayMode=jnxAlarmRelayMode)
