#
# PySNMP MIB module AT-RESOURCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-RESOURCE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:30:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
sysinfo, = mibBuilder.importSymbols("AT-SMI-MIB", "sysinfo")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, iso, NotificationType, Integer32, ObjectIdentity, MibIdentifier, Gauge32, Counter32, IpAddress, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "iso", "NotificationType", "Integer32", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter32", "IpAddress", "ModuleIdentity", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
resource = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21))
resource.setRevisions(('2012-09-21 00:00', '2012-05-22 03:00', '2010-06-15 00:15', '2009-10-22 23:00', '2008-10-20 10:00', '1920-08-09 04:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: resource.setRevisionsDescriptions(('Added chassis switch (e.g. SBx8100) descriptions to stack-related MIB objects', 'rscStkId range now 1..12 (from 1..8).', 'MIB revision history dates in descriptions updated.', 'In standalone mode the AT-RESOURCE-MIB was indexed by the default stack member ID of 1. This has been updated to index by the stack member ID of the device.', 'Add objects for displaying host information. ', 'Initial version.',))
if mibBuilder.loadTexts: resource.setLastUpdated('201209210000Z')
if mibBuilder.loadTexts: resource.setOrganization('Allied Telesis, Inc.')
if mibBuilder.loadTexts: resource.setContactInfo(' http://www.alliedtelesis.com')
if mibBuilder.loadTexts: resource.setDescription('The AT-RESOURCE-MIB contains objects for displaying system hardware resource information.')
rscBoardTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1), )
if mibBuilder.loadTexts: rscBoardTable.setStatus('current')
if mibBuilder.loadTexts: rscBoardTable.setDescription('A table of information about boards installed in a device.')
rscBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1), ).setIndexNames((0, "AT-RESOURCE-MIB", "rscStkId"), (0, "AT-RESOURCE-MIB", "rscResourceId"))
if mibBuilder.loadTexts: rscBoardEntry.setStatus('current')
if mibBuilder.loadTexts: rscBoardEntry.setDescription('A conceptual row of entries of rscBoardTable.')
rscStkId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 12)))
if mibBuilder.loadTexts: rscStkId.setStatus('current')
if mibBuilder.loadTexts: rscStkId.setDescription('The ID of the stack member. It is a number assigned to a stackable unit by the operating system when it is stacked. An initial value of 1 is given to a stand alone unit. For a chassis switch, it corresponds to the card ID.')
rscResourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)))
if mibBuilder.loadTexts: rscResourceId.setStatus('current')
if mibBuilder.loadTexts: rscResourceId.setDescription('The resource ID number of the board. It is a number assigned to a hardware resource when the operating system detects its existence.')
rscBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscBoardType.setStatus('current')
if mibBuilder.loadTexts: rscBoardType.setDescription("This object indicates the type of the board. Its value can be 'Base', 'Expansion', 'Fan module' or 'PSU', etc.")
rscBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscBoardName.setStatus('current')
if mibBuilder.loadTexts: rscBoardName.setDescription("This object represents the name of the board. Its value can be 'SwitchBlade x908', 'XEM-12S' or 'AT-PWR05-AC', etc.")
rscBoardID = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscBoardID.setStatus('current')
if mibBuilder.loadTexts: rscBoardID.setDescription('This object represents the ID number of the board. Its value is an Allied Telesis assigned number, such as 274 for the XEM-12S, or 255 for the AT-9924Ts. ')
rscBoardBay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rscBoardBay.setStatus('current')
if mibBuilder.loadTexts: rscBoardBay.setDescription("This object indicates the board installation location. Its value can be 'Bay1', 'Bay2' or 'PSU1', etc. For a base board, it has a value of a single character space. ")
rscBoardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscBoardRevision.setStatus('current')
if mibBuilder.loadTexts: rscBoardRevision.setDescription('This object represents the revision number of the board.')
rscBoardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rscBoardSerialNumber.setStatus('current')
if mibBuilder.loadTexts: rscBoardSerialNumber.setDescription('This object represents the serial number of the board.')
hostInfoTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2), )
if mibBuilder.loadTexts: hostInfoTable.setStatus('current')
if mibBuilder.loadTexts: hostInfoTable.setDescription('Description.')
hostInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2, 1), ).setIndexNames((0, "AT-RESOURCE-MIB", "rscStkId"))
if mibBuilder.loadTexts: hostInfoEntry.setStatus('current')
if mibBuilder.loadTexts: hostInfoEntry.setDescription('Description.')
hostInfoDRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInfoDRAM.setStatus('current')
if mibBuilder.loadTexts: hostInfoDRAM.setDescription('This object indicates the host DRAM information.')
hostInfoFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInfoFlash.setStatus('current')
if mibBuilder.loadTexts: hostInfoFlash.setDescription('This object indicates the host Flash information.')
hostInfoUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInfoUptime.setStatus('current')
if mibBuilder.loadTexts: hostInfoUptime.setDescription('This object represents the host up time.')
hostInfoBootloaderVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 3, 21, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostInfoBootloaderVersion.setStatus('current')
if mibBuilder.loadTexts: hostInfoBootloaderVersion.setDescription('This object represents the host boot loader version.')
mibBuilder.exportSymbols("AT-RESOURCE-MIB", rscBoardEntry=rscBoardEntry, rscBoardTable=rscBoardTable, hostInfoDRAM=hostInfoDRAM, rscBoardBay=rscBoardBay, rscBoardID=rscBoardID, rscBoardRevision=rscBoardRevision, rscBoardSerialNumber=rscBoardSerialNumber, rscResourceId=rscResourceId, hostInfoTable=hostInfoTable, hostInfoBootloaderVersion=hostInfoBootloaderVersion, hostInfoUptime=hostInfoUptime, PYSNMP_MODULE_ID=resource, rscStkId=rscStkId, rscBoardType=rscBoardType, resource=resource, hostInfoFlash=hostInfoFlash, rscBoardName=rscBoardName, hostInfoEntry=hostInfoEntry)
