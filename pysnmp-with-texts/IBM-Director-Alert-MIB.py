#
# PySNMP MIB module IBM-Director-Alert-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM-Director-Alert-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:50:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, IpAddress, MibIdentifier, NotificationType, iso, Bits, TimeTicks, Counter64, ObjectIdentity, enterprises, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "MibIdentifier", "NotificationType", "iso", "Bits", "TimeTicks", "Counter64", "ObjectIdentity", "enterprises", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Unsigned32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
director = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159))
description = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 202))
details = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696))
directorTraps = ModuleIdentity((1, 3, 6, 1, 4, 1, 2, 6, 159, 201))
directorTraps.setRevisions(('2004-04-21 00:00', '2003-07-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: directorTraps.setRevisionsDescriptions(('This MIB was revised to include traps for more possible events generated by the IBM Director event subsystem.', 'The initial version of this MIB.',))
if mibBuilder.loadTexts: directorTraps.setLastUpdated('200404210000Z')
if mibBuilder.loadTexts: directorTraps.setOrganization('IBM Corp.')
if mibBuilder.loadTexts: directorTraps.setContactInfo('IBM Corporation')
if mibBuilder.loadTexts: directorTraps.setDescription('This MIB is for use with the Event Action Plan Builder of IBM Director.')
generalEvent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: generalEvent.setStatus('current')
if mibBuilder.loadTexts: generalEvent.setDescription('This is a IBM Director event converted into an SNMP trap. This trap is only used for events with no mapping.')
directorFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1))
topology = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1))
online = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: online.setStatus('current')
if mibBuilder.loadTexts: online.setDescription("The managed object's state has changed to online.")
offline = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: offline.setStatus('current')
if mibBuilder.loadTexts: offline.setDescription("The managed object's state has changed to offline.")
create = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: create.setStatus('current')
if mibBuilder.loadTexts: create.setDescription('The managed object has been created.')
change = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: change.setStatus('current')
if mibBuilder.loadTexts: change.setDescription('The managed object has changed.')
destroy = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 1, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: destroy.setStatus('current')
if mibBuilder.loadTexts: destroy.setDescription('The managed object has been destroyed.')
directorAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2))
processMonitor = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: processMonitor.setStatus('current')
if mibBuilder.loadTexts: processMonitor.setDescription('The process monitor threshold has generated an event.')
cpuMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 2))
cpuUtilization = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: cpuUtilization.setStatus('current')
if mibBuilder.loadTexts: cpuUtilization.setDescription('The CPU utilization monitor threshold has generated an event.')
processCount = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: processCount.setStatus('current')
if mibBuilder.loadTexts: processCount.setDescription('The process count monitor threshold has generated an event.')
diskMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 3))
driveSpaceUsed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: driveSpaceUsed.setStatus('current')
if mibBuilder.loadTexts: driveSpaceUsed.setDescription('The drive space used monitor threshold has generated an event.')
driveSpaceUsedPercent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: driveSpaceUsedPercent.setStatus('current')
if mibBuilder.loadTexts: driveSpaceUsedPercent.setDescription('The percentage of drive space used monitor threshold has generated an event.')
driveSpaceRemaining = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 3, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: driveSpaceRemaining.setStatus('current')
if mibBuilder.loadTexts: driveSpaceRemaining.setDescription('The drive space remaining monitor threshold has generated an event.')
driveWorkload = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 3, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: driveWorkload.setStatus('current')
if mibBuilder.loadTexts: driveWorkload.setDescription('The drive workload monitor threshold has generated an event.')
memoryMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 4))
lockedMemory = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: lockedMemory.setStatus('current')
if mibBuilder.loadTexts: lockedMemory.setDescription('The locked memory monitor threshold has generated an event.')
memoryUsage = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: memoryUsage.setStatus('current')
if mibBuilder.loadTexts: memoryUsage.setDescription('The memory usage monitor threshold has generated an event.')
nicMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 5))
ntPerfMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 6))
totalPrivilegedTimePercent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 6, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: totalPrivilegedTimePercent.setStatus('current')
if mibBuilder.loadTexts: totalPrivilegedTimePercent.setDescription('The percentage of total privileged time monitor threshold has generated an event.')
fileReadOperationsPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: fileReadOperationsPerSec.setStatus('current')
if mibBuilder.loadTexts: fileReadOperationsPerSec.setDescription('The files read per second monitor threshold has generated an event.')
tcpipMonitors = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7))
udpPacketsSentPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: udpPacketsSentPerSec.setStatus('current')
if mibBuilder.loadTexts: udpPacketsSentPerSec.setDescription('A threshold event for the number of UDP packets sent per second.')
udpPacketsReceivedPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: udpPacketsReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: udpPacketsReceivedPerSec.setDescription('A threshold event for the number of UDP packets received per second.')
ipPacketsSentPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: ipPacketsSentPerSec.setStatus('current')
if mibBuilder.loadTexts: ipPacketsSentPerSec.setDescription('A threshold event for the number of IP packets sent per second.')
ipPacketsReceivedPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: ipPacketsReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: ipPacketsReceivedPerSec.setDescription('A threshold event for the number of IP packets received per second.')
ipErrorPacketsReceivedPerSec = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: ipErrorPacketsReceivedPerSec.setStatus('current')
if mibBuilder.loadTexts: ipErrorPacketsReceivedPerSec.setDescription('A threshold event for the number of IP packets received with errors per second.')
tcpConnections = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 7, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"))
if mibBuilder.loadTexts: tcpConnections.setStatus('current')
if mibBuilder.loadTexts: tcpConnections.setDescription('A threshold event for the number of TCP connections.')
monitorEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8))
actualValue = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: actualValue.setStatus('current')
if mibBuilder.loadTexts: actualValue.setDescription('The actual value of the monitor.')
duration = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: duration.setStatus('current')
if mibBuilder.loadTexts: duration.setDescription('The duration of this monitor.')
monitorResource = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: monitorResource.setStatus('current')
if mibBuilder.loadTexts: monitorResource.setDescription('The monitor resource.')
thresholdName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdName.setStatus('current')
if mibBuilder.loadTexts: thresholdName.setDescription('The name of the monitor threshold.')
thresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 2, 8, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdValue.setStatus('current')
if mibBuilder.loadTexts: thresholdValue.setDescription('The value of the monitor threshold.')
test = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 3))
action = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: action.setStatus('current')
if mibBuilder.loadTexts: action.setDescription('The test action event. An internally generated event for the purpose of testing the action configuration.')
console = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4))
consoleEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1))
userID = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userID.setStatus('current')
if mibBuilder.loadTexts: userID.setDescription('The console user ID.')
address = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: address.setStatus('current')
if mibBuilder.loadTexts: address.setDescription('The console address.')
userName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userName.setStatus('current')
if mibBuilder.loadTexts: userName.setDescription('The console username.')
userDescription = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userDescription.setStatus('current')
if mibBuilder.loadTexts: userDescription.setDescription("The console username's description.")
userLocale = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userLocale.setStatus('current')
if mibBuilder.loadTexts: userLocale.setDescription("The console user's locale.")
logonFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2))
badPassword = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: badPassword.setStatus('current')
if mibBuilder.loadTexts: badPassword.setDescription('When attempting to logon to the console, a bad password was used.')
badUserID = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: badUserID.setStatus('current')
if mibBuilder.loadTexts: badUserID.setDescription('When attempting to logon to the console, a bad user ID was used.')
disabledUserID = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: disabledUserID.setStatus('current')
if mibBuilder.loadTexts: disabledUserID.setDescription('When attempting to logon to the console, a disabled user ID was used.')
downlevelConsole = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: downlevelConsole.setStatus('current')
if mibBuilder.loadTexts: downlevelConsole.setDescription('When attempting to logon to the console, a downlevel console was used.')
expiredPassword = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: expiredPassword.setStatus('current')
if mibBuilder.loadTexts: expiredPassword.setDescription('When attempting to logon to the console, an expired password was used.')
tooManyActiveIDs = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: tooManyActiveIDs.setStatus('current')
if mibBuilder.loadTexts: tooManyActiveIDs.setDescription('When attempting to logon to the console, too many IDs were active.')
tooManyActiveLogons = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: tooManyActiveLogons.setStatus('current')
if mibBuilder.loadTexts: tooManyActiveLogons.setDescription('When attempting to logon to the console, too many logons were active.')
uplevelConsole = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 2, 8)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"))
if mibBuilder.loadTexts: uplevelConsole.setStatus('current')
if mibBuilder.loadTexts: uplevelConsole.setDescription('When attempting to logon to the console, an uplevel console was used.')
logoff = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"), ("IBM-Director-Alert-MIB", "userName"), ("IBM-Director-Alert-MIB", "userDescription"), ("IBM-Director-Alert-MIB", "userLocale"))
if mibBuilder.loadTexts: logoff.setStatus('current')
if mibBuilder.loadTexts: logoff.setDescription('A user has logged off the console.')
logon = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 1, 4, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"), ("IBM-Director-Alert-MIB", "userName"), ("IBM-Director-Alert-MIB", "userDescription"), ("IBM-Director-Alert-MIB", "userLocale"))
if mibBuilder.loadTexts: logon.setStatus('current')
if mibBuilder.loadTexts: logon.setDescription('A user has logged on the console.')
cimFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3))
windowsNTEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1))
windowsNTEventLogEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1))
category = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: category.setStatus('current')
if mibBuilder.loadTexts: category.setDescription('The Windows Event Log category.')
categoryString = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: categoryString.setStatus('current')
if mibBuilder.loadTexts: categoryString.setDescription('The Windows Event Log category string.')
computerName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: computerName.setStatus('current')
if mibBuilder.loadTexts: computerName.setDescription('The computer name of the Windows Event Log event.')
data = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: data.setStatus('current')
if mibBuilder.loadTexts: data.setDescription('The Windows Event Log data for the event.')
eventLogCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLogCode.setStatus('current')
if mibBuilder.loadTexts: eventLogCode.setDescription('The Windows Event Log numeric event ID.')
eventLogIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLogIdentifier.setStatus('current')
if mibBuilder.loadTexts: eventLogIdentifier.setDescription('The Windows Event Log numeric event identifier.')
eventLogType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLogType.setStatus('current')
if mibBuilder.loadTexts: eventLogType.setDescription('The Windows Event Log numeric event type.')
insertionStrings = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: insertionStrings.setStatus('current')
if mibBuilder.loadTexts: insertionStrings.setDescription('The Windows Event Log insertion strings.')
logFile = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFile.setStatus('current')
if mibBuilder.loadTexts: logFile.setDescription('The Windows Event Log file name.')
message = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: message.setStatus('current')
if mibBuilder.loadTexts: message.setDescription('The Windows Event Log message string.')
recordNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: recordNumber.setStatus('current')
if mibBuilder.loadTexts: recordNumber.setDescription('The Windows Event Log record number.')
sourceName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceName.setStatus('current')
if mibBuilder.loadTexts: sourceName.setDescription('The Windows Event Log source name.')
type = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: type.setStatus('current')
if mibBuilder.loadTexts: type.setDescription('The Windows Event Log type.')
user = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: user.setStatus('current')
if mibBuilder.loadTexts: user.setDescription('The Windows Event Log user.')
applicationLog = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "category"), ("IBM-Director-Alert-MIB", "categoryString"), ("IBM-Director-Alert-MIB", "computerName"), ("IBM-Director-Alert-MIB", "data"), ("IBM-Director-Alert-MIB", "eventLogCode"), ("IBM-Director-Alert-MIB", "eventLogIdentifier"), ("IBM-Director-Alert-MIB", "eventLogType"), ("IBM-Director-Alert-MIB", "insertionStrings"), ("IBM-Director-Alert-MIB", "logFile"), ("IBM-Director-Alert-MIB", "message"), ("IBM-Director-Alert-MIB", "recordNumber"), ("IBM-Director-Alert-MIB", "sourceName"), ("IBM-Director-Alert-MIB", "type"), ("IBM-Director-Alert-MIB", "user"))
if mibBuilder.loadTexts: applicationLog.setStatus('current')
if mibBuilder.loadTexts: applicationLog.setDescription('The Windows NT application event log has changed.')
securityLog = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "category"), ("IBM-Director-Alert-MIB", "categoryString"), ("IBM-Director-Alert-MIB", "computerName"), ("IBM-Director-Alert-MIB", "data"), ("IBM-Director-Alert-MIB", "eventLogCode"), ("IBM-Director-Alert-MIB", "eventLogIdentifier"), ("IBM-Director-Alert-MIB", "eventLogType"), ("IBM-Director-Alert-MIB", "insertionStrings"), ("IBM-Director-Alert-MIB", "logFile"), ("IBM-Director-Alert-MIB", "message"), ("IBM-Director-Alert-MIB", "recordNumber"), ("IBM-Director-Alert-MIB", "sourceName"), ("IBM-Director-Alert-MIB", "type"), ("IBM-Director-Alert-MIB", "user"))
if mibBuilder.loadTexts: securityLog.setStatus('current')
if mibBuilder.loadTexts: securityLog.setDescription('The Windows NT application security log has changed.')
systemLog = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 1, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: systemLog.setStatus('current')
if mibBuilder.loadTexts: systemLog.setDescription('The Windows NT application system log has changed.')
windowsNTService = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2))
windowsNTServiceEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1))
acceptPause = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acceptPause.setStatus('current')
if mibBuilder.loadTexts: acceptPause.setDescription('Whether this service accepts the pause state change.')
acceptStop = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acceptStop.setStatus('current')
if mibBuilder.loadTexts: acceptStop.setDescription('Whether this service accepts the stop state change.')
caption = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caption.setStatus('current')
if mibBuilder.loadTexts: caption.setDescription('The caption string for this service.')
checkPoint = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: checkPoint.setStatus('current')
if mibBuilder.loadTexts: checkPoint.setDescription("The service's check point.")
creationClassName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: creationClassName.setStatus('current')
if mibBuilder.loadTexts: creationClassName.setDescription('The creation class name for the service.')
serviceDescription = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceDescription.setStatus('current')
if mibBuilder.loadTexts: serviceDescription.setDescription('The description of the service.')
desktopInteract = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: desktopInteract.setStatus('current')
if mibBuilder.loadTexts: desktopInteract.setDescription('Whether the service interacts with the desktop.')
displayName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: displayName.setStatus('current')
if mibBuilder.loadTexts: displayName.setDescription('The displayable name for the service.')
errorControl = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: errorControl.setStatus('current')
if mibBuilder.loadTexts: errorControl.setDescription('The error control value for the service.')
exitCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exitCode.setStatus('current')
if mibBuilder.loadTexts: exitCode.setDescription('The exit code of the process for the service.')
name = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: name.setStatus('current')
if mibBuilder.loadTexts: name.setDescription('The name of the service.')
pathName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pathName.setStatus('current')
if mibBuilder.loadTexts: pathName.setDescription('The path name for the service.')
processId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processId.setStatus('current')
if mibBuilder.loadTexts: processId.setDescription('The process ID of the running service.')
serviceSpecificExitCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceSpecificExitCode.setStatus('current')
if mibBuilder.loadTexts: serviceSpecificExitCode.setDescription('The specific exit code for the service.')
serviceType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceType.setStatus('current')
if mibBuilder.loadTexts: serviceType.setDescription('The type of service.')
startMode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: startMode.setStatus('current')
if mibBuilder.loadTexts: startMode.setDescription('The start mode for the service.')
startName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: startName.setStatus('current')
if mibBuilder.loadTexts: startName.setDescription('The start name for the service.')
started = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: started.setStatus('current')
if mibBuilder.loadTexts: started.setDescription('Whether this service has started.')
serviceState = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceState.setStatus('current')
if mibBuilder.loadTexts: serviceState.setDescription('The state of the service.')
status = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 20), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('current')
if mibBuilder.loadTexts: status.setDescription('The status of the service.')
systemCreationClassName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCreationClassName.setStatus('current')
if mibBuilder.loadTexts: systemCreationClassName.setDescription('The system creation class name for the service.')
systemName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 22), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemName.setStatus('current')
if mibBuilder.loadTexts: systemName.setDescription('The system name for the service.')
tagId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tagId.setStatus('current')
if mibBuilder.loadTexts: tagId.setDescription('The tag ID of the service.')
waitHint = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: waitHint.setStatus('current')
if mibBuilder.loadTexts: waitHint.setDescription('The value of the wait hint for the service.')
startedService = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "acceptPause"), ("IBM-Director-Alert-MIB", "acceptStop"), ("IBM-Director-Alert-MIB", "caption"), ("IBM-Director-Alert-MIB", "checkPoint"), ("IBM-Director-Alert-MIB", "creationClassName"), ("IBM-Director-Alert-MIB", "serviceDescription"), ("IBM-Director-Alert-MIB", "desktopInteract"), ("IBM-Director-Alert-MIB", "displayName"), ("IBM-Director-Alert-MIB", "errorControl"), ("IBM-Director-Alert-MIB", "exitCode"), ("IBM-Director-Alert-MIB", "name"), ("IBM-Director-Alert-MIB", "pathName"), ("IBM-Director-Alert-MIB", "processId"), ("IBM-Director-Alert-MIB", "serviceSpecificExitCode"), ("IBM-Director-Alert-MIB", "serviceType"), ("IBM-Director-Alert-MIB", "startMode"), ("IBM-Director-Alert-MIB", "startName"), ("IBM-Director-Alert-MIB", "started"), ("IBM-Director-Alert-MIB", "serviceState"), ("IBM-Director-Alert-MIB", "status"), ("IBM-Director-Alert-MIB", "systemCreationClassName"), ("IBM-Director-Alert-MIB", "systemName"), ("IBM-Director-Alert-MIB", "tagId"), ("IBM-Director-Alert-MIB", "waitHint"))
if mibBuilder.loadTexts: startedService.setStatus('current')
if mibBuilder.loadTexts: startedService.setDescription('A Windows NT service has started.')
stoppedService = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 2, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "acceptPause"), ("IBM-Director-Alert-MIB", "acceptStop"), ("IBM-Director-Alert-MIB", "caption"), ("IBM-Director-Alert-MIB", "checkPoint"), ("IBM-Director-Alert-MIB", "creationClassName"), ("IBM-Director-Alert-MIB", "serviceDescription"), ("IBM-Director-Alert-MIB", "desktopInteract"), ("IBM-Director-Alert-MIB", "displayName"), ("IBM-Director-Alert-MIB", "errorControl"), ("IBM-Director-Alert-MIB", "exitCode"), ("IBM-Director-Alert-MIB", "name"), ("IBM-Director-Alert-MIB", "pathName"), ("IBM-Director-Alert-MIB", "processId"), ("IBM-Director-Alert-MIB", "serviceSpecificExitCode"), ("IBM-Director-Alert-MIB", "serviceType"), ("IBM-Director-Alert-MIB", "startMode"), ("IBM-Director-Alert-MIB", "startName"), ("IBM-Director-Alert-MIB", "started"), ("IBM-Director-Alert-MIB", "serviceState"), ("IBM-Director-Alert-MIB", "status"), ("IBM-Director-Alert-MIB", "systemCreationClassName"), ("IBM-Director-Alert-MIB", "systemName"), ("IBM-Director-Alert-MIB", "tagId"), ("IBM-Director-Alert-MIB", "waitHint"))
if mibBuilder.loadTexts: stoppedService.setStatus('current')
if mibBuilder.loadTexts: stoppedService.setDescription('A Windows NT service has stopped.')
windowsRegistry = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3))
windowsRegistryEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 1))
hive = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hive.setStatus('current')
if mibBuilder.loadTexts: hive.setDescription('The Windows Registry hive for this event.')
rootPath = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rootPath.setStatus('current')
if mibBuilder.loadTexts: rootPath.setDescription('The Windows Registry root path for this event.')
securityDescriptor = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: securityDescriptor.setStatus('current')
if mibBuilder.loadTexts: securityDescriptor.setDescription('The Windows Registry security descriptor for this event.')
timeCreated = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeCreated.setStatus('current')
if mibBuilder.loadTexts: timeCreated.setDescription('The time this item was created in the Windows Registry.')
softwareTreeChanged = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "hive"), ("IBM-Director-Alert-MIB", "rootPath"), ("IBM-Director-Alert-MIB", "securityDescriptor"), ("IBM-Director-Alert-MIB", "timeCreated"))
if mibBuilder.loadTexts: softwareTreeChanged.setStatus('current')
if mibBuilder.loadTexts: softwareTreeChanged.setDescription('The Windows software tree section of the registry has changed.')
systemTreeChanged = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 3, 3, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "hive"), ("IBM-Director-Alert-MIB", "rootPath"), ("IBM-Director-Alert-MIB", "securityDescriptor"), ("IBM-Director-Alert-MIB", "timeCreated"))
if mibBuilder.loadTexts: systemTreeChanged.setStatus('current')
if mibBuilder.loadTexts: systemTreeChanged.setDescription('The Windows system tree section of the registry has changed.')
mpaFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4))
mpaEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1))
alertCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alertCode.setStatus('current')
if mibBuilder.loadTexts: alertCode.setDescription('The alert code.')
busId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: busId.setStatus('current')
if mibBuilder.loadTexts: busId.setDescription('The bus ID.')
componentId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: componentId.setStatus('current')
if mibBuilder.loadTexts: componentId.setDescription('The component ID.')
firmwareCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareCode.setStatus('current')
if mibBuilder.loadTexts: firmwareCode.setDescription('The firmware identification code.')
ipAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAddress1.setStatus('current')
if mibBuilder.loadTexts: ipAddress1.setDescription('The first IP address.')
ipAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipAddress2.setStatus('current')
if mibBuilder.loadTexts: ipAddress2.setDescription('The second IP address.')
issue = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: issue.setStatus('current')
if mibBuilder.loadTexts: issue.setDescription('The issue for the event.')
powerDomain = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerDomain.setStatus('current')
if mibBuilder.loadTexts: powerDomain.setDescription('The domain of the power supply.')
reason = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: reason.setStatus('current')
if mibBuilder.loadTexts: reason.setDescription('The reason for the event.')
scsiId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: scsiId.setStatus('current')
if mibBuilder.loadTexts: scsiId.setDescription('The ID of the SCSI device.')
side = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: side.setStatus('current')
if mibBuilder.loadTexts: side.setDescription('The side in which the event occured.')
newState = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: newState.setStatus('current')
if mibBuilder.loadTexts: newState.setDescription('The new state.')
temperatureSensor = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensor.setStatus('current')
if mibBuilder.loadTexts: temperatureSensor.setDescription('The current temperature.')
threshold = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threshold.setStatus('current')
if mibBuilder.loadTexts: threshold.setDescription('The threshold for the event.')
universalUniqueId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalUniqueId.setStatus('current')
if mibBuilder.loadTexts: universalUniqueId.setDescription('The universal unique ID.')
senderUniversalUniqueId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: senderUniversalUniqueId.setStatus('current')
if mibBuilder.loadTexts: senderUniversalUniqueId.setDescription('The universal unique ID of the sender.')
sourceUniversalUniqueId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 17), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceUniversalUniqueId.setStatus('current')
if mibBuilder.loadTexts: sourceUniversalUniqueId.setDescription('The universal unique ID of the source.')
unitNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unitNumber.setStatus('current')
if mibBuilder.loadTexts: unitNumber.setDescription('The unit number.')
voltageSensor = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensor.setStatus('current')
if mibBuilder.loadTexts: voltageSensor.setDescription('The voltage sensor.')
component = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2))
bladeServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1))
coD = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1, 1))
codEnabled = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: codEnabled.setStatus('current')
if mibBuilder.loadTexts: codEnabled.setDescription('The CoD has been enabled.')
bladeServerCommunication = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: bladeServerCommunication.setStatus('current')
if mibBuilder.loadTexts: bladeServerCommunication.setDescription('Communication with a blade has been established.')
bladeServerInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: bladeServerInserted.setStatus('current')
if mibBuilder.loadTexts: bladeServerInserted.setDescription('A blade has been inserted.')
bladeServerRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 1, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: bladeServerRemoved.setStatus('current')
if mibBuilder.loadTexts: bladeServerRemoved.setDescription('A blade has been removed.')
bus = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 2))
busCommunication = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "busId"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: busCommunication.setStatus('current')
if mibBuilder.loadTexts: busCommunication.setDescription('Communication with a bus has been established.')
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 3))
chassisConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "componentId"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "issue"), ("IBM-Director-Alert-MIB", "powerDomain"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: chassisConfiguration.setStatus('current')
if mibBuilder.loadTexts: chassisConfiguration.setDescription('The blade chassis configuration has changed.')
chassisFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "issue"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: chassisFailed.setStatus('current')
if mibBuilder.loadTexts: chassisFailed.setDescription('The blade chassis has failed.')
dasd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 4))
dasdFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "scsiId"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: dasdFailed.setStatus('current')
if mibBuilder.loadTexts: dasdFailed.setDescription('a direct access storage device has failed.')
dasdInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "scsiId"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: dasdInserted.setStatus('current')
if mibBuilder.loadTexts: dasdInserted.setDescription('A direct access storage device has been inserted.')
dasdRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 4, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "scsiId"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: dasdRemoved.setStatus('current')
if mibBuilder.loadTexts: dasdRemoved.setDescription('A direct access storage device has been removed.')
memory = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 5))
memoryFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: memoryFailed.setStatus('current')
if mibBuilder.loadTexts: memoryFailed.setDescription('Some memory has failed.')
componentFan = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 6))
componentFanFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 6, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: componentFanFailed.setStatus('current')
if mibBuilder.loadTexts: componentFanFailed.setDescription('A fan has failed.')
componentFanInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: componentFanInserted.setStatus('current')
if mibBuilder.loadTexts: componentFanInserted.setDescription('A fan has been inserted.')
componentFanPfa = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 6, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: componentFanPfa.setStatus('current')
if mibBuilder.loadTexts: componentFanPfa.setDescription('The fan component has generated a PFA.')
componentFanRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 6, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: componentFanRemoved.setStatus('current')
if mibBuilder.loadTexts: componentFanRemoved.setDescription('A fan has been removed.')
hardwareInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 7))
hardwareCrashDump = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 7, 1))
hardwareCrashDumpAborted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 7, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: hardwareCrashDumpAborted.setStatus('current')
if mibBuilder.loadTexts: hardwareCrashDumpAborted.setDescription('A hardware crash dump was aborted.')
hardwareCrashDumpCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 7, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: hardwareCrashDumpCompleted.setStatus('current')
if mibBuilder.loadTexts: hardwareCrashDumpCompleted.setDescription('A hardware crash dump has completed.')
hardwareCrashDumpInitiated = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 7, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: hardwareCrashDumpInitiated.setStatus('current')
if mibBuilder.loadTexts: hardwareCrashDumpInitiated.setDescription('A hardware crash dump has been initiated.')
ioModule = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8))
ioModuleConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "ipAddress1"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModuleConfiguration.setStatus('current')
if mibBuilder.loadTexts: ioModuleConfiguration.setDescription("An I/O module's configuration has changed.")
ioModuleFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModuleFailed.setStatus('current')
if mibBuilder.loadTexts: ioModuleFailed.setDescription('An I/O module has failed.')
ioModuleInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModuleInserted.setStatus('current')
if mibBuilder.loadTexts: ioModuleInserted.setDescription('An I/O module has been inserted.')
ioModulePost = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModulePost.setStatus('current')
if mibBuilder.loadTexts: ioModulePost.setDescription('An I/O module has past POST.')
ioModulePower = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 5))
ioModulePowerOn = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModulePowerOn.setStatus('current')
if mibBuilder.loadTexts: ioModulePowerOn.setDescription('An I/O module has been powered on.')
ioModulePowerOff = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 5, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModulePowerOff.setStatus('current')
if mibBuilder.loadTexts: ioModulePowerOff.setDescription('An I/O module has been powered off.')
ioModuleRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModuleRedundancy.setStatus('current')
if mibBuilder.loadTexts: ioModuleRedundancy.setDescription('An I/O module is a redundancy.')
ioModuleRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 8, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: ioModuleRemoved.setStatus('current')
if mibBuilder.loadTexts: ioModuleRemoved.setDescription('An I/O module has been removed.')
kvm = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 9))
kvmOwner = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 9, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: kvmOwner.setStatus('current')
if mibBuilder.loadTexts: kvmOwner.setDescription('The KVM owner has changed.')
osImage = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 10))
osImageCrashDump = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 10, 1))
osImageCrashDumpAborted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 10, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: osImageCrashDumpAborted.setStatus('current')
if mibBuilder.loadTexts: osImageCrashDumpAborted.setDescription('The operating system image crash dump was aborted.')
osImageCrashDumpCompleted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 10, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: osImageCrashDumpCompleted.setStatus('current')
if mibBuilder.loadTexts: osImageCrashDumpCompleted.setDescription('The operating system image crash dump has completed.')
osImageCrashDumpInitiated = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 10, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: osImageCrashDumpInitiated.setStatus('current')
if mibBuilder.loadTexts: osImageCrashDumpInitiated.setDescription('The operating system image crash dump has been initiated.')
componentPfa = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 11)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: componentPfa.setStatus('current')
if mibBuilder.loadTexts: componentPfa.setDescription('A component has generated a PFA.')
powerSubsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 12))
powerSubsystemLowFuel = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 12, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: powerSubsystemLowFuel.setStatus('current')
if mibBuilder.loadTexts: powerSubsystemLowFuel.setDescription('The power subsystem indicates low fuel.')
powerSubsystemOverCurrent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 12, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: powerSubsystemOverCurrent.setStatus('current')
if mibBuilder.loadTexts: powerSubsystemOverCurrent.setDescription('The power subsystem indicates over current.')
powerSubsystemOverPower = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 12, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: powerSubsystemOverPower.setStatus('current')
if mibBuilder.loadTexts: powerSubsystemOverPower.setDescription('The power subsystem indicates over power.')
powerSubsystemRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 12, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: powerSubsystemRedundancy.setStatus('current')
if mibBuilder.loadTexts: powerSubsystemRedundancy.setDescription('The power subsystem indicates a redundancy.')
powerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 13))
powerSupplyFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 13, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "reason"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: powerSupplyFailed.setStatus('current')
if mibBuilder.loadTexts: powerSupplyFailed.setDescription('A power supply has failed.')
powerSupplyInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 13, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: powerSupplyInserted.setStatus('current')
if mibBuilder.loadTexts: powerSupplyInserted.setDescription('A power supply has been inserted.')
powerSupplyRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 13, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: powerSupplyRemoved.setStatus('current')
if mibBuilder.loadTexts: powerSupplyRemoved.setDescription('A power supply has been removed.')
server = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 14))
serverPower = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 14, 1))
serverPowerOff = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 14, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serverPowerOff.setStatus('current')
if mibBuilder.loadTexts: serverPowerOff.setDescription('The server has powered off.')
serverPowerOn = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 14, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serverPowerOn.setStatus('current')
if mibBuilder.loadTexts: serverPowerOn.setDescription('The server has powered on.')
serverPowerState = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 14, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "newState"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serverPowerState.setStatus('current')
if mibBuilder.loadTexts: serverPowerState.setDescription("The server's power state has changed.")
serviceProcessor = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15))
serviceProcessorActive = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: serviceProcessorActive.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorActive.setDescription('A service processor is now active.')
serviceProcessorConfiguration = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorConfiguration.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorConfiguration.setDescription('A service processor configuration has changed.')
serviceProcessorInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: serviceProcessorInserted.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorInserted.setDescription('A service processor has been inserted.')
serviceProcessorLog = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: serviceProcessorLog.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorLog.setDescription('A service processor has generated a log.')
serviceProcessorNetworkStack = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "ipAddress1"), ("IBM-Director-Alert-MIB", "ipAddress2"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorNetworkStack.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorNetworkStack.setDescription('A service processor network stack has changed.')
serviceProcessorRedundancy = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorRedundancy.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorRedundancy.setDescription('A service processor detected a redundancy.')
serviceProcessorRemoteLogin = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorRemoteLogin.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorRemoteLogin.setDescription('A remove login was made into the service processor.')
serviceProcessorRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 8)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: serviceProcessorRemoved.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorRemoved.setDescription('A service processor has been removed.')
serviceProcessorRestart = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 9)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorRestart.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorRestart.setDescription('A service processor has been restarted.')
serviceProcessorTest = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 15, 10)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: serviceProcessorTest.setStatus('current')
if mibBuilder.loadTexts: serviceProcessorTest.setDescription('A service processor test was issued.')
smpExpansionModule = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 16))
smpExpansionModuleDisabled = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 16, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: smpExpansionModuleDisabled.setStatus('current')
if mibBuilder.loadTexts: smpExpansionModuleDisabled.setDescription('An SMP expansion module has been disabled.')
usb = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 17))
usbInserted = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 17, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: usbInserted.setStatus('current')
if mibBuilder.loadTexts: usbInserted.setDescription('A USB device has been inserted.')
usbOwner = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 17, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: usbOwner.setStatus('current')
if mibBuilder.loadTexts: usbOwner.setDescription('A USB device owner has changed.')
usbRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 17, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: usbRemoved.setStatus('current')
if mibBuilder.loadTexts: usbRemoved.setDescription('A USB device has been removed.')
vrm = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 18))
vrmFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 2, 18, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: vrmFailed.setStatus('current')
if mibBuilder.loadTexts: vrmFailed.setDescription('The VRM has failed.')
critical = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3))
hardDiskDrive = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: hardDiskDrive.setStatus('current')
if mibBuilder.loadTexts: hardDiskDrive.setDescription('A hard disk drive is in critical state.')
multipleFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: multipleFanFailure.setStatus('current')
if mibBuilder.loadTexts: multipleFanFailure.setDescription('Multiple fans have failed.')
powerFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 3))
powerFailureEpow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: powerFailureEpow.setStatus('current')
if mibBuilder.loadTexts: powerFailureEpow.setDescription('There was a critical power failure as a result of an EPOW.')
powerFailureFailed = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: powerFailureFailed.setStatus('current')
if mibBuilder.loadTexts: powerFailureFailed.setDescription('There was a critical power failure as a result of something failing.')
powerFailureRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 3, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: powerFailureRemoved.setStatus('current')
if mibBuilder.loadTexts: powerFailureRemoved.setDescription('There was a critical power failure as a result of something removed.')
criticalTamper = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTamper.setStatus('current')
if mibBuilder.loadTexts: criticalTamper.setDescription('Tampering with the system has caused a critical state.')
criticalTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 5))
criticalTemperatureAmbient = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTemperatureAmbient.setStatus('current')
if mibBuilder.loadTexts: criticalTemperatureAmbient.setDescription('The ambient temperature is in a critical state.')
criticalTemperaturePci = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 5, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTemperaturePci.setStatus('current')
if mibBuilder.loadTexts: criticalTemperaturePci.setDescription('The PCI temperature is in a critical state.')
criticalTemperaturePlanar = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 5, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTemperaturePlanar.setStatus('current')
if mibBuilder.loadTexts: criticalTemperaturePlanar.setDescription('The planar temperature is in a critical state.')
criticalVoltage = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6))
criticalTwelveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 1))
criticalTwelveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsHigh.setDescription('A critical state of 12V high has been detected.')
criticalTwelveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsLow.setDescription('A critical state of 12V low has been detected.')
criticalTwelveVoltsFaultA = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsFaultA.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsFaultA.setDescription('A critical state of 12V fault A has been detected.')
criticalTwelveVoltsFaultB = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsFaultB.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsFaultB.setDescription('A critical state of 12V fault B has been detected.')
criticalTwelveVoltsFaultC = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsFaultC.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsFaultC.setDescription('A critical state of 12V fault C has been detected.')
criticalTwelveVoltsFaultD = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwelveVoltsFaultD.setStatus('current')
if mibBuilder.loadTexts: criticalTwelveVoltsFaultD.setDescription('A critical state of 12V fault D has been detected.')
criticalOneVolt = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 6))
criticalOneVoltHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 6, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalOneVoltHigh.setStatus('current')
if mibBuilder.loadTexts: criticalOneVoltHigh.setDescription('A critical state of 1V high has been detected.')
criticalOneVoltLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalOneVoltLow.setStatus('current')
if mibBuilder.loadTexts: criticalOneVoltLow.setDescription('A critical state of 1V low has been detected.')
criticalTwoVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 7))
criticalTwoVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 7, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwoVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: criticalTwoVoltsHigh.setDescription('A critical state of 2V high has been detected.')
criticalTwoVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 7, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalTwoVoltsLow.setStatus('current')
if mibBuilder.loadTexts: criticalTwoVoltsLow.setDescription('A critical state of 2V low has been detected.')
criticalThreeVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 8))
criticalThreeVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 8, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsHigh.setDescription('A critical state of 3V high has been detected.')
criticalThreeVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 8, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsLow.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsLow.setDescription('A critical state of 3V low has been detected.')
criticalThreeVoltsPci = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 9))
criticalThreeVoltsPciHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 9, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsPciHigh.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsPciHigh.setDescription('A critical state of 3V high has been detected for the PCI.')
criticalThreeVoltsPciLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 9, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsPciLow.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsPciLow.setDescription('A critical state of 3V low has been detected for the PCI.')
criticalThreeVoltsStandby = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 10))
criticalThreeVoltsStandbyHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 10, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsStandbyHigh.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsStandbyHigh.setDescription('A critical state of 3V standby high has been detected.')
criticalThreeVoltsStandbyLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 10, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalThreeVoltsStandbyLow.setStatus('current')
if mibBuilder.loadTexts: criticalThreeVoltsStandbyLow.setDescription('A critical state of 3V standby low has been detected.')
criticalFiveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 11))
criticalFiveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 11, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsHigh.setDescription('A critical state of 5V high has been detected.')
criticalFiveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 11, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsLow.setDescription('A critical state of 5V low has been detected.')
criticalFiveVoltsFault = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 12))
criticalFiveVoltsFaultHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 12, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsFaultHigh.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsFaultHigh.setDescription('A critical state of 5V fault high has been detected.')
criticalFiveVoltsFaultLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 12, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsFaultLow.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsFaultLow.setDescription('A critical state of 5V fault low has been detected.')
criticalFiveVoltsPci = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 13))
criticalFiveVoltsPciHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 13, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsPciHigh.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsPciHigh.setDescription('A critical state of 5V high has been detected for the PCI.')
criticalFiveVoltsPciLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 13, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsPciLow.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsPciLow.setDescription('A critical state of 5V low has been detected for the PCI.')
criticalFiveVoltsStandby = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 14))
criticalFiveVoltsStandbyHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 14, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsStandbyHigh.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsStandbyHigh.setDescription('A critical state of 5V standby high has been detected.')
criticalFiveVoltsStandbyLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 14, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalFiveVoltsStandbyLow.setStatus('current')
if mibBuilder.loadTexts: criticalFiveVoltsStandbyLow.setDescription('A critical state of 5V standby low has been detected.')
criticalNTwelveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 15))
criticalNTwelveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 15, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalNTwelveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: criticalNTwelveVoltsHigh.setDescription('A critical state of negative 12V high has been detected.')
criticalNTwelveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 6, 15, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: criticalNTwelveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: criticalNTwelveVoltsLow.setDescription('A critical state of negative 12V low has been detected.')
voltageRegulatorModuleFailure = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 3, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: voltageRegulatorModuleFailure.setStatus('current')
if mibBuilder.loadTexts: voltageRegulatorModuleFailure.setDescription('The voltage regulator module has failed.')
deployment = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 4))
deploymentBoot = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: deploymentBoot.setStatus('current')
if mibBuilder.loadTexts: deploymentBoot.setDescription('Deployment has generated a boot event.')
deploymentLoader = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: deploymentLoader.setStatus('current')
if mibBuilder.loadTexts: deploymentLoader.setDescription('Deployment has generated a loader event.')
deploymentOs = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 4, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: deploymentOs.setStatus('current')
if mibBuilder.loadTexts: deploymentOs.setDescription('Deployment has generated an operating system event.')
deploymentPost = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 4, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: deploymentPost.setStatus('current')
if mibBuilder.loadTexts: deploymentPost.setDescription('Deployment has generated a POST event.')
environmental = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 5))
environmentalTemperature = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "temperatureSensor"), ("IBM-Director-Alert-MIB", "unitNumber"))
if mibBuilder.loadTexts: environmentalTemperature.setStatus('current')
if mibBuilder.loadTexts: environmentalTemperature.setDescription('The environmental temperature has changed.')
environmentalVoltage = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 5, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "componentId"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "threshold"), ("IBM-Director-Alert-MIB", "voltageSensor"))
if mibBuilder.loadTexts: environmentalVoltage.setStatus('current')
if mibBuilder.loadTexts: environmentalVoltage.setDescription('The environmental voltage has changed.')
nonCritical = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6))
nonCriticalFan = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 1))
nonCriticalFanRemoved = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFanRemoved.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFanRemoved.setDescription('A fan has been removed.')
redundantPower = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: redundantPower.setStatus('current')
if mibBuilder.loadTexts: redundantPower.setDescription('The system is now running on redundant power.')
singleFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: singleFanFailure.setStatus('current')
if mibBuilder.loadTexts: singleFanFailure.setDescription('A single fan has failed.')
nonCriticalTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 4))
nonCriticalTemperatureAmbient = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTemperatureAmbient.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTemperatureAmbient.setDescription('The ambient temperature is in a non critical state.')
nonCriticalTemperaturePci = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTemperaturePci.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTemperaturePci.setDescription('The PCI temperature is in a non critical state.')
nonCriticalTemperaturePlanar = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 4, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTemperaturePlanar.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTemperaturePlanar.setDescription('The planar temperature is in a non critical state.')
nonCriticalVoltage = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5))
nonCriticalTwelveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 1))
nonCriticalTwelveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTwelveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTwelveVoltsHigh.setDescription('A non-critical state of 12V high has been detected.')
nonCriticalTwelveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTwelveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTwelveVoltsLow.setDescription('A non-critical state of 12V low has been detected.')
nonCriticalOneVolt = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 2))
nonCriticalOneVoltHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalOneVoltHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalOneVoltHigh.setDescription('A non-critical state of 1V high has been detected.')
nonCriticalOneVoltLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalOneVoltLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalOneVoltLow.setDescription('A non-critical state of 1V low has been detected.')
nonCriticalTwoVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 3))
nonCriticalTwoVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 3, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTwoVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTwoVoltsHigh.setDescription('A non-critical state of 2V high has been detected.')
nonCriticalTwoVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 3, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalTwoVoltsLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalTwoVoltsLow.setDescription('A non-critical state of 2V low has been detected.')
nonCriticalThreeVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 4))
nonCriticalThreeVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsHigh.setDescription('A non-critical state of 3V high has been detected.')
nonCriticalThreeVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsLow.setDescription('A non-critical state of 3V low has been detected.')
nonCriticalThreeVoltsPci = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 5))
nonCriticalThreeVoltsPciHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsPciHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsPciHigh.setDescription('A non-critical state of 3V high has been detected for the PCI.')
nonCriticalThreeVoltsPciLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 5, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsPciLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsPciLow.setDescription('A non-critical state of 3V low has been detected for the PCI.')
nonCriticalThreeVoltsStandby = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 6))
nonCriticalThreeVoltsStandbyHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 6, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsStandbyHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsStandbyHigh.setDescription('A non-critical state of 3V standby high has been detected.')
nonCriticalThreeVoltsStandbyLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 6, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalThreeVoltsStandbyLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalThreeVoltsStandbyLow.setDescription('A non-critical state of 3V standby low has been detected.')
nonCriticalFiveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 7))
nonCriticalFiveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 7, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsHigh.setDescription('A non-critical state of 5V high has been detected.')
nonCriticalFiveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 7, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsLow.setDescription('A non-critical state of 5V low has been detected.')
nonCriticalFiveVoltsPci = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 8))
nonCriticalFiveVoltsPciHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 8, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsPciHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsPciHigh.setDescription('A non-critical state of 5V high has been detected for the PCI.')
nonCriticalFiveVoltsPciLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 8, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsPciLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsPciLow.setDescription('A non-critical state of 5V low has been detected for the PCI.')
nonCriticalFiveVoltsStandby = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 9))
nonCriticalFiveVoltsStandbyHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 9, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsStandbyHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsStandbyHigh.setDescription('A non-critical state of 5V standby high has been detected.')
nonCriticalFiveVoltsStandbyLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 9, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalFiveVoltsStandbyLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalFiveVoltsStandbyLow.setDescription('A non-critical state of 5V standby low has been detected.')
nonCriticalNTwelveVolts = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 10))
nonCriticalNTwelveVoltsHigh = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 10, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalNTwelveVoltsHigh.setStatus('current')
if mibBuilder.loadTexts: nonCriticalNTwelveVoltsHigh.setDescription('A non-critical state of negative 12V high has been detected.')
nonCriticalNTwelveVoltsLow = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 6, 5, 10, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: nonCriticalNTwelveVoltsLow.setStatus('current')
if mibBuilder.loadTexts: nonCriticalNTwelveVoltsLow.setDescription('A non-critical state of negative 12V low has been detected.')
platform = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7))
scalableNode = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1))
scalableNodeMode = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 1))
scalableNodeModeNullOrUnknown = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalableNodeModeNullOrUnknown.setStatus('current')
if mibBuilder.loadTexts: scalableNodeModeNullOrUnknown.setDescription('The scalable node is in a null or unknown mode.')
scalableNodeModePrimary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalableNodeModePrimary.setStatus('current')
if mibBuilder.loadTexts: scalableNodeModePrimary.setDescription('The scalable node is in primary mode.')
scalableNodeModeSecondary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalableNodeModeSecondary.setStatus('current')
if mibBuilder.loadTexts: scalableNodeModeSecondary.setDescription('The scalable node is in secondary mode.')
scalableNodeModeStandalone = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 1, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalableNodeModeStandalone.setStatus('current')
if mibBuilder.loadTexts: scalableNodeModeStandalone.setDescription('The scalable node is now in standalone mode.')
scalableNodeStandalone = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2))
standaloneMode = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1))
primary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: primary.setStatus('current')
if mibBuilder.loadTexts: primary.setDescription('The scalable node is now in standalone primary mode.')
reset = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1, 2))
resetPrimary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: resetPrimary.setStatus('current')
if mibBuilder.loadTexts: resetPrimary.setDescription('The scalable node is now in standalone primary reset mode.')
resetSecondary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: resetSecondary.setStatus('current')
if mibBuilder.loadTexts: resetSecondary.setDescription('The scalable node is now in standalone primary secondary mode.')
secondary = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 1, 2, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: secondary.setStatus('current')
if mibBuilder.loadTexts: secondary.setDescription('The scalable node is now in standalone secondary mode.')
scalablePartition = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2))
scalablePartitionAlert = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "alertCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionAlert.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionAlert.setDescription('The scalabel partition has generated an alert.')
scalablePartitionState = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2))
scalablePartitionNullOrUnknown = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionNullOrUnknown.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionNullOrUnknown.setDescription("The scalable partition state is 'null or unknown'.")
scalablePartitionPoweredOff = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionPoweredOff.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionPoweredOff.setDescription("The scalable partition state is 'powered off'.")
scalablePartitionPoweringOn = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionPoweringOn.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionPoweringOn.setDescription("The scalable partition state is 'powering on'.")
scalablePartitionResetting = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionResetting.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionResetting.setDescription("The scalable partition state is 'resetting'.")
scalablePartitionShuttingDown = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 7, 2, 2, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: scalablePartitionShuttingDown.setStatus('current')
if mibBuilder.loadTexts: scalablePartitionShuttingDown.setDescription("The scalable partition state is 'shutting down'.")
system = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8))
bootFailure = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: bootFailure.setStatus('current')
if mibBuilder.loadTexts: bootFailure.setDescription('The system indicated a boot failure.')
fuelGauge = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 2))
fuelGaugeLowFuel = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: fuelGaugeLowFuel.setStatus('current')
if mibBuilder.loadTexts: fuelGaugeLowFuel.setDescription('The fuel gauge indicates low fuel.')
fuelGaugeNotRedundant = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 2, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: fuelGaugeNotRedundant.setStatus('current')
if mibBuilder.loadTexts: fuelGaugeNotRedundant.setDescription('The fuel gauge indicates not redundant.')
fuelGaugeOverCurrent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 2, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: fuelGaugeOverCurrent.setStatus('current')
if mibBuilder.loadTexts: fuelGaugeOverCurrent.setDescription('The fuel gauge indicates over current.')
systemLoaderTimeout = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemLoaderTimeout.setStatus('current')
if mibBuilder.loadTexts: systemLoaderTimeout.setDescription('The system loader has timed out.')
systemOsTimeout = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemOsTimeout.setStatus('current')
if mibBuilder.loadTexts: systemOsTimeout.setDescription('The operating system has timed out.')
systemPfa = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 5))
fanSystemPfa = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 5, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: fanSystemPfa.setStatus('current')
if mibBuilder.loadTexts: fanSystemPfa.setDescription('The fan system has generated a PFA.')
systemPostTimeout = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemPostTimeout.setStatus('current')
if mibBuilder.loadTexts: systemPostTimeout.setDescription('The POST has timed out.')
systemPowerOff = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemPowerOff.setStatus('current')
if mibBuilder.loadTexts: systemPowerOff.setDescription('The sytsem has powered off.')
systemPowerOn = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 8)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemPowerOn.setStatus('current')
if mibBuilder.loadTexts: systemPowerOn.setDescription('The sytsem has powered on.')
systemRedundantPower = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 9)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemRedundantPower.setStatus('current')
if mibBuilder.loadTexts: systemRedundantPower.setDescription('The system is running on redundant power.')
systemTamper = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 8, 10)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "universalUniqueId"))
if mibBuilder.loadTexts: systemTamper.setStatus('current')
if mibBuilder.loadTexts: systemTamper.setDescription('The system has been tampered with.')
unknown = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 4, 9)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"))
if mibBuilder.loadTexts: unknown.setStatus('current')
if mibBuilder.loadTexts: unknown.setDescription('The system is in an unknown state.')
petFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5))
petFamilyEventDetails = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1))
allVariableBindings = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: allVariableBindings.setStatus('current')
if mibBuilder.loadTexts: allVariableBindings.setDescription('All of the variable bindings for this PET trap.')
entity = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entity.setStatus('current')
if mibBuilder.loadTexts: entity.setDescription('The entity of this PET event.')
entityInstance = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: entityInstance.setStatus('current')
if mibBuilder.loadTexts: entityInstance.setDescription('The entity instance of this PET event.')
petEventData = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: petEventData.setStatus('current')
if mibBuilder.loadTexts: petEventData.setDescription('The event data of this PET event.')
petEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: petEventSeverity.setStatus('current')
if mibBuilder.loadTexts: petEventSeverity.setDescription('The severity of this PET event.')
petEventSourceType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: petEventSourceType.setStatus('current')
if mibBuilder.loadTexts: petEventSourceType.setDescription('The source type of this PET event.')
petEventType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: petEventType.setStatus('current')
if mibBuilder.loadTexts: petEventType.setDescription('The type of the PET event.')
guid = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: guid.setStatus('current')
if mibBuilder.loadTexts: guid.setDescription('The GUID for this PET event.')
languageCode = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: languageCode.setStatus('current')
if mibBuilder.loadTexts: languageCode.setDescription('The language code for this PET event.')
localTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: localTimeStamp.setStatus('current')
if mibBuilder.loadTexts: localTimeStamp.setDescription('The local time stamp of this PET event.')
manufacturerId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: manufacturerId.setStatus('current')
if mibBuilder.loadTexts: manufacturerId.setDescription('The manufacturer ID for the source of the PET event.')
oemCustomField = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oemCustomField.setStatus('current')
if mibBuilder.loadTexts: oemCustomField.setDescription('The value for the OEM customer field of this PET event.')
offset = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: offset.setStatus('current')
if mibBuilder.loadTexts: offset.setDescription('The offset for this PET event.')
sensorDevice = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorDevice.setStatus('current')
if mibBuilder.loadTexts: sensorDevice.setDescription('The sensor device for this PET event.')
sensorNumber = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorNumber.setStatus('current')
if mibBuilder.loadTexts: sensorNumber.setDescription('The sensor number for this PET event.')
sensorType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 16), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sensorType.setStatus('current')
if mibBuilder.loadTexts: sensorType.setDescription('The sensor type for this PET event.')
sequenceId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sequenceId.setStatus('current')
if mibBuilder.loadTexts: sequenceId.setDescription('The sequence ID for this PET event.')
systemId = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemId.setStatus('current')
if mibBuilder.loadTexts: systemId.setDescription('The system ID for this PET event.')
trapSourceType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapSourceType.setStatus('current')
if mibBuilder.loadTexts: trapSourceType.setDescription('The trap source type for this PET event.')
utcOffset = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: utcOffset.setStatus('current')
if mibBuilder.loadTexts: utcOffset.setDescription('The UTC offset for this PET event.')
petEnvironmental = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2))
petEnvironmentalSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1))
sensorCaseIntrusion = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorCaseIntrusion.setStatus('current')
if mibBuilder.loadTexts: sensorCaseIntrusion.setDescription('A sensor has detected a case intrusion.')
sensorCurrent = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorCurrent.setStatus('current')
if mibBuilder.loadTexts: sensorCurrent.setDescription('A sensor has detected a current change.')
sensorFan = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorFan.setStatus('current')
if mibBuilder.loadTexts: sensorFan.setDescription('A sensor has detected a fan change.')
sensorPowerSupply = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorPowerSupply.setStatus('current')
if mibBuilder.loadTexts: sensorPowerSupply.setDescription('A sensor has detected a power supply change.')
sensorTemperature = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorTemperature.setStatus('current')
if mibBuilder.loadTexts: sensorTemperature.setDescription('A sensor has detected a temperature change.')
sensorVoltage = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 2, 1, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: sensorVoltage.setStatus('current')
if mibBuilder.loadTexts: sensorVoltage.setDescription('A sensor has detected a voltage change.')
firmware = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 3))
bios = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 3, 1))
progress = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 3, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: progress.setStatus('current')
if mibBuilder.loadTexts: progress.setDescription('The progress of the BIOS has changed.')
hardware = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4))
cableInterconnect = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: cableInterconnect.setStatus('current')
if mibBuilder.loadTexts: cableInterconnect.setDescription('The cable/interconnect hardware has generated an event.')
drivebay = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 2)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: drivebay.setStatus('current')
if mibBuilder.loadTexts: drivebay.setDescription('The monitor drivebay hardware has generated an event.')
moduleBoard = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 3)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: moduleBoard.setStatus('current')
if mibBuilder.loadTexts: moduleBoard.setDescription('The monitor module/board hardware has generated an event.')
monitorAsicIc = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 4)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: monitorAsicIc.setStatus('current')
if mibBuilder.loadTexts: monitorAsicIc.setDescription('The monitor ASIC/IC hardware has generated an event.')
network = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 5)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: network.setStatus('current')
if mibBuilder.loadTexts: network.setDescription('The network hardware has generated an event.')
watchdog1 = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 6)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: watchdog1.setStatus('current')
if mibBuilder.loadTexts: watchdog1.setDescription('The hardware has generated a watchdog 1 event.')
watchdog2 = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 4, 7)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: watchdog2.setStatus('current')
if mibBuilder.loadTexts: watchdog2.setDescription('The hardware has generated a watchdog 2 event.')
petFamilySystem = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 5))
petFamilySystemOs = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 5, 1))
petFamilySystemOsBoot = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 5, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: petFamilySystemOsBoot.setStatus('current')
if mibBuilder.loadTexts: petFamilySystemOsBoot.setDescription('The operating system on the host has booted.')
petFamilySystemOsOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 5, 1, 2))
heartbeat = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 5, 5, 1, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if mibBuilder.loadTexts: heartbeat.setStatus('current')
if mibBuilder.loadTexts: heartbeat.setDescription('The operating system has generated a heartbeat event.')
storageFamily = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6))
serveRaidController = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6, 1))
physicalDrive = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6, 1, 1))
vendorUnsupported = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6, 1, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: vendorUnsupported.setStatus('current')
if mibBuilder.loadTexts: vendorUnsupported.setDescription('The vendor for this physical drive is unsupported.')
state = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6, 1, 2))
notFound = NotificationType((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 6, 1, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"))
if mibBuilder.loadTexts: notFound.setStatus('current')
if mibBuilder.loadTexts: notFound.setDescription('No controllers were found in this system.')
trapType = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapType.setStatus('current')
if mibBuilder.loadTexts: trapType.setDescription('The type of the event.')
trapSeverity = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapSeverity.setStatus('current')
if mibBuilder.loadTexts: trapSeverity.setDescription('The severity of the event.')
trapSenderName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapSenderName.setStatus('current')
if mibBuilder.loadTexts: trapSenderName.setDescription('The system name from which the event was sent.')
trapManagedObjectName = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapManagedObjectName.setStatus('current')
if mibBuilder.loadTexts: trapManagedObjectName.setDescription('The system name for which the event was generated.')
trapText = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapText.setStatus('current')
if mibBuilder.loadTexts: trapText.setDescription('Text associated with the event.')
trapCategory = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 202, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapCategory.setStatus('current')
if mibBuilder.loadTexts: trapCategory.setDescription('The category of the event.')
char = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: char.setStatus('current')
if mibBuilder.loadTexts: char.setDescription('Eight bit unsigned event detail.')
short = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: short.setStatus('current')
if mibBuilder.loadTexts: short.setDescription('Sixteen bit signed event detail.')
int = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: int.setStatus('current')
if mibBuilder.loadTexts: int.setDescription('Thirty-two bit signed event detail.')
long = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: long.setStatus('current')
if mibBuilder.loadTexts: long.setDescription('Sixty-four bit signed event detail.')
boolean = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: boolean.setStatus('current')
if mibBuilder.loadTexts: boolean.setDescription('Thirty-two bit unsigned event detail.')
float = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: float.setStatus('current')
if mibBuilder.loadTexts: float.setDescription('Thirty-two bit decimal pointed event detail.')
double = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: double.setStatus('current')
if mibBuilder.loadTexts: double.setDescription('Sixty-four bit decimal pointed event detail.')
octet = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: octet.setStatus('current')
if mibBuilder.loadTexts: octet.setDescription('A string of bytes holding an event detail.')
string = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: string.setStatus('current')
if mibBuilder.loadTexts: string.setDescription('A string of unicode chars (normal text) holding an event detail.')
dateTime = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dateTime.setStatus('current')
if mibBuilder.loadTexts: dateTime.setDescription('Date and time since 1/1970 as an event detail.')
uniChar = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uniChar.setStatus('current')
if mibBuilder.loadTexts: uniChar.setDescription('A unicode char holding an event detail.')
byte = MibScalar((1, 3, 6, 1, 4, 1, 2, 6, 159, 9696, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: byte.setStatus('current')
if mibBuilder.loadTexts: byte.setDescription('One byte holding an event detail.')
directorTrapsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100))
directorTrapsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100, 1))
directorTrapsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100, 2))
directorTrapsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100, 2, 1)).setObjects(("IBM-Director-Alert-MIB", "directorTrapsGroup"), ("IBM-Director-Alert-MIB", "directorNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    directorTrapsCompliance = directorTrapsCompliance.setStatus('current')
if mibBuilder.loadTexts: directorTrapsCompliance.setDescription('The compliance statement for this module.')
directorTrapsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100, 1, 1)).setObjects(("IBM-Director-Alert-MIB", "trapType"), ("IBM-Director-Alert-MIB", "trapSeverity"), ("IBM-Director-Alert-MIB", "trapSenderName"), ("IBM-Director-Alert-MIB", "trapManagedObjectName"), ("IBM-Director-Alert-MIB", "trapText"), ("IBM-Director-Alert-MIB", "trapCategory"), ("IBM-Director-Alert-MIB", "char"), ("IBM-Director-Alert-MIB", "short"), ("IBM-Director-Alert-MIB", "int"), ("IBM-Director-Alert-MIB", "long"), ("IBM-Director-Alert-MIB", "boolean"), ("IBM-Director-Alert-MIB", "float"), ("IBM-Director-Alert-MIB", "octet"), ("IBM-Director-Alert-MIB", "double"), ("IBM-Director-Alert-MIB", "string"), ("IBM-Director-Alert-MIB", "dateTime"), ("IBM-Director-Alert-MIB", "uniChar"), ("IBM-Director-Alert-MIB", "byte"), ("IBM-Director-Alert-MIB", "actualValue"), ("IBM-Director-Alert-MIB", "duration"), ("IBM-Director-Alert-MIB", "monitorResource"), ("IBM-Director-Alert-MIB", "thresholdName"), ("IBM-Director-Alert-MIB", "thresholdValue"), ("IBM-Director-Alert-MIB", "userID"), ("IBM-Director-Alert-MIB", "address"), ("IBM-Director-Alert-MIB", "userName"), ("IBM-Director-Alert-MIB", "userDescription"), ("IBM-Director-Alert-MIB", "userLocale"), ("IBM-Director-Alert-MIB", "category"), ("IBM-Director-Alert-MIB", "categoryString"), ("IBM-Director-Alert-MIB", "computerName"), ("IBM-Director-Alert-MIB", "data"), ("IBM-Director-Alert-MIB", "eventLogCode"), ("IBM-Director-Alert-MIB", "eventLogIdentifier"), ("IBM-Director-Alert-MIB", "eventLogType"), ("IBM-Director-Alert-MIB", "insertionStrings"), ("IBM-Director-Alert-MIB", "logFile"), ("IBM-Director-Alert-MIB", "message"), ("IBM-Director-Alert-MIB", "recordNumber"), ("IBM-Director-Alert-MIB", "sourceName"), ("IBM-Director-Alert-MIB", "type"), ("IBM-Director-Alert-MIB", "user"), ("IBM-Director-Alert-MIB", "acceptPause"), ("IBM-Director-Alert-MIB", "acceptStop"), ("IBM-Director-Alert-MIB", "caption"), ("IBM-Director-Alert-MIB", "checkPoint"), ("IBM-Director-Alert-MIB", "creationClassName"), ("IBM-Director-Alert-MIB", "serviceDescription"), ("IBM-Director-Alert-MIB", "desktopInteract"), ("IBM-Director-Alert-MIB", "displayName"), ("IBM-Director-Alert-MIB", "errorControl"), ("IBM-Director-Alert-MIB", "exitCode"), ("IBM-Director-Alert-MIB", "name"), ("IBM-Director-Alert-MIB", "pathName"), ("IBM-Director-Alert-MIB", "processId"), ("IBM-Director-Alert-MIB", "serviceSpecificExitCode"), ("IBM-Director-Alert-MIB", "serviceType"), ("IBM-Director-Alert-MIB", "startMode"), ("IBM-Director-Alert-MIB", "startName"), ("IBM-Director-Alert-MIB", "started"), ("IBM-Director-Alert-MIB", "serviceState"), ("IBM-Director-Alert-MIB", "status"), ("IBM-Director-Alert-MIB", "systemCreationClassName"), ("IBM-Director-Alert-MIB", "systemName"), ("IBM-Director-Alert-MIB", "tagId"), ("IBM-Director-Alert-MIB", "waitHint"), ("IBM-Director-Alert-MIB", "hive"), ("IBM-Director-Alert-MIB", "rootPath"), ("IBM-Director-Alert-MIB", "securityDescriptor"), ("IBM-Director-Alert-MIB", "timeCreated"), ("IBM-Director-Alert-MIB", "alertCode"), ("IBM-Director-Alert-MIB", "busId"), ("IBM-Director-Alert-MIB", "componentId"), ("IBM-Director-Alert-MIB", "firmwareCode"), ("IBM-Director-Alert-MIB", "ipAddress1"), ("IBM-Director-Alert-MIB", "ipAddress2"), ("IBM-Director-Alert-MIB", "issue"), ("IBM-Director-Alert-MIB", "powerDomain"), ("IBM-Director-Alert-MIB", "reason"), ("IBM-Director-Alert-MIB", "scsiId"), ("IBM-Director-Alert-MIB", "side"), ("IBM-Director-Alert-MIB", "newState"), ("IBM-Director-Alert-MIB", "temperatureSensor"), ("IBM-Director-Alert-MIB", "threshold"), ("IBM-Director-Alert-MIB", "universalUniqueId"), ("IBM-Director-Alert-MIB", "senderUniversalUniqueId"), ("IBM-Director-Alert-MIB", "sourceUniversalUniqueId"), ("IBM-Director-Alert-MIB", "unitNumber"), ("IBM-Director-Alert-MIB", "voltageSensor"), ("IBM-Director-Alert-MIB", "allVariableBindings"), ("IBM-Director-Alert-MIB", "entity"), ("IBM-Director-Alert-MIB", "entityInstance"), ("IBM-Director-Alert-MIB", "petEventData"), ("IBM-Director-Alert-MIB", "petEventSeverity"), ("IBM-Director-Alert-MIB", "petEventSourceType"), ("IBM-Director-Alert-MIB", "petEventType"), ("IBM-Director-Alert-MIB", "guid"), ("IBM-Director-Alert-MIB", "languageCode"), ("IBM-Director-Alert-MIB", "localTimeStamp"), ("IBM-Director-Alert-MIB", "manufacturerId"), ("IBM-Director-Alert-MIB", "oemCustomField"), ("IBM-Director-Alert-MIB", "offset"), ("IBM-Director-Alert-MIB", "sensorDevice"), ("IBM-Director-Alert-MIB", "sensorNumber"), ("IBM-Director-Alert-MIB", "sensorType"), ("IBM-Director-Alert-MIB", "sequenceId"), ("IBM-Director-Alert-MIB", "systemId"), ("IBM-Director-Alert-MIB", "trapSourceType"), ("IBM-Director-Alert-MIB", "utcOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    directorTrapsGroup = directorTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: directorTrapsGroup.setDescription('The objects group for objects defined in this module.')
directorNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2, 6, 159, 201, 100, 1, 2)).setObjects(("IBM-Director-Alert-MIB", "generalEvent"), ("IBM-Director-Alert-MIB", "online"), ("IBM-Director-Alert-MIB", "offline"), ("IBM-Director-Alert-MIB", "create"), ("IBM-Director-Alert-MIB", "change"), ("IBM-Director-Alert-MIB", "destroy"), ("IBM-Director-Alert-MIB", "processMonitor"), ("IBM-Director-Alert-MIB", "cpuUtilization"), ("IBM-Director-Alert-MIB", "processCount"), ("IBM-Director-Alert-MIB", "driveSpaceUsed"), ("IBM-Director-Alert-MIB", "driveSpaceUsedPercent"), ("IBM-Director-Alert-MIB", "driveSpaceRemaining"), ("IBM-Director-Alert-MIB", "driveWorkload"), ("IBM-Director-Alert-MIB", "lockedMemory"), ("IBM-Director-Alert-MIB", "memoryUsage"), ("IBM-Director-Alert-MIB", "totalPrivilegedTimePercent"), ("IBM-Director-Alert-MIB", "fileReadOperationsPerSec"), ("IBM-Director-Alert-MIB", "udpPacketsSentPerSec"), ("IBM-Director-Alert-MIB", "udpPacketsReceivedPerSec"), ("IBM-Director-Alert-MIB", "ipPacketsSentPerSec"), ("IBM-Director-Alert-MIB", "ipPacketsReceivedPerSec"), ("IBM-Director-Alert-MIB", "ipErrorPacketsReceivedPerSec"), ("IBM-Director-Alert-MIB", "tcpConnections"), ("IBM-Director-Alert-MIB", "action"), ("IBM-Director-Alert-MIB", "badPassword"), ("IBM-Director-Alert-MIB", "badUserID"), ("IBM-Director-Alert-MIB", "disabledUserID"), ("IBM-Director-Alert-MIB", "downlevelConsole"), ("IBM-Director-Alert-MIB", "expiredPassword"), ("IBM-Director-Alert-MIB", "tooManyActiveIDs"), ("IBM-Director-Alert-MIB", "tooManyActiveLogons"), ("IBM-Director-Alert-MIB", "uplevelConsole"), ("IBM-Director-Alert-MIB", "logoff"), ("IBM-Director-Alert-MIB", "logon"), ("IBM-Director-Alert-MIB", "applicationLog"), ("IBM-Director-Alert-MIB", "securityLog"), ("IBM-Director-Alert-MIB", "systemLog"), ("IBM-Director-Alert-MIB", "startedService"), ("IBM-Director-Alert-MIB", "stoppedService"), ("IBM-Director-Alert-MIB", "softwareTreeChanged"), ("IBM-Director-Alert-MIB", "systemTreeChanged"), ("IBM-Director-Alert-MIB", "codEnabled"), ("IBM-Director-Alert-MIB", "bladeServerCommunication"), ("IBM-Director-Alert-MIB", "bladeServerInserted"), ("IBM-Director-Alert-MIB", "bladeServerRemoved"), ("IBM-Director-Alert-MIB", "busCommunication"), ("IBM-Director-Alert-MIB", "chassisConfiguration"), ("IBM-Director-Alert-MIB", "chassisFailed"), ("IBM-Director-Alert-MIB", "dasdFailed"), ("IBM-Director-Alert-MIB", "dasdInserted"), ("IBM-Director-Alert-MIB", "dasdRemoved"), ("IBM-Director-Alert-MIB", "memoryFailed"), ("IBM-Director-Alert-MIB", "componentFanFailed"), ("IBM-Director-Alert-MIB", "componentFanInserted"), ("IBM-Director-Alert-MIB", "componentFanPfa"), ("IBM-Director-Alert-MIB", "componentFanRemoved"), ("IBM-Director-Alert-MIB", "hardwareCrashDumpAborted"), ("IBM-Director-Alert-MIB", "hardwareCrashDumpCompleted"), ("IBM-Director-Alert-MIB", "hardwareCrashDumpInitiated"), ("IBM-Director-Alert-MIB", "ioModuleConfiguration"), ("IBM-Director-Alert-MIB", "ioModuleFailed"), ("IBM-Director-Alert-MIB", "ioModuleInserted"), ("IBM-Director-Alert-MIB", "ioModulePost"), ("IBM-Director-Alert-MIB", "ioModulePowerOn"), ("IBM-Director-Alert-MIB", "ioModulePowerOff"), ("IBM-Director-Alert-MIB", "ioModuleRedundancy"), ("IBM-Director-Alert-MIB", "ioModuleRemoved"), ("IBM-Director-Alert-MIB", "kvmOwner"), ("IBM-Director-Alert-MIB", "osImageCrashDumpAborted"), ("IBM-Director-Alert-MIB", "osImageCrashDumpCompleted"), ("IBM-Director-Alert-MIB", "osImageCrashDumpInitiated"), ("IBM-Director-Alert-MIB", "componentPfa"), ("IBM-Director-Alert-MIB", "powerSubsystemLowFuel"), ("IBM-Director-Alert-MIB", "powerSubsystemOverCurrent"), ("IBM-Director-Alert-MIB", "powerSubsystemOverPower"), ("IBM-Director-Alert-MIB", "powerSubsystemRedundancy"), ("IBM-Director-Alert-MIB", "powerSupplyFailed"), ("IBM-Director-Alert-MIB", "powerSupplyInserted"), ("IBM-Director-Alert-MIB", "powerSupplyRemoved"), ("IBM-Director-Alert-MIB", "serverPowerOff"), ("IBM-Director-Alert-MIB", "serverPowerOn"), ("IBM-Director-Alert-MIB", "serverPowerState"), ("IBM-Director-Alert-MIB", "serviceProcessorActive"), ("IBM-Director-Alert-MIB", "serviceProcessorConfiguration"), ("IBM-Director-Alert-MIB", "serviceProcessorInserted"), ("IBM-Director-Alert-MIB", "serviceProcessorLog"), ("IBM-Director-Alert-MIB", "serviceProcessorNetworkStack"), ("IBM-Director-Alert-MIB", "serviceProcessorRedundancy"), ("IBM-Director-Alert-MIB", "serviceProcessorRemoteLogin"), ("IBM-Director-Alert-MIB", "serviceProcessorRemoved"), ("IBM-Director-Alert-MIB", "serviceProcessorRestart"), ("IBM-Director-Alert-MIB", "serviceProcessorTest"), ("IBM-Director-Alert-MIB", "smpExpansionModuleDisabled"), ("IBM-Director-Alert-MIB", "usbInserted"), ("IBM-Director-Alert-MIB", "usbOwner"), ("IBM-Director-Alert-MIB", "usbRemoved"), ("IBM-Director-Alert-MIB", "vrmFailed"), ("IBM-Director-Alert-MIB", "hardDiskDrive"), ("IBM-Director-Alert-MIB", "multipleFanFailure"), ("IBM-Director-Alert-MIB", "powerFailureEpow"), ("IBM-Director-Alert-MIB", "powerFailureFailed"), ("IBM-Director-Alert-MIB", "powerFailureRemoved"), ("IBM-Director-Alert-MIB", "criticalTamper"), ("IBM-Director-Alert-MIB", "criticalTemperatureAmbient"), ("IBM-Director-Alert-MIB", "criticalTemperaturePci"), ("IBM-Director-Alert-MIB", "criticalTemperaturePlanar"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsHigh"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsLow"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsFaultA"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsFaultB"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsFaultC"), ("IBM-Director-Alert-MIB", "criticalTwelveVoltsFaultD"), ("IBM-Director-Alert-MIB", "criticalOneVoltHigh"), ("IBM-Director-Alert-MIB", "criticalOneVoltLow"), ("IBM-Director-Alert-MIB", "criticalTwoVoltsHigh"), ("IBM-Director-Alert-MIB", "criticalTwoVoltsLow"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsHigh"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsLow"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsPciHigh"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsPciLow"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsStandbyHigh"), ("IBM-Director-Alert-MIB", "criticalThreeVoltsStandbyLow"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsHigh"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsLow"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsFaultHigh"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsFaultLow"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsPciHigh"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsPciLow"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsStandbyHigh"), ("IBM-Director-Alert-MIB", "criticalFiveVoltsStandbyLow"), ("IBM-Director-Alert-MIB", "criticalNTwelveVoltsHigh"), ("IBM-Director-Alert-MIB", "criticalNTwelveVoltsLow"), ("IBM-Director-Alert-MIB", "voltageRegulatorModuleFailure"), ("IBM-Director-Alert-MIB", "deploymentBoot"), ("IBM-Director-Alert-MIB", "deploymentLoader"), ("IBM-Director-Alert-MIB", "deploymentOs"), ("IBM-Director-Alert-MIB", "deploymentPost"), ("IBM-Director-Alert-MIB", "environmentalTemperature"), ("IBM-Director-Alert-MIB", "environmentalVoltage"), ("IBM-Director-Alert-MIB", "nonCriticalFanRemoved"), ("IBM-Director-Alert-MIB", "redundantPower"), ("IBM-Director-Alert-MIB", "singleFanFailure"), ("IBM-Director-Alert-MIB", "nonCriticalTemperatureAmbient"), ("IBM-Director-Alert-MIB", "nonCriticalTemperaturePci"), ("IBM-Director-Alert-MIB", "nonCriticalTemperaturePlanar"), ("IBM-Director-Alert-MIB", "nonCriticalTwelveVoltsHigh"), ("IBM-Director-Alert-MIB", "nonCriticalTwelveVoltsLow"), ("IBM-Director-Alert-MIB", "nonCriticalOneVoltHigh"), ("IBM-Director-Alert-MIB", "nonCriticalOneVoltLow"), ("IBM-Director-Alert-MIB", "nonCriticalTwoVoltsHigh"), ("IBM-Director-Alert-MIB", "nonCriticalTwoVoltsLow"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsHigh"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsLow"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsPciHigh"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsPciLow"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsStandbyHigh"), ("IBM-Director-Alert-MIB", "nonCriticalThreeVoltsStandbyLow"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsHigh"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsLow"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsPciHigh"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsPciLow"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsStandbyHigh"), ("IBM-Director-Alert-MIB", "nonCriticalFiveVoltsStandbyLow"), ("IBM-Director-Alert-MIB", "nonCriticalNTwelveVoltsHigh"), ("IBM-Director-Alert-MIB", "nonCriticalNTwelveVoltsLow"), ("IBM-Director-Alert-MIB", "scalableNodeModeNullOrUnknown"), ("IBM-Director-Alert-MIB", "scalableNodeModePrimary"), ("IBM-Director-Alert-MIB", "scalableNodeModeSecondary"), ("IBM-Director-Alert-MIB", "scalableNodeModeStandalone"), ("IBM-Director-Alert-MIB", "primary"), ("IBM-Director-Alert-MIB", "resetPrimary"), ("IBM-Director-Alert-MIB", "resetSecondary"), ("IBM-Director-Alert-MIB", "secondary"), ("IBM-Director-Alert-MIB", "scalablePartitionAlert"), ("IBM-Director-Alert-MIB", "scalablePartitionNullOrUnknown"), ("IBM-Director-Alert-MIB", "scalablePartitionPoweredOff"), ("IBM-Director-Alert-MIB", "scalablePartitionPoweringOn"), ("IBM-Director-Alert-MIB", "scalablePartitionResetting"), ("IBM-Director-Alert-MIB", "scalablePartitionShuttingDown"), ("IBM-Director-Alert-MIB", "bootFailure"), ("IBM-Director-Alert-MIB", "fuelGaugeLowFuel"), ("IBM-Director-Alert-MIB", "fuelGaugeNotRedundant"), ("IBM-Director-Alert-MIB", "fuelGaugeOverCurrent"), ("IBM-Director-Alert-MIB", "systemLoaderTimeout"), ("IBM-Director-Alert-MIB", "systemOsTimeout"), ("IBM-Director-Alert-MIB", "fanSystemPfa"), ("IBM-Director-Alert-MIB", "systemPostTimeout"), ("IBM-Director-Alert-MIB", "systemPowerOff"), ("IBM-Director-Alert-MIB", "systemPowerOn"), ("IBM-Director-Alert-MIB", "systemRedundantPower"), ("IBM-Director-Alert-MIB", "systemTamper"), ("IBM-Director-Alert-MIB", "unknown"), ("IBM-Director-Alert-MIB", "sensorCaseIntrusion"), ("IBM-Director-Alert-MIB", "sensorCurrent"), ("IBM-Director-Alert-MIB", "sensorFan"), ("IBM-Director-Alert-MIB", "sensorPowerSupply"), ("IBM-Director-Alert-MIB", "sensorTemperature"), ("IBM-Director-Alert-MIB", "sensorVoltage"), ("IBM-Director-Alert-MIB", "progress"), ("IBM-Director-Alert-MIB", "cableInterconnect"), ("IBM-Director-Alert-MIB", "drivebay"), ("IBM-Director-Alert-MIB", "moduleBoard"), ("IBM-Director-Alert-MIB", "monitorAsicIc"), ("IBM-Director-Alert-MIB", "network"), ("IBM-Director-Alert-MIB", "watchdog1"), ("IBM-Director-Alert-MIB", "watchdog2"), ("IBM-Director-Alert-MIB", "petFamilySystemOsBoot"), ("IBM-Director-Alert-MIB", "heartbeat"), ("IBM-Director-Alert-MIB", "vendorUnsupported"), ("IBM-Director-Alert-MIB", "notFound"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    directorNotificationsGroup = directorNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: directorNotificationsGroup.setDescription('The notification group for notifications defined in this module.')
mibBuilder.exportSymbols("IBM-Director-Alert-MIB", online=online, notFound=notFound, nonCriticalTwoVoltsLow=nonCriticalTwoVoltsLow, firmwareCode=firmwareCode, watchdog2=watchdog2, startedService=startedService, criticalFiveVoltsPciHigh=criticalFiveVoltsPciHigh, scalableNodeStandalone=scalableNodeStandalone, systemRedundantPower=systemRedundantPower, diskMonitors=diskMonitors, powerSubsystemLowFuel=powerSubsystemLowFuel, usb=usb, serviceState=serviceState, serviceDescription=serviceDescription, bladeServerRemoved=bladeServerRemoved, downlevelConsole=downlevelConsole, threshold=threshold, directorTraps=directorTraps, criticalTwelveVoltsHigh=criticalTwelveVoltsHigh, componentFanFailed=componentFanFailed, bios=bios, criticalThreeVoltsStandbyLow=criticalThreeVoltsStandbyLow, scalablePartitionPoweringOn=scalablePartitionPoweringOn, eventLogIdentifier=eventLogIdentifier, reason=reason, criticalFiveVoltsStandbyHigh=criticalFiveVoltsStandbyHigh, powerFailureRemoved=powerFailureRemoved, eventLogCode=eventLogCode, petFamilySystemOsBoot=petFamilySystemOsBoot, systemName=systemName, sourceName=sourceName, scalablePartitionPoweredOff=scalablePartitionPoweredOff, fuelGaugeOverCurrent=fuelGaugeOverCurrent, sensorType=sensorType, director=director, nonCriticalFiveVoltsLow=nonCriticalFiveVoltsLow, resetSecondary=resetSecondary, memoryFailed=memoryFailed, serviceProcessorTest=serviceProcessorTest, create=create, criticalTemperatureAmbient=criticalTemperatureAmbient, duration=duration, ipAddress1=ipAddress1, cimFamily=cimFamily, smpExpansionModuleDisabled=smpExpansionModuleDisabled, componentPfa=componentPfa, driveSpaceUsedPercent=driveSpaceUsedPercent, nonCritical=nonCritical, ipAddress2=ipAddress2, critical=critical, fuelGauge=fuelGauge, fanSystemPfa=fanSystemPfa, serverPowerOff=serverPowerOff, alertCode=alertCode, securityDescriptor=securityDescriptor, petEnvironmental=petEnvironmental, powerSupply=powerSupply, powerSupplyRemoved=powerSupplyRemoved, logon=logon, cableInterconnect=cableInterconnect, criticalTemperature=criticalTemperature, firmware=firmware, environmentalTemperature=environmentalTemperature, monitorAsicIc=monitorAsicIc, processId=processId, nonCriticalFiveVoltsPciLow=nonCriticalFiveVoltsPciLow, trapSeverity=trapSeverity, scalablePartitionAlert=scalablePartitionAlert, dasd=dasd, vrmFailed=vrmFailed, criticalFiveVolts=criticalFiveVolts, octet=octet, temperatureSensor=temperatureSensor, serverPowerOn=serverPowerOn, nonCriticalThreeVoltsPciHigh=nonCriticalThreeVoltsPciHigh, userLocale=userLocale, driveSpaceUsed=driveSpaceUsed, dasdFailed=dasdFailed, monitorEventDetails=monitorEventDetails, userDescription=userDescription, criticalFiveVoltsFaultLow=criticalFiveVoltsFaultLow, powerSubsystemOverCurrent=powerSubsystemOverCurrent, petFamilySystem=petFamilySystem, nonCriticalTemperatureAmbient=nonCriticalTemperatureAmbient, powerSupplyInserted=powerSupplyInserted, generalEvent=generalEvent, criticalOneVoltHigh=criticalOneVoltHigh, displayName=displayName, standaloneMode=standaloneMode, serviceProcessorConfiguration=serviceProcessorConfiguration, ioModuleInserted=ioModuleInserted, usbRemoved=usbRemoved, criticalThreeVolts=criticalThreeVolts, scalableNode=scalableNode, sequenceId=sequenceId, petEventData=petEventData, ioModuleRedundancy=ioModuleRedundancy, pathName=pathName, criticalTwelveVoltsFaultB=criticalTwelveVoltsFaultB, softwareTreeChanged=softwareTreeChanged, kvmOwner=kvmOwner, resetPrimary=resetPrimary, scalableNodeMode=scalableNodeMode, directorFamily=directorFamily, scalableNodeModeNullOrUnknown=scalableNodeModeNullOrUnknown, serviceProcessorNetworkStack=serviceProcessorNetworkStack, directorTrapsConformance=directorTrapsConformance, mpaEventDetails=mpaEventDetails, hardDiskDrive=hardDiskDrive, singleFanFailure=singleFanFailure, directorNotificationsGroup=directorNotificationsGroup, guid=guid, dateTime=dateTime, ibm=ibm, description=description, criticalTemperaturePlanar=criticalTemperaturePlanar, nonCriticalFanRemoved=nonCriticalFanRemoved, cpuMonitors=cpuMonitors, desktopInteract=desktopInteract, sensorPowerSupply=sensorPowerSupply, primary=primary, expiredPassword=expiredPassword, change=change, nonCriticalThreeVoltsStandbyLow=nonCriticalThreeVoltsStandbyLow, directorTrapsCompliances=directorTrapsCompliances, entityInstance=entityInstance, logFile=logFile, redundantPower=redundantPower, nonCriticalFiveVoltsStandby=nonCriticalFiveVoltsStandby, systemOsTimeout=systemOsTimeout, details=details, petEventSeverity=petEventSeverity, uniChar=uniChar, storageFamily=storageFamily, scalablePartition=scalablePartition, fuelGaugeNotRedundant=fuelGaugeNotRedundant, criticalTwoVoltsLow=criticalTwoVoltsLow, applicationLog=applicationLog, coD=coD, nonCriticalThreeVolts=nonCriticalThreeVolts, nonCriticalTwelveVolts=nonCriticalTwelveVolts, int=int, driveWorkload=driveWorkload, componentFanRemoved=componentFanRemoved, offset=offset, nonCriticalTwelveVoltsHigh=nonCriticalTwelveVoltsHigh, environmentalVoltage=environmentalVoltage, nonCriticalThreeVoltsPci=nonCriticalThreeVoltsPci, nonCriticalThreeVoltsPciLow=nonCriticalThreeVoltsPciLow, trapText=trapText, trapType=trapType, powerDomain=powerDomain, double=double, powerSupplyFailed=powerSupplyFailed, bus=bus, powerSubsystemOverPower=powerSubsystemOverPower, criticalTwoVolts=criticalTwoVolts, serviceProcessorRestart=serviceProcessorRestart, criticalTwelveVoltsFaultC=criticalTwelveVoltsFaultC, nonCriticalNTwelveVoltsHigh=nonCriticalNTwelveVoltsHigh, trapCategory=trapCategory, criticalFiveVoltsStandbyLow=criticalFiveVoltsStandbyLow, scsiId=scsiId, nonCriticalFiveVoltsPciHigh=nonCriticalFiveVoltsPciHigh, short=short, osImageCrashDumpCompleted=osImageCrashDumpCompleted, stoppedService=stoppedService, utcOffset=utcOffset, serviceType=serviceType, hardwareCrashDumpAborted=hardwareCrashDumpAborted, userName=userName, platform=platform, nonCriticalFiveVoltsHigh=nonCriticalFiveVoltsHigh, memory=memory, deploymentOs=deploymentOs, systemTamper=systemTamper, deploymentPost=deploymentPost, acceptStop=acceptStop, criticalThreeVoltsPciLow=criticalThreeVoltsPciLow, hardwareCrashDump=hardwareCrashDump, criticalTemperaturePci=criticalTemperaturePci, acceptPause=acceptPause, securityLog=securityLog, criticalFiveVoltsHigh=criticalFiveVoltsHigh, type=type, logoff=logoff, componentFan=componentFan, criticalOneVoltLow=criticalOneVoltLow, sensorCaseIntrusion=sensorCaseIntrusion, moduleBoard=moduleBoard, criticalFiveVoltsLow=criticalFiveVoltsLow, oemCustomField=oemCustomField, startMode=startMode, powerFailureFailed=powerFailureFailed, logonFailure=logonFailure, directorTrapsCompliance=directorTrapsCompliance, scalablePartitionShuttingDown=scalablePartitionShuttingDown, nonCriticalTemperaturePlanar=nonCriticalTemperaturePlanar, deployment=deployment, lockedMemory=lockedMemory, osImage=osImage, serviceSpecificExitCode=serviceSpecificExitCode, criticalFiveVoltsFaultHigh=criticalFiveVoltsFaultHigh, progress=progress, criticalTwelveVoltsFaultA=criticalTwelveVoltsFaultA, serviceProcessorRemoved=serviceProcessorRemoved, hardware=hardware, windowsRegistry=windowsRegistry, unknown=unknown, recordNumber=recordNumber, data=data, componentId=componentId, ipPacketsReceivedPerSec=ipPacketsReceivedPerSec, systemPostTimeout=systemPostTimeout, nonCriticalOneVolt=nonCriticalOneVolt, serverPowerState=serverPowerState, scalablePartitionState=scalablePartitionState, nonCriticalTwelveVoltsLow=nonCriticalTwelveVoltsLow, usbOwner=usbOwner, errorControl=errorControl, serviceProcessor=serviceProcessor, nonCriticalFiveVoltsStandbyLow=nonCriticalFiveVoltsStandbyLow, ioModuleConfiguration=ioModuleConfiguration, ipErrorPacketsReceivedPerSec=ipErrorPacketsReceivedPerSec, offline=offline, serverPower=serverPower, byte=byte, userID=userID, multipleFanFailure=multipleFanFailure, senderUniversalUniqueId=senderUniversalUniqueId, windowsRegistryEventDetails=windowsRegistryEventDetails, totalPrivilegedTimePercent=totalPrivilegedTimePercent, windowsNTEventLogEventDetails=windowsNTEventLogEventDetails, server=server, environmental=environmental, reset=reset, destroy=destroy, serviceProcessorActive=serviceProcessorActive, nonCriticalNTwelveVolts=nonCriticalNTwelveVolts, name=name, systemCreationClassName=systemCreationClassName, vendorUnsupported=vendorUnsupported, ioModuleRemoved=ioModuleRemoved, PYSNMP_MODULE_ID=directorTraps, cpuUtilization=cpuUtilization, criticalThreeVoltsStandby=criticalThreeVoltsStandby, petFamilySystemOsOperation=petFamilySystemOsOperation, nonCriticalTwoVolts=nonCriticalTwoVolts, chassisFailed=chassisFailed, criticalNTwelveVoltsHigh=criticalNTwelveVoltsHigh, thresholdValue=thresholdValue, windowsNTService=windowsNTService, serviceProcessorRemoteLogin=serviceProcessorRemoteLogin, eventLogType=eventLogType)
mibBuilder.exportSymbols("IBM-Director-Alert-MIB", tagId=tagId, bladeServer=bladeServer, ioModulePowerOff=ioModulePowerOff, udpPacketsReceivedPerSec=udpPacketsReceivedPerSec, directorAgent=directorAgent, ioModule=ioModule, osImageCrashDumpInitiated=osImageCrashDumpInitiated, petFamilyEventDetails=petFamilyEventDetails, osImageCrashDumpAborted=osImageCrashDumpAborted, disabledUserID=disabledUserID, secondary=secondary, float=float, status=status, criticalFiveVoltsPciLow=criticalFiveVoltsPciLow, allVariableBindings=allVariableBindings, caption=caption, nonCriticalTemperaturePci=nonCriticalTemperaturePci, badUserID=badUserID, systemLoaderTimeout=systemLoaderTimeout, trapManagedObjectName=trapManagedObjectName, powerSubsystemRedundancy=powerSubsystemRedundancy, criticalTwoVoltsHigh=criticalTwoVoltsHigh, chassisConfiguration=chassisConfiguration, memoryUsage=memoryUsage, sensorNumber=sensorNumber, sensorFan=sensorFan, tcpipMonitors=tcpipMonitors, systemPfa=systemPfa, criticalTwelveVoltsLow=criticalTwelveVoltsLow, category=category, drivebay=drivebay, vrm=vrm, hive=hive, waitHint=waitHint, tcpConnections=tcpConnections, consoleEventDetails=consoleEventDetails, categoryString=categoryString, sensorVoltage=sensorVoltage, string=string, systemPowerOn=systemPowerOn, scalableNodeModeSecondary=scalableNodeModeSecondary, processMonitor=processMonitor, ipPacketsSentPerSec=ipPacketsSentPerSec, scalablePartitionResetting=scalablePartitionResetting, systemId=systemId, busId=busId, criticalTwelveVolts=criticalTwelveVolts, ntPerfMonitors=ntPerfMonitors, test=test, componentFanInserted=componentFanInserted, tooManyActiveIDs=tooManyActiveIDs, serviceProcessorInserted=serviceProcessorInserted, nonCriticalFiveVoltsPci=nonCriticalFiveVoltsPci, issue=issue, fileReadOperationsPerSec=fileReadOperationsPerSec, petEventType=petEventType, nonCriticalFiveVoltsStandbyHigh=nonCriticalFiveVoltsStandbyHigh, char=char, voltageSensor=voltageSensor, nonCriticalTemperature=nonCriticalTemperature, smpExpansionModule=smpExpansionModule, sensorCurrent=sensorCurrent, criticalThreeVoltsHigh=criticalThreeVoltsHigh, console=console, petEventSourceType=petEventSourceType, exitCode=exitCode, bladeServerInserted=bladeServerInserted, serviceProcessorLog=serviceProcessorLog, heartbeat=heartbeat, localTimeStamp=localTimeStamp, memoryMonitors=memoryMonitors, component=component, trapSourceType=trapSourceType, actualValue=actualValue, insertionStrings=insertionStrings, topology=topology, powerFailure=powerFailure, nonCriticalThreeVoltsHigh=nonCriticalThreeVoltsHigh, trapSenderName=trapSenderName, componentFanPfa=componentFanPfa, ioModulePower=ioModulePower, nicMonitors=nicMonitors, bladeServerCommunication=bladeServerCommunication, criticalNTwelveVolts=criticalNTwelveVolts, voltageRegulatorModuleFailure=voltageRegulatorModuleFailure, ibmProd=ibmProd, sourceUniversalUniqueId=sourceUniversalUniqueId, rootPath=rootPath, fuelGaugeLowFuel=fuelGaugeLowFuel, universalUniqueId=universalUniqueId, nonCriticalVoltage=nonCriticalVoltage, nonCriticalOneVoltLow=nonCriticalOneVoltLow, systemTreeChanged=systemTreeChanged, criticalThreeVoltsPciHigh=criticalThreeVoltsPciHigh, driveSpaceRemaining=driveSpaceRemaining, badPassword=badPassword, state=state, monitorResource=monitorResource, systemLog=systemLog, hardwareCrashDumpInitiated=hardwareCrashDumpInitiated, tooManyActiveLogons=tooManyActiveLogons, timeCreated=timeCreated, directorTrapsGroup=directorTrapsGroup, unitNumber=unitNumber, long=long, action=action, newState=newState, scalablePartitionNullOrUnknown=scalablePartitionNullOrUnknown, petFamilySystemOs=petFamilySystemOs, deploymentLoader=deploymentLoader, scalableNodeModeStandalone=scalableNodeModeStandalone, directorTrapsGroups=directorTrapsGroups, deploymentBoot=deploymentBoot, criticalTamper=criticalTamper, petFamily=petFamily, hardwareInformation=hardwareInformation, languageCode=languageCode, manufacturerId=manufacturerId, startName=startName, busCommunication=busCommunication, boolean=boolean, serviceProcessorRedundancy=serviceProcessorRedundancy, nonCriticalNTwelveVoltsLow=nonCriticalNTwelveVoltsLow, criticalFiveVoltsFault=criticalFiveVoltsFault, network=network, chassis=chassis, bootFailure=bootFailure, scalableNodeModePrimary=scalableNodeModePrimary, windowsNTEventLog=windowsNTEventLog, ioModulePost=ioModulePost, nonCriticalThreeVoltsLow=nonCriticalThreeVoltsLow, system=system, systemPowerOff=systemPowerOff, criticalFiveVoltsStandby=criticalFiveVoltsStandby, criticalNTwelveVoltsLow=criticalNTwelveVoltsLow, thresholdName=thresholdName, watchdog1=watchdog1, hardwareCrashDumpCompleted=hardwareCrashDumpCompleted, dasdRemoved=dasdRemoved, criticalThreeVoltsStandbyHigh=criticalThreeVoltsStandbyHigh, windowsNTServiceEventDetails=windowsNTServiceEventDetails, sensorDevice=sensorDevice, kvm=kvm, creationClassName=creationClassName, ioModuleFailed=ioModuleFailed, nonCriticalFan=nonCriticalFan, processCount=processCount, criticalVoltage=criticalVoltage, criticalThreeVoltsLow=criticalThreeVoltsLow, nonCriticalThreeVoltsStandbyHigh=nonCriticalThreeVoltsStandbyHigh, powerFailureEpow=powerFailureEpow, checkPoint=checkPoint, codEnabled=codEnabled, petEnvironmentalSensor=petEnvironmentalSensor, address=address, message=message, started=started, osImageCrashDump=osImageCrashDump, criticalThreeVoltsPci=criticalThreeVoltsPci, nonCriticalThreeVoltsStandby=nonCriticalThreeVoltsStandby, udpPacketsSentPerSec=udpPacketsSentPerSec, mpaFamily=mpaFamily, nonCriticalOneVoltHigh=nonCriticalOneVoltHigh, user=user, uplevelConsole=uplevelConsole, nonCriticalFiveVolts=nonCriticalFiveVolts, computerName=computerName, physicalDrive=physicalDrive, powerSubsystem=powerSubsystem, ioModulePowerOn=ioModulePowerOn, side=side, criticalFiveVoltsPci=criticalFiveVoltsPci, sensorTemperature=sensorTemperature, nonCriticalTwoVoltsHigh=nonCriticalTwoVoltsHigh, serveRaidController=serveRaidController, usbInserted=usbInserted, dasdInserted=dasdInserted, criticalTwelveVoltsFaultD=criticalTwelveVoltsFaultD, entity=entity, criticalOneVolt=criticalOneVolt)
