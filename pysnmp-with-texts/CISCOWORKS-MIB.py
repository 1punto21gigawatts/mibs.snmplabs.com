#
# PySNMP MIB module CISCOWORKS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCOWORKS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:24:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ciscoworks, = mibBuilder.importSymbols("CISCO-SMI", "ciscoworks")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
iso, ObjectIdentity, Counter64, Unsigned32, Bits, IpAddress, Gauge32, Counter32, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Counter64", "Unsigned32", "Bits", "IpAddress", "Gauge32", "Counter32", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cwLogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 14, 1))
cwLogMIB.setRevisions(('2003-02-18 00:00', '1995-04-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cwLogMIB.setRevisionsDescriptions(('Updated for SNMPv2 and for publishing.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: cwLogMIB.setLastUpdated('200302180000Z')
if mibBuilder.loadTexts: cwLogMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: cwLogMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS e-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: cwLogMIB.setDescription(' This MIB describes the traps and trap and trap variables used by CiscoWorks. Originally the CiscoWorks classic nmlogd process forwarded messages logged by applications and devices to NM platforms as traps. Now it is used by CiscoWorks Blue to send DLSw and APPN/SNASw traps to NM platforms.')
cwLog = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 1))
cwTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 2))
cwMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 3))
cwLogDate = MibScalar((1, 3, 6, 1, 4, 1, 9, 14, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(15, 15)).setFixedLength(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwLogDate.setStatus('current')
if mibBuilder.loadTexts: cwLogDate.setDescription("Date in the format of 'MMM DD HH:MM:SS' when the message is logged. The time zone used is configured on CiscoWorks workstation.")
cwLogSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ciscoworks", 2), ("device", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwLogSource.setStatus('current')
if mibBuilder.loadTexts: cwLogSource.setDescription("The source of the log message as follows. 'other' - The source of the log entry is a source other than ciscoworks application or Cisco device. 'ciscoworks' - Indicates the message is generated by CiscoWorks applications (e.g. nmpolld). 'device' - Indicates the message is generated by Cisco devices.")
cwLogApp = MibScalar((1, 3, 6, 1, 4, 1, 9, 14, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwLogApp.setStatus('current')
if mibBuilder.loadTexts: cwLogApp.setDescription('The name of the application that generates the log message If the message is generated by a device, this string will be empty.')
cwLogMsg = MibScalar((1, 3, 6, 1, 4, 1, 9, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwLogMsg.setStatus('current')
if mibBuilder.loadTexts: cwLogMsg.setDescription('The text of the log message.')
cwTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 2, 0))
cwAppLogTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 14, 1, 2, 0, 1)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("CISCOWORKS-MIB", "cwLogDate"), ("CISCOWORKS-MIB", "cwLogSource"), ("CISCOWORKS-MIB", "cwLogApp"), ("CISCOWORKS-MIB", "cwLogMsg"))
if mibBuilder.loadTexts: cwAppLogTrap.setStatus('current')
if mibBuilder.loadTexts: cwAppLogTrap.setDescription('A cwAppLogTrap is sent by nmlogd when a CiscoWorks application logs a message to system log file on CiscoWorks workstation. This is also sent by CiscoWorks Blue processes.')
cwDevLogTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 14, 1, 2, 0, 2)).setObjects(("SNMPv2-MIB", "sysUpTime"), ("CISCOWORKS-MIB", "cwLogDate"), ("CISCOWORKS-MIB", "cwLogSource"), ("CISCOWORKS-MIB", "cwLogMsg"))
if mibBuilder.loadTexts: cwDevLogTrap.setStatus('current')
if mibBuilder.loadTexts: cwDevLogTrap.setDescription('A cwDevLogTrap is sent by nmlogd when a device logs a message to system log file on CiscoWorks workstation.')
ciscoCwMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 3, 1))
ciscoCwMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 14, 1, 3, 2))
ciscoCwMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 14, 1, 3, 1, 1)).setObjects(("CISCOWORKS-MIB", "ciscoCwObjectsGroup"), ("CISCOWORKS-MIB", "ciscoCwNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCwMIBCompliance = ciscoCwMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoCwMIBCompliance.setDescription('The compliance statement for entities which implement the CISCOWORKS-MIB.')
ciscoCwObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 14, 1, 3, 2, 7)).setObjects(("CISCOWORKS-MIB", "cwLogDate"), ("CISCOWORKS-MIB", "cwLogSource"), ("CISCOWORKS-MIB", "cwLogApp"), ("CISCOWORKS-MIB", "cwLogMsg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCwObjectsGroup = ciscoCwObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoCwObjectsGroup.setDescription('Cisco Works Objects Group')
ciscoCwNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 14, 1, 3, 2, 12)).setObjects(("CISCOWORKS-MIB", "cwAppLogTrap"), ("CISCOWORKS-MIB", "cwDevLogTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCwNotificationsGroup = ciscoCwNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoCwNotificationsGroup.setDescription('Cisco Works Notification Objects Group.')
mibBuilder.exportSymbols("CISCOWORKS-MIB", cwLog=cwLog, PYSNMP_MODULE_ID=cwLogMIB, cwTrapsPrefix=cwTrapsPrefix, ciscoCwMIBGroups=ciscoCwMIBGroups, cwLogDate=cwLogDate, cwTraps=cwTraps, ciscoCwObjectsGroup=ciscoCwObjectsGroup, ciscoCwMIBCompliances=ciscoCwMIBCompliances, ciscoCwMIBCompliance=ciscoCwMIBCompliance, cwLogMsg=cwLogMsg, cwMIBConform=cwMIBConform, cwLogApp=cwLogApp, cwAppLogTrap=cwAppLogTrap, cwLogMIB=cwLogMIB, cwLogSource=cwLogSource, ciscoCwNotificationsGroup=ciscoCwNotificationsGroup, cwDevLogTrap=cwDevLogTrap)
