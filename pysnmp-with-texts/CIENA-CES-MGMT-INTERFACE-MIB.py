#
# PySNMP MIB module CIENA-CES-MGMT-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-MGMT-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:49:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
cienaGlobalMacAddress, cienaGlobalSeverity = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress", "cienaGlobalSeverity")
cienaCesConfig, cienaCesNotifications = mibBuilder.importSymbols("CIENA-SMI", "cienaCesConfig", "cienaCesNotifications")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Counter32, MibIdentifier, Unsigned32, iso, NotificationType, TimeTicks, Counter64, Integer32, Bits, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "MibIdentifier", "Unsigned32", "iso", "NotificationType", "TimeTicks", "Counter64", "Integer32", "Bits", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cienaCesMgmtInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27))
cienaCesMgmtInterfaceMIB.setRevisions(('2015-05-15 00:00', '2015-04-23 00:00', '2015-04-06 00:00', '2014-11-18 00:00', '2014-10-07 00:00', '2013-06-17 00:00', '2012-04-04 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cienaCesMgmtInterfaceMIB.setRevisionsDescriptions(('Added cienaCesInetIcmpPortUnreachable.', 'Defined cienaCesInetMgmtPort OBJECT IDENTIFIER at cienaCesMgmtInterface 5. Defined cienaCesInetMgmtPortInterface at cienaCesInetMgmtPort 1.', 'Added new object, cienaCesInetMgmtInterfaceIngressAclProfId, to the cienaCesInetMgmtInterfaceTable in order to display the ID of the ingress ACL profile attached to the management interface.', 'Defined cienaCesInetTcpStack OBJECT IDENTIFIER at cienaCesMgmtInterface 4. Defined cienaCesInetTcpTimestamps at cienaCesInetTcpStack 1.', 'Added cienaCesInetIcmpAcceptRedirects and cienaCesInetIcmpEchoIgnoreBroadcasts.', 'Added cienaCesInetMgmtInterfaceDomainVsName to allow a correlation of the remote interface and the virtual switch being used.', 'Initial creation.',))
if mibBuilder.loadTexts: cienaCesMgmtInterfaceMIB.setLastUpdated('201505150000Z')
if mibBuilder.loadTexts: cienaCesMgmtInterfaceMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: cienaCesMgmtInterfaceMIB.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: cienaCesMgmtInterfaceMIB.setDescription('This module defines the management interface details and the associated notifications.')
cienaCesMgmtInterfaceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1))
cienaCesMgmtInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1))
cienaCesMgmtInterfaceMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27))
cienaCesMgmtInterfaceMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0))
cienaCesMgmtInterfaceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 3))
cienaCesMgmtInterfaceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 3, 1))
cienaCesMgmtInterfaceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 3, 2))
cienaCesInetMgmtInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1), )
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceTable.setDescription('Table of management interfaces.')
cienaCesInetMgmtInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1), ).setIndexNames((0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceIndex"), (0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceAddrType"), (0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceAddr"))
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceEntry.setDescription('These interfaces are used to cause the switch CPU to become involved with the IP traffic. By default, a minimum of two interfaces , one for the local management interface and one for the remote management interface.')
cienaCesInetMgmtInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceIndex.setDescription('Specifies the management interface index.')
cienaCesInetMgmtInterfaceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddrType.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddrType.setDescription('This OID specifies the Inet address type of the OIDs cienaCesInetMgmtInterfaceAddr and cienaCesInetMgmtInterfacePrefixLength. When representing: ipv4 : cienaCesInetMgmtInterfaceAddr should be compliant with InetAddressIPv4 from RFC 4001 ipv6 : cienaCesInetMgmtInterfaceAddr should be compliant with InetAddressIPv6 from RFC 4001')
cienaCesInetMgmtInterfaceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddr.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddr.setDescription('Inet address associated with this interface. This OID should be used in conjuction with cienaCesInetMgmtInterfaceAddrType. This value should be compliant with RFC 4001 InetAddressType.')
cienaCesInetMgmtInterfaceAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 4), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddrPrefixLength.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAddrPrefixLength.setDescription('Specifies the address prefix length. This OID should be used in conjuction with cienaCesInetMgmtInterfaceAddrType. This OID should be compliant with RFC 4001 InetAddressPrefixLength.')
cienaCesInetMgmtInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceName.setDescription('The management interface name for this interface.')
cienaCesInetMgmtInterfaceAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 6), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAdminState.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceAdminState.setDescription('The admin state of this management interface. A value of enabled(1) indicates that this interface is enabled and a value of disabled(2) indicates that this interface is disabled.')
cienaCesInetMgmtInterfaceOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 7), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceOperState.setDescription('The oper state of this management interface. A value of enabled(1) indicates that this interface is enabled and a value of disabled(2) indicates that this interface is disabled.')
cienaCesInetMgmtInterfaceDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("vs", 2), ("vlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomain.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomain.setDescription('Specifies the management interface domain.')
cienaCesInetMgmtInterfaceDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomainId.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomainId.setDescription("Specifies the management interface domain index. When cienaCesInetMgmtInterfaceDomain represents 'vs', this object represents the vs index. When cienaCesInetMgmtInterfaceDomain represents 'vlan , this object represents the vlan id.")
cienaCesInetMgmtInterfacePktPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfacePktPriority.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfacePktPriority.setDescription('The 802.1p priority value for the management traffic on this interface.')
cienaCesInetMgmtInterfaceMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceMtu.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceMtu.setDescription('Specifies the interface path MTU.')
cienaCesInetMgmtInterfaceNotifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifIndex.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifIndex.setDescription('Specifies the management interface index.')
cienaCesInetMgmtInterfaceNotifAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifAddrType.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifAddrType.setDescription('This OID specifies the Inet address type of the OIDs cienaCesInetMgmtInterfaceNotifAddr and cienaCesInetMgmtInterfacePrefixLength. When representing: ipv4 : cienaCesInetMgmtInterfaceNotifAddr should be compliant with InetAddressIPv4 from RFC 4001 ipv6 : cienaCesInetMgmtInterfaceNotifAddr should be compliant with InetAddressIPv6 from RFC 4001')
cienaCesInetMgmtInterfaceNotifAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifAddr.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceNotifAddr.setDescription('Inet address associated with this interface. This OID should be used in conjuction with cienaCesInetMgmtInterfaceNotifAddrType. This value should be compliant with RFC 4001 InetAddressType.')
cienaCesInetMgmtInterfaceDomainVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomainVsName.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceDomainVsName.setDescription('The virtual switch name associated with the cienaCesInetMgmtInterfaceDomainId when the cienaCesInetMgmtInterfaceDomain is vs.')
cienaCesInetMgmtInterfaceIngressAclProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceIngressAclProfId.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtInterfaceIngressAclProfId.setDescription('The ID of the ingress ACL profile attached to the management interface. A non-zero value refers to the ACL profile as defined by the cienaCesAclProfileId object in the cienaCesAccessListMIB module. A value of 0 means no ingress ACL profile is attached to this interface.')
cienaCesInetGatewayTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2), )
if mibBuilder.loadTexts: cienaCesInetGatewayTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayTable.setDescription('Table of gateway Inet addresses.')
cienaCesInetGatewayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1), ).setIndexNames((0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayAddrType"), (0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayAddr"))
if mibBuilder.loadTexts: cienaCesInetGatewayEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayEntry.setDescription('Gateway addresses represented here are used by the management interfaces.')
cienaCesInetGatewayAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cienaCesInetGatewayAddrType.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayAddrType.setDescription('This OID specifies the Inet Address Type of the OID cienaCesInetGatewayAddr When representing : ipv4 : cienaCesInetGatewayAddr should be compliant with InetAddressIPv4 from RFC 4001 ipv6 : cienaCesInetGatewayAddr should be compliant with InetAddressIPv6 from RFC 4001 ipv6z : cienaCesInetGatewayAddr should be compliant with InetAddressIPv6z from RFC 4001')
cienaCesInetGatewayAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: cienaCesInetGatewayAddr.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayAddr.setDescription('Inet address associated with this interface. This OID should be used in conjuction with cienaCesInetGatewayAddrType. The InetAddress set here should be compliant with RFC 4001 InetAddressType.')
cienaCesInetGatewaySource = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("dhcpv4", 2), ("userConfiguredPrimary", 3), ("userConfiguredBackup", 4), ("auto", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetGatewaySource.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewaySource.setDescription('Specifies how this gateway was configured.')
cienaCesInetGatewayOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("selected", 1), ("disabled", 2), ("enabled", 3), ("unavailable", 4), ("standby", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetGatewayOperState.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayOperState.setDescription("Specifies the gateway's operational status.")
cienaCesInetGatewayNotifAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetGatewayNotifAddrType.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayNotifAddrType.setDescription('This OID specifies the Inet Address Type of the OID cienaCesInetGatewayNotifAddr When representing : ipv4 : cienaCesInetGatewayNotifAddr should be compliant with InetAddressIPv4 from RFC 4001 ipv6 : cienaCesInetGatewayNotifAddr should be compliant with InetAddressIPv6 from RFC 4001 ipv6z : cienaCesInetGatewayNotifAddr should be compliant with InetAddressIPv6z from RFC 4001')
cienaCesInetGatewayNotifAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetGatewayNotifAddr.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayNotifAddr.setDescription('Inet address associated with this interface. This OID should be used in conjuction with cienaCesInetGatewayNotifAddrType. The InetAddress set here should be compliant with RFC 4001 InetAddressType.')
cienaCesInetStackTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3), )
if mibBuilder.loadTexts: cienaCesInetStackTable.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetStackTable.setDescription('Table of Inet stack states.')
cienaCesInetStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1), ).setIndexNames((0, "CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetAddrType"))
if mibBuilder.loadTexts: cienaCesInetStackEntry.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetStackEntry.setDescription('Inet address type stack operational states.')
cienaCesInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cienaCesInetAddrType.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetAddrType.setDescription('This object indicates the interface address type.')
cienaCesInetForwardingState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetForwardingState.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetForwardingState.setDescription('This object indicates the forwarding state associated with this address type represented by cienaCesInetAddrType.')
cienaCesInetDefaultDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetDefaultDscp.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetDefaultDscp.setDescription('This object indicates the default DSCP associated with this address type represented by cienaCesInetAddrType.')
cienaCesInetIcmpAcceptRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetIcmpAcceptRedirects.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetIcmpAcceptRedirects.setDescription('This object indicates the ICMP accept-redirects setting associated with this address type represented by cienaCesInetAddrType. When on, the corresponding IP stack will act upon received ICMP redirect messages. When off, the corresponding IP stack will not act upon received ICMP redirect messages.')
cienaCesInetIcmpEchoIgnoreBroadcasts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetIcmpEchoIgnoreBroadcasts.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetIcmpEchoIgnoreBroadcasts.setDescription('This object indicates the ICMP echo-ignore-broadcasts setting associated with this address type represented by cienaCesInetAddrType. This setting refers to whether the device will ignore ICMP Echo Request messages which are directed toward a multicast or broadcast destination address.')
cienaCesInetIcmpPortUnreachable = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetIcmpPortUnreachable.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetIcmpPortUnreachable.setDescription('This object indicates the ICMP port-unreachable setting associated with this address type represented by cienaCesInetAddrType. When on, the corresponding IP stack will send ICMP port-unreachable messages when appropriate to do so. When off, the corresponding IP stack will not send ICMP port-unreachable messages.')
cienaCesInetTcpStack = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 4))
cienaCesInetTcpTimestamps = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetTcpTimestamps.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetTcpTimestamps.setDescription('This object indicates the current setting of the TCP timestamps option used by the TCP stack of the device.')
cienaCesInetMgmtPort = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 5))
cienaCesInetMgmtPortInterface = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 27, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesInetMgmtPortInterface.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtPortInterface.setDescription('This object indicates the way in which traffic at the MGMT port is used.')
cienaCesInetMgmtAddrChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifIndex"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddr"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceAddrPrefixLength"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceName"))
if mibBuilder.loadTexts: cienaCesInetMgmtAddrChangeNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtAddrChangeNotification.setDescription('A cienaCesInetMgmtAddrChangeNotification is sent when the inet address of the associated interface changes. ')
cienaCesInetMgmtAddrAddedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 2)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifIndex"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddr"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceAddrPrefixLength"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceName"))
if mibBuilder.loadTexts: cienaCesInetMgmtAddrAddedNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtAddrAddedNotification.setDescription('A cienaCesInetMgmtAddrChangeNotification is sent when a new interface is added.')
cienaCesInetMgmtAddrRemovedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 3)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifIndex"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceNotifAddr"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceAddrPrefixLength"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetMgmtInterfaceName"))
if mibBuilder.loadTexts: cienaCesInetMgmtAddrRemovedNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetMgmtAddrRemovedNotification.setDescription('A cienaCesInetMgmtAddrChangeNotification is sent when an interface is removed.')
cienaCesInetGatewayAddrChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 4)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddr"))
if mibBuilder.loadTexts: cienaCesInetGatewayAddrChangeNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayAddrChangeNotification.setDescription('A cienaCesInetGatewayAddrChangeNotification is sent when the address associated with the gateway is changed.')
cienaCesInetGatewayAddedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 5)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddr"))
if mibBuilder.loadTexts: cienaCesInetGatewayAddedNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayAddedNotification.setDescription('A cienaCesInetGatewayAddrAddNotification is sent when a new gateway is added.')
cienaCesInetGatewayRemovedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 27, 0, 6)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddrType"), ("CIENA-CES-MGMT-INTERFACE-MIB", "cienaCesInetGatewayNotifAddr"))
if mibBuilder.loadTexts: cienaCesInetGatewayRemovedNotification.setStatus('current')
if mibBuilder.loadTexts: cienaCesInetGatewayRemovedNotification.setDescription('A cienaCesInetGatewayRemovedNotification is sent when a gateway is removed.')
mibBuilder.exportSymbols("CIENA-CES-MGMT-INTERFACE-MIB", cienaCesInetGatewayNotifAddr=cienaCesInetGatewayNotifAddr, cienaCesInetMgmtInterfaceMtu=cienaCesInetMgmtInterfaceMtu, cienaCesInetMgmtAddrRemovedNotification=cienaCesInetMgmtAddrRemovedNotification, cienaCesInetMgmtInterfacePktPriority=cienaCesInetMgmtInterfacePktPriority, cienaCesMgmtInterfaceMIBCompliances=cienaCesMgmtInterfaceMIBCompliances, cienaCesInetMgmtInterfaceIngressAclProfId=cienaCesInetMgmtInterfaceIngressAclProfId, cienaCesMgmtInterfaceMIBGroups=cienaCesMgmtInterfaceMIBGroups, cienaCesInetStackEntry=cienaCesInetStackEntry, cienaCesInetGatewayAddedNotification=cienaCesInetGatewayAddedNotification, cienaCesInetMgmtInterfaceNotifAddrType=cienaCesInetMgmtInterfaceNotifAddrType, cienaCesInetDefaultDscp=cienaCesInetDefaultDscp, cienaCesInetMgmtInterfaceAddr=cienaCesInetMgmtInterfaceAddr, cienaCesInetMgmtInterfaceDomain=cienaCesInetMgmtInterfaceDomain, cienaCesInetMgmtPort=cienaCesInetMgmtPort, cienaCesMgmtInterfaceMIBNotificationPrefix=cienaCesMgmtInterfaceMIBNotificationPrefix, cienaCesInetMgmtInterfaceOperState=cienaCesInetMgmtInterfaceOperState, cienaCesInetGatewayRemovedNotification=cienaCesInetGatewayRemovedNotification, cienaCesInetGatewayEntry=cienaCesInetGatewayEntry, cienaCesInetGatewayTable=cienaCesInetGatewayTable, cienaCesInetStackTable=cienaCesInetStackTable, cienaCesInetIcmpAcceptRedirects=cienaCesInetIcmpAcceptRedirects, cienaCesInetMgmtInterfaceIndex=cienaCesInetMgmtInterfaceIndex, cienaCesMgmtInterfaceMIB=cienaCesMgmtInterfaceMIB, cienaCesInetMgmtInterfaceAddrType=cienaCesInetMgmtInterfaceAddrType, cienaCesInetGatewayNotifAddrType=cienaCesInetGatewayNotifAddrType, cienaCesInetMgmtInterfaceAdminState=cienaCesInetMgmtInterfaceAdminState, cienaCesInetIcmpEchoIgnoreBroadcasts=cienaCesInetIcmpEchoIgnoreBroadcasts, cienaCesMgmtInterfaceMIBObjects=cienaCesMgmtInterfaceMIBObjects, cienaCesInetMgmtAddrAddedNotification=cienaCesInetMgmtAddrAddedNotification, cienaCesMgmtInterfaceMIBNotifications=cienaCesMgmtInterfaceMIBNotifications, cienaCesInetMgmtInterfaceTable=cienaCesInetMgmtInterfaceTable, PYSNMP_MODULE_ID=cienaCesMgmtInterfaceMIB, cienaCesInetMgmtInterfaceAddrPrefixLength=cienaCesInetMgmtInterfaceAddrPrefixLength, cienaCesInetGatewayAddr=cienaCesInetGatewayAddr, cienaCesInetGatewayAddrChangeNotification=cienaCesInetGatewayAddrChangeNotification, cienaCesMgmtInterfaceMIBConformance=cienaCesMgmtInterfaceMIBConformance, cienaCesInetMgmtInterfaceDomainVsName=cienaCesInetMgmtInterfaceDomainVsName, cienaCesInetGatewayOperState=cienaCesInetGatewayOperState, cienaCesInetIcmpPortUnreachable=cienaCesInetIcmpPortUnreachable, cienaCesInetMgmtAddrChangeNotification=cienaCesInetMgmtAddrChangeNotification, cienaCesInetTcpTimestamps=cienaCesInetTcpTimestamps, cienaCesMgmtInterface=cienaCesMgmtInterface, cienaCesInetMgmtInterfaceEntry=cienaCesInetMgmtInterfaceEntry, cienaCesInetGatewayAddrType=cienaCesInetGatewayAddrType, cienaCesInetTcpStack=cienaCesInetTcpStack, cienaCesInetMgmtInterfaceDomainId=cienaCesInetMgmtInterfaceDomainId, cienaCesInetMgmtPortInterface=cienaCesInetMgmtPortInterface, cienaCesInetMgmtInterfaceName=cienaCesInetMgmtInterfaceName, cienaCesInetGatewaySource=cienaCesInetGatewaySource, cienaCesInetForwardingState=cienaCesInetForwardingState, cienaCesInetMgmtInterfaceNotifIndex=cienaCesInetMgmtInterfaceNotifIndex, cienaCesInetAddrType=cienaCesInetAddrType, cienaCesInetMgmtInterfaceNotifAddr=cienaCesInetMgmtInterfaceNotifAddr)
