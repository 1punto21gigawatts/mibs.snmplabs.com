#
# PySNMP MIB module HPN-ICF-FC-TRACE-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FC-TRACE-ROUTE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:38:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
HpnicfFcVsanIndex, HpnicfFcAddress, HpnicfFcStartOper, HpnicfFcAddressType, HpnicfFcNameId = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcVsanIndex", "HpnicfFcAddress", "HpnicfFcStartOper", "HpnicfFcAddressType", "HpnicfFcNameId")
hpnicfSan, = mibBuilder.importSymbols("HPN-ICF-VSAN-MIB", "hpnicfSan")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, TimeTicks, Counter64, IpAddress, Unsigned32, NotificationType, Counter32, Bits, Integer32, ObjectIdentity, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "TimeTicks", "Counter64", "IpAddress", "Unsigned32", "NotificationType", "Counter32", "Bits", "Integer32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
hpnicfFcTraceRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4))
hpnicfFcTraceRoute.setRevisions(('2013-02-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfFcTraceRoute.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setLastUpdated('201302270000Z')
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setOrganization('')
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setContactInfo('')
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setDescription('This MIB module is for the management of the Fibre Channel Trace Route functionality.')
hpnicfFcTraceRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1))
hpnicfFcTraceRouteConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1))
hpnicfFcTraceRouteResults = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2))
hpnicfFcTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3))
hpnicfFcTraceRouteNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3, 0))
hpnicfFcTraceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfFcTraceRouteTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteTable.setDescription('A table of trace route entries containing a group of trace route requests that need to be executed at the agent.')
hpnicfFcTraceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteEntry.setDescription('A trace route request entry that needs to be executed at the agent.')
hpnicfFcTraceRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcTraceRouteIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteIndex.setDescription('The index of the current trace route entry. This object uniquely identifies a trace route request entry in a specified VSAN (Virtual Storage Area Network).')
hpnicfFcTraceRouteVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 2), HpnicfFcVsanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteVsan.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteVsan.setDescription("The VSAN on which the trace route request will be executed. If the corresponding instance value of hpnicfFcTraceRouteOperStatus is 'inProgress', the object cannot be modified.")
hpnicfFcTraceRouteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 3), HpnicfFcAddressType().clone('fcid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddressType.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddressType.setDescription('The type of the corresponding instance of hpnicfFcTraceRouteAddress object.')
hpnicfFcTraceRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 4), HpnicfFcAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddress.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddress.setDescription("The address to which the route will be traced. This object will contain an 8-octet WWN (World Wide Name), if the value of the associated instance of hpnicfFcTraceRouteAddressType object is 'wwn'. This object will contain a 3-octet Fibre Channel ID, if the value of the associated instance of hpnicfFcTraceRouteAddressType object is 'fcid'.")
hpnicfFcTraceRouteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteTimeout.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteTimeout.setDescription("The value of timeout for this trace route request. If the corresponding instance value of hpnicfFcTraceRouteOperStatus object is 'inProgress', this object cannot be modified.")
hpnicfFcTraceRouteAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 6), HpnicfFcStartOper().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAdminStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteAdminStatus.setDescription("The administrative status of each hpnicfFcTraceRouteEntry. The object has two values: enable - Activate the entry. disable - Deactivate the entry. When the trace route entry is being executed, this object cannot be modified. If this object is being read, a value of 'enable' will be returned. When the execution finishes, the value of this object will be set to 'disable'.")
hpnicfFcTraceRouteOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("partialSuccess", 3), ("failure", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcTraceRouteOperStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteOperStatus.setDescription('This object indicates the operational status of this hpnicfFcTraceRouteEntry. The value specifications are listed as follows: inProgress - Trace route is in progress. success - Trace route has succeeded. partialSuccess - Trace route has partially succeeded. failure - Trace route has failed due to resource limitations. disabled - Trace route is disabled.')
hpnicfFcTraceRouteAgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 900)).clone(500)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAgeInterval.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteAgeInterval.setDescription('The interval time for an entry to age out after a trace route test is completed.')
hpnicfFcTraceRouteTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteTrapOnCompletion.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteTrapOnCompletion.setDescription('This object indicates whether a hpnicfFcTraceRouteCompletionNotify notification should be generated when this trace route test completes.')
hpnicfFcTraceRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteRowStatus.setDescription('The status of this conceptual row.')
hpnicfFcTraceRouteHopsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsTable.setDescription('A table of trace route hop results. This table indicates the hop-by-hop result of a trace route test associated with an entry in the hpnicfFcTraceRouteTable.')
hpnicfFcTraceRouteHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"), (0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteHopsIndex"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsEntry.setDescription('A trace route hop entry. The first index member specifies the hpnicfFcTraceRouteEntry that an hpnicfFcTraceRouteHopsEntry is associated with. The second index element identifies a hop in a trace route path. In the case of a complete path being traced, entries corresponding to an hpnicfFcTraceRouteEntry are created automatically in this table. Each hop in the complete path will be listed in this table. When an hpnicfFcTraceRouteEntry is deleted or aged out, the entries corresponding to the hpnicfFcTraceRouteEntry in this table are also deleted.')
hpnicfFcTraceRouteHopsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsIndex.setDescription('This object indicates the hop index for a trace route hop. Values for this object associated with the same hpnicfFcTraceRouteIndex MUST begin with 1 and automatically increase by 1.')
hpnicfFcTraceRouteHopsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1, 2), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsAddr.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsAddr.setDescription('This object specifies the WWN of the device associated with this hop.')
hpnicfFcTraceRouteCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3, 0, 1)).setObjects(("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteVsan"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteAddressType"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteAddress"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteOperStatus"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteCompletionNotify.setStatus('current')
if mibBuilder.loadTexts: hpnicfFcTraceRouteCompletionNotify.setDescription("When a trace route test is finished and the instance of hpnicfFcTraceRouteTrapOnCompletion associated with the test is set to 'true', this notification occurred.")
mibBuilder.exportSymbols("HPN-ICF-FC-TRACE-ROUTE-MIB", hpnicfFcTraceRouteTable=hpnicfFcTraceRouteTable, hpnicfFcTraceRouteOperStatus=hpnicfFcTraceRouteOperStatus, hpnicfFcTraceRouteAddress=hpnicfFcTraceRouteAddress, hpnicfFcTraceRouteObjects=hpnicfFcTraceRouteObjects, hpnicfFcTraceRouteTrapOnCompletion=hpnicfFcTraceRouteTrapOnCompletion, hpnicfFcTraceRouteTimeout=hpnicfFcTraceRouteTimeout, hpnicfFcTraceRouteHopsTable=hpnicfFcTraceRouteHopsTable, hpnicfFcTraceRouteConfigurations=hpnicfFcTraceRouteConfigurations, hpnicfFcTraceRouteNotifyPrefix=hpnicfFcTraceRouteNotifyPrefix, hpnicfFcTraceRouteNotifications=hpnicfFcTraceRouteNotifications, hpnicfFcTraceRoute=hpnicfFcTraceRoute, hpnicfFcTraceRouteRowStatus=hpnicfFcTraceRouteRowStatus, hpnicfFcTraceRouteHopsAddr=hpnicfFcTraceRouteHopsAddr, hpnicfFcTraceRouteAddressType=hpnicfFcTraceRouteAddressType, hpnicfFcTraceRouteCompletionNotify=hpnicfFcTraceRouteCompletionNotify, hpnicfFcTraceRouteAdminStatus=hpnicfFcTraceRouteAdminStatus, hpnicfFcTraceRouteResults=hpnicfFcTraceRouteResults, hpnicfFcTraceRouteHopsIndex=hpnicfFcTraceRouteHopsIndex, hpnicfFcTraceRouteEntry=hpnicfFcTraceRouteEntry, hpnicfFcTraceRouteAgeInterval=hpnicfFcTraceRouteAgeInterval, hpnicfFcTraceRouteIndex=hpnicfFcTraceRouteIndex, hpnicfFcTraceRouteHopsEntry=hpnicfFcTraceRouteHopsEntry, PYSNMP_MODULE_ID=hpnicfFcTraceRoute, hpnicfFcTraceRouteVsan=hpnicfFcTraceRouteVsan)
