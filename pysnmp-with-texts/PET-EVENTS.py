#
# PySNMP MIB module PET-EVENTS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PET-EVENTS
# Produced by pysmi-0.3.4 at Wed May  1 14:40:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, TimeTicks, ModuleIdentity, IpAddress, enterprises, Gauge32, MibIdentifier, Bits, NotificationType, Integer32, ObjectIdentity, Counter64, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "TimeTicks", "ModuleIdentity", "IpAddress", "enterprises", "Gauge32", "MibIdentifier", "Bits", "NotificationType", "Integer32", "ObjectIdentity", "Counter64", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wiredformgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 3183))
pet = MibIdentifier((1, 3, 6, 1, 4, 1, 3183, 1))
petEvts = MibIdentifier((1, 3, 6, 1, 4, 1, 3183, 1, 1))
petTrapUnderTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65792))
if mibBuilder.loadTexts: petTrapUnderTemperatureWarning.setDescription('Under-Temperature Warning (Lower non-critical, going low)')
petTrapUnderTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65794))
if mibBuilder.loadTexts: petTrapUnderTemperatureCritical.setDescription('Critical Under-Temperature Problem (Lower Critical - going low)')
petTrapOverTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65799))
if mibBuilder.loadTexts: petTrapOverTemperatureWarning.setDescription('Over-Temperature Warning (Upper non-critical, going high)')
petTrapOverTemperatureCritical = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,65801))
if mibBuilder.loadTexts: petTrapOverTemperatureCritical.setDescription('Critical Over-Temperature Problem (Upper Critical - going high)')
petTrapGenericCriticalTemperature = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,67330))
if mibBuilder.loadTexts: petTrapGenericCriticalTemperature.setDescription('Generic Critical Temperature Problem (Transition to Critical from less severe)')
petTrapGenericTemperatureWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,67331))
if mibBuilder.loadTexts: petTrapGenericTemperatureWarning.setDescription('Generic Temperature Warning (Transition to Warning from less severe)')
petTrapUnderAnalogVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131330))
if mibBuilder.loadTexts: petTrapUnderAnalogVoltageCritical.setDescription('Critical Under-Voltage Problem (Lower Critical - going low)')
petTrapOverAnalogVoltageCritical = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,131337))
if mibBuilder.loadTexts: petTrapOverAnalogVoltageCritical.setDescription('Critical Over-Voltage Problem (Upper Critical - going high)')
petTrapGenericCriticalDiscreteVoltage2 = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,132866))
if mibBuilder.loadTexts: petTrapGenericCriticalDiscreteVoltage2.setDescription('Generic Critical Voltage Problem (Transition to Critical from less severe)')
petTrapGenericDiscreteVoltageWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,132867))
if mibBuilder.loadTexts: petTrapGenericDiscreteVoltageWarning.setDescription('Generic Voltage Warning (Transition to Non-Critical from less severe)')
petTrapGenericCriticalFan = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,263938))
if mibBuilder.loadTexts: petTrapGenericCriticalFan.setDescription('Generic Critical Fan failure (Transition to Critical from less severe)')
petTrapGenericFanWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,263169))
if mibBuilder.loadTexts: petTrapGenericFanWarning.setDescription('Generic Predictive Fan failure (predictive failure asserted)')
petTrapFanSpeedproblem = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,262402))
if mibBuilder.loadTexts: petTrapFanSpeedproblem.setDescription('Fan Speed Problem (speed too low to meet chassis cooling specs)')
petTrapFanSpeedWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,262400))
if mibBuilder.loadTexts: petTrapFanSpeedWarning.setDescription('Fan speed warning (Fan speed below expected speed. Cooling still adequate)')
petTrapPowerSupplyFailureDetected = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552705))
if mibBuilder.loadTexts: petTrapPowerSupplyFailureDetected.setDescription('Power supply Failure detected')
petTrapPowerSupplyWarning = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,552706))
if mibBuilder.loadTexts: petTrapPowerSupplyWarning.setDescription('Power supply Warning')
petTrapProcessorInternalError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487168))
if mibBuilder.loadTexts: petTrapProcessorInternalError.setDescription('Processor Internal Error')
petTrapProcessorThermalTrip = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487169))
if mibBuilder.loadTexts: petTrapProcessorThermalTrip.setDescription('Processor Thermal Trip (Over Temperature Shutdown)')
petTrapProcessorBistError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487170))
if mibBuilder.loadTexts: petTrapProcessorBistError.setDescription('Processor Fault Resilient Booting (FRB) 1 / BIST (Built In Self Test) Failure')
petTrapProcessorFRB2Failure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487171))
if mibBuilder.loadTexts: petTrapProcessorFRB2Failure.setDescription('Processor Fault Resilient Booting (FRB) 2 / Hang in Power On Self Test (POST) Failure')
petTrapProcessorFRB3Failure = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,487172))
if mibBuilder.loadTexts: petTrapProcessorFRB3Failure.setDescription('Processor Fault Resilient Booting (FRB) 3 / Processor Setup / Initialization Failure')
petTrapMemoryUncorrectableECC = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,814849))
if mibBuilder.loadTexts: petTrapMemoryUncorrectableECC.setDescription('Uncorrectable ECC or other uncorrectable memory error')
petTrapChassisIntrusion = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,356096))
if mibBuilder.loadTexts: petTrapChassisIntrusion.setDescription('Chassis Intrusion - Physical Security Violation')
petTrapCriticalInterruptBusTimeout = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273601))
if mibBuilder.loadTexts: petTrapCriticalInterruptBusTimeout.setDescription('Critical Interrupt, Bus Timeout error')
petTrapCriticalInterruptIOChannelNMI = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273602))
if mibBuilder.loadTexts: petTrapCriticalInterruptIOChannelNMI.setDescription('Critical Interrupt, IO Channel check NMI error')
petTrapCriticalInterruptSoftwareNMI = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273603))
if mibBuilder.loadTexts: petTrapCriticalInterruptSoftwareNMI.setDescription('Critical Interrupt, software NMI error')
petTrapCriticalInterruptPCIPERR = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273604))
if mibBuilder.loadTexts: petTrapCriticalInterruptPCIPERR.setDescription('Critical Interrupt, PCI PERR parity error')
petTrapCriticalInterruptPCISERR = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273605))
if mibBuilder.loadTexts: petTrapCriticalInterruptPCISERR.setDescription('Critical Interrupt, PCI SERR parity error')
petTrapCriticalInterruptBusUncorrect = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273608))
if mibBuilder.loadTexts: petTrapCriticalInterruptBusUncorrect.setDescription('Critical Interrupt, Bus Uncorrectable error')
petTrapCriticalInterruptFatalNMI = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1273609))
if mibBuilder.loadTexts: petTrapCriticalInterruptFatalNMI.setDescription('Critical Interrupt, Fatal NMI error')
petTrapBIOSPOSTCodeError = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1011456))
if mibBuilder.loadTexts: petTrapBIOSPOSTCodeError.setDescription('System Firmware Progress: BIOS POST code error')
petTrapWatchdogReset = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322177))
if mibBuilder.loadTexts: petTrapWatchdogReset.setDescription('Watchdog Reset')
petTrapWatchdogPowerDown = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322178))
if mibBuilder.loadTexts: petTrapWatchdogPowerDown.setDescription('Watchdog Power Down')
petTrapWatchdogPowerCycle = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,2322179))
if mibBuilder.loadTexts: petTrapWatchdogPowerCycle.setDescription('Watchdog Power Cycle')
petTrapOEMSystemBootEvent = NotificationType((1, 3, 6, 1, 4, 1, 3183, 1, 1) + (0,1208065))
if mibBuilder.loadTexts: petTrapOEMSystemBootEvent.setDescription('OEM System Boot Event')
mibBuilder.exportSymbols("PET-EVENTS", petTrapUnderTemperatureCritical=petTrapUnderTemperatureCritical, wiredformgmt=wiredformgmt, petTrapUnderAnalogVoltageCritical=petTrapUnderAnalogVoltageCritical, petEvts=petEvts, petTrapOverTemperatureWarning=petTrapOverTemperatureWarning, petTrapFanSpeedWarning=petTrapFanSpeedWarning, petTrapProcessorThermalTrip=petTrapProcessorThermalTrip, petTrapProcessorBistError=petTrapProcessorBistError, petTrapGenericDiscreteVoltageWarning=petTrapGenericDiscreteVoltageWarning, petTrapGenericCriticalTemperature=petTrapGenericCriticalTemperature, petTrapProcessorFRB2Failure=petTrapProcessorFRB2Failure, petTrapWatchdogPowerDown=petTrapWatchdogPowerDown, petTrapWatchdogReset=petTrapWatchdogReset, petTrapCriticalInterruptSoftwareNMI=petTrapCriticalInterruptSoftwareNMI, petTrapOEMSystemBootEvent=petTrapOEMSystemBootEvent, petTrapGenericCriticalFan=petTrapGenericCriticalFan, petTrapGenericCriticalDiscreteVoltage2=petTrapGenericCriticalDiscreteVoltage2, petTrapOverAnalogVoltageCritical=petTrapOverAnalogVoltageCritical, petTrapMemoryUncorrectableECC=petTrapMemoryUncorrectableECC, petTrapPowerSupplyWarning=petTrapPowerSupplyWarning, petTrapCriticalInterruptBusUncorrect=petTrapCriticalInterruptBusUncorrect, petTrapProcessorFRB3Failure=petTrapProcessorFRB3Failure, petTrapOverTemperatureCritical=petTrapOverTemperatureCritical, petTrapGenericFanWarning=petTrapGenericFanWarning, petTrapUnderTemperatureWarning=petTrapUnderTemperatureWarning, petTrapCriticalInterruptFatalNMI=petTrapCriticalInterruptFatalNMI, petTrapWatchdogPowerCycle=petTrapWatchdogPowerCycle, petTrapProcessorInternalError=petTrapProcessorInternalError, petTrapCriticalInterruptIOChannelNMI=petTrapCriticalInterruptIOChannelNMI, petTrapCriticalInterruptBusTimeout=petTrapCriticalInterruptBusTimeout, petTrapFanSpeedproblem=petTrapFanSpeedproblem, petTrapCriticalInterruptPCIPERR=petTrapCriticalInterruptPCIPERR, petTrapChassisIntrusion=petTrapChassisIntrusion, petTrapBIOSPOSTCodeError=petTrapBIOSPOSTCodeError, petTrapCriticalInterruptPCISERR=petTrapCriticalInterruptPCISERR, petTrapPowerSupplyFailureDetected=petTrapPowerSupplyFailureDetected, pet=pet, petTrapGenericTemperatureWarning=petTrapGenericTemperatureWarning)
