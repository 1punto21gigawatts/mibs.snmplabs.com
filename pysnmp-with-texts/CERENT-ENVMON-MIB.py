#
# PySNMP MIB module CERENT-ENVMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CERENT-ENVMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
cerentGeneric, cerentRequirements, cerentModules = mibBuilder.importSymbols("CERENT-GLOBAL-REGISTRY", "cerentGeneric", "cerentRequirements", "cerentModules")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, Unsigned32, MibIdentifier, Counter32, Counter64, Bits, Integer32, iso, Gauge32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "MibIdentifier", "Counter32", "Counter64", "Bits", "Integer32", "iso", "Gauge32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cerentEnvMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3607, 1, 10, 120))
cerentEnvMonMIB.setRevisions(('2004-01-27 14:51',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cerentEnvMonMIB.setRevisionsDescriptions(('First Version',))
if mibBuilder.loadTexts: cerentEnvMonMIB.setLastUpdated('200401271451Z')
if mibBuilder.loadTexts: cerentEnvMonMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: cerentEnvMonMIB.setContactInfo('Support@Cisco.com Postal: 1435 North McDowell Blvd Petaluma CA 94954 Tel: +1.877.323.7368')
if mibBuilder.loadTexts: cerentEnvMonMIB.setDescription('This MIB module provides Environmental status information')
cerentEnvMonMibConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 3607, 5, 70))
if mibBuilder.loadTexts: cerentEnvMonMibConformance.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonMibConformance.setDescription('This node is created for compliance. Has objects as required by the RFCs')
cerentEnvMonMibCompliance = ObjectIdentity((1, 3, 6, 1, 4, 1, 3607, 5, 70, 10))
if mibBuilder.loadTexts: cerentEnvMonMibCompliance.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonMibCompliance.setDescription('The compliance statements for Cisco ONS devices.')
cerentEnvMonMibGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 3607, 5, 70, 20))
if mibBuilder.loadTexts: cerentEnvMonMibGroups.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonMibGroups.setDescription('All the objects and events are grouped under this for conformance')
cerentEnvMonObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 3607, 2, 80))
if mibBuilder.loadTexts: cerentEnvMonObjects.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonObjects.setDescription('')
cerentEnvMonVoltageStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10), )
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsTable.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsTable.setDescription('This table maintains the status info for all EnvMon related voltages picked up by the sensors in the device.')
cerentEnvMonVoltageStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1), ).setIndexNames((0, "CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsIndex"))
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsEntry.setDescription('There will as many rows as there are sensors in the device.')
cerentEnvMonVoltageStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsIndex.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsIndex.setDescription('The value index uniquely indicates the voltage sensor in the device. ')
cerentEnvMonVoltageStatsDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsDescr.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsDescr.setDescription('Unique Name/Description of the voltage sensor.')
cerentEnvMonVoltageStatsCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 30), Integer32()).setUnits('millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsCurrentValue.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsCurrentValue.setDescription('Current voltage measurement at this voltage sensor.')
cerentEnvMonVoltageStatsThresholdVeryHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 40), Integer32()).setUnits('millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdVeryHigh.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdVeryHigh.setDescription('If the current voltage value exceeds this threshold value, an alarm event will be raised by the device. The severity of this event may be provisionable.')
cerentEnvMonVoltageStatsThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 50), Integer32()).setUnits('millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdHigh.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdHigh.setDescription('If the current voltage value exceeds this threshold value, a warning event will be raised by the device. The severity of this event may be provisionable.')
cerentEnvMonVoltageStatsThresholdLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 60), Integer32()).setUnits('millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdLow.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdLow.setDescription('If the current voltage value falls below this threshold value, a warning event will be raised by the device. The severity of this event may be provisionable.')
cerentEnvMonVoltageStatsThresholdVeryLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 10, 1, 70), Integer32()).setUnits('millivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdVeryLow.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonVoltageStatsThresholdVeryLow.setDescription('If the current voltage value falls below this threshold value, an alarm event will be raised by the device. The severity of this event may be provisionable.')
cerentEnvMonTemperatureStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20), )
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsTable.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsTable.setDescription('This table provides ambient temperature information as measured by the temperature sensors.')
cerentEnvMonTemperatureStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20, 1), ).setIndexNames((0, "CERENT-ENVMON-MIB", "cerentEnvMonTemperatureStatsIndex"))
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsEntry.setDescription('Each temperature is represented by a row in the table.')
cerentEnvMonTemperatureStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsIndex.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsIndex.setDescription('The value index uniquely indicates the temperature sensor in the device. ')
cerentEnvMonTemperatureStatsDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsDescr.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsDescr.setDescription('Unique Name/Description of the temperature sensor.')
cerentEnvMonTemperatureStatsCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20, 1, 30), Gauge32()).setUnits('Degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsCurrentValue.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsCurrentValue.setDescription('Current Temperature measurement at this temperature sensor.')
cerentEnvMonTemperatureStatsThresholdHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3607, 2, 80, 20, 1, 40), Gauge32()).setUnits('Degree Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsThresholdHigh.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonTemperatureStatsThresholdHigh.setDescription('If the current temperature value exceeds this threshold value, an alarm event will be raised by the device. The severity of this event may be provisionable.')
cerentEnvMonMibObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3607, 5, 70, 20, 10)).setObjects(("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsDescr"), ("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsCurrentValue"), ("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsThresholdVeryHigh"), ("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsThresholdHigh"), ("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsThresholdLow"), ("CERENT-ENVMON-MIB", "cerentEnvMonVoltageStatsThresholdVeryLow"), ("CERENT-ENVMON-MIB", "cerentEnvMonTemperatureStatsDescr"), ("CERENT-ENVMON-MIB", "cerentEnvMonTemperatureStatsCurrentValue"), ("CERENT-ENVMON-MIB", "cerentEnvMonTemperatureStatsThresholdHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentEnvMonMibObjectsGroup = cerentEnvMonMibObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonMibObjectsGroup.setDescription('All NMS accessible objects')
cerentEnvMonMibBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3607, 5, 70, 10, 10)).setObjects(("CERENT-ENVMON-MIB", "cerentEnvMonMibObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cerentEnvMonMibBasicCompliance = cerentEnvMonMibBasicCompliance.setStatus('current')
if mibBuilder.loadTexts: cerentEnvMonMibBasicCompliance.setDescription('The basic implementation requirements for all Cisco ONS network devices.')
mibBuilder.exportSymbols("CERENT-ENVMON-MIB", cerentEnvMonTemperatureStatsIndex=cerentEnvMonTemperatureStatsIndex, cerentEnvMonObjects=cerentEnvMonObjects, cerentEnvMonMibGroups=cerentEnvMonMibGroups, cerentEnvMonVoltageStatsThresholdVeryLow=cerentEnvMonVoltageStatsThresholdVeryLow, cerentEnvMonMIB=cerentEnvMonMIB, cerentEnvMonVoltageStatsThresholdVeryHigh=cerentEnvMonVoltageStatsThresholdVeryHigh, cerentEnvMonTemperatureStatsTable=cerentEnvMonTemperatureStatsTable, cerentEnvMonVoltageStatsTable=cerentEnvMonVoltageStatsTable, cerentEnvMonMibBasicCompliance=cerentEnvMonMibBasicCompliance, cerentEnvMonMibObjectsGroup=cerentEnvMonMibObjectsGroup, cerentEnvMonVoltageStatsDescr=cerentEnvMonVoltageStatsDescr, cerentEnvMonMibConformance=cerentEnvMonMibConformance, cerentEnvMonVoltageStatsCurrentValue=cerentEnvMonVoltageStatsCurrentValue, cerentEnvMonVoltageStatsEntry=cerentEnvMonVoltageStatsEntry, cerentEnvMonTemperatureStatsEntry=cerentEnvMonTemperatureStatsEntry, cerentEnvMonTemperatureStatsCurrentValue=cerentEnvMonTemperatureStatsCurrentValue, cerentEnvMonVoltageStatsThresholdLow=cerentEnvMonVoltageStatsThresholdLow, cerentEnvMonTemperatureStatsThresholdHigh=cerentEnvMonTemperatureStatsThresholdHigh, cerentEnvMonMibCompliance=cerentEnvMonMibCompliance, cerentEnvMonVoltageStatsThresholdHigh=cerentEnvMonVoltageStatsThresholdHigh, PYSNMP_MODULE_ID=cerentEnvMonMIB, cerentEnvMonTemperatureStatsDescr=cerentEnvMonTemperatureStatsDescr, cerentEnvMonVoltageStatsIndex=cerentEnvMonVoltageStatsIndex)
