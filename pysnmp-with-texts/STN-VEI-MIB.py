#
# PySNMP MIB module STN-VEI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-VEI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:11:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, ObjectIdentity, Gauge32, Unsigned32, IpAddress, Counter32, ModuleIdentity, TimeTicks, Counter64, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "ObjectIdentity", "Gauge32", "Unsigned32", "IpAddress", "Counter32", "ModuleIdentity", "TimeTicks", "Counter64", "iso", "MibIdentifier")
DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress")
stnNotification, = mibBuilder.importSymbols("SPRING-TIDE-NETWORKS-SMI", "stnNotification")
stnRouterVEI, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterVEI")
stnVei = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1))
if mibBuilder.loadTexts: stnVei.setLastUpdated('0004060000Z')
if mibBuilder.loadTexts: stnVei.setOrganization('Spring Tide Networks')
if mibBuilder.loadTexts: stnVei.setContactInfo(' Spring Tide Networks, Inc. Customer Service Postal: 3 Clock Tower Place Suite 200 Maynard, MA 01754 USA Tel: +1 978 298 2000 Email: custserv@springtidenet.com ')
if mibBuilder.loadTexts: stnVei.setDescription('This MIB module describes managed objects of Spring Tide Networks Virtual Ethernet Interface.')
stnVeiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1))
stnVeiL2Table = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1), )
if mibBuilder.loadTexts: stnVeiL2Table.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2Table.setDescription('A list of VEI L2 entries.')
stnVeiL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiL2IfIndex"))
if mibBuilder.loadTexts: stnVeiL2Entry.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2Entry.setDescription('Entry contains information about a particular VEI L2.')
stnVeiL2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2IfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2IfIndex.setDescription('The ifIndex of the VEI Layer 2 Interface.')
stnVeiL2ViId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ViId.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2ViId.setDescription('The instance of the configuration record corresponding to this VEI.')
stnVeiL2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2Name.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2Name.setDescription('The name configured for this VEI.')
stnVeiL2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("atmBridgeEnetV2", 1), ("atmBridgeEnet8023", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2Type.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2Type.setDescription('The type of virtual ethernet interface. An atmBridgeEnetV2 VEI implements Ethernet V2 PDUs encapsulated per RFC1483 over ATM AAL5. An atmBridgeEnetV2 VEI implements Ethernet 802.3 PDUs encapsulated per RFC1483 over ATM AAL5.')
stnVeiL2MacTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2MacTtl.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2MacTtl.setDescription('The approximate time, in seconds, that a learned MAC address will be considered in-use by the VcLink it originated on. Once this time has expired, the resources associated with the MAC database entry can be reclaimed for learning other MAC addresses if necessary.')
stnVeiL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2State.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2State.setDescription('The current operational state of the VEI.')
stnVeiL2RegisteredLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2RegisteredLowerLinks.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2RegisteredLowerLinks.setDescription('The current number of VCLinks registered with the VEI.')
stnVeiL2ActiveLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ActiveLowerLinks.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2ActiveLowerLinks.setDescription('The current number of VCLinks actively carrying traffic for this VEI.')
stnVeiL2NoFreeEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2NoFreeEndStations.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2NoFreeEndStations.setDescription('The number of times that the VEI ran out of MAC address database entries when attempting to learn a new remote MAC address. This indicates that the total number of remote MACs allowed on the VEI is greater than the system limit of 4096 per VEI.')
stnVeiL2TxDestNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2TxDestNotFound.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2TxDestNotFound.setDescription('The number of outgoing packets that were dropped because the VEI could not find a MAC address database entry for the destination MAC address. This indicates that the VEI has not learned the destination MAC address.')
stnVeiL2TxArpRspDropNoEndStation = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2TxArpRspDropNoEndStation.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2TxArpRspDropNoEndStation.setDescription("The number of outgoing ARP response packets dropped by the VEI because either the ARP's sending or target MAC address is not in the MAC address database.")
stnVeiL2ActiveMultiCasts = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2ActiveMultiCasts.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2ActiveMultiCasts.setDescription('The current number of mulicast/broadcast transmit packets that the VEI is propagating across all active VCLinks.')
stnVeiL2MultiCastsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiL2MultiCastsDrop.setStatus('current')
if mibBuilder.loadTexts: stnVeiL2MultiCastsDrop.setDescription('The number of multicast/broadcast transmit packets that the VEI dropped due to resource limitations.')
stnVeiLinkTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2), )
if mibBuilder.loadTexts: stnVeiLinkTable.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkTable.setDescription('A list of the links configured for a VEI.')
stnVeiLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiLinkVeiIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkIfIndex"))
if mibBuilder.loadTexts: stnVeiLinkEntry.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkEntry.setDescription('Entry contains information about a particular VEI L2.')
stnVeiLinkVeiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVeiIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkVeiIfIndex.setDescription('The IfIndex of the VEI for which this VcLink is configured.')
stnVeiLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkIfIndex.setDescription('The IfIndex of this VcLink.')
stnVeiLinkMaxEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMaxEndStations.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMaxEndStations.setDescription('The maximum number of MAC address database entries that this VcLink service. This limits the number of active endstations supported via this link.')
stnVeiLinkCurrentEndStations = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkCurrentEndStations.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkCurrentEndStations.setDescription('The current number of MAC address database entries in use by this VcLink.')
stnVeiLinkLearnFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkLearnFailures.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkLearnFailures.setDescription('The number of receive packets discarded because the source MAC address did not appear in the MAC address database and could not be added (learned) due to resource limitations.')
stnVeiLinkMacRecycledLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacRecycledLocal.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacRecycledLocal.setDescription('The number of times a MAC address entry was reused to learn a new MAC address on the same link. The original MAC address is discarded on this event. This occurs only when no traffic has been seen from the endstation corresponding to the MAC address entry after approximately stnVeiL2MacTtl seconds, and a new MAC address must be learned (added to the database) for this link. This recycle only occurs if the VcLink is at its endstation limit (stnVeiLinkMaxEndStations) or a new MAC address database object cannot be allocated due to system resource limits.')
stnVeiLinkMacRecycledGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacRecycledGlobal.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacRecycledGlobal.setDescription('The number of times a MAC address entry was removed from this link and reused by a different VcLink to learn a new MAC address. This can only occur when: 1) no traffic has been seen from the endstation corresponding to the MAC address entry for approximately twice stnVeiL2MacTtl seconds, AND 2) the total number of MAC address entries (stnVeiLinkMaxEndStations) for all VcLinks under the VEI is greater than the per-VEI system limit (4096), AND 3) there are no free MAC address entries available. When these conditions are true, then the VEI has been overprovisioned with respect to the number of MAC address entries. Recycling entries across VcLinks allow those VcLinks under high demand claim MAC address entries from VcLinks experiencing less activity.')
stnVeiLinkArpRspDropSameIface = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkArpRspDropSameIface.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkArpRspDropSameIface.setDescription('The number of outgoing ARP Response packets that could be discarded because the target and source MAC Addresses reside on the same VcLink. In this case, no ARP Proxy support is needed, and the packet can safely be discarded.')
stnVeiLinkEndStationMoved = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkEndStationMoved.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkEndStationMoved.setDescription('The number of times the VEI detected that a remote MAC address moved from this link and appeared on another.')
stnVeiLinkPhysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 10), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkPhysIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkPhysIfIndex.setDescription('The physical interface index represents the port and line card used by this link. It is calculated based on the slot and port of the module.')
stnVeiLinkVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVpi.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkVpi.setDescription('The VPI value of the PVC represented by this link.')
stnVeiLinkVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkVci.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkVci.setDescription('The VCI value of the PVC represented by this link.')
stnVeiLinkMacTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3), )
if mibBuilder.loadTexts: stnVeiLinkMacTable.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacTable.setDescription('A list of the remote MACs learned by a VEI VcLink.')
stnVeiLinkMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1), ).setIndexNames((0, "STN-VEI-MIB", "stnVeiLinkMacVeiIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkMacLinkIfIndex"), (0, "STN-VEI-MIB", "stnVeiLinkMacAddress"))
if mibBuilder.loadTexts: stnVeiLinkMacEntry.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacEntry.setDescription('Entry contains information about a particular remote MAC learned on a VEI VcLink.')
stnVeiLinkMacVeiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacVeiIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacVeiIfIndex.setDescription('The IfIndex of the VEI for the VcLink which owns the MAC database entry.')
stnVeiLinkMacLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacLinkIfIndex.setDescription('The IfIndex of the VcLink which owns the MAC database entry.')
stnVeiLinkMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 3), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacAddress.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacAddress.setDescription('The MAC address of the remote endstation for which this database entry corresponds to.')
stnVeiLinkMacAge = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacAge.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacAge.setDescription('The approximate number of time periods that have passed since packets were received from the endstation corresponding to this entry. Each time period is approximately one-half the value of stnVeiL2MacTtl for this VEI. The current maximum for this value is 4. If the entry is statically configured, this value will always be zero.')
stnVeiLinkMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 6, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("veiLinkMacLearned", 1), ("veiLinkMacStatic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVeiLinkMacType.setStatus('current')
if mibBuilder.loadTexts: stnVeiLinkMacType.setDescription('Indicates the type of MAC database entry. veiLinkMacLearned indicates that the entry was dynamically learned from the incoming packet flow. veiLinkMacStatic indicates that the entry is statically configured and will never age out.')
mibBuilder.exportSymbols("STN-VEI-MIB", stnVeiLinkMacAddress=stnVeiLinkMacAddress, stnVeiLinkMacType=stnVeiLinkMacType, stnVeiL2State=stnVeiL2State, stnVeiLinkMacAge=stnVeiLinkMacAge, stnVeiL2TxDestNotFound=stnVeiL2TxDestNotFound, PYSNMP_MODULE_ID=stnVei, stnVeiLinkVeiIfIndex=stnVeiLinkVeiIfIndex, stnVeiLinkLearnFailures=stnVeiLinkLearnFailures, stnVeiLinkArpRspDropSameIface=stnVeiLinkArpRspDropSameIface, stnVeiLinkVci=stnVeiLinkVci, stnVeiLinkIfIndex=stnVeiLinkIfIndex, stnVeiLinkMaxEndStations=stnVeiLinkMaxEndStations, stnVeiLinkVpi=stnVeiLinkVpi, stnVeiLinkMacVeiIfIndex=stnVeiLinkMacVeiIfIndex, stnVeiLinkCurrentEndStations=stnVeiLinkCurrentEndStations, stnVeiLinkEndStationMoved=stnVeiLinkEndStationMoved, stnVeiL2ActiveLowerLinks=stnVeiL2ActiveLowerLinks, stnVei=stnVei, stnVeiLinkTable=stnVeiLinkTable, stnVeiLinkMacLinkIfIndex=stnVeiLinkMacLinkIfIndex, stnVeiLinkMacTable=stnVeiLinkMacTable, stnVeiL2NoFreeEndStations=stnVeiL2NoFreeEndStations, stnVeiL2Entry=stnVeiL2Entry, stnVeiL2Table=stnVeiL2Table, stnVeiL2ViId=stnVeiL2ViId, stnVeiLinkMacRecycledGlobal=stnVeiLinkMacRecycledGlobal, stnVeiL2TxArpRspDropNoEndStation=stnVeiL2TxArpRspDropNoEndStation, stnVeiL2Type=stnVeiL2Type, stnVeiL2RegisteredLowerLinks=stnVeiL2RegisteredLowerLinks, stnVeiLinkPhysIfIndex=stnVeiLinkPhysIfIndex, stnVeiLinkMacRecycledLocal=stnVeiLinkMacRecycledLocal, stnVeiL2ActiveMultiCasts=stnVeiL2ActiveMultiCasts, stnVeiL2MacTtl=stnVeiL2MacTtl, stnVeiLinkMacEntry=stnVeiLinkMacEntry, stnVeiL2IfIndex=stnVeiL2IfIndex, stnVeiLinkEntry=stnVeiLinkEntry, stnVeiObjects=stnVeiObjects, stnVeiL2MultiCastsDrop=stnVeiL2MultiCastsDrop, stnVeiL2Name=stnVeiL2Name)
