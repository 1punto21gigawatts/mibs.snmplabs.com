#
# PySNMP MIB module ENTERASYS-RS-232-MIB-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-RS-232-MIB-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
rs232PortEntry, = mibBuilder.importSymbols("RS-232-MIB", "rs232PortEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, Counter32, NotificationType, IpAddress, TimeTicks, Unsigned32, MibIdentifier, Counter64, iso, ObjectIdentity, Integer32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "NotificationType", "IpAddress", "TimeTicks", "Unsigned32", "MibIdentifier", "Counter64", "iso", "ObjectIdentity", "Integer32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
etsysRs232MibExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77))
etsysRs232MibExtMIB.setRevisions(('2011-06-22 14:50', '2010-11-09 20:07',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysRs232MibExtMIB.setRevisionsDescriptions(('Added the etsysRs232CtsLinkExtTable.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysRs232MibExtMIB.setLastUpdated('201106221450Z')
if mibBuilder.loadTexts: etsysRs232MibExtMIB.setOrganization('Enterasys Networks, Inc.')
if mibBuilder.loadTexts: etsysRs232MibExtMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysRs232MibExtMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID that provide extensions to the industry standard RS232-MIB.')
etsysRs232MibExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1))
etsysRs232MibExtVt100 = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 1))
etsysRs232MibExtCtsLink = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 2))
etsysRs232Vt100ExtTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 1, 1), )
if mibBuilder.loadTexts: etsysRs232Vt100ExtTable.setStatus('current')
if mibBuilder.loadTexts: etsysRs232Vt100ExtTable.setDescription('A table of per interface information that extends the general rs232 port table defined in RFC1659.')
etsysRs232Vt100ExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 1, 1, 1), )
rs232PortEntry.registerAugmentions(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232Vt100ExtEntry"))
etsysRs232Vt100ExtEntry.setIndexNames(*rs232PortEntry.getIndexNames())
if mibBuilder.loadTexts: etsysRs232Vt100ExtEntry.setStatus('current')
if mibBuilder.loadTexts: etsysRs232Vt100ExtEntry.setDescription('An entry containing per interface information.')
etsysRs232Vt100DsrEnableState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 1, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRs232Vt100DsrEnableState.setStatus('current')
if mibBuilder.loadTexts: etsysRs232Vt100DsrEnableState.setDescription('This object indicates the current enabled status for transmitting a VT100 Device Status Request (DSR) to an attached terminal.')
etsysRs232Vt100DsrTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 1, 1, 1, 2), Integer32().clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRs232Vt100DsrTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysRs232Vt100DsrTimeout.setDescription('This object indicates the current timeout value in seconds to wait for a reply to a Device Status Request VT100 ANSI escape sequence.')
etsysRs232CtsLinkExtTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 2, 1), )
if mibBuilder.loadTexts: etsysRs232CtsLinkExtTable.setStatus('current')
if mibBuilder.loadTexts: etsysRs232CtsLinkExtTable.setDescription('A table of per interface information that extends the general rs232 port table defined in RFC1659.')
etsysRs232CtsLinkExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 2, 1, 1), )
rs232PortEntry.registerAugmentions(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232CtsLinkExtEntry"))
etsysRs232CtsLinkExtEntry.setIndexNames(*rs232PortEntry.getIndexNames())
if mibBuilder.loadTexts: etsysRs232CtsLinkExtEntry.setStatus('current')
if mibBuilder.loadTexts: etsysRs232CtsLinkExtEntry.setDescription('An entry containing per interface information.')
etsysRs232CtsLinkEnableState = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 1, 2, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysRs232CtsLinkEnableState.setStatus('current')
if mibBuilder.loadTexts: etsysRs232CtsLinkEnableState.setDescription('This object indicates the current enabled status for utilizing the Clear To Send input signal as a physical link indication.')
etsysRs232MibExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2))
etsysRs232MibExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 1))
etsysRs232MibExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 2))
etsysRs232MibExtVt100DsrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 1, 1)).setObjects(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232Vt100DsrEnableState"), ("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232Vt100DsrTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRs232MibExtVt100DsrGroup = etsysRs232MibExtVt100DsrGroup.setStatus('current')
if mibBuilder.loadTexts: etsysRs232MibExtVt100DsrGroup.setDescription('The group that controls the operational properties of the a VT100 Device Status ANSI escape sequence exchange between a RS-232-like host and terminal.')
etsysRs232MibExtCtsLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 1, 2)).setObjects(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232CtsLinkEnableState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRs232MibExtCtsLinkGroup = etsysRs232MibExtCtsLinkGroup.setStatus('current')
if mibBuilder.loadTexts: etsysRs232MibExtCtsLinkGroup.setDescription('The group that controls the operational properties of the physical link detection method utilizing the Clear To Send input signal.')
etsysRs232MibExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 2, 1)).setObjects(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232MibExtVt100DsrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRs232MibExtCompliance = etsysRs232MibExtCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysRs232MibExtCompliance.setDescription('The compliance statement for devices that support RS232-MIB extensions.')
etsysRs232MibCtsExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 77, 2, 2, 2)).setObjects(("ENTERASYS-RS-232-MIB-EXT-MIB", "etsysRs232MibExtCtsLinkGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysRs232MibCtsExtCompliance = etsysRs232MibCtsExtCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysRs232MibCtsExtCompliance.setDescription('The compliance statement for devices that support RS232-MIB CTS physical link detection extensions.')
mibBuilder.exportSymbols("ENTERASYS-RS-232-MIB-EXT-MIB", etsysRs232CtsLinkExtTable=etsysRs232CtsLinkExtTable, etsysRs232MibExtCtsLink=etsysRs232MibExtCtsLink, etsysRs232MibExtCompliances=etsysRs232MibExtCompliances, etsysRs232MibExtObjects=etsysRs232MibExtObjects, etsysRs232MibExtVt100DsrGroup=etsysRs232MibExtVt100DsrGroup, etsysRs232MibExtCtsLinkGroup=etsysRs232MibExtCtsLinkGroup, etsysRs232Vt100DsrTimeout=etsysRs232Vt100DsrTimeout, etsysRs232Vt100DsrEnableState=etsysRs232Vt100DsrEnableState, etsysRs232MibCtsExtCompliance=etsysRs232MibCtsExtCompliance, etsysRs232MibExtVt100=etsysRs232MibExtVt100, etsysRs232Vt100ExtTable=etsysRs232Vt100ExtTable, etsysRs232MibExtMIB=etsysRs232MibExtMIB, etsysRs232MibExtConformance=etsysRs232MibExtConformance, etsysRs232CtsLinkExtEntry=etsysRs232CtsLinkExtEntry, etsysRs232Vt100ExtEntry=etsysRs232Vt100ExtEntry, etsysRs232CtsLinkEnableState=etsysRs232CtsLinkEnableState, etsysRs232MibExtCompliance=etsysRs232MibExtCompliance, PYSNMP_MODULE_ID=etsysRs232MibExtMIB, etsysRs232MibExtGroups=etsysRs232MibExtGroups)
