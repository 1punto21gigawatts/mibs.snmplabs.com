#
# PySNMP MIB module HUAWEI-DHCPR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-DHCPR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hwDhcp, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDhcp")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Counter64, Gauge32, Integer32, ObjectIdentity, TimeTicks, Counter32, NotificationType, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "Gauge32", "Integer32", "ObjectIdentity", "TimeTicks", "Counter32", "NotificationType", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Bits")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hwDHCPRelayMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1))
hwDHCPRelayMib.setRevisions(('2014-08-12 00:00', '2013-10-17 00:00', '2003-07-21 00:00', '2013-06-29 00:00', '2003-02-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwDHCPRelayMib.setRevisionsDescriptions(('This version add the hwDHCPRelayReleaseLocalPktNum node.', 'V2.03 - V2.04 add the hwDHCP6RDUID node.', 'The initial revision of this MIB module.', 'Update the descriptions of these nodes: hwDHCPRTxClientPktNum, hwDHCPRTxClientUniPktNum and hwDHCPRTxClientBroPktNum.', 'The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hwDHCPRelayMib.setLastUpdated('201408120000Z')
if mibBuilder.loadTexts: hwDHCPRelayMib.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwDHCPRelayMib.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwDHCPRelayMib.setDescription('This MIB describes objects used for managing DHCP relay, including configuring ip addresses for DHCP relay, selecting allocation mode of dhcp service, and some statistic information.')
hwDHCPRelayMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1))
hwDHCPRIPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 1), )
if mibBuilder.loadTexts: hwDHCPRIPTable.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRIPTable.setDescription('A table for configuring ip addresses for DHCP relay, The ip address means address of DHCP server.')
hwDHCPRIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-DHCPR-MIB", "hwDHCPRIPAddr"))
if mibBuilder.loadTexts: hwDHCPRIPEntry.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRIPEntry.setDescription('An entry for configuring ip addresses for DHCP relay.')
hwDHCPRIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRIPAddr.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRIPAddr.setDescription('Ip address for DHCP relay, The ip address means address of DHCP server.')
hwDHCPRIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPRIPRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRIPRowStatus.setDescription('This object is used to configuration new rows in this table, modify existing rows, and to delete existing rows.Only three actions are used: active(1), createAndGo(4), destroy(6).')
hwDHCPRSeletAllocateModeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 2), )
if mibBuilder.loadTexts: hwDHCPRSeletAllocateModeTable.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRSeletAllocateModeTable.setDescription('A table for selecting allocation mode of dhcp service.')
hwDHCPRSeletAllocateModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDHCPRSeletAllocateModeEntry.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRSeletAllocateModeEntry.setDescription('An entry for configuring the allocation mode of DHCP service.')
hwDHCPRSelectAllocateMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("global", 0), ("interface", 1), ("relay", 2), ("none", 3), ("globalAndRelay", 4), ("interfaceAndRelay", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPRSelectAllocateMode.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRSelectAllocateMode.setDescription('Allocation mode of DHCP service. global(0) - allocation address from global interface(1)- allocation address from interface relay(2) - allocation address from dhcp server, the request is relayed to server none(3) - no allocation address mode globalAndRelay(4) - allocation address from global and relay interfaceAndRelay(5)- allocation address from interface and relay. ')
hwDHCPRelayCycleStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPRelayCycleStatus.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayCycleStatus.setDescription('Status of DHCP relay cycle mode, when the value is 0, cycle with the serveral DHCP servers addresses, when the value is 1, use one same DHCP server.')
hwDHCPRRxBadPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRRxBadPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRRxBadPktNum.setDescription('The total number of the bad packets received by DHCP relay.')
hwDHCPRRxServerPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRRxServerPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRRxServerPktNum.setDescription('The total number of the packets received from DHCP servers by DHCP relay module.')
hwDHCPRTxServerPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRTxServerPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRTxServerPktNum.setDescription('The total number of the packets transmited to DHCP servers by DHCP relay module.')
hwDHCPRRxClientPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRRxClientPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRRxClientPktNum.setDescription('The total number of the packets received form DHCP clients by DHCP relay.')
hwDHCPRTxClientPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRTxClientPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRTxClientPktNum.setDescription('The total number of the packets transmited to DHCP clients by DHCP relay.')
hwDHCPRTxClientUniPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRTxClientUniPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRTxClientUniPktNum.setDescription('The total number of the unicast packets transmited to DHCP clients by DHCP relay.')
hwDHCPRTxClientBroPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRTxClientBroPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRTxClientBroPktNum.setDescription('The total number of the brodcast packets transmited to DHCP clients by DHCP relay.')
hwDHCPRelayDiscoverPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayDiscoverPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayDiscoverPktNum.setDescription('The total number of the DHCP Discover packets handled by DHCP relay.')
hwDHCPRelayRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayRequestPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayRequestPktNum.setDescription('The total number of the DHCP Request packets handled by DHCP relay.')
hwDHCPRelayDeclinePktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayDeclinePktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayDeclinePktNum.setDescription('The total number of the DHCP Decline packets handled by DHCP relay.')
hwDHCPRelayReleasePktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayReleasePktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayReleasePktNum.setDescription('The total number of the DHCP Release packets handled by DHCP relay.')
hwDHCPRelayInformPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayInformPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayInformPktNum.setDescription('The total number of the DHCP Inform packets handled by DHCP relay.')
hwDHCPRelayOfferPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayOfferPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayOfferPktNum.setDescription('The total number of the DHCP Offer packets handled by DHCP server.')
hwDHCPRelayAckPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayAckPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayAckPktNum.setDescription('The total number of the DHCP Ack packets handled by DHCP relay.')
hwDHCPRelayNakPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayNakPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayNakPktNum.setDescription('The total number of the DHCP Nak packets handled by DHCP relay.')
hwDHCPRelayStatisticsReset = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPRelayStatisticsReset.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayStatisticsReset.setDescription('Reset the above statictics information of handled packets by DHCP relay. The value 1 means clear the statictics information. ')
hwDHCPArpProcessStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 20), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPArpProcessStatus.setStatus('current')
if mibBuilder.loadTexts: hwDHCPArpProcessStatus.setDescription('ARP process DHCP status. The value 1 means enable ARP process DHCP status. ')
hwDHCPRServerDetectStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 21), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPRServerDetectStatus.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRServerDetectStatus.setDescription('This object indicates whether detection against the pseudo DHCP server is enabled. The default value is disabled(2).')
hwDHCPRDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 22), )
if mibBuilder.loadTexts: hwDHCPRDSCPTable.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRDSCPTable.setDescription("A table for configuring dhcp reply packet's Dscp value.")
hwDHCPRDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDHCPRDSCPEntry.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRDSCPEntry.setDescription("An entry for configuring dhcp reply packet's Dscp value.")
hwDhcpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDhcpDscp.setStatus('current')
if mibBuilder.loadTexts: hwDhcpDscp.setDescription("Dhcp reply packet's dscp value. <0-63> - Valid dscp value <255> - Set dscp value to default. ")
hwDhcpRenewReplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 23), )
if mibBuilder.loadTexts: hwDhcpRenewReplyTable.setStatus('current')
if mibBuilder.loadTexts: hwDhcpRenewReplyTable.setDescription('A table for configuring dhcp renew-reply packet local deal.')
hwDhcpRenewReplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-DHCPR-MIB", "hwDhcpRenewReplyEnable"))
if mibBuilder.loadTexts: hwDhcpRenewReplyEntry.setStatus('current')
if mibBuilder.loadTexts: hwDhcpRenewReplyEntry.setDescription('An entry for configuring dhcp renw-reply packet local deal.')
hwDhcpRenewReplyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDhcpRenewReplyEnable.setStatus('current')
if mibBuilder.loadTexts: hwDhcpRenewReplyEnable.setDescription('Whether to enable dhcp renew-reply packet local-deal on this interface')
hwDhcpRenewReplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 23, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDhcpRenewReplyRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwDhcpRenewReplyRowStatus.setDescription('The dhcp renew-reply object is used to configuration new rows in this table, modify existing rows, and to delete existing rows.Only three actions are used: active(1), createAndGo(4), destroy(6).')
hwDHCP6RDUID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 24), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(1, 1), ValueSizeConstraint(8, 28), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCP6RDUID.setStatus('current')
if mibBuilder.loadTexts: hwDHCP6RDUID.setDescription('Config Dhcpv6 Duid.')
hwDHCPRelayReleaseLocalPktNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPRelayReleaseLocalPktNum.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayReleaseLocalPktNum.setDescription('The total number of the DHCP local release packets handled by DHCP relay.')
hwDHCPRelayMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 2))
hwDHCPRelayMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 2, 1))
hwDHCPRelayMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 2, 1, 1)).setObjects(("HUAWEI-DHCPR-MIB", "hwDHCPRelayMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDHCPRelayMIBCompliance = hwDHCPRelayMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayMIBCompliance.setDescription('The compliance statement for systems supporting this module.')
hwDHCPRelayMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 2, 2))
hwDHCPRelayMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 7, 1, 2, 2, 1)).setObjects(("HUAWEI-DHCPR-MIB", "hwDHCPRIPAddr"), ("HUAWEI-DHCPR-MIB", "hwDHCPRIPRowStatus"), ("HUAWEI-DHCPR-MIB", "hwDHCPRSelectAllocateMode"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayCycleStatus"), ("HUAWEI-DHCPR-MIB", "hwDHCPRRxBadPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRRxServerPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRTxServerPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRRxClientPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRTxClientPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRTxClientUniPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRTxClientBroPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayDiscoverPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayRequestPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayDeclinePktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayReleasePktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayInformPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayOfferPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayAckPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayNakPktNum"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayStatisticsReset"), ("HUAWEI-DHCPR-MIB", "hwDHCPArpProcessStatus"), ("HUAWEI-DHCPR-MIB", "hwDHCPRServerDetectStatus"), ("HUAWEI-DHCPR-MIB", "hwDhcpDscp"), ("HUAWEI-DHCPR-MIB", "hwDhcpRenewReplyEnable"), ("HUAWEI-DHCPR-MIB", "hwDhcpRenewReplyRowStatus"), ("HUAWEI-DHCPR-MIB", "hwDHCP6RDUID"), ("HUAWEI-DHCPR-MIB", "hwDHCPRelayReleaseLocalPktNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDHCPRelayMIBGroup = hwDHCPRelayMIBGroup.setStatus('current')
if mibBuilder.loadTexts: hwDHCPRelayMIBGroup.setDescription('The basic collection of objects providing management of DHCP realy.')
mibBuilder.exportSymbols("HUAWEI-DHCPR-MIB", hwDHCPRIPAddr=hwDHCPRIPAddr, hwDHCPRelayCycleStatus=hwDHCPRelayCycleStatus, hwDHCPRelayMIBCompliances=hwDHCPRelayMIBCompliances, hwDHCPRTxClientUniPktNum=hwDHCPRTxClientUniPktNum, hwDHCPRelayAckPktNum=hwDHCPRelayAckPktNum, hwDHCPRelayMibObject=hwDHCPRelayMibObject, hwDHCPRIPTable=hwDHCPRIPTable, hwDHCPRelayOfferPktNum=hwDHCPRelayOfferPktNum, hwDHCPRRxBadPktNum=hwDHCPRRxBadPktNum, PYSNMP_MODULE_ID=hwDHCPRelayMib, hwDHCPRDSCPTable=hwDHCPRDSCPTable, hwDHCPRIPRowStatus=hwDHCPRIPRowStatus, hwDHCPRIPEntry=hwDHCPRIPEntry, hwDHCPRelayMIBGroups=hwDHCPRelayMIBGroups, hwDHCPRTxClientBroPktNum=hwDHCPRTxClientBroPktNum, hwDhcpRenewReplyEntry=hwDhcpRenewReplyEntry, hwDHCPRelayReleaseLocalPktNum=hwDHCPRelayReleaseLocalPktNum, hwDHCPRRxServerPktNum=hwDHCPRRxServerPktNum, hwDHCPRelayNakPktNum=hwDHCPRelayNakPktNum, hwDhcpRenewReplyEnable=hwDhcpRenewReplyEnable, hwDHCPRelayMIBGroup=hwDHCPRelayMIBGroup, hwDHCPRelayDeclinePktNum=hwDHCPRelayDeclinePktNum, hwDHCPRelayMIBConformance=hwDHCPRelayMIBConformance, hwDHCPRTxClientPktNum=hwDHCPRTxClientPktNum, hwDHCPRelayStatisticsReset=hwDHCPRelayStatisticsReset, hwDHCPRelayMib=hwDHCPRelayMib, hwDHCP6RDUID=hwDHCP6RDUID, hwDHCPRSeletAllocateModeEntry=hwDHCPRSeletAllocateModeEntry, hwDhcpRenewReplyRowStatus=hwDhcpRenewReplyRowStatus, hwDHCPRelayInformPktNum=hwDHCPRelayInformPktNum, hwDHCPRDSCPEntry=hwDHCPRDSCPEntry, hwDHCPRelayDiscoverPktNum=hwDHCPRelayDiscoverPktNum, hwDHCPRSelectAllocateMode=hwDHCPRSelectAllocateMode, hwDHCPRServerDetectStatus=hwDHCPRServerDetectStatus, hwDhcpDscp=hwDhcpDscp, hwDHCPRTxServerPktNum=hwDHCPRTxServerPktNum, hwDHCPRelayRequestPktNum=hwDHCPRelayRequestPktNum, hwDHCPRRxClientPktNum=hwDHCPRRxClientPktNum, hwDhcpRenewReplyTable=hwDhcpRenewReplyTable, hwDHCPRelayMIBCompliance=hwDHCPRelayMIBCompliance, hwDHCPArpProcessStatus=hwDHCPArpProcessStatus, hwDHCPRelayReleasePktNum=hwDHCPRelayReleasePktNum, hwDHCPRSeletAllocateModeTable=hwDHCPRSeletAllocateModeTable)
