#
# PySNMP MIB module H221-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H221-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:20:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, experimental, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, iso, ObjectIdentity, Unsigned32, IpAddress, ModuleIdentity, Counter32, Counter64, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "experimental", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "iso", "ObjectIdentity", "Unsigned32", "IpAddress", "ModuleIdentity", "Counter32", "Counter64", "Integer32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h221MIB = ModuleIdentity((1, 3, 6, 1, 3, 221, 2))
h221MIB.setRevisions(('1998-05-25 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h221MIB.setRevisionsDescriptions((' The initial version of the H221 mib',))
if mibBuilder.loadTexts: h221MIB.setLastUpdated('9805251400Z')
if mibBuilder.loadTexts: h221MIB.setOrganization('VTEL Corp. ')
if mibBuilder.loadTexts: h221MIB.setContactInfo('Joon Maeng VTEL Corp. Postal: 108 Wild Basin Rd. Austin, TX 78746 USA TEL: (512)437-4567 Email: Joon_Maeng@vtel.com')
if mibBuilder.loadTexts: h221MIB.setDescription('This MIB module supports the functions of the IUT H.221 Protocol')
h221Stats = MibIdentifier((1, 3, 6, 1, 3, 221, 2, 1))
h221Events = MibIdentifier((1, 3, 6, 1, 3, 221, 2, 2))
h221InFrames = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221InFrames.setStatus('current')
if mibBuilder.loadTexts: h221InFrames.setDescription('The number of H.221 frames received')
h221OutFrames = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221OutFrames.setStatus('current')
if mibBuilder.loadTexts: h221OutFrames.setDescription('The number of H.221 frames sent')
h221InFrameErrs = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221InFrameErrs.setStatus('current')
if mibBuilder.loadTexts: h221InFrameErrs.setDescription('The number of error frames received')
h221FrameAlignmentErrs = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221FrameAlignmentErrs.setStatus('current')
if mibBuilder.loadTexts: h221FrameAlignmentErrs.setDescription('The number of frame alignment errors received')
h221MultiFrameAlignmentErrs = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221MultiFrameAlignmentErrs.setStatus('current')
if mibBuilder.loadTexts: h221MultiFrameAlignmentErrs.setDescription('The number of multiple frame alignment errors received')
h221ErrorPerformance = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221ErrorPerformance.setStatus('current')
if mibBuilder.loadTexts: h221ErrorPerformance.setDescription('The quality of the 64 Kbps connection can be monitored by counting the number of CRC blocks in error (E-bit = 1) within a period of one second (50 blocks). Percentage of CRC blocks in error Error rate 70% CRC blocks in error 10E-4 12% CRC blocks in error 10E-5 1.2% CRC blocks in error 10E-6 0.12% CRC blocks in error 10E-7 0.012% CRC blocks in error 10E-8')
h221BASErrs = MibScalar((1, 3, 6, 1, 3, 221, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h221BASErrs.setStatus('current')
if mibBuilder.loadTexts: h221BASErrs.setDescription('The number of H.221 BAS errors received')
h221TooManyErrors = NotificationType((1, 3, 6, 1, 3, 221, 2, 2, 1)).setObjects(("H221-MIB", "h221ErrorPerformance"))
if mibBuilder.loadTexts: h221TooManyErrors.setStatus('current')
if mibBuilder.loadTexts: h221TooManyErrors.setDescription('This message will be sent when there are excessive line errors.')
h221StatsMIBConfs = MibIdentifier((1, 3, 6, 1, 3, 221, 2, 3))
h221StatsMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 221, 2, 3, 1))
h221StatsMIBCompl = MibIdentifier((1, 3, 6, 1, 3, 221, 2, 3, 2))
h221StatsGroup = ObjectGroup((1, 3, 6, 1, 3, 221, 2, 3, 1, 1)).setObjects(("H221-MIB", "h221InFrames"), ("H221-MIB", "h221OutFrames"), ("H221-MIB", "h221InFrameErrs"), ("H221-MIB", "h221FrameAlignmentErrs"), ("H221-MIB", "h221MultiFrameAlignmentErrs"), ("H221-MIB", "h221ErrorPerformance"), ("H221-MIB", "h221BASErrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h221StatsGroup = h221StatsGroup.setStatus('current')
if mibBuilder.loadTexts: h221StatsGroup.setDescription('A collection of objects providing the ability to invoke terminal functions')
h221EventsGroup = NotificationGroup((1, 3, 6, 1, 3, 221, 2, 3, 1, 2)).setObjects(("H221-MIB", "h221TooManyErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h221EventsGroup = h221EventsGroup.setStatus('current')
if mibBuilder.loadTexts: h221EventsGroup.setDescription('An object providing the ability to invoke a notification function')
h221StatsCompliance = ModuleCompliance((1, 3, 6, 1, 3, 221, 2, 3, 2, 1)).setObjects(("H221-MIB", "h221StatsGroup"), ("H221-MIB", "h221EventsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h221StatsCompliance = h221StatsCompliance.setStatus('current')
if mibBuilder.loadTexts: h221StatsCompliance.setDescription('The set of objects required for compliance')
mibBuilder.exportSymbols("H221-MIB", PYSNMP_MODULE_ID=h221MIB, h221InFrameErrs=h221InFrameErrs, h221Events=h221Events, h221OutFrames=h221OutFrames, h221MultiFrameAlignmentErrs=h221MultiFrameAlignmentErrs, h221StatsGroup=h221StatsGroup, h221InFrames=h221InFrames, h221StatsMIBCompl=h221StatsMIBCompl, h221StatsMIBConfs=h221StatsMIBConfs, h221StatsMIBGroups=h221StatsMIBGroups, h221FrameAlignmentErrs=h221FrameAlignmentErrs, h221BASErrs=h221BASErrs, h221EventsGroup=h221EventsGroup, h221StatsCompliance=h221StatsCompliance, h221ErrorPerformance=h221ErrorPerformance, h221Stats=h221Stats, h221MIB=h221MIB, h221TooManyErrors=h221TooManyErrors)
