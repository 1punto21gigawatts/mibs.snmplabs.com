#
# PySNMP MIB module CISCO-SESS-BORDER-CTRLR-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SESS-BORDER-CTRLR-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
csbCallStatsServiceIndex, csbCallStatsInstanceIndex, CiscoSbcPeriodicStatsInterval = mibBuilder.importSymbols("CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex", "csbCallStatsInstanceIndex", "CiscoSbcPeriodicStatsInterval")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, NotificationType, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, ObjectIdentity, Gauge32, TimeTicks, MibIdentifier, ModuleIdentity, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "ObjectIdentity", "Gauge32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoSbcStatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 757))
ciscoSbcStatsMIB.setRevisions(('2010-09-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSbcStatsMIB.setRevisionsDescriptions(('Latest version of this MIB module.',))
if mibBuilder.loadTexts: ciscoSbcStatsMIB.setLastUpdated('201009150000Z')
if mibBuilder.loadTexts: ciscoSbcStatsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSbcStatsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: sbc-dev@cisco.com')
if mibBuilder.loadTexts: ciscoSbcStatsMIB.setDescription('The main purpose of this MIB is to define the statistics information for Session Border Controller application. This MIB categorizes the statistics information into following types: 1. RADIUS Messages Statistics - Represents statistics of various RADIUS messages for RADIUS servers with which the client (SBC) shares a secret. 2. Rf Billing Statistics- Represents Rf billing statistics information which monitors the messages sent per-realm over IMS Rx interface by Rf billing manager(SBC). 3. SIP Statistics - Represents SIP requests and various SIP responses on a SIP adjacency in a given interval. The Session Border Controller (SBC) enables direct IP-to-IP interconnect between multiple administrative domains for session-based services providing protocol inter-working, security, and admission control and management. The SBC is a voice over IP (VoIP) device that sits on the border of a network and controls call admission to that network. The primary purpose of an SBC is to protect the interior of the network from excessive call load and malicious traffic. Additional functions provided by the SBC include media bridging and billing services. Periodic Statistics - Represents the SBC call statistics information for a particular time interval. E.g. you can specify that you want to retrieve statistics for a summary period of the current or previous 5 minutes, 15 minutes, hour, or day. The statistics for 5 minutes are divided into five minute intervals past the hour - that is, at 0 minutes, 5 minutes, 10 minutes... past the hour. When you retrieve statistics for the current five minute period, you will be given statistics from the start of the interval to the current time. When you retrieve statistics for the previous five minutes, you will be given the statistics for the entirety of the previous interval. For example, if it is currently 12:43 - the current 5 minute statistics cover 12:40 - 12:43 - the previous 5 minute statistics cover 12:35 - 12:40 The other intervals work similarly. 15 minute statistics are divided into 15 minute intervals past the hour (0 minutes, 15 minutes, 30 minutes, 45 minutes). Hourly statistics are divided into intervals on the hour. Daily statistics are divided into intervals at 0:00 each day. Therefore, if you retrieve the statistics at 12:43 for each of these intervals, the periods covered are as follows. - current 15 minutes: 12:30 - 12:43 - previous 15 minutes: 12:15 - 12:30 - current hour: 12:00 - 12:43 - last hour: 11:00 - 12:00 - current day: 00:00 - 12:43 - last day: 00:00 (the day before) - 00:00. GLOSSARY SBC: Session Border Controller CSB: CISCO Session Border Controller Adjacency: An adjacency contains the system information to be transmitted to next HOP. ACR: Accounting Request ACA: Accounting Accept AVP: Attribute-Value Pairs REFERENCES 1. CISCO Session Border Controller Documents and FAQ http://zed.cisco.com/confluence/display/SBC/SBC')
class CiscoSbcSIPMethod(TextualConvention, Integer32):
    description = 'This textual convention represents the various SIP Methods.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("unknown", 1), ("ack", 2), ("bye", 3), ("cancel", 4), ("info", 5), ("invite", 6), ("message", 7), ("notify", 8), ("options", 9), ("prack", 10), ("refer", 11), ("register", 12), ("subscribe", 13), ("update", 14))

class CiscoSbcRadiusClientType(TextualConvention, Integer32):
    description = 'This textual convention represents the type of RADIUS client.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("authentication", 1), ("accounting", 2))

ciscoSbcStatsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 757, 0))
ciscoSbcStatsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 757, 1))
ciscoSbcStatsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 757, 2))
csbRadiusStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1), )
if mibBuilder.loadTexts: csbRadiusStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsTable.setDescription('This table has the reporting statistics of various RADIUS messages for RADIUS servers with which the client (SBC) shares a secret. Each entry in this table is identified by a value of csbRadiusStatsEntIndex. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbRadiusStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsEntIndex"))
if mibBuilder.loadTexts: csbRadiusStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsEntry.setDescription('A conceptual row in the csbRadiusStatsTable. There is an entry in this table for each RADIUS server, as identified by a value of csbRadiusStatsEntIndex. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbRadiusStatsEntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csbRadiusStatsEntIndex.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsEntIndex.setDescription('This object indicates the index of the RADIUS client entity that this server is configured on. This index is assigned arbitrarily by the engine and is not saved over reboots.')
csbRadiusStatsClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsClientName.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsClientName.setDescription('This object indicates the client name of the RADIUS client to which that these statistics apply.')
csbRadiusStatsClientType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 3), CiscoSbcRadiusClientType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsClientType.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsClientType.setDescription('This object indicates the type(authentication or accounting) of the RADIUS clients configured on SBC.')
csbRadiusStatsSrvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsSrvrName.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsSrvrName.setDescription('This object indicates the server name of the RADIUS server to which that these statistics apply.')
csbRadiusStatsAcsReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsAcsReqs.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsAcsReqs.setDescription('This object indicates the number of RADIUS Access-Request packets sent to this server. This does not include retransmissions.')
csbRadiusStatsAcsRtrns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsAcsRtrns.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsAcsRtrns.setDescription('This object indicates the number of RADIUS Access-Request packets retransmitted to this RADIUS server.')
csbRadiusStatsAcsAccpts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsAcsAccpts.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsAcsAccpts.setDescription('This object indicates the number of RADIUS Access-Accept packets (valid or invalid) received from this server.')
csbRadiusStatsAcsRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsAcsRejects.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsAcsRejects.setDescription('This object indicates the number of RADIUS Access-Reject packets (valid or invalid) received from this server.')
csbRadiusStatsAcsChalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 9), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsAcsChalls.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsAcsChalls.setDescription('This object indicates the number of RADIUS Access-Challenge packets (valid or invalid) received from this server.')
csbRadiusStatsActReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsActReqs.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsActReqs.setDescription('This object indicates the number of RADIUS Accounting-Request packets sent to this server. This does not include retransmissions.')
csbRadiusStatsActRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsActRetrans.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsActRetrans.setDescription('This object indicates the number of RADIUS Accounting-Request packets retransmitted to this RADIUS server.')
csbRadiusStatsActRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsActRsps.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsActRsps.setDescription('This object indicates the number of RADIUS Accounting-Response packets (valid or invalid) received from this server.')
csbRadiusStatsMalformedRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsMalformedRsps.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsMalformedRsps.setDescription('This object indicates the number of malformed RADIUS response packets received from this server. Malformed packets include packets with an invalid length. Bad authenticators, Signature attributes and unknown types are not included as malformed access responses.')
csbRadiusStatsBadAuths = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsBadAuths.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsBadAuths.setDescription('This object indicates the number of RADIUS response packets containing invalid authenticators or Signature attributes received from this server.')
csbRadiusStatsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 15), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsPending.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsPending.setDescription('This object indicates the number of RADIUS request packets destined for this server that have not yet timed out or received a response. This variable is incremented when a request is sent and decremented on receipt of the response or on a timeout or retransmission.')
csbRadiusStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsTimeouts.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsTimeouts.setDescription('This object indicates the number of RADIUS request timeouts to this server. After a timeout the client may retry to a different server or give up. A retry to a different server is counted as a request as well as a timeout.')
csbRadiusStatsUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsUnknownType.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsUnknownType.setDescription('This object indicates the number of RADIUS packets of unknown type which were received from this server.')
csbRadiusStatsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 1, 1, 18), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRadiusStatsDropped.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsDropped.setDescription('This object indicates the number of RADIUS packets which were received from this server and dropped for some other reason.')
csbRfBillRealmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2), )
if mibBuilder.loadTexts: csbRfBillRealmStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsTable.setDescription('This table describes the Rf billing statistics information which monitors the messages sent per-realm by Rf billing manager(SBC). SBC sends Rf billing data using Diameter as a transport protocol. Rf billing uses only ACR and ACA Diameter messages for the transport of billing data. The Accounting-Record-Type AVP on the ACR message labels the type of the accounting request. The following types are used by Rf billing. 1. For session-based charging, the types Start (session begins), Interim (session is modified) and Stop (session ends) are used. 2. For event-based charging, the type Event is used when a chargeable event occurs outside the scope of a session. Each row of this table is identified by a value of csbRfBillRealmStatsIndex and csbRfBillRealmStatsRealmName. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbRfBillRealmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsRealmName"))
if mibBuilder.loadTexts: csbRfBillRealmStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsEntry.setDescription('A conceptual row in the csbRfBillRealmStatsTable. There is an entry in this table for each realm, as identified by a value of csbRfBillRealmStatsIndex and csbRfBillRealmStatsRealmName. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbRfBillRealmStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: csbRfBillRealmStatsIndex.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsIndex.setDescription('This object indicates the billing method instance index. The range of valid values for this field is 0 - 31.')
csbRfBillRealmStatsRealmName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsRealmName.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsRealmName.setDescription('This object indicates the realm for which these statistics are collected. The length of this object is zero when value is not assigned to it.')
csbRfBillRealmStatsTotalStartAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 3), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalStartAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalStartAcrs.setDescription('This object indicates the combined sum of successful and failed Start ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsTotalInterimAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 4), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalInterimAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalInterimAcrs.setDescription('This object indicates the combined sum of successful and failed Interim ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsTotalStopAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 5), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalStopAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalStopAcrs.setDescription('This object indicates the combined sum of successful and failed Stop ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsTotalEventAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 6), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalEventAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsTotalEventAcrs.setDescription('This object indicates the combined sum of successful and failed Event ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsSuccStartAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 7), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccStartAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccStartAcrs.setDescription('This object indicates the total number of successful Start ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsSuccInterimAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 8), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccInterimAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccInterimAcrs.setDescription('This object indicates the total number of successful Interim ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsSuccStopAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 9), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccStopAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccStopAcrs.setDescription('This object indicates the total number of successful Stop ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsSuccEventAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 10), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccEventAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsSuccEventAcrs.setDescription('This object indicates the total number of successful Event ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsFailStartAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 11), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsFailStartAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsFailStartAcrs.setDescription('This object indicates the total number of failed Start ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsFailInterimAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 12), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsFailInterimAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsFailInterimAcrs.setDescription('This object indicates the total number of failed Interim ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsFailStopAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 13), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsFailStopAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsFailStopAcrs.setDescription('This object indicates the total number of failed Stop ACRs since start of day or the last time the statistics were reset.')
csbRfBillRealmStatsFailEventAcrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 2, 1, 14), Unsigned32()).setUnits('ACRs').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbRfBillRealmStatsFailEventAcrs.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsFailEventAcrs.setDescription('This object indicates the total number of failed Event ACRs since start of day or the last time the statistics were reset.')
csbSIPMthdCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3), )
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsTable.setDescription('This table reports count of SIP request and various SIP responses for each SIP method on a SIP adjacency in a given interval. Each entry in this table represents a SIP method, its incoming and outgoing count, individual incoming and outgoing count of various SIP responses for this method on a SIP adjacency in a given interval. To understand the meaning of interval please refer <Periodic Statistics> section in description of ciscoSbcStatsMIB. This table is indexed on csbSIPMthdCurrentStatsAdjName, csbSIPMthdCurrentStatsMethod and csbSIPMthdCurrentStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsAdjName"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsMethod"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsInterval"))
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsEntry.setDescription('A conceptual row in the csbSIPMthdCurrentStatsTable. Each row describes a SIP method and various responses count for this method on a given SIP adjacency and given interval. This table is indexed on csbSIPMthdCurrentStatsAdjName, csbSIPMthdCurrentStatsMethod and csbSIPMthdCurrentStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdCurrentStatsAdjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsAdjName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsAdjName.setDescription('This object indicates the name of the SIP adjacency for which stats related with SIP request and all kind of corresponding SIP responses are reported. The object acts as an index of the table.')
csbSIPMthdCurrentStatsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 2), CiscoSbcSIPMethod())
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsMethod.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsMethod.setDescription('This object indicates the SIP method Request. The object acts as an index of the table.')
csbSIPMthdCurrentStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 3), CiscoSbcPeriodicStatsInterval())
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsInterval.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsInterval.setDescription('This object indicates the interval for which the periodic statistics information is to be displayed. The interval values can be 5 minutes, 15 minutes, 1 hour , 1 Day. This object acts as an index for the table.')
csbSIPMthdCurrentStatsMethodName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsMethodName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsMethodName.setDescription('This object indicates the text representation of the SIP method request. E.g. INVITE, ACK, BYE etc.')
csbSIPMthdCurrentStatsReqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 5), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsReqIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsReqIn.setDescription('This object indicates the total incoming SIP message requests of this type on this SIP adjacency.')
csbSIPMthdCurrentStatsReqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 6), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsReqOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsReqOut.setDescription('This object indicates the total outgoing SIP message requests of this type on this SIP adjacency.')
csbSIPMthdCurrentStatsResp1xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 7), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp1xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp1xxIn.setDescription('This object indicates the total 1xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp1xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 8), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp1xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp1xxOut.setDescription('This object indicates the total 1xx responses for this method sent on this SIP adjacency.')
csbSIPMthdCurrentStatsResp2xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 9), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp2xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp2xxIn.setDescription('This object indicates the total 2xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp2xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 10), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp2xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp2xxOut.setDescription('This object indicates the total 2xx responses for this method sent on this SIP adjacency.')
csbSIPMthdCurrentStatsResp3xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 11), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp3xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp3xxIn.setDescription('This object indicates the total 3xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp3xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 12), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp3xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp3xxOut.setDescription('This object indicates the total 3xx responses for this method sent on this SIP adjacency.')
csbSIPMthdCurrentStatsResp4xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 13), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp4xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp4xxIn.setDescription('This object indicates the total 4xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp4xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 14), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp4xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp4xxOut.setDescription('This object indicates the total 4xx responses for this method sent on this SIP adjacency.')
csbSIPMthdCurrentStatsResp5xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 15), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp5xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp5xxIn.setDescription('This object indicates the total 5xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp5xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 16), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp5xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp5xxOut.setDescription('This object indicates the total 5xx responses for this method sent on this SIP adjacency.')
csbSIPMthdCurrentStatsResp6xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 17), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp6xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp6xxIn.setDescription('This object indicates the total 6xx responses for this method received on this SIP adjacency.')
csbSIPMthdCurrentStatsResp6xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 3, 1, 18), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp6xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsResp6xxOut.setDescription('This object indicates the total 6xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4), )
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsTable.setDescription('This table provide historical count of SIP request and various SIP responses for each SIP method on a SIP adjacency in various interval length defined by the csbSIPMthdHistoryStatsInterval object. Each entry in this table represents a SIP method, its incoming and outgoing count, individual incoming and outgoing count of various SIP responses for this method on a SIP adjacency in a given interval. The possible values of interval will be previous 5 minutes, previous 15 minutes, previous 1 hour and previous day. To understand the meaning of interval please refer <Periodic Statistics> description of ciscoSbcStatsMIB. This table is indexed on csbSIPMthdHistoryStatsAdjName, csbSIPMthdHistoryStatsMethod and csbSIPMthdHistoryStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdHistoryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsAdjName"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsMethod"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsInterval"))
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsEntry.setDescription('A conceptual row in the csbSIPMthdHistoryStatsTable. The entries in this table are updated as interval completes in the csbSIPMthdCurrentStatsTable table and the data is moved from that table to this one. This table is indexed on csbSIPMthdHistoryStatsAdjName, csbSIPMthdHistoryStatsMethod and csbSIPMthdHistoryStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdHistoryStatsAdjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsAdjName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsAdjName.setDescription('This object indicates the name of the SIP adjacency for which stats related with SIP request and all kind of corresponding SIP responses are reported. The object acts as an index of the table.')
csbSIPMthdHistoryStatsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 2), CiscoSbcSIPMethod())
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsMethod.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsMethod.setDescription('This object indicates the SIP method Request. The object acts as an index of the table.')
csbSIPMthdHistoryStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 3), CiscoSbcPeriodicStatsInterval())
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsInterval.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsInterval.setDescription('This object indicates the interval for which the historical statistics information is to be displayed. The interval values can be previous 5 minutes, previous 15 minutes, previous 1 hour and previous 1 Day. This object acts as an index for the table.')
csbSIPMthdHistoryStatsMethodName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsMethodName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsMethodName.setDescription('This object indicates the text representation of the SIP method request. E.g. INVITE, ACK, BYE etc.')
csbSIPMthdHistoryStatsReqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 5), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsReqIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsReqIn.setDescription('This object indicates the total incoming SIP message requests of this type on this SIP adjacency.')
csbSIPMthdHistoryStatsReqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 6), Gauge32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsReqOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsReqOut.setDescription('This object indicates the total outgoing SIP message requests of this type on this SIP adjacency.')
csbSIPMthdHistoryStatsResp1xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 7), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp1xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp1xxIn.setDescription('This object indicates the total 1xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp1xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 8), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp1xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp1xxOut.setDescription('This object indicates the total 1xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsResp2xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 9), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp2xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp2xxIn.setDescription('This object indicates the total 2xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp2xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 10), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp2xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp2xxOut.setDescription('This object indicates the total 2xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsResp3xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 11), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp3xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp3xxIn.setDescription('This object indicates the total 3xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp3xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 12), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp3xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp3xxOut.setDescription('This object indicates the total 3xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsResp4xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 13), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp4xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp4xxIn.setDescription('This object indicates the total 4xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp4xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 14), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp4xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp4xxOut.setDescription('This object indicates the total 4xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsResp5xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 15), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp5xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp5xxIn.setDescription('This object indicates the total 5xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp5xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 16), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp5xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp5xxOut.setDescription('This object indicates the total 5xx responses for this method sent on this SIP adjacency.')
csbSIPMthdHistoryStatsResp6xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 17), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp6xxIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp6xxIn.setDescription('This object indicates the total 6xx responses for this method received on this SIP adjacency.')
csbSIPMthdHistoryStatsResp6xxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 4, 1, 18), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp6xxOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsResp6xxOut.setDescription('This object indicates the total 6xx responses for this method sent on this SIP adjacency.')
csbSIPMthdRCCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5), )
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsTable.setDescription('This table reports SIP method request and response code statistics for each method and response code combination on given SIP adjacency in a given interval. To understand the meaning of interval please refer <Periodic Statistics> section in description of ciscoSbcStatsMIB. An exact lookup will return a row only if - 1) detailed response code statistics are turned on in SBC 2) response code messages sent or received is non zero for given SIP adjacency, method and interval. Also an inexact lookup will only return rows for messages with non-zero counts, to protect the user from large numbers of rows for response codes which have not been received or sent.')
csbSIPMthdRCCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsAdjName"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsMethod"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsRespCode"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsInterval"))
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsEntry.setDescription('A conceptual row in the csbSIPMthdRCCurrentStatsTable. Each entry in this table represents a method and response code combination. Each entry in this table is identified by a value of csbSIPMthdRCCurrentStatsAdjName, csbSIPMthdRCCurrentStatsMethod, csbSIPMthdRCCurrentStatsRespCode and csbSIPMthdRCCurrentStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdRCCurrentStatsAdjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsAdjName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsAdjName.setDescription('This identifies the name of the adjacency for which statistics are reported. This object acts as an index for the table.')
csbSIPMthdRCCurrentStatsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 2), CiscoSbcSIPMethod())
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsMethod.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsMethod.setDescription('This object indicates the SIP method request. This object acts as an index for the table.')
csbSIPMthdRCCurrentStatsRespCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespCode.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespCode.setDescription('This object indicates the response code for the SIP message request. The range of valid values for SIP response codes is 100 - 999. This object acts as an index for the table.')
csbSIPMthdRCCurrentStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 4), CiscoSbcPeriodicStatsInterval())
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsInterval.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsInterval.setDescription('This object identifies the interval for which the periodic statistics information is to be displayed. The interval values can be 5 min, 15 mins, 1 hour , 1 Day. This object acts as an index for the table.')
csbSIPMthdRCCurrentStatsMethodName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsMethodName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsMethodName.setDescription('This object indicates the text representation of the SIP method request. E.g. INVITE, ACK, BYE etc.')
csbSIPMthdRCCurrentStatsRespIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 6), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespIn.setDescription('This object indicates the total SIP messages with this response code this method received on this SIP adjacency.')
csbSIPMthdRCCurrentStatsRespOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 5, 1, 7), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsRespOut.setDescription('This object indicates the total SIP messages with this response code for this method sent on this SIP adjacency.')
csbSIPMthdRCHistoryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6), )
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsTable.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsTable.setDescription('This table reports historical data for SIP method request and response code statistics for each method and response code combination in a given past interval. The possible values of interval will be previous 5 minutes, previous 15 minutes, previous 1 hour and previous day. To understand the meaning of interval please refer <Periodic Statistics> section in description of ciscoSbcStatsMIB. An exact lookup will return a row only if - 1) detailed response code statistics are turned on in SBC 2) response code messages sent or received is non zero for given SIP adjacency, method and interval. Also an inexact lookup will only return rows for messages with non-zero counts, to protect the user from large numbers of rows for response codes which have not been received or sent.')
csbSIPMthdRCHistoryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1), ).setIndexNames((0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsInstanceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-CALL-STATS-MIB", "csbCallStatsServiceIndex"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsAdjName"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsMethod"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsRespCode"), (0, "CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsInterval"))
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsEntry.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsEntry.setDescription('A conceptual row in the csbSIPMthdRCHistoryStatsTable. The entries in this table are updated as interval completes in the csbSIPMthdRCCurrentStatsTable table and the data is moved from that table to this one. Each entry in this table is identified by a value of csbSIPMthdRCHistoryStatsAdjName, csbSIPMthdRCHistoryStatsMethod, csbSIPMthdRCHistoryStatsRespCode and csbSIPMthdRCHistoryStatsInterval. The other indices of this table are csbCallStatsInstanceIndex defined in csbCallStatsInstanceTable and csbCallStatsServiceIndex defined in csbCallStatsTable.')
csbSIPMthdRCHistoryStatsAdjName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsAdjName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsAdjName.setDescription('This identifies the name of the adjacency for which statistics are reported. This object acts as an index for the table.')
csbSIPMthdRCHistoryStatsMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 2), CiscoSbcSIPMethod())
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsMethod.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsMethod.setDescription('This object indicates the SIP method request. This object acts as an index for the table.')
csbSIPMthdRCHistoryStatsMethodName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsMethodName.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsMethodName.setDescription('This object indicates the text representation of the SIP method request. E.g. INVITE, ACK, BYE etc.')
csbSIPMthdRCHistoryStatsRespCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 4), Unsigned32())
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespCode.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespCode.setDescription('This object indicates the response code for the SIP message request. The range of valid values for SIP response codes is 100 - 999. This object acts as an index for the table.')
csbSIPMthdRCHistoryStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 5), CiscoSbcPeriodicStatsInterval())
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsInterval.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsInterval.setDescription('This object identifies the interval for which the periodic statistics information is to be displayed. The interval values can be previous 5 min, previous 15 mins, previous 1 hour , previous 1 Day. This object acts as an index for the table.')
csbSIPMthdRCHistoryStatsRespIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 6), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespIn.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespIn.setDescription('This object indicates the total SIP messages with this response code this method received on this SIP adjacency.')
csbSIPMthdRCHistoryStatsRespOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 757, 1, 6, 1, 7), Gauge32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespOut.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsRespOut.setDescription('This object indicates the total SIP messages with this response code for this method sent on this SIP adjacency.')
csbStatsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 1))
csbStatsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2))
csbStatsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 1, 1)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsGroup"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsGroup"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsGroup"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsGroup"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsGroup"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbStatsMIBCompliance = csbStatsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: csbStatsMIBCompliance.setDescription('This is a default module-compliance containing csbStatsMIBGroups.')
csbRadiusStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 1)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsClientName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsClientType"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsSrvrName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsAcsReqs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsAcsRtrns"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsAcsAccpts"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsAcsRejects"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsAcsChalls"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsActReqs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsActRetrans"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsActRsps"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsMalformedRsps"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsBadAuths"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsPending"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsTimeouts"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsUnknownType"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRadiusStatsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbRadiusStatsGroup = csbRadiusStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbRadiusStatsGroup.setDescription('A collection of objects providing RADIUS messages statistics for configured RADIUS servers on Cisco Session Border Controller (SBC).')
csbRfBillRealmStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 2)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsRealmName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsTotalStartAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsTotalInterimAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsTotalStopAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsTotalEventAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsSuccStartAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsSuccInterimAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsSuccStopAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsSuccEventAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsFailStartAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsFailInterimAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsFailStopAcrs"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbRfBillRealmStatsFailEventAcrs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbRfBillRealmStatsGroup = csbRfBillRealmStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbRfBillRealmStatsGroup.setDescription('A collection of objects providing Rf billing statistics information on Cisco Session Border Controller (SBC).')
csbSIPMthdCurrentStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 3)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsAdjName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsMethodName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsReqIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsReqOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp1xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp1xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp2xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp2xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp3xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp3xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp4xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp4xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp5xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp5xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp6xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdCurrentStatsResp6xxOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbSIPMthdCurrentStatsGroup = csbSIPMthdCurrentStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdCurrentStatsGroup.setDescription('A collection of objects providing statistics for a SIP method and various responses count for this method on a given SIP adjacency and given interval for Cisco Session Border Controller (SBC).')
csbSIPMthdHistoryStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 4)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsAdjName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsMethodName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsReqIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsReqOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp1xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp1xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp2xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp2xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp3xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp3xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp4xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp4xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp5xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp5xxOut"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp6xxIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdHistoryStatsResp6xxOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbSIPMthdHistoryStatsGroup = csbSIPMthdHistoryStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdHistoryStatsGroup.setDescription('A collection of objects providing historical statistics for a SIP method and various responses count for this method on a given SIP adjacency and given interval for Cisco Session Border Controller (SBC).')
csbSIPMthdRCCurrentStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 5)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsAdjName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsMethodName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsRespIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCCurrentStatsRespOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbSIPMthdRCCurrentStatsGroup = csbSIPMthdRCCurrentStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCCurrentStatsGroup.setDescription('A collection of objects providing SIP statistics for a method and response code combination for Cisco Session Border Controller (SBC).')
csbSIPMthdRCHistoryStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 757, 2, 2, 6)).setObjects(("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsAdjName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsMethodName"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsRespIn"), ("CISCO-SESS-BORDER-CTRLR-STATS-MIB", "csbSIPMthdRCHistoryStatsRespOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csbSIPMthdRCHistoryStatsGroup = csbSIPMthdRCHistoryStatsGroup.setStatus('current')
if mibBuilder.loadTexts: csbSIPMthdRCHistoryStatsGroup.setDescription('A collection of objects providing SIP historical statistics for a method and response code combination for Cisco Session Border Controller (SBC).')
mibBuilder.exportSymbols("CISCO-SESS-BORDER-CTRLR-STATS-MIB", csbSIPMthdHistoryStatsResp2xxOut=csbSIPMthdHistoryStatsResp2xxOut, csbSIPMthdRCHistoryStatsGroup=csbSIPMthdRCHistoryStatsGroup, csbRfBillRealmStatsFailStopAcrs=csbRfBillRealmStatsFailStopAcrs, csbSIPMthdCurrentStatsMethod=csbSIPMthdCurrentStatsMethod, csbSIPMthdHistoryStatsResp4xxOut=csbSIPMthdHistoryStatsResp4xxOut, csbRadiusStatsEntry=csbRadiusStatsEntry, csbRadiusStatsAcsReqs=csbRadiusStatsAcsReqs, ciscoSbcStatsMIBObjects=ciscoSbcStatsMIBObjects, csbSIPMthdHistoryStatsReqOut=csbSIPMthdHistoryStatsReqOut, csbStatsMIBCompliances=csbStatsMIBCompliances, csbRadiusStatsActReqs=csbRadiusStatsActReqs, ciscoSbcStatsMIB=ciscoSbcStatsMIB, csbSIPMthdCurrentStatsResp4xxOut=csbSIPMthdCurrentStatsResp4xxOut, csbRadiusStatsMalformedRsps=csbRadiusStatsMalformedRsps, csbSIPMthdCurrentStatsResp6xxIn=csbSIPMthdCurrentStatsResp6xxIn, csbRadiusStatsPending=csbRadiusStatsPending, csbSIPMthdHistoryStatsInterval=csbSIPMthdHistoryStatsInterval, csbSIPMthdHistoryStatsEntry=csbSIPMthdHistoryStatsEntry, csbSIPMthdCurrentStatsResp1xxIn=csbSIPMthdCurrentStatsResp1xxIn, csbSIPMthdHistoryStatsResp6xxIn=csbSIPMthdHistoryStatsResp6xxIn, csbRadiusStatsDropped=csbRadiusStatsDropped, csbSIPMthdCurrentStatsResp3xxIn=csbSIPMthdCurrentStatsResp3xxIn, csbSIPMthdRCCurrentStatsRespOut=csbSIPMthdRCCurrentStatsRespOut, csbSIPMthdHistoryStatsResp4xxIn=csbSIPMthdHistoryStatsResp4xxIn, csbSIPMthdRCCurrentStatsGroup=csbSIPMthdRCCurrentStatsGroup, CiscoSbcSIPMethod=CiscoSbcSIPMethod, csbSIPMthdRCCurrentStatsRespIn=csbSIPMthdRCCurrentStatsRespIn, csbRfBillRealmStatsTotalStopAcrs=csbRfBillRealmStatsTotalStopAcrs, csbRfBillRealmStatsGroup=csbRfBillRealmStatsGroup, csbSIPMthdCurrentStatsReqIn=csbSIPMthdCurrentStatsReqIn, csbStatsMIBCompliance=csbStatsMIBCompliance, csbRadiusStatsTable=csbRadiusStatsTable, csbSIPMthdCurrentStatsReqOut=csbSIPMthdCurrentStatsReqOut, csbRfBillRealmStatsTotalStartAcrs=csbRfBillRealmStatsTotalStartAcrs, csbRadiusStatsUnknownType=csbRadiusStatsUnknownType, csbSIPMthdCurrentStatsResp2xxOut=csbSIPMthdCurrentStatsResp2xxOut, csbRfBillRealmStatsTable=csbRfBillRealmStatsTable, csbSIPMthdRCHistoryStatsTable=csbSIPMthdRCHistoryStatsTable, csbSIPMthdCurrentStatsResp5xxOut=csbSIPMthdCurrentStatsResp5xxOut, csbSIPMthdCurrentStatsEntry=csbSIPMthdCurrentStatsEntry, csbSIPMthdRCHistoryStatsMethodName=csbSIPMthdRCHistoryStatsMethodName, csbRadiusStatsBadAuths=csbRadiusStatsBadAuths, csbRfBillRealmStatsEntry=csbRfBillRealmStatsEntry, csbSIPMthdRCHistoryStatsRespOut=csbSIPMthdRCHistoryStatsRespOut, csbSIPMthdHistoryStatsMethod=csbSIPMthdHistoryStatsMethod, csbSIPMthdHistoryStatsGroup=csbSIPMthdHistoryStatsGroup, csbRfBillRealmStatsSuccStopAcrs=csbRfBillRealmStatsSuccStopAcrs, csbSIPMthdRCCurrentStatsEntry=csbSIPMthdRCCurrentStatsEntry, csbRadiusStatsActRsps=csbRadiusStatsActRsps, csbSIPMthdCurrentStatsAdjName=csbSIPMthdCurrentStatsAdjName, csbSIPMthdRCHistoryStatsInterval=csbSIPMthdRCHistoryStatsInterval, csbRfBillRealmStatsFailInterimAcrs=csbRfBillRealmStatsFailInterimAcrs, csbRadiusStatsGroup=csbRadiusStatsGroup, csbRadiusStatsAcsChalls=csbRadiusStatsAcsChalls, csbSIPMthdRCCurrentStatsMethod=csbSIPMthdRCCurrentStatsMethod, csbSIPMthdHistoryStatsTable=csbSIPMthdHistoryStatsTable, csbSIPMthdHistoryStatsResp5xxOut=csbSIPMthdHistoryStatsResp5xxOut, csbSIPMthdRCHistoryStatsMethod=csbSIPMthdRCHistoryStatsMethod, csbStatsMIBGroups=csbStatsMIBGroups, csbRadiusStatsClientType=csbRadiusStatsClientType, csbSIPMthdCurrentStatsResp5xxIn=csbSIPMthdCurrentStatsResp5xxIn, csbSIPMthdHistoryStatsResp3xxOut=csbSIPMthdHistoryStatsResp3xxOut, csbRadiusStatsAcsRejects=csbRadiusStatsAcsRejects, csbSIPMthdCurrentStatsGroup=csbSIPMthdCurrentStatsGroup, csbSIPMthdCurrentStatsResp6xxOut=csbSIPMthdCurrentStatsResp6xxOut, csbSIPMthdRCCurrentStatsMethodName=csbSIPMthdRCCurrentStatsMethodName, csbSIPMthdHistoryStatsResp2xxIn=csbSIPMthdHistoryStatsResp2xxIn, csbRadiusStatsActRetrans=csbRadiusStatsActRetrans, csbRfBillRealmStatsIndex=csbRfBillRealmStatsIndex, csbSIPMthdHistoryStatsResp5xxIn=csbSIPMthdHistoryStatsResp5xxIn, csbRfBillRealmStatsFailStartAcrs=csbRfBillRealmStatsFailStartAcrs, csbSIPMthdHistoryStatsResp6xxOut=csbSIPMthdHistoryStatsResp6xxOut, csbSIPMthdHistoryStatsMethodName=csbSIPMthdHistoryStatsMethodName, csbRfBillRealmStatsSuccStartAcrs=csbRfBillRealmStatsSuccStartAcrs, csbSIPMthdRCHistoryStatsAdjName=csbSIPMthdRCHistoryStatsAdjName, csbRfBillRealmStatsSuccInterimAcrs=csbRfBillRealmStatsSuccInterimAcrs, csbSIPMthdRCCurrentStatsRespCode=csbSIPMthdRCCurrentStatsRespCode, csbSIPMthdCurrentStatsMethodName=csbSIPMthdCurrentStatsMethodName, csbRadiusStatsTimeouts=csbRadiusStatsTimeouts, PYSNMP_MODULE_ID=ciscoSbcStatsMIB, csbSIPMthdCurrentStatsTable=csbSIPMthdCurrentStatsTable, csbSIPMthdRCHistoryStatsRespCode=csbSIPMthdRCHistoryStatsRespCode, csbSIPMthdHistoryStatsAdjName=csbSIPMthdHistoryStatsAdjName, csbSIPMthdRCCurrentStatsInterval=csbSIPMthdRCCurrentStatsInterval, csbSIPMthdCurrentStatsResp2xxIn=csbSIPMthdCurrentStatsResp2xxIn, csbRfBillRealmStatsTotalEventAcrs=csbRfBillRealmStatsTotalEventAcrs, csbSIPMthdCurrentStatsResp1xxOut=csbSIPMthdCurrentStatsResp1xxOut, csbRadiusStatsClientName=csbRadiusStatsClientName, ciscoSbcStatsMIBConform=ciscoSbcStatsMIBConform, csbSIPMthdCurrentStatsResp3xxOut=csbSIPMthdCurrentStatsResp3xxOut, csbRadiusStatsSrvrName=csbRadiusStatsSrvrName, ciscoSbcStatsMIBNotifs=ciscoSbcStatsMIBNotifs, csbRfBillRealmStatsFailEventAcrs=csbRfBillRealmStatsFailEventAcrs, csbSIPMthdRCHistoryStatsRespIn=csbSIPMthdRCHistoryStatsRespIn, csbSIPMthdHistoryStatsResp3xxIn=csbSIPMthdHistoryStatsResp3xxIn, csbSIPMthdRCHistoryStatsEntry=csbSIPMthdRCHistoryStatsEntry, csbSIPMthdRCCurrentStatsAdjName=csbSIPMthdRCCurrentStatsAdjName, csbRfBillRealmStatsTotalInterimAcrs=csbRfBillRealmStatsTotalInterimAcrs, csbSIPMthdCurrentStatsResp4xxIn=csbSIPMthdCurrentStatsResp4xxIn, csbSIPMthdHistoryStatsResp1xxOut=csbSIPMthdHistoryStatsResp1xxOut, csbRfBillRealmStatsRealmName=csbRfBillRealmStatsRealmName, csbRadiusStatsEntIndex=csbRadiusStatsEntIndex, csbRadiusStatsAcsRtrns=csbRadiusStatsAcsRtrns, csbRadiusStatsAcsAccpts=csbRadiusStatsAcsAccpts, csbRfBillRealmStatsSuccEventAcrs=csbRfBillRealmStatsSuccEventAcrs, csbSIPMthdCurrentStatsInterval=csbSIPMthdCurrentStatsInterval, csbSIPMthdRCCurrentStatsTable=csbSIPMthdRCCurrentStatsTable, CiscoSbcRadiusClientType=CiscoSbcRadiusClientType, csbSIPMthdHistoryStatsReqIn=csbSIPMthdHistoryStatsReqIn, csbSIPMthdHistoryStatsResp1xxIn=csbSIPMthdHistoryStatsResp1xxIn)
