#
# PySNMP MIB module ELFIQ-MODULE-FOVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELFIQ-MODULE-FOVE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:59:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
common, commonConformance = mibBuilder.importSymbols("ELFIQ-INC-MIB", "common", "commonConformance")
commonComponent, commonNotification = mibBuilder.importSymbols("ELFIQ-MODULE-COMMON-MIB", "commonComponent", "commonNotification")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
snmpTraps, = mibBuilder.importSymbols("SNMPv2-MIB", "snmpTraps")
Unsigned32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, NotificationType, Gauge32, Integer32, ObjectIdentity, MibIdentifier, iso, IpAddress, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "NotificationType", "Gauge32", "Integer32", "ObjectIdentity", "MibIdentifier", "iso", "IpAddress", "Bits", "TimeTicks")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
foveInfo = ModuleIdentity((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2))
if mibBuilder.loadTexts: foveInfo.setLastUpdated('0902190000Z')
if mibBuilder.loadTexts: foveInfo.setOrganization('Elfiq Inc.')
if mibBuilder.loadTexts: foveInfo.setContactInfo(' Author: Elfiq Network postal: Montreal, QC H3B3A7 CANADA email: support@elfiq.com phone: +1-514-667-0611 ')
if mibBuilder.loadTexts: foveInfo.setDescription('This is the standard standard component of the common failover elfiq module')
class FoveIndex(TextualConvention, Integer32):
    description = ' A unique value, greater than zero, for each fove component '
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 5)

foveIntNumber = MibScalar((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntNumber.setStatus('current')
if mibBuilder.loadTexts: foveIntNumber.setDescription('The number of failover interface used and configured on your elfiq product')
foveTable = MibTable((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: foveTable.setStatus('current')
if mibBuilder.loadTexts: foveTable.setDescription('This is a list of fove interfaces entries. The number of fove interfaces used is given by the value of foveIntNumber.')
foveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "ELFIQ-MODULE-FOVE-MIB", "foveIntIndex"))
if mibBuilder.loadTexts: foveEntry.setStatus('current')
if mibBuilder.loadTexts: foveEntry.setDescription(' An entry containing fove sub-component.')
foveIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 1), FoveIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntIndex.setStatus('current')
if mibBuilder.loadTexts: foveIntIndex.setDescription('The fove interface index')
foveIntUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntUsed.setStatus('current')
if mibBuilder.loadTexts: foveIntUsed.setDescription('This variable corresponds to the interface of this entry used in failover mode')
foveIntType = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("critical", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveIntType.setStatus('current')
if mibBuilder.loadTexts: foveIntType.setDescription('This variable describes the interface type of this entry used in failover mode')
foveLocalState = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("negociation", 1), ("master", 2), ("slave", 3), ("failure", 4), ("dead", 5), ("paused", 6), ("managementfailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveLocalState.setStatus('current')
if mibBuilder.loadTexts: foveLocalState.setDescription('The is the current state in failover mode of your elfiq product')
foveRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteId.setStatus('current')
if mibBuilder.loadTexts: foveRemoteId.setDescription('The is the remote identification of the peer configured in failover mode with your elfiq product')
foveRemoteSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteSeq.setStatus('current')
if mibBuilder.loadTexts: foveRemoteSeq.setDescription('This is the remote sequence number of the peer configured in failover mode with your elfiq product')
foveRemoteState = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("negociation", 1), ("master", 2), ("slave", 3), ("failure", 4), ("dead", 5), ("paused", 6), ("managementfailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteState.setStatus('current')
if mibBuilder.loadTexts: foveRemoteState.setDescription('This is the remote state of the peer configured in failover mode with your elfiq product')
foveRemoteMgmtIP = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteMgmtIP.setStatus('current')
if mibBuilder.loadTexts: foveRemoteMgmtIP.setDescription('This is the remote management ip address of the peer configured in failover mode with your elfiq product')
foveRemoteIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteIfName.setStatus('current')
if mibBuilder.loadTexts: foveRemoteIfName.setDescription('This variable corresponds to the remote interface name of the peer configured in failover mode with your elfiq product')
foveRemoteLastL2FoMSec = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteLastL2FoMSec.setStatus('current')
if mibBuilder.loadTexts: foveRemoteLastL2FoMSec.setDescription('This is the delay in ms when your product received the last sequence number sent by the peer configured in failover mode with your elfiq product')
foveRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 11), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveRemoteMac.setStatus('current')
if mibBuilder.loadTexts: foveRemoteMac.setDescription('This is the mac address of the peer interface configured in failover mode with your elfiq product')
foveVIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveVIPStatus.setStatus('current')
if mibBuilder.loadTexts: foveVIPStatus.setDescription('This is the virtual ip status of your elfiq product')
foveVIP = MibTableColumn((1, 3, 6, 1, 4, 1, 19713, 1, 1, 1, 2, 2, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: foveVIP.setStatus('current')
if mibBuilder.loadTexts: foveVIP.setDescription('This is the virtual ip address of your elfiq product')
foveNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 2))
foveStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 19713, 1, 1, 2, 2, 1)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveLocalState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteState"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIPStatus"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIP"))
if mibBuilder.loadTexts: foveStatusChanged.setStatus('current')
if mibBuilder.loadTexts: foveStatusChanged.setDescription("This notification is sent every time the fove's product state changes ( master , slave , ...) ")
foveGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2))
systInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2, 1)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveIntNumber"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntIndex"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntUsed"), ("ELFIQ-MODULE-FOVE-MIB", "foveIntType"), ("ELFIQ-MODULE-FOVE-MIB", "foveLocalState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteId"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteSeq"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteState"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteMgmtIP"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteIfName"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteLastL2FoMSec"), ("ELFIQ-MODULE-FOVE-MIB", "foveRemoteMac"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIPStatus"), ("ELFIQ-MODULE-FOVE-MIB", "foveVIP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systInfoGroup = systInfoGroup.setStatus('current')
if mibBuilder.loadTexts: systInfoGroup.setDescription('A collection of objects providing fove information')
foveNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 19713, 2, 1, 2, 2)).setObjects(("ELFIQ-MODULE-FOVE-MIB", "foveStatusChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    foveNotificationGroup = foveNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: foveNotificationGroup.setDescription('A collection of objects notification corresponding to your products changes')
mibBuilder.exportSymbols("ELFIQ-MODULE-FOVE-MIB", foveRemoteSeq=foveRemoteSeq, systInfoGroup=systInfoGroup, foveRemoteIfName=foveRemoteIfName, foveInfo=foveInfo, foveGroups=foveGroups, foveVIP=foveVIP, foveIntIndex=foveIntIndex, foveIntType=foveIntType, foveVIPStatus=foveVIPStatus, foveRemoteState=foveRemoteState, PYSNMP_MODULE_ID=foveInfo, foveEntry=foveEntry, foveStatusChanged=foveStatusChanged, foveLocalState=foveLocalState, foveNotification=foveNotification, foveIntUsed=foveIntUsed, foveRemoteId=foveRemoteId, foveIntNumber=foveIntNumber, foveTable=foveTable, FoveIndex=FoveIndex, foveRemoteLastL2FoMSec=foveRemoteLastL2FoMSec, foveNotificationGroup=foveNotificationGroup, foveRemoteMgmtIP=foveRemoteMgmtIP, foveRemoteMac=foveRemoteMac)
