#
# PySNMP MIB module HUAWEI-FTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-FTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:44:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, IpAddress, ModuleIdentity, Bits, ObjectIdentity, Unsigned32, NotificationType, iso, Counter32, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "IpAddress", "ModuleIdentity", "Bits", "ObjectIdentity", "Unsigned32", "NotificationType", "iso", "Counter32", "Gauge32", "Counter64")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
hwFtp = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166))
hwFtp.setRevisions(('2014-04-21 09:00', '2014-08-15 16:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwFtp.setRevisionsDescriptions(('Modified to Add nodes for wlan npe trusted host.', 'Modified to Add switch notify.',))
if mibBuilder.loadTexts: hwFtp.setLastUpdated('201404210900Z')
if mibBuilder.loadTexts: hwFtp.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwFtp.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwFtp.setDescription('V1.00 The HUAWEI-FTP-MIB which contains objects manages the FTP server and FTP client configuration. ')
hwFtpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1))
hwFtpServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1))
hwFtpServerEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpServerEnable.setStatus('current')
if mibBuilder.loadTexts: hwFtpServerEnable.setDescription('The object specifies whether the FTP server is enable. Default value is 2.')
hwFtpHostPermit = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2))
hwFtpHostPermitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1), )
if mibBuilder.loadTexts: hwFtpHostPermitTable.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitTable.setDescription('This object indicates trusted host table.')
hwFtpHostPermitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1), ).setIndexNames((0, "HUAWEI-FTP-MIB", "hwFtpHostPermitIndex"))
if mibBuilder.loadTexts: hwFtpHostPermitEntry.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitEntry.setDescription('This object indicates trusted the entry of trusted host table.')
hwFtpHostPermitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpHostPermitIndex.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitIndex.setDescription('The value of this object identifies the index of trusted host table.')
hwFtpHostPermitIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpHostPermitIpAddress.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitIpAddress.setDescription('The value of this object identifies ip address of trusted host.')
hwFtpHostPermitMaskAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpHostPermitMaskAddress.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitMaskAddress.setDescription('The value of this object identifies mask address of trusted host.')
hwFtpHostPermitInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpHostPermitInformation.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitInformation.setDescription('The value of this object identifies the description of trusted host.')
hwFtpHostPermitRowState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwFtpHostPermitRowState.setStatus('current')
if mibBuilder.loadTexts: hwFtpHostPermitRowState.setDescription('This object identifies the status of a row.')
hwFtpUpperThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwFtpUpperThreshold.setStatus('current')
if mibBuilder.loadTexts: hwFtpUpperThreshold.setDescription('The object specifies the threshold of FTP users')
hwFtpLowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwFtpLowerThreshold.setStatus('current')
if mibBuilder.loadTexts: hwFtpLowerThreshold.setDescription('The object specifies the resune threshold of FTP users')
hwFtpNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 2))
hwFtpNumThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 2, 1)).setObjects(("HUAWEI-FTP-MIB", "hwFtpUpperThreshold"))
if mibBuilder.loadTexts: hwFtpNumThreshold.setStatus('current')
if mibBuilder.loadTexts: hwFtpNumThreshold.setDescription('This object indicates the alarm reported when the number of FTP users exceed the threshold. ')
hwFtpNumThresholdResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 2, 2)).setObjects(("HUAWEI-FTP-MIB", "hwFtpLowerThreshold"))
if mibBuilder.loadTexts: hwFtpNumThresholdResume.setStatus('current')
if mibBuilder.loadTexts: hwFtpNumThresholdResume.setDescription('This object indicates the alarm reported when the number of FTP users fell below the threshold. ')
hwFtpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 3))
hwFtpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 3, 1))
hwFtpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 3, 1, 1)).setObjects(("HUAWEI-FTP-MIB", "hwFtpServerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFtpMIBCompliance = hwFtpMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hwFtpMIBCompliance.setDescription('The compliance statement for systems supporting the HUAWEI-FTP-MIB.')
hwFtpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 3, 2))
hwFtpServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 166, 3, 2, 1)).setObjects(("HUAWEI-FTP-MIB", "hwFtpServerEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwFtpServerGroup = hwFtpServerGroup.setStatus('current')
if mibBuilder.loadTexts: hwFtpServerGroup.setDescription('The FTP server attribute group.')
mibBuilder.exportSymbols("HUAWEI-FTP-MIB", hwFtpMIBGroups=hwFtpMIBGroups, hwFtpHostPermit=hwFtpHostPermit, hwFtpHostPermitInformation=hwFtpHostPermitInformation, hwFtp=hwFtp, PYSNMP_MODULE_ID=hwFtp, hwFtpNotification=hwFtpNotification, hwFtpServerEnable=hwFtpServerEnable, hwFtpServer=hwFtpServer, hwFtpNumThreshold=hwFtpNumThreshold, hwFtpMIBCompliance=hwFtpMIBCompliance, hwFtpNumThresholdResume=hwFtpNumThresholdResume, hwFtpUpperThreshold=hwFtpUpperThreshold, hwFtpHostPermitRowState=hwFtpHostPermitRowState, hwFtpHostPermitTable=hwFtpHostPermitTable, hwFtpHostPermitEntry=hwFtpHostPermitEntry, hwFtpHostPermitIpAddress=hwFtpHostPermitIpAddress, hwFtpServerGroup=hwFtpServerGroup, hwFtpMIBConformance=hwFtpMIBConformance, hwFtpMIBCompliances=hwFtpMIBCompliances, hwFtpObjects=hwFtpObjects, hwFtpHostPermitIndex=hwFtpHostPermitIndex, hwFtpHostPermitMaskAddress=hwFtpHostPermitMaskAddress, hwFtpLowerThreshold=hwFtpLowerThreshold)
