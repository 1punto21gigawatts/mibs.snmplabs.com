#
# PySNMP MIB module ENTERASYS-MULTI-AUTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-MULTI-AUTH-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:04:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
StationAddress, StationAddressType = mibBuilder.importSymbols("ENTERASYS-UPN-TC-MIB", "StationAddress", "StationAddressType")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, iso, NotificationType, Counter64, Bits, Counter32, MibIdentifier, Unsigned32, TimeTicks, Gauge32, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "iso", "NotificationType", "Counter64", "Bits", "Counter32", "MibIdentifier", "Unsigned32", "TimeTicks", "Gauge32", "IpAddress", "ObjectIdentity")
DateAndTime, TruthValue, TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "TextualConvention", "TimeStamp", "DisplayString")
etsysMultiAuthMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46))
etsysMultiAuthMIB.setRevisions(('2008-02-05 18:40', '2006-03-23 13:32', '2006-02-03 19:15', '2005-04-06 18:10', '2004-08-30 13:43', '2004-07-20 19:43', '2004-03-10 13:56',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysMultiAuthMIB.setRevisionsDescriptions(('Added a new authentication type for RADIUS Snooping.', 'Added etsysMultiAuthSessionVlanTunnelAttribute leaf for RFC 3580 support.', 'Added NOTIFICATIONs for the system and module maximum number of users being reached. Also added objects to enable and disable these NOTIFICATIONs.', 'Added objects to control and report timeout parameters for authentication sessions. Also added objects to report the number of authenticated users on a per authentication type basis.', 'Added read-only leaves to represent the potential for individual chassis modules to have their own authentication resource limits. The etsysMultiAuthCompliance group has been deprecated in favor of etsysMultiAuthCompliance2.', 'Added a new authentication type for Convergence End Point Detection. The DEFVAL clause of the etsysMultiAuthSystemDefaultPrecedence leaf was corrected to indicate the intended default precedence.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysMultiAuthMIB.setLastUpdated('200802051840Z')
if mibBuilder.loadTexts: etsysMultiAuthMIB.setOrganization('Enterasys Networks, Inc.')
if mibBuilder.loadTexts: etsysMultiAuthMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysMultiAuthMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID pertaining to configuration of multiple authentication mechanisms to be run simultaneously on a device.')
class EtsysMultiAuthTypes(TextualConvention, Integer32):
    description = "This convention enumerates the authentication types supported by Enterasys Networks' devices."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("ieee8021x", 1), ("pwa", 2), ("macAuth", 3), ("cep", 4), ("radiusSnooping", 5))

class EtsysMultiAuthTypePrecedence(TextualConvention, OctetString):
    description = "The precedence by which authentication results will be applied to network traffic. This object will have a maximum size equal to the number of enumerations specified by the EtsysMultiAuthTypes textual convention. Each octet in this object represents a specific authentication type. The first octet contains the authentication type with the highest precedence, the second octet contains the type of the next highest precedence, and so forth. For example, a precedence from highest to lowest of ieee8021x(1), macAuth(3), pwa(2), cep(4), radiusSnooping(5) would be represented as '0103020405'H."
    status = 'current'
    displayHint = '1d '
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class EtsysMultiAuthStatus(TextualConvention, Integer32):
    description = 'The status of authentication for this session. A value of authSuccess(1) means authentication was attempted and succeeded. A value of authFailed(2) means authentication was attempted and failed for a reason other than communication timing out with the authorization server. A value of authInProgress(3) means that the authorization process has been started but has not completed yet. A value of authServerTimeout(4) means that the request to the authorization server for this session timed out without a reply from the server. A value of authTerminated(5) indicates that the session was active or in progress and was subsequently terminated. A session may be terminated for several reasons, including but not limited to, session timeout, idle timeout, the ifOperStatus of the interface on which the session was authenticated transitioning out of the up(1) state, or explicit administrative management action.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("authSuccess", 1), ("authFailed", 2), ("authInProgress", 3), ("authServerTimeout", 4), ("authTerminated", 5))

etsysMultiAuthObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1))
etsysMultiAuthSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1))
etsysMultiAuthPort = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2))
etsysMultiAuthStation = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3))
etsysMultiAuthSession = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4))
etsysMultiAuthModule = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5))
etsysMultiAuthNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0))
etsysMultiAuthSystemSupportedTypes = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 1), Bits().clone(namedValues=NamedValues(("ieee8021x", 0), ("pwa", 1), ("macAuth", 2), ("cep", 3), ("radiusSnooping", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSystemSupportedTypes.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemSupportedTypes.setDescription('This object specifies that authentication types that the device supports. A bit will be set for each corresponding type that is supported.')
etsysMultiAuthSystemMaxNumUsers = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsers.setDescription('The maximum number of users the can be actively authenticated or have authentications in progress at one time in the system.')
etsysMultiAuthSystemCurrentNumUsers = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSystemCurrentNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemCurrentNumUsers.setDescription('The current number of users the are actively authenticated, have authentications in progress, or the device is keeping authentication termination information for in the system.')
etsysMultiAuthSystemMode = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("strictIeee8021x", 1), ("etsysMultiAuth", 2))).clone('strictIeee8021x')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthSystemMode.setReference('IEEE Std. 802.1X-2001')
if mibBuilder.loadTexts: etsysMultiAuthSystemMode.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemMode.setDescription('The value strictIeee8021x(1) will cause the device to authenticate in strict adherence to IEEE Std. 802.1X-2001. In this mode no other authentication mechanisms will be active. While in this mode, changes may be made to other objects in the MIB, but they will have no effect on the operation of the device until such time as the system mode is changed to etsysMultiAuth(2). A set of this object to a value of etsysMultiAuth(2) will cause the device to authenticate using multiple authenticators simultaneously.')
etsysMultiAuthSystemDefaultPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 5), EtsysMultiAuthTypePrecedence().clone(hexValue="0102030405")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSystemDefaultPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemDefaultPrecedence.setDescription('The precedence that authentication results will be applied to network traffic by default. This object will have a size equal to the number of enumerations specified by the EtsysMultiAuthTypes textual convention.')
etsysMultiAuthSystemAdminPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 6), EtsysMultiAuthTypePrecedence().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthSystemAdminPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemAdminPrecedence.setDescription("This object allows one to modify the default precedence by which authentication results will be applied to network traffic. Sets to this object are not required to specify all of the types that the device supports. If less types are specified than are supported, then all types that were not specified will be given an operational precedence based on that type's default precedence relative to the last type specified. For example, if the default precedence is '030102'H and the object is set to '02'H then operational precedence would be '020301'H. A set to this object of a zero length octet string will clear the administrative precedence. In this case the operational precedence would be equal to the default precedence.")
etsysMultiAuthSystemOperPrecedence = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 7), EtsysMultiAuthTypePrecedence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSystemOperPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemOperPrecedence.setDescription('This object returns the operational precedence of authentication types as they will be applied to network traffic. The value returned by this object is the calculated result of the etsysMultiAuthSystemDefaultPrecedence and etsysMultiAuthSystemAdminPrecedence objects. This object will have a size equal to the number of enumerations specified by the EtsysMultiAuthTypes textual convention.')
etsysMultiAuthTypePropertiesTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8), )
if mibBuilder.loadTexts: etsysMultiAuthTypePropertiesTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTypePropertiesTable.setDescription('A table of properties per authentication type.')
etsysMultiAuthTypePropertiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8, 1), ).setIndexNames((0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthType"))
if mibBuilder.loadTexts: etsysMultiAuthTypePropertiesEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTypePropertiesEntry.setDescription('An entry containing per authentication type properties.')
etsysMultiAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8, 1, 1), EtsysMultiAuthTypes()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysMultiAuthType.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthType.setDescription('The authentication type the entry properties pertain to.')
etsysMultiAuthSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthSessionTimeout.setReference("RFC 2865, 'Remote Authentication Dial In User Service (RADIUS)', Section 5.27")
if mibBuilder.loadTexts: etsysMultiAuthSessionTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionTimeout.setDescription('The maximum number of seconds an authenticated session may last before termination of the session. A value of zero indicates that no session timeout will be applied. This value MAY be superseded by a session timeout value provided by the authenticating server. For example, if a session is authenticated by a RADIUS server, that server may encode a Session-Timeout Attribute in its authentication response. The operational timeout value of a given authenticated session is specified by the etsysMultiAuthSessionSessionTimeout object.')
etsysMultiAuthIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthIdleTimeout.setReference("RFC 2865, 'Remote Authentication Dial In User Service (RADIUS)', Section 5.28")
if mibBuilder.loadTexts: etsysMultiAuthIdleTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthIdleTimeout.setDescription('The maximum number of consecutive seconds an authenticated session may be idle before termination of the session. A value of zero indicates that no idle timeout will be applied. This value MAY be superseded by a idle timeout value provided by the authenticating server. For example, if a session is authenticated by a RADIUS server, that server may encode a Idle-Timeout Attribute in its authentication response. The operational idle timeout value of a given authenticated session is specified by the etsysMultiAuthSessionIdleTimeout object.')
etsysMultiAuthCurrentNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthCurrentNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthCurrentNumUsers.setDescription('The current number of users the are actively authenticated or have authentications in progress for this authentication type in the system.')
etsysMultiAuthSystemMaxNumUsersReachedTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 1, 9), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsersReachedTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsersReachedTrapEnable.setDescription('This object allows for the enabling or disabling the transmission of the etsysMultiAuthSystemMaxNumUsersReached NOTIFICATION.')
etsysMultiAuthPortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1), )
if mibBuilder.loadTexts: etsysMultiAuthPortTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTable.setDescription('A table of per port information and configuration for user authentication.')
etsysMultiAuthPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysMultiAuthPortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortEntry.setDescription('An entry containing per port authentication data. Only interfaces that are able to authenticate users are represented in this table.')
etsysMultiAuthPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forceUnauthorized", 1), ("forceAuthorized", 2), ("authOptional", 3), ("authRequired", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthPortMode.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortMode.setDescription('This object specifies the authorization mode to use for packets received on this interface. A value of forceUnauthorized(1) indicates that the interface is always unauthenticated. A value of forceAuthorized(2) indicates that users on this port will always be considered to be authenticated. A value of authOptional(3) indicates that authentication is optional on this interface. Packets received from unauthenticated users on the interface will be processed using the static configuration of the interface. Users may promote the policy applied to their traffic by actively authenticating on this interface. A value of authRequired(4) indicates that all packets received on the interface will be dropped until authentication succeeds. Some authentication types, such as PWA, will not be fully functional in this mode of operation.')
etsysMultiAuthPortMaxNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthPortMaxNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortMaxNumUsers.setDescription('The maximum number of users that can be actively authenticated or have authentications in progress at one time on this interface.')
etsysMultiAuthPortNumUsersAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthPortNumUsersAllowed.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortNumUsersAllowed.setDescription('The user configured number of users that can be actively authenticated or have authentications in progress at one time on this interface. This object has a default value equal to the value of etsysMultiAuthPortMaxNumUsers for this interface. If the value set to this object is less than its current value, it will have the same effect as setting the etsysMultiAuthPortClearUsers object to a value of true(1).')
etsysMultiAuthPortCurrentNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthPortCurrentNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortCurrentNumUsers.setDescription('The current number of users that are actively authenticated or have authentications in progress at one time on this interface. By definition this value can not exceed the value specified by etsysMultiAuthPortMaxNumUsers for the same interface.')
etsysMultiAuthPortClearUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthPortClearUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortClearUsers.setDescription('Setting this object to a value of true(1) will cause all users that are currently authenticated or that have authentications in progress on this interface to become unauthenticated. This will cause any such entries with matching ifIndex values in the etsysMultiAuthSessionStationTable tables to change their authorization status to authTerminated(5). Setting this object to a value of false(2) has no effect. This object will always return a value of false(2).')
etsysMultiAuthPortTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 1, 1, 6), Bits().clone(namedValues=NamedValues(("authSuccessTrap", 0), ("authFailedTrap", 1), ("authTerminatedTrap", 2), ("maxNumUsersReachedTrap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthPortTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTrapEnable.setDescription('This object allows for the enabling or disabling of each trap on a per interface basis. Setting a given bit to a value of 1 allows traps of that type to be sent for events on that interface. Setting a given bit to a value of 0 disallows traps of that type to be sent for events on that interface. The individual bits correlate to specific traps as follows: BIT NOTIFICATION ---------------------------------------------------------------- authSuccessTrap(0) etsysMultiAuthSuccess authFailedTrap(1) etsysMultiAuthFailed authTerminatedTrap(2) etsysMultiAuthTerminated maxNumUsersReachedTrap(3) etsysMultiAuthMaxNumUsersReached ')
etsysMultiAuthPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 2), )
if mibBuilder.loadTexts: etsysMultiAuthPortTypeTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTypeTable.setDescription('A table of per port, per authentication type information.')
etsysMultiAuthPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthType"))
if mibBuilder.loadTexts: etsysMultiAuthPortTypeEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTypeEntry.setDescription('An entry containing per port, per authentication type data. Only interfaces that are able to authenticate users are represented in this table.')
etsysMultiAuthPortTypeCurrentNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 2, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthPortTypeCurrentNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTypeCurrentNumUsers.setDescription('The current number of users the are actively authenticated or have authentications in progress for this authentication type on the specified port.')
etsysMultiAuthStationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3, 1), )
if mibBuilder.loadTexts: etsysMultiAuthStationTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationTable.setDescription('A table of station configuration on specific interfaces.')
etsysMultiAuthStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3, 1, 1), ).setIndexNames((0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysMultiAuthStationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationEntry.setDescription('An entry containing authentication information on a per station, per port basis. Only interfaces that are able to authenticate users are represented in this table.')
etsysMultiAuthStationAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3, 1, 1, 1), StationAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysMultiAuthStationAddrType.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationAddrType.setDescription('The type of station represented by etsysMultiAuthStationAddr.')
etsysMultiAuthStationAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3, 1, 1, 2), StationAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysMultiAuthStationAddr.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationAddr.setDescription('The station address for the authenticated user.')
etsysMultiAuthStationClearUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 3, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthStationClearUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationClearUsers.setDescription('Setting this object to a value of true(1) will cause any users with the specified station address that are currently authenticated or that have authentications in progress to become unauthenticated. This will cause any entries with matching etsysMultiAuthStationAddr values in the etsysMultiAuthSessionStationTable tables to change their authorization status to authTerminated(5). Setting this object to a value of false(2) has no effect. This object will always return a value of false(2).')
etsysMultiAuthSessionStationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1), )
if mibBuilder.loadTexts: etsysMultiAuthSessionStationTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionStationTable.setDescription('A table of session information and configuration for user authentication. Entries in this table represent users in various stages of authentication. Entries that do not have a etsysMultiAuthSessionStationAuthStatus value of authSuccess(1) or authInProgress(3) MAY be removed by the agent as required in order to free resources for new user authentications.')
etsysMultiAuthSessionStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1), ).setIndexNames((0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), (0, "IF-MIB", "ifIndex"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"))
if mibBuilder.loadTexts: etsysMultiAuthSessionStationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionStationEntry.setDescription('An entry containing authentication information on a per station, per port, per authentication agent type basis. Only interfaces that are able to authenticate users are represented in this table.')
etsysMultiAuthSessionAgentType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 1), EtsysMultiAuthTypes()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysMultiAuthSessionAgentType.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionAgentType.setDescription('The type of authentication agent for this session.')
etsysMultiAuthSessionStationAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 2), EtsysMultiAuthStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionStationAuthStatus.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionStationAuthStatus.setDescription('The status of authentication for this session.')
etsysMultiAuthSessionAuthAttemptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthAttemptTime.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthAttemptTime.setDescription('The value of sysUpTime when this session last attempted authorization. For entries that have a value of authInProgress(3) for etsysMultiAuthSessionStationAuthStatus this object MAY return a value of zero.')
etsysMultiAuthSessionAuthServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("local", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerType.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerType.setDescription('The type of authentication server used to authenticate this session. A value of radius(1) indicates that a RADIUS request and response were attempted in order to authenticate the session. A value of local(2) indicates that the session was authenticated by a local file or configuration on the device itself.')
etsysMultiAuthSessionAuthServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerAddrType.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerAddrType.setDescription('The type of data returned by etsysMultiAuthSessionAuthServerAddr. If the etsysMultiAuthSessionAuthServerType leaf for this entry has a value of local(2) then this object MUST return a a value of unknown(0).')
etsysMultiAuthSessionAuthServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerAddr.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionAuthServerAddr.setDescription('The network address of the authentication server for this session. If the etsysMultiAuthSessionAuthServerType leaf for this entry has a value of local(2) then this object MUST return a zero length string.')
etsysMultiAuthSessionPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionPolicyIndex.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionPolicyIndex.setDescription("The Policy Profile Index returned from the authentication server for this session. The value of zero indicates that no policy will be applied for this session. If the etsysMultiAuthSessionStationAuthStatus object returns a value of authSuccess(1), then a value of zero is the result of the policy not being configured on the authorization server. For all other values of etsysMultiAuthSessionStationAuthStatus a value of zero for this object is the result of authorization not succeeding or not having completed. All values other than zero are valid Policy Profile Indexes that specify the policy profile the user will receive on this interface. If a given user has been authenticated by multiple authentication types on the same interface the policy that is applied to the user's packets is determined by the precedence of the agents as specified by etsysMultiAuthSystemOperPrecedence. These indexes are suitable for indexing in the ENTERASYS-POLICY-PROFILE-MIB.")
etsysMultiAuthSessionIsApplied = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionIsApplied.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionIsApplied.setDescription('This object indicates whether this entry and the policy index contained within it are actively being applied to traffic matching the interface and station address of this entry. A value of true(1) indicates that this entry is being applied. A value of false(2) indicates that the entry is not being applied. Only one authentication type per interface station address ordered pair may be applied at a single time. The operational precedence of the various authentication types determines which if any type will be applied.')
etsysMultiAuthSessionTerminationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 9), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionTerminationTime.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionTerminationTime.setDescription("The local date and time that the session was terminated. If the session is not in the authTerminated(5) state this object MUST return '00000000'H.")
etsysMultiAuthSessionSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionSessionTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionSessionTimeout.setDescription('The maximum number of seconds this session may last before automatic termination. A value of zero indicates that no session timeout will be applied. This value MAY be provided by the etsysMultiAuthSessionTimeout object or by the authenticating server.')
etsysMultiAuthSessionIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionIdleTimeout.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionIdleTimeout.setDescription('The maximum number of consecutive seconds this session may be idle before automatic termination. A value of zero indicates that no idle timeout will be applied. This value MAY be provided by the etsysMultiAuthIdleTimeout object or by the authenticating server.')
etsysMultiAuthSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 12), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionDuration.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionDuration.setDescription('The length of this session in seconds. This object MAY return zero for a session in any state other than authSuccess(1).')
etsysMultiAuthSessionIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 13), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionIdleTime.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionIdleTime.setDescription('The number of consecutive seconds this session has been idle. This object MAY return zero for a session in any state other than authSuccess(1).')
etsysMultiAuthSessionVlanTunnelAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionVlanTunnelAttribute.setReference("RFC 3580, 'IEEE 802.1X Remote Authentication Dial In User Service (RADIUS) Usage Guidelines', Section 3.31")
if mibBuilder.loadTexts: etsysMultiAuthSessionVlanTunnelAttribute.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionVlanTunnelAttribute.setDescription('The VLAN Tunnel Attribute (Tunnel-Group-ID) returned from the authentication server for this session. This value is interpreted as the 12 bit VLAN identifier to be applied to traffic from the session entity. Policy VLAN classification rules have precedence in assigning VLAN, however, in the absence of any applicable rules, this VLAN will be used. If the traffic is already tagged, this VLAN will only be applied if TCI overwrite has been enabled (through Policy or ctDot1qPortReplaceTCI). A value of zero indicates that there is no authenticated VLAN ID for the given session (none was provided by the authentication server). Should a session become unauthenticated this value MUST return zero. A value of 4095 indicates that a the session has been authenticated, but that the VLAN returned could not be applied to the port (possibly because of resource constraints or misconfiguration). The traffic from the session entity will be assigned VLAN through Policy or standard 802.1Q mechanisms.')
etsysMultiAuthSessionPortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 2), )
if mibBuilder.loadTexts: etsysMultiAuthSessionPortTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionPortTable.setDescription('A table of session information and configuration for user authentication. This table represents the information specified in the etsysMultiAuthSessionStationTable with alternate indexing for faster lookups of data on per port basis.')
etsysMultiAuthSessionPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), (0, "ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"))
if mibBuilder.loadTexts: etsysMultiAuthSessionPortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionPortEntry.setDescription('An entry containing authentication information on a per port, per station, per authentication agent type basis. Only interfaces that are able to authenticate users are represented in this table.')
etsysMultiAuthSessionPortAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 4, 2, 1, 1), EtsysMultiAuthStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthSessionPortAuthStatus.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionPortAuthStatus.setDescription('The status of authentication for this session.')
etsysMultiAuthModuleTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5, 1), )
if mibBuilder.loadTexts: etsysMultiAuthModuleTable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleTable.setDescription('A table of per module information for user authentication.')
etsysMultiAuthModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: etsysMultiAuthModuleEntry.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleEntry.setDescription('An entry containing per module authentication data. Only physical indexes with a entPhysicalClass of module(9) are represented in this table. Furthermore, each entity represented in this table must have authentication resources that are separate from every other entity in the table.')
etsysMultiAuthModuleMaxNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsers.setDescription('The maximum number of users that can be actively authenticated or have authentications in progress at one time on the specified module.')
etsysMultiAuthModuleCurrentNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysMultiAuthModuleCurrentNumUsers.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleCurrentNumUsers.setDescription('The current number of users that are actively authenticated or have authentications in progress at one time on the specified module. By definition this value can not exceed the value specified by etsysMultiAuthModuleMaxNumUsers for the same module.')
etsysMultiAuthModuleMaxNumUsersReachedTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 5, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsersReachedTrapEnable.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsersReachedTrapEnable.setDescription('This object allows for the enabling or disabling the transmission of the etsysMultiAuthModuleMaxNumUsersReached NOTIFICATION.')
etsysMultiAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 1)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), ("IF-MIB", "ifIndex"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"))
if mibBuilder.loadTexts: etsysMultiAuthSuccess.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSuccess.setDescription('An etsysMultiAuthSuccess trap signifies that the SNMP entity, acting in an agent role, has successfully authenticated a station on one of its interfaces. The included objects of etsysMultiAuthStationAddrType and etsysMultiAuthStationAddr uniquely identify the station that has been authenticated. The interface that the station was authenticated on is specified by the ifIndex object, and the type of authentication used is to authenticate the station is specified by the etsysMultiAuthSessionAgentType object. This trap will only be generated on interfaces that are in the authOptional(3) or authRequired(4) state.')
etsysMultiAuthFailed = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 2)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), ("IF-MIB", "ifIndex"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"))
if mibBuilder.loadTexts: etsysMultiAuthFailed.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthFailed.setDescription('An etsysMultiAuthFailed trap signifies that the SNMP entity, acting in an agent role, has identified a station that attempted and subsequently failed to authenticate on one of its interfaces. The included objects of etsysMultiAuthStationAddrType and etsysMultiAuthStationAddr uniquely identify the station that attempted to authenticate. The interface that the station attempted to authenticate on is specified by the ifIndex object, and the type of authentication attempted is specified by the etsysMultiAuthSessionAgentType object. This trap will only be generated on interfaces that are in the authOptional(3) or authRequired(4) state.')
etsysMultiAuthTerminated = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 3)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), ("IF-MIB", "ifIndex"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"))
if mibBuilder.loadTexts: etsysMultiAuthTerminated.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTerminated.setDescription('An etsysMultiAuthTerminated trap signifies that the SNMP entity, acting in an agent role, has terminated the authentication of a station on one of its interfaces. The included objects of etsysMultiAuthStationAddrType and etsysMultiAuthStationAddr uniquely identify the station for which authentication was terminated. The interface that the station was previously authenticated on is specified by the ifIndex object, and the type of authentication that the station was terminated for is specified by the etsysMultiAuthSessionAgentType object. This trap will only be generated on interfaces that are in the authOptional(3) or authRequired(4) state.')
etsysMultiAuthMaxNumUsersReached = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 4)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysMultiAuthMaxNumUsersReached.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthMaxNumUsersReached.setDescription('An etsysMultiAuthMaxNumUsersReached trap signifies that the SNMP entity, acting in an agent role, has an interface where subsequent to a successful authentication, the number of current sessions on the interface equals the maximum number of sessions allowed for that interface. The interface that the maximum number of sessions has been reached is specified by the ifIndex object.')
etsysMultiAuthModuleMaxNumUsersReached = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 5)).setObjects(("ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsersReached.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleMaxNumUsersReached.setDescription('An etsysMultiAuthModuleMaxNumUsersReached trap signifies that the SNMP entity, acting in an agent role, has a module where subsequent to a successful authentication, the number of current sessions on the module equals the maximum number of sessions allowed for that module. The module that the maximum number of sessions has been reached is specified by the entPhysicalIndex object.')
etsysMultiAuthSystemMaxNumUsersReached = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 1, 0, 6))
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsersReached.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemMaxNumUsersReached.setDescription('An etsysMultiAuthSystemMaxNumUsersReached trap signifies that the SNMP entity, acting in an agent role, where subsequent to a successful authentication, has the number of current sessions on the system equals the maximum number of sessions allowed for that system, .')
etsysMultiAuthConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2))
etsysMultiAuthGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1))
etsysMultiAuthCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2))
etsysMultiAuthSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 1)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemSupportedTypes"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemMaxNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemCurrentNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemMode"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemDefaultPrecedence"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemAdminPrecedence"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemOperPrecedence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthSystemGroup = etsysMultiAuthSystemGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemGroup.setDescription('The system group for all devices supporting Multiple Authentication.')
etsysMultiAuthPortBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 2)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortMode"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortMaxNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortNumUsersAllowed"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortCurrentNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortClearUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthPortBaseGroup = etsysMultiAuthPortBaseGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortBaseGroup.setDescription('The base level port group for all devices supporting Multiple Authentication.')
etsysMultiAuthPortTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 3)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthPortTrapGroup = etsysMultiAuthPortTrapGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthPortTrapGroup.setDescription('This group of objects for all devices supporting per interface SNMP notifications.')
etsysMultiAuthStationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 4)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationAddr"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationClearUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthStationGroup = etsysMultiAuthStationGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthStationGroup.setDescription('The station group for all devices supporting Multiple Authentication.')
etsysMultiAuthSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 5)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionStationAuthStatus"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthAttemptTime"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerAddr"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionPolicyIndex"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionIsApplied"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionPortAuthStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthSessionGroup = etsysMultiAuthSessionGroup.setStatus('deprecated')
if mibBuilder.loadTexts: etsysMultiAuthSessionGroup.setDescription('The session group for all devices supporting Multiple Authentication.')
etsysMultiAuthNotificationPortGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 6)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSuccess"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthFailed"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthTerminated"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthMaxNumUsersReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthNotificationPortGroup = etsysMultiAuthNotificationPortGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthNotificationPortGroup.setDescription('The group of per interface notifications for Multiple Authentication.')
etsysMultiAuthModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 7)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleMaxNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleCurrentNumUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthModuleGroup = etsysMultiAuthModuleGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleGroup.setDescription('The module group for all devices supporting Multiple Authentication.')
etsysMultiAuthSessionGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 8)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAgentType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionStationAuthStatus"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthAttemptTime"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerAddrType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionAuthServerAddr"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionPolicyIndex"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionIsApplied"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionTerminationTime"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionPortAuthStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthSessionGroup2 = etsysMultiAuthSessionGroup2.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSessionGroup2.setDescription('The session group for all devices supporting Multiple Authentication.')
etsysMultiAuthTimeoutGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 9)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthType"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionTimeout"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthIdleTimeout"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionSessionTimeout"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionIdleTimeout"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionDuration"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionIdleTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthTimeoutGroup = etsysMultiAuthTimeoutGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTimeoutGroup.setDescription('The group of objects for all devices that support timing out Multiple Authentication sessions.')
etsysMultiAuthCurrentNumUsersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 10)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthCurrentNumUsers"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTypeCurrentNumUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCurrentNumUsersGroup = etsysMultiAuthCurrentNumUsersGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthCurrentNumUsersGroup.setDescription('The group of objects for all devices that support counting the number of current users on a per authentication type basis.')
etsysMultiAuthModuleTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 11)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleMaxNumUsersReachedTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthModuleTrapGroup = etsysMultiAuthModuleTrapGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthModuleTrapGroup.setDescription('The group of objects for all devices supporting module SNMP notifications.')
etsysMultiAuthSystemTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 12)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemMaxNumUsersReachedTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthSystemTrapGroup = etsysMultiAuthSystemTrapGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthSystemTrapGroup.setDescription('The group of objects for all devices supporting system SNMP notifications.')
etsysMultiAuthNotificationModuleGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 13)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleMaxNumUsersReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthNotificationModuleGroup = etsysMultiAuthNotificationModuleGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthNotificationModuleGroup.setDescription('The group of per module notifications for Multiple Authentication.')
etsysMultiAuthNotificationSystemGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 14)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemMaxNumUsersReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthNotificationSystemGroup = etsysMultiAuthNotificationSystemGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthNotificationSystemGroup.setDescription('The group of per system notifications for Multiple Authentication.')
etsysMultiAuthTunnelAttributeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 1, 15)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionVlanTunnelAttribute"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthTunnelAttributeGroup = etsysMultiAuthTunnelAttributeGroup.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTunnelAttributeGroup.setDescription('The group of objects for all devices supporting 802.1X RADIUS tunnel attributes for 802.1Q VLANs.')
etsysMultiAuthCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 1)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortBaseGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCompliance = etsysMultiAuthCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: etsysMultiAuthCompliance.setDescription('This compliance statement has been deprecated in favor of the expanded group defined by etsysMultiAuthCompliance2.')
etsysMultiAuthCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 2)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortBaseGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationPortGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCompliance2 = etsysMultiAuthCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: etsysMultiAuthCompliance2.setDescription('This compliance statement has been deprecated in favor of the expanded group defined by etsysMultiAuthCompliance3.')
etsysMultiAuthCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 3)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortBaseGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionGroup2"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationPortGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCompliance3 = etsysMultiAuthCompliance3.setStatus('deprecated')
if mibBuilder.loadTexts: etsysMultiAuthCompliance3.setDescription('This compliance statement has been deprecated in favor of the expanded group defined by etsysMultiAuthCompliance4.')
etsysMultiAuthTimeoutCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 4)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthTimeoutGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthTimeoutCompliance = etsysMultiAuthTimeoutCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthTimeoutCompliance.setDescription('The compliance statement for devices that support timing out of Multiple Authentication sessions.')
etsysMultiAuthCurrentNumUserCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 5)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthCurrentNumUsersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCurrentNumUserCompliance = etsysMultiAuthCurrentNumUserCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthCurrentNumUserCompliance.setDescription('The compliance statement for all devices that support counting the number of current users on a per authentication type basis.')
etsysMultiAuthCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 6)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortBaseGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthStationGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSessionGroup2"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthPortTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationPortGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthModuleTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationModuleGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthSystemTrapGroup"), ("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthNotificationSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiAuthCompliance4 = etsysMultiAuthCompliance4.setStatus('current')
if mibBuilder.loadTexts: etsysMultiAuthCompliance4.setDescription('The compliance statement for devices that support Multiple Authentication.')
etsysMultiTunnelAttributeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 46, 2, 2, 7)).setObjects(("ENTERASYS-MULTI-AUTH-MIB", "etsysMultiAuthTunnelAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysMultiTunnelAttributeCompliance = etsysMultiTunnelAttributeCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysMultiTunnelAttributeCompliance.setDescription('The compliance statement for all devices that support 802.1X RADIUS Tunnel Attributes.')
mibBuilder.exportSymbols("ENTERASYS-MULTI-AUTH-MIB", etsysMultiAuthMIB=etsysMultiAuthMIB, etsysMultiAuthNotificationSystemGroup=etsysMultiAuthNotificationSystemGroup, etsysMultiAuthModuleCurrentNumUsers=etsysMultiAuthModuleCurrentNumUsers, etsysMultiAuthStationAddrType=etsysMultiAuthStationAddrType, etsysMultiAuthPortCurrentNumUsers=etsysMultiAuthPortCurrentNumUsers, etsysMultiAuthPortBaseGroup=etsysMultiAuthPortBaseGroup, etsysMultiAuthSessionAuthServerAddrType=etsysMultiAuthSessionAuthServerAddrType, etsysMultiAuthSystemSupportedTypes=etsysMultiAuthSystemSupportedTypes, etsysMultiAuthCurrentNumUserCompliance=etsysMultiAuthCurrentNumUserCompliance, etsysMultiAuthStationEntry=etsysMultiAuthStationEntry, etsysMultiAuthSessionAgentType=etsysMultiAuthSessionAgentType, etsysMultiAuthPortMode=etsysMultiAuthPortMode, etsysMultiAuthSystemAdminPrecedence=etsysMultiAuthSystemAdminPrecedence, etsysMultiAuthTerminated=etsysMultiAuthTerminated, etsysMultiAuthSystemDefaultPrecedence=etsysMultiAuthSystemDefaultPrecedence, etsysMultiAuthFailed=etsysMultiAuthFailed, etsysMultiAuthCurrentNumUsers=etsysMultiAuthCurrentNumUsers, etsysMultiAuthSessionIdleTime=etsysMultiAuthSessionIdleTime, EtsysMultiAuthTypePrecedence=EtsysMultiAuthTypePrecedence, etsysMultiAuthConformance=etsysMultiAuthConformance, etsysMultiAuthPortTypeEntry=etsysMultiAuthPortTypeEntry, etsysMultiAuthPortMaxNumUsers=etsysMultiAuthPortMaxNumUsers, etsysMultiAuthSystemGroup=etsysMultiAuthSystemGroup, etsysMultiAuthTimeoutGroup=etsysMultiAuthTimeoutGroup, etsysMultiAuthSessionStationEntry=etsysMultiAuthSessionStationEntry, etsysMultiAuthCompliance3=etsysMultiAuthCompliance3, etsysMultiAuthSuccess=etsysMultiAuthSuccess, etsysMultiAuthSessionAuthAttemptTime=etsysMultiAuthSessionAuthAttemptTime, etsysMultiAuthSessionPortAuthStatus=etsysMultiAuthSessionPortAuthStatus, etsysMultiAuthSession=etsysMultiAuthSession, etsysMultiAuthCompliances=etsysMultiAuthCompliances, etsysMultiAuthSessionStationTable=etsysMultiAuthSessionStationTable, etsysMultiAuthType=etsysMultiAuthType, etsysMultiAuthPortTrapGroup=etsysMultiAuthPortTrapGroup, etsysMultiAuthSessionStationAuthStatus=etsysMultiAuthSessionStationAuthStatus, etsysMultiAuthMaxNumUsersReached=etsysMultiAuthMaxNumUsersReached, etsysMultiAuthSystemMode=etsysMultiAuthSystemMode, etsysMultiAuthPortTypeTable=etsysMultiAuthPortTypeTable, etsysMultiAuthTunnelAttributeGroup=etsysMultiAuthTunnelAttributeGroup, etsysMultiAuthCompliance4=etsysMultiAuthCompliance4, etsysMultiAuthPort=etsysMultiAuthPort, etsysMultiAuthPortNumUsersAllowed=etsysMultiAuthPortNumUsersAllowed, etsysMultiAuthNotificationModuleGroup=etsysMultiAuthNotificationModuleGroup, etsysMultiTunnelAttributeCompliance=etsysMultiTunnelAttributeCompliance, etsysMultiAuthSystemMaxNumUsersReached=etsysMultiAuthSystemMaxNumUsersReached, etsysMultiAuthStationClearUsers=etsysMultiAuthStationClearUsers, etsysMultiAuthCompliance2=etsysMultiAuthCompliance2, PYSNMP_MODULE_ID=etsysMultiAuthMIB, etsysMultiAuthModule=etsysMultiAuthModule, etsysMultiAuthGroups=etsysMultiAuthGroups, etsysMultiAuthSystem=etsysMultiAuthSystem, etsysMultiAuthSystemMaxNumUsersReachedTrapEnable=etsysMultiAuthSystemMaxNumUsersReachedTrapEnable, etsysMultiAuthPortTypeCurrentNumUsers=etsysMultiAuthPortTypeCurrentNumUsers, etsysMultiAuthTypePropertiesEntry=etsysMultiAuthTypePropertiesEntry, etsysMultiAuthStationTable=etsysMultiAuthStationTable, etsysMultiAuthSessionIdleTimeout=etsysMultiAuthSessionIdleTimeout, etsysMultiAuthIdleTimeout=etsysMultiAuthIdleTimeout, etsysMultiAuthSessionPortTable=etsysMultiAuthSessionPortTable, etsysMultiAuthSessionDuration=etsysMultiAuthSessionDuration, etsysMultiAuthSessionAuthServerAddr=etsysMultiAuthSessionAuthServerAddr, etsysMultiAuthCompliance=etsysMultiAuthCompliance, etsysMultiAuthSystemOperPrecedence=etsysMultiAuthSystemOperPrecedence, etsysMultiAuthStationGroup=etsysMultiAuthStationGroup, etsysMultiAuthSessionAuthServerType=etsysMultiAuthSessionAuthServerType, etsysMultiAuthSystemMaxNumUsers=etsysMultiAuthSystemMaxNumUsers, etsysMultiAuthSessionIsApplied=etsysMultiAuthSessionIsApplied, etsysMultiAuthObjects=etsysMultiAuthObjects, etsysMultiAuthSessionVlanTunnelAttribute=etsysMultiAuthSessionVlanTunnelAttribute, etsysMultiAuthStation=etsysMultiAuthStation, etsysMultiAuthSessionGroup=etsysMultiAuthSessionGroup, etsysMultiAuthNotificationPortGroup=etsysMultiAuthNotificationPortGroup, etsysMultiAuthSessionPolicyIndex=etsysMultiAuthSessionPolicyIndex, etsysMultiAuthModuleMaxNumUsers=etsysMultiAuthModuleMaxNumUsers, etsysMultiAuthSessionTimeout=etsysMultiAuthSessionTimeout, EtsysMultiAuthTypes=EtsysMultiAuthTypes, etsysMultiAuthSessionGroup2=etsysMultiAuthSessionGroup2, etsysMultiAuthSystemTrapGroup=etsysMultiAuthSystemTrapGroup, etsysMultiAuthCurrentNumUsersGroup=etsysMultiAuthCurrentNumUsersGroup, etsysMultiAuthModuleMaxNumUsersReachedTrapEnable=etsysMultiAuthModuleMaxNumUsersReachedTrapEnable, etsysMultiAuthSessionPortEntry=etsysMultiAuthSessionPortEntry, etsysMultiAuthPortClearUsers=etsysMultiAuthPortClearUsers, etsysMultiAuthSessionTerminationTime=etsysMultiAuthSessionTerminationTime, etsysMultiAuthModuleEntry=etsysMultiAuthModuleEntry, etsysMultiAuthModuleGroup=etsysMultiAuthModuleGroup, etsysMultiAuthNotification=etsysMultiAuthNotification, EtsysMultiAuthStatus=EtsysMultiAuthStatus, etsysMultiAuthSystemCurrentNumUsers=etsysMultiAuthSystemCurrentNumUsers, etsysMultiAuthPortTable=etsysMultiAuthPortTable, etsysMultiAuthModuleMaxNumUsersReached=etsysMultiAuthModuleMaxNumUsersReached, etsysMultiAuthModuleTrapGroup=etsysMultiAuthModuleTrapGroup, etsysMultiAuthSessionSessionTimeout=etsysMultiAuthSessionSessionTimeout, etsysMultiAuthTypePropertiesTable=etsysMultiAuthTypePropertiesTable, etsysMultiAuthTimeoutCompliance=etsysMultiAuthTimeoutCompliance, etsysMultiAuthStationAddr=etsysMultiAuthStationAddr, etsysMultiAuthPortEntry=etsysMultiAuthPortEntry, etsysMultiAuthModuleTable=etsysMultiAuthModuleTable, etsysMultiAuthPortTrapEnable=etsysMultiAuthPortTrapEnable)
