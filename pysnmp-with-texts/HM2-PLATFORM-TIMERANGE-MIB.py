#
# PySNMP MIB module HM2-PLATFORM-TIMERANGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-PLATFORM-TIMERANGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:32:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
hm2PlatformMibs, = mibBuilder.importSymbols("HM2-TC-MIB", "hm2PlatformMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, MibIdentifier, iso, Counter64, IpAddress, Unsigned32, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "MibIdentifier", "iso", "Counter64", "IpAddress", "Unsigned32", "TimeTicks", "NotificationType")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hm2PlatformTimeRange = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 12, 53))
hm2PlatformTimeRange.setRevisions(('2011-01-26 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hm2PlatformTimeRange.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: hm2PlatformTimeRange.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: hm2PlatformTimeRange.setOrganization('Hirschmann Automation and Control GmbH')
if mibBuilder.loadTexts: hm2PlatformTimeRange.setContactInfo('Postal: Stuttgarter Str. 45-51 72654 Neckartenzlingen Germany Phone: +49 7127 140 E-mail: hac.support@belden.com')
if mibBuilder.loadTexts: hm2PlatformTimeRange.setDescription('The Hirschmann MIB for Time Ranges. Copyright (C) 2011. All Rights Reserved.')
hm2AgentTimeRangeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 53, 1))
class Hm2AgentTimeRangeAbsoluteDateAndTime(TextualConvention, OctetString):
    description = 'A date-time specification for absolute time entry in a time range. field octets contents range ----- ------ -------- ----- 1 1-2 year 0..65536 2 3 month 1..12 3 4 day 1..31 4 5 hour 0..23 5 6 minutes 0..59 For example, Oct 9, 2009 at 1:30 PM would be displayed as: 2009-10-9,13:30.'
    status = 'current'
    displayHint = '2d-1d-1d,1d:1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class Hm2AgentTimeRangePeriodicTime(TextualConvention, OctetString):
    description = 'A time specification for periodic time entry in a time range. field octets contents range ----- ------ -------- ----- 1 1 hour 0..23 1 1 minutes 0..59 For example,1:30 PM would be displayed as: 13:30.'
    status = 'current'
    displayHint = '1d:1d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

hm2AgentTimeRangeIndexNextFree = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentTimeRangeIndexNextFree.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeIndexNextFree.setDescription('This object contains an unused value for the hm2AgentTimeRangeIndex to be used when creating a new Hm2AgentTimeRange. A value of zero indicates the Hm2AgentTimeRange table is full.')
hm2AgentTimeRangeAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 248), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentTimeRangeAdminMode.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAdminMode.setDescription('TimeRange admin mode: enable - enable TimeRange disable - disable TimeRange.')
hm2AgentTimeRangeTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2), )
if mibBuilder.loadTexts: hm2AgentTimeRangeTable.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeTable.setDescription('A table of Hm2AgentTimeRange instances.')
hm2AgentTimeRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2, 1), ).setIndexNames((0, "HM2-PLATFORM-TIMERANGE-MIB", "hm2AgentTimeRangeIndex"))
if mibBuilder.loadTexts: hm2AgentTimeRangeEntry.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeEntry.setDescription('hm2AgentTimeRangeIndex and hm2AgentTimeRangeName must be set to complete a new hm2AgentTimeRangeEntry instance')
hm2AgentTimeRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hm2AgentTimeRangeIndex.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeIndex.setDescription('The Hm2AgentTimeRange table index this instance is associated with.')
hm2AgentTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangeName.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeName.setDescription('The name of this Hm2AgentTimeRange entry, which must consist of 1 to 31 alphanumeric characters and uniquely identify this Hm2AgentTimeRange. This object must be set to complete a new Hm2AgentTimeRange row instance.')
hm2AgentTimeRangeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("active", 0), ("inactive", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentTimeRangeOperState.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeOperState.setDescription('Operating status of the time-range. It depends on the current time and the periodic and absolute time entries defined in the time-range')
hm2AgentTimeRangeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangeStatus.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeStatus.setDescription('Status of this instance. active(1) - this Hm2AgentTimeRange instance is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
hm2AgentTimeRangeAbsoluteTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3), )
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteTable.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteTable.setDescription('A table of absolute entries for time ranges')
hm2AgentTimeRangeAbsoluteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3, 1), ).setIndexNames((0, "HM2-PLATFORM-TIMERANGE-MIB", "hm2AgentTimeRangeIndex"), (0, "HM2-PLATFORM-TIMERANGE-MIB", "hm2AgentTimeRangeAbsoluteEntryIndex"))
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEntry.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEntry.setDescription('A table of absolute entries for time ranges. Atleast one of hm2AgentTimeRangeAbsoluteStartDateAndTime and hm2AgentTimeRangeAbsoluteEndDateAndTime must be set to complete a new Absolute entry instance.')
hm2AgentTimeRangeAbsoluteEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEntryIndex.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEntryIndex.setDescription('The index of this absolute time entry within time range.')
hm2AgentTimeRangeAbsoluteStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3, 1, 2), Hm2AgentTimeRangeAbsoluteDateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteStartDateAndTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteStartDateAndTime.setDescription('The start time for an absolute entry in the time range')
hm2AgentTimeRangeAbsoluteEndDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3, 1, 3), Hm2AgentTimeRangeAbsoluteDateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEndDateAndTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteEndDateAndTime.setDescription(' The end time for an absolute entry in the time range.')
hm2AgentTimeRangeAbsoluteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteStatus.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangeAbsoluteStatus.setDescription('Status of this instance. active(1) - this hm2AgentTimeRangeAbsoluteEntry is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
hm2AgentTimeRangePeriodicTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4), )
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicTable.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicTable.setDescription('A table periodic entries for time ranges')
hm2AgentTimeRangePeriodicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1), ).setIndexNames((0, "HM2-PLATFORM-TIMERANGE-MIB", "hm2AgentTimeRangeIndex"), (0, "HM2-PLATFORM-TIMERANGE-MIB", "hm2AgentTimeRangePeriodicEntryIndex"))
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEntry.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEntry.setDescription('A table periodic entries for time ranges. All the objects in the periodic entry must be set to complete a new periodic entry instance. Objects hm2AgentTimeRangePeriodicStartDay and hm2AgentTimeRangePeriodicStartTime together forms the start dayandtime and objects hm2AgentTimeRangePeriodicEndDay and hm2AgentTimeRangePeriodicEndTime together forms end dayandtime. The time range to which the periodic entry belongs is active between start dayandtime and end dayandtime. If more than one day is specified in the hm2AgentTimeRangePeriodicStartDay, then the same days should be specified in the hm2AgentTimeRangePeriodicEndDay ')
hm2AgentTimeRangePeriodicEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)))
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEntryIndex.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEntryIndex.setDescription('The index of this periodic entry within time range.')
hm2AgentTimeRangePeriodicStartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 2), Bits().clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStartDay.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStartDay.setDescription('The starting day or days on which the configuration that referenced the time range starts going into effect. Same day can be set for both hm2AgentTimeRangePeriodicStartDay and hm2AgentTimeRangePeriodicEndDay objects ')
hm2AgentTimeRangePeriodicStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 3), Hm2AgentTimeRangePeriodicTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStartTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStartTime.setDescription('The starting time for an periodic entry in the time range.')
hm2AgentTimeRangePeriodicEndDay = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 4), Bits().clone(namedValues=NamedValues(("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEndDay.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEndDay.setDescription('The ending day or days on which the configuration that referenced the time range is no longer in efect. Same day can be set for both hm2AgentTimeRangePeriodicStartDay and hm2AgentTimeRangePeriodicEndDay objects')
hm2AgentTimeRangePeriodicEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 5), Hm2AgentTimeRangePeriodicTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEndTime.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicEndTime.setDescription('The end time for an periodic entry in the time range.')
hm2AgentTimeRangePeriodicStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 53, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStatus.setStatus('current')
if mibBuilder.loadTexts: hm2AgentTimeRangePeriodicStatus.setDescription('Status of this instance. active(1) - this hm2AgentTimeRangePeriodicEntry is active createAndGo(4) - set to this value to create an instance destroy(6) - set to this value to delete an instance')
mibBuilder.exportSymbols("HM2-PLATFORM-TIMERANGE-MIB", hm2AgentTimeRangePeriodicStartDay=hm2AgentTimeRangePeriodicStartDay, hm2AgentTimeRangePeriodicStartTime=hm2AgentTimeRangePeriodicStartTime, hm2AgentTimeRangeAbsoluteTable=hm2AgentTimeRangeAbsoluteTable, hm2AgentTimeRangeIndexNextFree=hm2AgentTimeRangeIndexNextFree, hm2AgentTimeRangeTable=hm2AgentTimeRangeTable, hm2AgentTimeRangePeriodicEntryIndex=hm2AgentTimeRangePeriodicEntryIndex, hm2AgentTimeRangePeriodicTable=hm2AgentTimeRangePeriodicTable, hm2AgentTimeRangeEntry=hm2AgentTimeRangeEntry, PYSNMP_MODULE_ID=hm2PlatformTimeRange, hm2AgentTimeRangeAdminMode=hm2AgentTimeRangeAdminMode, hm2AgentTimeRangeAbsoluteStartDateAndTime=hm2AgentTimeRangeAbsoluteStartDateAndTime, hm2AgentTimeRangeAbsoluteEntry=hm2AgentTimeRangeAbsoluteEntry, hm2AgentTimeRangePeriodicStatus=hm2AgentTimeRangePeriodicStatus, hm2AgentTimeRangeStatus=hm2AgentTimeRangeStatus, hm2PlatformTimeRange=hm2PlatformTimeRange, Hm2AgentTimeRangeAbsoluteDateAndTime=Hm2AgentTimeRangeAbsoluteDateAndTime, hm2AgentTimeRangeGroup=hm2AgentTimeRangeGroup, hm2AgentTimeRangePeriodicEntry=hm2AgentTimeRangePeriodicEntry, hm2AgentTimeRangeIndex=hm2AgentTimeRangeIndex, Hm2AgentTimeRangePeriodicTime=Hm2AgentTimeRangePeriodicTime, hm2AgentTimeRangePeriodicEndDay=hm2AgentTimeRangePeriodicEndDay, hm2AgentTimeRangeOperState=hm2AgentTimeRangeOperState, hm2AgentTimeRangeAbsoluteEntryIndex=hm2AgentTimeRangeAbsoluteEntryIndex, hm2AgentTimeRangeAbsoluteStatus=hm2AgentTimeRangeAbsoluteStatus, hm2AgentTimeRangePeriodicEndTime=hm2AgentTimeRangePeriodicEndTime, hm2AgentTimeRangeAbsoluteEndDateAndTime=hm2AgentTimeRangeAbsoluteEndDateAndTime, hm2AgentTimeRangeName=hm2AgentTimeRangeName)
