#
# PySNMP MIB module APSNMP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APSNMP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibIdentifier, Integer32, Bits, ObjectIdentity, IpAddress, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, Counter32, Gauge32, TimeTicks, Counter64, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Integer32", "Bits", "ObjectIdentity", "IpAddress", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "Counter32", "Gauge32", "TimeTicks", "Counter64", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
brand = MibIdentifier((1, 3, 6, 1, 4, 1, 3716))
windowsNT = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1))
apolloStatsForNT = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1))
apolloThresholdForNT = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2))
apolloTrapsForNT = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 3))
statsForPort = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1))
statsForCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2))
statsForSession = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3))
statsForData = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4))
statsForError = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5))
statsForDriver = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6))
statsForCompression = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 7))
statsSessionForGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1))
statsSessionForApollo = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2))
statsSessionForPPP = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3))
thresholdForPort = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1))
thresholdForCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2))
thresholdForSession = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3))
thresholdForData = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4))
thresholdForError = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5))
thresholdForDriver = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6))
thresholdForCompression = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 7))
thresholdSessionForGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1))
thresholdSessionForApollo = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2))
thresholdSessionForPPP = MibIdentifier((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3))
statsPortsInUse = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPortsInUse.setStatus('mandatory')
if mibBuilder.loadTexts: statsPortsInUse.setDescription('A read-only INTEGER variable.')
statsMaxPortsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsMaxPortsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: statsMaxPortsUsed.setDescription('A read-only INTEGER variable.')
statsPortsInUseIncoming = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPortsInUseIncoming.setStatus('mandatory')
if mibBuilder.loadTexts: statsPortsInUseIncoming.setDescription('A read-only INTEGER variable.')
statsPortsInUseOutgoing = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPortsInUseOutgoing.setStatus('mandatory')
if mibBuilder.loadTexts: statsPortsInUseOutgoing.setDescription('A read-only INTEGER variable.')
statsOverrallCompressionRatioOfAllPorts = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsOverrallCompressionRatioOfAllPorts.setStatus('mandatory')
if mibBuilder.loadTexts: statsOverrallCompressionRatioOfAllPorts.setDescription('A read-only INTEGER variable.')
statsTotalCallsMade = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsMade.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsMade.setDescription('A read-only INTEGER variable.')
statsFailedOutgoingCalls = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsFailedOutgoingCalls.setStatus('mandatory')
if mibBuilder.loadTexts: statsFailedOutgoingCalls.setDescription('A read-only INTEGER variable.')
statsTotalCallsReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsReceivedPerMinute.setDescription('A read-only INTEGER variable.')
statsTotalCallsReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsReceivedPerHour.setDescription('A read-only INTEGER variable.')
statsTotalCallsReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsReceivedPerDay.setDescription('A read-only INTEGER variable.')
statsTotalCallsMadePerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsMadePerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsMadePerMinute.setDescription('A read-only INTEGER variable.')
statsTotalCallsMadePerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsMadePerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsMadePerHour.setDescription('A read-only INTEGER variable.')
statsTotalCallsMadePerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsMadePerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsMadePerDay.setDescription('A read-only INTEGER variable.')
statsTotalCallsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalCallsReceived.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalCallsReceived.setDescription('A read-only INTEGER variable.')
statsMaxSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsMaxSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: statsMaxSessionsUsed.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionGranted.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionGranted.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionRefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefused.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefused.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionsGrantedPerMinute.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionGrantedPerHour.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionGrantedPerDay.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerMinute.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerHour.setDescription('A read-only INTEGER variable.')
statsTotalNumberUserSessionRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberUserSessionRefusedPerDay.setDescription('A read-only INTEGER variable.')
statsTotalActiveUserSession = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalActiveUserSession.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalActiveUserSession.setDescription('A read-only INTEGER variable.')
statsApolloActiveUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloActiveUserSessions.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloActiveUserSessions.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGranted.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGranted.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsrefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsrefused.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsrefused.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerMinute.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerHour.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsGrantedPerDay.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerMinute.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerHour.setDescription('A read-only INTEGER variable.')
statsApolloNumberUserSessionsRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloNumberUserSessionsRefusedPerDay.setDescription('A read-only INTEGER variable.')
statsApolloMaximumSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsApolloMaximumSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: statsApolloMaximumSessionsUsed.setDescription('A read-only INTEGER variable.')
statsPPPActiveUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPActiveUserSessions.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPActiveUserSessions.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGranted.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGranted.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsRefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefused.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefused.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerMinute.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerHour.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsGrantedPerDay.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerMinute.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerHour.setDescription('A read-only INTEGER variable.')
statsPPPNumberUserSessionsRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPNumberUserSessionsRefusedPerDay.setDescription('A read-only INTEGER variable.')
statsPPPMaximumSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 3, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPPPMaximumSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: statsPPPMaximumSessionsUsed.setDescription('A read-only INTEGER variable.')
statsNumberBytesReceivedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesReceivedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesReceivedPerSecond.setDescription('A read-only INTEGER variable.')
statsNumberBytesReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesReceivedPerMinute.setDescription('A read-only INTEGER variable.')
statsNumberBytesReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesReceivedPerHour.setDescription('A read-only INTEGER variable.')
statsNumberBytesReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesReceivedPerDay.setDescription('A read-only INTEGER variable.')
statsNumberBytesTransmittedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerSecond.setDescription('A read-only INTEGER variable.')
statsNumberBytesTransmittedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerMinute.setDescription('A read-only INTEGER variable.')
statsNumberBytesTransmittedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerHour.setDescription('A read-only INTEGER variable.')
statsNumberBytesTransmittedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsNumberBytesTransmittedPerDay.setDescription('A read-only INTEGER variable.')
statsPacketsTransmittedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsTransmittedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsTransmittedPerMinute.setDescription('A read-only INTEGER variable.')
statsPacketsTransmittedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsTransmittedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsTransmittedPerHour.setDescription('A read-only INTEGER variable.')
statsPacketsTransmittedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsTransmittedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsTransmittedPerDay.setDescription('A read-only INTEGER variable.')
statsPacketsReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsReceivedPerMinute.setDescription('A read-only INTEGER variable.')
statsPacketsReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsReceivedPerHour.setDescription('A read-only INTEGER variable.')
statsPacketsReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketsReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketsReceivedPerDay.setDescription('A read-only INTEGER variable.')
statsPacketReceivedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketReceivedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketReceivedPerSecond.setDescription('A read-only INTEGER variable.')
statsPacketTransmittedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPacketTransmittedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsPacketTransmittedPerSecond.setDescription('A read-only INTEGER variable.')
statsTotalPacketReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalPacketReceived.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalPacketReceived.setDescription('A read-only INTEGER variable.')
statsTotalPacketTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalPacketTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalPacketTransmitted.setDescription('A read-only INTEGER variable.')
statsTotalNumberBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberBytesTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberBytesTransmitted.setDescription('A read-only INTEGER variable.')
statsTotalNumberBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberBytesReceived.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberBytesReceived.setDescription('A read-only INTEGER variable.')
statsTotalNumberReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberReceivedErrors.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberReceivedErrors.setDescription('A read-only INTEGER variable.')
statsTotalNumberTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberTransmitErrors.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberTransmitErrors.setDescription('A read-only INTEGER variable.')
statsTotalNumberReceivedErrorsPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerMinute.setDescription('A read-only INTEGER variable.')
statsTotalNumberReceivedErrorsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerHour.setDescription('A read-only INTEGER variable.')
statsTotalNumberReceivedErrorsPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberReceivedErrorsPerDay.setDescription('A read-only INTEGER variable.')
statsTotalNumberTransmitErrorsPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerMinute.setDescription('A read-only INTEGER variable.')
statsTotalNumberTransmitErrorsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerHour.setDescription('A read-only INTEGER variable.')
statsTotalNumberTransmitErrorsPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalNumberTransmitErrorsPerDay.setDescription('A read-only INTEGER variable.')
statsMaximumErrorRatePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsMaximumErrorRatePerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsMaximumErrorRatePerSecond.setDescription('A read-only INTEGER variable.')
statsTotalErrorRatePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalErrorRatePerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalErrorRatePerSecond.setDescription('A read-only INTEGER variable.')
statsCurrentClock = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsCurrentClock.setStatus('mandatory')
if mibBuilder.loadTexts: statsCurrentClock.setDescription('A read-only INTEGER variable.')
statsCurrentMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsCurrentMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: statsCurrentMemoryUsedByDriver.setDescription('A read-only INTEGER variable.')
statsMaximumMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsMaximumMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: statsMaximumMemoryUsedByDriver.setDescription('A read-only INTEGER variable.')
statsPercentCurrentMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPercentCurrentMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: statsPercentCurrentMemoryUsedByDriver.setDescription('A read-only INTEGER variable.')
statsPercentMaximumMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsPercentMaximumMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: statsPercentMaximumMemoryUsedByDriver.setDescription('A read-only INTEGER variable.')
statsTotalMemoryAvailableToTheDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsTotalMemoryAvailableToTheDriver.setStatus('mandatory')
if mibBuilder.loadTexts: statsTotalMemoryAvailableToTheDriver.setDescription('A read-only INTEGER variable.')
statsBytesIntoCompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsBytesIntoCompression.setStatus('mandatory')
if mibBuilder.loadTexts: statsBytesIntoCompression.setDescription('A read-only INTEGER variable.')
statsBytesOutCompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsBytesOutCompression.setStatus('mandatory')
if mibBuilder.loadTexts: statsBytesOutCompression.setDescription('A read-only INTEGER variable.')
statsBytesIntoDecompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsBytesIntoDecompression.setStatus('mandatory')
if mibBuilder.loadTexts: statsBytesIntoDecompression.setDescription('A read-only INTEGER variable.')
statsBytesOutDecompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 1, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: statsBytesOutDecompression.setStatus('mandatory')
if mibBuilder.loadTexts: statsBytesOutDecompression.setDescription('A read-only INTEGER variable.')
thresholdPortsInUse = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPortsInUse.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPortsInUse.setDescription('A read-write INTEGER variable.')
thresholdMaxPortsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdMaxPortsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdMaxPortsUsed.setDescription('A read-write INTEGER variable.')
thresholdPortsInUseIncoming = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPortsInUseIncoming.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPortsInUseIncoming.setDescription('A read-write INTEGER variable.')
thresholdPortsInUseOutgoing = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPortsInUseOutgoing.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPortsInUseOutgoing.setDescription('A read-write INTEGER variable.')
thresholdOverrallCompressionRatioOfAllPorts = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdOverrallCompressionRatioOfAllPorts.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdOverrallCompressionRatioOfAllPorts.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsMade = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsMade.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsMade.setDescription('A read-write INTEGER variable.')
thresholdFailedOutgoingCalls = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdFailedOutgoingCalls.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdFailedOutgoingCalls.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsReceivedPerDay.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsMadePerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsMadePerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsMadePerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsMadePerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsMadePerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsMadePerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsMadePerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsMadePerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsMadePerDay.setDescription('A read-write INTEGER variable.')
thresholdTotalCallsReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalCallsReceived.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalCallsReceived.setDescription('A read-write INTEGER variable.')
thresholdMaxSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdMaxSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdMaxSessionsUsed.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGranted.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGranted.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionRefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefused.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefused.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionsGrantedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGrantedPerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionGrantedPerDay.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberUserSessionRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberUserSessionRefusedPerDay.setDescription('A read-write INTEGER variable.')
thresholdTotalActiveUserSession = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalActiveUserSession.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalActiveUserSession.setDescription('A read-write INTEGER variable.')
thresholdApolloActiveUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloActiveUserSessions.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloActiveUserSessions.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGranted.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGranted.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsrefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsrefused.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsrefused.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerHour.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsGrantedPerDay.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerHour.setDescription('A read-write INTEGER variable.')
thresholdApolloNumberUserSessionsRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloNumberUserSessionsRefusedPerDay.setDescription('A read-write INTEGER variable.')
thresholdApolloMaximumSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdApolloMaximumSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdApolloMaximumSessionsUsed.setDescription('A read-write INTEGER variable.')
thresholdPPPActiveUserSessions = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPActiveUserSessions.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPActiveUserSessions.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsGranted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGranted.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGranted.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsRefused = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefused.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefused.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsGrantedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsGrantedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerHour.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsGrantedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsGrantedPerDay.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsRefusedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsRefusedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerHour.setDescription('A read-write INTEGER variable.')
thresholdPPPNumberUserSessionsRefusedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPNumberUserSessionsRefusedPerDay.setDescription('A read-write INTEGER variable.')
thresholdPPPMaximumSessionsUsed = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 3, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPPPMaximumSessionsUsed.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPPPMaximumSessionsUsed.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesReceivedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerSecond.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerHour.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesReceivedPerDay.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesTransmittedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerSecond.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesTransmittedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesTransmittedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerHour.setDescription('A read-write INTEGER variable.')
thresholdNumberBytesTransmittedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdNumberBytesTransmittedPerDay.setDescription('A read-write INTEGER variable.')
thresholdPacketsTransmittedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdPacketsTransmittedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerHour.setDescription('A read-write INTEGER variable.')
thresholdPacketsTransmittedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsTransmittedPerDay.setDescription('A read-write INTEGER variable.')
thresholdPacketsReceivedPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsReceivedPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsReceivedPerMinute.setDescription('A read-write INTEGER variable.')
thresholdPacketsReceivedPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsReceivedPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsReceivedPerHour.setDescription('A read-write INTEGER variable.')
thresholdPacketsReceivedPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketsReceivedPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketsReceivedPerDay.setDescription('A read-write INTEGER variable.')
thresholdPacketReceivedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketReceivedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketReceivedPerSecond.setDescription('A read-write INTEGER variable.')
thresholdPacketTransmittedPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPacketTransmittedPerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPacketTransmittedPerSecond.setDescription('A read-write INTEGER variable.')
thresholdTotalPacketReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalPacketReceived.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalPacketReceived.setDescription('A read-write INTEGER variable.')
thresholdTotalPacketTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalPacketTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalPacketTransmitted.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberBytesTransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberBytesTransmitted.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberBytesReceived.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberBytesReceived.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrors.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrors.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberTransmitErrors = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrors.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrors.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberReceivedErrorsPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberReceivedErrorsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberReceivedErrorsPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberReceivedErrorsPerDay.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberTransmitErrorsPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerMinute.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerMinute.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberTransmitErrorsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerHour.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerHour.setDescription('A read-write INTEGER variable.')
thresholdTotalNumberTransmitErrorsPerDay = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerDay.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalNumberTransmitErrorsPerDay.setDescription('A read-write INTEGER variable.')
thresholdMaximumErrorRatePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdMaximumErrorRatePerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdMaximumErrorRatePerSecond.setDescription('A read-write INTEGER variable.')
thresholdTotalErrorRatePerSecond = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalErrorRatePerSecond.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalErrorRatePerSecond.setDescription('A read-write INTEGER variable.')
thresholdCurrentClock = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdCurrentClock.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdCurrentClock.setDescription('A read-write INTEGER variable.')
thresholdCurrentMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdCurrentMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdCurrentMemoryUsedByDriver.setDescription('A read-write INTEGER variable.')
thresholdMaximumMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdMaximumMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdMaximumMemoryUsedByDriver.setDescription('A read-write INTEGER variable.')
thresholdPercentCurrentMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPercentCurrentMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPercentCurrentMemoryUsedByDriver.setDescription('A read-write INTEGER variable.')
thresholdPercentMaximumMemoryUsedByDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdPercentMaximumMemoryUsedByDriver.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdPercentMaximumMemoryUsedByDriver.setDescription('A read-write INTEGER variable.')
thresholdTotalMemoryAvailableToTheDriver = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdTotalMemoryAvailableToTheDriver.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdTotalMemoryAvailableToTheDriver.setDescription('A read-write INTEGER variable.')
thresholdBytesIntoCompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdBytesIntoCompression.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdBytesIntoCompression.setDescription('A read-write INTEGER variable.')
thresholdBytesOutCompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdBytesOutCompression.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdBytesOutCompression.setDescription('A read-write INTEGER variable.')
thresholdBytesIntoDecompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 7, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdBytesIntoDecompression.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdBytesIntoDecompression.setDescription('A read-write INTEGER variable.')
thresholdBytesOutDecompression = MibScalar((1, 3, 6, 1, 4, 1, 3716, 1, 2, 7, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: thresholdBytesOutDecompression.setStatus('mandatory')
if mibBuilder.loadTexts: thresholdBytesOutDecompression.setDescription('A read-write INTEGER variable.')
trapsPortsInUse = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,1))
if mibBuilder.loadTexts: trapsPortsInUse.setDescription('Trap')
trapsMaxPortsUsed = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,2))
if mibBuilder.loadTexts: trapsMaxPortsUsed.setDescription('Trap')
trapsPortsInUseIncoming = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,3))
if mibBuilder.loadTexts: trapsPortsInUseIncoming.setDescription('Trap')
trapsPortsInUseOutgoing = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,4))
if mibBuilder.loadTexts: trapsPortsInUseOutgoing.setDescription('Trap')
trapsOverrallCompressionRatioOfAllPorts = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,5))
if mibBuilder.loadTexts: trapsOverrallCompressionRatioOfAllPorts.setDescription('Trap')
trapsTotalCallsMade = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,6))
if mibBuilder.loadTexts: trapsTotalCallsMade.setDescription('Trap')
trapsFailedOutgoingCalls = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,7))
if mibBuilder.loadTexts: trapsFailedOutgoingCalls.setDescription('Trap')
trapsTotalCallsReceivedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,8))
if mibBuilder.loadTexts: trapsTotalCallsReceivedPerMinute.setDescription('Trap')
trapsTotalCallsReceivedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,9))
if mibBuilder.loadTexts: trapsTotalCallsReceivedPerHour.setDescription('Trap')
trapsTotalCallsReceivedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,10))
if mibBuilder.loadTexts: trapsTotalCallsReceivedPerDay.setDescription('Trap')
trapsTotalCallsMadePerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,11))
if mibBuilder.loadTexts: trapsTotalCallsMadePerMinute.setDescription('Trap')
trapsTotalCallsMadePerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,12))
if mibBuilder.loadTexts: trapsTotalCallsMadePerHour.setDescription('Trap')
trapsTotalCallsMadePerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,13))
if mibBuilder.loadTexts: trapsTotalCallsMadePerDay.setDescription('Trap')
trapsTotalCallsReceived = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,14))
if mibBuilder.loadTexts: trapsTotalCallsReceived.setDescription('Trap')
trapsMaxSessionsUsed = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,15))
if mibBuilder.loadTexts: trapsMaxSessionsUsed.setDescription('Trap')
trapsTotalNumberUserSessionGranted = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,16))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionGranted.setDescription('Trap')
trapsTotalNumberUserSessionRefused = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,17))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionRefused.setDescription('Trap')
trapsTotalNumberUserSessionsGrantedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,18))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionsGrantedPerMinute.setDescription('Trap')
trapsTotalNumberUserSessionGrantedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,19))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionGrantedPerHour.setDescription('Trap')
trapsTotalNumberUserSessionGrantedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,20))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionGrantedPerDay.setDescription('Trap')
trapsTotalNumberUserSessionRefusedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,21))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionRefusedPerMinute.setDescription('Trap')
trapsTotalNumberUserSessionRefusedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,22))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionRefusedPerHour.setDescription('Trap')
trapsTotalNumberUserSessionRefusedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,23))
if mibBuilder.loadTexts: trapsTotalNumberUserSessionRefusedPerDay.setDescription('Trap')
trapsTotalActiveUserSession = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,24))
if mibBuilder.loadTexts: trapsTotalActiveUserSession.setDescription('Trap')
trapsApolloActiveUserSessions = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,25))
if mibBuilder.loadTexts: trapsApolloActiveUserSessions.setDescription('Trap')
trapsApolloNumberUserSessionsGranted = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,26))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsGranted.setDescription('Trap')
trapsApolloNumberUserSessionsrefused = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,27))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsrefused.setDescription('Trap')
trapsApolloNumberUserSessionsGrantedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,28))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsGrantedPerMinute.setDescription('Trap')
trapsApolloNumberUserSessionsGrantedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,29))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsGrantedPerHour.setDescription('Trap')
trapsApolloNumberUserSessionsGrantedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,30))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsGrantedPerDay.setDescription('Trap')
trapsApolloNumberUserSessionsRefusedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,31))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsRefusedPerMinute.setDescription('Trap')
trapsApolloNumberUserSessionsRefusedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,32))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsRefusedPerHour.setDescription('Trap')
trapsApolloNumberUserSessionsRefusedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,33))
if mibBuilder.loadTexts: trapsApolloNumberUserSessionsRefusedPerDay.setDescription('Trap')
trapsApolloMaximumSessionsUsed = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,34))
if mibBuilder.loadTexts: trapsApolloMaximumSessionsUsed.setDescription('Trap')
trapsPPPActiveUserSessions = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,35))
if mibBuilder.loadTexts: trapsPPPActiveUserSessions.setDescription('Trap')
trapsPPPNumberUserSessionsGranted = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,36))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsGranted.setDescription('Trap')
trapsPPPNumberUserSessionsRefused = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,37))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsRefused.setDescription('Trap')
trapsPPPNumberUserSessionsGrantedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,38))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsGrantedPerMinute.setDescription('Trap')
trapsPPPNumberUserSessionsGrantedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,39))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsGrantedPerHour.setDescription('Trap')
trapsPPPNumberUserSessionsGrantedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,40))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsGrantedPerDay.setDescription('Trap')
trapsPPPNumberUserSessionsRefusedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,41))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsRefusedPerMinute.setDescription('Trap')
trapsPPPNumberUserSessionsRefusedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,42))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsRefusedPerHour.setDescription('Trap')
trapsPPPNumberUserSessionsRefusedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,43))
if mibBuilder.loadTexts: trapsPPPNumberUserSessionsRefusedPerDay.setDescription('Trap')
trapsPPPMaximumSessionsUsed = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,44))
if mibBuilder.loadTexts: trapsPPPMaximumSessionsUsed.setDescription('Trap')
trapsNumberBytesReceivedPerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,45))
if mibBuilder.loadTexts: trapsNumberBytesReceivedPerSecond.setDescription('Trap')
trapsNumberBytesReceivedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,46))
if mibBuilder.loadTexts: trapsNumberBytesReceivedPerMinute.setDescription('Trap')
trapsNumberBytesReceivedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,47))
if mibBuilder.loadTexts: trapsNumberBytesReceivedPerHour.setDescription('Trap')
trapsNumberBytesReceivedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,48))
if mibBuilder.loadTexts: trapsNumberBytesReceivedPerDay.setDescription('Trap')
trapsNumberBytesTransmittedPerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,49))
if mibBuilder.loadTexts: trapsNumberBytesTransmittedPerSecond.setDescription('Trap')
trapsNumberBytesTransmittedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,50))
if mibBuilder.loadTexts: trapsNumberBytesTransmittedPerMinute.setDescription('Trap')
trapsNumberBytesTransmittedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,51))
if mibBuilder.loadTexts: trapsNumberBytesTransmittedPerHour.setDescription('Trap')
trapsNumberBytesTransmittedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,52))
if mibBuilder.loadTexts: trapsNumberBytesTransmittedPerDay.setDescription('Trap')
trapsPacketsTransmittedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,53))
if mibBuilder.loadTexts: trapsPacketsTransmittedPerMinute.setDescription('Trap')
trapsPacketsTransmittedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,54))
if mibBuilder.loadTexts: trapsPacketsTransmittedPerHour.setDescription('Trap')
trapsPacketsTransmittedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,55))
if mibBuilder.loadTexts: trapsPacketsTransmittedPerDay.setDescription('Trap')
trapsPacketsReceivedPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,56))
if mibBuilder.loadTexts: trapsPacketsReceivedPerMinute.setDescription('Trap')
trapsPacketsReceivedPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,57))
if mibBuilder.loadTexts: trapsPacketsReceivedPerHour.setDescription('Trap')
trapsPacketsReceivedPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,58))
if mibBuilder.loadTexts: trapsPacketsReceivedPerDay.setDescription('Trap')
trapsPacketReceivedPerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,59))
if mibBuilder.loadTexts: trapsPacketReceivedPerSecond.setDescription('Trap')
trapsPacketTransmittedPerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,60))
if mibBuilder.loadTexts: trapsPacketTransmittedPerSecond.setDescription('Trap')
trapsTotalPacketReceived = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,61))
if mibBuilder.loadTexts: trapsTotalPacketReceived.setDescription('Trap')
trapsTotalPacketTransmitted = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,62))
if mibBuilder.loadTexts: trapsTotalPacketTransmitted.setDescription('Trap')
trapsTotalNumberBytesTransmitted = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,63))
if mibBuilder.loadTexts: trapsTotalNumberBytesTransmitted.setDescription('Trap')
trapsTotalNumberBytesReceived = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,64))
if mibBuilder.loadTexts: trapsTotalNumberBytesReceived.setDescription('Trap')
trapsTotalNumberReceivedErrors = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,65))
if mibBuilder.loadTexts: trapsTotalNumberReceivedErrors.setDescription('Trap')
trapsTotalNumberTransmitErrors = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,66))
if mibBuilder.loadTexts: trapsTotalNumberTransmitErrors.setDescription('Trap')
trapsTotalNumberReceivedErrorsPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,67))
if mibBuilder.loadTexts: trapsTotalNumberReceivedErrorsPerMinute.setDescription('Trap')
trapsTotalNumberReceivedErrorsPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,68))
if mibBuilder.loadTexts: trapsTotalNumberReceivedErrorsPerHour.setDescription('Trap')
trapsTotalNumberReceivedErrorsPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,69))
if mibBuilder.loadTexts: trapsTotalNumberReceivedErrorsPerDay.setDescription('Trap')
trapsTotalNumberTransmitErrorsPerMinute = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,70))
if mibBuilder.loadTexts: trapsTotalNumberTransmitErrorsPerMinute.setDescription('Trap')
trapsTotalNumberTransmitErrorsPerHour = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,71))
if mibBuilder.loadTexts: trapsTotalNumberTransmitErrorsPerHour.setDescription('Trap')
trapsTotalNumberTransmitErrorsPerDay = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,72))
if mibBuilder.loadTexts: trapsTotalNumberTransmitErrorsPerDay.setDescription('Trap')
trapsMaximumErrorRatePerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,73))
if mibBuilder.loadTexts: trapsMaximumErrorRatePerSecond.setDescription('Trap')
trapsTotalErrorRatePerSecond = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,74))
if mibBuilder.loadTexts: trapsTotalErrorRatePerSecond.setDescription('Trap')
trapsCurrentClock = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,75))
if mibBuilder.loadTexts: trapsCurrentClock.setDescription('Trap')
trapsCurrentMemoryUsedByDriver = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,76))
if mibBuilder.loadTexts: trapsCurrentMemoryUsedByDriver.setDescription('Trap')
trapsMaximumMemoryUsedByDriver = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,77))
if mibBuilder.loadTexts: trapsMaximumMemoryUsedByDriver.setDescription('Trap')
trapsPercentCurrentMemoryUsedByDriver = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,78))
if mibBuilder.loadTexts: trapsPercentCurrentMemoryUsedByDriver.setDescription('Trap')
trapsPercentMaximumMemoryUsedByDriver = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,79))
if mibBuilder.loadTexts: trapsPercentMaximumMemoryUsedByDriver.setDescription('Trap')
trapsTotalMemoryAvailableToTheDriver = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,80))
if mibBuilder.loadTexts: trapsTotalMemoryAvailableToTheDriver.setDescription('Trap')
trapsBytesIntoCompression = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,81))
if mibBuilder.loadTexts: trapsBytesIntoCompression.setDescription('Trap')
trapsBytesOutCompression = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,82))
if mibBuilder.loadTexts: trapsBytesOutCompression.setDescription('Trap')
trapsBytesIntoDecompression = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,83))
if mibBuilder.loadTexts: trapsBytesIntoDecompression.setDescription('Trap')
trapsBytesOutDecompression = NotificationType((1, 3, 6, 1, 4, 1, 3716, 1, 3) + (0,84))
if mibBuilder.loadTexts: trapsBytesOutDecompression.setDescription('Trap')
mibBuilder.exportSymbols("APSNMP-MIB", trapsTotalNumberTransmitErrorsPerDay=trapsTotalNumberTransmitErrorsPerDay, trapsTotalPacketTransmitted=trapsTotalPacketTransmitted, statsPacketTransmittedPerSecond=statsPacketTransmittedPerSecond, trapsTotalNumberUserSessionsGrantedPerMinute=trapsTotalNumberUserSessionsGrantedPerMinute, trapsApolloNumberUserSessionsRefusedPerMinute=trapsApolloNumberUserSessionsRefusedPerMinute, trapsNumberBytesTransmittedPerMinute=trapsNumberBytesTransmittedPerMinute, statsTotalNumberUserSessionGrantedPerHour=statsTotalNumberUserSessionGrantedPerHour, statsApolloActiveUserSessions=statsApolloActiveUserSessions, thresholdApolloMaximumSessionsUsed=thresholdApolloMaximumSessionsUsed, trapsBytesIntoCompression=trapsBytesIntoCompression, statsSessionForPPP=statsSessionForPPP, thresholdApolloNumberUserSessionsGranted=thresholdApolloNumberUserSessionsGranted, thresholdMaxSessionsUsed=thresholdMaxSessionsUsed, trapsPPPNumberUserSessionsGrantedPerDay=trapsPPPNumberUserSessionsGrantedPerDay, thresholdTotalNumberUserSessionGranted=thresholdTotalNumberUserSessionGranted, trapsPPPMaximumSessionsUsed=trapsPPPMaximumSessionsUsed, thresholdNumberBytesTransmittedPerDay=thresholdNumberBytesTransmittedPerDay, thresholdMaximumErrorRatePerSecond=thresholdMaximumErrorRatePerSecond, thresholdPercentMaximumMemoryUsedByDriver=thresholdPercentMaximumMemoryUsedByDriver, trapsApolloNumberUserSessionsGrantedPerMinute=trapsApolloNumberUserSessionsGrantedPerMinute, thresholdApolloActiveUserSessions=thresholdApolloActiveUserSessions, thresholdTotalNumberBytesTransmitted=thresholdTotalNumberBytesTransmitted, thresholdBytesOutDecompression=thresholdBytesOutDecompression, trapsPPPActiveUserSessions=trapsPPPActiveUserSessions, statsTotalCallsMadePerHour=statsTotalCallsMadePerHour, apolloTrapsForNT=apolloTrapsForNT, statsTotalNumberTransmitErrorsPerMinute=statsTotalNumberTransmitErrorsPerMinute, statsPacketsReceivedPerHour=statsPacketsReceivedPerHour, statsTotalErrorRatePerSecond=statsTotalErrorRatePerSecond, thresholdTotalNumberUserSessionRefusedPerHour=thresholdTotalNumberUserSessionRefusedPerHour, statsTotalNumberUserSessionRefusedPerHour=statsTotalNumberUserSessionRefusedPerHour, statsPPPNumberUserSessionsRefusedPerMinute=statsPPPNumberUserSessionsRefusedPerMinute, thresholdPPPNumberUserSessionsRefusedPerHour=thresholdPPPNumberUserSessionsRefusedPerHour, statsPercentCurrentMemoryUsedByDriver=statsPercentCurrentMemoryUsedByDriver, trapsApolloNumberUserSessionsGranted=trapsApolloNumberUserSessionsGranted, trapsPPPNumberUserSessionsRefused=trapsPPPNumberUserSessionsRefused, statsTotalCallsMade=statsTotalCallsMade, statsPPPNumberUserSessionsGrantedPerHour=statsPPPNumberUserSessionsGrantedPerHour, statsNumberBytesTransmittedPerMinute=statsNumberBytesTransmittedPerMinute, statsTotalNumberUserSessionRefusedPerMinute=statsTotalNumberUserSessionRefusedPerMinute, statsPacketsTransmittedPerHour=statsPacketsTransmittedPerHour, statsTotalPacketTransmitted=statsTotalPacketTransmitted, statsTotalNumberTransmitErrorsPerHour=statsTotalNumberTransmitErrorsPerHour, thresholdApolloNumberUserSessionsRefusedPerDay=thresholdApolloNumberUserSessionsRefusedPerDay, statsNumberBytesReceivedPerMinute=statsNumberBytesReceivedPerMinute, thresholdForSession=thresholdForSession, statsTotalPacketReceived=statsTotalPacketReceived, trapsTotalNumberUserSessionGrantedPerHour=trapsTotalNumberUserSessionGrantedPerHour, trapsTotalActiveUserSession=trapsTotalActiveUserSession, trapsApolloNumberUserSessionsGrantedPerHour=trapsApolloNumberUserSessionsGrantedPerHour, trapsPPPNumberUserSessionsGranted=trapsPPPNumberUserSessionsGranted, statsApolloNumberUserSessionsRefusedPerMinute=statsApolloNumberUserSessionsRefusedPerMinute, trapsPacketsReceivedPerHour=trapsPacketsReceivedPerHour, thresholdBytesIntoCompression=thresholdBytesIntoCompression, statsPortsInUseOutgoing=statsPortsInUseOutgoing, trapsApolloNumberUserSessionsRefusedPerHour=trapsApolloNumberUserSessionsRefusedPerHour, thresholdPacketsTransmittedPerHour=thresholdPacketsTransmittedPerHour, thresholdPPPActiveUserSessions=thresholdPPPActiveUserSessions, trapsPortsInUseIncoming=trapsPortsInUseIncoming, thresholdNumberBytesTransmittedPerSecond=thresholdNumberBytesTransmittedPerSecond, thresholdCurrentClock=thresholdCurrentClock, trapsPercentCurrentMemoryUsedByDriver=trapsPercentCurrentMemoryUsedByDriver, trapsPacketTransmittedPerSecond=trapsPacketTransmittedPerSecond, statsTotalNumberUserSessionGranted=statsTotalNumberUserSessionGranted, thresholdOverrallCompressionRatioOfAllPorts=thresholdOverrallCompressionRatioOfAllPorts, thresholdNumberBytesReceivedPerMinute=thresholdNumberBytesReceivedPerMinute, trapsTotalNumberReceivedErrorsPerHour=trapsTotalNumberReceivedErrorsPerHour, statsForDriver=statsForDriver, trapsTotalNumberTransmitErrorsPerMinute=trapsTotalNumberTransmitErrorsPerMinute, statsTotalNumberReceivedErrorsPerDay=statsTotalNumberReceivedErrorsPerDay, thresholdTotalNumberUserSessionRefusedPerMinute=thresholdTotalNumberUserSessionRefusedPerMinute, thresholdForPort=thresholdForPort, thresholdNumberBytesTransmittedPerHour=thresholdNumberBytesTransmittedPerHour, trapsPPPNumberUserSessionsGrantedPerHour=trapsPPPNumberUserSessionsGrantedPerHour, trapsPacketsReceivedPerDay=trapsPacketsReceivedPerDay, statsApolloNumberUserSessionsrefused=statsApolloNumberUserSessionsrefused, trapsPPPNumberUserSessionsRefusedPerHour=trapsPPPNumberUserSessionsRefusedPerHour, trapsPacketsReceivedPerMinute=trapsPacketsReceivedPerMinute, trapsMaximumErrorRatePerSecond=trapsMaximumErrorRatePerSecond, statsTotalNumberUserSessionsGrantedPerMinute=statsTotalNumberUserSessionsGrantedPerMinute, statsApolloNumberUserSessionsRefusedPerHour=statsApolloNumberUserSessionsRefusedPerHour, thresholdTotalCallsMadePerHour=thresholdTotalCallsMadePerHour, statsTotalNumberUserSessionRefused=statsTotalNumberUserSessionRefused, trapsTotalErrorRatePerSecond=trapsTotalErrorRatePerSecond, statsTotalCallsReceivedPerHour=statsTotalCallsReceivedPerHour, thresholdTotalCallsMadePerMinute=thresholdTotalCallsMadePerMinute, thresholdTotalNumberUserSessionRefused=thresholdTotalNumberUserSessionRefused, thresholdBytesIntoDecompression=thresholdBytesIntoDecompression, trapsMaxPortsUsed=trapsMaxPortsUsed, thresholdMaximumMemoryUsedByDriver=thresholdMaximumMemoryUsedByDriver, statsMaxPortsUsed=statsMaxPortsUsed, statsApolloNumberUserSessionsGrantedPerMinute=statsApolloNumberUserSessionsGrantedPerMinute, statsTotalCallsMadePerDay=statsTotalCallsMadePerDay, trapsNumberBytesReceivedPerDay=trapsNumberBytesReceivedPerDay, statsCurrentClock=statsCurrentClock, statsTotalNumberReceivedErrors=statsTotalNumberReceivedErrors, trapsTotalNumberUserSessionGrantedPerDay=trapsTotalNumberUserSessionGrantedPerDay, trapsTotalCallsMadePerDay=trapsTotalCallsMadePerDay, trapsNumberBytesTransmittedPerSecond=trapsNumberBytesTransmittedPerSecond, thresholdApolloNumberUserSessionsGrantedPerMinute=thresholdApolloNumberUserSessionsGrantedPerMinute, statsPPPNumberUserSessionsGrantedPerDay=statsPPPNumberUserSessionsGrantedPerDay, thresholdTotalNumberReceivedErrorsPerHour=thresholdTotalNumberReceivedErrorsPerHour, trapsTotalCallsMadePerMinute=trapsTotalCallsMadePerMinute, statsTotalCallsMadePerMinute=statsTotalCallsMadePerMinute, trapsPacketsTransmittedPerDay=trapsPacketsTransmittedPerDay, trapsMaximumMemoryUsedByDriver=trapsMaximumMemoryUsedByDriver, statsTotalCallsReceived=statsTotalCallsReceived, thresholdApolloNumberUserSessionsGrantedPerHour=thresholdApolloNumberUserSessionsGrantedPerHour, thresholdTotalNumberTransmitErrorsPerDay=thresholdTotalNumberTransmitErrorsPerDay, trapsApolloMaximumSessionsUsed=trapsApolloMaximumSessionsUsed, trapsTotalNumberUserSessionRefusedPerMinute=trapsTotalNumberUserSessionRefusedPerMinute, thresholdPercentCurrentMemoryUsedByDriver=thresholdPercentCurrentMemoryUsedByDriver, trapsPortsInUseOutgoing=trapsPortsInUseOutgoing, statsApolloNumberUserSessionsGranted=statsApolloNumberUserSessionsGranted, thresholdPPPNumberUserSessionsRefusedPerDay=thresholdPPPNumberUserSessionsRefusedPerDay, trapsPacketsTransmittedPerHour=trapsPacketsTransmittedPerHour, thresholdForDriver=thresholdForDriver, statsForError=statsForError, statsMaximumMemoryUsedByDriver=statsMaximumMemoryUsedByDriver, statsSessionForGeneral=statsSessionForGeneral, statsPortsInUse=statsPortsInUse, statsTotalMemoryAvailableToTheDriver=statsTotalMemoryAvailableToTheDriver, thresholdTotalNumberUserSessionRefusedPerDay=thresholdTotalNumberUserSessionRefusedPerDay, trapsTotalCallsReceivedPerMinute=trapsTotalCallsReceivedPerMinute, statsNumberBytesReceivedPerHour=statsNumberBytesReceivedPerHour, statsPacketsTransmittedPerDay=statsPacketsTransmittedPerDay, trapsTotalCallsReceivedPerDay=trapsTotalCallsReceivedPerDay, thresholdPortsInUseIncoming=thresholdPortsInUseIncoming, statsBytesIntoDecompression=statsBytesIntoDecompression, thresholdTotalNumberTransmitErrorsPerHour=thresholdTotalNumberTransmitErrorsPerHour, statsMaxSessionsUsed=statsMaxSessionsUsed, thresholdPortsInUseOutgoing=thresholdPortsInUseOutgoing, statsNumberBytesReceivedPerSecond=statsNumberBytesReceivedPerSecond, trapsTotalNumberReceivedErrorsPerDay=trapsTotalNumberReceivedErrorsPerDay, trapsPortsInUse=trapsPortsInUse, thresholdTotalNumberUserSessionGrantedPerDay=thresholdTotalNumberUserSessionGrantedPerDay, trapsMaxSessionsUsed=trapsMaxSessionsUsed, trapsApolloNumberUserSessionsRefusedPerDay=trapsApolloNumberUserSessionsRefusedPerDay, trapsCurrentClock=trapsCurrentClock, thresholdApolloNumberUserSessionsGrantedPerDay=thresholdApolloNumberUserSessionsGrantedPerDay, thresholdPPPNumberUserSessionsGranted=thresholdPPPNumberUserSessionsGranted, thresholdNumberBytesReceivedPerDay=thresholdNumberBytesReceivedPerDay, thresholdTotalNumberReceivedErrorsPerDay=thresholdTotalNumberReceivedErrorsPerDay, trapsTotalNumberUserSessionGranted=trapsTotalNumberUserSessionGranted, statsPPPNumberUserSessionsRefusedPerDay=statsPPPNumberUserSessionsRefusedPerDay, statsTotalNumberReceivedErrorsPerMinute=statsTotalNumberReceivedErrorsPerMinute, thresholdTotalCallsReceived=thresholdTotalCallsReceived, thresholdPacketsReceivedPerDay=thresholdPacketsReceivedPerDay, trapsTotalNumberUserSessionRefusedPerHour=trapsTotalNumberUserSessionRefusedPerHour, thresholdTotalNumberReceivedErrorsPerMinute=thresholdTotalNumberReceivedErrorsPerMinute, brand=brand, thresholdNumberBytesTransmittedPerMinute=thresholdNumberBytesTransmittedPerMinute, trapsPacketReceivedPerSecond=trapsPacketReceivedPerSecond, statsFailedOutgoingCalls=statsFailedOutgoingCalls, statsNumberBytesReceivedPerDay=statsNumberBytesReceivedPerDay, thresholdPacketsReceivedPerHour=thresholdPacketsReceivedPerHour, statsBytesOutDecompression=statsBytesOutDecompression, trapsTotalCallsReceived=trapsTotalCallsReceived, thresholdForCompression=thresholdForCompression, thresholdTotalCallsReceivedPerHour=thresholdTotalCallsReceivedPerHour, statsTotalCallsReceivedPerMinute=statsTotalCallsReceivedPerMinute, statsPPPMaximumSessionsUsed=statsPPPMaximumSessionsUsed, statsPercentMaximumMemoryUsedByDriver=statsPercentMaximumMemoryUsedByDriver, statsBytesOutCompression=statsBytesOutCompression, thresholdPacketsTransmittedPerDay=thresholdPacketsTransmittedPerDay, statsNumberBytesTransmittedPerHour=statsNumberBytesTransmittedPerHour, statsMaximumErrorRatePerSecond=statsMaximumErrorRatePerSecond, thresholdTotalPacketTransmitted=thresholdTotalPacketTransmitted, trapsApolloNumberUserSessionsrefused=trapsApolloNumberUserSessionsrefused, statsPacketsTransmittedPerMinute=statsPacketsTransmittedPerMinute, statsNumberBytesTransmittedPerDay=statsNumberBytesTransmittedPerDay, thresholdTotalNumberReceivedErrors=thresholdTotalNumberReceivedErrors, thresholdTotalNumberTransmitErrors=thresholdTotalNumberTransmitErrors, trapsTotalNumberTransmitErrorsPerHour=trapsTotalNumberTransmitErrorsPerHour, trapsCurrentMemoryUsedByDriver=trapsCurrentMemoryUsedByDriver, trapsOverrallCompressionRatioOfAllPorts=trapsOverrallCompressionRatioOfAllPorts, trapsTotalCallsMadePerHour=trapsTotalCallsMadePerHour, thresholdTotalMemoryAvailableToTheDriver=thresholdTotalMemoryAvailableToTheDriver, thresholdForCalls=thresholdForCalls, thresholdSessionForPPP=thresholdSessionForPPP, statsTotalCallsReceivedPerDay=statsTotalCallsReceivedPerDay, statsTotalNumberUserSessionRefusedPerDay=statsTotalNumberUserSessionRefusedPerDay, windowsNT=windowsNT, trapsTotalNumberUserSessionRefusedPerDay=trapsTotalNumberUserSessionRefusedPerDay, thresholdPortsInUse=thresholdPortsInUse, trapsTotalNumberUserSessionRefused=trapsTotalNumberUserSessionRefused, trapsBytesOutCompression=trapsBytesOutCompression, statsTotalNumberBytesReceived=statsTotalNumberBytesReceived, thresholdTotalCallsMade=thresholdTotalCallsMade, trapsTotalPacketReceived=trapsTotalPacketReceived, trapsTotalNumberReceivedErrors=trapsTotalNumberReceivedErrors, trapsPercentMaximumMemoryUsedByDriver=trapsPercentMaximumMemoryUsedByDriver, thresholdPacketReceivedPerSecond=thresholdPacketReceivedPerSecond, statsForCompression=statsForCompression, thresholdPacketsTransmittedPerMinute=thresholdPacketsTransmittedPerMinute, trapsBytesOutDecompression=trapsBytesOutDecompression, thresholdTotalPacketReceived=thresholdTotalPacketReceived, thresholdApolloNumberUserSessionsRefusedPerHour=thresholdApolloNumberUserSessionsRefusedPerHour, thresholdNumberBytesReceivedPerSecond=thresholdNumberBytesReceivedPerSecond, statsTotalNumberTransmitErrors=statsTotalNumberTransmitErrors, thresholdPacketsReceivedPerMinute=thresholdPacketsReceivedPerMinute, thresholdSessionForApollo=thresholdSessionForApollo, statsOverrallCompressionRatioOfAllPorts=statsOverrallCompressionRatioOfAllPorts, trapsPacketsTransmittedPerMinute=trapsPacketsTransmittedPerMinute, trapsTotalNumberTransmitErrors=trapsTotalNumberTransmitErrors, thresholdApolloNumberUserSessionsrefused=thresholdApolloNumberUserSessionsrefused, thresholdForData=thresholdForData, statsPPPNumberUserSessionsRefused=statsPPPNumberUserSessionsRefused, trapsTotalNumberBytesTransmitted=trapsTotalNumberBytesTransmitted, trapsPPPNumberUserSessionsGrantedPerMinute=trapsPPPNumberUserSessionsGrantedPerMinute, statsBytesIntoCompression=statsBytesIntoCompression, trapsTotalNumberBytesReceived=trapsTotalNumberBytesReceived, trapsNumberBytesReceivedPerSecond=trapsNumberBytesReceivedPerSecond, trapsPPPNumberUserSessionsRefusedPerMinute=trapsPPPNumberUserSessionsRefusedPerMinute, statsApolloNumberUserSessionsRefusedPerDay=statsApolloNumberUserSessionsRefusedPerDay, statsTotalNumberReceivedErrorsPerHour=statsTotalNumberReceivedErrorsPerHour, statsPacketsReceivedPerMinute=statsPacketsReceivedPerMinute, thresholdFailedOutgoingCalls=thresholdFailedOutgoingCalls, trapsBytesIntoDecompression=trapsBytesIntoDecompression, statsPPPNumberUserSessionsGrantedPerMinute=statsPPPNumberUserSessionsGrantedPerMinute, statsNumberBytesTransmittedPerSecond=statsNumberBytesTransmittedPerSecond, trapsFailedOutgoingCalls=trapsFailedOutgoingCalls, thresholdTotalCallsMadePerDay=thresholdTotalCallsMadePerDay, thresholdTotalActiveUserSession=thresholdTotalActiveUserSession, thresholdPPPNumberUserSessionsGrantedPerHour=thresholdPPPNumberUserSessionsGrantedPerHour, statsCurrentMemoryUsedByDriver=statsCurrentMemoryUsedByDriver, statsForCalls=statsForCalls, trapsNumberBytesReceivedPerHour=trapsNumberBytesReceivedPerHour, trapsTotalCallsReceivedPerHour=trapsTotalCallsReceivedPerHour, thresholdCurrentMemoryUsedByDriver=thresholdCurrentMemoryUsedByDriver, apolloThresholdForNT=apolloThresholdForNT, statsPortsInUseIncoming=statsPortsInUseIncoming, statsTotalNumberBytesTransmitted=statsTotalNumberBytesTransmitted, thresholdTotalCallsReceivedPerDay=thresholdTotalCallsReceivedPerDay, thresholdPPPNumberUserSessionsRefusedPerMinute=thresholdPPPNumberUserSessionsRefusedPerMinute, statsSessionForApollo=statsSessionForApollo, thresholdPacketTransmittedPerSecond=thresholdPacketTransmittedPerSecond, thresholdTotalNumberTransmitErrorsPerMinute=thresholdTotalNumberTransmitErrorsPerMinute, thresholdTotalNumberUserSessionsGrantedPerMinute=thresholdTotalNumberUserSessionsGrantedPerMinute, statsPacketReceivedPerSecond=statsPacketReceivedPerSecond, thresholdMaxPortsUsed=thresholdMaxPortsUsed, thresholdTotalNumberUserSessionGrantedPerHour=thresholdTotalNumberUserSessionGrantedPerHour, trapsNumberBytesTransmittedPerDay=trapsNumberBytesTransmittedPerDay, thresholdSessionForGeneral=thresholdSessionForGeneral, thresholdPPPNumberUserSessionsGrantedPerMinute=thresholdPPPNumberUserSessionsGrantedPerMinute, thresholdPPPNumberUserSessionsGrantedPerDay=thresholdPPPNumberUserSessionsGrantedPerDay, trapsTotalNumberReceivedErrorsPerMinute=trapsTotalNumberReceivedErrorsPerMinute, statsApolloNumberUserSessionsGrantedPerHour=statsApolloNumberUserSessionsGrantedPerHour, statsPPPNumberUserSessionsRefusedPerHour=statsPPPNumberUserSessionsRefusedPerHour, trapsApolloNumberUserSessionsGrantedPerDay=trapsApolloNumberUserSessionsGrantedPerDay, thresholdNumberBytesReceivedPerHour=thresholdNumberBytesReceivedPerHour, statsPPPActiveUserSessions=statsPPPActiveUserSessions, statsPPPNumberUserSessionsGranted=statsPPPNumberUserSessionsGranted, thresholdTotalErrorRatePerSecond=thresholdTotalErrorRatePerSecond)
mibBuilder.exportSymbols("APSNMP-MIB", trapsTotalMemoryAvailableToTheDriver=trapsTotalMemoryAvailableToTheDriver, thresholdPPPNumberUserSessionsRefused=thresholdPPPNumberUserSessionsRefused, statsTotalNumberUserSessionGrantedPerDay=statsTotalNumberUserSessionGrantedPerDay, statsTotalActiveUserSession=statsTotalActiveUserSession, statsApolloNumberUserSessionsGrantedPerDay=statsApolloNumberUserSessionsGrantedPerDay, statsTotalNumberTransmitErrorsPerDay=statsTotalNumberTransmitErrorsPerDay, thresholdPPPMaximumSessionsUsed=thresholdPPPMaximumSessionsUsed, thresholdTotalNumberBytesReceived=thresholdTotalNumberBytesReceived, trapsNumberBytesReceivedPerMinute=trapsNumberBytesReceivedPerMinute, thresholdApolloNumberUserSessionsRefusedPerMinute=thresholdApolloNumberUserSessionsRefusedPerMinute, statsPacketsReceivedPerDay=statsPacketsReceivedPerDay, statsForPort=statsForPort, trapsPPPNumberUserSessionsRefusedPerDay=trapsPPPNumberUserSessionsRefusedPerDay, trapsApolloActiveUserSessions=trapsApolloActiveUserSessions, statsForSession=statsForSession, trapsTotalCallsMade=trapsTotalCallsMade, statsForData=statsForData, thresholdBytesOutCompression=thresholdBytesOutCompression, apolloStatsForNT=apolloStatsForNT, thresholdForError=thresholdForError, trapsNumberBytesTransmittedPerHour=trapsNumberBytesTransmittedPerHour, statsApolloMaximumSessionsUsed=statsApolloMaximumSessionsUsed, thresholdTotalCallsReceivedPerMinute=thresholdTotalCallsReceivedPerMinute)
