#
# PySNMP MIB module Spool-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Spool-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:14:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Unsigned32, Gauge32, IpAddress, MibIdentifier, ModuleIdentity, iso, Counter64, TimeTicks, ObjectIdentity, enterprises, NotificationType, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "Gauge32", "IpAddress", "MibIdentifier", "ModuleIdentity", "iso", "Counter64", "TimeTicks", "ObjectIdentity", "enterprises", "NotificationType", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniSpool = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12))
sniSpoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1))
sniSpoolDevTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1))
sniSpoolSrvTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2))
sniSpoolSpvTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3))
sniSpoolDgrTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4))
sniSpoolHostTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5))
sniSpoolJobTable = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6))
spoolDevTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevTabNum.setDescription('The number of entries in the table spoolDevTab')
spoolDevTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2), )
if mibBuilder.loadTexts: spoolDevTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevTab.setDescription('The spool device table')
spoolDevTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolDevTabIndex"))
if mibBuilder.loadTexts: spoolDevTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevTabEntry.setDescription('An entry in the device table')
spoolDevTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolDevTabNum')
spoolDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevName.setDescription('A unique device identfier string')
spoolDevState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("error", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolDevState.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevState.setDescription('The current state of the device, it has one of these values: ACTIVE, NOT_ACTIVE, DEVICE_ERROR')
spoolDevSpoolin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolDevSpoolin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevSpoolin.setDescription('Current state of the spoolin queue, it is either ON or OFF')
spoolDevSpoolout = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolDevSpoolout.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevSpoolout.setDescription('Current state of the spoolout queue, it is either ON or OFF')
spoolDevErrorMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevErrorMsg.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevErrorMsg.setDescription('The error message in case of DEVICE_ERROR')
spoolDevStaDate = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevStaDate.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevStaDate.setDescription('The date of last state modification')
spoolDevPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevPriority.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevPriority.setDescription('The minimum priority a job must have to be printed on this device')
spoolDevWaitingJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967296))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevWaitingJobs.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevWaitingJobs.setDescription('The number of jobs that are waiting for the device')
spoolDevCurForm = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevCurForm.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevCurForm.setDescription('Currently mounted form')
spoolDevActJid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevActJid.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevActJid.setDescription('Job that is currently printing')
spoolDevHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevHost.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevHost.setDescription('Name of the host the printer is connected to')
spoolDevAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevAdmin.setDescription('Name of the printer administrator')
spoolDevPcl = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevPcl.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevPcl.setDescription('Printer control language used by the printer')
spoolDevDftForm = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevDftForm.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevDftForm.setDescription('The default form used by the printer')
spoolDevSupervisor = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevSupervisor.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevSupervisor.setDescription('The supervisor of the printer')
spoolDevAdmComment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolDevAdmComment.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevAdmComment.setDescription('Comment for the administrator.')
spoolDevUsrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDevUsrComment.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevUsrComment.setDescription('Comment for the user.')
spoolDevEnablePoll = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolDevEnablePoll.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDevEnablePoll.setDescription('Current state of the enable poll option, it is either ON or OFF')
spoolSrvTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvTabNum.setDescription('The number of entries in the tabel spoolSrvTab')
spoolSrvTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2), )
if mibBuilder.loadTexts: spoolSrvTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvTab.setDescription('The spool server table')
spoolSrvTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolSrvTabIndex"))
if mibBuilder.loadTexts: spoolSrvTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvTabEntry.setDescription('An entry in the server table')
spoolSrvTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolSrvTabNum')
spoolSrvName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvName.setDescription('A unique server identifier string')
spoolSrvAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvAdmin.setDescription("Name of the server's administrator")
spoolSrvHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvHost.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvHost.setDescription("Name of the administrator's host")
spoolSrvSchedPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvSchedPolicy.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvSchedPolicy.setDescription('Scheduling policy of the server')
spoolSrvState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("shutdown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvState.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvState.setDescription('The current state of the server, it has one of these values: ACTIVE, NOT_ACTIVE, SHUTDOWN')
spoolSrvSpoolin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvSpoolin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvSpoolin.setDescription('Current state of the spoolin queue, it is either ON or OFF')
spoolSrvSpoolout = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvSpoolout.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvSpoolout.setDescription('Current state of the spoolout queue, it is either ON or OFF')
spoolSrvLoadLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvLoadLevel.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvLoadLevel.setDescription('Load level of the server')
spoolSrvMaxJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4294967296))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvMaxJobs.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvMaxJobs.setDescription('Maximal allowed print jobs')
spoolSrvWaitingJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967296))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSrvWaitingJobs.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSrvWaitingJobs.setDescription('The number of waiting jobs')
spoolSpvTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvTabNum.setDescription('The number of entries in the tabel spoolSpvTab')
spoolSpvTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2), )
if mibBuilder.loadTexts: spoolSpvTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvTab.setDescription('The spool supervisor table')
spoolSpvTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolSpvTabIndex"))
if mibBuilder.loadTexts: spoolSpvTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvTabEntry.setDescription('An entry in the supervisor table')
spoolSpvTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolSpvTabNum')
spoolSpvName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvName.setDescription('A unique supervisor identifier string')
spoolSpvServName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvServName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvServName.setDescription("The name of the supervisor's server")
spoolSpvAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvAdmin.setDescription("Name of the supervisors's administrator")
spoolSpvHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvHost.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvHost.setDescription("Name of the supervisors's host")
spoolSpvState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("shutdown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolSpvState.setStatus('mandatory')
if mibBuilder.loadTexts: spoolSpvState.setDescription('The current state of the supervisor, it has one of these values: ACTIVE, NOT_ACTIVE, SHUTDOWN')
spoolDgrTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrTabNum.setDescription('The number of entries in the table spoolDgrTab')
spoolDgrTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2), )
if mibBuilder.loadTexts: spoolDgrTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrTab.setDescription('The spool device group table')
spoolDgrTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolDgrTabIndex"))
if mibBuilder.loadTexts: spoolDgrTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrTabEntry.setDescription('An entry in the device group table')
spoolDgrTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolDgrTabNum')
spoolDgrName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrName.setDescription('A unique device group identifier string')
spoolDgrAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrAdmin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrAdmin.setDescription('The name of the administrator of the device group')
spoolDgrDeviceList = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrDeviceList.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrDeviceList.setDescription('The list of printer devices')
spoolDgrSpoolin = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrSpoolin.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrSpoolin.setDescription('Current state of the spoolin queue, it is either ON or OFF')
spoolDgrDate = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrDate.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrDate.setDescription('The date of the last state modification')
spoolDgrComment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 4, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolDgrComment.setStatus('mandatory')
if mibBuilder.loadTexts: spoolDgrComment.setDescription('Comment for the last state modification')
spoolHostTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostTabNum.setDescription('The number of entries in the table spoolHostTab')
spoolHostTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2), )
if mibBuilder.loadTexts: spoolHostTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostTab.setDescription('The spool host group table')
spoolHostTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolHostTabIndex"))
if mibBuilder.loadTexts: spoolHostTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostTabEntry.setDescription('An entry in the host group table')
spoolHostTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolHostTabNum')
spoolHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostName.setDescription('A unique host identifier string')
spoolHostDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostDestination.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostDestination.setDescription("The name of the host's standard printer")
spoolHostSuppHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostSuppHost.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostSuppHost.setDescription('The name of the host which database is used by this host (only for parasite hosts)')
spoolHostResponsibility = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("potmaster", 1), ("slave", 2), ("parasite", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostResponsibility.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostResponsibility.setDescription('The responsibility of the host.')
spoolHostState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("activemaster", 2), ("inactive", 3), ("shutdown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolHostState.setStatus('mandatory')
if mibBuilder.loadTexts: spoolHostState.setDescription('The current state of the host, it has one of these values: ACTIVE, ACTIVE_MASTER, NOT_ACTIVE, SHUTDOWN')
spoolJobTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTabNum.setDescription('The number of entries in the table spoolJobTab')
spoolJobTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2), )
if mibBuilder.loadTexts: spoolJobTab.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTab.setDescription('The spool host group table')
spoolJobTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1), ).setIndexNames((0, "Spool-MIB", "spoolJobTabIndex"))
if mibBuilder.loadTexts: spoolJobTabEntry.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTabEntry.setDescription('An entry in the job table')
spoolJobTabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobTabIndex.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTabIndex.setDescription('A unique value for each entry, its value ranges between 1 and the value of spoolJobTabNum')
spoolJobGlobalJid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobGlobalJid.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobGlobalJid.setDescription('A unique (network-wide) job identifier string')
spoolJobLocalJid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobLocalJid.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobLocalJid.setDescription('A unique (on local host) job identifier string')
spoolJobTitle = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobTitle.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTitle.setDescription('Job title')
spoolJobComment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobComment.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobComment.setDescription('Comment for the job')
spoolJobOriginator = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobOriginator.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobOriginator.setDescription('Originator of the job')
spoolJobOrigHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobOrigHost.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobOrigHost.setDescription('Origination host of the job')
spoolJobOrigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobOrigTime.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobOrigTime.setDescription('Origination date/time of the job')
spoolJobDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolJobDestination.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobDestination.setDescription('Destination device of the job')
spoolJobPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolJobPriority.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobPriority.setDescription('Priority of the job')
spoolJobSecurityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unclassified", 1), ("sensitive", 2), ("confidential", 3), ("secret", 4), ("topsecret", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobSecurityLevel.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobSecurityLevel.setDescription('Security level of the job')
spoolJobFileList = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobFileList.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobFileList.setDescription('File list of the job')
spoolJobTotalSize = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967296))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobTotalSize.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobTotalSize.setDescription('Total size (in Bytes) of the job.')
spoolJobRawMode = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobRawMode.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobRawMode.setDescription('Whether job is printed in raw mode.')
spoolJobStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobStartTime.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobStartTime.setDescription('Start time of the job.')
spoolJobDelTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobDelTime.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobDelTime.setDescription('Deletion time of the job.')
spoolJobRetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 4294967296))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobRetTime.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobRetTime.setDescription('Retention time of the job (in minutes).')
spoolJobDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobDevName.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobDevName.setDescription('Actual device on which the job is printed.')
spoolJobState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("active", 1), ("wait", 2), ("suspend", 3), ("top", 4), ("data-filtering", 5), ("file-transfer", 6), ("error", 7), ("terminated", 8), ("interrupted", 9), ("cancel", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spoolJobState.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobState.setDescription('State of the job.')
spoolJobErrorMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobErrorMsg.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobErrorMsg.setDescription('The error message in case of state == DEVICE_ERROR.')
spoolJobRank = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobRank.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobRank.setDescription('Rank in the job queue.')
spoolJobRqCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobRqCopies.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobRqCopies.setDescription('Requested copies.')
spoolJobPrCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobPrCopies.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobPrCopies.setDescription('Printed copies.')
spoolJobPrPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 12, 1, 6, 2, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spoolJobPrPercent.setStatus('mandatory')
if mibBuilder.loadTexts: spoolJobPrPercent.setDescription('Percent printed.')
mibBuilder.exportSymbols("Spool-MIB", spoolSpvName=spoolSpvName, spoolHostTabEntry=spoolHostTabEntry, spoolSrvLoadLevel=spoolSrvLoadLevel, spoolSrvTabEntry=spoolSrvTabEntry, spoolSrvName=spoolSrvName, spoolJobOriginator=spoolJobOriginator, spoolJobGlobalJid=spoolJobGlobalJid, spoolDevSpoolout=spoolDevSpoolout, spoolJobTabNum=spoolJobTabNum, sniProductMibs=sniProductMibs, spoolJobTotalSize=spoolJobTotalSize, spoolDevName=spoolDevName, spoolDevSpoolin=spoolDevSpoolin, spoolDgrAdmin=spoolDgrAdmin, spoolJobFileList=spoolJobFileList, spoolDevPriority=spoolDevPriority, spoolDevState=spoolDevState, spoolDgrDeviceList=spoolDgrDeviceList, sniSpoolDevTable=sniSpoolDevTable, spoolHostDestination=spoolHostDestination, spoolJobSecurityLevel=spoolJobSecurityLevel, spoolJobState=spoolJobState, spoolSpvAdmin=spoolSpvAdmin, spoolSrvSpoolout=spoolSrvSpoolout, spoolDgrTabEntry=spoolDgrTabEntry, spoolSrvSchedPolicy=spoolSrvSchedPolicy, spoolDevAdmComment=spoolDevAdmComment, sniSpool=sniSpool, spoolJobComment=spoolJobComment, spoolDevStaDate=spoolDevStaDate, spoolSpvServName=spoolSpvServName, spoolHostTabNum=spoolHostTabNum, spoolDevErrorMsg=spoolDevErrorMsg, spoolHostTab=spoolHostTab, sni=sni, spoolDevPcl=spoolDevPcl, spoolJobDelTime=spoolJobDelTime, spoolDevWaitingJobs=spoolDevWaitingJobs, spoolJobPriority=spoolJobPriority, spoolSrvWaitingJobs=spoolSrvWaitingJobs, spoolDevCurForm=spoolDevCurForm, spoolDgrTabIndex=spoolDgrTabIndex, spoolJobRawMode=spoolJobRawMode, spoolDgrComment=spoolDgrComment, spoolHostTabIndex=spoolHostTabIndex, spoolJobOrigTime=spoolJobOrigTime, spoolSrvState=spoolSrvState, spoolJobDevName=spoolJobDevName, spoolHostState=spoolHostState, spoolJobPrCopies=spoolJobPrCopies, spoolHostName=spoolHostName, spoolDgrTab=spoolDgrTab, spoolJobErrorMsg=spoolJobErrorMsg, spoolSrvMaxJobs=spoolSrvMaxJobs, spoolJobTabEntry=spoolJobTabEntry, spoolDevTabEntry=spoolDevTabEntry, spoolDgrSpoolin=spoolDgrSpoolin, spoolSpvTabIndex=spoolSpvTabIndex, spoolSrvSpoolin=spoolSrvSpoolin, spoolJobOrigHost=spoolJobOrigHost, spoolDgrName=spoolDgrName, spoolDevSupervisor=spoolDevSupervisor, sniSpoolSpvTable=sniSpoolSpvTable, spoolSpvState=spoolSpvState, spoolHostResponsibility=spoolHostResponsibility, spoolSrvHost=spoolSrvHost, spoolDevTabIndex=spoolDevTabIndex, spoolSrvTabIndex=spoolSrvTabIndex, spoolDevEnablePoll=spoolDevEnablePoll, spoolDevUsrComment=spoolDevUsrComment, spoolSpvTab=spoolSpvTab, spoolJobTabIndex=spoolJobTabIndex, spoolDevTab=spoolDevTab, sniSpoolHostTable=sniSpoolHostTable, spoolJobStartTime=spoolJobStartTime, sniSpoolSrvTable=sniSpoolSrvTable, spoolSpvTabNum=spoolSpvTabNum, spoolSrvTabNum=spoolSrvTabNum, spoolSpvHost=spoolSpvHost, spoolDgrTabNum=spoolDgrTabNum, spoolJobLocalJid=spoolJobLocalJid, spoolSpvTabEntry=spoolSpvTabEntry, spoolJobRqCopies=spoolJobRqCopies, spoolJobTab=spoolJobTab, spoolDgrDate=spoolDgrDate, spoolHostSuppHost=spoolHostSuppHost, spoolJobDestination=spoolJobDestination, spoolDevAdmin=spoolDevAdmin, sniSpoolObjects=sniSpoolObjects, spoolJobRetTime=spoolJobRetTime, spoolDevActJid=spoolDevActJid, spoolSrvAdmin=spoolSrvAdmin, spoolJobPrPercent=spoolJobPrPercent, spoolJobTitle=spoolJobTitle, sniSpoolJobTable=sniSpoolJobTable, spoolDevHost=spoolDevHost, sniSpoolDgrTable=sniSpoolDgrTable, spoolDevTabNum=spoolDevTabNum, spoolJobRank=spoolJobRank, spoolDevDftForm=spoolDevDftForm, spoolSrvTab=spoolSrvTab)
