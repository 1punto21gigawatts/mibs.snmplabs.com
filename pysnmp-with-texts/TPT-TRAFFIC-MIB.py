#
# PySNMP MIB module TPT-TRAFFIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-TRAFFIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:26:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, ModuleIdentity, Counter32, TimeTicks, Integer32, ObjectIdentity, IpAddress, Unsigned32, NotificationType, Counter64, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "ModuleIdentity", "Counter32", "TimeTicks", "Integer32", "ObjectIdentity", "IpAddress", "Unsigned32", "NotificationType", "Counter64", "iso", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tpt_tpa_unkparams, tpt_tpa_objs, tpt_tpa_eventsV2 = mibBuilder.importSymbols("TPT-TPAMIBS-MIB", "tpt-tpa-unkparams", "tpt-tpa-objs", "tpt-tpa-eventsV2")
tpt_traffic = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8)).setLabel("tpt-traffic")
tpt_traffic.setRevisions(('2016-05-25 18:54',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: tpt_traffic.setRevisionsDescriptions(('Updated copyright information. Minor MIB syntax fixes.',))
if mibBuilder.loadTexts: tpt_traffic.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tpt_traffic.setOrganization('Trend Micro, Inc.')
if mibBuilder.loadTexts: tpt_traffic.setContactInfo('www.trendmicro.com')
if mibBuilder.loadTexts: tpt_traffic.setDescription("Traffic management (rate limiters and traffic thresholds). Copyright (C) 2016 Trend Micro Incorporated. All Rights Reserved. Trend Micro makes no warranty of any kind with regard to this material, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose. Trend Micro shall not be liable for errors contained herein or for incidental or consequential damages in connection with the furnishing, performance, or use of this material. This document contains proprietary information, which is protected by copyright. No part of this document may be photocopied, reproduced, or translated into another language without the prior written consent of Trend Micro. The information is provided 'as is' without warranty of any kind and is subject to change without notice. The only warranties for Trend Micro products and services are set forth in the express warranty statements accompanying such products and services. Nothing herein should be construed as constituting an additional warranty. Trend Micro shall not be liable for technical or editorial errors or omissions contained herein. TippingPoint(R), the TippingPoint logo, and Digital Vaccine(R) are registered trademarks of Trend Micro. All other company and product names may be trademarks of their respective holders. All rights reserved. This document contains confidential information, trade secrets or both, which are the property of Trend Micro. No part of this documentation may be reproduced in any form or by any means or used to make any derivative work (such as translation, transformation, or adaptation) without written permission from Trend Micro or one of its subsidiaries. All other company and product names may be trademarks of their respective holders. ")
rateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1), )
if mibBuilder.loadTexts: rateLimitTable.setStatus('current')
if mibBuilder.loadTexts: rateLimitTable.setDescription('High-level (non-sampled) data about an action set with a rate limit.')
rateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "rateLimitGlobalID"))
if mibBuilder.loadTexts: rateLimitEntry.setStatus('current')
if mibBuilder.loadTexts: rateLimitEntry.setDescription('An entry in the rate limit list. Rows cannot be created or deleted. ')
rateLimitGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: rateLimitGlobalID.setStatus('current')
if mibBuilder.loadTexts: rateLimitGlobalID.setDescription('The global identifier of an action set with a rate limit.')
rateLimitRequestedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitRequestedRate.setStatus('current')
if mibBuilder.loadTexts: rateLimitRequestedRate.setDescription('The bit rate (in Kbps) set requested by the action set creator.')
rateLimitActualRate = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitActualRate.setStatus('current')
if mibBuilder.loadTexts: rateLimitActualRate.setDescription('The bit rate (in Kbps) set up at the hardware level.')
rateLimitPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitPacketsSent.setStatus('current')
if mibBuilder.loadTexts: rateLimitPacketsSent.setDescription('The number of packets sent via this rate limiter since last cleared.')
rateLimitPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitPacketsDropped.setStatus('current')
if mibBuilder.loadTexts: rateLimitPacketsDropped.setDescription('The number of packets dropped by this rate limiter since last cleared.')
rateLimitPacketsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitPacketsQueued.setStatus('current')
if mibBuilder.loadTexts: rateLimitPacketsQueued.setDescription('The number of packets queued up to be sent via this rate limiter.')
rateLimitHistNumSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistNumSeconds.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistNumSeconds.setDescription('The number of seconds of valid historical (sampled) data available.')
rateLimitHistNumMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistNumMinutes.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistNumMinutes.setDescription('The number of minutes of valid historical (sampled) data available.')
rateLimitHistNumHours = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistNumHours.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistNumHours.setDescription('The number of hours of valid historical (sampled) data available.')
rateLimitHistSecondsTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2), )
if mibBuilder.loadTexts: rateLimitHistSecondsTable.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsTable.setDescription('Historical (sampled) data every second for a minute.')
rateLimitHistSecondsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "rateLimitHistSecondsGlobalID"), (0, "TPT-TRAFFIC-MIB", "rateLimitHistSecondsIndex"))
if mibBuilder.loadTexts: rateLimitHistSecondsEntry.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsEntry.setDescription('An entry in the rate limit history seconds table. Rows cannot be created or deleted. ')
rateLimitHistSecondsGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: rateLimitHistSecondsGlobalID.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsGlobalID.setDescription('The global identifier of an action set with a rate limit.')
rateLimitHistSecondsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: rateLimitHistSecondsIndex.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsIndex.setDescription('The index (0-59) of the second.')
rateLimitHistSecondsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistSecondsBytesSent.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsBytesSent.setDescription('The number of bytes sent via this rate limiter in the specified second.')
rateLimitHistSecondsTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistSecondsTimestamp.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistSecondsTimestamp.setDescription('The time SecondsBytesSent was updated (in seconds since January 1, 1970).')
rateLimitHistMinutesTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3), )
if mibBuilder.loadTexts: rateLimitHistMinutesTable.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesTable.setDescription('Historical (sampled) data every minute for an hour.')
rateLimitHistMinutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "rateLimitHistMinutesGlobalID"), (0, "TPT-TRAFFIC-MIB", "rateLimitHistMinutesIndex"))
if mibBuilder.loadTexts: rateLimitHistMinutesEntry.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesEntry.setDescription('An entry in the rate limit history minutes table. Rows cannot be created or deleted. ')
rateLimitHistMinutesGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: rateLimitHistMinutesGlobalID.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesGlobalID.setDescription('The global identifier of an action set with a rate limit.')
rateLimitHistMinutesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: rateLimitHistMinutesIndex.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesIndex.setDescription('The index (0-59) of the minute.')
rateLimitHistMinutesBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistMinutesBytesSent.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesBytesSent.setDescription('The number of bytes sent via this rate limiter in the specified minute.')
rateLimitHistMinutesTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistMinutesTimestamp.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistMinutesTimestamp.setDescription('The time MinutesBytesSent was updated (in seconds since January 1, 1970).')
rateLimitHistHoursTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4), )
if mibBuilder.loadTexts: rateLimitHistHoursTable.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursTable.setDescription('Historical (sampled) data every hour for a day.')
rateLimitHistHoursEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "rateLimitHistHoursGlobalID"), (0, "TPT-TRAFFIC-MIB", "rateLimitHistHoursIndex"))
if mibBuilder.loadTexts: rateLimitHistHoursEntry.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursEntry.setDescription('An entry in the rate limit history hours table. Rows cannot be created or deleted. ')
rateLimitHistHoursGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: rateLimitHistHoursGlobalID.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursGlobalID.setDescription('The global identifier of an action set with a rate limit.')
rateLimitHistHoursIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4, 1, 2), Unsigned32())
if mibBuilder.loadTexts: rateLimitHistHoursIndex.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursIndex.setDescription('The index (0-23) of the hour.')
rateLimitHistHoursBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistHoursBytesSent.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursBytesSent.setDescription('The number of bytes sent via this rate limiter in the specified hour.')
rateLimitHistHoursTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rateLimitHistHoursTimestamp.setStatus('current')
if mibBuilder.loadTexts: rateLimitHistHoursTimestamp.setDescription('The time HoursBytesSent was updated (in seconds since January 1, 1970).')
class ThresholdFilterState(TextualConvention, Integer32):
    description = 'The state of a threshold filter: red if the major threshold has been crossed, yellow if the minor threshold has been crossed, green if OK.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("green", 1), ("yellow", 2), ("red", 3))

thresholdTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 9), )
if mibBuilder.loadTexts: thresholdTable.setStatus('current')
if mibBuilder.loadTexts: thresholdTable.setDescription('High-level (non-sampled) data about a traffic threshold filter.')
thresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 9, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "thresholdGlobalID"))
if mibBuilder.loadTexts: thresholdEntry.setStatus('current')
if mibBuilder.loadTexts: thresholdEntry.setDescription('An entry in the traffic threshold filter list. Rows cannot be created or deleted. ')
thresholdGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: thresholdGlobalID.setStatus('current')
if mibBuilder.loadTexts: thresholdGlobalID.setDescription('The global identifier of a traffic threshold filter policy group.')
thresholdState = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 9, 1, 2), ThresholdFilterState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdState.setStatus('current')
if mibBuilder.loadTexts: thresholdState.setDescription('The state (green, yellow, red) of this traffic threshold filter.')
thresholdUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdUnits.setStatus('current')
if mibBuilder.loadTexts: thresholdUnits.setDescription('The units value (e.g., packets/sec) monitored by this threshold filter.')
thresholdHistSecondsTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5), )
if mibBuilder.loadTexts: thresholdHistSecondsTable.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsTable.setDescription('Historical (sampled) data every second for a minute.')
thresholdHistSecondsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "thresholdHistSecondsGlobalID"), (0, "TPT-TRAFFIC-MIB", "thresholdHistSecondsIndex"))
if mibBuilder.loadTexts: thresholdHistSecondsEntry.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsEntry.setDescription('An entry in the traffic threshold history seconds table. Rows cannot be created or deleted. ')
thresholdHistSecondsGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: thresholdHistSecondsGlobalID.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsGlobalID.setDescription('The global identifier of a traffic threshold filter.')
thresholdHistSecondsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: thresholdHistSecondsIndex.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsIndex.setDescription('The index (0-59) of the second.')
thresholdHistSecondsUnitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistSecondsUnitCount.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsUnitCount.setDescription('The count of filter-specific units matching the traffic criteria for this filter in the specified second.')
thresholdHistSecondsTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistSecondsTimestamp.setStatus('current')
if mibBuilder.loadTexts: thresholdHistSecondsTimestamp.setDescription('The time SecondsUnitCount was updated (in seconds since January 1, 1970).')
thresholdHistMinutesTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6), )
if mibBuilder.loadTexts: thresholdHistMinutesTable.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesTable.setDescription('Historical (sampled) data every minute for an hour.')
thresholdHistMinutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "thresholdHistMinutesGlobalID"), (0, "TPT-TRAFFIC-MIB", "thresholdHistMinutesIndex"))
if mibBuilder.loadTexts: thresholdHistMinutesEntry.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesEntry.setDescription('An entry in the traffic threshold history minutes table. Rows cannot be created or deleted. ')
thresholdHistMinutesGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: thresholdHistMinutesGlobalID.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesGlobalID.setDescription('The global identifier of a traffic threshold filter.')
thresholdHistMinutesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: thresholdHistMinutesIndex.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesIndex.setDescription('The index (0-59) of the minute.')
thresholdHistMinutesUnitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistMinutesUnitCount.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesUnitCount.setDescription('The average of the SecondsUnitCount values corresponding to this minute.')
thresholdHistMinutesTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistMinutesTimestamp.setStatus('current')
if mibBuilder.loadTexts: thresholdHistMinutesTimestamp.setDescription('The time MinutesUnitCount was updated (in seconds since January 1, 1970).')
thresholdHistHoursTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7), )
if mibBuilder.loadTexts: thresholdHistHoursTable.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursTable.setDescription('Historical (sampled) data every hour for a day.')
thresholdHistHoursEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "thresholdHistHoursGlobalID"), (0, "TPT-TRAFFIC-MIB", "thresholdHistHoursIndex"))
if mibBuilder.loadTexts: thresholdHistHoursEntry.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursEntry.setDescription('An entry in the traffic threshold history hours table. Rows cannot be created or deleted. ')
thresholdHistHoursGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: thresholdHistHoursGlobalID.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursGlobalID.setDescription('The global identifier of a traffic threshold filter.')
thresholdHistHoursIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7, 1, 2), Unsigned32())
if mibBuilder.loadTexts: thresholdHistHoursIndex.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursIndex.setDescription('The index (0-23) of the hour.')
thresholdHistHoursUnitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistHoursUnitCount.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursUnitCount.setDescription('The average of the MinutesUnitCount values corresponding to this hour.')
thresholdHistHoursTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistHoursTimestamp.setStatus('current')
if mibBuilder.loadTexts: thresholdHistHoursTimestamp.setDescription('The time HoursUnitCount was updated (in seconds since January 1, 1970).')
thresholdHistDaysTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8), )
if mibBuilder.loadTexts: thresholdHistDaysTable.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysTable.setDescription('Historical (sampled) data every hour for a day.')
thresholdHistDaysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "thresholdHistDaysGlobalID"), (0, "TPT-TRAFFIC-MIB", "thresholdHistDaysIndex"))
if mibBuilder.loadTexts: thresholdHistDaysEntry.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysEntry.setDescription('An entry in the traffic threshold history hours table. Rows cannot be created or deleted. ')
thresholdHistDaysGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)))
if mibBuilder.loadTexts: thresholdHistDaysGlobalID.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysGlobalID.setDescription('The global identifier of a traffic threshold filter.')
thresholdHistDaysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8, 1, 2), Unsigned32())
if mibBuilder.loadTexts: thresholdHistDaysIndex.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysIndex.setDescription('The index (0-34) of the day.')
thresholdHistDaysUnitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistDaysUnitCount.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysUnitCount.setDescription('The average of the HoursUnitCount values corresponding to this day.')
thresholdHistDaysTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thresholdHistDaysTimestamp.setStatus('current')
if mibBuilder.loadTexts: thresholdHistDaysTimestamp.setDescription('The time DaysUnitCount was updated (in seconds since January 1, 1970).')
tptThresholdNotifyDeviceID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 111), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptThresholdNotifyDeviceID.setStatus('current')
if mibBuilder.loadTexts: tptThresholdNotifyDeviceID.setDescription('The unique identifier of the device sending this notification.')
tptThresholdNotifyPolicyID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 112), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptThresholdNotifyPolicyID.setStatus('current')
if mibBuilder.loadTexts: tptThresholdNotifyPolicyID.setDescription('The unique identifier of the policy causing this notification.')
tptThresholdNotifySignatureID = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 113), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptThresholdNotifySignatureID.setStatus('current')
if mibBuilder.loadTexts: tptThresholdNotifySignatureID.setDescription('The unique identifier of the signature associated with the policy.')
tptThresholdNotifySegmentName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 114), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptThresholdNotifySegmentName.setStatus('obsolete')
if mibBuilder.loadTexts: tptThresholdNotifySegmentName.setDescription('A string of the format <slot>:<index> that uniquely identifies the segment pertaining to this notification.')
tptThresholdNotifyZonePair = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 1, 115), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tptThresholdNotifyZonePair.setStatus('current')
if mibBuilder.loadTexts: tptThresholdNotifyZonePair.setDescription('A string of the format <in zone UUID>:<out zone UUID> that identifies the zone pertaining to this notification.')
tptThresholdFilterNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 3, 3, 0, 17)).setObjects(("TPT-TRAFFIC-MIB", "tptThresholdNotifyDeviceID"), ("TPT-TRAFFIC-MIB", "tptThresholdNotifyPolicyID"), ("TPT-TRAFFIC-MIB", "tptThresholdNotifySignatureID"), ("TPT-TRAFFIC-MIB", "tptThresholdNotifyZonePair"))
if mibBuilder.loadTexts: tptThresholdFilterNotify.setStatus('current')
if mibBuilder.loadTexts: tptThresholdFilterNotify.setDescription('Notification: Used to inform the management station that a threshold filter threshold crossing has been logged.')
interfaceHistSecondsTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10), )
if mibBuilder.loadTexts: interfaceHistSecondsTable.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsTable.setDescription('Historical (sampled) data every second for a minute.')
interfaceHistSecondsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "interfaceHistSecondsIfIndex"), (0, "TPT-TRAFFIC-MIB", "interfaceHistSecondsIndex"))
if mibBuilder.loadTexts: interfaceHistSecondsEntry.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsEntry.setDescription('An entry in the traffic interface history seconds table. Rows cannot be created or deleted. ')
interfaceHistSecondsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: interfaceHistSecondsIfIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsIfIndex.setDescription('The ifIndex of the interface for this historic data.')
interfaceHistSecondsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1, 2), Unsigned32())
if mibBuilder.loadTexts: interfaceHistSecondsIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsIndex.setDescription('The index (0-59) of the second.')
interfaceHistSecondsUnitCountIn = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistSecondsUnitCountIn.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsUnitCountIn.setDescription('The entering the interface port in octets in the specified second.')
interfaceHistSecondsUnitCountOut = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistSecondsUnitCountOut.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsUnitCountOut.setDescription('The leaving the interface port in octets in the specified second.')
interfaceHistSecondsTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistSecondsTimestamp.setStatus('current')
if mibBuilder.loadTexts: interfaceHistSecondsTimestamp.setDescription('The time SecondsUnitCount was updated (in seconds since January 1, 1970).')
interfaceHistMinutesTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11), )
if mibBuilder.loadTexts: interfaceHistMinutesTable.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesTable.setDescription('Historical (sampled) data every minute for an hour.')
interfaceHistMinutesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "interfaceHistMinutesIfIndex"), (0, "TPT-TRAFFIC-MIB", "interfaceHistMinutesIndex"))
if mibBuilder.loadTexts: interfaceHistMinutesEntry.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesEntry.setDescription('An entry in the traffic interface history minutes table. Rows cannot be created or deleted. ')
interfaceHistMinutesIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: interfaceHistMinutesIfIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesIfIndex.setDescription('The ifIndex of the interface for this historic data.')
interfaceHistMinutesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1, 2), Unsigned32())
if mibBuilder.loadTexts: interfaceHistMinutesIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesIndex.setDescription('The index (0-59) of the minute.')
interfaceHistMinutesUnitCountIn = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistMinutesUnitCountIn.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesUnitCountIn.setDescription('The average of the SecondsUnitCountIn values corresponding to this minute.')
interfaceHistMinutesUnitCountOut = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistMinutesUnitCountOut.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesUnitCountOut.setDescription('The average of the SecondsUnitCountOut values corresponding to this minute.')
interfaceHistMinutesTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 11, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistMinutesTimestamp.setStatus('current')
if mibBuilder.loadTexts: interfaceHistMinutesTimestamp.setDescription('The time MinutesUnitCount was updated (in seconds since January 1, 1970).')
interfaceHistHoursTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12), )
if mibBuilder.loadTexts: interfaceHistHoursTable.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursTable.setDescription('Historical (sampled) data every hour for a day.')
interfaceHistHoursEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "interfaceHistHoursIfIndex"), (0, "TPT-TRAFFIC-MIB", "interfaceHistHoursIndex"))
if mibBuilder.loadTexts: interfaceHistHoursEntry.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursEntry.setDescription('An entry in the traffic interface history hours table. Rows cannot be created or deleted. ')
interfaceHistHoursIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: interfaceHistHoursIfIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursIfIndex.setDescription('The ifIndex of the interface for this historic data.')
interfaceHistHoursIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1, 2), Unsigned32())
if mibBuilder.loadTexts: interfaceHistHoursIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursIndex.setDescription('The index (0-23) of the hour.')
interfaceHistHoursUnitCountIn = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistHoursUnitCountIn.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursUnitCountIn.setDescription('The average of the MinutesUnitCountIn values corresponding to this hour.')
interfaceHistHoursUnitCountOut = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistHoursUnitCountOut.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursUnitCountOut.setDescription('The average of the MinutesUnitCountOut values corresponding to this hour.')
interfaceHistHoursTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 12, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistHoursTimestamp.setStatus('current')
if mibBuilder.loadTexts: interfaceHistHoursTimestamp.setDescription('The time HoursUnitCount was updated (in seconds since January 1, 1970).')
interfaceHistDaysTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13), )
if mibBuilder.loadTexts: interfaceHistDaysTable.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysTable.setDescription('Historical (sampled) data every hour for a day.')
interfaceHistDaysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1), ).setIndexNames((0, "TPT-TRAFFIC-MIB", "interfaceHistDaysIfIndex"), (0, "TPT-TRAFFIC-MIB", "interfaceHistDaysIndex"))
if mibBuilder.loadTexts: interfaceHistDaysEntry.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysEntry.setDescription('An entry in the traffic interface history hours table. Rows cannot be created or deleted. ')
interfaceHistDaysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: interfaceHistDaysIfIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysIfIndex.setDescription('The ifIndex of the interface for this historic data.')
interfaceHistDaysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1, 2), Unsigned32())
if mibBuilder.loadTexts: interfaceHistDaysIndex.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysIndex.setDescription('The index (0-34) of the day.')
interfaceHistDaysUnitCountIn = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistDaysUnitCountIn.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysUnitCountIn.setDescription('The average of the HoursUnitCountIn values corresponding to this day.')
interfaceHistDaysUnitCountOut = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistDaysUnitCountOut.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysUnitCountOut.setDescription('The average of the HoursUnitCountOut values corresponding to this day.')
interfaceHistDaysTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 8, 13, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceHistDaysTimestamp.setStatus('current')
if mibBuilder.loadTexts: interfaceHistDaysTimestamp.setDescription('The time DaysUnitCount was updated (in seconds since January 1, 1970).')
mibBuilder.exportSymbols("TPT-TRAFFIC-MIB", thresholdHistMinutesGlobalID=thresholdHistMinutesGlobalID, tptThresholdNotifyPolicyID=tptThresholdNotifyPolicyID, rateLimitGlobalID=rateLimitGlobalID, rateLimitHistSecondsTable=rateLimitHistSecondsTable, interfaceHistSecondsTable=interfaceHistSecondsTable, thresholdHistDaysUnitCount=thresholdHistDaysUnitCount, thresholdHistHoursTimestamp=thresholdHistHoursTimestamp, interfaceHistHoursTimestamp=interfaceHistHoursTimestamp, interfaceHistHoursIfIndex=interfaceHistHoursIfIndex, interfaceHistMinutesTable=interfaceHistMinutesTable, thresholdHistMinutesEntry=thresholdHistMinutesEntry, rateLimitHistNumSeconds=rateLimitHistNumSeconds, thresholdTable=thresholdTable, interfaceHistSecondsUnitCountOut=interfaceHistSecondsUnitCountOut, rateLimitPacketsQueued=rateLimitPacketsQueued, rateLimitHistSecondsBytesSent=rateLimitHistSecondsBytesSent, thresholdHistMinutesTable=thresholdHistMinutesTable, rateLimitRequestedRate=rateLimitRequestedRate, rateLimitPacketsDropped=rateLimitPacketsDropped, thresholdHistDaysTimestamp=thresholdHistDaysTimestamp, thresholdHistSecondsTable=thresholdHistSecondsTable, rateLimitPacketsSent=rateLimitPacketsSent, tptThresholdNotifyZonePair=tptThresholdNotifyZonePair, interfaceHistMinutesIndex=interfaceHistMinutesIndex, interfaceHistSecondsUnitCountIn=interfaceHistSecondsUnitCountIn, thresholdHistMinutesUnitCount=thresholdHistMinutesUnitCount, rateLimitActualRate=rateLimitActualRate, interfaceHistDaysUnitCountIn=interfaceHistDaysUnitCountIn, thresholdHistDaysTable=thresholdHistDaysTable, interfaceHistSecondsTimestamp=interfaceHistSecondsTimestamp, thresholdHistSecondsUnitCount=thresholdHistSecondsUnitCount, rateLimitHistSecondsEntry=rateLimitHistSecondsEntry, thresholdGlobalID=thresholdGlobalID, thresholdHistHoursEntry=thresholdHistHoursEntry, interfaceHistDaysIndex=interfaceHistDaysIndex, thresholdState=thresholdState, tptThresholdFilterNotify=tptThresholdFilterNotify, tptThresholdNotifySignatureID=tptThresholdNotifySignatureID, rateLimitHistHoursIndex=rateLimitHistHoursIndex, rateLimitHistHoursGlobalID=rateLimitHistHoursGlobalID, interfaceHistMinutesIfIndex=interfaceHistMinutesIfIndex, ThresholdFilterState=ThresholdFilterState, thresholdHistHoursGlobalID=thresholdHistHoursGlobalID, interfaceHistDaysUnitCountOut=interfaceHistDaysUnitCountOut, interfaceHistHoursEntry=interfaceHistHoursEntry, interfaceHistHoursIndex=interfaceHistHoursIndex, thresholdHistSecondsEntry=thresholdHistSecondsEntry, thresholdEntry=thresholdEntry, rateLimitHistHoursTimestamp=rateLimitHistHoursTimestamp, thresholdHistDaysEntry=thresholdHistDaysEntry, interfaceHistSecondsEntry=interfaceHistSecondsEntry, interfaceHistHoursTable=interfaceHistHoursTable, rateLimitHistMinutesEntry=rateLimitHistMinutesEntry, rateLimitHistMinutesBytesSent=rateLimitHistMinutesBytesSent, thresholdHistMinutesIndex=thresholdHistMinutesIndex, thresholdHistSecondsTimestamp=thresholdHistSecondsTimestamp, thresholdHistMinutesTimestamp=thresholdHistMinutesTimestamp, thresholdHistHoursIndex=thresholdHistHoursIndex, thresholdHistSecondsGlobalID=thresholdHistSecondsGlobalID, rateLimitHistMinutesGlobalID=rateLimitHistMinutesGlobalID, rateLimitHistNumHours=rateLimitHistNumHours, rateLimitHistMinutesTimestamp=rateLimitHistMinutesTimestamp, rateLimitHistHoursTable=rateLimitHistHoursTable, tptThresholdNotifyDeviceID=tptThresholdNotifyDeviceID, thresholdHistSecondsIndex=thresholdHistSecondsIndex, thresholdHistDaysIndex=thresholdHistDaysIndex, interfaceHistHoursUnitCountIn=interfaceHistHoursUnitCountIn, thresholdHistDaysGlobalID=thresholdHistDaysGlobalID, rateLimitHistSecondsGlobalID=rateLimitHistSecondsGlobalID, rateLimitHistMinutesIndex=rateLimitHistMinutesIndex, interfaceHistSecondsIndex=interfaceHistSecondsIndex, thresholdHistHoursTable=thresholdHistHoursTable, tpt_traffic=tpt_traffic, interfaceHistHoursUnitCountOut=interfaceHistHoursUnitCountOut, interfaceHistMinutesUnitCountIn=interfaceHistMinutesUnitCountIn, rateLimitHistNumMinutes=rateLimitHistNumMinutes, interfaceHistMinutesUnitCountOut=interfaceHistMinutesUnitCountOut, interfaceHistMinutesEntry=interfaceHistMinutesEntry, rateLimitHistSecondsIndex=rateLimitHistSecondsIndex, interfaceHistDaysIfIndex=interfaceHistDaysIfIndex, rateLimitHistSecondsTimestamp=rateLimitHistSecondsTimestamp, rateLimitEntry=rateLimitEntry, tptThresholdNotifySegmentName=tptThresholdNotifySegmentName, interfaceHistDaysEntry=interfaceHistDaysEntry, interfaceHistDaysTable=interfaceHistDaysTable, rateLimitTable=rateLimitTable, rateLimitHistHoursBytesSent=rateLimitHistHoursBytesSent, rateLimitHistMinutesTable=rateLimitHistMinutesTable, interfaceHistDaysTimestamp=interfaceHistDaysTimestamp, thresholdUnits=thresholdUnits, rateLimitHistHoursEntry=rateLimitHistHoursEntry, interfaceHistSecondsIfIndex=interfaceHistSecondsIfIndex, interfaceHistMinutesTimestamp=interfaceHistMinutesTimestamp, thresholdHistHoursUnitCount=thresholdHistHoursUnitCount, PYSNMP_MODULE_ID=tpt_traffic)
