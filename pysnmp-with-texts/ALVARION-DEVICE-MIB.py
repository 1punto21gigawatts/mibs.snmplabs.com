#
# PySNMP MIB module ALVARION-DEVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-DEVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
AlvarionNotificationEnable, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionNotificationEnable")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Gauge32, MibIdentifier, TimeTicks, Counter32, IpAddress, Counter64, ModuleIdentity, ObjectIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Gauge32", "MibIdentifier", "TimeTicks", "Counter32", "IpAddress", "Counter64", "ModuleIdentity", "ObjectIdentity", "iso", "Integer32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
alvarionDeviceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23))
if mibBuilder.loadTexts: alvarionDeviceMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionDeviceMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionDeviceMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionDeviceMIB.setDescription('Alvarion Device MIB.')
alvarionDeviceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1))
coDeviceConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1))
coDeviceDiscoveryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2))
coDeviceInformationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3))
coDeviceStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4))
coDeviceStateChangeNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1, 1), AlvarionNotificationEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDeviceStateChangeNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDeviceStateChangeNotificationEnabled.setDescription('Specifies if the coDeviceStateChangeNotification notification is generated.')
coDeviceAuthorizationFailureNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1, 2), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDeviceAuthorizationFailureNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDeviceAuthorizationFailureNotificationEnabled.setDescription('Specifies if the coDeviceAuthorizationFailureNotification notification is generated.')
coDeviceSecurityFailureNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1, 3), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDeviceSecurityFailureNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDeviceSecurityFailureNotificationEnabled.setDescription('Specifies if the coDeviceSecurityFailureNotification notification is generated.')
coDeviceFirmwareFailureNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1, 4), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDeviceFirmwareFailureNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDeviceFirmwareFailureNotificationEnabled.setDescription('Specifies if the coDeviceFirmwareFailureNotification notification is generated.')
coDeviceConfigurationFailureNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 1, 5), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coDeviceConfigurationFailureNotificationEnabled.setStatus('current')
if mibBuilder.loadTexts: coDeviceConfigurationFailureNotificationEnabled.setDescription('Specifies if the coDeviceConfigurationFailureNotification notification is generated.')
coDeviceDiscoveryTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceDiscoveryTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceDiscoveryTable.setDescription('Device discovery attributes.')
coDeviceDiscoveryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"))
if mibBuilder.loadTexts: coDeviceDiscoveryEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceDiscoveryEntry.setDescription('An entry in the coDeviceDiscoveryTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller.')
coDevDisIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevDisIndex.setStatus('current')
if mibBuilder.loadTexts: coDevDisIndex.setDescription('Specifies the index of the device.')
coDevDisSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisSerialNumber.setStatus('current')
if mibBuilder.loadTexts: coDevDisSerialNumber.setDescription('Device serial number.')
coDevDisMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisMacAddress.setStatus('current')
if mibBuilder.loadTexts: coDevDisMacAddress.setDescription('Ethernet MAC address of the device.')
coDevDisIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisIpAddress.setStatus('current')
if mibBuilder.loadTexts: coDevDisIpAddress.setDescription('IP address of the device.')
coDevDisState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("authorized", 2), ("join", 3), ("firmware", 4), ("security", 5), ("configuration", 6), ("running", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisState.setStatus('current')
if mibBuilder.loadTexts: coDevDisState.setDescription('Device operational state.')
coDevDisSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisSystemName.setStatus('current')
if mibBuilder.loadTexts: coDevDisSystemName.setDescription('Name assigned to the device by the configuration tool.')
coDevDisLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisLocation.setStatus('current')
if mibBuilder.loadTexts: coDevDisLocation.setDescription('Location assigned to the device by the configuration tool.')
coDevDisContact = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisContact.setStatus('current')
if mibBuilder.loadTexts: coDevDisContact.setDescription('Contact assigned to the device by the configuration tool.')
coDevDisGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisGroupName.setStatus('current')
if mibBuilder.loadTexts: coDevDisGroupName.setDescription('Identifies the group that the device belongs to.')
coDevDisConnectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 2, 1, 1, 10), Counter32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevDisConnectionTime.setStatus('current')
if mibBuilder.loadTexts: coDevDisConnectionTime.setDescription('Elapsed time in minutes since the device was last authorized.')
coDeviceInfoTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1), )
if mibBuilder.loadTexts: coDeviceInfoTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceInfoTable.setDescription('Device information attributes.')
coDeviceInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1), )
coDeviceDiscoveryEntry.registerAugmentions(("ALVARION-DEVICE-MIB", "coDeviceInfoEntry"))
coDeviceInfoEntry.setIndexNames(*coDeviceDiscoveryEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceInfoEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceInfoEntry.setDescription('An entry in the coDeviceInfoTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller.')
coDevInfoProductType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevInfoProductType.setStatus('current')
if mibBuilder.loadTexts: coDevInfoProductType.setDescription('Refer to a Alvarion product inside alvarionProductsMIB.')
coDevInfoProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevInfoProductName.setStatus('current')
if mibBuilder.loadTexts: coDevInfoProductName.setDescription('Alvarion product name for the device.')
coDevInfoFirmwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevInfoFirmwareRevision.setStatus('current')
if mibBuilder.loadTexts: coDevInfoFirmwareRevision.setDescription('Revision number of the device firmware.')
coDevInfoBootRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevInfoBootRevision.setStatus('current')
if mibBuilder.loadTexts: coDevInfoBootRevision.setDescription('Revision number of the device boot loader.')
coDevInfoHardwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevInfoHardwareRevision.setStatus('current')
if mibBuilder.loadTexts: coDevInfoHardwareRevision.setDescription('Revision number of the system hardware.')
coDeviceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1), )
if mibBuilder.loadTexts: coDeviceStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceStatusTable.setDescription('Device status attributes.')
coDeviceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1), )
coDeviceDiscoveryEntry.registerAugmentions(("ALVARION-DEVICE-MIB", "coDeviceStatusEntry"))
coDeviceStatusEntry.setIndexNames(*coDeviceDiscoveryEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceStatusEntry.setDescription('An entry in the coDeviceStatusTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller.')
coDevStUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStUpTime.setStatus('current')
if mibBuilder.loadTexts: coDevStUpTime.setDescription('Time elapsed after the device powered up.')
coDevStLoadAverage1Min = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStLoadAverage1Min.setStatus('current')
if mibBuilder.loadTexts: coDevStLoadAverage1Min.setDescription('Average number of processes running during the last minute.')
coDevStLoadAverage5Min = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStLoadAverage5Min.setStatus('current')
if mibBuilder.loadTexts: coDevStLoadAverage5Min.setDescription('Average number of processes running during the last 5 minutes.')
coDevStLoadAverage15Min = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStLoadAverage15Min.setStatus('current')
if mibBuilder.loadTexts: coDevStLoadAverage15Min.setDescription('Average number of processes running during the last 15 minutes.')
coDevStCpuUseNow = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 5), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStCpuUseNow.setStatus('current')
if mibBuilder.loadTexts: coDevStCpuUseNow.setDescription('Current CPU usage.')
coDevStCpuUse5Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 6), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStCpuUse5Sec.setStatus('current')
if mibBuilder.loadTexts: coDevStCpuUse5Sec.setDescription('Average CPU usage during the last 5 seconds.')
coDevStCpuUse10Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 7), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStCpuUse10Sec.setStatus('current')
if mibBuilder.loadTexts: coDevStCpuUse10Sec.setDescription('Average CPU usage during the last 10 seconds.')
coDevStCpuUse20Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 8), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStCpuUse20Sec.setStatus('current')
if mibBuilder.loadTexts: coDevStCpuUse20Sec.setDescription('Average CPU usage during the last 20 seconds.')
coDevStRamTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 9), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStRamTotal.setStatus('current')
if mibBuilder.loadTexts: coDevStRamTotal.setDescription('Total system RAM.')
coDevStRamFree = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 10), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStRamFree.setStatus('current')
if mibBuilder.loadTexts: coDevStRamFree.setDescription('Available system RAM.')
coDevStRamBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 11), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStRamBuffer.setStatus('current')
if mibBuilder.loadTexts: coDevStRamBuffer.setDescription('Memory used by the buffers.')
coDevStRamCached = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 12), Unsigned32()).setUnits('Kb').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStRamCached.setStatus('current')
if mibBuilder.loadTexts: coDevStRamCached.setDescription('Memory used by the system cache.')
coDevStStorageUsePermanent = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 13), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStStorageUsePermanent.setStatus('current')
if mibBuilder.loadTexts: coDevStStorageUsePermanent.setDescription('Percentage of the permanent storage in use.')
coDevStStorageUseTemporary = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 1, 4, 1, 1, 14), Unsigned32()).setUnits('%').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevStStorageUseTemporary.setStatus('current')
if mibBuilder.loadTexts: coDevStStorageUseTemporary.setDescription('Percentage of the temporary storage in use.')
alvarionDeviceMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2))
alvarionDeviceMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0))
coDeviceStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0, 1)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"))
if mibBuilder.loadTexts: coDeviceStateChangeNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceStateChangeNotification.setDescription('A coDeviceStateChangeNotification trap signifies that the SNMP entity has detected a device state change.')
coDeviceAuthorizationFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0, 2)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"))
if mibBuilder.loadTexts: coDeviceAuthorizationFailureNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceAuthorizationFailureNotification.setDescription('A coDeviceAuthorizationFailureNotification trap signifies that the SNMP entity has detected a device authentication failure.')
coDeviceSecurityFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0, 3)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"))
if mibBuilder.loadTexts: coDeviceSecurityFailureNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceSecurityFailureNotification.setDescription('A coDeviceSecurityFailureNotification trap signifies that the SNMP entity has detected a device connection failure.')
coDeviceFirmwareFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0, 4)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"))
if mibBuilder.loadTexts: coDeviceFirmwareFailureNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceFirmwareFailureNotification.setDescription('A coDeviceFirmwareFailureNotification trap signifies that the SNMP entity has detected a device firmware failure.')
coDeviceConfigurationFailureNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 2, 0, 5)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"))
if mibBuilder.loadTexts: coDeviceConfigurationFailureNotification.setStatus('current')
if mibBuilder.loadTexts: coDeviceConfigurationFailureNotification.setDescription('A coDeviceConfigurationFailureNotification trap signifies that the SNMP entity has detected a device configuration failure.')
alvarionDeviceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3))
alvarionDeviceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 1))
alvarionDeviceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2))
alvarionDeviceMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 1, 1)).setObjects(("ALVARION-DEVICE-MIB", "alvarionDeviceConfigMIBGroup"), ("ALVARION-DEVICE-MIB", "alvarionDeviceDiscoveryMIBGroup"), ("ALVARION-DEVICE-MIB", "alvarionDeviceInformationMIBGroup"), ("ALVARION-DEVICE-MIB", "alvarionDeviceStatusMIBGroup"), ("ALVARION-DEVICE-MIB", "alvarionDeviceNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceMIBCompliance = alvarionDeviceMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceMIBCompliance.setDescription('The compliance statement for the Device MIB.')
alvarionDeviceConfigMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2, 1)).setObjects(("ALVARION-DEVICE-MIB", "coDeviceStateChangeNotificationEnabled"), ("ALVARION-DEVICE-MIB", "coDeviceAuthorizationFailureNotificationEnabled"), ("ALVARION-DEVICE-MIB", "coDeviceSecurityFailureNotificationEnabled"), ("ALVARION-DEVICE-MIB", "coDeviceFirmwareFailureNotificationEnabled"), ("ALVARION-DEVICE-MIB", "coDeviceConfigurationFailureNotificationEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceConfigMIBGroup = alvarionDeviceConfigMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceConfigMIBGroup.setDescription('A collection of configuration objects.')
alvarionDeviceDiscoveryMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2, 2)).setObjects(("ALVARION-DEVICE-MIB", "coDevDisSerialNumber"), ("ALVARION-DEVICE-MIB", "coDevDisMacAddress"), ("ALVARION-DEVICE-MIB", "coDevDisIpAddress"), ("ALVARION-DEVICE-MIB", "coDevDisState"), ("ALVARION-DEVICE-MIB", "coDevDisSystemName"), ("ALVARION-DEVICE-MIB", "coDevDisLocation"), ("ALVARION-DEVICE-MIB", "coDevDisContact"), ("ALVARION-DEVICE-MIB", "coDevDisGroupName"), ("ALVARION-DEVICE-MIB", "coDevDisConnectionTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceDiscoveryMIBGroup = alvarionDeviceDiscoveryMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceDiscoveryMIBGroup.setDescription('A collection of objects for Device discovery status.')
alvarionDeviceInformationMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2, 3)).setObjects(("ALVARION-DEVICE-MIB", "coDevInfoProductType"), ("ALVARION-DEVICE-MIB", "coDevInfoProductName"), ("ALVARION-DEVICE-MIB", "coDevInfoFirmwareRevision"), ("ALVARION-DEVICE-MIB", "coDevInfoBootRevision"), ("ALVARION-DEVICE-MIB", "coDevInfoHardwareRevision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceInformationMIBGroup = alvarionDeviceInformationMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceInformationMIBGroup.setDescription('A collection of objects for device configuration items.')
alvarionDeviceStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2, 4)).setObjects(("ALVARION-DEVICE-MIB", "coDevStUpTime"), ("ALVARION-DEVICE-MIB", "coDevStLoadAverage1Min"), ("ALVARION-DEVICE-MIB", "coDevStLoadAverage5Min"), ("ALVARION-DEVICE-MIB", "coDevStLoadAverage15Min"), ("ALVARION-DEVICE-MIB", "coDevStCpuUseNow"), ("ALVARION-DEVICE-MIB", "coDevStCpuUse5Sec"), ("ALVARION-DEVICE-MIB", "coDevStCpuUse10Sec"), ("ALVARION-DEVICE-MIB", "coDevStCpuUse20Sec"), ("ALVARION-DEVICE-MIB", "coDevStRamTotal"), ("ALVARION-DEVICE-MIB", "coDevStRamFree"), ("ALVARION-DEVICE-MIB", "coDevStRamBuffer"), ("ALVARION-DEVICE-MIB", "coDevStRamCached"), ("ALVARION-DEVICE-MIB", "coDevStStorageUsePermanent"), ("ALVARION-DEVICE-MIB", "coDevStStorageUseTemporary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceStatusMIBGroup = alvarionDeviceStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceStatusMIBGroup.setDescription('A collection of objects for device status.')
alvarionDeviceNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 23, 3, 2, 5)).setObjects(("ALVARION-DEVICE-MIB", "coDeviceStateChangeNotification"), ("ALVARION-DEVICE-MIB", "coDeviceAuthorizationFailureNotification"), ("ALVARION-DEVICE-MIB", "coDeviceSecurityFailureNotification"), ("ALVARION-DEVICE-MIB", "coDeviceFirmwareFailureNotification"), ("ALVARION-DEVICE-MIB", "coDeviceConfigurationFailureNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceNotificationGroup = alvarionDeviceNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceNotificationGroup.setDescription('A collection of supported device notifications.')
mibBuilder.exportSymbols("ALVARION-DEVICE-MIB", coDeviceInformationGroup=coDeviceInformationGroup, coDevStUpTime=coDevStUpTime, coDevDisConnectionTime=coDevDisConnectionTime, coDevInfoProductName=coDevInfoProductName, coDeviceInfoEntry=coDeviceInfoEntry, coDevStCpuUse10Sec=coDevStCpuUse10Sec, coDevStRamCached=coDevStRamCached, coDevDisSerialNumber=coDevDisSerialNumber, coDeviceStateChangeNotificationEnabled=coDeviceStateChangeNotificationEnabled, alvarionDeviceMIBConformance=alvarionDeviceMIBConformance, alvarionDeviceMIBNotifications=alvarionDeviceMIBNotifications, coDeviceSecurityFailureNotification=coDeviceSecurityFailureNotification, coDevInfoFirmwareRevision=coDevInfoFirmwareRevision, coDeviceConfigurationFailureNotificationEnabled=coDeviceConfigurationFailureNotificationEnabled, coDevStRamTotal=coDevStRamTotal, coDevStRamBuffer=coDevStRamBuffer, coDeviceStateChangeNotification=coDeviceStateChangeNotification, alvarionDeviceMIBGroups=alvarionDeviceMIBGroups, coDevDisLocation=coDevDisLocation, coDeviceStatusEntry=coDeviceStatusEntry, coDevStRamFree=coDevStRamFree, coDeviceFirmwareFailureNotificationEnabled=coDeviceFirmwareFailureNotificationEnabled, coDevStStorageUseTemporary=coDevStStorageUseTemporary, alvarionDeviceDiscoveryMIBGroup=alvarionDeviceDiscoveryMIBGroup, alvarionDeviceMIBCompliances=alvarionDeviceMIBCompliances, coDevDisState=coDevDisState, coDeviceDiscoveryEntry=coDeviceDiscoveryEntry, PYSNMP_MODULE_ID=alvarionDeviceMIB, coDevInfoBootRevision=coDevInfoBootRevision, coDeviceStatusTable=coDeviceStatusTable, coDeviceSecurityFailureNotificationEnabled=coDeviceSecurityFailureNotificationEnabled, alvarionDeviceStatusMIBGroup=alvarionDeviceStatusMIBGroup, coDeviceConfigGroup=coDeviceConfigGroup, coDeviceAuthorizationFailureNotificationEnabled=coDeviceAuthorizationFailureNotificationEnabled, coDevDisGroupName=coDevDisGroupName, alvarionDeviceConfigMIBGroup=alvarionDeviceConfigMIBGroup, coDevDisIndex=coDevDisIndex, coDevDisMacAddress=coDevDisMacAddress, alvarionDeviceMIB=alvarionDeviceMIB, coDevDisContact=coDevDisContact, coDevStStorageUsePermanent=coDevStStorageUsePermanent, coDevDisSystemName=coDevDisSystemName, coDeviceInfoTable=coDeviceInfoTable, coDevStLoadAverage1Min=coDevStLoadAverage1Min, coDevDisIpAddress=coDevDisIpAddress, coDeviceAuthorizationFailureNotification=coDeviceAuthorizationFailureNotification, alvarionDeviceMIBNotificationPrefix=alvarionDeviceMIBNotificationPrefix, coDeviceConfigurationFailureNotification=coDeviceConfigurationFailureNotification, alvarionDeviceInformationMIBGroup=alvarionDeviceInformationMIBGroup, alvarionDeviceNotificationGroup=alvarionDeviceNotificationGroup, coDevInfoProductType=coDevInfoProductType, coDevStCpuUseNow=coDevStCpuUseNow, alvarionDeviceMIBCompliance=alvarionDeviceMIBCompliance, coDevStCpuUse5Sec=coDevStCpuUse5Sec, coDevStLoadAverage15Min=coDevStLoadAverage15Min, coDevStLoadAverage5Min=coDevStLoadAverage5Min, coDeviceDiscoveryTable=coDeviceDiscoveryTable, alvarionDeviceMIBObjects=alvarionDeviceMIBObjects, coDeviceStatusGroup=coDeviceStatusGroup, coDevStCpuUse20Sec=coDevStCpuUse20Sec, coDeviceFirmwareFailureNotification=coDeviceFirmwareFailureNotification, coDeviceDiscoveryGroup=coDeviceDiscoveryGroup, coDevInfoHardwareRevision=coDevInfoHardwareRevision)
