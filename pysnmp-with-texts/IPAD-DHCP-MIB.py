#
# PySNMP MIB module IPAD-DHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPAD-DHCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:55:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ipad, = mibBuilder.importSymbols("IPADv2-MIB", "ipad")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, TimeTicks, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, iso, ModuleIdentity, Unsigned32, MibIdentifier, Bits, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "iso", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Bits", "ObjectIdentity", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipadDhcp = ModuleIdentity((1, 3, 6, 1, 4, 1, 321, 100, 1, 27))
if mibBuilder.loadTexts: ipadDhcp.setLastUpdated('0005290001Z')
if mibBuilder.loadTexts: ipadDhcp.setOrganization('Verilink Corporation')
if mibBuilder.loadTexts: ipadDhcp.setContactInfo('support@verilink.com 1-800-926-0085')
if mibBuilder.loadTexts: ipadDhcp.setDescription('The IPAD DHCP MIB.')
ipadDhcpParms = MibIdentifier((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1))
ipadDhcpPortParms = MibIdentifier((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2))
ipadDhcpEnable = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpEnable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpEnable.setDescription('')
ipadDhcpNumberPorts = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpNumberPorts.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpNumberPorts.setDescription('')
ipadDhcpTTL = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpTTL.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpTTL.setDescription('')
ipadDhcpServiceType = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServiceType.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServiceType.setDescription('')
ipadDhcpLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpLeaseTime.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpLeaseTime.setDescription('')
ipadDhcpServerDatabasePrimaryDnsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabasePrimaryDnsIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabasePrimaryDnsIpAddress.setDescription('')
ipadDhcpServerDatabaseSecondaryDnsIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseSecondaryDnsIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabaseSecondaryDnsIpAddress.setDescription('')
ipadDhcpServerDatabaseDomainName = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseDomainName.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabaseDomainName.setDescription('')
ipadDhcpServerDatabaseRouterIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseRouterIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabaseRouterIpAddress.setDescription('')
ipadDhcpServerHostNameTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10), )
if mibBuilder.loadTexts: ipadDhcpServerHostNameTable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostNameTable.setDescription('Table of DHCP Server Host Entries.')
ipadDhcpServerHostNameTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpServerHostIndex"))
if mibBuilder.loadTexts: ipadDhcpServerHostNameTableEntry.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostNameTableEntry.setDescription('An entry in the DHCP Server Host table.')
ipadDhcpServerHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpServerHostIndex.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostIndex.setDescription('The index into the DHCP Server Host table.')
ipadDhcpServerHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostName.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostName.setDescription('')
ipadDhcpServerHostAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostAdd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostAdd.setDescription('')
ipadDhcpServerHostDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerHostDelete.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerHostDelete.setDescription('')
ipadDhcpStaticEntryTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13), )
if mibBuilder.loadTexts: ipadDhcpStaticEntryTable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryTable.setDescription('Table of DHCP Static Entries.')
ipadDhcpStaticEntryTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpStaticEntryIndex"))
if mibBuilder.loadTexts: ipadDhcpStaticEntryTableEntry.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryTableEntry.setDescription('An entry in the DHCP Static Entry table.')
ipadDhcpStaticEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpStaticEntryIndex.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryIndex.setDescription('The index into the DHCP Static Entry table.')
ipadDhcpStaticEntryMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryMacAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryMacAddress.setDescription('')
ipadDhcpStaticEntryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryIpAddress.setDescription('')
ipadDhcpStaticEntryMaskAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryMaskAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryMaskAddress.setDescription('')
ipadDhcpStaticEntryHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 13, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryHostName.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryHostName.setDescription('')
ipadDhcpStaticEntryAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryAdd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryAdd.setDescription('')
ipadDhcpStaticEntryDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpStaticEntryDelete.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpStaticEntryDelete.setDescription('')
ipadDhcpAddressListTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16), )
if mibBuilder.loadTexts: ipadDhcpAddressListTable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListTable.setDescription('Table of DHCP Addresses.')
ipadDhcpAddressListTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpAddressListIndex"))
if mibBuilder.loadTexts: ipadDhcpAddressListTableEntry.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListTableEntry.setDescription('An entry in the DHCP Address List table.')
ipadDhcpAddressListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressListIndex.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListIndex.setDescription('The index into the DHCP Static Entry table.')
ipadDhcpAddressListIpStart = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpStart.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListIpStart.setDescription('')
ipadDhcpAddressListIpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpEnd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListIpEnd.setDescription('')
ipadDhcpAddressListSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListSubnetMask.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListSubnetMask.setDescription('')
ipadDhcpAddressListIpExcludeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeStart.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeStart.setDescription('')
ipadDhcpAddressListIpExcludeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 16, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeEnd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListIpExcludeEnd.setDescription('')
ipadDhcpAddressListAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("addnew", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListAdd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListAdd.setDescription('')
ipadDhcpAddressListDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpAddressListDelete.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressListDelete.setDescription('')
ipadDhcpAddressStatusTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19), )
if mibBuilder.loadTexts: ipadDhcpAddressStatusTable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusTable.setDescription('Status Table of DHCP Addresses.')
ipadDhcpServerDatabaseWinsPrimary = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsPrimary.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsPrimary.setDescription('WINS Primary Server IP Address')
ipadDhcpServerDatabaseWinsSecondary = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsSecondary.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpServerDatabaseWinsSecondary.setDescription('WINS Secondary Server IP Address.')
ipadDhcpAddressStatusTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpAddressStatusIndex"))
if mibBuilder.loadTexts: ipadDhcpAddressStatusTableEntry.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusTableEntry.setDescription('An entry in the DHCP Address Status table.')
ipadDhcpAddressStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusIndex.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusIndex.setDescription('The index into the DHCP Static Entry table.')
ipadDhcpAddressStatusMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusMacAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusMacAddress.setDescription('')
ipadDhcpAddressStatusIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusIpAddress.setDescription('')
ipadDhcpAddressStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("available", 2), ("assigned", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpAddressStatusStatus.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpAddressStatusStatus.setDescription('')
ipadDhcpPortTable = MibTable((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1), )
if mibBuilder.loadTexts: ipadDhcpPortTable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortTable.setDescription('Table of DHCP Port Entries.')
ipadDhcpPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1), ).setIndexNames((0, "IPAD-DHCP-MIB", "ipadDhcpPortIndex"))
if mibBuilder.loadTexts: ipadDhcpPortTableEntry.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortTableEntry.setDescription('An entry in the DHCP Server Host table.')
ipadDhcpPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipadDhcpPortIndex.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortIndex.setDescription('The index into the DHCP Port table.')
ipadDhcpPortIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortIpAddress.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortIpAddress.setDescription('')
ipadDhcpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disable", 2), ("enable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortEnable.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortEnable.setDescription('')
ipadDhcpPortAdd = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortAdd.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortAdd.setDescription('')
ipadDhcpPortDelete = MibScalar((1, 3, 6, 1, 4, 1, 321, 100, 1, 27, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipadDhcpPortDelete.setStatus('current')
if mibBuilder.loadTexts: ipadDhcpPortDelete.setDescription('')
mibBuilder.exportSymbols("IPAD-DHCP-MIB", ipadDhcpNumberPorts=ipadDhcpNumberPorts, ipadDhcpServerHostAdd=ipadDhcpServerHostAdd, ipadDhcpServerDatabaseRouterIpAddress=ipadDhcpServerDatabaseRouterIpAddress, ipadDhcpPortEnable=ipadDhcpPortEnable, ipadDhcpParms=ipadDhcpParms, ipadDhcpStaticEntryAdd=ipadDhcpStaticEntryAdd, ipadDhcpAddressStatusStatus=ipadDhcpAddressStatusStatus, ipadDhcpStaticEntryTable=ipadDhcpStaticEntryTable, ipadDhcpServerDatabaseWinsSecondary=ipadDhcpServerDatabaseWinsSecondary, ipadDhcpPortAdd=ipadDhcpPortAdd, ipadDhcpServerHostName=ipadDhcpServerHostName, ipadDhcpPortParms=ipadDhcpPortParms, ipadDhcpEnable=ipadDhcpEnable, ipadDhcpStaticEntryIndex=ipadDhcpStaticEntryIndex, ipadDhcpServiceType=ipadDhcpServiceType, ipadDhcpServerDatabaseWinsPrimary=ipadDhcpServerDatabaseWinsPrimary, ipadDhcpServerHostIndex=ipadDhcpServerHostIndex, ipadDhcpPortTableEntry=ipadDhcpPortTableEntry, ipadDhcpAddressStatusMacAddress=ipadDhcpAddressStatusMacAddress, PYSNMP_MODULE_ID=ipadDhcp, ipadDhcpServerHostNameTable=ipadDhcpServerHostNameTable, ipadDhcpPortIndex=ipadDhcpPortIndex, ipadDhcp=ipadDhcp, ipadDhcpStaticEntryDelete=ipadDhcpStaticEntryDelete, ipadDhcpStaticEntryTableEntry=ipadDhcpStaticEntryTableEntry, ipadDhcpPortDelete=ipadDhcpPortDelete, ipadDhcpAddressListIpExcludeStart=ipadDhcpAddressListIpExcludeStart, ipadDhcpAddressListTable=ipadDhcpAddressListTable, ipadDhcpAddressStatusIndex=ipadDhcpAddressStatusIndex, ipadDhcpServerHostDelete=ipadDhcpServerHostDelete, ipadDhcpLeaseTime=ipadDhcpLeaseTime, ipadDhcpAddressListIpStart=ipadDhcpAddressListIpStart, ipadDhcpAddressListIpEnd=ipadDhcpAddressListIpEnd, ipadDhcpAddressStatusTable=ipadDhcpAddressStatusTable, ipadDhcpAddressListTableEntry=ipadDhcpAddressListTableEntry, ipadDhcpPortIpAddress=ipadDhcpPortIpAddress, ipadDhcpStaticEntryMaskAddress=ipadDhcpStaticEntryMaskAddress, ipadDhcpPortTable=ipadDhcpPortTable, ipadDhcpServerDatabaseDomainName=ipadDhcpServerDatabaseDomainName, ipadDhcpTTL=ipadDhcpTTL, ipadDhcpAddressStatusTableEntry=ipadDhcpAddressStatusTableEntry, ipadDhcpServerDatabasePrimaryDnsIpAddress=ipadDhcpServerDatabasePrimaryDnsIpAddress, ipadDhcpStaticEntryMacAddress=ipadDhcpStaticEntryMacAddress, ipadDhcpStaticEntryHostName=ipadDhcpStaticEntryHostName, ipadDhcpAddressListDelete=ipadDhcpAddressListDelete, ipadDhcpServerDatabaseSecondaryDnsIpAddress=ipadDhcpServerDatabaseSecondaryDnsIpAddress, ipadDhcpAddressListIndex=ipadDhcpAddressListIndex, ipadDhcpAddressListAdd=ipadDhcpAddressListAdd, ipadDhcpAddressListIpExcludeEnd=ipadDhcpAddressListIpExcludeEnd, ipadDhcpAddressListSubnetMask=ipadDhcpAddressListSubnetMask, ipadDhcpAddressStatusIpAddress=ipadDhcpAddressStatusIpAddress, ipadDhcpServerHostNameTableEntry=ipadDhcpServerHostNameTableEntry, ipadDhcpStaticEntryIpAddress=ipadDhcpStaticEntryIpAddress)
