#
# PySNMP MIB module ZYXEL-IPV6-NDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-IPV6-NDP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, Unsigned32, Gauge32, ModuleIdentity, TimeTicks, MibIdentifier, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "Unsigned32", "Gauge32", "ModuleIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "ObjectIdentity")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelIpv6Ndp = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35))
if mibBuilder.loadTexts: zyxelIpv6Ndp.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelIpv6Ndp.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelIpv6Ndp.setContactInfo('')
if mibBuilder.loadTexts: zyxelIpv6Ndp.setDescription('The subtree for IPv6 Neighbor Discovery Protocol')
zyxelNdpSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1))
zyNdpMaxNumberOfPrefixes = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyNdpMaxNumberOfPrefixes.setStatus('current')
if mibBuilder.loadTexts: zyNdpMaxNumberOfPrefixes.setDescription('The maximum number of prefix entries that can be created.')
zyxelNdpTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2), )
if mibBuilder.loadTexts: zyxelNdpTable.setStatus('current')
if mibBuilder.loadTexts: zyxelNdpTable.setDescription('The table contains NDP configuration.')
zyxelNdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2, 1), ).setIndexNames((0, "ZYXEL-IPV6-NDP-MIB", "zyNdpIfIndex"))
if mibBuilder.loadTexts: zyxelNdpEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelNdpEntry.setDescription('An entry contains NDP configuration.')
zyNdpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyNdpIfIndex.setStatus('current')
if mibBuilder.loadTexts: zyNdpIfIndex.setDescription('The index of NDP Interface.')
zyNdpDadAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpDadAttempts.setStatus('current')
if mibBuilder.loadTexts: zyNdpDadAttempts.setDescription('Enter the number of duplicate address detections transmits on an interface. Range of DAD Attempts is (0 to 600). The default value is 1.')
zyNdpNsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpNsInterval.setStatus('current')
if mibBuilder.loadTexts: zyNdpNsInterval.setDescription('Enter the number of NS Interval Time.')
zyNdpReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpReachableTime.setStatus('current')
if mibBuilder.loadTexts: zyNdpReachableTime.setDescription('Enter the number of Reachable Time.')
zyxelNdpPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3), )
if mibBuilder.loadTexts: zyxelNdpPrefixTable.setStatus('current')
if mibBuilder.loadTexts: zyxelNdpPrefixTable.setDescription('The table contains NDP prefix configuration.')
zyxelNdpPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1), ).setIndexNames((0, "ZYXEL-IPV6-NDP-MIB", "zyNdpPrefixIfIndex"), (0, "ZYXEL-IPV6-NDP-MIB", "zyNdpPrefixPrefixType"), (0, "ZYXEL-IPV6-NDP-MIB", "zyNdpPrefixPrefixIpAddress"), (0, "ZYXEL-IPV6-NDP-MIB", "zyNdpPrefixPrefixLength"))
if mibBuilder.loadTexts: zyxelNdpPrefixEntry.setStatus('current')
if mibBuilder.loadTexts: zyxelNdpPrefixEntry.setDescription('An entry contains NDP prefix configuration.')
zyNdpPrefixIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: zyNdpPrefixIfIndex.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixIfIndex.setDescription('The index of the Prefix Interface.')
zyNdpPrefixPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: zyNdpPrefixPrefixType.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixPrefixType.setDescription('The type of IPv6 Prefix Address.')
zyNdpPrefixPrefixIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 3), InetAddress())
if mibBuilder.loadTexts: zyNdpPrefixPrefixIpAddress.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixPrefixIpAddress.setDescription('The IPv6 prefix Address for the interface.')
zyNdpPrefixPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 4), Integer32())
if mibBuilder.loadTexts: zyNdpPrefixPrefixLength.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixPrefixLength.setDescription('The IPv6 prefix length of the prefix.')
zyNdpPrefixValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpPrefixValidLifetime.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixValidLifetime.setDescription('Enter the number of Valid Lifetime for the interface. Range of Valid lifetime is (0 to 4294967295). The default value is 2592000.')
zyNdpPrefixPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpPrefixPreferredLifetime.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixPreferredLifetime.setDescription('Enter the number of Preferred Lifetime for the interface. Range of Preferred lifetime is (0 to 4294967295). The default value is 604800.')
zyNdpPrefixNoAutonomousFlagState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 7), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpPrefixNoAutonomousFlagState.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixNoAutonomousFlagState.setDescription('Enable Prefix No-Autonomous Flag for an interface. The default value is disabled.')
zyNdpPrefixNoOnLinkFlagState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 8), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpPrefixNoOnLinkFlagState.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixNoOnLinkFlagState.setDescription('Enable Prefix No-OnLink Flag for an interface. The default value is disabled.')
zyNdpPrefixNoAdvertiseFlagState = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 9), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyNdpPrefixNoAdvertiseFlagState.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixNoAdvertiseFlagState.setDescription('Enable Prefix No-Advertise Flag for an interface. The default value is disabled.')
zyNdpPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 35, 1, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyNdpPrefixRowStatus.setStatus('current')
if mibBuilder.loadTexts: zyNdpPrefixRowStatus.setDescription('This object allows entry to be created and deleted an IPv6 prefix entry.')
mibBuilder.exportSymbols("ZYXEL-IPV6-NDP-MIB", zyNdpPrefixPrefixLength=zyNdpPrefixPrefixLength, zyNdpDadAttempts=zyNdpDadAttempts, zyNdpIfIndex=zyNdpIfIndex, zyNdpPrefixPreferredLifetime=zyNdpPrefixPreferredLifetime, zyNdpPrefixPrefixIpAddress=zyNdpPrefixPrefixIpAddress, zyxelNdpSetup=zyxelNdpSetup, zyNdpMaxNumberOfPrefixes=zyNdpMaxNumberOfPrefixes, zyNdpPrefixNoAdvertiseFlagState=zyNdpPrefixNoAdvertiseFlagState, zyNdpPrefixNoOnLinkFlagState=zyNdpPrefixNoOnLinkFlagState, zyxelNdpPrefixTable=zyxelNdpPrefixTable, zyNdpPrefixIfIndex=zyNdpPrefixIfIndex, PYSNMP_MODULE_ID=zyxelIpv6Ndp, zyNdpPrefixRowStatus=zyNdpPrefixRowStatus, zyxelNdpTable=zyxelNdpTable, zyxelIpv6Ndp=zyxelIpv6Ndp, zyNdpPrefixValidLifetime=zyNdpPrefixValidLifetime, zyNdpReachableTime=zyNdpReachableTime, zyNdpNsInterval=zyNdpNsInterval, zyxelNdpPrefixEntry=zyxelNdpPrefixEntry, zyNdpPrefixNoAutonomousFlagState=zyNdpPrefixNoAutonomousFlagState, zyNdpPrefixPrefixType=zyNdpPrefixPrefixType, zyxelNdpEntry=zyxelNdpEntry)
