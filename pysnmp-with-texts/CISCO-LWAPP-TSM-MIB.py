#
# PySNMP MIB module CISCO-LWAPP-TSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-TSM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:06:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
cLApSysMacAddress, cLApDot11IfSlotId = mibBuilder.importSymbols("CISCO-LWAPP-AP-MIB", "cLApSysMacAddress", "cLApDot11IfSlotId")
CLTsmDot11CurrentPackets, = mibBuilder.importSymbols("CISCO-LWAPP-TC-MIB", "CLTsmDot11CurrentPackets")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, IpAddress, Unsigned32, ObjectIdentity, Gauge32, iso, Integer32, TimeTicks, NotificationType, Bits, MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "Unsigned32", "ObjectIdentity", "Gauge32", "iso", "Integer32", "TimeTicks", "NotificationType", "Bits", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
MacAddress, TextualConvention, TimeStamp, TruthValue, TimeInterval, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "TimeStamp", "TruthValue", "TimeInterval", "DisplayString")
ciscoLwappTsmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 525))
ciscoLwappTsmMIB.setRevisions(('2012-01-31 00:00', '2006-04-17 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoLwappTsmMIB.setRevisionsDescriptions(('Added a new table cLTsmDot11CUTable for channel utilization. Added a new group ciscoLwappTsmDot11StatsGroupSupR01 which supplements to ciscoLwappTsmDot11StatsGroup. Added a new compliance ciscoLwappTsmMIBComplianceRev01 that deprecates ciscoLwappTsmMIBCompliance.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setLastUpdated('201201310000Z')
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setContactInfo('Cisco Systems, Customer Service Postal: 170 West Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS Email: cs-wnbu-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoLwappTsmMIB.setDescription("This MIB is intended to be implemented on all those devices operating as Central controllers, that terminate the Light Weight Access Point Protocol tunnel from Cisco Light-weight LWAPP Access Points. Network management stations learn the audio/video traffic quality observed on WLANs through this MIB. The relationship between CC and the LWAPP APs can be depicted as follows: +......+ +......+ +......+ + + + + + + + CC + + CC + + CC + + + + + + + +......+ +......+ +......+ .. . . .. . . . . . . . . . . . . . . . . . . +......+ +......+ +......+ +......+ + + + + + + + + + AP + + AP + + AP + + AP + + + + + + + + + +......+ +......+ +......+ +......+ . . . . . . . . . . . . . . . . . . . +......+ +......+ +......+ +......+ + + + + + + + + + MN + + MN + + MN + + MN + + + + + + + + + +......+ +......+ +......+ +......+ The LWAPP tunnel exists between the controller and the APs. The MNs communicate with the APs through the protocol defined by the 802.11 standard. LWAPP APs, upon bootup, discover and join one of the controllers and the controller pushes the configuration, that includes the WLAN parameters, to the LWAPP APs. The APs then encapsulate all the 802.11 frames from wireless clients inside LWAPP frames and forward the LWAPP frames to the controller. This MIB provides the information about the per-client /per-AP packet latency, packet jitter, packet loss and roaming time in the network which does affect quality of audio/video traffic. These parameters are called Traffic Stream Metrics. When TSM collection is enabled on all 802.11a/802.11b interfaces, the metrics are collected by controller from AP in every 90 seconds window. Information provided by this MIB can be used by the NMS applications to present measurements of audio and video traffic quality. GLOSSARY Access Point ( AP ) An entity that contains an 802.11 medium access control ( MAC ) and physical layer ( PHY ) interface and provides access to the distribution services via the wireless medium for associated clients. LWAPP APs encapsulate all the 802.11 frames in LWAPP frames and sends it to the controller to which it is logically connected. Central Controller ( CC ) The central entity that terminates the LWAPP protocol tunnel from the LWAPP APs. Throughout this MIB, this entity is also referred to as 'controller'. Light Weight Access Point Protocol ( LWAPP ) This is a generic protocol that defines the communication between the Access Points and the Central Controller. Mobile Node ( MN ) A roaming 802.11 wireless device in a wireless network associated with an access point. Traffic Stream Metrics (TSM) These are parameters like the per-client / per-AP packet latency, packet jitter, packet loss and roaming time in the network, which does affect quality of audio/video traffic. These statistics are collected to study and characterize the pattern of data traffic and perform appropriate management tasks to regulate the same for the smooth functioning of the network. Channel Utilization (CU) The Channel Utilization is defined as the percentage of time, the QAP sensed the medium was busy, as indicated by either the physical or virtual carrier sense (CS) mechanism. Picc Picc is the time consumed by AP for receiving frames not destined to itself on a particular Radio interface from co-channel APs and Clients. Pib Pib is the time consumed by AP for receiving frames on a particular Radio interface which are not correctly de-modulated. REFERENCE [1] Wireless LAN Medium Access Control ( MAC ) and Physical Layer ( PHY ) Specifications. [2] Draft-obara-capwap-lwapp-00.txt, IETF Light Weight Access Point Protocol")
ciscoLwappTsmMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 0))
ciscoLwappTsmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1))
ciscoLwappTsmMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2))
ciscoLwappTsmDot11Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1))
ciscoLwappTsmDot11Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2))
cLTsmDot11aConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11aConfig.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11aConfig.setDescription("When this object is set to 'true', the associated APs send the controller, every 90 seconds, statistical data on traffic observed on their 802.11a interfaces. When this object is set to 'false', the APs stop sending statistical data on the 802.11a interfaces to the controller.")
cLTsmDot11bgConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11bgConfig.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11bgConfig.setDescription("When this object is set to 'true', the associated APs send the controller, every 90 seconds, statistical data on traffic observed on their 802.11b interfaces. When this object is set to 'false', the APs stop sending statistical data on the 802.11b interfaces to the controller.")
cLTsmDot11MaxClientsPerDot11Intf = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11MaxClientsPerDot11Intf.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11MaxClientsPerDot11Intf.setDescription('The maximum number of clients per dot11 interface for which TSM statistics are collected.')
cLTsmDot11MaxTsmStatsEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLTsmDot11MaxTsmStatsEntries.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11MaxTsmStatsEntries.setDescription('The maximum number of entries that can be accommodated in the database to collect the traffic stream metrics received by the controller from the associated APs on uplink and downlink traffic.')
cLTsmDot11ClientTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1), )
if mibBuilder.loadTexts: cLTsmDot11ClientTable.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11ClientTable.setDescription('This table lists those clients for which TSM statistics are collected by the controller from the respective APs associated with the controller. A row is added to this table when an AP sends TSM statistics corresponding to a wireless client associated to it through one of its dot11 interfaces identified by cLApSysMacAddress and cLApDot11IfSlotId. The maximum number of entries per radio interface is given by cLTsmDot11MaxClientsPerDot11Intf. The oldest entry is deleted when the number of entries is to exceed the limit indicated by cLTsmDot11MaxClientsPerDot11Intf.')
cLTsmDot11ClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientIndex"))
if mibBuilder.loadTexts: cLTsmDot11ClientEntry.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11ClientEntry.setDescription('Each entry represents a conceptual row in cLTsmDot11ClientTable and uniquely identified by cLApSysMacAddress, cLApDot11IfSlotId and cLTsmDot11ClientIndex.')
cLTsmDot11ClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cLTsmDot11ClientIndex.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11ClientIndex.setDescription('This object uniquely identifies one client associated to the AP through the dot11 interface identified by cLApSysMacAddress and cLApDot11IfSlotId.')
cLTsmDot11ClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11ClientMacAddress.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11ClientMacAddress.setDescription('This object indicates the MAC address of the wireless client for which TSM statistics are collected.')
cLTsmDot11UplinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2), )
if mibBuilder.loadTexts: cLTsmDot11UplinkTable.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkTable.setDescription("This table represents the statistics received by the controller from the associated APs, on the uplink traffic ( traffic from the 802.11 wireless client to the AP ) observed on the dot11 interfaces of the respective APs. For example, suppose a client with address 12:3f:73:99:de:5b connects to the 802.11 radio interface, 13:13:43:de:bb:ff of an AP at 18:30:00 hours. Assuming that cLTsmDot11aConfig (or cLTsmDot11bConfig) is set to 'true' for the respective type of interface, every 90 seconds, AP sends the controller statistical data for the client 12:3f:73:99:de:5b associated at the interface 13:13:43:de:bb:ff. So, after 3 minutes, i.e., 180 seconds, controller would have received statistics for the particular client and AP combination twice leading to two rows in this table as follows. 1> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:33:00 2> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:31:30 Now assume that, at 18:33:00, the client moves and associates with another AP associated to the same controller, at the AP's 802.11 interface 14:14:43:de:dd:ee. After 3 minutes, i.e., 180 seconds (say), controller would have again received statistics from the AP, for the particular client and new AP combination twice leading to two new rows in this table. At this point, this table will have entries with following references : 1> Client: 12:3f:73:99:de:5b Interface:14:14:43:de:dd:ee Time: 18:36:00 2> Client: 12:3f:73:99:de:5b Interface:14:14:43:de:dd:ee Time: 18:34:30 3> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:33:00 4> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:31:30 The maximum number of entries in this table is indicated by cLTsmDot11MaxTsmStatsEntries. When the specified limit of entries is reached the oldest entries will be removed to make room for new entries. However, the controller may remove the entries if it encounters memory shortage.")
cLTsmDot11UplinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkApMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkApIfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11UplinkEntry.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkEntry.setDescription('Each entry represents a conceptual row in this table and corresponds to the uplink TSM statistics received from an AP, in a 90 second window (cLTsmDot11UplinkTimeStamp), for a mobile-station /client (cLClientMacAddress) associated with the AP at its 802.11 interface.')
cLTsmDot11UplinkApMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLTsmDot11UplinkApMacAddress.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkApMacAddress.setDescription('This object represents the radio MAC address of the AP with which this client was associated when these statistics were observed.')
cLTsmDot11UplinkApIfSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: cLTsmDot11UplinkApIfSlotId.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkApIfSlotId.setDescription('This object represents a slot number and uniquely identifies the dot11 interface of the AP along with cLTsmDot11UplinkApMacAddress with which the client indicated by cLTsmDot11ClientMacAddress was associated when these statistics were observed.')
cLTsmDot11UplinkTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 3), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11UplinkTimeStamp.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkTimeStamp.setDescription("This object indicates the value of sysUpTime at which these statistics were received from the AP. This represents number of seconds elapsed since 00:00:00 on January 1, 1970, Coordinated Universal Time (UTC). So a value of '1131362704' means 'Mon Nov 7 16:55:04 2005'.")
cLTsmDot11UplinkAvgPktQDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 4), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkAvgPktQDelay.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkAvgPktQDelay.setDescription('The average packet queue delay in the upstream direction.')
cLTsmDot11UplinkLt10Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 5), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkLt10Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkLt10Packets.setDescription('The number of packets transmitted by the client and received by the AP that experienced a delay of less than 10 ms.')
cLTsmDot11UplinkPktGt10Lt20Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 6), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt10Lt20Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt10Lt20Packets.setDescription('The number of packets transmitted by the client and received by the AP that experienced a delay greater than or equal to 10 ms and less than 20 ms.')
cLTsmDot11UplinkPktGt20Lt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 7), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt20Lt40Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt20Lt40Packets.setDescription('The number of packets transmitted by the client and received by the AP that experienced a delay greater than or equal to 20 ms and less than 40 ms.')
cLTsmDot11UplinkPktGt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 8), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt40Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkPktGt40Packets.setDescription('The number of packets transmitted by the client and received by the AP that experienced a delay greater than 40 ms.')
cLTsmDot11UplinkLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 9), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkLostPackets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkLostPackets.setDescription('This object indicates the number of lost upstream packets in the specified interval.')
cLTsmDot11UplinkTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 10), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkTotalPackets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkTotalPackets.setDescription('The number of upstream packets received in the specified interval.')
cLTsmDot11UplinkRoamingPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 11), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingPackets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingPackets.setDescription('The number of packets exchanged for roaming negotiations in the specified interval.')
cLTsmDot11UplinkRoamingDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 2, 1, 12), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingDelay.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11UplinkRoamingDelay.setDescription('The average roaming delay observed in the specified interval.')
cLTsmDot11DnlinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3), )
if mibBuilder.loadTexts: cLTsmDot11DnlinkTable.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkTable.setDescription("This table represents the statistics received by the controller from the associated APs, on the downlink traffic ( traffic from the AP to the 802.11 wireless client ) observed on the dot11 interfaces of the respective APs. For example, suppose a client with address 12:3f:73:99:de:5b connects to the 802.11 radio interface, 13:13:43:de:bb:ff of an AP at 18:30:00 hours. Assuming that cLTsmDot11aConfig (or cLTsmDot11bConfig) is set to 'true' for the respective type of interface, every 90 seconds, the AP sends the controller statistical data about the 12:3f:73:99:de:5b associated at the interface 13:13:43:de:bb:ff. So, after 3 minutes, i.e., 180 seconds, controller would have received statistics from the AP for the particular client and AP combination twice leading to two rows in this table as follows. 1> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:33:00 2> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:31:30 Now assume that, at 18:33:00, the client moves and associates with another AP associated to the same controller, at the AP's 802.11 interface 14:14:43:de:dd:ee. After 3 minutes, i.e., 180 seconds (say), controller would have again collected statistics for the particular client and new AP combination twice leading to two new rows in this table. At this point, this table will have entries as follows. 1> Client: 12:3f:73:99:de:5b Interface:14:14:43:de:dd:ee Time: 18:36:00 2> Client: 12:3f:73:99:de:5b Interface:14:14:43:de:dd:ee Time: 18:34:30 3> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:33:00 4> Client: 12:3f:73:99:de:5b Interface:13:13:43:de:bb:ff Time: 18:31:30 The maximum number of entries in this table is indicated by cLTsmDot11MaxTsmStatsEntries. When the specified limit of entries is reached the oldest entries will be removed to make room for new entries. However, the controller may remove the entries if it encounters memory shortage.")
cLTsmDot11DnlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkApMacAddress"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkApIfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11DnlinkEntry.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkEntry.setDescription('Each entry represents a conceptual row in this table and corresponds to the downlink TSM statistics received by the controller from an AP in a 90 second window (cLTsmDot11DnlinkTimeStamp), for a mobile-station/client associated with the AP at its 802.11 interface.')
cLTsmDot11DnlinkApMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLTsmDot11DnlinkApMacAddress.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkApMacAddress.setDescription('This object represents the radio MAC address of the AP with which this client was associated when these statistics were observed.')
cLTsmDot11DnlinkApIfSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: cLTsmDot11DnlinkApIfSlotId.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkApIfSlotId.setDescription('This object represents a slot number and uniquely identifies the dot11 interface of the AP along with cLTsmDot11DnlinkApMacAddress with which the client indicated by cLTsmDot11ClientMacAddress was associated when these statistics were observed.')
cLTsmDot11DnlinkTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 3), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11DnlinkTimeStamp.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkTimeStamp.setDescription("This object indicates the value of sysUpTime at which these statistics were received from the AP. This represents number of seconds elapsed since 00:00:00 on January 1, 1970, Coordinated Universal Time (UTC). So a value of '1131362704' means 'Mon Nov 7 16:55:04 2005'.")
cLTsmDot11DnlinkAvgPktQDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 4), TimeInterval()).setUnits('hundredths-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkAvgPktQDelay.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkAvgPktQDelay.setDescription('The average packet queue delay in the downstream direction.')
cLTsmDot11DnlinkLt10Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 5), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkLt10Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkLt10Packets.setDescription('The number of packets transmitted by the AP and received by the client that experienced a delay of less than 10 ms.')
cLTsmDot11DnlinkPktGt10Lt20Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 6), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt10Lt20Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt10Lt20Packets.setDescription('The number of packets transmitted by the AP and received by the client that experienced a delay greater than or equal to 10 ms and less than 20 ms.')
cLTsmDot11DnlinkPktGt20Lt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 7), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt20Lt40Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt20Lt40Packets.setDescription('The number of packets transmitted by the AP and received by the client that experienced a delay greater than or equal to 20 ms and less than 40 ms.')
cLTsmDot11DnlinkPktGt40Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 8), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt40Packets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkPktGt40Packets.setDescription('The number of packets transmitted by the AP and received by the client that experienced a delay greater than 40 ms.')
cLTsmDot11DnlinkLostPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 9), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkLostPackets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkLostPackets.setDescription('This object indicates the number of lost downstream packets in the specified interval.')
cLTsmDot11DnlinkTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 3, 1, 10), CLTsmDot11CurrentPackets()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11DnlinkTotalPackets.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11DnlinkTotalPackets.setDescription('The number of downstream packets received in the specified interval.')
cLTsmDot11CUTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4), )
if mibBuilder.loadTexts: cLTsmDot11CUTable.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUTable.setDescription('This table represents Channel Utilization statistics received by the Controller from associated APs observed on the dot11 radio interfaces of the respective APs. A row is added to this table when an AP sends Channel Utilization metrics corresponding to its dot11 radio interfaces. The maximum number of entries per radio interface is represented by cLTsmDot11MaxTsmStatsEntries. The oldest entry is deleted when the number of entries exceeds the limit indicated by cLTsmDot11MaxTsmStatsEntries.')
cLTsmDot11CUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-LWAPP-AP-MIB", "cLApSysMacAddress"), (0, "CISCO-LWAPP-AP-MIB", "cLApDot11IfSlotId"), (0, "CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUTimeStamp"))
if mibBuilder.loadTexts: cLTsmDot11CUEntry.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUEntry.setDescription('Each entry represents a conceptual row in cLTsmDot11CUTable and uniquely identified by cLApSysMacAddress, cLApDot11IfSlotId and cLTsmDot11CUTimeStamp.')
cLTsmDot11CUTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 1), TimeStamp())
if mibBuilder.loadTexts: cLTsmDot11CUTimeStamp.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUTimeStamp.setDescription("This object indicates the value of sysUpTime at which these statistics were received from the AP. This represents number of seconds elapsed since 00:00:00 on January 1, 1970, Coordinated Universal Time (UTC). So a value of '1131362704' means 'Mon Nov 7 16:55:04 2005'.")
cLTsmDot11CUFiftyPercentilePicc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePicc.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePicc.setDescription('This object represents the 50th percentile of Picc. Picc represents the percentage of time consumed by the AP for receiving frames on a particular radio interface from co-channel APs & clients.')
cLTsmDot11CUNinetyPercentilePicc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePicc.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePicc.setDescription('This object represents the 90th percentile of Picc. Picc represents the percentage of time consumed by the AP for receiving frames on a particular radio interface from co-channel APs & clients.')
cLTsmDot11CUFiftyPercentilePib = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePib.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUFiftyPercentilePib.setDescription('This object represents the 50th percentile of Pib. Pib represents the percentage of time consumed by the AP for receiving frames on a particular radio interface which cannot be correctly de-modulated.')
cLTsmDot11CUNinetyPercentilePib = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 525, 1, 2, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePib.setStatus('current')
if mibBuilder.loadTexts: cLTsmDot11CUNinetyPercentilePib.setDescription('This object represents the 90th percentile of Pib. Pib represents the percentage of time consumed by the AP for receiving frames on a particular radio interface which cannot be correctly de-modulated.')
ciscoLwappTsmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1))
ciscoLwappTsmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2))
ciscoLwappTsmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1, 1)).setObjects(("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11ConfigGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmMIBCompliance = ciscoLwappTsmMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoLwappTsmMIBCompliance.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappTsmMIB module.')
ciscoLwappTsmMIBComplianceRev01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 1, 2)).setObjects(("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11ConfigGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroup"), ("CISCO-LWAPP-TSM-MIB", "ciscoLwappTsmDot11StatsGroupSupR01"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmMIBComplianceRev01 = ciscoLwappTsmMIBComplianceRev01.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappTsmMIBComplianceRev01.setDescription('The compliance statement for the SNMP entities that implement the ciscoLwappTsmMIB module.')
ciscoLwappTsmDot11ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 1)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11aConfig"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11bgConfig"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11MaxClientsPerDot11Intf"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11MaxTsmStatsEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11ConfigGroup = ciscoLwappTsmDot11ConfigGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappTsmDot11ConfigGroup.setDescription('This collection of objects represent the status of traffic metrics collection on 802.11 networks.')
ciscoLwappTsmDot11StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 2)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11ClientMacAddress"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkAvgPktQDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkLt10Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt10Lt20Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt20Lt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkPktGt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkLostPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkTotalPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkRoamingPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11UplinkRoamingDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkAvgPktQDelay"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkLt10Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt10Lt20Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt20Lt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkPktGt40Packets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkLostPackets"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11DnlinkTotalPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11StatsGroup = ciscoLwappTsmDot11StatsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappTsmDot11StatsGroup.setDescription('This collection of objects represent the TSM statistics collected by the controller from the APs on the traffic observed on the 802.11 interfaces of the APs.')
ciscoLwappTsmDot11StatsGroupSupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 525, 2, 2, 3)).setObjects(("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUFiftyPercentilePicc"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUNinetyPercentilePicc"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUFiftyPercentilePib"), ("CISCO-LWAPP-TSM-MIB", "cLTsmDot11CUNinetyPercentilePib"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappTsmDot11StatsGroupSupR01 = ciscoLwappTsmDot11StatsGroupSupR01.setStatus('current')
if mibBuilder.loadTexts: ciscoLwappTsmDot11StatsGroupSupR01.setDescription('This collection of objects represent the TSM statistics collected by the controller from the APs on the traffic observed on the 802.11 interfaces of the APs. This table is a supplement to ciscoLwappTsmDot11StatsGroup')
mibBuilder.exportSymbols("CISCO-LWAPP-TSM-MIB", ciscoLwappTsmDot11StatsGroupSupR01=ciscoLwappTsmDot11StatsGroupSupR01, cLTsmDot11UplinkPktGt20Lt40Packets=cLTsmDot11UplinkPktGt20Lt40Packets, cLTsmDot11UplinkTotalPackets=cLTsmDot11UplinkTotalPackets, cLTsmDot11DnlinkLt10Packets=cLTsmDot11DnlinkLt10Packets, cLTsmDot11bgConfig=cLTsmDot11bgConfig, cLTsmDot11CUEntry=cLTsmDot11CUEntry, cLTsmDot11CUNinetyPercentilePib=cLTsmDot11CUNinetyPercentilePib, cLTsmDot11UplinkLt10Packets=cLTsmDot11UplinkLt10Packets, cLTsmDot11UplinkLostPackets=cLTsmDot11UplinkLostPackets, cLTsmDot11UplinkEntry=cLTsmDot11UplinkEntry, cLTsmDot11DnlinkAvgPktQDelay=cLTsmDot11DnlinkAvgPktQDelay, cLTsmDot11ClientIndex=cLTsmDot11ClientIndex, cLTsmDot11CUFiftyPercentilePicc=cLTsmDot11CUFiftyPercentilePicc, ciscoLwappTsmDot11Config=ciscoLwappTsmDot11Config, cLTsmDot11CUNinetyPercentilePicc=cLTsmDot11CUNinetyPercentilePicc, cLTsmDot11ClientTable=cLTsmDot11ClientTable, cLTsmDot11DnlinkTable=cLTsmDot11DnlinkTable, cLTsmDot11CUTable=cLTsmDot11CUTable, ciscoLwappTsmMIBNotifs=ciscoLwappTsmMIBNotifs, cLTsmDot11MaxTsmStatsEntries=cLTsmDot11MaxTsmStatsEntries, cLTsmDot11UplinkTable=cLTsmDot11UplinkTable, cLTsmDot11UplinkPktGt40Packets=cLTsmDot11UplinkPktGt40Packets, cLTsmDot11ClientMacAddress=cLTsmDot11ClientMacAddress, cLTsmDot11DnlinkLostPackets=cLTsmDot11DnlinkLostPackets, cLTsmDot11UplinkApMacAddress=cLTsmDot11UplinkApMacAddress, cLTsmDot11UplinkApIfSlotId=cLTsmDot11UplinkApIfSlotId, PYSNMP_MODULE_ID=ciscoLwappTsmMIB, cLTsmDot11UplinkRoamingDelay=cLTsmDot11UplinkRoamingDelay, ciscoLwappTsmMIBConform=ciscoLwappTsmMIBConform, ciscoLwappTsmMIB=ciscoLwappTsmMIB, ciscoLwappTsmDot11StatsGroup=ciscoLwappTsmDot11StatsGroup, cLTsmDot11DnlinkApIfSlotId=cLTsmDot11DnlinkApIfSlotId, cLTsmDot11DnlinkApMacAddress=cLTsmDot11DnlinkApMacAddress, cLTsmDot11aConfig=cLTsmDot11aConfig, cLTsmDot11UplinkRoamingPackets=cLTsmDot11UplinkRoamingPackets, cLTsmDot11UplinkTimeStamp=cLTsmDot11UplinkTimeStamp, cLTsmDot11DnlinkPktGt20Lt40Packets=cLTsmDot11DnlinkPktGt20Lt40Packets, cLTsmDot11UplinkAvgPktQDelay=cLTsmDot11UplinkAvgPktQDelay, cLTsmDot11CUTimeStamp=cLTsmDot11CUTimeStamp, cLTsmDot11CUFiftyPercentilePib=cLTsmDot11CUFiftyPercentilePib, ciscoLwappTsmDot11ConfigGroup=ciscoLwappTsmDot11ConfigGroup, ciscoLwappTsmMIBGroups=ciscoLwappTsmMIBGroups, cLTsmDot11ClientEntry=cLTsmDot11ClientEntry, ciscoLwappTsmDot11Stats=ciscoLwappTsmDot11Stats, cLTsmDot11DnlinkPktGt40Packets=cLTsmDot11DnlinkPktGt40Packets, cLTsmDot11DnlinkTotalPackets=cLTsmDot11DnlinkTotalPackets, ciscoLwappTsmMIBCompliances=ciscoLwappTsmMIBCompliances, ciscoLwappTsmMIBCompliance=ciscoLwappTsmMIBCompliance, cLTsmDot11DnlinkEntry=cLTsmDot11DnlinkEntry, cLTsmDot11UplinkPktGt10Lt20Packets=cLTsmDot11UplinkPktGt10Lt20Packets, cLTsmDot11MaxClientsPerDot11Intf=cLTsmDot11MaxClientsPerDot11Intf, ciscoLwappTsmMIBObjects=ciscoLwappTsmMIBObjects, ciscoLwappTsmMIBComplianceRev01=ciscoLwappTsmMIBComplianceRev01, cLTsmDot11DnlinkTimeStamp=cLTsmDot11DnlinkTimeStamp, cLTsmDot11DnlinkPktGt10Lt20Packets=cLTsmDot11DnlinkPktGt10Lt20Packets)
