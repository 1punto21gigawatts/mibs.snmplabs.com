#
# PySNMP MIB module CISCO-WAN-TRAP-VARS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-TRAP-VARS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:20:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, Gauge32, Bits, IpAddress, ModuleIdentity, Integer32, iso, Counter64, MibIdentifier, TimeTicks, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "Gauge32", "Bits", "IpAddress", "ModuleIdentity", "Integer32", "iso", "Counter64", "MibIdentifier", "TimeTicks", "Counter32", "NotificationType")
AutonomousType, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "TextualConvention", "DisplayString")
ciscoWanTrapVarsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 5))
ciscoWanTrapVarsMIB.setRevisions(('2002-11-26 00:00', '2002-07-17 00:00', '2001-11-07 00:00', '2001-11-06 00:00', '2001-07-26 00:00', '1999-05-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoWanTrapVarsMIB.setRevisionsDescriptions(('Added following objects: - cwTrapSecondIndex - cwTrapThirdIndex ', 'a) Importing Unsigned32 from SNMPv2-SMI. b) Add cwTrapVarLength, cwTrapAtmAdressType and cwTrapReference. c) Add cwTrapSecondIndex and cwTrapThirdIndex', 'Added following objects: cwTrapCardRole, cwTrapSctCardType, cwTrapSctType, cwTrapSctId and cwTrapSctMajorVersion.', 'Added following objects: cwTrapPhysicalContainer, cwTrapPhysicalUnit.', 'Add cwTrapDisplayString', 'Initial version of the MIB',))
if mibBuilder.loadTexts: ciscoWanTrapVarsMIB.setLastUpdated('200211260000Z')
if mibBuilder.loadTexts: ciscoWanTrapVarsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoWanTrapVarsMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoWanTrapVarsMIB.setDescription('This MIB module is for Supporting Varbinds used only in trap defintions. The NMS applications should not depend on the implementation of these objects.The SNMP Requests(GET,GET-NEXT) may not be valid for these objects.')
cwTrapVarMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 5, 1))
cwTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1))
cwTrapIndex = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapIndex.setStatus('current')
if mibBuilder.loadTexts: cwTrapIndex.setDescription('The object containing the value which can be used for indexing to any table.')
cwTrapSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSlotNumber.setStatus('current')
if mibBuilder.loadTexts: cwTrapSlotNumber.setDescription('This object contains the slot number of the module.')
cwTrapPhysicalVendorType = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 3), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapPhysicalVendorType.setStatus('current')
if mibBuilder.loadTexts: cwTrapPhysicalVendorType.setDescription('This object contains the entPhysicalVendorType value for the physical entity.')
cwTrapLineModuleNumber = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapLineModuleNumber.setStatus('current')
if mibBuilder.loadTexts: cwTrapLineModuleNumber.setDescription('This object contains the value for entPhysicalParentRelPos object for line modules.')
cwTrapOctetString = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapOctetString.setStatus('current')
if mibBuilder.loadTexts: cwTrapOctetString.setDescription('This object contains the octet string value.')
cwTrapDisplayString = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapDisplayString.setStatus('current')
if mibBuilder.loadTexts: cwTrapDisplayString.setDescription('This object contains the display string value.')
cwTrapPhysicalContainer = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapPhysicalContainer.setStatus('current')
if mibBuilder.loadTexts: cwTrapPhysicalContainer.setDescription('This object contains the container(parent unit number) number of an entity in entPhysicalTable. This object contains the value for the following entities: Fan Tray Power Supply Tray/Group. If it contains value zero, then this object is not applicable for the entity identified by cwTrapPhysicalUnit.')
cwTrapPhysicalUnit = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapPhysicalUnit.setStatus('current')
if mibBuilder.loadTexts: cwTrapPhysicalUnit.setDescription('This object contains the physical unit number(Relative Position) of the physical entity. The physical unit number depends upon the value specified in cwTrapPhysicalContainer object.')
cwTrapCardRole = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("t1", 1), ("e1", 2), ("t3", 3), ("e3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapCardRole.setStatus('current')
if mibBuilder.loadTexts: cwTrapCardRole.setDescription('This object indicates the card role change to T1 from E1, or T3 from E3, vice versa. In case of a card with multiple roles, this object only indicates the changeable role swap between T1 and E1, or T3 and E3.')
cwTrapSctCardType = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("axsm", 1), ("axsme", 2), ("pxm1e", 3), ("hsfr", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSctCardType.setStatus('current')
if mibBuilder.loadTexts: cwTrapSctCardType.setDescription('This object is used only for traps and represents the cwSctCardType object in CISCO-WAN-SCT-MGMT-MIB.my.')
cwTrapSctType = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portSct", 1), ("cardSct", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSctType.setStatus('current')
if mibBuilder.loadTexts: cwTrapSctType.setDescription('This object is used only for traps and represents the cwSctType object in CISCO-WAN-SCT-MGMT-MIB.my.')
cwTrapSctId = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSctId.setStatus('current')
if mibBuilder.loadTexts: cwTrapSctId.setDescription('This object is used only for traps and represents the cwSctId object in CISCO-WAN-SCT-MGMT-MIB.my.')
cwTrapSctMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSctMajorVersion.setStatus('current')
if mibBuilder.loadTexts: cwTrapSctMajorVersion.setDescription('This object is used only for traps and represents the cwSctMajorVersion object in CISCO-WAN-SCT-MGMT-MIB.my.')
cwTrapVarLength = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapVarLength.setStatus('current')
if mibBuilder.loadTexts: cwTrapVarLength.setDescription('This is an object used only for traps and contains a value for the length of another object. For instance, this can be the length of an address.')
cwTrapAtmAddressType = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 8))).clone(namedValues=NamedValues(("e164", 3), ("nsap", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapAtmAddressType.setStatus('current')
if mibBuilder.loadTexts: cwTrapAtmAddressType.setDescription('This object is used only for traps and represents the type of an ATM addresses.')
cwTrapReference = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapReference.setStatus('current')
if mibBuilder.loadTexts: cwTrapReference.setDescription("This object is used only for traps and represents an object of the same SYNTAX. This object is used in place of: a) 'cwapReference' in CISCO-WAN-ATM-PARTY-MIB.my.")
cwTrapSecondIndex = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapSecondIndex.setStatus('current')
if mibBuilder.loadTexts: cwTrapSecondIndex.setDescription('The object containing the value which can be used for indexing to any table.')
cwTrapThirdIndex = MibScalar((1, 3, 6, 1, 4, 1, 351, 150, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwTrapThirdIndex.setStatus('current')
if mibBuilder.loadTexts: cwTrapThirdIndex.setDescription('The object containing the value which can be used for indexing to any table.')
cwTrapVarsMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 5, 2))
cwTrapVarsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1))
cwTrapVarsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2))
cwTrapVarsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1, 1)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarsTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsCompliance = cwTrapVarsCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsCompliance.setDescription('The compliance statement for cwTrapVarsGroup.')
cwTrapVarsCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1, 2)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarsTrapGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsCompliance2 = cwTrapVarsCompliance2.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsCompliance2.setDescription('The compliance statement for cwTrapVarsGroup.')
cwTrapVarsCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1, 3)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarsTrapGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsCompliance3 = cwTrapVarsCompliance3.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsCompliance3.setDescription('The compliance statement for cwTrapVarsGroup.')
cwTrapVarsCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1, 4)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarsTrapGroup4"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsCompliance4 = cwTrapVarsCompliance4.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsCompliance4.setDescription('The compliance statement for cwTrapVarsGroup.')
cwTrapVarsCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 1, 5)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarsTrapGroup5"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsCompliance5 = cwTrapVarsCompliance5.setStatus('current')
if mibBuilder.loadTexts: cwTrapVarsCompliance5.setDescription('The compliance statement for cwTrapVarsGroup.')
cwTrapVarsTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2, 1)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSlotNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalVendorType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapLineModuleNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapOctetString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsTrapGroup = cwTrapVarsTrapGroup.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsTrapGroup.setDescription('The collection of objects which are used only in trap varbinds.')
cwTrapVarsTrapGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2, 2)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSlotNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalVendorType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapLineModuleNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapOctetString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapDisplayString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsTrapGroup2 = cwTrapVarsTrapGroup2.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsTrapGroup2.setDescription('The collection of objects which are used only in trap varbinds.')
cwTrapVarsTrapGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2, 3)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSlotNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalVendorType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapLineModuleNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapOctetString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapDisplayString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalContainer"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsTrapGroup3 = cwTrapVarsTrapGroup3.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsTrapGroup3.setDescription('The collection of objects which are used only in trap varbinds.')
cwTrapVarsTrapGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2, 4)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSlotNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalVendorType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapLineModuleNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapOctetString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapDisplayString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalContainer"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalUnit"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapCardRole"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctCardType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctId"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctMajorVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsTrapGroup4 = cwTrapVarsTrapGroup4.setStatus('deprecated')
if mibBuilder.loadTexts: cwTrapVarsTrapGroup4.setDescription('The collection of objects which are used only in trap varbinds.')
cwTrapVarsTrapGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 5, 2, 2, 5)).setObjects(("CISCO-WAN-TRAP-VARS-MIB", "cwTrapIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSlotNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalVendorType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapLineModuleNumber"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapOctetString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapDisplayString"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalContainer"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapPhysicalUnit"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapCardRole"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctCardType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctId"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSctMajorVersion"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapVarLength"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapAtmAddressType"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapReference"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapSecondIndex"), ("CISCO-WAN-TRAP-VARS-MIB", "cwTrapThirdIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwTrapVarsTrapGroup5 = cwTrapVarsTrapGroup5.setStatus('current')
if mibBuilder.loadTexts: cwTrapVarsTrapGroup5.setDescription('The collection of objects which are used only in trap varbinds.')
mibBuilder.exportSymbols("CISCO-WAN-TRAP-VARS-MIB", cwTrapLineModuleNumber=cwTrapLineModuleNumber, cwTrapIndex=cwTrapIndex, ciscoWanTrapVarsMIB=ciscoWanTrapVarsMIB, cwTrapVarsTrapGroup=cwTrapVarsTrapGroup, cwTrapSctId=cwTrapSctId, cwTrapReference=cwTrapReference, cwTrapVarsTrapGroup4=cwTrapVarsTrapGroup4, cwTrapVarsMIBCompliances=cwTrapVarsMIBCompliances, cwTrapVarLength=cwTrapVarLength, cwTrapVarsCompliance2=cwTrapVarsCompliance2, cwTrapVarsMIBConformance=cwTrapVarsMIBConformance, cwTrapPhysicalVendorType=cwTrapPhysicalVendorType, cwTrapSlotNumber=cwTrapSlotNumber, cwTrapSctCardType=cwTrapSctCardType, cwTrapVarsMIBGroups=cwTrapVarsMIBGroups, cwTrapPhysicalContainer=cwTrapPhysicalContainer, cwTrapVarMIBObjects=cwTrapVarMIBObjects, cwTrapVarsCompliance3=cwTrapVarsCompliance3, cwTrapSctType=cwTrapSctType, cwTrapVars=cwTrapVars, cwTrapSecondIndex=cwTrapSecondIndex, cwTrapVarsTrapGroup2=cwTrapVarsTrapGroup2, cwTrapVarsTrapGroup5=cwTrapVarsTrapGroup5, cwTrapVarsCompliance4=cwTrapVarsCompliance4, cwTrapPhysicalUnit=cwTrapPhysicalUnit, cwTrapCardRole=cwTrapCardRole, cwTrapOctetString=cwTrapOctetString, cwTrapAtmAddressType=cwTrapAtmAddressType, cwTrapVarsCompliance5=cwTrapVarsCompliance5, cwTrapVarsTrapGroup3=cwTrapVarsTrapGroup3, cwTrapSctMajorVersion=cwTrapSctMajorVersion, cwTrapThirdIndex=cwTrapThirdIndex, cwTrapDisplayString=cwTrapDisplayString, PYSNMP_MODULE_ID=ciscoWanTrapVarsMIB, cwTrapVarsCompliance=cwTrapVarsCompliance)
