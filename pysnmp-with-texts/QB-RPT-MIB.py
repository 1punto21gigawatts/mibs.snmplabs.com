#
# PySNMP MIB module QB-RPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/QB-RPT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:43:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
qbMibs, = mibBuilder.importSymbols("QUANTUMBRIDGE-REG", "qbMibs")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, Integer32, NotificationType, MibIdentifier, IpAddress, ObjectIdentity, iso, Counter32, Unsigned32, Counter64, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Integer32", "NotificationType", "MibIdentifier", "IpAddress", "ObjectIdentity", "iso", "Counter32", "Unsigned32", "Counter64", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
qbSysRptMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4323, 2, 8))
if mibBuilder.loadTexts: qbSysRptMIB.setLastUpdated('0005221434Z')
if mibBuilder.loadTexts: qbSysRptMIB.setOrganization('Quantum Bridge Inc.')
if mibBuilder.loadTexts: qbSysRptMIB.setContactInfo('mvaysman@quantumbridge.com')
if mibBuilder.loadTexts: qbSysRptMIB.setDescription('This module defines objects for retrieving reports bi the QBCLI. in Quantum Bridge devices.')
qbSysRptObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 8, 1))
qbSysRptTables = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2))
qbSysRptConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 8, 3))
qbSysRptTable = MibTable((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1), )
if mibBuilder.loadTexts: qbSysRptTable.setStatus('current')
if mibBuilder.loadTexts: qbSysRptTable.setDescription('The Quantum Bridge qbSysReport table contains a list of currently implemented reports. The table is visble only for the CLI community string')
qbSysRptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1), ).setIndexNames((0, "QB-RPT-MIB", "qbSysRptId"), (0, "QB-RPT-MIB", "qbSysAid"), (0, "QB-RPT-MIB", "qbSysArg1"), (0, "QB-RPT-MIB", "qbSysArg2"), (0, "QB-RPT-MIB", "qbSysArg3"), (0, "QB-RPT-MIB", "qbSysArg4"), (0, "QB-RPT-MIB", "qbSysArg5"))
if mibBuilder.loadTexts: qbSysRptEntry.setStatus('current')
if mibBuilder.loadTexts: qbSysRptEntry.setDescription('An entry in the Quantum Bridge qbSysReportTable. Every entry contains information related to a particular report')
qbSysRptId = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: qbSysRptId.setStatus('current')
if mibBuilder.loadTexts: qbSysRptId.setDescription('The requested report identifier')
qbSysAid = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: qbSysAid.setStatus('current')
if mibBuilder.loadTexts: qbSysAid.setDescription('The system aid')
qbSysArg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysArg1.setStatus('current')
if mibBuilder.loadTexts: qbSysArg1.setDescription('Argument needed to pass to report from climgr')
qbSysArg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysArg2.setStatus('current')
if mibBuilder.loadTexts: qbSysArg2.setDescription('Argument needed to pass to report from climgr')
qbSysArg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysArg3.setStatus('current')
if mibBuilder.loadTexts: qbSysArg3.setDescription('Argument needed to pass to report from climgr')
qbSysArg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysArg4.setStatus('current')
if mibBuilder.loadTexts: qbSysArg4.setDescription('Argument needed to pass to report from climgr')
qbSysArg5 = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysArg5.setStatus('current')
if mibBuilder.loadTexts: qbSysArg5.setDescription('Argument needed to pass to report from climgr')
qbSysRptSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 8), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysRptSize.setStatus('current')
if mibBuilder.loadTexts: qbSysRptSize.setDescription('The size of collected report in bytes.')
qbSysRpt = MibTableColumn((1, 3, 6, 1, 4, 1, 4323, 2, 8, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qbSysRpt.setStatus('current')
if mibBuilder.loadTexts: qbSysRpt.setDescription('The location of gathered data. This is a memory address where gathered report data is located')
qbSysRptCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 8, 3, 1))
qbSysRptGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4323, 2, 8, 3, 2))
qbSysRptCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4323, 2, 8, 3, 1, 1)).setObjects(("QB-RPT-MIB", "qbSysRptAllGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qbSysRptCompliance = qbSysRptCompliance.setStatus('current')
if mibBuilder.loadTexts: qbSysRptCompliance.setDescription('The compliance statement for all agents that support this MIB. A compliant agent implements all objects defined in this MIB.')
qbSysRptAllGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4323, 2, 8, 3, 2, 1)).setObjects(("QB-RPT-MIB", "qbSysRptSize"), ("QB-RPT-MIB", "qbSysRpt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    qbSysRptAllGroup = qbSysRptAllGroup.setStatus('current')
if mibBuilder.loadTexts: qbSysRptAllGroup.setDescription('The set of all accessible objects in this MIB.')
mibBuilder.exportSymbols("QB-RPT-MIB", qbSysAid=qbSysAid, qbSysRpt=qbSysRpt, qbSysRptConformance=qbSysRptConformance, qbSysRptAllGroup=qbSysRptAllGroup, qbSysRptSize=qbSysRptSize, qbSysArg3=qbSysArg3, qbSysRptId=qbSysRptId, qbSysRptTables=qbSysRptTables, qbSysRptCompliances=qbSysRptCompliances, qbSysRptObjects=qbSysRptObjects, qbSysRptCompliance=qbSysRptCompliance, qbSysRptTable=qbSysRptTable, qbSysArg5=qbSysArg5, qbSysArg4=qbSysArg4, PYSNMP_MODULE_ID=qbSysRptMIB, qbSysArg1=qbSysArg1, qbSysRptGroups=qbSysRptGroups, qbSysRptMIB=qbSysRptMIB, qbSysRptEntry=qbSysRptEntry, qbSysArg2=qbSysArg2)
