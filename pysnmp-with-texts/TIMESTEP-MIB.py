#
# PySNMP MIB module TIMESTEP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMESTEP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:16:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Unsigned32, MibIdentifier, enterprises, Bits, Gauge32, TimeTicks, ObjectIdentity, ModuleIdentity, Counter32, NotificationType, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Unsigned32", "MibIdentifier", "enterprises", "Bits", "Gauge32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Counter32", "NotificationType", "Integer32", "IpAddress")
TextualConvention, TimeStamp, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "DateAndTime", "DisplayString")
timestep = ModuleIdentity((1, 3, 6, 1, 4, 1, 1022))
timestep.setRevisions(('1998-10-21 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: timestep.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: timestep.setLastUpdated('9810210000Z')
if mibBuilder.loadTexts: timestep.setOrganization('Newbridge Corporation')
if mibBuilder.loadTexts: timestep.setContactInfo(' Newbridge Corporation 362 Terry Fox Drive Kanata, ON K0A 2H0 Canada 1-800-383-8211 tsupport@newbridge.com')
if mibBuilder.loadTexts: timestep.setDescription('The MIB module to describe local system information of the Newbridge Permit family of IPSEC Gates.')
permitGate = MibIdentifier((1, 3, 6, 1, 4, 1, 1022, 9))
permitGateSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateSerialNumber.setStatus('current')
if mibBuilder.loadTexts: permitGateSerialNumber.setDescription('The device serial number.')
permitGateCpuUtilInst = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateCpuUtilInst.setStatus('current')
if mibBuilder.loadTexts: permitGateCpuUtilInst.setDescription('The instantaneous CPU utilization.')
permitGateCpuUtilAvg1Min = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateCpuUtilAvg1Min.setStatus('current')
if mibBuilder.loadTexts: permitGateCpuUtilAvg1Min.setDescription('The one minute average of CPU utilization.')
permitGateCpuUtilAvg5Min = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateCpuUtilAvg5Min.setStatus('current')
if mibBuilder.loadTexts: permitGateCpuUtilAvg5Min.setDescription('The five minutes average of CPU utilization.')
permitGateLastConfigModifTime = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateLastConfigModifTime.setStatus('current')
if mibBuilder.loadTexts: permitGateLastConfigModifTime.setDescription('Time since boot that the last configuration modification occured. If the configuration has not changed, then the value is 0.')
permitGateTotalRebootNum = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateTotalRebootNum.setStatus('current')
if mibBuilder.loadTexts: permitGateTotalRebootNum.setDescription('The number of times the machine has been rebooted.')
permitGateTotalVolMemory = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateTotalVolMemory.setStatus('current')
if mibBuilder.loadTexts: permitGateTotalVolMemory.setDescription('The total amount of volatile memory on the device in bytes.')
permitGateFreeVolMemory = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateFreeVolMemory.setStatus('current')
if mibBuilder.loadTexts: permitGateFreeVolMemory.setDescription('The total amount of free volatile memory on the device in bytes.')
permitGateEncDevStatus = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("up", 0), ("down", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateEncDevStatus.setStatus('current')
if mibBuilder.loadTexts: permitGateEncDevStatus.setDescription('The encryption device status.')
permitGateRandNumGenStatus = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("up", 0), ("down", 1), ("notApplicable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateRandNumGenStatus.setStatus('current')
if mibBuilder.loadTexts: permitGateRandNumGenStatus.setDescription('The random number generator status.')
permitGateCertExpDate = MibScalar((1, 3, 6, 1, 4, 1, 1022, 9, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateCertExpDate.setStatus('current')
if mibBuilder.loadTexts: permitGateCertExpDate.setDescription("The device's certificate expiration date.")
permitGateIfArpTable = MibTable((1, 3, 6, 1, 4, 1, 1022, 9, 12), )
if mibBuilder.loadTexts: permitGateIfArpTable.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpTable.setDescription('The (conceptual) table containing information about the Permit/Gate interface entries')
permitGateIfArpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1), ).setIndexNames((0, "TIMESTEP-MIB", "permitGateIfArpIndex"))
if mibBuilder.loadTexts: permitGateIfArpEntry.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpEntry.setDescription('An entry (conceptual row) containing on a particuliar Permit/Gate interface')
permitGateIfArpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateIfArpIndex.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpIndex.setDescription('A unique value, greater than zero for each interface.')
permitGateIfArpInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateIfArpInPkts.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpInPkts.setDescription('Arp protocol input packet count')
permitGateIfArpOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateIfArpOutPkts.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpOutPkts.setDescription('Arp protocol output packet count')
permitGateIfArpInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateIfArpInOctets.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpInOctets.setDescription('Arp protocol input octet count')
permitGateIfArpOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1022, 9, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: permitGateIfArpOutOctets.setStatus('current')
if mibBuilder.loadTexts: permitGateIfArpOutOctets.setDescription('Arp protocol output octet count')
mibBuilder.exportSymbols("TIMESTEP-MIB", permitGate=permitGate, permitGateCertExpDate=permitGateCertExpDate, permitGateIfArpInOctets=permitGateIfArpInOctets, permitGateIfArpEntry=permitGateIfArpEntry, permitGateTotalVolMemory=permitGateTotalVolMemory, permitGateTotalRebootNum=permitGateTotalRebootNum, PYSNMP_MODULE_ID=timestep, permitGateFreeVolMemory=permitGateFreeVolMemory, timestep=timestep, permitGateCpuUtilAvg5Min=permitGateCpuUtilAvg5Min, permitGateIfArpTable=permitGateIfArpTable, permitGateLastConfigModifTime=permitGateLastConfigModifTime, permitGateIfArpOutOctets=permitGateIfArpOutOctets, permitGateIfArpOutPkts=permitGateIfArpOutPkts, permitGateCpuUtilInst=permitGateCpuUtilInst, permitGateIfArpInPkts=permitGateIfArpInPkts, permitGateSerialNumber=permitGateSerialNumber, permitGateEncDevStatus=permitGateEncDevStatus, permitGateCpuUtilAvg1Min=permitGateCpuUtilAvg1Min, permitGateRandNumGenStatus=permitGateRandNumGenStatus, permitGateIfArpIndex=permitGateIfArpIndex)
