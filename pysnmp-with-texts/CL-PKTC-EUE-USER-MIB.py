#
# PySNMP MIB module CL-PKTC-EUE-USER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CL-PKTC-EUE-USER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:24:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
PktcEUETCActStatus, PktcEUETCUsrAppIndexType, PktcEUETCAppOrgIdentifier, PktcEUETCIDType, PktcEUETCAppIdentifier, PktcEUETCID, PktcEUETCActStatusInfo, PktcEUETCUsrElementIndexType, PktcEUETCCreds, PktcEUETCCredsType = mibBuilder.importSymbols("CL-PKTC-EUE-TC-MIB", "PktcEUETCActStatus", "PktcEUETCUsrAppIndexType", "PktcEUETCAppOrgIdentifier", "PktcEUETCIDType", "PktcEUETCAppIdentifier", "PktcEUETCID", "PktcEUETCActStatusInfo", "PktcEUETCUsrElementIndexType", "PktcEUETCCreds", "PktcEUETCCredsType")
pktcEUEMibs, = mibBuilder.importSymbols("CLAB-DEF-MIB", "pktcEUEMibs")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, ObjectIdentity, Counter64, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, NotificationType, Gauge32, TimeTicks, Unsigned32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Counter64", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32", "TimeTicks", "Unsigned32", "iso", "ModuleIdentity")
RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
pktcEUEUserMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3))
if mibBuilder.loadTexts: pktcEUEUserMIB.setLastUpdated('200708220000Z')
if mibBuilder.loadTexts: pktcEUEUserMIB.setOrganization('Cable Television Laboratories, Inc.')
if mibBuilder.loadTexts: pktcEUEUserMIB.setContactInfo('Sumanth Channabasappa Cable Television Laboratories, Inc. 858 Coal Creek Circle, Louisville, CO 80027, USA Phone: +1 303-661-3307 Email: sumanth@cablelabs.com Acknowledgements: Thomas Clack, Broadcom - Primary author , and members of the PacketCable PACM Focus Team.')
if mibBuilder.loadTexts: pktcEUEUserMIB.setDescription('This MIB module contains configuration MIB objects for the PacketCable Users as required by the PacketCable E-UE Provisioning Framework.')
pktcEUEUsrNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 0))
pktcEUEUsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1))
pktcEUEUsrConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2))
pktcEUEUsrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1))
pktcEUEUsrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 2))
pktcEUEUsrProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1))
pktcEUEUsrProfileVersion = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrProfileVersion.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrProfileVersion.setDescription(" This MIB Object represents the User Profile Version for this MIB module. The eUE MUST set this MIB Object to value of '1.0'.")
pktcEUEUsrIMPUTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2), )
if mibBuilder.loadTexts: pktcEUEUsrIMPUTable.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUTable.setDescription(' This data table represents Users associated with the eUE. Specifically it provides information related to the IM Public Identity (IMPU) of the User.')
pktcEUEUsrIMPUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1), ).setIndexNames((0, "CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUIndex"))
if mibBuilder.loadTexts: pktcEUEUsrIMPUEntry.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUEntry.setDescription(' Each entry in this data table describes an association of a user IMPU with the eUE, indexed by a IMPU Identifier. The eUE uses the entries in this table to register the user in a PacketCable Network, provided they are enabled. The credentials for registration are obtained using the association with an IMPI in the MIB table pktcEUEUsrIMPITable, referenced via the MIB Object pktcEUEUsrIMPIIndexRef. The eUE MAY store pre-configured associations in NVRAM.')
pktcEUEUsrIMPUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 1), PktcEUETCUsrElementIndexType())
if mibBuilder.loadTexts: pktcEUEUsrIMPUIndex.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUIndex.setDescription(" This MIB Object provides a user IMPU index. When the user IMPU is referenced elsewhere, such as to associate the device and a user IMPU, this MIB Object MUST be used as an index reference. A value of '0' MUST NOT be used.")
pktcEUEUsrIMPUIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 2), PktcEUETCIDType().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUIdType.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUIdType.setDescription(" This MIB Object MUST indicate the 'Identifier type' of the data value contained in 'pktcEUEUsrIMPUId'. Valid types include other(1), publicIdentity(2) and username(6).")
pktcEUEUsrIMPUId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 3), PktcEUETCID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUId.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUId.setDescription(" This MIB Object MUST identify the User IMPU being associated with the eUE. The type of Identifier is indicated by the MIB Object 'pktcEUEUsrIMPUIdType'.")
pktcEUEUsrIMPUIMPIIndexRef = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 4), PktcEUETCUsrElementIndexType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUIMPIIndexRef.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUIMPIIndexRef.setDescription(" This MIB Object MUST provide an index reference to a IMPI associated with the corresponding IMPU specified in this table entry. The index reference points to an entry in the MIB table 'pktcEUEUsrIMPITable'. If this contains a value of '0', it indicates that the user IMPU is not yet associated with an IMPI and cannot be used in networks requiring authentication. ")
pktcEUEUsrIMPUDispInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 5), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUDispInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUDispInfo.setDescription(' This optional MIB Object MAY contain human readable text describing User characteristics. Examples include User Display Name, Subscriber Identifier etc.')
pktcEUEUsrIMPUOpIndexRefs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 6), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUOpIndexRefs.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUOpIndexRefs.setDescription(" This optional MIB Object MAY contain a list of comma separated Operator domain entries where the user specified in this entry 'pktcEUEUsrIMPUId' can be used. The entries MUST be index references to the operator table associated with the eUE. The eUE MAY attempt to use the user entry in a domain or sub-domain specified by the operator table, corresponding to the entries listed here. The eUE MUST NOT attempt to use the user entry in a domain that is not specified by this entry. If unspecified, the eUE MUST use the domain identified by the IMPU.")
pktcEUEUsrIMPUNWActStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 7), PktcEUETCActStatus().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUNWActStat.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUNWActStat.setDescription(" This MIB Object contains the eUE activation status as determined by the network. The eUE MUST allow access to the User identified in 'pktcEUEUsrIMPUId' if the value is set to true(1), unless determined otherwise and reported in pktcEUEUsrIMPUUEActStat. The eUE SHOULD attempt to register a User identified in 'pktcEUEUsrIMPUId' if the value is set to true(1). PacketCable Applications can specify additional requirements for registration. The eUE MUST disallow access to the User identified in 'pktcEUEUsrIMPUId' if the value is set to false(2)")
pktcEUEUsrIMPUNWActStatInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 8), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUNWActStatInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUNWActStatInfo.setDescription(" This MIB Object MAY contain information that describes the activation status indicated in 'pktcEUEIMPUNWActStat'. For example 'User temporarily deactivated for maintenance'.")
pktcEUEUsrIMPUUEActStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 9), PktcEUETCActStatus().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrIMPUUEActStat.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUUEActStat.setDescription(" This MIB Object contains the eUE activation status as determined by the UE. The eUE MUST allow access to the User identified in 'pktcEUEUsrIMPUId' if the value is set to true(1). The eUE SHOULD attempt to register a User identified in 'pktcEUEUsrIMPUId' if the value is set to true(1). PacketCable Applications can specify additional requirements for registration. The eUE MUST disallow access to the User identified in 'pktcEUEUsrIMPUId' if the value is set to false(2).")
pktcEUEUsrIMPUUEActStatInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrIMPUUEActStatInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUUEActStatInfo.setDescription(" This MIB Object MAY contain information that describes the activation status indicated in 'pktcEUEUsrIMPUUEActStat'. For example 'User deactivated based on user interface input.")
pktcEUEUsrIMPUSigSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 11), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrIMPUSigSecurity.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUSigSecurity.setDescription(" This element indicates the network requirement for SIP signaling with the P-CSCF. If set to 'true', the User SHOULD use secure SIP signaling with the P-CSCF. If set to 'false', the User MAY communicate without a secure SIP communication channel with the P-CSCF. If the actual status of the communication channel differs from the value of this element, the UE MUST report the discrepancy, on behalf of the User, using the Management Data Element error reporting mechanism'.")
pktcEUEUsrIMPUAdditionalInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 12), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPUAdditionalInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUAdditionalInfo.setDescription(" This MIB Object MAY contain information that describes additional information defined by PacketCable specifications, including those defining PacketCable features. PacketCable specifications are expected to use this data element to obtain additional information. To specify such additional info, the following rules apply: - Each specification planning to use this MIB Object MUST specify data in the following format: '<Keyword>#<value>', # being the delimiter e.g. FEATURE-X#ABC FEATURE-Y#<value of XYZ> - This MIB Object MUST be a semi-colon separated concatenation of such '<keyword>#<value>' pairs. e.g. FEATURE-X#ABC;FEATURE-Z#DEF - Since the '#' and ';' characters are used as delimiters, they SHOULD not be specified in the keyword. If specified, any occurence of these characters in the value field MUST be preceded by the escape character '\\' (e.g. FEATURE-X#A\\#C). Occurences of '\\' MUST be preceded by itself (e.g. . (e.g. FEATURE-X#A\\\\C\\#). The following rules apply on the eUE: - The eUE MUST first separate all the keyword value pairs, using a '#' that is not preceded by '\\' as the delimiter - The eUE MUST, For all recognized keywords, decipher the value by interpreting the data after considering the use of '\\' as defined in this definition - The eUE MUST ignore and report all unrecognized keywords using PacketCable Management")
pktcEUEUsrIMPURowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPURowStatus.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPURowStatus.setDescription(" This MIB Object defines the row status associated with this particular User in the pktcEUEUsrIMPUTable. An entry in this table is not qualified for activation until the object instances of all corresponding columns have been initialized, either by default values or via explicit SET operations. Until all object instances in this row are initialized, the status value for this realm must be 'notReady(3)'. In particular, two columnar objects must be SET: the 'pktcEUEUsrIMPUIMPUIdType' and the 'pktcEUEUsrIMPUIMPUId. Once these two objects have been set the row status may be SET to 'active(1)' The eUE MUST not allow these two objects to be changed while the row is 'active'. The value of this object has no effect on whether other columnar objects in this row can be modified.")
pktcEUEUsrIMPITable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3), )
if mibBuilder.loadTexts: pktcEUEUsrIMPITable.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPITable.setDescription(' This data table contains the user IMPI information associated with users provisioned on the device.')
pktcEUEUsrIMPIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1), ).setIndexNames((0, "CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPIIndex"))
if mibBuilder.loadTexts: pktcEUEUsrIMPIEntry.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIEntry.setDescription('Each entry in this data table contains an instance of a user IMPI and associated credentials. Each IMPU provisioned in the eUE SHOULD be associated with an entry in this table. The exception is in networks where certain users are unauthenticated for application access.')
pktcEUEUsrIMPIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 1), PktcEUETCUsrElementIndexType())
if mibBuilder.loadTexts: pktcEUEUsrIMPIIndex.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIIndex.setDescription(" This MIB Object provides a user IMPI index. When the user IMPI is referenced elsewhere, such as to associate the IMPU and an IMPI, this MIB Object MUST be used as an index reference. A value of '0' MUST NOT be used.")
pktcEUEUsrIMPIIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 2), PktcEUETCIDType().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPIIdType.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIIdType.setDescription(" This MIB Object MUST indicate the 'Identifier type' of the data value contained in 'pktcEUEUsrIMPIId'. Valid types include other(1), privateIdentity(2) and username(6).")
pktcEUEUsrIMPIId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 3), PktcEUETCID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPIId.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIId.setDescription(" This MIB Object MUST identify a User IMPI being specified in this table. The type of Identifier is indicated by the MIB Object 'pktcEUEUsrIMPIIdType'.")
pktcEUEUsrIMPICredsType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 4), PktcEUETCCredsType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPICredsType.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPICredsType.setDescription(" This MIB Object contains the type of credentials contained in the MIB Object 'pktcEUEUsrIMPICredentials'. Valid types include other(1), privateIdentity(2) and username(6).")
pktcEUEUsrIMPICredentials = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 5), PktcEUETCCreds()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPICredentials.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPICredentials.setDescription(" This MIB Object allows the Operator to configure credentials associated with an IMPI. This value is used with, and must be consistent with, the value of the associated 'pktcEUEUsrIMPIedsType' object. If read this MIB Object MUST always return an empty string value for privacy reasons. A Operator SHOULD provide this MIB Object only over a secured configuration interface to avoid security threats due to compromised credentials. ")
pktcEUEUsrIMPIRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrIMPIRowStatus.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIRowStatus.setDescription(" This MIB Object defines the row status associated with this entry. The value of the 'pktcEUEUsrIMPICredsType' object MUST NOT be modified while this object is 'active'. The value of 'pktcEUEUsrIMPICredentials' MAY be modified while this object is active if the value is consistent with the type specifed by the 'pktcEUEUsrIMPICredsType' object. ")
pktcEUEUsrAppMapTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4), )
if mibBuilder.loadTexts: pktcEUEUsrAppMapTable.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapTable.setDescription(' This data table represents Apps associated with a User IMPU.')
pktcEUEUsrAppMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1), ).setIndexNames((0, "CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUIndex"), (0, "CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppIndex"))
if mibBuilder.loadTexts: pktcEUEUsrAppMapEntry.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapEntry.setDescription(' Each entry in this data table identifies an application associated with the user, the application profile index reference, the network status and UE status information')
pktcEUEUsrAppMapAppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 1), PktcEUETCUsrAppIndexType())
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIndex.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIndex.setDescription(' This MIB Object represents an index to map an Application instance associated with the User IMPU.')
pktcEUEUsrAppMapAppOrgID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 2), PktcEUETCAppOrgIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppOrgID.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppOrgID.setDescription(" This MIB Object identifies the Organization specifying the app identifier contained in the MIB Object 'pktcEUEUsrAppMapAppIdentifier'.")
pktcEUEUsrAppMapAppIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 3), PktcEUETCAppIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIdentifier.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIdentifier.setDescription(" This MIB Object represents the identifier for a Application associated with the User. The application identifier MUST represent an application specified by the organization specified in 'pktcEUEUsrAppMapAppOrgID'.")
pktcEUEUsrAppMapAppIndexRef = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 4), PktcEUETCUsrAppIndexType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIndexRef.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppIndexRef.setDescription(" This MIB Object represents the index reference to an application profile for the application identified by the MIB Object 'pktcEUEUsrAppMapAppIDentifier'. If this value is set to a value of '0' then the following conditions apply: - If the application has no specific configuration data, the network activation status MUST be considered by the eUE - If the application has configuration data elements the eUE MUST deactivate the application and ignore the network activation status. The deactivation is accomplished using the MIB Object 'pktcEUEUsrAppMapAppUEActStat'.")
pktcEUEUsrAppMapAppNWActStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 5), PktcEUETCActStatus().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppNWActStat.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppNWActStat.setDescription(" This MIB Object represents the network activation status for the application specified in 'pktcEUEUsrAppMapAppOrgID'.")
pktcEUEUsrAppMapAppNWActStatInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 6), PktcEUETCActStatusInfo()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppNWActStatInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppNWActStatInfo.setDescription(" This MIB Object represents additional information for the status information represented by 'pktcEUEUsrAppMapAppNWActStat'.")
pktcEUEUsrAppMapAppUEActStat = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 7), PktcEUETCActStatus().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppUEActStat.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppUEActStat.setDescription(" This MIB Object represents the UE activation status for the application specified in 'pktcEUEUsrAppMapAppOrgID'.")
pktcEUEUsrAppMapAppUEActStatInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 8), PktcEUETCActStatusInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppUEActStatInfo.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapAppUEActStatInfo.setDescription(" This MIB Object represents additional information for the status information represented by 'pktcEUEUsrAppMapAppUEActStat'. For example 'UE does not support this application.'")
pktcEUEUsrAppMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 1, 1, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: pktcEUEUsrAppMapRowStatus.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapRowStatus.setDescription(" This MIB Object defines the row status associated with this particular User in the pktcEUEUsrAppMapTable. An entry in this table is not qualified for activation until the object instances of all corresponding columns have been initialized, either by default values or via explicit SET operations. Until all object instances in this row are initialized, the status value for this realm must be 'notReady(3)'. In particular, two columnar objects must be SET: the 'pktcEUEUsrAppMapAppOrgID' and 'pktcEUEUsrAppMapAppIdentifier. Once these two objects have been set the row status may be SET to 'active(1)'. The eUE MUST not allow these two objects to be changed while the row is 'active'. The value of this object has no effect on whether other columnar objects in this row can be modified.")
pktcEUEUsrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1))
pktcEUEUsrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 2))
pktcEUEUsrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1, 1)).setObjects(("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrProfileGroup"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUGroup"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPIGroup"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEUsrMIBCompliance = pktcEUEUsrMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrMIBCompliance.setDescription('The compliance statement for implementations of the User Mib ')
pktcEUEUsrProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 2, 1)).setObjects(("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrProfileVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEUsrProfileGroup = pktcEUEUsrProfileGroup.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrProfileGroup.setDescription('The eUE Usr Profile Group.')
pktcEUEUsrIMPUGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1, 2)).setObjects(("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUIdType"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUId"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUIMPIIndexRef"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUDispInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUOpIndexRefs"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUNWActStat"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUNWActStatInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUUEActStat"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUUEActStatInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUSigSecurity"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPUAdditionalInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPURowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEUsrIMPUGroup = pktcEUEUsrIMPUGroup.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPUGroup.setDescription('The user IMPU Group.')
pktcEUEUsrIMPIGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1, 3)).setObjects(("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPICredsType"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPICredentials"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPIIdType"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPIId"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrIMPIRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEUsrIMPIGroup = pktcEUEUsrIMPIGroup.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrIMPIGroup.setDescription('The user IMPI Group.')
pktcEUEUsrAppMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 3, 2, 1, 4)).setObjects(("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppOrgID"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppIdentifier"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppIndexRef"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppNWActStat"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppNWActStatInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppUEActStat"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapAppUEActStatInfo"), ("CL-PKTC-EUE-USER-MIB", "pktcEUEUsrAppMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEUsrAppMapGroup = pktcEUEUsrAppMapGroup.setStatus('current')
if mibBuilder.loadTexts: pktcEUEUsrAppMapGroup.setDescription('The User to Applications Mapping Group.')
mibBuilder.exportSymbols("CL-PKTC-EUE-USER-MIB", pktcEUEUsrGroups=pktcEUEUsrGroups, pktcEUEUsrIMPUIndex=pktcEUEUsrIMPUIndex, pktcEUEUsrAppMapEntry=pktcEUEUsrAppMapEntry, pktcEUEUsrIMPUId=pktcEUEUsrIMPUId, pktcEUEUsrAppMapAppNWActStatInfo=pktcEUEUsrAppMapAppNWActStatInfo, pktcEUEUsrAppMapRowStatus=pktcEUEUsrAppMapRowStatus, pktcEUEUsrAppMapGroup=pktcEUEUsrAppMapGroup, pktcEUEUsrIMPUTable=pktcEUEUsrIMPUTable, pktcEUEUsrAppMapAppUEActStat=pktcEUEUsrAppMapAppUEActStat, PYSNMP_MODULE_ID=pktcEUEUserMIB, pktcEUEUserMIB=pktcEUEUserMIB, pktcEUEUsrMIBCompliance=pktcEUEUsrMIBCompliance, pktcEUEUsrProfileVersion=pktcEUEUsrProfileVersion, pktcEUEUsrIMPIGroup=pktcEUEUsrIMPIGroup, pktcEUEUsrIMPUGroup=pktcEUEUsrIMPUGroup, pktcEUEUsrAppMapAppOrgID=pktcEUEUsrAppMapAppOrgID, pktcEUEUsrAppMapAppIndex=pktcEUEUsrAppMapAppIndex, pktcEUEUsrMIBCompliances=pktcEUEUsrMIBCompliances, pktcEUEUsrIMPIId=pktcEUEUsrIMPIId, pktcEUEUsrAppMapTable=pktcEUEUsrAppMapTable, pktcEUEUsrIMPUEntry=pktcEUEUsrIMPUEntry, pktcEUEUsrIMPUOpIndexRefs=pktcEUEUsrIMPUOpIndexRefs, pktcEUEUsrIMPUUEActStatInfo=pktcEUEUsrIMPUUEActStatInfo, pktcEUEUsrProfileGroup=pktcEUEUsrProfileGroup, pktcEUEUsrObjects=pktcEUEUsrObjects, pktcEUEUsrIMPUUEActStat=pktcEUEUsrIMPUUEActStat, pktcEUEUsrConformance=pktcEUEUsrConformance, pktcEUEUsrIMPUSigSecurity=pktcEUEUsrIMPUSigSecurity, pktcEUEUsrIMPUIMPIIndexRef=pktcEUEUsrIMPUIMPIIndexRef, pktcEUEUsrIMPIEntry=pktcEUEUsrIMPIEntry, pktcEUEUsrIMPICredentials=pktcEUEUsrIMPICredentials, pktcEUEUsrAppMapAppUEActStatInfo=pktcEUEUsrAppMapAppUEActStatInfo, pktcEUEUsrIMPICredsType=pktcEUEUsrIMPICredsType, pktcEUEUsrMIBGroups=pktcEUEUsrMIBGroups, pktcEUEUsrCompliances=pktcEUEUsrCompliances, pktcEUEUsrIMPIIndex=pktcEUEUsrIMPIIndex, pktcEUEUsrAppMapAppIdentifier=pktcEUEUsrAppMapAppIdentifier, pktcEUEUsrIMPUAdditionalInfo=pktcEUEUsrIMPUAdditionalInfo, pktcEUEUsrIMPURowStatus=pktcEUEUsrIMPURowStatus, pktcEUEUsrIMPUNWActStatInfo=pktcEUEUsrIMPUNWActStatInfo, pktcEUEUsrIMPITable=pktcEUEUsrIMPITable, pktcEUEUsrAppMapAppNWActStat=pktcEUEUsrAppMapAppNWActStat, pktcEUEUsrAppMapAppIndexRef=pktcEUEUsrAppMapAppIndexRef, pktcEUEUsrNotification=pktcEUEUsrNotification, pktcEUEUsrIMPUIdType=pktcEUEUsrIMPUIdType, pktcEUEUsrProfile=pktcEUEUsrProfile, pktcEUEUsrIMPUDispInfo=pktcEUEUsrIMPUDispInfo, pktcEUEUsrIMPIIdType=pktcEUEUsrIMPIIdType, pktcEUEUsrIMPIRowStatus=pktcEUEUsrIMPIRowStatus, pktcEUEUsrIMPUNWActStat=pktcEUEUsrIMPUNWActStat)
