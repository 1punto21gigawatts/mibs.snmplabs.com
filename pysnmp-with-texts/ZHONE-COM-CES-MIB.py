#
# PySNMP MIB module ZHONE-COM-CES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-CES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:46:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
atmfCESCbrClockMode, atmfCESCas, atmfCESAtmIndex, atmfCESCellLossIntegrationPeriod, atmfCESAtmVpi, atmfCESAtmVci, atmfCESBufMaxSize, atmfCESConfEntry, atmfCESPartialFill, atmfCESConfRowStatus, atmfCESCdvRxT, atmfCESAdminStatus, atmfCESOperStatus, atmfCESCbrService, atmfCESConnType, atmfCESCbrIndex, atmfCESLocalAddr = mibBuilder.importSymbols("ATMF-CES", "atmfCESCbrClockMode", "atmfCESCas", "atmfCESAtmIndex", "atmfCESCellLossIntegrationPeriod", "atmfCESAtmVpi", "atmfCESAtmVci", "atmfCESBufMaxSize", "atmfCESConfEntry", "atmfCESPartialFill", "atmfCESConfRowStatus", "atmfCESCdvRxT", "atmfCESAdminStatus", "atmfCESOperStatus", "atmfCESCbrService", "atmfCESConnType", "atmfCESCbrIndex", "atmfCESLocalAddr")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, IpAddress, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, iso, Counter64, NotificationType, Gauge32, Bits, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "iso", "Counter64", "NotificationType", "Gauge32", "Bits", "TimeTicks", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
zhoneModules, zhoneCes = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneCes")
comCesExtension = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 108))
comCesExtension.setRevisions(('2005-04-13 12:04', '2004-08-16 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: comCesExtension.setRevisionsDescriptions(('V01.00.01 - Add 4 new fields to zhoneAtmfCesConfExt.', 'V01.00.00 - Initial Release',))
if mibBuilder.loadTexts: comCesExtension.setLastUpdated('200508131230Z')
if mibBuilder.loadTexts: comCesExtension.setOrganization('Zhone Technologies, Inc.')
if mibBuilder.loadTexts: comCesExtension.setContactInfo(' Postal: Zhone Technologies, Inc. @ Zhone Way 7001 Oakport Street Oakland, CA 94621 USA Toll-Free: +1 877-ZHONE20 (+1 877-946-6320) Tel: +1-510-777-7000 Fax: +1-510-777-7001 E-mail: support@zhone.com')
if mibBuilder.loadTexts: comCesExtension.setDescription('This is the Zhone module identifier for the Zhone CES MIB extension module.')
zhoneAtmfCESConfExtTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1), )
if mibBuilder.loadTexts: zhoneAtmfCESConfExtTable.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtTable.setDescription('Zhone extension table for the atmfCesConfTable defined in atmfCES.')
zhoneAtmfCESConfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1), )
atmfCESConfEntry.registerAugmentions(("ZHONE-COM-CES-MIB", "zhoneAtmfCESConfExtEntry"))
zhoneAtmfCESConfExtEntry.setIndexNames(*atmfCESConfEntry.getIndexNames())
if mibBuilder.loadTexts: zhoneAtmfCESConfExtEntry.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtEntry.setDescription('Zhone extension entry for the atmfCesConfEntry defined in atmfCES.')
zhoneAtmfCESDs0Bundle = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1, 1), Bits().clone(namedValues=NamedValues(("ts0", 0), ("ts1", 1), ("ts2", 2), ("ts3", 3), ("ts4", 4), ("ts5", 5), ("ts6", 6), ("ts7", 7), ("ts8", 8), ("ts9", 9), ("ts10", 10), ("ts11", 11), ("ts12", 12), ("ts13", 13), ("ts14", 14), ("ts15", 15), ("ts16", 16), ("ts17", 17), ("ts18", 18), ("ts19", 19), ("ts20", 20), ("ts21", 21), ("ts22", 22), ("ts23", 23), ("ts24", 24), ("ts25", 25), ("ts26", 26), ("ts27", 27), ("ts28", 28), ("ts29", 29), ("ts30", 30), ("ts31", 31)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAtmfCESDs0Bundle.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESDs0Bundle.setDescription("This value is a bit field indicating the ds0's in the ds0 bundles. ")
zhoneAtmfCESConfExtAtmfCESSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESSrcIpAddr.setDescription('The local IP address associated with the ces DS0 bundle, which must have an associated floating IP adress configured on the UPLINK.')
zhoneAtmfCESConfExtAtmfCESDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESDstIpAddr.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESDstIpAddr.setDescription('The far end IP address destination for the ces DS0 Bundle The local UPLINK must know how to route to the far end IP address.')
zhoneAtmfCESConfExtAtmfCESSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESSrcPort.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESSrcPort.setDescription('The local UDP port associated with the ces DS0 Bundle.')
zhoneAtmfCESConfExtAtmfCESDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 10, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESDstPort.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESConfExtAtmfCESDstPort.setDescription('The far end UDP port destination for the CES DS0 Bundle.')
zhoneAtmfCESGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 4, 10, 2)).setObjects(("ZHONE-COM-CES-MIB", "zhoneAtmfCESDs0Bundle"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneAtmfCESGroup = zhoneAtmfCESGroup.setStatus('current')
if mibBuilder.loadTexts: zhoneAtmfCESGroup.setDescription('A collection of object from zhoneAtmfCESConfExtTable')
mibBuilder.exportSymbols("ZHONE-COM-CES-MIB", zhoneAtmfCESConfExtTable=zhoneAtmfCESConfExtTable, comCesExtension=comCesExtension, zhoneAtmfCESGroup=zhoneAtmfCESGroup, zhoneAtmfCESConfExtAtmfCESSrcPort=zhoneAtmfCESConfExtAtmfCESSrcPort, zhoneAtmfCESConfExtAtmfCESSrcIpAddr=zhoneAtmfCESConfExtAtmfCESSrcIpAddr, zhoneAtmfCESConfExtAtmfCESDstPort=zhoneAtmfCESConfExtAtmfCESDstPort, zhoneAtmfCESDs0Bundle=zhoneAtmfCESDs0Bundle, zhoneAtmfCESConfExtAtmfCESDstIpAddr=zhoneAtmfCESConfExtAtmfCESDstIpAddr, zhoneAtmfCESConfExtEntry=zhoneAtmfCESConfExtEntry, PYSNMP_MODULE_ID=comCesExtension)
