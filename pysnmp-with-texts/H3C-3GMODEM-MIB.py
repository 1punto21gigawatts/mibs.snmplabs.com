#
# PySNMP MIB module H3C-3GMODEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-3GMODEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:21:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, ModuleIdentity, Counter32, TimeTicks, NotificationType, iso, ObjectIdentity, Integer32, Bits, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "ModuleIdentity", "Counter32", "TimeTicks", "NotificationType", "iso", "ObjectIdentity", "Integer32", "Bits", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
h3c3GModem = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98))
h3c3GModem.setRevisions(('2009-04-30 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: h3c3GModem.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: h3c3GModem.setLastUpdated('200904301200Z')
if mibBuilder.loadTexts: h3c3GModem.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: h3c3GModem.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: h3c3GModem.setDescription('The information about the wireless card and the UIM (User Identification Module).')
class H3cUIMStatusType(TextualConvention, Integer32):
    description = 'The status of the UIM.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("absent", 1), ("initial", 2), ("fault", 3), ("unprotected", 4), ("protected", 5), ("pinLocked", 6), ("pukLocked", 7), ("selfDestruct", 8))

h3c3GModemObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1))
h3cWirelessCard = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1))
h3cUIM = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2))
h3cWirelessCardTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1), )
if mibBuilder.loadTexts: h3cWirelessCardTable.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardTable.setDescription('This table contains one row per wireless card.')
h3cWirelessCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1), ).setIndexNames((0, "H3C-3GMODEM-MIB", "h3cWirelessCardIndex"))
if mibBuilder.loadTexts: h3cWirelessCardEntry.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardEntry.setDescription('Information about a particular wireless card.')
h3cWirelessCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cWirelessCardIndex.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardIndex.setDescription('The index for this entry.')
h3cWirelessCardModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardModelName.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardModelName.setDescription('The model name of this card.')
h3cWirelessCardMfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardMfgName.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardMfgName.setDescription('The name of the manufacturer of this card.')
h3cWirelessCardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardDescription.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardDescription.setDescription('The textual description of this card.')
h3cWirelessCardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardSerialNumber.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardSerialNumber.setDescription('The vendor-specific serial number string for this card.')
h3cWirelessCardCMIIID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardCMIIID.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardCMIIID.setDescription('The card ID of CMII (Ministry of Information Industry of China).')
h3cWirelessCardHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardHardwareVersion.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardHardwareVersion.setDescription('The vendor-specific hardware version string for this card.')
h3cWirelessCardFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardFirmwareVersion.setDescription('The vendor-specific firmware version string for this card.')
h3cWirelessCardPRLVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cWirelessCardPRLVersion.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardPRLVersion.setDescription('The preferred roaming list version for this card.')
h3cUIMInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1), )
if mibBuilder.loadTexts: h3cUIMInfoTable.setStatus('current')
if mibBuilder.loadTexts: h3cUIMInfoTable.setDescription('This table contains one row per UIM.')
h3cUIMInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1), ).setIndexNames((0, "H3C-3GMODEM-MIB", "h3cWirelessCardIndex"), (0, "H3C-3GMODEM-MIB", "h3cUIMIndex"))
if mibBuilder.loadTexts: h3cUIMInfoEntry.setStatus('current')
if mibBuilder.loadTexts: h3cUIMInfoEntry.setDescription('The information about the UIM.')
h3cUIMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: h3cUIMIndex.setStatus('current')
if mibBuilder.loadTexts: h3cUIMIndex.setDescription('The index for this entry.')
h3cUIMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 2), H3cUIMStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMStatus.setStatus('current')
if mibBuilder.loadTexts: h3cUIMStatus.setDescription('The status about this UIM.')
h3cUIMImsi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMImsi.setStatus('current')
if mibBuilder.loadTexts: h3cUIMImsi.setDescription('The IMSI (International Mobile Subscriber Identification Number) about this UIM. If this information is unknown to the agent, then this object will be returned a zero-length string.')
h3cUIMPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMPin.setStatus('current')
if mibBuilder.loadTexts: h3cUIMPin.setDescription('The PIN about this UIM. If this information is unknown to the agent, then this object will be returned a zero-length string.')
h3cUIMVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-volt').setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMVoltage.setStatus('current')
if mibBuilder.loadTexts: h3cUIMVoltage.setDescription('The voltage about this UIM. If this information is unknown to the agent, then this object will be returned 4294967295.')
h3cUIMProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMProvider.setStatus('current')
if mibBuilder.loadTexts: h3cUIMProvider.setDescription('The provider of mobile network. If this information is unknown to the agent, then this object will be returned a zero-length string.')
h3cUIMSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 31), ValueRangeConstraint(99, 99), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMSignal.setStatus('current')
if mibBuilder.loadTexts: h3cUIMSignal.setDescription("The intensity of the signal about this UIM. A value of '99' means no signal.")
h3cUIMTryPinPukTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cUIMTryPinPukTimes.setStatus('current')
if mibBuilder.loadTexts: h3cUIMTryPinPukTimes.setDescription('The number of remaining times for unlocking PIN or PUK. The value is associated the same instance of h3cUIMStatus. If this information is unknown to the agent, then this object will be returned 4294967295.')
h3cUIMOldPin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 1, 2, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cUIMOldPin.setStatus('current')
if mibBuilder.loadTexts: h3cUIMOldPin.setDescription('The old PIN for this UIM.')
h3c3GModemTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 2))
h3c3GModemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3))
h3c3GModemTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0))
h3cDevSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDevSerialNumber.setStatus('current')
if mibBuilder.loadTexts: h3cDevSerialNumber.setDescription('The serial number of the current device.')
h3cDeviceOUI = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cDeviceOUI.setStatus('current')
if mibBuilder.loadTexts: h3cDeviceOUI.setDescription('The OUI (Organizational Unique Identifier) of the current device.')
h3cAccessMedia = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("air", 2), ("cable", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cAccessMedia.setStatus('current')
if mibBuilder.loadTexts: h3cAccessMedia.setDescription('The current access media.')
h3cWirelessCardInserted = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0, 1)).setObjects(("H3C-3GMODEM-MIB", "h3cDeviceOUI"), ("H3C-3GMODEM-MIB", "h3cDevSerialNumber"), ("H3C-3GMODEM-MIB", "h3cWirelessCardSerialNumber"), ("H3C-3GMODEM-MIB", "h3cUIMImsi"))
if mibBuilder.loadTexts: h3cWirelessCardInserted.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardInserted.setDescription('A h3cWirelessCardInserted notification is generated when a wireless card is inserted.')
h3cWirelessCardPulledOut = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0, 2)).setObjects(("H3C-3GMODEM-MIB", "h3cDeviceOUI"), ("H3C-3GMODEM-MIB", "h3cDevSerialNumber"), ("H3C-3GMODEM-MIB", "h3cWirelessCardSerialNumber"), ("H3C-3GMODEM-MIB", "h3cUIMImsi"))
if mibBuilder.loadTexts: h3cWirelessCardPulledOut.setStatus('current')
if mibBuilder.loadTexts: h3cWirelessCardPulledOut.setDescription('A h3cWirelessCardPulledOut notification is generated when a wireless card is pulled out.')
h3cUIMPinInvalid = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0, 3)).setObjects(("H3C-3GMODEM-MIB", "h3cDeviceOUI"), ("H3C-3GMODEM-MIB", "h3cDevSerialNumber"), ("H3C-3GMODEM-MIB", "h3cWirelessCardSerialNumber"), ("H3C-3GMODEM-MIB", "h3cUIMImsi"))
if mibBuilder.loadTexts: h3cUIMPinInvalid.setStatus('current')
if mibBuilder.loadTexts: h3cUIMPinInvalid.setDescription('A h3cUIMPinInvalid notification is generated when UIM PIN is invalid.')
h3cUIMPinChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0, 4)).setObjects(("H3C-3GMODEM-MIB", "h3cDeviceOUI"), ("H3C-3GMODEM-MIB", "h3cDevSerialNumber"), ("H3C-3GMODEM-MIB", "h3cWirelessCardSerialNumber"), ("H3C-3GMODEM-MIB", "h3cUIMImsi"), ("H3C-3GMODEM-MIB", "h3cUIMOldPin"), ("H3C-3GMODEM-MIB", "h3cUIMPin"))
if mibBuilder.loadTexts: h3cUIMPinChanged.setStatus('current')
if mibBuilder.loadTexts: h3cUIMPinChanged.setDescription('A h3cUIMPinInvalid notification is generated when UIM PIN is changed.')
h3cAccessMediaChanged = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 98, 3, 0, 5)).setObjects(("H3C-3GMODEM-MIB", "h3cDeviceOUI"), ("H3C-3GMODEM-MIB", "h3cDevSerialNumber"), ("H3C-3GMODEM-MIB", "h3cWirelessCardSerialNumber"), ("H3C-3GMODEM-MIB", "h3cUIMImsi"), ("H3C-3GMODEM-MIB", "h3cAccessMedia"))
if mibBuilder.loadTexts: h3cAccessMediaChanged.setStatus('current')
if mibBuilder.loadTexts: h3cAccessMediaChanged.setDescription('A h3cAccessMediaChanged notification is generated when access media is changed.')
mibBuilder.exportSymbols("H3C-3GMODEM-MIB", h3c3GModemTrap=h3c3GModemTrap, h3cWirelessCardDescription=h3cWirelessCardDescription, h3cWirelessCardModelName=h3cWirelessCardModelName, h3cDevSerialNumber=h3cDevSerialNumber, h3cWirelessCard=h3cWirelessCard, h3cUIMIndex=h3cUIMIndex, h3cUIMInfoTable=h3cUIMInfoTable, h3cUIMVoltage=h3cUIMVoltage, h3cWirelessCardPulledOut=h3cWirelessCardPulledOut, h3cUIMPinInvalid=h3cUIMPinInvalid, h3cAccessMedia=h3cAccessMedia, h3cAccessMediaChanged=h3cAccessMediaChanged, h3c3GModem=h3c3GModem, h3cWirelessCardInserted=h3cWirelessCardInserted, h3c3GModemTraps=h3c3GModemTraps, h3cUIMPinChanged=h3cUIMPinChanged, h3cWirelessCardIndex=h3cWirelessCardIndex, h3cUIMSignal=h3cUIMSignal, h3c3GModemTrapPrefix=h3c3GModemTrapPrefix, h3cWirelessCardEntry=h3cWirelessCardEntry, h3cWirelessCardFirmwareVersion=h3cWirelessCardFirmwareVersion, h3cUIMOldPin=h3cUIMOldPin, h3cUIMPin=h3cUIMPin, h3cDeviceOUI=h3cDeviceOUI, h3cWirelessCardHardwareVersion=h3cWirelessCardHardwareVersion, h3cUIMInfoEntry=h3cUIMInfoEntry, h3cWirelessCardTable=h3cWirelessCardTable, h3cUIMTryPinPukTimes=h3cUIMTryPinPukTimes, h3cUIM=h3cUIM, h3cWirelessCardCMIIID=h3cWirelessCardCMIIID, PYSNMP_MODULE_ID=h3c3GModem, h3cUIMStatus=h3cUIMStatus, h3cUIMProvider=h3cUIMProvider, h3c3GModemObjects=h3c3GModemObjects, h3cUIMImsi=h3cUIMImsi, h3cWirelessCardPRLVersion=h3cWirelessCardPRLVersion, h3cWirelessCardSerialNumber=h3cWirelessCardSerialNumber, h3cWirelessCardMfgName=h3cWirelessCardMfgName, H3cUIMStatusType=H3cUIMStatusType)
