#
# PySNMP MIB module Wellfleet-DOT1QTAG-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DOT1QTAG-CONFIG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:39:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, Bits, Counter32, Counter64, Gauge32, MibIdentifier, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "Bits", "Counter32", "Counter64", "Gauge32", "MibIdentifier", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfDot1qTagConfigGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDot1qTagConfigGroup")
wfDot1qTagConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1))
wfDot1qTagConfigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1), )
if mibBuilder.loadTexts: wfDot1qTagConfigTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagConfigTable.setDescription('A table that contains the global read-write 802.1q VLAN tagging attributes on a per circuit basis. Here circuit number is the Local VLAN Id.')
wfDot1qTagConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1), ).setIndexNames((0, "Wellfleet-DOT1QTAG-CONFIG-MIB", "wfDot1qTagCfgPhysicalPortId"), (0, "Wellfleet-DOT1QTAG-CONFIG-MIB", "wfDot1qTagCfgLocalVlanId"))
if mibBuilder.loadTexts: wfDot1qTagConfigEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagConfigEntry.setDescription('A list of information maintained for each circuit.')
wfDot1qTagCfgDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgDelete.setDescription('Creation and deletion flag for this record. When set to 2 it will cause this entry to be deleted from the MIB')
wfDot1qTagCfgDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgDisable.setDescription('Enable/Disable parameter. A disabled interface will never be selected as the active interface for a circuit.')
wfDot1qTagCfgVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgVlanName.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgVlanName.setDescription('The name for the VLAN circuit. NOTE: For SM purposes only. This a dummy cfg. parameter.')
wfDot1qTagCfgLocalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDot1qTagCfgLocalVlanId.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgLocalVlanId.setDescription('The index of the circuit on which Dot1qTag related attributes are set. Uniquely identifies the group within a Box. Here it is same as the Circuit Number.')
wfDot1qTagCfgGlobalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgGlobalVlanId.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgGlobalVlanId.setDescription('Uniquely identifies the group within the enterprise. Global VLAN ID is a 12 bit unique number.')
wfDot1qTagCfgVirtualPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tagged", 1))).clone('tagged')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgVirtualPortType.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgVirtualPortType.setDescription('The Virtual Port Type.')
wfDot1qTagCfgPhysicalPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfDot1qTagCfgPhysicalPortId.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgPhysicalPortId.setDescription('The physical port id which is same as the line number.')
wfDot1qTagCfgProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 12, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1514, 65535)).clone(33024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDot1qTagCfgProtocolType.setStatus('mandatory')
if mibBuilder.loadTexts: wfDot1qTagCfgProtocolType.setDescription("The IEEE802.1q protocol type value. NOTE: With the initial release of the software, the Tag Protocol Identifier (TPID) field in 802.1 tag will contain Bay Networks' propietary value of 8100 (Hex). This value will be specified by the IEEE in the forthcoming revisions of the 802.1Q standard, Bay Networks will support the standard value.")
mibBuilder.exportSymbols("Wellfleet-DOT1QTAG-CONFIG-MIB", wfDot1qTagCfgVirtualPortType=wfDot1qTagCfgVirtualPortType, wfDot1qTagConfigEntry=wfDot1qTagConfigEntry, wfDot1qTagCfgLocalVlanId=wfDot1qTagCfgLocalVlanId, wfDot1qTagCfgGlobalVlanId=wfDot1qTagCfgGlobalVlanId, wfDot1qTagCfgDelete=wfDot1qTagCfgDelete, wfDot1qTagConfigTable=wfDot1qTagConfigTable, wfDot1qTagConfig=wfDot1qTagConfig, wfDot1qTagCfgPhysicalPortId=wfDot1qTagCfgPhysicalPortId, wfDot1qTagCfgDisable=wfDot1qTagCfgDisable, wfDot1qTagCfgProtocolType=wfDot1qTagCfgProtocolType, wfDot1qTagCfgVlanName=wfDot1qTagCfgVlanName)
