#
# PySNMP MIB module WWP-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Gauge32, iso, Unsigned32, Bits, TimeTicks, MibIdentifier, Counter64, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Gauge32", "iso", "Unsigned32", "Bits", "TimeTicks", "MibIdentifier", "Counter64", "Integer32", "NotificationType")
TextualConvention, DateAndTime, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "TruthValue", "MacAddress")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpSystemMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 2))
wwpSystemMIB.setRevisions(('2003-03-11 00:00', '2001-04-03 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpSystemMIB.setRevisionsDescriptions(('The debug group is added.', 'Initial creation.',))
if mibBuilder.loadTexts: wwpSystemMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpSystemMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpSystemMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpSystemMIB.setDescription('The MIB module for the WWP System specific information. This MIB provide additional information to whatever is provided by the standard system group.')
wwpSystemMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1))
wwpSystemClock = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 1))
wwpSystemBootp = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 2))
wwpSystemAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3))
wwpSystemCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 4))
wwpSystemDebug = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 5))
wwpSystemMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 2))
wwpSystemMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 2, 0))
wwpSystemMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 3))
wwpSystemMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 3, 1))
wwpSystemMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 2, 3, 2))
wwpSysClockDateTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 1, 1), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSysClockDateTime.setStatus('current')
if mibBuilder.loadTexts: wwpSysClockDateTime.setDescription('The current system date and time of box. There are no privisions for local time or daylight savings. All times use the 24 hr clock and are UTC. Because device time is UTC, only first 7 bytes of DateAndTime data are returned, per rfc1903.')
wwpSysClockTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSysClockTimeOffset.setStatus('current')
if mibBuilder.loadTexts: wwpSysClockTimeOffset.setDescription('Value used in conjunction with the universal coordinated time (UTC) during the creation of caller ID messages. The value of this object can also be modified by the DHCP using the Time Offset Option.')
wwpSystemBootpMsgFreq = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(12)).setUnits('in seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemBootpMsgFreq.setStatus('deprecated')
if mibBuilder.loadTexts: wwpSystemBootpMsgFreq.setDescription('Defines how frequently (in seconds) that bootp messages are sent to the host.')
wwpSystemStartMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemStartMacAddr.setStatus('current')
if mibBuilder.loadTexts: wwpSystemStartMacAddr.setDescription('Base MAC address for the device, from which all other mac addresses are derived.')
wwpSystemDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemDefaultGateway.setStatus('current')
if mibBuilder.loadTexts: wwpSystemDefaultGateway.setDescription('Default gateway IP address.')
wwpSystemTftpServer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemTftpServer.setStatus('current')
if mibBuilder.loadTexts: wwpSystemTftpServer.setDescription('Has the TFTP Server host name assigned by the bootp server, and later used for subsequent bootp requests.')
wwpSystemBootFile = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemBootFile.setStatus('current')
if mibBuilder.loadTexts: wwpSystemBootFile.setDescription('Name of the dhcp cmd file for the system.')
wwpSystemInterfaceHostName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemInterfaceHostName.setStatus('current')
if mibBuilder.loadTexts: wwpSystemInterfaceHostName.setDescription('Host name for vmi or smi interface.')
wwpSystemCfgControl = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("save", 1), ("updatePasswords", 2), ("updateSnmpCfg", 3), ("mfgDefaultCfg", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemCfgControl.setStatus('current')
if mibBuilder.loadTexts: wwpSystemCfgControl.setDescription("Controls configuration options on the device. The current options are: save: to make the configuration changes made using SNMP persistent across a reboot. updatePasswords: to update the current password file with the new password file. The new passwords will become active immediately. updateSnmpCfg: to update the current snmp configuration data. The new configuration will become active immediately. mfgDefaultCfg: Set system configuration to factory defaults. Note: this will wipe out all of the current configuration including Password and VLAN information. If the system doesn't support any of these control configuration option, it should return error while trying to set this object to the specific option. A read on this object should return none(0).")
wwpSystemCfgFilepath = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 4, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpSystemCfgFilepath.setStatus('current')
if mibBuilder.loadTexts: wwpSystemCfgFilepath.setDescription('Returns the path for configuration related files.')
wwpSystemConsolePortEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 2, 1, 5, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpSystemConsolePortEnable.setStatus('current')
if mibBuilder.loadTexts: wwpSystemConsolePortEnable.setDescription("Setting this object to 'true' will enable the console port.")
mibBuilder.exportSymbols("WWP-SYSTEM-MIB", wwpSystemInterfaceHostName=wwpSystemInterfaceHostName, wwpSystemBootFile=wwpSystemBootFile, wwpSystemCfg=wwpSystemCfg, wwpSystemMIBObjects=wwpSystemMIBObjects, wwpSystemAttr=wwpSystemAttr, wwpSystemCfgFilepath=wwpSystemCfgFilepath, wwpSystemConsolePortEnable=wwpSystemConsolePortEnable, wwpSystemTftpServer=wwpSystemTftpServer, wwpSystemMIBConformance=wwpSystemMIBConformance, wwpSystemMIB=wwpSystemMIB, PYSNMP_MODULE_ID=wwpSystemMIB, wwpSystemMIBGroups=wwpSystemMIBGroups, wwpSystemMIBNotifications=wwpSystemMIBNotifications, wwpSystemStartMacAddr=wwpSystemStartMacAddr, wwpSystemClock=wwpSystemClock, wwpSystemMIBNotificationPrefix=wwpSystemMIBNotificationPrefix, wwpSystemCfgControl=wwpSystemCfgControl, wwpSystemBootpMsgFreq=wwpSystemBootpMsgFreq, wwpSystemDebug=wwpSystemDebug, wwpSystemMIBCompliances=wwpSystemMIBCompliances, wwpSystemDefaultGateway=wwpSystemDefaultGateway, wwpSysClockTimeOffset=wwpSysClockTimeOffset, wwpSysClockDateTime=wwpSysClockDateTime, wwpSystemBootp=wwpSystemBootp)
