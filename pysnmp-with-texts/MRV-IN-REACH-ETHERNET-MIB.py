#
# PySNMP MIB module MRV-IN-REACH-ETHERNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IN-REACH-ETHERNET-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:15:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
mrvInReachProductDivision, = mibBuilder.importSymbols("MRV-IN-REACH-PRODUCT-DIVISION-MIB", "mrvInReachProductDivision")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, Bits, Counter32, Gauge32, Unsigned32, TimeTicks, iso, Counter64, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "Bits", "Counter32", "Gauge32", "Unsigned32", "TimeTicks", "iso", "Counter64", "NotificationType", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xEthernet = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 11))
etherTable = MibTable((1, 3, 6, 1, 4, 1, 33, 11, 1), )
if mibBuilder.loadTexts: etherTable.setStatus('mandatory')
if mibBuilder.loadTexts: etherTable.setDescription('A list of generic entries.')
etherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 11, 1, 1), ).setIndexNames((0, "MRV-IN-REACH-ETHERNET-MIB", "etherIndex"))
if mibBuilder.loadTexts: etherEntry.setStatus('mandatory')
if mibBuilder.loadTexts: etherEntry.setDescription('Generic status and parameter values for an Ethernet interface.')
etherIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherIndex.setStatus('mandatory')
if mibBuilder.loadTexts: etherIndex.setDescription('An index value that uniquely identifies an Ethernet interface. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
etherAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherAlignmentErrors.setStatus('mandatory')
if mibBuilder.loadTexts: etherAlignmentErrors.setDescription('A count of frames received on a particular interface that are not an integral number of octets in length and do not pass the FCS check.')
etherFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherFCSErrors.setStatus('mandatory')
if mibBuilder.loadTexts: etherFCSErrors.setDescription('A count of frames received on a particular interface that are an integral number of octets in length that do not pass the FCS check.')
etherTxTable = MibTable((1, 3, 6, 1, 4, 1, 33, 11, 2), )
if mibBuilder.loadTexts: etherTxTable.setStatus('mandatory')
if mibBuilder.loadTexts: etherTxTable.setDescription('A list of Ethernet transmit entries.')
etherTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 11, 2, 1), ).setIndexNames((0, "MRV-IN-REACH-ETHERNET-MIB", "etherTxIndex"))
if mibBuilder.loadTexts: etherTxEntry.setStatus('mandatory')
if mibBuilder.loadTexts: etherTxEntry.setDescription('Transmit status and parameter values for an Ethernet interface.')
etherTxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxIndex.setStatus('mandatory')
if mibBuilder.loadTexts: etherTxIndex.setDescription('An index value that uniquely identifies an Ethernet interface. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
etherTxSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxSingleCollisionFrames.setStatus('mandatory')
if mibBuilder.loadTexts: etherTxSingleCollisionFrames.setDescription('A count of successfully transmitted frames on a particular interface for which transmission is inhibited by exactly one collision. A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the etherTxMultipleCollisionFrames object.')
etherTxMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherTxMultipleCollisionFrames.setStatus('mandatory')
if mibBuilder.loadTexts: etherTxMultipleCollisionFrames.setDescription('A count of successfully transmitted frames on a particular interface for which transmission is inhibited by more than one collision. A frame that is counted by an instance of this object is also counted by the corresponding instance of either the ifOutUcastPkts or ifOutNUcastPkts object and is not counted by the corresponding instance of the etherTxSingleCollisionFrames object.')
etherMulticastTable = MibTable((1, 3, 6, 1, 4, 1, 33, 11, 3), )
if mibBuilder.loadTexts: etherMulticastTable.setStatus('mandatory')
if mibBuilder.loadTexts: etherMulticastTable.setDescription('A list of etherMulticast entries.')
etherMulticastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 11, 3, 1), ).setIndexNames((0, "MRV-IN-REACH-ETHERNET-MIB", "etherMulticastIndex"))
if mibBuilder.loadTexts: etherMulticastEntry.setStatus('mandatory')
if mibBuilder.loadTexts: etherMulticastEntry.setDescription('EtherMulticast status and parameter values for an Ethernet interface.')
etherMulticastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherMulticastIndex.setStatus('mandatory')
if mibBuilder.loadTexts: etherMulticastIndex.setDescription('An index value that uniquely identifies an Ethernet interface. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
etherMulticastBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherMulticastBytesIn.setStatus('mandatory')
if mibBuilder.loadTexts: etherMulticastBytesIn.setDescription('A count of frames successfully received on a particular interface and for which the destination address multicast bit was set. Bytes that are counted by an instance of this object are also counted by the corresponding instance of the ifInOctets object.')
etherMulticastBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherMulticastBytesOut.setStatus('mandatory')
if mibBuilder.loadTexts: etherMulticastBytesOut.setDescription('A count of successfully frames successfully transmitted on a particular interface and for which the destination address multicast bit was set. Bytes that are counted by an instance of this object are also counted by the corresponding instance of the ifOutOctets object.')
etherXTxTable = MibTable((1, 3, 6, 1, 4, 1, 33, 11, 4), )
if mibBuilder.loadTexts: etherXTxTable.setStatus('mandatory')
if mibBuilder.loadTexts: etherXTxTable.setDescription('A list of Ethernet extended transmit entries.')
etherXTxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 11, 4, 1), ).setIndexNames((0, "MRV-IN-REACH-ETHERNET-MIB", "etherXTxIndex"))
if mibBuilder.loadTexts: etherXTxEntry.setStatus('mandatory')
if mibBuilder.loadTexts: etherXTxEntry.setDescription('Extended transmit status and parameter values for an Ethernet interface.')
etherXTxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherXTxIndex.setStatus('mandatory')
if mibBuilder.loadTexts: etherXTxIndex.setDescription('An index value that uniquely identifies an Ethernet interface. The interface identified by a particular value of this index is the same interface as identified by the same value of ifIndex.')
etherXTxExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 11, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherXTxExcessiveCollisions.setStatus('mandatory')
if mibBuilder.loadTexts: etherXTxExcessiveCollisions.setDescription('A count of frames for which transmission on a particular interface fails due to excessive collisions.')
mibBuilder.exportSymbols("MRV-IN-REACH-ETHERNET-MIB", etherMulticastTable=etherMulticastTable, etherMulticastEntry=etherMulticastEntry, etherXTxEntry=etherXTxEntry, etherTxTable=etherTxTable, etherAlignmentErrors=etherAlignmentErrors, etherFCSErrors=etherFCSErrors, etherEntry=etherEntry, etherXTxTable=etherXTxTable, etherTxEntry=etherTxEntry, etherTxSingleCollisionFrames=etherTxSingleCollisionFrames, etherMulticastIndex=etherMulticastIndex, xEthernet=xEthernet, etherXTxIndex=etherXTxIndex, etherMulticastBytesOut=etherMulticastBytesOut, etherTxMultipleCollisionFrames=etherTxMultipleCollisionFrames, etherXTxExcessiveCollisions=etherXTxExcessiveCollisions, etherMulticastBytesIn=etherMulticastBytesIn, etherTxIndex=etherTxIndex, etherIndex=etherIndex, etherTable=etherTable)
