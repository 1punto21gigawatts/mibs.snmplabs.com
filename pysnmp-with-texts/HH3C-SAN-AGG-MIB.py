#
# PySNMP MIB module HH3C-SAN-AGG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-SAN-AGG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:29:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
hh3cSan, = mibBuilder.importSymbols("HH3C-VSAN-MIB", "hh3cSan")
ifDescr, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, Unsigned32, TimeTicks, Counter32, Gauge32, ModuleIdentity, Bits, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "Unsigned32", "TimeTicks", "Counter32", "Gauge32", "ModuleIdentity", "Bits", "Counter64", "ObjectIdentity")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
hh3cSanAgg = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2))
hh3cSanAgg.setRevisions(('2013-02-25 09:40',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cSanAgg.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: hh3cSanAgg.setLastUpdated('201302250940Z')
if mibBuilder.loadTexts: hh3cSanAgg.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cSanAgg.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cSanAgg.setDescription('This MIB module is for configuring and monitoring SAN (Storage Area Networks) aggregation group related MIB objects. This MIB can be used to add or delete a SAN aggregation group, and make one or more FC (Fiber Channel) ports join or leave the group, as well as show their states.')
class Hh3cMemberList(TextualConvention, OctetString):
    description = 'A list of values concerning the member ports in a SAN aggregation group. Each 4 octets within this value list specifies a member in a SAN aggregation group. A zero-length string value means this list has no member, and the maximum length of this string depends on the maximum number of members a SAN aggregation supports.'
    status = 'current'

hh3cSanAggMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 1))
hh3cSanAggMaxMemberNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSanAggMaxMemberNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggMaxMemberNumber.setDescription('This value specifies the maximum member number that a SAN aggregation group supports, and this restriction depends on product customization.')
hh3cSanAggGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2), )
if mibBuilder.loadTexts: hh3cSanAggGroupTable.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupTable.setDescription('A table of SAN aggregation objects to be used in configuring and monitoring a SAN aggregation group and its members.')
hh3cSanAggGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1), ).setIndexNames((0, "HH3C-SAN-AGG-MIB", "hh3cSanAggGroupNumber"))
if mibBuilder.loadTexts: hh3cSanAggGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupEntry.setDescription('A group of SAN aggregation objects to be used in configuring and monitoring a SAN aggregation group and its members.')
hh3cSanAggGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSanAggGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupNumber.setDescription('The serial number of the current SAN aggregation group.')
hh3cSanAggGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSanAggGroupIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupIndex.setDescription('The ifIndex of the current SAN aggregation group.')
hh3cSanAggMemberList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1, 3), Hh3cMemberList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSanAggMemberList.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggMemberList.setDescription("List of member's ifIndex in the current SAN aggregation group. If there is no member in the SAN aggregation group, the list length should be zero. Otherwise each member's ifIndex value occupies 4 octets. The greatest length of this list depends on the maximum number of members a SAN aggregation group supports, which can be customized and therefore is not a fixed value. When getting the group members' ifIndexes, the result was sorted in ascending order of ifIndex values. However, when setting the group members' ifIndexes, the sequence of ifIndex values is not required.")
hh3cSanAggMemberStateList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1, 4), Hh3cMemberList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSanAggMemberStateList.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggMemberStateList.setDescription("List of member's state in current SAN aggregation group, where the state value is sorted in ascending order of member's ifIndex, which is consistent with the 'get' result of 'hh3cSanAggMemberList'. The explanation of this value's length is as same as the 'hh3cSanAggMemberList'. Each member's state value occupies 4 octets. The value specifications are listed as follows: 1: This member hasn't passed the link negotiation. 2: This member has passed the link negotiation but has not been selected. 3: This member has been selected.")
hh3cSanAggGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSanAggGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupRowStatus.setDescription('RowStatus. Now only three states are supported: createAndGo, active, and destroy.')
hh3cSanAggObjForNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 3))
hh3cSanAggGroupPreviousSpeed = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 3, 1), Integer32()).setUnits('gigabit bps').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSanAggGroupPreviousSpeed.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupPreviousSpeed.setDescription('The previous speed of the SAN aggregation group.')
hh3cSanAggGroupCurrentSpeed = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 3, 2), Integer32()).setUnits('gigabit bps').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSanAggGroupCurrentSpeed.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupCurrentSpeed.setDescription('The current speed of the SAN aggregation group.')
hh3cSanAggNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 4))
hh3cSanAggNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 4, 0))
hh3cSanAggGroupSpeedChange = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 4, 0, 1)).setObjects(("HH3C-SAN-AGG-MIB", "hh3cSanAggGroupNumber"), ("HH3C-SAN-AGG-MIB", "hh3cSanAggGroupPreviousSpeed"), ("HH3C-SAN-AGG-MIB", "hh3cSanAggGroupCurrentSpeed"))
if mibBuilder.loadTexts: hh3cSanAggGroupSpeedChange.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggGroupSpeedChange.setDescription('This event will be triggered whenever a SAN aggregation group changes its speed.')
hh3cSanAggMemberInactive = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 4, 0, 2)).setObjects(("HH3C-SAN-AGG-MIB", "hh3cSanAggGroupNumber"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hh3cSanAggMemberInactive.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggMemberInactive.setDescription('This event will be triggered whenever any member in a SAN aggregation group is made inactive.')
hh3cSanAggMemberActive = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 127, 2, 4, 0, 3)).setObjects(("HH3C-SAN-AGG-MIB", "hh3cSanAggGroupNumber"), ("IF-MIB", "ifIndex"), ("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: hh3cSanAggMemberActive.setStatus('current')
if mibBuilder.loadTexts: hh3cSanAggMemberActive.setDescription('This event will be triggered whenever any member in a SAN aggregation group is made active.')
mibBuilder.exportSymbols("HH3C-SAN-AGG-MIB", hh3cSanAggGroupPreviousSpeed=hh3cSanAggGroupPreviousSpeed, hh3cSanAggMemberStateList=hh3cSanAggMemberStateList, hh3cSanAggGroupSpeedChange=hh3cSanAggGroupSpeedChange, hh3cSanAggMemberInactive=hh3cSanAggMemberInactive, hh3cSanAggGroupTable=hh3cSanAggGroupTable, hh3cSanAggNotificationPrefix=hh3cSanAggNotificationPrefix, hh3cSanAggGroupIndex=hh3cSanAggGroupIndex, hh3cSanAggGroupCurrentSpeed=hh3cSanAggGroupCurrentSpeed, PYSNMP_MODULE_ID=hh3cSanAgg, hh3cSanAggMibObjects=hh3cSanAggMibObjects, hh3cSanAggGroupNumber=hh3cSanAggGroupNumber, hh3cSanAggGroupRowStatus=hh3cSanAggGroupRowStatus, hh3cSanAggMaxMemberNumber=hh3cSanAggMaxMemberNumber, hh3cSanAggObjForNotification=hh3cSanAggObjForNotification, hh3cSanAggNotifications=hh3cSanAggNotifications, hh3cSanAgg=hh3cSanAgg, hh3cSanAggGroupEntry=hh3cSanAggGroupEntry, Hh3cMemberList=Hh3cMemberList, hh3cSanAggMemberActive=hh3cSanAggMemberActive, hh3cSanAggMemberList=hh3cSanAggMemberList)
