#
# PySNMP MIB module HHMSSMALL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HHMSSMALL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:30:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, IpAddress, Counter64, Gauge32, TimeTicks, NotificationType, ModuleIdentity, iso, Unsigned32, NotificationType, MibIdentifier, Integer32, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "IpAddress", "Counter64", "Gauge32", "TimeTicks", "NotificationType", "ModuleIdentity", "iso", "Unsigned32", "NotificationType", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
internet = MibIdentifier((1, 3, 6, 1))
directory = MibIdentifier((1, 3, 6, 1, 1))
mgmt = MibIdentifier((1, 3, 6, 1, 2))
experimental = MibIdentifier((1, 3, 6, 1, 3))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
class DisplayString(OctetString):
    pass

akcp = MibIdentifier((1, 3, 6, 1, 4, 1, 3854))
hhmsagent = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1))
hhmsSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2))
hhmsSensorArray = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2))
hhmsSensorArrayEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1))
hhmsSensorArrayTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16))
hhmsSensorArrayTempEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1))
hhmsSensorArrayTempDegree = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorArrayTempDegree.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorArrayTempDegree.setDescription('The degrees in this sensor')
hhmsSensorArrayTempStatus = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noStatus", 1), ("normal", 2), ("highWarning", 3), ("highCritical", 4), ("lowWarning", 5), ("lowCritical", 6), ("sensorError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorArrayTempStatus.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorArrayTempStatus.setDescription('The current status of this Sensor')
hhmsSensorArrayHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17))
hhmsSensorArrayHumidityEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1))
hhmsSensorArrayHumidityPercent = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorArrayHumidityPercent.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorArrayHumidityPercent.setDescription('The relative humidity percentage measured by this sensor')
hhmsSensorArrayHumidityStatus = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noStatus", 1), ("normal", 2), ("highWarning", 3), ("highCritical", 4), ("lowWarning", 5), ("lowCritical", 6), ("sensorError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorArrayHumidityStatus.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorArrayHumidityStatus.setDescription('The current status of this Sensor')
hhmsSensorArraySwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18))
hhmsSensorArraySwitchEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1))
hhmsSensorArraySwitchStatus = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 2, 2, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 7))).clone(namedValues=NamedValues(("noStatus", 1), ("normal", 2), ("critical", 4), ("sensorError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorArraySwitchStatus.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorArraySwitchStatus.setDescription('The current status of this Sensor, only input switches have a status')
hhmsAgentTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3854, 1, 7))
hhmsSensorStatus = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noStatus", 1), ("normal", 2), ("highWarning", 3), ("highCritical", 4), ("lowWarning", 5), ("lowCritical", 6), ("sensorError", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorStatus.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorStatus.setDescription('The current integer status of the sensor causing this trap to be sent')
hhmsSensorValue = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorValue.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorValue.setDescription('The current integer value of the sensor causing this trap to be sent')
hhmsSensorLevelExceeded = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorLevelExceeded.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorLevelExceeded.setDescription('The integer level that was exceeded causing this trap to be sent')
hhmsSensorIndex = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorIndex.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorIndex.setDescription('The integer index of the sensor causing this trap to be sent')
hhmsSensorName = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorName.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorName.setDescription('The name of the sensor causing this trap to be sent')
hhmsSensorDescription = MibScalar((1, 3, 6, 1, 4, 1, 3854, 1, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hhmsSensorDescription.setStatus('mandatory')
if mibBuilder.loadTexts: hhmsSensorDescription.setDescription('The description of the sensor causing this trap to be sent')
hhmsUnknownStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,0))
if mibBuilder.loadTexts: hhmsUnknownStatus.setDescription('hhmsagent status went to Unknown')
hhmsNormalStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,1))
if mibBuilder.loadTexts: hhmsNormalStatus.setDescription('hhmsagent status is Normal')
hhmsWarningStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,2))
if mibBuilder.loadTexts: hhmsWarningStatus.setDescription('hhmsagent status went to Warning')
hhmsCriticalStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,3))
if mibBuilder.loadTexts: hhmsCriticalStatus.setDescription('hhmsagent status went to Critical')
hhmsDownStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,4))
if mibBuilder.loadTexts: hhmsDownStatus.setDescription('hhmsagent status went to Disabled')
hhmsTemperatureStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,10)).setObjects(("HHMSSMALL-MIB", "hhmsSensorStatus"), ("HHMSSMALL-MIB", "hhmsSensorValue"), ("HHMSSMALL-MIB", "hhmsSensorLevelExceeded"), ("HHMSSMALL-MIB", "hhmsSensorIndex"), ("HHMSSMALL-MIB", "hhmsSensorName"), ("HHMSSMALL-MIB", "hhmsSensorDescription"))
if mibBuilder.loadTexts: hhmsTemperatureStatus.setDescription('Temperature sensor trap')
hhmsHumidityStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,20)).setObjects(("HHMSSMALL-MIB", "hhmsSensorStatus"), ("HHMSSMALL-MIB", "hhmsSensorValue"), ("HHMSSMALL-MIB", "hhmsSensorLevelExceeded"), ("HHMSSMALL-MIB", "hhmsSensorIndex"), ("HHMSSMALL-MIB", "hhmsSensorName"), ("HHMSSMALL-MIB", "hhmsSensorDescription"))
if mibBuilder.loadTexts: hhmsHumidityStatus.setDescription('Humidity sensor trap')
hhmsSwitchStatus = NotificationType((1, 3, 6, 1, 4, 1, 3854, 1) + (0,30)).setObjects(("HHMSSMALL-MIB", "hhmsSensorStatus"), ("HHMSSMALL-MIB", "hhmsSensorValue"), ("HHMSSMALL-MIB", "hhmsSensorLevelExceeded"), ("HHMSSMALL-MIB", "hhmsSensorIndex"), ("HHMSSMALL-MIB", "hhmsSensorName"), ("HHMSSMALL-MIB", "hhmsSensorDescription"))
if mibBuilder.loadTexts: hhmsSwitchStatus.setDescription('Switch sensor trap')
mibBuilder.exportSymbols("HHMSSMALL-MIB", DisplayString=DisplayString, hhmsHumidityStatus=hhmsHumidityStatus, hhmsSensorArrayHumidityPercent=hhmsSensorArrayHumidityPercent, hhmsSensorStatus=hhmsSensorStatus, hhmsSensorDescription=hhmsSensorDescription, hhmsSensorArrayTemp=hhmsSensorArrayTemp, hhmsSwitchStatus=hhmsSwitchStatus, hhmsSensorArrayHumidityEntry=hhmsSensorArrayHumidityEntry, hhmsSensorArray=hhmsSensorArray, hhmsSensorArrayHumidity=hhmsSensorArrayHumidity, directory=directory, hhmsSensorIndex=hhmsSensorIndex, hhmsSensorArraySwitch=hhmsSensorArraySwitch, hhmsSensorName=hhmsSensorName, hhmsSensorValue=hhmsSensorValue, hhmsSensorArraySwitchEntry=hhmsSensorArraySwitchEntry, hhmsAgentTraps=hhmsAgentTraps, experimental=experimental, hhmsSensorLevelExceeded=hhmsSensorLevelExceeded, internet=internet, hhmsTemperatureStatus=hhmsTemperatureStatus, hhmsDownStatus=hhmsDownStatus, hhmsSensorArrayTempStatus=hhmsSensorArrayTempStatus, enterprises=enterprises, hhmsSensorArrayTempDegree=hhmsSensorArrayTempDegree, hhmsSensorArraySwitchStatus=hhmsSensorArraySwitchStatus, hhmsUnknownStatus=hhmsUnknownStatus, hhmsSensorArrayTempEntry=hhmsSensorArrayTempEntry, hhmsSensorArrayEntry=hhmsSensorArrayEntry, hhmsagent=hhmsagent, hhmsNormalStatus=hhmsNormalStatus, hhmsWarningStatus=hhmsWarningStatus, hhmsCriticalStatus=hhmsCriticalStatus, hhmsSensorArrayHumidityStatus=hhmsSensorArrayHumidityStatus, hhmsSensor=hhmsSensor, private=private, akcp=akcp, mgmt=mgmt)
