#
# PySNMP MIB module ENTERASYS-CLASS-OF-SERVICE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-CLASS-OF-SERVICE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
ifName, = mibBuilder.importSymbols("IF-MIB", "ifName")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, Unsigned32, NotificationType, TimeTicks, IpAddress, ObjectIdentity, Counter64, iso, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "Unsigned32", "NotificationType", "TimeTicks", "IpAddress", "ObjectIdentity", "Counter64", "iso", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity")
TextualConvention, TimeStamp, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "RowStatus", "TruthValue", "DisplayString")
etsysCosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55))
etsysCosMIB.setRevisions(('2008-02-13 15:03', '2007-05-24 02:29', '2005-04-13 21:22', '2004-11-22 16:28', '2004-11-09 15:52',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysCosMIB.setRevisionsDescriptions(('Further constrained size of etsysCosTosValue OCTET STRING.', 'Add support for inbound unicast, multicast and broadcast packet flooding limits.', 'Additional branch etsysCosNotifications properly contains trap information.', 'Corrected the bits in the EtsysCosRlCapabilities textual convention.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysCosMIB.setLastUpdated('200802131503Z')
if mibBuilder.loadTexts: etsysCosMIB.setOrganization('Enterasys Networks, Inc.')
if mibBuilder.loadTexts: etsysCosMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysCosMIB.setDescription('This MIB module defines a portion of the SNMP enterprise MIBs under the Enterasys enterprise OID pertaining to the configuration and application of transmission and reception attributes that comprise class of service for Enterasys network edge devices or access products.')
class TxqArbiterModes(TextualConvention, Bits):
    description = 'This textual convention enumerates the possible arbiter modes. strict(0) Queues are serviced until empty or until a higher priority queue requires servicing. weightedFairQ(1) Weighted Fair Queuing. Queues are serviced according to weight. lowLatencyQ(2) Some queues may be strict, while other are weighted-fair.'
    status = 'current'
    namedValues = NamedValues(("strict", 0), ("weightedFairQ", 1), ("lowLatencyQ", 2))

class TxqAlgorithms(TextualConvention, Bits):
    description = 'This textual convention enumerates the possible queuing algorithms. tailDrop(0) The last entry in the queue is discarded in favor of new entries. headDrop(1) The first entry in the queue is discarded in favor of new entries. red(2) Random Early Discard. wred(3) Weighted Random Early Discard.'
    status = 'current'
    namedValues = NamedValues(("tailDrop", 0), ("headDrop", 1), ("red", 2), ("wred", 3))

class TxQueueList(TextualConvention, OctetString):
    description = "Each octet within this value specifies a set of eight transmit queues, with the first octet specifying queues 0 through 7, the second octet specifying queues 8 through 15, et cetera. Within each octet, the most significant bit represents the lowest numbered queue, and the least significant bit represents the highest numbered queue. Thus, each queue of the port is represented by a single bit within the value of this object. If that bit has a value of '1' then that queue is included in the set of queues; the queue is not included if its bit has a value of '0'."
    status = 'current'

class EtsysCosRateTypes(TextualConvention, Bits):
    description = 'This textual convention enumerates the possible inbound or outbound rate types. percentage(0) A percentage of the total bandwidth available. pps(1) Packet per second. kbps(2) Kilobits per second. mbps(3) Megabits per second. gbps(4) Gigabits per second. tbps(5) Terabits per second.'
    status = 'current'
    namedValues = NamedValues(("percentage", 0), ("pps", 1), ("kbps", 2), ("mbps", 3), ("gbps", 4), ("tbps", 5))

class EtsysCosRlCapabilities(TextualConvention, Bits):
    description = 'This textual convention defines the supported actions for inbound or outbound rate limiting. drop(0) Packets will be dropped. reprioritize(1) Packet priority change. count(2) Count the either packets or bits through the limiter (specified by the configured EtsysCosRateTypes, percentage(1) not chainingAnd(3) Link limiters together, violated if ALL limiters of like EtsysRateLimitingType are violated, this is the default type of chained limiters. chainingOr(4) Link limiters together, violated if ANY limiters of like EtsysRateLimitingType are violated. syslog(5) Syslog on first violation is supported. trap(6) SNMP Notify on first violation is supported. disable(7) Disable ingress port on first violation is supported.'
    status = 'current'
    namedValues = NamedValues(("drop", 0), ("reprioritize", 1), ("count", 2), ("chainingAnd", 3), ("chainingOr", 4), ("syslog", 5), ("trap", 6), ("disable", 7))

class EtsysViolationAction(TextualConvention, Bits):
    description = 'This textual convention defines the available actions to be taken when a RateLimiter is violated for the first time (on a transition from 0 to 1 of a bit in the etsysCosIrlResourceViolationPortList). syslog(0) System logging messages will be sent to the console trap(1) A trap will be sent. disable(2) The dot1dBasePort on which the event occurred will be operationally disabled.'
    status = 'current'
    namedValues = NamedValues(("syslog", 0), ("trap", 1), ("disable", 2))

class EtsysRateLimitingType(TextualConvention, Integer32):
    description = 'This textual convention defines the range of characteristics that can applied to inbound or outbound rate limiters. For chains of limiters, the behavior with respect to limiters of like type (drop or reprioritize) may be controlled via the xxxOR nomenclature. By default ALL limiters of like type must be violated for the action (drop or reprioritize) to apply (implicit AND). The xxxOR types indicate that the action (drop or reprioritize) will be applied if ANY of the limiters is violated. The count option counts packets or bits presented to the limiter.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("drop", 0), ("dropOR", 1), ("rePrioritize", 2), ("rePrioritizeOR", 3), ("count", 4))

class EtsysRateLimitResetBits(TextualConvention, Bits):
    description = 'This textual convention defines the reset properties for the statistics gathering portion of the rate limiters. If bit 0 is set, the etsysCosIrlViolation TruthValue will be reset to false. If bit 1 is set, the etsysCosIrlUnitCounter will be reset to zero.'
    status = 'current'
    namedValues = NamedValues(("clearViolation", 0), ("clearUnitCounter", 1))

etsysCosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1))
etsysCosNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 0))
etsysCosMasterReset = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 1))
etsysCosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 2))
etsysCos = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3))
etsysCosTxq = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4))
etsysCosIrl = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5))
etsysCosOrl = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6))
etsysCosFloodControl = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7))
etsysCosMibObjectAnullingBehavior = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosMibObjectAnullingBehavior.setStatus('current')
if mibBuilder.loadTexts: etsysCosMibObjectAnullingBehavior.setDescription('This object SHALL always read false. Setting this object to true MUST remove all existing entries from all tables in all subordinate objects of etsysCosObjects, and nullify all changes to any values. The resulting behavior should yield an unconfigured etsysCosMIB.')
etsysCosCapability = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 2, 1), Bits().clone(namedValues=NamedValues(("supports8021Dpriority", 0), ("supportsTosOverwrite", 1), ("supportsTosMasking", 2), ("supportsTransmitQueue", 3), ("supportsInboundRateLimiting", 4), ("supportsOutBoundRateLimiting", 5), ("supportsDropPrecedence", 6), ("supportsUnknownUnicastRateLimiting", 7), ("supportsMulticastRateLimiting", 8), ("supportsBroadcastRateLimiting", 9), ("supportsTransmitQueuePortShaping", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosCapability.setStatus('current')
if mibBuilder.loadTexts: etsysCosCapability.setDescription('A list of capabilities related to class of service support. A set bit, with the value 1, indicates support for the described functionality. A clear bit, with the value 0, indicates the described functionality is not supported.')
etsysCosMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosMaxEntries.setDescription('The maximum number of entries allowed in the etsysCosTable.')
etsysCosNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosNumEntries.setDescription('The current number of entries in the etsysCosTable.')
etsysCosLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosLastChange.setDescription('The time at which the etsysCos Table was last modified.')
etsysCosEnableState = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 4), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosEnableState.setStatus('current')
if mibBuilder.loadTexts: etsysCosEnableState.setDescription('If enabled(1), controls configured for this MIB supersede controls for portions of BRIDGE-MIB dealing with priority queue mapping, all of the CTRON-RATE-POLICING-MIB and all of the CTRON-TX-QUEUE-ARBITRATION-MIB. A setting to disabled(2) from enabled(1), results in the restoration of any existing configurations from the aforementioned MIBs.')
etsysCosTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5), )
if mibBuilder.loadTexts: etsysCosTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTable.setDescription('A table containing class of service settings to be applied to a dot1dBridge port or port groups.')
etsysCosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIndex"))
if mibBuilder.loadTexts: etsysCosEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosEntry.setDescription('Conceptually defines a particular entry within the etsysCosTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIndex.setDescription('A unique class of service identifier for this CoS setting. For reasons of backward compatibility indexes 0-7 MUST exist and be configured with a etsysCos8021dPriority which matches the etsysCosIndex.')
etsysCosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosRowStatus.setDescription('This object allows for the dynamic creation and deletion of entries within the etsysCosTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCos8021dPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCos8021dPriority.setStatus('current')
if mibBuilder.loadTexts: etsysCos8021dPriority.setDescription('The 802.1D priority to be associated with this Class of Service. If this field is returned as (-1) then it has not been configured and no action will be taken for this attribute.')
etsysCosTosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTosValue.setStatus('current')
if mibBuilder.loadTexts: etsysCosTosValue.setDescription('The Type of Service or Differentiated Services Code Point value and mask to be associated with this Class of Service. If this field is returned as <empty-string>, then it has not been configured and no action will be taken for this attribute. The first octet shall represent the TOS/DSCP value and the second octet shall represent the mask applied to that value. Agents that do not support masking shall fail sets to this object that include a mask octet.')
etsysCosTxqReference = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqReference.setDescription('The transmit queue table instance to reference for this Class of Service.')
etsysCosIrlReference = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 32767), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosIrlReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlReference.setDescription('The inbound rate limiting table instance to reference for this Class of Service. If this instance is returned as (-1), no action will be taken for this attribute.')
etsysCosOrlReference = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 32767), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosOrlReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlReference.setDescription('The outbound rate limiting table instance to reference for this Class of Service. If this instance is returned as (-1), no action will be taken for this attribute.')
etsysCosDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 255), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosDropPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysCosDropPrecedence.setDescription('The drop precedence default action. If this field is returned as (-1) then it has not been configured and no action will be taken for this attribute. If unsupported the agent may optionally implement this leaf as read-only.')
etsysCosFloodControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 3, 5, 1, 9), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosFloodControlStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodControlStatus.setDescription('Controls whether flooded traffic will be rate limited based on configuration in the etsysCosFloodControl groups.')
etsysCosTxqNumPortTypes = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2048))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqNumPortTypes.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqNumPortTypes.setDescription('The actual number of distinctly unique (as defined by the set of shared Transmit Queue capabilities) port types available for configuration on this agent.')
etsysCosTxqPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2), )
if mibBuilder.loadTexts: etsysCosTxqPortTypeTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeTable.setDescription('A table defining the distinctly unique transmit queue characteristics of a group of ports.')
etsysCosTxqPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosTxqPortTypeEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeEntry.setDescription('Conceptually defines a particular entry within the etsysCosTxqPortTypeTable.')
etsysCosTxqPortTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosTxqPortTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeIndex.setDescription('The port type associated with the unique set of ports sharing these capabilities.')
etsysCosTxqPortTypeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeDescr.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeDescr.setDescription('The textual description that represents this set of dot1dBridge ports.')
etsysCosTxqPortTypeEligiblePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeEligiblePorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeEligiblePorts.setDescription('The list of dot1dBridge ports belonging (having the same capabilities) to this port type.')
etsysCosTxqPortTypeUnselectedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeUnselectedPorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeUnselectedPorts.setDescription('The list of dot1dBridge ports not yet bound to a user created row (port group) in the etsysCosTxqPortGroupTable.')
etsysCosTxqPortTypeNumberOfQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeNumberOfQueues.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeNumberOfQueues.setDescription('The number of queues available for configuration by this agent on this type of port.')
etsysCosTxqPortTypeSupportedRateTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 6), EtsysCosRateTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeSupportedRateTypes.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeSupportedRateTypes.setDescription('The rate types available for use in these settings.')
etsysCosTxqPortTypeNumberOfSlices = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeNumberOfSlices.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeNumberOfSlices.setDescription('The number of slices available for configuration.')
etsysCosTxqPortTypeQueueAlgorithms = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 8), TxqAlgorithms()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeQueueAlgorithms.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeQueueAlgorithms.setDescription('The queuing algorithms available for use with these settings.')
etsysCosTxqPortTypeQueueArbiterModes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 9), TxqArbiterModes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeQueueArbiterModes.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeQueueArbiterModes.setDescription('The arbitration modes available for use with these setting.')
etsysCosTxqPortTypeMaxDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeMaxDropPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeMaxDropPrecedence.setDescription('The maximum drop precedence allowed on this port type.')
etsysCosTxqPortTypeLLQEligibleQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 2, 1, 11), TxQueueList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortTypeLLQEligibleQueues.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortTypeLLQEligibleQueues.setDescription('The queues eligible for low latency queue configuration.')
etsysCosTxqUnitTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3), )
if mibBuilder.loadTexts: etsysCosTxqUnitTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitTable.setDescription('A table containing the rate type, minimum and maximum limits of the port groups and their respective granularity.')
etsysCosTxqUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqUnitTypeIndex"))
if mibBuilder.loadTexts: etsysCosTxqUnitEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitEntry.setDescription('Conceptually defines a particular entry within the etsysCosTxqUnitTable. Entries in this table indicate the port group boundaries for the type of port specified.')
etsysCosTxqUnitTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3, 1, 1), EtsysCosRateTypes())
if mibBuilder.loadTexts: etsysCosTxqUnitTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitTypeIndex.setDescription('The unit identifier for this port type. The metric at which the etsysCosTxqUnitMinRate, etsysCosTxqUnitMaxRate and etsysCosTxqUnitGranularity are applied.')
etsysCosTxqUnitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqUnitMaxRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitMaxRate.setDescription('The maximum rate supported at the rate of units specified by etsysCosTxqUnitTypeIndex.')
etsysCosTxqUnitMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqUnitMinRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitMinRate.setDescription('The minimum rate supported at the rate of units specified by etsysCosTxqUnitTypeIndex.')
etsysCosTxqUnitGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqUnitGranularity.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqUnitGranularity.setDescription('The smallest unit by which a rate can be modified.')
etsysCosTxqMaxPortGroups = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqMaxPortGroups.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqMaxPortGroups.setDescription('The maximum number of port groups supported by this agent.')
etsysCosTxqNumPortGroups = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqNumPortGroups.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqNumPortGroups.setDescription('The number of assigned dot1dBridge port groups present in this agent. This number also reflects the port groups with a default system setup indicated by a zero(0) index.')
etsysCosTxqPortGroupLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortGroupLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupLastChange.setDescription('The time at which the etsysCosTxqPortTable was last modified.')
etsysCosTxqPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7), )
if mibBuilder.loadTexts: etsysCosTxqPortGroupTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupTable.setDescription('A table containing the user settings for specific types of ports and their matching transmit queue configurations.')
etsysCosTxqPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosTxqPortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupEntry.setDescription('Conceptually defines a particular entry within the etsysCosTxqPortTypeTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosTxqPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32767), )))
if mibBuilder.loadTexts: etsysCosTxqPortGroupIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupIndex.setDescription('The user-specified port group for which the settings are defined. This value MAY have meaning to the user for the purposes of identifying groups of dot1dBridge ports with similar function (uplink, user, etc). A value of zero(0) has special meaning in that it identifies the default port grouping of characteristics present in the agent. Entries indexed by a zero have a max-access of read-only. This value will have a system defined maximum of etsysCosTxqMaxPortGroups.')
etsysCosTxqPortGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqPortGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupRowStatus.setDescription("This object allows for the dynamic creation and deletion of entries within the etsysCosTxqPortTypeTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets. When this object's value is active(1) the specified dot1dBridge ports listed in the etsysCosTxqPortGroupList shall be removed from etsysCosTxqPortGroupUnselectedPorts. A row in transition to the active(1) state will have its port group list validated before activation. A port list that cannot be made active MUST result in the row state to become notReady(3) and no configuration action will be taken for this row. Rows not in the active(1) state SHALL NOT be persisted across entity resets and MUST return the ports from its port group list to the etsysCosTxqPortGroupUnselectedPorts. When this object's value is set to destroy(6) from an active(1) state, all ports contained in etsysCosTxqPortList shall be returned to the etsysCosTxqPortGroupUnselectedPorts and all entries referencing this row shall be removed as well.")
etsysCosTxqPortGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7, 1, 3), PortList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqPortGroupList.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupList.setDescription('The list of dot1dBridge ports to be assigned to this group. Ports in this list MUST : o Be mutually exclusive from other entries in this table o Be comprised of the same port type as defined by the etsysCosTxqPortTypeIndex.')
etsysCosTxqPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 7, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqPortGroupName.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortGroupName.setDescription('The administratively assigned textual description of this port group.')
etsysCosTxqPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 8), )
if mibBuilder.loadTexts: etsysCosTxqPortCfgTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortCfgTable.setDescription('A table containing the queue values to be used in the entries specified. Rows in this table are populated based on rowCreation in the etsysCosTxqPortGroupTable. Changes to this table are reflected in the etsysCosTxqPortGroupLastChange value.')
etsysCosTxqPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 8, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosTxqPortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortCfgEntry.setDescription("Conceptually defines a particular entry within the etsysCosTxqPortCfgTable. Details contained within this entry will depict the slice distributions across each queue per dot1dBridge port, as well as determine the arbiter's method for servicing the queues. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.")
etsysCosTxqPortArbMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 8, 1, 1), TxqArbiterModes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqPortArbMode.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortArbMode.setDescription('The mode in which the transmit queue arbiter services the queues. When in strict-mode, the queues will be services by numerical priority from lowest to highest. Lower priority queues will not be services until the current queue is drained. When set to weightedFairQ, the number of slices in a particular queue determines the frequency of servicing. A slice configuration of 00-00...100 will set the port to strict-mode.')
etsysCosTxqPortSliceSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqPortSliceSetting.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortSliceSetting.setDescription("This object is an octet string in which the number of octets corresponds to the number of transmit queues for each dot1dBridge port. The value of the first octet represents the number of 'slices' of transmit resources to allocate to Queue 0, the second octet represents the number for Queue 1, and so forth. The sum of all the octets in the octet string must add up to the total number of slices available for that port type as defined in etsysCosTxqNumberOfSlices. For example, on a port having 4 transmit queues and where transmit resources are divided into 16 slices, writing an octet string of {0x00, 0x04, 0x04, 0x08} would have the following effect: At least 50% of the frames transmitted are from Queue 3 At least 25% of the frames transmitted are from Queue 2 At least 25% of the frames transmitted are from Queue 1 No frames will be transmitted from Queue 0 until Queues 1, 2 and 3 are empty.")
etsysCosTxqResourceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9), )
if mibBuilder.loadTexts: etsysCosTxqResourceTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqResourceTable.setDescription('A table containing rate, units and queuing algorithm to be used in the entries specified.')
etsysCosTxqResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqResourceQueueNum"))
if mibBuilder.loadTexts: etsysCosTxqResourceEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqResourceEntry.setDescription('Conceptually defines a particular entry within the etsysCosTxqResourceTable. These entries contain the specific attributes of transmission rates (traffic shaping) and dropping styles to be applied to dot1dBridge ports. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosTxqResourceQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosTxqResourceQueueNum.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqResourceQueueNum.setDescription('The queue number associated with this entry.')
etsysCosTxqPortQUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1, 2), EtsysCosRateTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqPortQUnit.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortQUnit.setDescription('Identifies the unit size for the etsysCosTxqPortRate. Values MUST NOT exceed the capacity of the etsysCosTxqPortType they are associated with.')
etsysCosTxqPortQRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqPortQRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortQRate.setDescription('Identifies the number of units used in this queue configuration. The value (0) shall carry special meaning that indicates the settings MUST NOT be applied to the queue.')
etsysCosTxqPortQAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1, 4), TxqAlgorithms()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqPortQAlgorithm.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortQAlgorithm.setDescription('Determines the rules by which discarding is applied.')
etsysCosTxqPortQLLQenable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 9, 1, 5), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqPortQLLQenable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqPortQLLQenable.setDescription('This object represents the requested use of low latency queues for this dot1dBridge port. This object is REQUIRED to fail set attempts for unsupported hardware.')
etsysCosTxqReferenceMappingMaxReference = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingMaxReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingMaxReference.setDescription('The maximum number of etsysCosTxqReferences allowed in the etsysCosTxqMappingTable.')
etsysCosTxqReferenceMappingTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 11), )
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingTable.setDescription('A table containing the user defined mappings of the TxQ refences found in the etsysCosTable to physical transmit queues associated with the specified port-group.')
etsysCosTxqReferenceMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 11, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqReference"))
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqReferenceMappingEntry.setDescription('Conceptually defines a particular entry within the etsysCosTxqReferenceMappingTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosTxqResourceQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqResourceQueueNumber.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqResourceQueueNumber.setDescription('The queue number to be bound to this reference.')
etsysCosTxqDropProfilesMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMaxEntries.setDescription('The maximum number of entries allowed in the etsysCosDropProfiles Table.')
etsysCosTxqDropProfilesNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesNumEntries.setDescription('The current number of entries in the etsysCosQueueProfiles Table.')
etsysCosTxqDropProfilesLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesLastChange.setDescription('The time at which the etsysCosQueueProfiles Table was last modified.')
etsysCosTxqDropProfilesTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15), )
if mibBuilder.loadTexts: etsysCosTxqDropProfilesTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesTable.setDescription('A table containing the queue profile configurations.')
etsysCosTxqDropProfilesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropSettingIndex"))
if mibBuilder.loadTexts: etsysCosTxqDropProfilesEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesEntry.setDescription('The minimum and maximum queue depth, maximum drop probability and queue depth at max drop probability for the queue specified. These entries represent the currently configured settings for this agent. Entries indexed with (0) are default system entries. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosTxqDropSettingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysCosTxqDropSettingIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropSettingIndex.setDescription('A unique identifier for this queue setting. Identifiers with an index of 0 MUST be read-only and depict the system default settings.')
etsysCosTxqDropProfilesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesRowStatus.setDescription('This object allows for the dynamic creation and deletion of entries within the etsysCosTxqDropProfilesTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosTxqDropProfilesMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMin.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMin.setDescription('The minimum percentage of the queue depth, above which frames will dropped at the drop probability rate.')
etsysCosTxqDropProfilesMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMax.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMax.setDescription("The maximum percentage of the queue depth, above which all frames will be dropped. This object's value MUST be greater than or equal to the etsysCosTxqDropProfilesMin.")
etsysCosTxqDropProfilesMaxDropProb = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMaxDropProb.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesMaxDropProb.setDescription('The drop probability associated with this setting by percentage. This number represents the percentage of traffic that will be dropped once the minimum rate has been exceeded.')
etsysCosTxqDropProfilesQueueDepthAtMaxProb = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosTxqDropProfilesQueueDepthAtMaxProb.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfilesQueueDepthAtMaxProb.setDescription('The drop probability percentage slope which defines how aggressively packets are discarded as the queue fills.')
etsysCosTxqDropPrecedenceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 16), )
if mibBuilder.loadTexts: etsysCosTxqDropPrecedenceTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropPrecedenceTable.setDescription('A table containing the drop precedence configurations.')
etsysCosTxqDropPrecedenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 16, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqResourceQueueNum"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTableDropPrecedence"))
if mibBuilder.loadTexts: etsysCosTxqDropPrecedenceEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropPrecedenceEntry.setDescription('The drop precedence definitions for the queue specified.')
etsysCosTableDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysCosTableDropPrecedence.setStatus('current')
if mibBuilder.loadTexts: etsysCosTableDropPrecedence.setDescription('The corresponding etsysCosDropPrecedence from the etsysCosTable this entry refers to.')
etsysCosTxqDropProfileQueueCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 4, 16, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosTxqDropProfileQueueCfgID.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqDropProfileQueueCfgID.setDescription('The etsysCosTxqDropProfilesEntry that describes the configuration for this entry. If this value references a non-existent row in the etsysCosTxqDropPrecedenceTable the device will behave as if the row existed and was populated with default parameters.')
etsysCosIrlPortTypeMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeMaxEntries.setDescription('The actual number of distinctly unique (as defined by the set of shared inbound RateLimiting capabilities) port types available for configuration on this agent.')
etsysCosIrlPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2), )
if mibBuilder.loadTexts: etsysCosIrlPortTypeTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeTable.setDescription('A table defining the distinctly unique IRL characteristics of a group of ports.')
etsysCosIrlPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosIrlPortTypeEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlPortTypeTable.')
etsysCosIrlPortTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosIrlPortTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeIndex.setDescription('The port type associated with the unique set of ports sharing these capabilities.')
etsysCosIrlPortTypeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeDescr.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeDescr.setDescription('The textual description that represents this set of dot1dBridge ports.')
etsysCosIrlPortTypeEligiblePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeEligiblePorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeEligiblePorts.setDescription('The list of dot1dBridge ports belonging (having the same capabilities) to this port type.')
etsysCosIrlPortTypeUnselectedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeUnselectedPorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeUnselectedPorts.setDescription('The list of dot1dBridge ports not yet bound to a user created row (port group) in the etsysCosIrlPortGroupTable.')
etsysCosIrlPortTypeNumberOfIRLs = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeNumberOfIRLs.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeNumberOfIRLs.setDescription('The maximum number of inbound rate limiters supported by this agent on this type of port.')
etsysCosIrlPortTypeSupportedRateTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 6), EtsysCosRateTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeSupportedRateTypes.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeSupportedRateTypes.setDescription('The rate types available on this type of port.')
etsysCosIrlPortTypeCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 2, 1, 7), EtsysCosRlCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortTypeCapabilities.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortTypeCapabilities.setDescription('The EtsysCosRlCapabilities available on this type of port.')
etsysCosIrlUnitTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3), )
if mibBuilder.loadTexts: etsysCosIrlUnitTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitTable.setDescription('A table containing the rate type, minimum and maximum limits of the port groups and their respective granularity.')
etsysCosIrlUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlUnitTypeIndex"))
if mibBuilder.loadTexts: etsysCosIrlUnitEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlUnitTable. Entries in this table indicate the port group boundaries for the type of port specified.')
etsysCosIrlUnitTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3, 1, 1), EtsysCosRateTypes())
if mibBuilder.loadTexts: etsysCosIrlUnitTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitTypeIndex.setDescription('The unit identifier for this port type. The metric at which the etsysCosIrlUnitMinRate, etsysCosIrlUnitMaxRate and etsysCosIrlUnitGranularity are applied.')
etsysCosIrlUnitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlUnitMaxRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitMaxRate.setDescription('The maximum rate supported at the rate of units specified by etsysCosIrlUnitType.')
etsysCosIrlUnitMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlUnitMinRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitMinRate.setDescription('The minimum rate supported at the rate of units specified by etsysCosIrlUnitType.')
etsysCosIrlUnitGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlUnitGranularity.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlUnitGranularity.setDescription('The smallest unit by which a rate can be modified.')
etsysCosIrlPortGroupMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortGroupMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupMaxEntries.setDescription('The maximum number of port groups supported by this agent.')
etsysCosIrlPortGroupNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortGroupNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupNumEntries.setDescription('The number of assigned dot1dBridge port groups present in this agent. This number also reflects the port groups with a default system setup indicated by a zero(0) index.')
etsysCosIrlPortGroupLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlPortGroupLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupLastChange.setDescription('The time at which the etsysCosIrlPortTypeTable was last modified.')
etsysCosIrlPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7), )
if mibBuilder.loadTexts: etsysCosIrlPortGroupTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupTable.setDescription('A table containing the settings for specific types of dot1dBridge ports and their matching inbound rate limiting configurations.')
etsysCosIrlPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosIrlPortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlPortTypeTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosIrlPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32767), )))
if mibBuilder.loadTexts: etsysCosIrlPortGroupIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupIndex.setDescription('The user-specified port group for which the settings are defined. This value MAY have meaning to the user for the purposes of identifying groups of dot1dBridge ports with similar function (uplink, user, etc). A value of zero(0) has special meaning in that it identifies the default port grouping of characteristics present in the agent. Entries indexed by a zero have a max-access of read-only. This value will have a system defined maximum of etsysCosIrlPortGroupMaxEntries.')
etsysCosIrlPortGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosIrlPortGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupRowStatus.setDescription("This object allows for the dynamic creation and deletion of entries within the etsysCosIrlPortGroupTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets. When this object's value is active(1) the specified dot1dBridge ports listed in the PortGroupList shall be removed from UnselectedPorts. A row in transition to the active(1) state will have its port group list validated before activation. A port list that cannot be made active MUST result in the row state to become notReady(3) and no configuration action will be taken for this row. Rows not in the active(1) state SHALL NOT be persisted across entity resets and MUST return the ports from its port group list to the etsysCosIrlPortTypeUnselectedPorts. When this object's value is set to destroy(6) from an active(1) state, all dot1dBridge ports contained in etsysCosIrlPortGroupList shall be returned to the etsysCosIrlPortTypeUnselectedPorts and all entries referencing this row shall be removed as well.")
etsysCosIrlPortGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7, 1, 3), PortList().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlPortGroupList.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupList.setDescription('The list of dot1dBridge ports to be assigned to this group. Ports in this list MUST : o Be mutually exclusive from other entries in this table o Be comprised of the same port type as defined by the etsysCosIrlPortTypeIndex.')
etsysCosIrlPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 7, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlPortGroupName.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortGroupName.setDescription('The administratively assigned textual description of this port group.')
etsysCosIrlPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 8), )
if mibBuilder.loadTexts: etsysCosIrlPortCfgTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortCfgTable.setDescription('A table containing the inbound rate limiting configurations to be used in the entries specified. Rows in this table are populated based on rowCreation in the etsysCosIrlPortGroupTable. Changes to this table are reflected in the etsysCosTxqPortGroupLastChange value.')
etsysCosIrlPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 8, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosIrlPortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortCfgEntry.setDescription("Conceptually defines a particular entry within the etsysCosIrlPortCfgTable. Details contained within this entry will depict the inbound rate limiter's reception rate and parent rate limiter. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.")
etsysCosIrlPortCfgFloodLimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlPortCfgFloodLimiter.setStatus('deprecated')
if mibBuilder.loadTexts: etsysCosIrlPortCfgFloodLimiter.setDescription('This object will represent the etsysCosIrlResourceNum to be used to limit flooded traffic.')
etsysCosIrlResourceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9), )
if mibBuilder.loadTexts: etsysCosIrlResourceTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceTable.setDescription('A table containing the inbound rate limiting configurations to be used in the entries specified.')
etsysCosIrlResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceIrlNum"))
if mibBuilder.loadTexts: etsysCosIrlResourceEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlResourceTable. These entries contain the specific attributes of policing rates (traffic clipping) and parent rate limiter. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosIrlResourceIrlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysCosIrlResourceIrlNum.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceIrlNum.setDescription('The inbound rate limiter number associated with this entry.')
etsysCosIrlResourceUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 2), EtsysCosRateTypes().clone(namedValues=NamedValues(("pps", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceUnits.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceUnits.setDescription('Identifies the unit size for the etsysCosIrlPortRate. Values MUST NOT exceed the capacity of the etsysCosIrlPortType they are associated with.')
etsysCosIrlResourceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceRate.setDescription('Identifies the number of units above which packets will considered in violation. This object is read-only for limiters of type count(5). The value (0) shall carry special meaning in this case of unset. Rate limiters identified as having a value of (0) shall not have this settings applied to the limiter.')
etsysCosIrlResourceParentIrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 4), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceParentIrl.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceParentIrl.setDescription('Setting this object to a positive value indicates the etsysCosIrlResourceIrlNum to be used in conjunction with this setting. A value of (-1) indicates the parent Irl is not configured.')
etsysCosIrlResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 5), EtsysRateLimitingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceType.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceType.setDescription("The characteristics applied to this rate limiter. When chaining limiters is used, the AND / OR attribute denotes the limiter logic in handling violation. For example, option rePrioritizeAnd(2) requires that the current limiter AND it's parent be violated for the packet to be reprioritized. The rePrioritizeOr(3) option only needs one OR the other to be violated for the action to be taken.")
etsysCosIrlResourceActionCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 6), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceActionCosIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceActionCosIndex.setDescription('This object will represent the CoS to be applied to packets in violation of the limits set when the etsysCosIrlResourceType is set to one of the rePrioritize types.')
etsysCosIrlResourceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 7), EtsysViolationAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceAction.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceAction.setDescription('This object allows syslog, SNMP traps, or disabling actions to be taken limiters are first exceeded.')
etsysCosIrlResourceViolationPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 8), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceViolationPortList.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceViolationPortList.setDescription('The dot1dBridge ports this limiter has been violated on. Writing this object will clear the dot1dBridge ports given which have a corresponding bit of zero (0) in the PortList.')
etsysCosIrlResourceClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 9, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceClearCounters.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceClearCounters.setDescription('This object shall always read false(2). When set to true(1) this object clears the counter associated with this entry, if the associated entry is a limiter of type count(5).')
etsysCosIrlReferenceMappingMaxReference = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingMaxReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingMaxReference.setDescription('The maximum number of etsysCosIrlReferences allowed in the etsysCosIrlMappingTable.')
etsysCosIrlReferenceMappingLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingLastChange.setDescription('The time at which the etsysCosIrlReferenceMappingTable was last modified.')
etsysCosIrlReferenceMappingTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 12), )
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingTable.setDescription('A table containing the user defined mappings of the inbound-rate-limiter-refences found in the etsysCosTable to actual inbound-rate-limiters associated with the specified port-group.')
etsysCosIrlReferenceMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 12, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlReference"))
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlReferenceMappingEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlReferenceMappingTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosIrlResourceIrlNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 32767), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResourceIrlNumber.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResourceIrlNumber.setDescription('The inbound rate limiter bond to this reference.')
etsysCosIrlViolationClearTable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlViolationClearTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlViolationClearTable.setDescription('This object SHALL always read false. Setting this object to true removes all existing entries from the etsysCosIrlViolationTable.')
etsysCosIrlViolationLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlViolationLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlViolationLastChange.setDescription('The time at which the etsysCosIrlViolationTable was last modified.')
etsysCosIrlDisabledPortsList = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 15), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlDisabledPortsList.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlDisabledPortsList.setDescription('The list of dot1dBridge ports disabled as a result of limiting violation. A set to this list will clear the violation status of any port which has a corresponding clear bit in the list.')
etsysCosIrlViolationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16), )
if mibBuilder.loadTexts: etsysCosIrlViolationTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlViolationTable.setDescription('A table containing the list of entries of all dot1dBridge ports that have detected violations of the limiters current settings.')
etsysCosIrlViolationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceIrlNumber"))
if mibBuilder.loadTexts: etsysCosIrlViolationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlViolationEntry.setDescription('Conceptually defines a particular entry within the etsysCosIrlViolationTable.')
etsysCosIrlPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosIrlPortIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlPortIndex.setDescription('The dot1dBridge port on which this violation occurred.')
etsysCosIrlViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlViolation.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlViolation.setDescription('This object represents the violation status for this limiter. If this object reads true(1) the action associated with this Irl have been taken.')
etsysCosIrlCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosIrlCounter.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlCounter.setDescription('In order for this object to have meaningful information the assigned limiter must be set up as a counter type limiter. This value shall then represent the number of configured units the limiter has recorded. If the associated limiter is of type pps(1) then the object represents the packets counted, otherwise it represents the octets counted.')
etsysCosIrlResetFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 5, 16, 1, 4), EtsysRateLimitResetBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosIrlResetFlags.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlResetFlags.setDescription('This value shall always read as 0. This object clears the statistics gathering portion of this entry. If bit 0 is set, the etsysCosIrlViolation TruthValue will be reset to false. If bit 1 is set, the etsysCosIrlUnitCounter will be reset to zero. Both bits set shall clear both properties.')
etsysCosOrlPortTypeMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeMaxEntries.setDescription('The actual number of distinctly unique (as defined by the set of shared outbound RateLimiting capabilities) port types available for configuration on this agent.')
etsysCosOrlPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2), )
if mibBuilder.loadTexts: etsysCosOrlPortTypeTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeTable.setDescription('A table defining the distinctly unique IRL characteristics of a group of ports.')
etsysCosOrlPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosOrlPortTypeEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlPortTypeTable.')
etsysCosOrlPortTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosOrlPortTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeIndex.setDescription('The port type associated with the unique set of ports sharing these capabilities.')
etsysCosOrlPortTypeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeDescr.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeDescr.setDescription('The textual description that represents this set of dot1dBridge ports.')
etsysCosOrlPortTypeEligiblePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeEligiblePorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeEligiblePorts.setDescription('The list of dot1dBridge ports belonging (having the same capabilities) to this port type.')
etsysCosOrlPortTypeUnselectedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeUnselectedPorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeUnselectedPorts.setDescription('The list of dot1dBridge ports not yet bound to a user created row (port group) in the etsysCosOrlPortGroupTable.')
etsysCosOrlPortTypeNumberOfORLs = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeNumberOfORLs.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeNumberOfORLs.setDescription('The maximum number of outbound rate limiters supported by this agent on this type of port.')
etsysCosOrlPortTypeSupportedRateTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 6), EtsysCosRateTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeSupportedRateTypes.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeSupportedRateTypes.setDescription('The rate types available on this type of port.')
etsysCosOrlPortTypeCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 2, 1, 7), EtsysCosRlCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortTypeCapabilities.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortTypeCapabilities.setDescription('The EtsysCosRlCapabilities available on this type of port.')
etsysCosOrlUnitTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3), )
if mibBuilder.loadTexts: etsysCosOrlUnitTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitTable.setDescription('A table containing the rate type, minimum and maximum limits of the port groups and their respective granularity.')
etsysCosOrlUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlUnitTypeIndex"))
if mibBuilder.loadTexts: etsysCosOrlUnitEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlUnitTable. Entries in this table indicate the port group boundaries for the type of port specified.')
etsysCosOrlUnitTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3, 1, 1), EtsysCosRateTypes())
if mibBuilder.loadTexts: etsysCosOrlUnitTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitTypeIndex.setDescription('The unit identifier for this port type. The metric at which the etsysCosOrlUnitMinRate, etsysCosOrlUnitMaxRate and etsysCosOrlUnitGranularity are applied.')
etsysCosOrlUnitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlUnitMaxRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitMaxRate.setDescription('The maximum rate supported at the rate of units specified by etsysCosOrlUnitType.')
etsysCosOrlUnitMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlUnitMinRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitMinRate.setDescription('The minimum rate supported at the rate of units specified by etsysCosOrlUnitType.')
etsysCosOrlUnitGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlUnitGranularity.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlUnitGranularity.setDescription('The smallest unit by which a rate can be modified.')
etsysCosOrlPortGroupMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortGroupMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupMaxEntries.setDescription('The maximum number of port groups supported by this agent.')
etsysCosOrlPortGroupNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortGroupNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupNumEntries.setDescription('The number of assigned dot1dBridge port groups present in this agent. This number also reflects the port groups with a default system setup indicated by a zero(0) index.')
etsysCosOrlPortGroupLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlPortGroupLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupLastChange.setDescription('The time at which the etsysCosOrlPortTypeTable was last modified.')
etsysCosOrlPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7), )
if mibBuilder.loadTexts: etsysCosOrlPortGroupTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupTable.setDescription('A table containing the settings for specific types of dot1dBridge ports and their matching outbound rate limiting configurations.')
etsysCosOrlPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosOrlPortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlPortTypeTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosOrlPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32767), )))
if mibBuilder.loadTexts: etsysCosOrlPortGroupIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupIndex.setDescription('The user-specified port group for which the settings are defined. This value MAY have meaning to the user for the purposes of identifying groups of dot1dBridge ports with similar function (uplink, user, etc). A value of zero(0) has special meaning in that it identifies the default port grouping of characteristics present in the agent. Entries indexed by a zero have a max-access of read-only. This value will have a system defined maximum of etsysCosOrlPortGroupMaxEntries.')
etsysCosOrlPortGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosOrlPortGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupRowStatus.setDescription("This object allows for the dynamic creation and deletion of entries within the etsysCosOrlPortGroupTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets. When this object's value is active(1) the specified dot1dBridge ports listed in the PortGroupList shall be removed from UnselectedPorts. A row in transition to the active(1) state will have its port group list validated before activation. A port list that cannot be made active MUST result in the row state to become notReady(3) and no configuration action will be taken for this row. Rows not in the active(1) state SHALL NOT be persisted across entity resets and MUST return the ports from its port group list to the etsysCosOrlPortTypeUnselectedPorts. When this object's value is set to destroy(6) from an active(1) state, all dot1dBridge ports contained in etsysCosOrlPortGroupList shall be returned to the etsysCosOrlPortTypeUnselectedPorts and all entries referencing this row shall be removed as well.")
etsysCosOrlPortGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7, 1, 3), PortList().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlPortGroupList.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupList.setDescription('The list of dot1dBridge ports to be assigned to this group. Ports in this list MUST : o Be mutually exclusive from other entries in this table o Be comprised of the same port type as defined by the etsysCosOrlPortTypeIndex.')
etsysCosOrlPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 7, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlPortGroupName.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortGroupName.setDescription('The administratively assigned textual description of this port group.')
etsysCosOrlPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 8), )
if mibBuilder.loadTexts: etsysCosOrlPortCfgTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortCfgTable.setDescription('A table containing the outbound rate limiting configurations to be used in the entries specified. Rows in this table are populated based on rowCreation in the etsysCosOrlPortGroupTable. Changes to this table are reflected in the etsysCosTxqPortGroupLastChange value.')
etsysCosOrlPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 8, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosOrlPortCfgEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortCfgEntry.setDescription("Conceptually defines a particular entry within the etsysCosOrlPortCfgTable. Details contained within this entry will depict the outbound rate limiter's reception rate and parent rate limiter. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.")
etsysCosOrlPortCfgFloodLimiter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlPortCfgFloodLimiter.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortCfgFloodLimiter.setDescription('This object will represent the etsysCosOrlResourceNum to be used to limit flooded traffic.')
etsysCosOrlResourceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9), )
if mibBuilder.loadTexts: etsysCosOrlResourceTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceTable.setDescription('A table containing the outbound rate limiting configurations to be used in the entries specified.')
etsysCosOrlResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceOrlNum"))
if mibBuilder.loadTexts: etsysCosOrlResourceEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlResourceTable. These entries contain the specific attributes of policing rates (traffic clipping) and parent rate limiter. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosOrlResourceOrlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysCosOrlResourceOrlNum.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceOrlNum.setDescription('The outbound rate limiter number associated with this entry.')
etsysCosOrlResourceUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 2), EtsysCosRateTypes().clone(namedValues=NamedValues(("pps", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceUnits.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceUnits.setDescription('Identifies the unit size for the etsysCosOrlPortRate. Values MUST NOT exceed the capacity of the etsysCosOrlPortType they are associated with.')
etsysCosOrlResourceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceRate.setDescription('Identifies the number of units above which packets will considered in violation. This object is read-only for limiters of type count(5). The value (0) shall carry special meaning in this case of unset. Rate limiters identified as having a value of (0) shall not have this settings applied to the limiter.')
etsysCosOrlResourceParentOrl = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 4), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceParentOrl.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceParentOrl.setDescription('Setting this object to a positive value indicates the etsysCosOrlResourceOrlNum to be used in conjunction with this setting. A value of (-1) indicates the parent Orl is not configured.')
etsysCosOrlResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 5), EtsysRateLimitingType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceType.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceType.setDescription("The characteristics applied to this rate limiter. When chaining limiters is used, the AND / OR attribute denotes the limiter logic in handling violation. For example, option rePrioritizeAnd(2) requires that the current limiter AND it's parent be violated for the packet to be reprioritized. The rePrioritizeOr(3) option only needs one OR the other to be violated for the action to be taken.")
etsysCosOrlResourceActionCosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 6), Integer32().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceActionCosIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceActionCosIndex.setDescription('This object will represent the CoS to be applied to packets in violation of the limits set when the etsysCosOrlResourceType is set to one of the rePrioritize types.')
etsysCosOrlResourceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 7), EtsysViolationAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceAction.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceAction.setDescription('This object allows syslog, SNMP traps, or disabling actions to be taken limiters are first exceeded.')
etsysCosOrlResourceViolationPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 8), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceViolationPortList.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceViolationPortList.setDescription('The dot1dBridge ports this limiter has been violated on. Writing this object will clear the dot1dBridge ports given which have a corresponding bit of zero (0) in the PortList.')
etsysCosOrlResourceClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 9, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceClearCounters.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceClearCounters.setDescription('This object shall always read false(2). When set to true(1) this object clears the counter associated with this entry, if the associated entry is a limiter of type count(5).')
etsysCosOrlReferenceMappingMaxReference = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingMaxReference.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingMaxReference.setDescription('The maximum number of etsysCosOrlReferences allowed in the etsysCosOrlMappingTable.')
etsysCosOrlReferenceMappingLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingLastChange.setDescription('The time at which the etsysCosOrlReferenceMappingTable was last modified.')
etsysCosOrlReferenceMappingTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 12), )
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingTable.setDescription('A table containing the user defined mappings of the outbound-rate-limiter-refences found in the etsysCosTable to actual outbound-rate-limiters associated with the specified port-group.')
etsysCosOrlReferenceMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 12, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlReference"))
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlReferenceMappingEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlReferenceMappingTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosOrlResourceOrlNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 32767), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResourceOrlNumber.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResourceOrlNumber.setDescription('The outbound rate limiter bond to this reference.')
etsysCosOrlViolationClearTable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlViolationClearTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlViolationClearTable.setDescription('This object SHALL always read false. Setting this object to true removes all existing entries from the etsysCosOrlViolationTable.')
etsysCosOrlViolationLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlViolationLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlViolationLastChange.setDescription('The time at which the etsysCosOrlViolationTable was last modified.')
etsysCosOrlDisabledPortsList = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 15), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlDisabledPortsList.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlDisabledPortsList.setDescription('The list of dot1dBridge ports disabled as a result of limiting violation. A set to this list will clear the violation status of any port which has a corresponding clear bit in the list.')
etsysCosOrlViolationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16), )
if mibBuilder.loadTexts: etsysCosOrlViolationTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlViolationTable.setDescription('A table containing the list of entries of all dot1dBridge ports that have detected violations of the limiters current settings.')
etsysCosOrlViolationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceOrlNumber"))
if mibBuilder.loadTexts: etsysCosOrlViolationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlViolationEntry.setDescription('Conceptually defines a particular entry within the etsysCosOrlViolationTable.')
etsysCosOrlPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767)))
if mibBuilder.loadTexts: etsysCosOrlPortIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlPortIndex.setDescription('The dot1dBridge port on which this violation occurred.')
etsysCosOrlViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlViolation.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlViolation.setDescription('This object represents the violation status for this limiter. If this object reads true(1) the action associated with this Orl have been taken.')
etsysCosOrlCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosOrlCounter.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlCounter.setDescription('In order for this object to have meaningful information the assigned limiter must be set up as a counter type limiter. This value shall then represent the number of configured units the limiter has recorded. If the associated limiter is of type pps(0) then the object represents the packets counted, otherwise it represents the octets counted.')
etsysCosOrlResetFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 6, 16, 1, 4), EtsysRateLimitResetBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosOrlResetFlags.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlResetFlags.setDescription('This value shall always read as 0. This object clears the statistics gathering portion of this entry. If bit 0 is set, the etsysCosOrlViolation TruthValue will be reset to false. If bit 1 is set, the etsysCosOrlUnitCounter will be reset to zero. Both bits set shall clear both properties.')
etsysCosFloodCtrlPortTypeMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeMaxEntries.setDescription('The actual number of distinctly unique (as defined by the set of shared flooded RateLimiting capabilities) port types available for configuration on this agent.')
etsysCosFloodCtrlPortTypeTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2), )
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeTable.setDescription('A table defining the distinctly unique Broadcast Rate Limiting characteristics of a group of ports.')
etsysCosFloodCtrlPortTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeEntry.setDescription('Conceptually defines a particular entry within the etsysCosFloodCtrlPortTypeTable.')
etsysCosFloodCtrlPortTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeIndex.setDescription('The port type associated with the unique set of ports sharing these capabilities.')
etsysCosFloodCtrlPortTypeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeDescr.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeDescr.setDescription('The textual description that represents this set of dot1dBridge ports.')
etsysCosFloodCtrlPortTypeEligiblePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeEligiblePorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeEligiblePorts.setDescription('The list of dot1dBridge ports belonging (having the same capabilities) to this port type.')
etsysCosFloodCtrlPortTypeUnselectedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 4), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeUnselectedPorts.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeUnselectedPorts.setDescription('The list of dot1dBridge ports not yet bound to a user created row (port group) in the etsysCosFloodCtrlPortGroupTable.')
etsysCosFloodCtrlPortTypeSupportedRateTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 5), EtsysCosRateTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeSupportedRateTypes.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeSupportedRateTypes.setDescription('The rate types available on this type of port.')
etsysCosFloodCtrlPortTypeCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 2, 1, 7), EtsysCosRlCapabilities()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeCapabilities.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortTypeCapabilities.setDescription('The EtsysCosRlCapabilities available on this type of port.')
etsysCosFloodCtrlUnitTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3), )
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitTable.setDescription('A table containing the rate type, minimum and maximum limits of the port groups and their respective granularity.')
etsysCosFloodCtrlUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlUnitTypeIndex"))
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitEntry.setDescription('Conceptually defines a particular entry within the etsysCosFloodCtrlUnitTable. Entries in this table indicate the port group boundaries for the type of port specified.')
etsysCosFloodCtrlUnitTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3, 1, 1), EtsysCosRateTypes())
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitTypeIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitTypeIndex.setDescription('The unit identifier for this port type. The metric at which the etsysCosFloodCtrlUnitMinRate, etsysCosFloodCtrlUnitMaxRate and etsysCosFloodCtrlUnitGranularity are applied.')
etsysCosFloodCtrlUnitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitMaxRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitMaxRate.setDescription('The maximum rate supported at the rate of units specified by etsysCosFloodCtrlUnitTypeIndex.')
etsysCosFloodCtrlUnitMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitMinRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitMinRate.setDescription('The minimum rate supported at the rate of units specified by etsysCosFloodCtrlUnitTypeIndex.')
etsysCosFloodCtrlUnitGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitGranularity.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlUnitGranularity.setDescription('The smallest unit by which a rate can be modified.')
etsysCosFloodCtrlPortGroupMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupMaxEntries.setDescription('The maximum number of port groups supported by this agent.')
etsysCosFloodCtrlPortGroupNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupNumEntries.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupNumEntries.setDescription('The number of assigned dot1dBridge port groups present in this agent. This number also reflects the port groups with a default system setup indicated by a zero(0) index.')
etsysCosFloodCtrlPortGroupLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupLastChange.setDescription('The time at which the etsysCosFloodCtrlPortTypeTable was last modified.')
etsysCosFloodCtrlPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7), )
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupTable.setDescription('A table containing the settings for specific types of dot1dBridge ports and their matching flooded rate limiting configurations.')
etsysCosFloodCtrlPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortTypeIndex"))
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupEntry.setDescription('Conceptually defines a particular entry within the etsysCosFloodCtrlPortTypeTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosFloodCtrlPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32767), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupIndex.setDescription('The user-specified port group for which the settings are defined. This value MAY have meaning to the user for the purposes of identifying groups of dot1dBridge ports with similar function (uplink, user, etc). A value of zero(0) has special meaning in that it identifies the default port grouping of characteristics present in the agent. Entries indexed by a zero have a max-access of read-only. This value will have a system defined maximum of etsysCosFloodCtrlPortGroupMaxEntries.')
etsysCosFloodCtrlPortGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupRowStatus.setDescription("This object allows for the dynamic creation and deletion of entries within the etsysCosFloodCtrlPortGroupTable. Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets. When this object's value is active(1) the specified dot1dBridge ports listed in the PortGroupList shall be removed from UnselectedPorts. A row in transition to the active(1) state will have its port group list validated before activation. A port list that cannot be made active MUST result in the row state to become notReady(3) and no configuration action will be taken for this row. Rows not in the active(1) state SHALL NOT be persisted across entity resets and MUST return the ports from its port group list to the etsysCosFloodCtrlPortTypeUnselectedPorts. When this object's value is set to destroy(6) from an active(1) state, all dot1dBridge ports contained in etsysCosFloodCtrlPortGroupList shall be returned to the etsysCosFloodCtrlPortTypeUnselectedPorts and all entries referencing this row shall be removed as well.")
etsysCosFloodCtrlPortGroupList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7, 1, 3), PortList().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupList.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupList.setDescription('The list of dot1dBridge ports to be assigned to this group. Ports in this list MUST : o Be mutually exclusive from other entries in this table o Be comprised of the same port type as defined by the etsysCosFloodCtrlPortTypeIndex.')
etsysCosFloodCtrlPortGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 7, 1, 4), SnmpAdminString().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupName.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlPortGroupName.setDescription('The administratively assigned textual description of this port group.')
etsysCosFloodCtrlSyslogActionMsgFormat = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notification", 1), ("notificationWithPktHdr", 2))).clone('notification')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlSyslogActionMsgFormat.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlSyslogActionMsgFormat.setDescription('This object controls the format of syslog messages sent in response to a flood rate limit being violated. A value of notification(1) causes the syslog message to provide the index of the violated limiter and the port(s) that the violation occurred on. A value of notificationWithPktHdr(2) causes the syslog message to provide the first 64 bytes of the violating packet in addition to the information provided by notification(1).')
etsysCosFloodCtrlResourceTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9), )
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceTable.setDescription('A table containing the inbound rate limiting configurations to be used in the entries specified.')
etsysCosFloodCtrlResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1), ).setIndexNames((0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortGroupIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlPortTypeIndex"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlFloodType"))
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceEntry.setDescription('Conceptually defines a particular entry within the etsysCosFloodCtrlResourceTable. These entries contain the specific attributes of flood policing rates (traffic clipping). Entries within this table MUST be considered non-volatile and MUST be maintained across entity resets.')
etsysCosFloodCtrlFloodType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unicastUnknown", 1), ("multicast", 2), ("broadcast", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: etsysCosFloodCtrlFloodType.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlFloodType.setDescription('The type of received traffic that rate limited based on this row entries configured limits.')
etsysCosFloodCtrlResourceUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 2), EtsysCosRateTypes().clone(namedValues=NamedValues(("pps", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceUnits.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceUnits.setDescription('Identifies the unit size for the etsysCosFloodCtrlPortRate. Values MUST NOT exceed the capacity of the etsysCosFloodCtrlPortType they are associated with.')
etsysCosFloodCtrlResourceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 2147483647), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceRate.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceRate.setDescription('Identifies the number of units above which packets will considered in violation. The value (0) shall carry special meaning in this case of unset. Rate limiters identified as having a value of (0) shall not have this settings applied to the limiter.')
etsysCosFloodCtrlResourceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 4), Bits().clone(namedValues=NamedValues(("drop", 0), ("syslog", 1), ("trap", 2), ("disable", 3))).clone(namedValues=NamedValues(("drop", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceAction.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceAction.setDescription('This object allows packet dropping, syslog, SNMP traps, or disabling actions to be taken limiters are first exceeded. It is permissible for no actions to be specified, which effectively disables the limiter.')
etsysCosFloodCtrlResourceViolationPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceViolationPortList.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceViolationPortList.setDescription('The dot1dBridge ports this limiter has been violated on. Writing this object will clear the dot1dBridge ports given which have a corresponding bit of zero (0) in the PortList.')
etsysCosFloodCtrlResourceClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 9, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceClearCounters.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResourceClearCounters.setDescription('This object shall always read false(2). When set to true(1) this object clears the counter associated with this entry.')
etsysCosFloodCtrlViolationClearTable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationClearTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationClearTable.setDescription('This object SHALL always read false. Setting this object to true removes all existing entries from the etsysCosFloodCtrlViolationTable.')
etsysCosFloodCtrlViolationLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationLastChange.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationLastChange.setDescription('The time at which the etsysCosFloodCtrlViolationTable was last modified.')
etsysCosFloodCtrlDisabledPortsList = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 12), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlDisabledPortsList.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlDisabledPortsList.setDescription('The list of dot1dBridge ports disabled as a result of limiting violation. A set to this list will clear the violation status of any port which has a corresponding clear bit in the list.')
etsysCosFloodCtrlViolationTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 13), )
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationTable.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationTable.setDescription('A table containing the list of entries of all dot1dBridge ports that have detected violations of the limiters current settings.')
etsysCosFloodCtrlViolationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 13, 1), ).setIndexNames((0, "BRIDGE-MIB", "dot1dBasePort"), (0, "ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlFloodType"))
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlViolationEntry.setDescription('Conceptually defines a particular entry within the etsysCosFloodCtrlViolationTable.')
etsysCosFloodCtrlViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 13, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlViolation.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlViolation.setDescription('This object represents the violation status for this limiter. If this object reads true(1) the action associated with this FloodCtrl have been taken.')
etsysCosFloodCtrlCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 13, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCosFloodCtrlCounter.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlCounter.setDescription('The number of configured units the limiter has recorded. If the associated limiter is of type pps(1) then the object represents the packets counted, otherwise it represents the octets counted.')
etsysCosFloodCtrlResetFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 7, 13, 1, 3), EtsysRateLimitResetBits()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCosFloodCtrlResetFlags.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodCtrlResetFlags.setDescription('This value shall always read as BITS contstruct with no bit set. This object clears the statistics gathering portion of this entry. If bit 0 is set, the etsysCosFloodCtrlViolation TruthValue will be reset to false(2). If bit 1 is set, the etsysCosFloodCtrlUnitCounter will be reset to zero. Setting both bits simultaneously shall clear both properties.')
etsysCosIrlExceededNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 0, 1)).setObjects(("IF-MIB", "ifName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlViolation"))
if mibBuilder.loadTexts: etsysCosIrlExceededNotification.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlExceededNotification.setDescription('This notification indicates an inbound limiter has been exceeded.')
etsysCosOrlExceededNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 0, 2)).setObjects(("IF-MIB", "ifName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlViolation"))
if mibBuilder.loadTexts: etsysCosOrlExceededNotification.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlExceededNotification.setDescription('This notification indicates an outbound limiter has been exceeded.')
etsysCosFloodLimitExceededNotification = NotificationType((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 1, 0, 3)).setObjects(("IF-MIB", "ifName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosFloodCtrlViolation"))
if mibBuilder.loadTexts: etsysCosFloodLimitExceededNotification.setStatus('current')
if mibBuilder.loadTexts: etsysCosFloodLimitExceededNotification.setDescription('This notification indicates an inbound flood limiter has been exceeded.')
etsysCosConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2))
etsysCosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1))
etsysCosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 2))
etsysCosMasterResetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 1)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosMibObjectAnullingBehavior"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosMasterResetGroup = etsysCosMasterResetGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosMasterResetGroup.setDescription('A collection of objects providing a mechanism of resetting all objects back to an unconfigured state.')
etsysCosCapabilitiesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 2)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosCapabilitiesGroup = etsysCosCapabilitiesGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosCapabilitiesGroup.setDescription('A collection of objects providing the capability extent for the agent supporting this MIB.')
etsysCosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 3)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosNumEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosEnableState"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosRowStatus"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCos8021dPriority"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTosValue"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosDropPrecedence"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosGroup = etsysCosGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosGroup.setDescription('A collection of objects providing the support capacity and capability extent for the agent supporting this MIB. The object etsysCosDropPrecedence is part of a required group however its access may be restricted to read-only for agents without the ability to support this feature and still wish to implement this MIB.')
etsysCosTxqGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 4)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqNumPortTypes"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeDescr"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeEligiblePorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeUnselectedPorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeNumberOfQueues"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeSupportedRateTypes"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeNumberOfSlices"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeQueueAlgorithms"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeQueueArbiterModes"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeMaxDropPrecedence"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortTypeLLQEligibleQueues"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqUnitMaxRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqUnitMinRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqUnitGranularity"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqMaxPortGroups"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqNumPortGroups"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupRowStatus"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortGroupName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortArbMode"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortSliceSetting"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortQUnit"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortQRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortQAlgorithm"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqPortQLLQenable"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqReferenceMappingMaxReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqResourceQueueNumber"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesNumEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesRowStatus"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesMin"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesMax"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesMaxDropProb"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfilesQueueDepthAtMaxProb"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqDropProfileQueueCfgID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosTxqGroup = etsysCosTxqGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosTxqGroup.setDescription('A collection of objects required for creating and modifying settings for transmit queue configurations.')
etsysCosIrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 5)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeDescr"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeEligiblePorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeUnselectedPorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeNumberOfIRLs"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeCapabilities"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortTypeSupportedRateTypes"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlUnitMaxRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlUnitMinRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlUnitGranularity"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupNumEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupRowStatus"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortGroupName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlPortCfgFloodLimiter"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceIrlNumber"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceUnits"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceParentIrl"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceActionCosIndex"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceType"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceAction"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceViolationPortList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResourceClearCounters"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlReferenceMappingMaxReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlReferenceMappingLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlViolationLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlDisabledPortsList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlViolation"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlViolationClearTable"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlCounter"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlResetFlags"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosIrlGroup = etsysCosIrlGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosIrlGroup.setDescription('A collection of objects required for creating and modifying settings for inbound rate limiter configurations.')
etsysCosOrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 6)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeDescr"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeEligiblePorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeUnselectedPorts"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeNumberOfORLs"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeCapabilities"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortTypeSupportedRateTypes"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlUnitMaxRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlUnitMinRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlUnitGranularity"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupMaxEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupNumEntries"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupRowStatus"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortGroupName"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlPortCfgFloodLimiter"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceOrlNumber"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceUnits"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceRate"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceParentOrl"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceActionCosIndex"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceType"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceAction"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceViolationPortList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResourceClearCounters"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlReferenceMappingMaxReference"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlReferenceMappingLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlViolationLastChange"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlDisabledPortsList"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlViolation"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlViolationClearTable"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlCounter"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlResetFlags"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosOrlGroup = etsysCosOrlGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosOrlGroup.setDescription('A collection of objects required for creating and modifying settings for outbound rate limiter configurations.')
etsysCosNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 1, 7)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlExceededNotification"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlExceededNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosNotificationGroup = etsysCosNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: etsysCosNotificationGroup.setDescription('A collection of objects required for reporting rate limiter violations.')
etsysCosCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 55, 2, 2, 1)).setObjects(("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosMasterResetGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosCapabilitiesGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosTxqGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosIrlGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosOrlGroup"), ("ENTERASYS-CLASS-OF-SERVICE-MIB", "etsysCosNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysCosCompliance = etsysCosCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysCosCompliance.setDescription('The compliance statement for devices that support Enterasys class of service.')
mibBuilder.exportSymbols("ENTERASYS-CLASS-OF-SERVICE-MIB", etsysCosOrlReferenceMappingTable=etsysCosOrlReferenceMappingTable, etsysCosNotificationGroup=etsysCosNotificationGroup, etsysCosMibObjectAnullingBehavior=etsysCosMibObjectAnullingBehavior, etsysCosOrlPortTypeIndex=etsysCosOrlPortTypeIndex, TxQueueList=TxQueueList, etsysCosTxqNumPortTypes=etsysCosTxqNumPortTypes, etsysCosOrlUnitMaxRate=etsysCosOrlUnitMaxRate, etsysCosOrlPortTypeSupportedRateTypes=etsysCosOrlPortTypeSupportedRateTypes, etsysCosIrlReferenceMappingLastChange=etsysCosIrlReferenceMappingLastChange, etsysCosIrlDisabledPortsList=etsysCosIrlDisabledPortsList, etsysCosOrlPortGroupMaxEntries=etsysCosOrlPortGroupMaxEntries, etsysCosOrlPortGroupRowStatus=etsysCosOrlPortGroupRowStatus, etsysCosFloodCtrlResourceUnits=etsysCosFloodCtrlResourceUnits, etsysCosIrlPortGroupRowStatus=etsysCosIrlPortGroupRowStatus, etsysCosIrlPortIndex=etsysCosIrlPortIndex, etsysCosIrlResetFlags=etsysCosIrlResetFlags, etsysCosTxqResourceQueueNumber=etsysCosTxqResourceQueueNumber, etsysCosOrlReferenceMappingEntry=etsysCosOrlReferenceMappingEntry, etsysCosFloodCtrlPortTypeUnselectedPorts=etsysCosFloodCtrlPortTypeUnselectedPorts, etsysCosOrlResourceUnits=etsysCosOrlResourceUnits, etsysCosTxqPortGroupTable=etsysCosTxqPortGroupTable, etsysCosTxqDropPrecedenceTable=etsysCosTxqDropPrecedenceTable, etsysCosFloodCtrlUnitEntry=etsysCosFloodCtrlUnitEntry, etsysCosFloodCtrlResourceViolationPortList=etsysCosFloodCtrlResourceViolationPortList, etsysCosConformance=etsysCosConformance, etsysCosIrlPortTypeNumberOfIRLs=etsysCosIrlPortTypeNumberOfIRLs, etsysCosOrlResetFlags=etsysCosOrlResetFlags, etsysCosIrlPortTypeUnselectedPorts=etsysCosIrlPortTypeUnselectedPorts, etsysCosEntry=etsysCosEntry, etsysCosOrlPortGroupIndex=etsysCosOrlPortGroupIndex, etsysCosIrlPortTypeDescr=etsysCosIrlPortTypeDescr, etsysCosTxqResourceEntry=etsysCosTxqResourceEntry, etsysCosTxqDropProfilesTable=etsysCosTxqDropProfilesTable, etsysCosOrlPortTypeEligiblePorts=etsysCosOrlPortTypeEligiblePorts, etsysCosIrlPortGroupTable=etsysCosIrlPortGroupTable, etsysCosIrlUnitTable=etsysCosIrlUnitTable, TxqArbiterModes=TxqArbiterModes, etsysCosMaxEntries=etsysCosMaxEntries, etsysCosOrlUnitMinRate=etsysCosOrlUnitMinRate, etsysCos8021dPriority=etsysCos8021dPriority, etsysCosIrlReference=etsysCosIrlReference, etsysCosRowStatus=etsysCosRowStatus, etsysCosOrlResourceClearCounters=etsysCosOrlResourceClearCounters, etsysCosTxqDropProfilesMin=etsysCosTxqDropProfilesMin, etsysCosTxqPortTypeQueueAlgorithms=etsysCosTxqPortTypeQueueAlgorithms, etsysCosIrlViolation=etsysCosIrlViolation, etsysCosCapabilities=etsysCosCapabilities, etsysCosFloodCtrlSyslogActionMsgFormat=etsysCosFloodCtrlSyslogActionMsgFormat, etsysCosTosValue=etsysCosTosValue, etsysCosFloodCtrlResourceEntry=etsysCosFloodCtrlResourceEntry, etsysCosIrlPortGroupIndex=etsysCosIrlPortGroupIndex, etsysCosFloodCtrlPortGroupTable=etsysCosFloodCtrlPortGroupTable, etsysCosFloodCtrlPortGroupIndex=etsysCosFloodCtrlPortGroupIndex, etsysCosObjects=etsysCosObjects, etsysCosTxqPortTypeQueueArbiterModes=etsysCosTxqPortTypeQueueArbiterModes, etsysCosOrlViolation=etsysCosOrlViolation, etsysCosTxqDropProfilesEntry=etsysCosTxqDropProfilesEntry, etsysCosOrlPortTypeDescr=etsysCosOrlPortTypeDescr, etsysCosFloodControl=etsysCosFloodControl, etsysCosTxqDropProfilesMaxDropProb=etsysCosTxqDropProfilesMaxDropProb, etsysCosOrlResourceTable=etsysCosOrlResourceTable, etsysCosOrlResourceRate=etsysCosOrlResourceRate, etsysCosFloodCtrlPortTypeTable=etsysCosFloodCtrlPortTypeTable, etsysCosIrlPortGroupName=etsysCosIrlPortGroupName, etsysCosIrlResourceViolationPortList=etsysCosIrlResourceViolationPortList, etsysCosOrlDisabledPortsList=etsysCosOrlDisabledPortsList, etsysCosFloodControlStatus=etsysCosFloodControlStatus, etsysCosTxqPortTypeEntry=etsysCosTxqPortTypeEntry, etsysCosIrlUnitMaxRate=etsysCosIrlUnitMaxRate, etsysCosIrlReferenceMappingMaxReference=etsysCosIrlReferenceMappingMaxReference, etsysCosTxqUnitGranularity=etsysCosTxqUnitGranularity, etsysCosTxqDropSettingIndex=etsysCosTxqDropSettingIndex, etsysCosFloodCtrlUnitTypeIndex=etsysCosFloodCtrlUnitTypeIndex, etsysCosIrlViolationEntry=etsysCosIrlViolationEntry, etsysCosIrlPortCfgTable=etsysCosIrlPortCfgTable, etsysCosOrlPortTypeTable=etsysCosOrlPortTypeTable, etsysCosIrlResourceEntry=etsysCosIrlResourceEntry, TxqAlgorithms=TxqAlgorithms, etsysCosTxq=etsysCosTxq, etsysCosIrlResourceType=etsysCosIrlResourceType, etsysCosTxqPortTypeSupportedRateTypes=etsysCosTxqPortTypeSupportedRateTypes, etsysCosIrlPortTypeEntry=etsysCosIrlPortTypeEntry, etsysCosFloodCtrlFloodType=etsysCosFloodCtrlFloodType, etsysCosOrlExceededNotification=etsysCosOrlExceededNotification, etsysCosCompliances=etsysCosCompliances, etsysCosTxqDropProfilesMax=etsysCosTxqDropProfilesMax, etsysCosTxqPortTypeIndex=etsysCosTxqPortTypeIndex, etsysCosOrlUnitTable=etsysCosOrlUnitTable, etsysCosFloodCtrlPortGroupList=etsysCosFloodCtrlPortGroupList, etsysCosOrlResourceParentOrl=etsysCosOrlResourceParentOrl, etsysCosFloodCtrlResourceAction=etsysCosFloodCtrlResourceAction, etsysCosOrlPortTypeMaxEntries=etsysCosOrlPortTypeMaxEntries, etsysCosTxqResourceTable=etsysCosTxqResourceTable, etsysCosOrlCounter=etsysCosOrlCounter, etsysCosTxqUnitMaxRate=etsysCosTxqUnitMaxRate, etsysCosTxqPortTypeNumberOfSlices=etsysCosTxqPortTypeNumberOfSlices, etsysCosFloodCtrlViolationClearTable=etsysCosFloodCtrlViolationClearTable, etsysCosFloodCtrlResourceClearCounters=etsysCosFloodCtrlResourceClearCounters, etsysCosIrlPortTypeSupportedRateTypes=etsysCosIrlPortTypeSupportedRateTypes, etsysCosIrlResourceAction=etsysCosIrlResourceAction, etsysCosIrlPortGroupNumEntries=etsysCosIrlPortGroupNumEntries, etsysCosIrlResourceParentIrl=etsysCosIrlResourceParentIrl, etsysCosOrlReference=etsysCosOrlReference, etsysCosTxqUnitMinRate=etsysCosTxqUnitMinRate, etsysCosIrlResourceIrlNumber=etsysCosIrlResourceIrlNumber, EtsysRateLimitResetBits=EtsysRateLimitResetBits, etsysCosIrlUnitGranularity=etsysCosIrlUnitGranularity, etsysCosTxqPortTypeNumberOfQueues=etsysCosTxqPortTypeNumberOfQueues, etsysCosFloodCtrlPortGroupLastChange=etsysCosFloodCtrlPortGroupLastChange, etsysCosIrlGroup=etsysCosIrlGroup, etsysCosTxqDropProfileQueueCfgID=etsysCosTxqDropProfileQueueCfgID, etsysCosFloodCtrlUnitTable=etsysCosFloodCtrlUnitTable, etsysCosTxqPortGroupEntry=etsysCosTxqPortGroupEntry, etsysCosTxqDropProfilesLastChange=etsysCosTxqDropProfilesLastChange, etsysCosOrlPortTypeNumberOfORLs=etsysCosOrlPortTypeNumberOfORLs, etsysCosTxqDropProfilesQueueDepthAtMaxProb=etsysCosTxqDropProfilesQueueDepthAtMaxProb, etsysCosIrlResourceIrlNum=etsysCosIrlResourceIrlNum, etsysCosFloodCtrlViolationEntry=etsysCosFloodCtrlViolationEntry, etsysCosOrlViolationTable=etsysCosOrlViolationTable, etsysCosTxqNumPortGroups=etsysCosTxqNumPortGroups, etsysCosTxqDropProfilesNumEntries=etsysCosTxqDropProfilesNumEntries, etsysCosIrlReferenceMappingTable=etsysCosIrlReferenceMappingTable, etsysCosIrlCounter=etsysCosIrlCounter, etsysCosFloodCtrlPortTypeCapabilities=etsysCosFloodCtrlPortTypeCapabilities, etsysCosFloodCtrlPortGroupMaxEntries=etsysCosFloodCtrlPortGroupMaxEntries, etsysCosTxqGroup=etsysCosTxqGroup, etsysCosIrlPortTypeIndex=etsysCosIrlPortTypeIndex, etsysCosDropPrecedence=etsysCosDropPrecedence, etsysCosIrlReferenceMappingEntry=etsysCosIrlReferenceMappingEntry, etsysCosTxqPortSliceSetting=etsysCosTxqPortSliceSetting, etsysCosOrlResourceActionCosIndex=etsysCosOrlResourceActionCosIndex, etsysCosTable=etsysCosTable, etsysCosOrlPortCfgFloodLimiter=etsysCosOrlPortCfgFloodLimiter, etsysCosOrlPortGroupLastChange=etsysCosOrlPortGroupLastChange, etsysCosOrlViolationEntry=etsysCosOrlViolationEntry, etsysCosFloodCtrlPortGroupName=etsysCosFloodCtrlPortGroupName, etsysCosTxqReference=etsysCosTxqReference, etsysCosIrlPortGroupLastChange=etsysCosIrlPortGroupLastChange, etsysCosTxqPortCfgTable=etsysCosTxqPortCfgTable, etsysCosNumEntries=etsysCosNumEntries, etsysCosOrlPortCfgTable=etsysCosOrlPortCfgTable, etsysCosCapability=etsysCosCapability, etsysCosIrlPortCfgFloodLimiter=etsysCosIrlPortCfgFloodLimiter, etsysCosIrlPortCfgEntry=etsysCosIrlPortCfgEntry, etsysCosOrlPortGroupEntry=etsysCosOrlPortGroupEntry, etsysCosOrlResourceOrlNumber=etsysCosOrlResourceOrlNumber, etsysCosIrlPortTypeTable=etsysCosIrlPortTypeTable, etsysCosTxqUnitTypeIndex=etsysCosTxqUnitTypeIndex, EtsysCosRlCapabilities=EtsysCosRlCapabilities, etsysCosFloodCtrlPortTypeIndex=etsysCosFloodCtrlPortTypeIndex, etsysCosFloodCtrlPortTypeDescr=etsysCosFloodCtrlPortTypeDescr, etsysCosIrlExceededNotification=etsysCosIrlExceededNotification, PYSNMP_MODULE_ID=etsysCosMIB, etsysCosLastChange=etsysCosLastChange, etsysCosCapabilitiesGroup=etsysCosCapabilitiesGroup, etsysCosOrlResourceEntry=etsysCosOrlResourceEntry, etsysCosIrlPortGroupList=etsysCosIrlPortGroupList, etsysCosTxqReferenceMappingTable=etsysCosTxqReferenceMappingTable, etsysCosIrlResourceRate=etsysCosIrlResourceRate, etsysCosOrlReferenceMappingLastChange=etsysCosOrlReferenceMappingLastChange, etsysCosOrlResourceType=etsysCosOrlResourceType, etsysCosTxqPortQUnit=etsysCosTxqPortQUnit, etsysCosFloodCtrlResourceRate=etsysCosFloodCtrlResourceRate, etsysCosTxqPortQRate=etsysCosTxqPortQRate, etsysCosFloodCtrlResetFlags=etsysCosFloodCtrlResetFlags, etsysCosFloodCtrlPortTypeEligiblePorts=etsysCosFloodCtrlPortTypeEligiblePorts, etsysCosIrlPortTypeMaxEntries=etsysCosIrlPortTypeMaxEntries, etsysCosTxqPortCfgEntry=etsysCosTxqPortCfgEntry, etsysCosTxqPortTypeTable=etsysCosTxqPortTypeTable, etsysCosTxqPortTypeEligiblePorts=etsysCosTxqPortTypeEligiblePorts, etsysCosFloodCtrlViolationLastChange=etsysCosFloodCtrlViolationLastChange, etsysCosTxqResourceQueueNum=etsysCosTxqResourceQueueNum, etsysCosFloodCtrlPortTypeSupportedRateTypes=etsysCosFloodCtrlPortTypeSupportedRateTypes, EtsysCosRateTypes=EtsysCosRateTypes, etsysCosIrlPortTypeEligiblePorts=etsysCosIrlPortTypeEligiblePorts, etsysCosIrlResourceClearCounters=etsysCosIrlResourceClearCounters, etsysCosFloodCtrlViolationTable=etsysCosFloodCtrlViolationTable, etsysCosFloodCtrlPortGroupEntry=etsysCosFloodCtrlPortGroupEntry, etsysCosMIB=etsysCosMIB, etsysCosIrlViolationTable=etsysCosIrlViolationTable, etsysCosTxqPortGroupName=etsysCosTxqPortGroupName, etsysCosMasterResetGroup=etsysCosMasterResetGroup, etsysCosTxqPortArbMode=etsysCosTxqPortArbMode, etsysCosOrlPortGroupList=etsysCosOrlPortGroupList, EtsysRateLimitingType=EtsysRateLimitingType, etsysCosIrlPortTypeCapabilities=etsysCosIrlPortTypeCapabilities, etsysCosIrlResourceUnits=etsysCosIrlResourceUnits, etsysCosIrlUnitTypeIndex=etsysCosIrlUnitTypeIndex, etsysCosOrlUnitGranularity=etsysCosOrlUnitGranularity, etsysCosOrlReferenceMappingMaxReference=etsysCosOrlReferenceMappingMaxReference, etsysCosTxqPortTypeDescr=etsysCosTxqPortTypeDescr, etsysCosFloodCtrlPortTypeMaxEntries=etsysCosFloodCtrlPortTypeMaxEntries, etsysCosEnableState=etsysCosEnableState, etsysCosIndex=etsysCosIndex, etsysCosFloodCtrlPortTypeEntry=etsysCosFloodCtrlPortTypeEntry, etsysCosFloodCtrlPortGroupNumEntries=etsysCosFloodCtrlPortGroupNumEntries, etsysCosFloodCtrlDisabledPortsList=etsysCosFloodCtrlDisabledPortsList, etsysCos=etsysCos, etsysCosIrlUnitEntry=etsysCosIrlUnitEntry, etsysCosIrlViolationClearTable=etsysCosIrlViolationClearTable, etsysCosTxqPortGroupLastChange=etsysCosTxqPortGroupLastChange, etsysCosTxqReferenceMappingEntry=etsysCosTxqReferenceMappingEntry, etsysCosOrlPortTypeUnselectedPorts=etsysCosOrlPortTypeUnselectedPorts, etsysCosFloodCtrlUnitMaxRate=etsysCosFloodCtrlUnitMaxRate, etsysCosTxqPortTypeLLQEligibleQueues=etsysCosTxqPortTypeLLQEligibleQueues, etsysCosOrlPortGroupNumEntries=etsysCosOrlPortGroupNumEntries, etsysCosOrlResourceViolationPortList=etsysCosOrlResourceViolationPortList, etsysCosMasterReset=etsysCosMasterReset, etsysCosFloodCtrlPortGroupRowStatus=etsysCosFloodCtrlPortGroupRowStatus, etsysCosFloodCtrlUnitGranularity=etsysCosFloodCtrlUnitGranularity, etsysCosIrlPortGroupMaxEntries=etsysCosIrlPortGroupMaxEntries, etsysCosOrlUnitTypeIndex=etsysCosOrlUnitTypeIndex, etsysCosOrlPortGroupName=etsysCosOrlPortGroupName, etsysCosOrlResourceAction=etsysCosOrlResourceAction, etsysCosFloodCtrlCounter=etsysCosFloodCtrlCounter, etsysCosOrl=etsysCosOrl, etsysCosTxqUnitTable=etsysCosTxqUnitTable, etsysCosFloodLimitExceededNotification=etsysCosFloodLimitExceededNotification, etsysCosGroups=etsysCosGroups, etsysCosTableDropPrecedence=etsysCosTableDropPrecedence, etsysCosFloodCtrlResourceTable=etsysCosFloodCtrlResourceTable, etsysCosOrlPortTypeCapabilities=etsysCosOrlPortTypeCapabilities, etsysCosFloodCtrlViolation=etsysCosFloodCtrlViolation, etsysCosTxqDropProfilesMaxEntries=etsysCosTxqDropProfilesMaxEntries, etsysCosTxqPortTypeUnselectedPorts=etsysCosTxqPortTypeUnselectedPorts, etsysCosOrlPortGroupTable=etsysCosOrlPortGroupTable, etsysCosIrlResourceTable=etsysCosIrlResourceTable, etsysCosTxqUnitEntry=etsysCosTxqUnitEntry, etsysCosTxqPortGroupList=etsysCosTxqPortGroupList, etsysCosOrlViolationLastChange=etsysCosOrlViolationLastChange, etsysCosOrlPortCfgEntry=etsysCosOrlPortCfgEntry, etsysCosTxqMaxPortGroups=etsysCosTxqMaxPortGroups, etsysCosTxqPortTypeMaxDropPrecedence=etsysCosTxqPortTypeMaxDropPrecedence, etsysCosTxqPortQAlgorithm=etsysCosTxqPortQAlgorithm, etsysCosIrl=etsysCosIrl, etsysCosTxqPortGroupIndex=etsysCosTxqPortGroupIndex, etsysCosIrlUnitMinRate=etsysCosIrlUnitMinRate, etsysCosTxqPortQLLQenable=etsysCosTxqPortQLLQenable, etsysCosTxqDropPrecedenceEntry=etsysCosTxqDropPrecedenceEntry, etsysCosIrlViolationLastChange=etsysCosIrlViolationLastChange, etsysCosGroup=etsysCosGroup, etsysCosOrlViolationClearTable=etsysCosOrlViolationClearTable, etsysCosFloodCtrlUnitMinRate=etsysCosFloodCtrlUnitMinRate, etsysCosIrlResourceActionCosIndex=etsysCosIrlResourceActionCosIndex, EtsysViolationAction=EtsysViolationAction, etsysCosCompliance=etsysCosCompliance, etsysCosTxqReferenceMappingMaxReference=etsysCosTxqReferenceMappingMaxReference, etsysCosTxqPortGroupRowStatus=etsysCosTxqPortGroupRowStatus, etsysCosIrlPortGroupEntry=etsysCosIrlPortGroupEntry, etsysCosOrlGroup=etsysCosOrlGroup, etsysCosNotifications=etsysCosNotifications, etsysCosOrlPortTypeEntry=etsysCosOrlPortTypeEntry, etsysCosOrlPortIndex=etsysCosOrlPortIndex, etsysCosTxqDropProfilesRowStatus=etsysCosTxqDropProfilesRowStatus)
mibBuilder.exportSymbols("ENTERASYS-CLASS-OF-SERVICE-MIB", etsysCosOrlUnitEntry=etsysCosOrlUnitEntry, etsysCosOrlResourceOrlNum=etsysCosOrlResourceOrlNum)
