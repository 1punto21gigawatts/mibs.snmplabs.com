#
# PySNMP MIB module IGMP-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IGMP-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:53:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
cjnProtocol, = mibBuilder.importSymbols("Cajun-ROOT", "cjnProtocol")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, ObjectIdentity, IpAddress, Unsigned32, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, TimeTicks, Integer32, Counter32, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "IpAddress", "Unsigned32", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "TimeTicks", "Integer32", "Counter32", "Gauge32", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
cjnIgmp = ModuleIdentity((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11))
if mibBuilder.loadTexts: cjnIgmp.setLastUpdated('9909210000Z')
if mibBuilder.loadTexts: cjnIgmp.setOrganization("Lucent's Concord Technology Center (CTC)")
if mibBuilder.loadTexts: cjnIgmp.setContactInfo('Erick Crowell -- ecrowell@lucent.com Raj Duggal (Group Leader) -- rduggal@lucent.com Marie Pacini -- mfpacini@lucent.com Ira Steckler -- (MIB God) isteckler@lucent.com')
if mibBuilder.loadTexts: cjnIgmp.setDescription('Cajun IGMP PRIVATE MIB')
cjnIgmpGblGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 1))
cjnIgmpIsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIsEnabled.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIsEnabled.setDescription('Enable IGMP - default to FALSE.')
cjnIpIgmpGblStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIpIgmpGblStatsReset.setStatus('current')
if mibBuilder.loadTexts: cjnIpIgmpGblStatsReset.setDescription('When set to the value enable (1) all IGMP statistics are reset to zero after which the value of this MIB object returns to disable(2)')
cjnIgmpGblStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 2))
cjnIgmpRxReport = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpRxReport.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpRxReport.setDescription('Number of Group Membership Reports Received.')
cjnIgmpRxQuery = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpRxQuery.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpRxQuery.setDescription('Number of Group Membership Queries Received.')
cjnIgmpTxQuery = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpTxQuery.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpTxQuery.setDescription('Number of Group Membership Queries Transmitted.')
cjnIgmpRxUnknownCode = MibScalar((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpRxUnknownCode.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpRxUnknownCode.setDescription('Number of Unknown Messages Received.')
cjnIgmpIfGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3))
cjnIgmpIfTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1), )
if mibBuilder.loadTexts: cjnIgmpIfTable.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfTable.setDescription('A list of Cajun IGMP interface entries. The number of entries is given by the value of cjnIgmpIfNumber.')
cjnIgmpIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1), ).setIndexNames((0, "IGMP-PRIVATE-MIB", "cjnIgmpIfIndex"))
if mibBuilder.loadTexts: cjnIgmpIfEntry.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfEntry.setDescription('An cajun IGMP Interface instance ')
cjnIgmpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cjnIgmpIfIndex.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfIndex.setDescription("The globally unique identifier for this interface. This number MUST correlate with the IfTable's IfIndex in MIB-II or RFC2233")
cjnIgmpIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfRowStatus.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfRowStatus.setDescription('The Status of this entry in the table. Note the available states: active(1), -- Obviously Active. notInService(2) -- Interface configured but disabled. notReady(3), -- Interface NOT configured. createAndGo(4), createAndWait(5) or destroy(6) ')
cjnIgmpIfIsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2))).clone('v2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfIsVersion.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfIsVersion.setDescription('IGMP version running. 1=V1 2=V2. default is 2=V2.')
cjnIgmpIfMaxGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfMaxGroups.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfMaxGroups.setDescription('Maximum number of groups allowed on interface 1-2000. default is 32.')
cjnIgmpIfIsQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfIsQuerier.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfIsQuerier.setDescription('For this interface are Group Queries Enabled? . default is 0=disabled.')
cjnIgmpIfProcessLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfProcessLeaves.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfProcessLeaves.setDescription('For this interface is the processing of Leave Requests Enabled? . default is 1=enabled.')
cjnIgmpIfQueryReqIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(125)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfQueryReqIntvl.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQueryReqIntvl.setDescription(' Interval between General Queries sent. 1-65535. default is 125 seconds.')
cjnIgmpIfQueryRspIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 25)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfQueryRspIntvl.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQueryRspIntvl.setDescription('Max Response Time inserted into the periodic General Queries 1-25. default is 10 seconds. QueryRsp must be less than QueryReq')
cjnIgmpIfNbrQueryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfNbrQueryTimeout.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfNbrQueryTimeout.setDescription('Neighbor group querier timeout in seconds. 60-300. default is 255 seconds.')
cjnIgmpIfRobustVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfRobustVariable.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfRobustVariable.setDescription('Robustness variable. Expected packet loss on a network. 1-65535. default is 2.')
cjnIgmpIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("down", 0), ("init", 1), ("querier", 2), ("nonQuerier", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cjnIgmpIfState.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfState.setDescription('The current state of IGMP on this interface. When the circuit first comes up the state is DOWN.')
cjnIgmpIfStatGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4))
cjnIgmpIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1), )
if mibBuilder.loadTexts: cjnIgmpIfStatTable.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfStatTable.setDescription('A list of Cajun IGMP interface statistics entries. The number of entries is given by the value of cjnIgmpIfNumber.')
cjnIgmpIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1), ).setIndexNames((0, "IGMP-PRIVATE-MIB", "cjnIgmpIfIndex"))
if mibBuilder.loadTexts: cjnIgmpIfStatEntry.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfStatEntry.setDescription('An cajun IGMP Interface Statistics instance ')
cjnIgmpIfQval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfQval.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQval.setDescription('Next Query Request in seconds.')
cjnIgmpIfQpval = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfQpval.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQpval.setDescription('Neighbor Querier Timeout in seconds.')
cjnIgmpIfJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfJoins.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfJoins.setDescription('Number of Group Join Requests Received on this interface.')
cjnIgmpIfLeaves = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfLeaves.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfLeaves.setDescription('Number of Group Leave Requests Received on this interface.')
cjnIgmpIfRptRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfRptRcvd.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfRptRcvd.setDescription('Number of Group Reports Received on this interface.')
cjnIgmpIfQueryRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfQueryRcvd.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQueryRcvd.setDescription('Number of Query Messages Received on this interface.')
cjnIgmpIfQueryXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfQueryXmit.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfQueryXmit.setDescription('Number of Query Messages Transmitted on this interface.')
cjnIgmpIfWrongVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfWrongVer.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfWrongVer.setDescription('Number of Unknown Messages Received on this interface.')
cjnIgmpIfCurGrps = MibTableColumn((1, 3, 6, 1, 4, 1, 1751, 2, 43, 2, 11, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cjnIgmpIfCurGrps.setStatus('current')
if mibBuilder.loadTexts: cjnIgmpIfCurGrps.setDescription('Number of Current Groups on this interface.')
mibBuilder.exportSymbols("IGMP-PRIVATE-MIB", cjnIgmpIfQueryReqIntvl=cjnIgmpIfQueryReqIntvl, cjnIgmpRxQuery=cjnIgmpRxQuery, cjnIgmpGblStatsGroup=cjnIgmpGblStatsGroup, cjnIgmpTxQuery=cjnIgmpTxQuery, cjnIgmpGblGroup=cjnIgmpGblGroup, cjnIgmpIfQueryRcvd=cjnIgmpIfQueryRcvd, cjnIgmpIfProcessLeaves=cjnIgmpIfProcessLeaves, cjnIgmpIfRowStatus=cjnIgmpIfRowStatus, cjnIgmp=cjnIgmp, cjnIgmpIfState=cjnIgmpIfState, cjnIgmpIfNbrQueryTimeout=cjnIgmpIfNbrQueryTimeout, cjnIgmpIsEnabled=cjnIgmpIsEnabled, cjnIgmpIfLeaves=cjnIgmpIfLeaves, cjnIpIgmpGblStatsReset=cjnIpIgmpGblStatsReset, cjnIgmpIfQueryXmit=cjnIgmpIfQueryXmit, cjnIgmpIfQpval=cjnIgmpIfQpval, cjnIgmpIfIndex=cjnIgmpIfIndex, cjnIgmpRxReport=cjnIgmpRxReport, cjnIgmpIfQueryRspIntvl=cjnIgmpIfQueryRspIntvl, cjnIgmpIfEntry=cjnIgmpIfEntry, cjnIgmpIfStatTable=cjnIgmpIfStatTable, cjnIgmpIfJoins=cjnIgmpIfJoins, cjnIgmpIfCurGrps=cjnIgmpIfCurGrps, cjnIgmpIfGroup=cjnIgmpIfGroup, cjnIgmpIfRptRcvd=cjnIgmpIfRptRcvd, PYSNMP_MODULE_ID=cjnIgmp, cjnIgmpRxUnknownCode=cjnIgmpRxUnknownCode, cjnIgmpIfRobustVariable=cjnIgmpIfRobustVariable, cjnIgmpIfIsQuerier=cjnIgmpIfIsQuerier, cjnIgmpIfIsVersion=cjnIgmpIfIsVersion, cjnIgmpIfStatGroup=cjnIgmpIfStatGroup, cjnIgmpIfWrongVer=cjnIgmpIfWrongVer, cjnIgmpIfStatEntry=cjnIgmpIfStatEntry, cjnIgmpIfTable=cjnIgmpIfTable, cjnIgmpIfMaxGroups=cjnIgmpIfMaxGroups, cjnIgmpIfQval=cjnIgmpIfQval)
