#
# PySNMP MIB module VLAN-COUNTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VLAN-COUNTER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:34:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, IpAddress, Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, ObjectIdentity, iso, Unsigned32, Integer32, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "IpAddress", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "iso", "Unsigned32", "Integer32", "NotificationType", "Gauge32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
swVLANCounterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 65))
if mibBuilder.loadTexts: swVLANCounterMIB.setLastUpdated('200810280000Z')
if mibBuilder.loadTexts: swVLANCounterMIB.setOrganization('D-Link Corp.')
if mibBuilder.loadTexts: swVLANCounterMIB.setContactInfo('http://support.dlink.com')
if mibBuilder.loadTexts: swVLANCounterMIB.setDescription('The structure of VLAN counter for the proprietary enterprise.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swVLANCounterCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 1))
swVLANCounterInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 2))
swVLANCounterMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 65, 3))
swVLANCounterTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1), )
if mibBuilder.loadTexts: swVLANCounterTable.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterTable.setDescription('A table that contains the VLAN level received packets or received bytes .')
swVLANCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1), ).setIndexNames((0, "VLAN-COUNTER-MIB", "swVLANCounterVID"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPort"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPktType"), (0, "VLAN-COUNTER-MIB", "swVLANCounterLevel"))
if mibBuilder.loadTexts: swVLANCounterEntry.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterEntry.setDescription('A list with the VLAN level received packets or received bytes .')
swVLANCounterVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterVID.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterVID.setDescription('This object indicates the VLAN ID.')
swVLANCounterPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterPort.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterPort.setDescription('This object indicates the port number. If the port number is 0, it indicates that the rule belongs to the vlan.')
swVLANCounterPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unicast", 3), ("all_frame", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterPktType.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterPktType.setDescription('This object indicates the type of packet.')
swVLANCounterLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packet", 1), ("byte", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterLevel.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterLevel.setDescription('This object indicates the level of the count.')
swVLANCounterTotalStats = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterTotalStats.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterTotalStats.setDescription('This object indicates the raw statistics.')
swVLANCounterRateStats = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swVLANCounterRateStats.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterRateStats.setDescription('This object indicates the rate statistics.')
swVLANCounterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swVLANCounterRowStatus.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterRowStatus.setDescription('This object indicates the status of this entry.')
swVLANCounterClearTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2), )
if mibBuilder.loadTexts: swVLANCounterClearTable.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterClearTable.setDescription('This table is used to clear vlan counter statistics.')
swVLANCounterClearEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2, 1), ).setIndexNames((0, "VLAN-COUNTER-MIB", "swVLANCounterVID"), (0, "VLAN-COUNTER-MIB", "swVLANCounterPort"))
if mibBuilder.loadTexts: swVLANCounterClearEntry.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterClearEntry.setDescription('A list with the swVLANCounterClearTable.')
swVLANCounterClearAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 65, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swVLANCounterClearAction.setStatus('current')
if mibBuilder.loadTexts: swVLANCounterClearAction.setDescription("Used to clear the statistics on the specified VLAN. Setting this value to 'start' will execute the clear action, Once cleared, the value returns to 'other'.")
mibBuilder.exportSymbols("VLAN-COUNTER-MIB", swVLANCounterMIB=swVLANCounterMIB, PYSNMP_MODULE_ID=swVLANCounterMIB, swVLANCounterVID=swVLANCounterVID, swVLANCounterTotalStats=swVLANCounterTotalStats, swVLANCounterPktType=swVLANCounterPktType, swVLANCounterPort=swVLANCounterPort, swVLANCounterTable=swVLANCounterTable, PortList=PortList, swVLANCounterMgmt=swVLANCounterMgmt, swVLANCounterClearTable=swVLANCounterClearTable, swVLANCounterCtrl=swVLANCounterCtrl, swVLANCounterLevel=swVLANCounterLevel, swVLANCounterRateStats=swVLANCounterRateStats, swVLANCounterClearAction=swVLANCounterClearAction, swVLANCounterClearEntry=swVLANCounterClearEntry, swVLANCounterEntry=swVLANCounterEntry, swVLANCounterInfo=swVLANCounterInfo, swVLANCounterRowStatus=swVLANCounterRowStatus)
