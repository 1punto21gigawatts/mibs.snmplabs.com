#
# PySNMP MIB module CHEETAH-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CHEETAH-TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:48:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
slbCurCfgRealServerIndex, fltCurCfgIndx, slbCurCfgVirtServiceRealPort, fltCurCfgPortIndx, slbCurCfgRealServerName, slbCurCfgRealServerIpAddr, fltCurCfgSrcIp = mibBuilder.importSymbols("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex", "fltCurCfgIndx", "slbCurCfgVirtServiceRealPort", "fltCurCfgPortIndx", "slbCurCfgRealServerName", "slbCurCfgRealServerIpAddr", "fltCurCfgSrcIp")
ipCurCfgGwAddr, vrrpCurCfgVirtRtrAddr, vrrpCurCfgVirtRtrIndx, vrrpCurCfgIfPasswd, ipCurCfgGwIndex, vrrpCurCfgIfIndx = mibBuilder.importSymbols("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwAddr", "vrrpCurCfgVirtRtrAddr", "vrrpCurCfgVirtRtrIndx", "vrrpCurCfgIfPasswd", "ipCurCfgGwIndex", "vrrpCurCfgIfIndx")
aws_switch, = mibBuilder.importSymbols("ALTEON-ROOT-MIB", "aws-switch")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysContact, sysName, sysLocation = mibBuilder.importSymbols("SNMPv2-MIB", "sysContact", "sysName", "sysLocation")
ObjectIdentity, Counter32, TimeTicks, MibIdentifier, ModuleIdentity, Gauge32, Integer32, IpAddress, NotificationType, iso, NotificationType, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Counter32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Gauge32", "Integer32", "IpAddress", "NotificationType", "iso", "NotificationType", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
altTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7))
altSwTrapDisplayString = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7, 1000), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: altSwTrapDisplayString.setStatus('mandatory')
if mibBuilder.loadTexts: altSwTrapDisplayString.setDescription('Temporary string object used to store information being sent in an Alteon Switch trap.')
altSwTrapRate = MibScalar((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7, 1001), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: altSwTrapRate.setStatus('mandatory')
if mibBuilder.loadTexts: altSwTrapRate.setDescription('Temporary integer object used to store information being sent in an Alteon Switch trap.')
altSwPrimaryPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,1))
if mibBuilder.loadTexts: altSwPrimaryPowerSupplyFailure.setDescription('A altSwPrimaryPowerSupplyFailure trap signifies that the primary power supply failed.')
altSwDefGwUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,2)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwIndex"), ("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwDefGwUp.setDescription('A altSwDefGwUp trap signifies that the default gateway is alive. ipCurCfgGwIndex is the index of the Gateway in ipCurCfgGwTable. The range for ipCurCfgGwIndex is from 1 to ipGatewayTableMax. ipCurCfgGwAddr is the IP address of the default gateway.')
altSwDefGwDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,3)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwIndex"), ("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwDefGwDown.setDescription('A altSwDefGwDown trap signifies that the default gateway is down. ipCurCfgGwIndex is the index of the Gateway in ipCurCfgGwTable. The range for ipCurCfgGwIndex is from 1 to ipGatewayTableMax. ipCurCfgGwAddr is the IP address of the default gateway.')
altSwDefGwInService = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,4)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwIndex"), ("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwDefGwInService.setDescription('A altSwDefGwEnabled trap signifies that the default gateway is up and in service. ipCurCfgGwIndex is the index of the Gateway in ipCurCfgGwTable. The range for ipCurCfgGwIndex is from 1 to ipGatewayTableMax. ipCurCfgGwAddr is the IP address of the default gateway.')
altSwDefGwNotInService = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,5)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwIndex"), ("ALTEON-CHEETAH-NETWORK-MIB", "ipCurCfgGwAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwDefGwNotInService.setDescription('A altSwDefGwDisabled trap signifies that the default gateway is alive but not in service. ipCurCfgGwIndex is the index of the Gateway in ipCurCfgGwTable. The range for ipCurCfgGwIndex is from 1 to ipGatewayTableMax. ipCurCfgGwAddr is the IP address of the default gateway.')
altSwSlbRealServerUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,6)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbRealServerUp.setDescription('A altSwSlbRealServerUp trap signifies that the real server (which had gone down )is back up and operational now. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbRealServerDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,7)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbRealServerDown.setDescription('A altSwSlbRealServerDown trap signifies that the real server has gone down and is out of service. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbRealServerMaxConnReached = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,8)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbRealServerMaxConnReached.setDescription('A altSwSlbRealServerMaxConnReached trap signifies that the real server has reached maximum connections. The Real server will not be sent any more traffic from the switch until the number of connections drops below the maximum. If a backup server has been specified, it will be used to service additional requests, which is referred to as an Overflow server. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbBkupRealServerAct = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,9)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbBkupRealServerAct.setDescription('A altSwSlbBkupRealServerAct trap signifies that this backup real server has been activated because the Real server that it backs up went down.One might expect that a altSwSlbRealServerDown trap with the primary real server specified would preceded this one. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbBkupRealServerDeact = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,10)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbBkupRealServerDeact.setDescription('A altSwSlbBkupRealServerDeact trap signifies that the backup real server is deactivated because the primary real server has become available.One might expect that a altSwSlbRealServerUp trap with the primary real server specified would preceded this one. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbBkupRealServerActOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,11)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbBkupRealServerActOverflow.setDescription('A altSwSlbBkupRealServerActOverflow trap signifies that the backup real server is activated because the primary real server has reached the maximum allowed connections and is considered to be is in the Overflow state.One would expect an altSwSlbRealServerMaxConnReached trap from the Real server that just entered Overflow would preceded this one. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwSlbBkupRealServerDeactOverflow = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,12)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbBkupRealServerDeactOverflow.setDescription('A altSwSlbBkupRealServerDeactOverflow trap signifies that the backup real server is deactivated because the primary real server is no longer in Overflow. The number of connections to the real server has fallen below the maximum allowed. The backup/overflow server is no longer needed. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server.')
altSwfltFilterFired = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,13)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgIndx"), ("ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgPortIndx"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwfltFilterFired.setDescription('A altSwfltFilterFired trap signifies that the packet received on a switch port matches the filter rule. on a switch port matches the filter rule. fltCurCfgIndx is the affected filter index, referenced in fltCurCfgTable. The range is from 1 to fltCfgTableMaxSize. fltCurCfgPortIndx is the affected port index, referenced in fltCurCfgPortTable. The range is from 1 to agPortTableMaxEnt.')
altSwSlbRealServerServiceUp = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,14)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceRealPort"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbRealServerServiceUp.setDescription('A altSwSlbRealServerServiceUp trap signifies that the service port of the real server is up and operational. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to the value return from slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server. slbCurCfgVirtualServiceRealPort referenced in slbCurCfgVirtServicesTable. This is the layer 4 real port number of the service.')
altSwSlbRealServerServiceDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,15)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIndex"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerIpAddr"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgRealServerName"), ("ALTEON-CHEETAH-LAYER4-MIB", "slbCurCfgVirtServiceRealPort"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbRealServerServiceDown.setDescription('A altSwSlbRealServerServiceDown trap signifies that the service port of the real server is down and out of service. slbCurCfgRealServerIndex is the affected Real Server Number. The range is from 1 to the value return from slbRealServerMaxSize. slbCurCfgRealServerIpAddr is the IP address of the affected Real Server. slbCurCfgRealServerName is the optional Name given to the affected Real Server. slbCurCfgVirtualServiceRealPort referenced in slbCurCfgVirtServicesTable. This is the layer 4 real port number of the service.')
altSwVrrpNewMaster = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,16)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgVirtRtrIndx"), ("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgVirtRtrAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwVrrpNewMaster.setDescription("The altSwVrrpNewMaster trap indicates that the sending agent has transitioned to 'Master' state. vrrpCurCfgVirtRtrIndx is the VRRP virtual router table index referenced in vrrpCurCfgVirtRtrTable. The range is from 1 to vrrpVirtRtrTableMaxSize. vrrpCurCfgVirtRtrAddr is the VRRP virtual router IP address.")
altSwVrrpNewBackup = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,17)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgVirtRtrIndx"), ("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgVirtRtrAddr"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwVrrpNewBackup.setDescription("The altSwVrrpNewBackup trap indicates that the sending agent has transitioned to 'Backup' state. vrrpCurCfgVirtRtrIndx is the VRRP virtual router table index referenced in vrrpCurCfgVirtRtrTable. The range is from 1 to vrrpVirtRtrTableMaxSize. vrrpCurCfgVirtRtrAddr is the VRRP virtual router IP address.")
altSwVrrpAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,18)).setObjects(("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgIfIndx"), ("ALTEON-CHEETAH-NETWORK-MIB", "vrrpCurCfgIfPasswd"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwVrrpAuthFailure.setDescription("A altSwVrrpAuthFailure trap signifies that a packet has been received from a router whose authentication key or authentication type conflicts with this router's authentication key or authentication type. Implementation of this trap is optional. vrrpCurCfgIfIndx is the VRRP interface index. This is equivalent to IfIndex in RFC 1213 mib. The range is from 1 to vrrpIfTableMaxSize. vrrpCurCfgIfPasswd is the password for authentication. It is a DisplayString of 0 to 7 characters.")
altSwLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,19)).setObjects(("CHEETAH-TRAP-MIB", "altSwTrapDisplayString"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwLoginFailure.setDescription('A altSwLoginFailure trap signifies that someone failed to enter a valid username/password combination. altSwTrapDisplayString specifies whether the login attempt was from CONSOLE or TELNET. In case of TELNET login it also specifies the IP address of the host from which the attempt was made.')
altSwSlbSynAttack = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,20)).setObjects(("CHEETAH-TRAP-MIB", "altSwTrapRate"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwSlbSynAttack.setDescription('A altSwSlbSynAttack trap signifies that a SYN attack has been detected. altSwTrapRate specifies the number of new half-open sessions per second.')
altSwTcpHoldDown = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,21)).setObjects(("ALTEON-CHEETAH-LAYER4-MIB", "fltCurCfgSrcIp"), ("CHEETAH-TRAP-MIB", "altSwTrapRate"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwTcpHoldDown.setDescription('A altSwTcpHoldDown trap signifies that new TCP connection requests from a particular client will be blocked for a pre-determined amount of time since the rate of new TCP connections from that client has reached a pre-determined threshold. The fltCurCfgSrcIp is the client source IP address for which new TCP connection requests will be blocked. The altSwTrapRate specifies the amount of time in minutes that the particular client will be blocked.')
altSwTempExceedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 1872, 2, 5, 7) + (0,22)).setObjects(("CHEETAH-TRAP-MIB", "altSwTrapDisplayString"), ("SNMPv2-MIB", "sysName"), ("SNMPv2-MIB", "sysLocation"), ("SNMPv2-MIB", "sysContact"))
if mibBuilder.loadTexts: altSwTempExceedThreshold.setDescription('A altSwTempExceedThreshold trap signifies that the switch temperature has exceeded maximum safety limits. altSwTrapDisplayString specifies the sensor, the current sensor temperature and the threshold for the particular sensor.')
mibBuilder.exportSymbols("CHEETAH-TRAP-MIB", altSwTrapDisplayString=altSwTrapDisplayString, altSwSlbRealServerMaxConnReached=altSwSlbRealServerMaxConnReached, altSwVrrpNewBackup=altSwVrrpNewBackup, altTraps=altTraps, altSwSlbRealServerServiceUp=altSwSlbRealServerServiceUp, altSwPrimaryPowerSupplyFailure=altSwPrimaryPowerSupplyFailure, altSwTrapRate=altSwTrapRate, altSwVrrpNewMaster=altSwVrrpNewMaster, altSwSlbBkupRealServerActOverflow=altSwSlbBkupRealServerActOverflow, altSwDefGwDown=altSwDefGwDown, altSwSlbRealServerUp=altSwSlbRealServerUp, altSwfltFilterFired=altSwfltFilterFired, altSwLoginFailure=altSwLoginFailure, altSwSlbRealServerServiceDown=altSwSlbRealServerServiceDown, altSwSlbBkupRealServerDeact=altSwSlbBkupRealServerDeact, altSwSlbBkupRealServerAct=altSwSlbBkupRealServerAct, altSwTcpHoldDown=altSwTcpHoldDown, altSwSlbSynAttack=altSwSlbSynAttack, altSwTempExceedThreshold=altSwTempExceedThreshold, altSwVrrpAuthFailure=altSwVrrpAuthFailure, altSwDefGwNotInService=altSwDefGwNotInService, altSwSlbBkupRealServerDeactOverflow=altSwSlbBkupRealServerDeactOverflow, altSwDefGwUp=altSwDefGwUp, altSwSlbRealServerDown=altSwSlbRealServerDown, altSwDefGwInService=altSwDefGwInService)
