#
# PySNMP MIB module ThreeParMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ThreeParMIB
# Produced by pysmi-0.3.4 at Wed May  1 15:28:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
AgentCapabilities, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "AgentCapabilities", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, TimeTicks, iso, MibIdentifier, IpAddress, Counter32, ObjectIdentity, Integer32, ModuleIdentity, Gauge32, NotificationType, Bits, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "TimeTicks", "iso", "MibIdentifier", "IpAddress", "Counter32", "ObjectIdentity", "Integer32", "ModuleIdentity", "Gauge32", "NotificationType", "Bits", "Unsigned32", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
threepar = ModuleIdentity((1, 3, 6, 1, 4, 1, 12925))
threepar.setRevisions(('2013-03-12 11:22', '2012-08-02 15:22', '2010-10-04 14:45', '2007-10-05 15:00', '2004-12-13 17:00', '2004-12-13 16:40', '2004-06-14 15:45', '2002-04-16 13:27',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: threepar.setRevisionsDescriptions(('rev 1.7 - added serialNumber to alertTable and alertNotify', 'rev 1.6 - Renamed this file from 3PAR-MIB.mib to ThreeParMIB.mib - Rebranded company name from 3PAR to HP 3PAR', 'rev 1.5 - Added a new level to Severity', 'rev 1.4 - Corrected company name to 3PAR in the ORGANIZATION and CONTACT', 'rev 1.3 - Added AGENT-CAPABILITIES statement to specify that sysName is read-only', 'rev 1.2 - Added id, messageCode and state to alertTable and alertNotify', "rev 1.1 - 'inserv' is changed from OBJECT IDENTIFIER to OBJECT-IDENTITY - Defined ThreeparLongDisplayString for strings longer than 255 - Got rid of size specifications for DisplayString - Removed possibleCause and suggestedAction from alertNotify as they are neither used nor defined", 'rev 1.0',))
if mibBuilder.loadTexts: threepar.setLastUpdated('201303121122Z')
if mibBuilder.loadTexts: threepar.setOrganization('Organization : HP 3PAR')
if mibBuilder.loadTexts: threepar.setContactInfo('Contact-info www.hp.com/go/3PAR')
if mibBuilder.loadTexts: threepar.setDescription("This file specifies management information interface for all HP 3PAR's products. This information is normally used by any management software that utilizes SNMP as management standard. The SNMP agent inside the device provides the specified information.")
class ThreeparLongDisplayString(TextualConvention, OctetString):
    description = 'Use this textual convention for display string that can be longer than 255 characters, since DisplayString is defined in SNMPv2-TC as having a maximum size of only 255. A size range will have to be specified when using this convention.'
    status = 'current'

inserv = ObjectIdentity((1, 3, 6, 1, 4, 1, 12925, 1))
if mibBuilder.loadTexts: inserv.setStatus('current')
if mibBuilder.loadTexts: inserv.setDescription('InServ product')
inservAgentCaps = ObjectIdentity((1, 3, 6, 1, 4, 1, 12925, 1, 4))
if mibBuilder.loadTexts: inservAgentCaps.setStatus('current')
if mibBuilder.loadTexts: inservAgentCaps.setDescription('InServ agent profile')
alertTable = MibTable((1, 3, 6, 1, 4, 1, 12925, 1, 7), )
if mibBuilder.loadTexts: alertTable.setStatus('current')
if mibBuilder.loadTexts: alertTable.setDescription('Contains critical information in notifications sent to SNMP managers. This information is translated from alerts generated by the system.')
alertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1), ).setIndexNames((0, "ThreeParMIB", "index"))
if mibBuilder.loadTexts: alertEntry.setStatus('current')
if mibBuilder.loadTexts: alertEntry.setDescription('Row Description')
index = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: index.setStatus('current')
if mibBuilder.loadTexts: index.setDescription('Index to access entries in alert table. However, the table is empty most of the time because the entry is deleted after sending the trap')
severity = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fatal", 0), ("critical", 1), ("major", 2), ("minor", 3), ("degraded", 4), ("info", 5), ("debug", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: severity.setStatus('current')
if mibBuilder.loadTexts: severity.setDescription("Severity of the alert. The enumeration is borrowed from Common Information Model (CIM): 0 - fatal: indicates an error occurred, but it's too late to take any actions; 1 - critical: an action is needed immediately and scope of the error is broad; 2 - major: an action is needed, the situation is serious; 3 - minor: an action is needed, but the situation is not serious; 4 - degraded/warning: the user decides whether to take an action; 5 - informational: indicates state change or status change, but it's not an error; 6 - debug: information that are logged for later analysis.")
timeOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeOccurred.setStatus('current')
if mibBuilder.loadTexts: timeOccurred.setDescription("The local time and date when the alert occurred. The format is 'DDD mmm dd hh:mm:ss ZZZ yyyy'. Where: DDD= day of the week (Sun, Mon, ,,,), mmm= month (Jan, Feb, Mar ...), dd= date, hh: hour, mm: minute, ss= second, ZZZ: time zone, yyyy: year.")
nodeID = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nodeID.setStatus('current')
if mibBuilder.loadTexts: nodeID.setDescription('The node the alert was posted on. The node number starts from 0. The maximum number of node is 32.')
component = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 5), DisplayString().clone('1')).setMaxAccess("readonly")
if mibBuilder.loadTexts: component.setStatus('current')
if mibBuilder.loadTexts: component.setDescription('The component which the event applies to; for example, power supply, SCSI disk, BIOS, cage etc...')
details = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 6), ThreeparLongDisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: details.setStatus('current')
if mibBuilder.loadTexts: details.setDescription('Additional detailed description of the alert. The detail may include things like disk number, cage number the alert applies to.')
id = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: id.setStatus('current')
if mibBuilder.loadTexts: id.setDescription('Unique ID that identifies the instance of an alert. This is a unique number that is generated each time an alert is generated by the system.')
messageCode = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(65537, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: messageCode.setStatus('current')
if mibBuilder.loadTexts: messageCode.setDescription("Message code is assigned to a particular event type, and is encoded as a 32-bit number in the following way: The MSB 8 bits are reserved. The next 8 bits represent a particular subsystem or component. The LSB 16 bits are the keycode id within the subsystem. For example, Remote Copy Target Down event has a subsystem ID of 37 (remote copy subsystem), and a keycode ID of 1, thus the message code for this event = ((37 << 16) | 1) = 0x250001 = 2424833. This is shown as 'Message Code' in the CLI 'showalert' display, and also shows up in the Alerts Details Pane in the GUI.")
state = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 0), ("new", 1), ("acknowledged", 2), ("fixed", 3), ("removed", 4), ("autofixed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: state.setStatus('current')
if mibBuilder.loadTexts: state.setDescription('This provides information about the state of the alert. new - new alert generated by the system acknowledged - an administrator has acknowledged the alert but may or may not have fixed it, depending on whether remedial action is necessary fixed - remedial action has been taken to fix the alert condition removed - the alert has been removed autofixed - the system has taken action to automatically resolve the alert condition.')
serialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 12925, 1, 7, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('current')
if mibBuilder.loadTexts: serialNumber.setDescription('The serial-number of the HP 3PAR InServ system')
alertNotify = NotificationType((1, 3, 6, 1, 4, 1, 12925, 1, 8)).setObjects(("ThreeParMIB", "component"), ("ThreeParMIB", "details"), ("ThreeParMIB", "nodeID"), ("ThreeParMIB", "severity"), ("ThreeParMIB", "timeOccurred"), ("ThreeParMIB", "id"), ("ThreeParMIB", "messageCode"), ("ThreeParMIB", "state"), ("ThreeParMIB", "serialNumber"))
if mibBuilder.loadTexts: alertNotify.setStatus('current')
if mibBuilder.loadTexts: alertNotify.setDescription('Alert notification contains details about an event that may affect system operations and performance. The details include all columns defined in alertTable.')
inservAgentCapability = AgentCapabilities((1, 3, 6, 1, 4, 1, 12925, 1, 4, 1))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inservAgentCapability = inservAgentCapability.setProductRelease('InServ Release 2.2')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    inservAgentCapability = inservAgentCapability.setStatus('current')
if mibBuilder.loadTexts: inservAgentCapability.setDescription('HP 3PAR agent capability. Please note that the HP 3PAR agent supports snmpObsoleteGroup in SNMPv2-MIB instead of snmpGroup.')
mibBuilder.exportSymbols("ThreeParMIB", severity=severity, PYSNMP_MODULE_ID=threepar, timeOccurred=timeOccurred, component=component, messageCode=messageCode, id=id, index=index, threepar=threepar, serialNumber=serialNumber, details=details, alertEntry=alertEntry, ThreeparLongDisplayString=ThreeparLongDisplayString, nodeID=nodeID, state=state, alertTable=alertTable, alertNotify=alertNotify, inserv=inserv, inservAgentCaps=inservAgentCaps, inservAgentCapability=inservAgentCapability)
