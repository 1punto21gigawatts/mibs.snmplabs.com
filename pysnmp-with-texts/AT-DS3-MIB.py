#
# PySNMP MIB module AT-DS3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-DS3-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:29:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
modules, DisplayStringUnsized = mibBuilder.importSymbols("AT-SMI-MIB", "modules", "DisplayStringUnsized")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, Counter64, ModuleIdentity, Unsigned32, MibIdentifier, NotificationType, IpAddress, ObjectIdentity, iso, Integer32, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "Counter64", "ModuleIdentity", "Unsigned32", "MibIdentifier", "NotificationType", "IpAddress", "ObjectIdentity", "iso", "Integer32", "Bits", "Gauge32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ds3 = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109))
ds3.setRevisions(('2006-06-28 12:22',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ds3.setRevisionsDescriptions(('Initial Revision',))
if mibBuilder.loadTexts: ds3.setLastUpdated('200606281222Z')
if mibBuilder.loadTexts: ds3.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: ds3.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: ds3.setDescription('This MIB file contains definitions of managed objects for the DS3 module. ')
ds3TrapTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1), )
if mibBuilder.loadTexts: ds3TrapTable.setStatus('current')
if mibBuilder.loadTexts: ds3TrapTable.setDescription('The ATR enterprise DS3 trap table.')
ds3TrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ds3TrapEntry.setStatus('current')
if mibBuilder.loadTexts: ds3TrapEntry.setDescription('An entry in the ATR enterprise DS3 trap table.')
ds3TcaTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3TcaTrapEnable.setStatus('current')
if mibBuilder.loadTexts: ds3TcaTrapEnable.setDescription('Indicates whether the threshold crossing alert traps should be generated for this interface.')
ds3TrapError = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("ds3NoError", 1), ("ds3PES", 2), ("ds3PSES", 3), ("ds3SEFs", 4), ("ds3UAS", 5), ("ds3LCVs", 6), ("ds3PCVs", 7), ("ds3LESs", 8), ("ds3CCVs", 9), ("ds3CESs", 10), ("ds3CSESs", 11))).clone('ds3NoError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3TrapError.setStatus('current')
if mibBuilder.loadTexts: ds3TrapError.setDescription('This variable shows which kind of parameter or primitive caused the trap. This variable is really just a placeholder for the object sent in the DS3 TRAP, but can be read independently if required. The variable will hold the value at the latest trap. A value of ds3NoError shows no trap has occured')
ds3TrapLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ds3NoLoc", 1), ("ds3Near", 2), ("ds3Far", 3))).clone('ds3NoLoc')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3TrapLoc.setStatus('current')
if mibBuilder.loadTexts: ds3TrapLoc.setDescription('This variable shows whether the trap was caused by a problem at the local or remote end. This variable is really just a placeholder for the object sent in the DS3 TRAP, but can be read independently if required. The variable will hold the value at the latest trap. A value of ds3NoLoc shows no trap had occured.')
ds3TrapInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ds3NoInt", 1), ("ds3Fifteen", 2), ("ds3Twentyfour", 3))).clone('ds3NoInt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3TrapInterval.setStatus('current')
if mibBuilder.loadTexts: ds3TrapInterval.setDescription('This variable shows whether the counter which has crossed the threshold is a twenty four hour or fifteen minute counter. This variable is really just a placeholder for the object sent in the DS3 TRAP, but can be read independently if required. The variable will hold the value at the latest trap. A value of ds3NoInt shows no trap has occured.')
ds3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 0))
tcaTrap = NotificationType((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 109, 0, 1)).setObjects(("AT-DS3-MIB", "ds3TrapError"), ("AT-DS3-MIB", "ds3TrapLoc"), ("AT-DS3-MIB", "ds3TrapInterval"))
if mibBuilder.loadTexts: tcaTrap.setStatus('current')
if mibBuilder.loadTexts: tcaTrap.setDescription('A DS3 trap is generated when a threshold crossing alert occurs. This happens when an error count exceeds a pre determined value. The values are counted over 15 minute and 24 hour periods. Once a trap has occured in a given period it may not occur again within the same period.')
mibBuilder.exportSymbols("AT-DS3-MIB", ds3TrapError=ds3TrapError, ds3TrapLoc=ds3TrapLoc, ds3TrapTable=ds3TrapTable, tcaTrap=tcaTrap, ds3TcaTrapEnable=ds3TcaTrapEnable, PYSNMP_MODULE_ID=ds3, ds3=ds3, ds3Traps=ds3Traps, ds3TrapEntry=ds3TrapEntry, ds3TrapInterval=ds3TrapInterval)
