#
# PySNMP MIB module INTEL-ES480-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-ES480-SYSTEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:54:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
es480tAgent, = mibBuilder.importSymbols("INTEL-ES480-MIB", "es480tAgent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, iso, NotificationType, Integer32, Unsigned32, Gauge32, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "iso", "NotificationType", "Integer32", "Unsigned32", "Gauge32", "Bits", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
es480tSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 343, 6, 60, 1))
if mibBuilder.loadTexts: es480tSystem.setLastUpdated('0002140000Z')
if mibBuilder.loadTexts: es480tSystem.setOrganization('Intel')
if mibBuilder.loadTexts: es480tSystem.setContactInfo('www.intel.com')
if mibBuilder.loadTexts: es480tSystem.setDescription('Intel es480t system objects.')
es480tSaveConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("saveToPrimary", 1), ("saveToSecondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tSaveConfiguration.setStatus('current')
if mibBuilder.loadTexts: es480tSaveConfiguration.setDescription('When this object is set, the device will copy the contents of the configuration database to a buffer and save it to the persistant store specified by the value of the object. The save is performed asynchronously, and the snmp agent will continue to respond to both gets and sets while the save is taking place. A network management application may use the intelSaveStatus object to determine when the asynchronous save operation has completed.')
es480tSaveStatus = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("saveInProgress", 1), ("saveNotInProgress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSaveStatus.setStatus('current')
if mibBuilder.loadTexts: es480tSaveStatus.setDescription('This object will return the status of a save operation invoked by setting the intelSaveConfiguration object. A network management application can read this object to determine that a save operation has completed.')
es480tCurrentConfigInUse = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tCurrentConfigInUse.setStatus('current')
if mibBuilder.loadTexts: es480tCurrentConfigInUse.setDescription('Shows which NVRAM configuration store was used at last boot')
es480tConfigToUseOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tConfigToUseOnReboot.setStatus('current')
if mibBuilder.loadTexts: es480tConfigToUseOnReboot.setDescription('Controls which NVRAM configuration store will be used on next reboot.')
es480tOverTemperatureAlarm = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tOverTemperatureAlarm.setStatus('current')
if mibBuilder.loadTexts: es480tOverTemperatureAlarm.setDescription('Alarm status of overtemperature sensor in device enclosure.')
es480tCurrentTemperature = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tCurrentTemperature.setStatus('current')
if mibBuilder.loadTexts: es480tCurrentTemperature.setDescription('Current temperature in degrees celcius measured inside device enclosure.')
es480tFanStatusTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 9), )
if mibBuilder.loadTexts: es480tFanStatusTable.setStatus('current')
if mibBuilder.loadTexts: es480tFanStatusTable.setDescription('Table of operational status of all internal cooling fans.')
es480tFanStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 9, 1), ).setIndexNames((0, "INTEL-ES480-SYSTEM-MIB", "es480tFanNumber"))
if mibBuilder.loadTexts: es480tFanStatusEntry.setStatus('current')
if mibBuilder.loadTexts: es480tFanStatusEntry.setDescription('Entry in table of all internal cooling fans.')
es480tFanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tFanNumber.setStatus('current')
if mibBuilder.loadTexts: es480tFanNumber.setDescription('Identifier of cooling fan, numbered from the front and/or left side of device.')
es480tFanOperational = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 9, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tFanOperational.setStatus('current')
if mibBuilder.loadTexts: es480tFanOperational.setDescription('Operational status of a cooling fan.')
es480tPrimaryPowerOperational = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tPrimaryPowerOperational.setStatus('current')
if mibBuilder.loadTexts: es480tPrimaryPowerOperational.setDescription('Operational status of internal power supply of a device.')
es480tRedundantPowerStatus = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("presentOK", 2), ("presentNotOK", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tRedundantPowerStatus.setStatus('current')
if mibBuilder.loadTexts: es480tRedundantPowerStatus.setDescription('Operational status of an external redundant power supply to a device.')
es480tRedundantPowerAlarm = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tRedundantPowerAlarm.setStatus('current')
if mibBuilder.loadTexts: es480tRedundantPowerAlarm.setDescription('Alarm state of an external redundant power supply to a device. Alarm state indicates either fan failure or overtemperature condition.')
es480tPrimarySoftwareRev = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tPrimarySoftwareRev.setStatus('current')
if mibBuilder.loadTexts: es480tPrimarySoftwareRev.setDescription('The software revision of the primary image stored in this device. This string will have a zero length if the revision is unknown, invalid or not present. This will also be reported in RMON2 probeSoftwareRev if this is the software image currently running in the device.')
es480tSecondarySoftwareRev = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSecondarySoftwareRev.setStatus('current')
if mibBuilder.loadTexts: es480tSecondarySoftwareRev.setDescription('The software revision of the secondary image stored in this device. This string will have a zero length if the revision is unknown, invalid or not present. This will also be reported in RMON2 probeSoftwareRev if this is the software image currently running in the device.')
es480tImageToUseOnReboot = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tImageToUseOnReboot.setStatus('current')
if mibBuilder.loadTexts: es480tImageToUseOnReboot.setDescription('Controls which image will be used on next reboot.')
es480tSystemID = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSystemID.setStatus('current')
if mibBuilder.loadTexts: es480tSystemID.setDescription('This represents the System ID of the Summit Switch.')
es480tSystemBoardID = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSystemBoardID.setStatus('current')
if mibBuilder.loadTexts: es480tSystemBoardID.setDescription('This represents the Board ID of the Summit Switch.')
es480tSystemLeftBoardID = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSystemLeftBoardID.setStatus('current')
if mibBuilder.loadTexts: es480tSystemLeftBoardID.setDescription('This represents the Left Board ID of the Summit Switch.')
es480tSystemRightBoardID = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tSystemRightBoardID.setStatus('current')
if mibBuilder.loadTexts: es480tSystemRightBoardID.setDescription('This represents the Right Board ID of the Summit Switch.')
es480tInputPowerVoltage = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v110", 1), ("v220", 2), ("v48DC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tInputPowerVoltage.setStatus('current')
if mibBuilder.loadTexts: es480tInputPowerVoltage.setDescription('The input power voltage at which the system is currently operating.')
es480tPowerStatus = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("presentOK", 2), ("presentNotOK", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tPowerStatus.setStatus('current')
if mibBuilder.loadTexts: es480tPowerStatus.setDescription('Operational status of the power supply to a device.')
es480tPowerAlarm = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: es480tPowerAlarm.setStatus('current')
if mibBuilder.loadTexts: es480tPowerAlarm.setDescription('Alarm state of the power supply to a device. Alarm state indicates either fan failure or overtemperature condition.')
es480tRmonEnable = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 60, 1, 23), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: es480tRmonEnable.setStatus('current')
if mibBuilder.loadTexts: es480tRmonEnable.setDescription('Setting this to true will cause the agent to start collecting RMON statistics.')
mibBuilder.exportSymbols("INTEL-ES480-SYSTEM-MIB", es480tSaveConfiguration=es480tSaveConfiguration, es480tSecondarySoftwareRev=es480tSecondarySoftwareRev, es480tPrimarySoftwareRev=es480tPrimarySoftwareRev, es480tPowerStatus=es480tPowerStatus, es480tImageToUseOnReboot=es480tImageToUseOnReboot, es480tFanNumber=es480tFanNumber, es480tSystemID=es480tSystemID, es480tFanStatusTable=es480tFanStatusTable, es480tSystemBoardID=es480tSystemBoardID, es480tPrimaryPowerOperational=es480tPrimaryPowerOperational, es480tFanOperational=es480tFanOperational, es480tPowerAlarm=es480tPowerAlarm, es480tFanStatusEntry=es480tFanStatusEntry, es480tSaveStatus=es480tSaveStatus, es480tCurrentConfigInUse=es480tCurrentConfigInUse, es480tRmonEnable=es480tRmonEnable, es480tOverTemperatureAlarm=es480tOverTemperatureAlarm, es480tInputPowerVoltage=es480tInputPowerVoltage, es480tConfigToUseOnReboot=es480tConfigToUseOnReboot, es480tRedundantPowerStatus=es480tRedundantPowerStatus, es480tSystemLeftBoardID=es480tSystemLeftBoardID, PYSNMP_MODULE_ID=es480tSystem, es480tCurrentTemperature=es480tCurrentTemperature, es480tSystem=es480tSystem, es480tRedundantPowerAlarm=es480tRedundantPowerAlarm, es480tSystemRightBoardID=es480tSystemRightBoardID)
