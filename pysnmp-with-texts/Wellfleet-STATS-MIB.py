#
# PySNMP MIB module Wellfleet-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-STATS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:41:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, TimeTicks, Unsigned32, Counter64, NotificationType, ModuleIdentity, Counter32, Bits, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "TimeTicks", "Unsigned32", "Counter64", "NotificationType", "ModuleIdentity", "Counter32", "Bits", "IpAddress", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfStatsDcGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfStatsDcGroup")
wfStatsDc = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1))
wfStatsDcDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcDisable.setDescription('Enable/Disable Statistical Data Collection.')
wfStatsDcVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcVolume.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcVolume.setDescription('Indicates the file system volume number to which the Statistical Data Collection info files will be written. The volume number corresponds to the slot number on which the volume resides. ')
wfStatsDcFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcFilePrefix.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcFilePrefix.setDescription('The name of statistical data files.')
wfStatsDcUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcUpdateInterval.setStatus('obsolete')
if mibBuilder.loadTexts: wfStatsDcUpdateInterval.setDescription('This number specifies the interval (number of minutes) for the STATS process to collect and update STATS data.')
wfStatsDcStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcStoreInterval.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcStoreInterval.setDescription('This number specifies the interval (number of minutes) for the STATS master process to collect and update STATS data from each slot and to write statistical data on to the file system. ')
wfStatsDcUpdateData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcUpdateData.setStatus('obsolete')
if mibBuilder.loadTexts: wfStatsDcUpdateData.setDescription('Setting this attribute to a non-zero value will cause an immediate updating of the statistical data. Once activated, this attribute should be reset to zero to allow subsequent activations. ')
wfStatsDcStoreData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcStoreData.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcStoreData.setDescription('Setting this attribute to a non-zero value will cause an immediate writing of the statistical data info to a file in SRAM. Once activated, this attribute should be reset to zero to allow subsequent activations. ')
wfStatsDcSwitchId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcSwitchId.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcSwitchId.setDescription('switch id used in the statistical data file to identify BNX. If it is not given explicitely, it will be assigned with wfSysName.')
wfStatsDcEnableAll = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcEnableAll.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcEnableAll.setDescription('This attribute, if set, will overwrite individual logical line enable/disable setting of statistical data collection.')
wfStatsDcMaxNumFiles = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 144))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcMaxNumFiles.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcMaxNumFiles.setDescription('This attribute sets the MAX number of STATS files in an SRAM. If this number is reached, before writing the next STATS DC file to SRAM, the older STATS DC file will be delete. Note: Value 0 has the special meaning that this limitation will not take into effect. The DC file will be written in the round robin manner.')
wfStatsDcFrVcDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcFrVcDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcFrVcDisable.setDescription('When this switch is turned on, the stats data of all VCs of the configured circuit will be collected. This is per BNX.')
wfStatsDcState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcState.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcState.setDescription('current state.')
wfStatsDcHssiFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 13), Gauge32().clone(4278190080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcHssiFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcHssiFields.setDescription('************************************************************')
wfStatsDcSyncFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 14), Gauge32().clone(4278190080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcSyncFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcSyncFields.setDescription('************************************************************')
wfStatsDcDs1E1Fields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 15), Gauge32().clone(4294836224)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcDs1E1Fields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcDs1E1Fields.setDescription('************************************************************')
wfStatsDcFrSwVcFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 16), Gauge32().clone(4294966272)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcFrSwVcFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcFrSwVcFields.setDescription('************************************************************')
wfStatsDcCctCngcFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 17), Gauge32().clone(4294901760)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcCctCngcFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcCctCngcFields.setDescription('************************************************************')
wfStatsDcFddiFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcFddiFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcFddiFields.setDescription('************************************************************')
wfStatsDcCctCngcDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcCctCngcDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcCctCngcDisable.setDescription('This attribute is to enable.disable frsw cngc data collection')
wfStatsDcLbcFileDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcLbcFileDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcFileDisable.setDescription('To enable/disable LBC file write.')
wfStatsDcAtmzPhyFields = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 1, 21), Gauge32().clone(4294967264)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcAtmzPhyFields.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcAtmzPhyFields.setDescription('Selection of Atmz Line Attributes for Data Collection ')
wfStatsDcMediaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 2), )
if mibBuilder.loadTexts: wfStatsDcMediaTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcMediaTable.setDescription('STATS Generic Media table for Generic media drivers using Line Number in their mib.')
wfStatsDcMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 2, 1), ).setIndexNames((0, "Wellfleet-STATS-MIB", "wfStatsDcMediaLineNumber"))
if mibBuilder.loadTexts: wfStatsDcMediaEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcMediaEntry.setDescription('The parameters for Stats.')
wfStatsDcMediaDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcMediaDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcMediaDelete.setDescription('Indicates status of this entry.')
wfStatsDcMediaLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcMediaLineNumber.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcMediaLineNumber.setDescription('Instance identifier; this indicates which line number NOTE: Line number is based on the following scheme: msb 0 00 00 00 0 00 lsb resv. chan type slot mod conn')
wfStatsDcLbcTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3), )
if mibBuilder.loadTexts: wfStatsDcLbcTable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTable.setDescription('LBC Entry using line number as its index.')
wfStatsDcLbcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1), ).setIndexNames((0, "Wellfleet-STATS-MIB", "wfStatsDcLbcLineNumber"))
if mibBuilder.loadTexts: wfStatsDcLbcEntry.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcEntry.setDescription('LBC Entry using line number as its index.')
wfStatsDcLbcDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcLbcDelete.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcDelete.setDescription('To create or delete this instance.')
wfStatsDcLbcDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcLbcDisable.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcDisable.setDescription("When this switch is turned on, BNX will read the configured trunk line's rx/tx counter value at a predetermined time frequency.")
wfStatsDcLbcLineNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcLineNumber.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcLineNumber.setDescription('line number for this line instance')
wfStatsDcLbcUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStatsDcLbcUpdateInterval.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcUpdateInterval.setDescription('The value must be divisible into 60. In another word, 60/value must be an integer.')
wfStatsDcLbcState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcState.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcState.setDescription('TBC state ')
wfStatsDcLbcRxMaxDelta0 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta0.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta0.setDescription('Maximum number of the rx bytes count for this instance in hour 0.')
wfStatsDcLbcTxMaxDelta0 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta0.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta0.setDescription('Maximum number of the tx bytes count for this instance in hour 0.')
wfStatsDcLbcRxMaxDelta1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta1.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta1.setDescription('Maximum number of the rx bytes count for this instance in hour 1.')
wfStatsDcLbcTxMaxDelta1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta1.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta1.setDescription('Maximum number of the tx bytes count for this instance in hour 1.')
wfStatsDcLbcRxMaxDelta2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta2.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta2.setDescription('Maximum number of the rx bytes count for this instance in hour 2.')
wfStatsDcLbcTxMaxDelta2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta2.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta2.setDescription('Maximum number of the tx bytes count for this instance in hour 2.')
wfStatsDcLbcRxMaxDelta3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta3.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta3.setDescription('Maximum number of the rx bytes count for this instance in hour 3.')
wfStatsDcLbcTxMaxDelta3 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta3.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta3.setDescription('Maximum number of the tx bytes count for this instance in hour 3.')
wfStatsDcLbcRxMaxDelta4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta4.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta4.setDescription('Maximum number of the rx bytes count for this instance in hour 4.')
wfStatsDcLbcTxMaxDelta4 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta4.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta4.setDescription('Maximum number of the tx bytes count for this instance in hour 4.')
wfStatsDcLbcRxMaxDelta5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta5.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta5.setDescription('Maximum number of the rx bytes count for this instance in hour 5.')
wfStatsDcLbcTxMaxDelta5 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta5.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta5.setDescription('Maximum number of the tx bytes count for this instance in hour 5.')
wfStatsDcLbcRxMaxDelta6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta6.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta6.setDescription('Maximum number of the rx bytes count for this instance in hour 6.')
wfStatsDcLbcTxMaxDelta6 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta6.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta6.setDescription('Maximum number of the tx bytes count for this instance in hour 6.')
wfStatsDcLbcRxMaxDelta7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta7.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta7.setDescription('Maximum number of the rx bytes count for this instance in hour 7.')
wfStatsDcLbcTxMaxDelta7 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta7.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta7.setDescription('Maximum number of the tx bytes count for this instance in hour 7.')
wfStatsDcLbcRxMaxDelta8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta8.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta8.setDescription('Maximum number of the rx bytes count for this instance in hour 8.')
wfStatsDcLbcTxMaxDelta8 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta8.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta8.setDescription('Maximum number of the tx bytes count for this instance in hour 8.')
wfStatsDcLbcRxMaxDelta9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta9.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta9.setDescription('Maximum number of the rx bytes count for this instance in hour 9.')
wfStatsDcLbcTxMaxDelta9 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta9.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta9.setDescription('Maximum number of the tx bytes count for this instance in hour 9.')
wfStatsDcLbcRxMaxDelta10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta10.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta10.setDescription('Maximum number of the rx bytes count for this instance in hour 10.')
wfStatsDcLbcTxMaxDelta10 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta10.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta10.setDescription('Maximum number of the tx bytes count for this instance in hour 10.')
wfStatsDcLbcRxMaxDelta11 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta11.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta11.setDescription('Maximum number of the rx bytes count for this instance in hour 11.')
wfStatsDcLbcTxMaxDelta11 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta11.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta11.setDescription('Maximum number of the tx bytes count for this instance in hour 11.')
wfStatsDcLbcRxMaxDelta12 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta12.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta12.setDescription('Maximum number of the rx bytes count for this instance in hour 12.')
wfStatsDcLbcTxMaxDelta12 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta12.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta12.setDescription('Maximum number of the tx bytes count for this instance in hour 12.')
wfStatsDcLbcRxMaxDelta13 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta13.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta13.setDescription('Maximum number of the rx bytes count for this instance in hour 13.')
wfStatsDcLbcTxMaxDelta13 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta13.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta13.setDescription('Maximum number of the tx bytes count for this instance in hour 13.')
wfStatsDcLbcRxMaxDelta14 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta14.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta14.setDescription('Maximum number of the rx bytes count for this instance in hour 14.')
wfStatsDcLbcTxMaxDelta14 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta14.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta14.setDescription('Maximum number of the tx bytes count for this instance in hour 14.')
wfStatsDcLbcRxMaxDelta15 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta15.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta15.setDescription('Maximum number of the rx bytes count for this instance in hour 15.')
wfStatsDcLbcTxMaxDelta15 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta15.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta15.setDescription('Maximum number of the tx bytes count for this instance in hour 15.')
wfStatsDcLbcRxMaxDelta16 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta16.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta16.setDescription('Maximum number of the rx bytes count for this instance in hour 16.')
wfStatsDcLbcTxMaxDelta16 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta16.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta16.setDescription('Maximum number of the tx bytes count for this instance in hour 16.')
wfStatsDcLbcRxMaxDelta17 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta17.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta17.setDescription('Maximum number of the rx bytes count for this instance in hour 17.')
wfStatsDcLbcTxMaxDelta17 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta17.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta17.setDescription('Maximum number of the tx bytes count for this instance in hour 17.')
wfStatsDcLbcRxMaxDelta18 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta18.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta18.setDescription('Maximum number of the rx bytes count for this instance in hour 18.')
wfStatsDcLbcTxMaxDelta18 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta18.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta18.setDescription('Maximum number of the tx bytes count for this instance in hour 18.')
wfStatsDcLbcRxMaxDelta19 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta19.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta19.setDescription('Maximum number of the rx bytes count for this instance in hour 19.')
wfStatsDcLbcTxMaxDelta19 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta19.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta19.setDescription('Maximum number of the tx bytes count for this instance in hour 19.')
wfStatsDcLbcRxMaxDelta20 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta20.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta20.setDescription('Maximum number of the rx bytes count for this instance in hour 20.')
wfStatsDcLbcTxMaxDelta20 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta20.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta20.setDescription('Maximum number of the tx bytes count for this instance in hour 20.')
wfStatsDcLbcRxMaxDelta21 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta21.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta21.setDescription('Maximum number of the rx bytes count for this instance in hour 21.')
wfStatsDcLbcTxMaxDelta21 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta21.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta21.setDescription('Maximum number of the tx bytes count for this instance in hour 21.')
wfStatsDcLbcRxMaxDelta22 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta22.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta22.setDescription('Maximum number of the rx bytes count for this instance in hour 22.')
wfStatsDcLbcTxMaxDelta22 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta22.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta22.setDescription('Maximum number of the tx bytes count for this instance in hour 22.')
wfStatsDcLbcRxMaxDelta23 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta23.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcRxMaxDelta23.setDescription('Maximum number of the rx bytes count for this instance in hour 23.')
wfStatsDcLbcTxMaxDelta23 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 17, 3, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta23.setStatus('mandatory')
if mibBuilder.loadTexts: wfStatsDcLbcTxMaxDelta23.setDescription('Maximum number of the tx bytes count for this instance in hour 23.')
mibBuilder.exportSymbols("Wellfleet-STATS-MIB", wfStatsDcCctCngcFields=wfStatsDcCctCngcFields, wfStatsDcLbcTxMaxDelta20=wfStatsDcLbcTxMaxDelta20, wfStatsDcLbcTxMaxDelta2=wfStatsDcLbcTxMaxDelta2, wfStatsDcLbcUpdateInterval=wfStatsDcLbcUpdateInterval, wfStatsDcLbcRxMaxDelta4=wfStatsDcLbcRxMaxDelta4, wfStatsDcLbcRxMaxDelta17=wfStatsDcLbcRxMaxDelta17, wfStatsDcUpdateInterval=wfStatsDcUpdateInterval, wfStatsDcLbcTxMaxDelta12=wfStatsDcLbcTxMaxDelta12, wfStatsDcLbcDisable=wfStatsDcLbcDisable, wfStatsDcLbcRxMaxDelta3=wfStatsDcLbcRxMaxDelta3, wfStatsDcLbcTxMaxDelta10=wfStatsDcLbcTxMaxDelta10, wfStatsDcLbcTxMaxDelta23=wfStatsDcLbcTxMaxDelta23, wfStatsDcCctCngcDisable=wfStatsDcCctCngcDisable, wfStatsDcLbcRxMaxDelta18=wfStatsDcLbcRxMaxDelta18, wfStatsDcLbcRxMaxDelta0=wfStatsDcLbcRxMaxDelta0, wfStatsDcEnableAll=wfStatsDcEnableAll, wfStatsDcLbcRxMaxDelta8=wfStatsDcLbcRxMaxDelta8, wfStatsDcSwitchId=wfStatsDcSwitchId, wfStatsDcMaxNumFiles=wfStatsDcMaxNumFiles, wfStatsDcLbcTxMaxDelta6=wfStatsDcLbcTxMaxDelta6, wfStatsDcMediaLineNumber=wfStatsDcMediaLineNumber, wfStatsDcLbcTxMaxDelta16=wfStatsDcLbcTxMaxDelta16, wfStatsDcSyncFields=wfStatsDcSyncFields, wfStatsDcState=wfStatsDcState, wfStatsDcLbcFileDisable=wfStatsDcLbcFileDisable, wfStatsDcLbcTxMaxDelta14=wfStatsDcLbcTxMaxDelta14, wfStatsDcLbcTxMaxDelta3=wfStatsDcLbcTxMaxDelta3, wfStatsDcMediaTable=wfStatsDcMediaTable, wfStatsDcLbcTxMaxDelta5=wfStatsDcLbcTxMaxDelta5, wfStatsDcFddiFields=wfStatsDcFddiFields, wfStatsDcLbcTxMaxDelta13=wfStatsDcLbcTxMaxDelta13, wfStatsDcLbcTxMaxDelta7=wfStatsDcLbcTxMaxDelta7, wfStatsDcHssiFields=wfStatsDcHssiFields, wfStatsDcFrSwVcFields=wfStatsDcFrSwVcFields, wfStatsDcMediaEntry=wfStatsDcMediaEntry, wfStatsDcUpdateData=wfStatsDcUpdateData, wfStatsDc=wfStatsDc, wfStatsDcLbcRxMaxDelta16=wfStatsDcLbcRxMaxDelta16, wfStatsDcLbcTxMaxDelta15=wfStatsDcLbcTxMaxDelta15, wfStatsDcMediaDelete=wfStatsDcMediaDelete, wfStatsDcLbcRxMaxDelta15=wfStatsDcLbcRxMaxDelta15, wfStatsDcLbcTable=wfStatsDcLbcTable, wfStatsDcLbcTxMaxDelta22=wfStatsDcLbcTxMaxDelta22, wfStatsDcLbcTxMaxDelta9=wfStatsDcLbcTxMaxDelta9, wfStatsDcLbcRxMaxDelta7=wfStatsDcLbcRxMaxDelta7, wfStatsDcLbcRxMaxDelta9=wfStatsDcLbcRxMaxDelta9, wfStatsDcLbcRxMaxDelta22=wfStatsDcLbcRxMaxDelta22, wfStatsDcLbcRxMaxDelta6=wfStatsDcLbcRxMaxDelta6, wfStatsDcLbcState=wfStatsDcLbcState, wfStatsDcLbcTxMaxDelta11=wfStatsDcLbcTxMaxDelta11, wfStatsDcFilePrefix=wfStatsDcFilePrefix, wfStatsDcStoreInterval=wfStatsDcStoreInterval, wfStatsDcFrVcDisable=wfStatsDcFrVcDisable, wfStatsDcLbcRxMaxDelta20=wfStatsDcLbcRxMaxDelta20, wfStatsDcLbcTxMaxDelta8=wfStatsDcLbcTxMaxDelta8, wfStatsDcStoreData=wfStatsDcStoreData, wfStatsDcLbcTxMaxDelta18=wfStatsDcLbcTxMaxDelta18, wfStatsDcLbcTxMaxDelta0=wfStatsDcLbcTxMaxDelta0, wfStatsDcLbcRxMaxDelta23=wfStatsDcLbcRxMaxDelta23, wfStatsDcAtmzPhyFields=wfStatsDcAtmzPhyFields, wfStatsDcVolume=wfStatsDcVolume, wfStatsDcLbcRxMaxDelta14=wfStatsDcLbcRxMaxDelta14, wfStatsDcLbcDelete=wfStatsDcLbcDelete, wfStatsDcLbcRxMaxDelta13=wfStatsDcLbcRxMaxDelta13, wfStatsDcLbcRxMaxDelta21=wfStatsDcLbcRxMaxDelta21, wfStatsDcLbcRxMaxDelta10=wfStatsDcLbcRxMaxDelta10, wfStatsDcLbcLineNumber=wfStatsDcLbcLineNumber, wfStatsDcLbcTxMaxDelta21=wfStatsDcLbcTxMaxDelta21, wfStatsDcLbcRxMaxDelta19=wfStatsDcLbcRxMaxDelta19, wfStatsDcLbcRxMaxDelta5=wfStatsDcLbcRxMaxDelta5, wfStatsDcDisable=wfStatsDcDisable, wfStatsDcLbcRxMaxDelta1=wfStatsDcLbcRxMaxDelta1, wfStatsDcLbcTxMaxDelta4=wfStatsDcLbcTxMaxDelta4, wfStatsDcLbcTxMaxDelta1=wfStatsDcLbcTxMaxDelta1, wfStatsDcLbcTxMaxDelta17=wfStatsDcLbcTxMaxDelta17, wfStatsDcDs1E1Fields=wfStatsDcDs1E1Fields, wfStatsDcLbcTxMaxDelta19=wfStatsDcLbcTxMaxDelta19, wfStatsDcLbcRxMaxDelta11=wfStatsDcLbcRxMaxDelta11, wfStatsDcLbcRxMaxDelta2=wfStatsDcLbcRxMaxDelta2, wfStatsDcLbcEntry=wfStatsDcLbcEntry, wfStatsDcLbcRxMaxDelta12=wfStatsDcLbcRxMaxDelta12)
