#
# PySNMP MIB module CISCO-H320-DIAL-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-H320-DIAL-CONTROL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:59:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
cCallHistoryIndex, = mibBuilder.importSymbols("CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
CvcGUid, CvcH320CallType, CvcVideoCoderRate = mibBuilder.importSymbols("CISCO-VOICE-COMMON-DIAL-CONTROL-MIB", "CvcGUid", "CvcH320CallType", "CvcVideoCoderRate")
AbsoluteCounter32, callActiveSetupTime, callActiveIndex = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "AbsoluteCounter32", "callActiveSetupTime", "callActiveIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, TimeTicks, Bits, Gauge32, Unsigned32, Integer32, Counter32, Counter64, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "TimeTicks", "Bits", "Gauge32", "Unsigned32", "Integer32", "Counter32", "Counter64", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoH320DialControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 128))
ciscoH320DialControlMIB.setRevisions(('2006-02-23 00:00', '2005-09-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoH320DialControlMIB.setRevisionsDescriptions(('Replace AUGMENTS clause by INDEX clause in the following objects: cvH320CallHistoryEntry cvH320CallActiveEntry.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoH320DialControlMIB.setLastUpdated('200602230000Z')
if mibBuilder.loadTexts: ciscoH320DialControlMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoH320DialControlMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-voice@cisco.com')
if mibBuilder.loadTexts: ciscoH320DialControlMIB.setDescription('This MIB module enhances the IETF Dial Control MIB (RFC2128) by providing H.320 call information over a telephony network. ITU-T Recommandation H.320 is the ITU standard covers audio and video to be shared among narrow-band visual telephone systems and terminal equipments over ISDN.')
ciscoH320DialControlMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 0))
ciscoH320DialControlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 1))
ciscoH320DialControlMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 2))
cvH320CallHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1))
cvH320CallActive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2))
cvH320CallHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1), )
if mibBuilder.loadTexts: cvH320CallHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryTable.setDescription('This table is the H.320 extension to the call history table of IETF Dial Control MIB. It contains H.320 call leg information about specific voice encapsulation call with H.320 setup.')
cvH320CallHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-DIAL-CONTROL-MIB", "cCallHistoryIndex"))
if mibBuilder.loadTexts: cvH320CallHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryEntry.setDescription('The information regarding a single voice encapsulation call with H.320 setup. An entry into this table is created when its associated call history entry in the IETF Dial Control MIB is created and the call history entry contains information for the call establishment to a voice encapsulation peer with video call information type.')
cvH320CallHistoryConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryConnectionId.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryConnectionId.setDescription('The global call identifier for a H.320 call.')
cvH320CallHistoryIncomingConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 2), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryIncomingConnectionId.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryIncomingConnectionId.setDescription('The global call identifier for a H.320 call which will be shared with the associated call legs.')
cvH320CallHistoryH320CallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 3), CvcH320CallType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryH320CallType.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryH320CallType.setDescription('The type of H.320 call.')
cvH320CallHistoryUsedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryUsedBandwidth.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryUsedBandwidth.setDescription('The bandwidth for the H.320 call session.')
cvH320CallHistoryTxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 5), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in transmit direction for a H.320 call session.')
cvH320CallHistoryTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 6), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoPackets.setDescription('The total number of video data packets transmitted for the H.320 call session.')
cvH320CallHistoryTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 7), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryTxVideoBytes.setDescription('The total number of video data bytes transmitted for the H.320 call session.')
cvH320CallHistoryRxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 8), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in receive direction for a H.320 call session.')
cvH320CallHistoryRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 9), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoPackets.setDescription('The total number of video data packets received for the H.320 call session.')
cvH320CallHistoryRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 1, 1, 1, 10), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryRxVideoBytes.setDescription('The total number of video data bytes received for the H.320 call session.')
cvH320CallActiveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1), )
if mibBuilder.loadTexts: cvH320CallActiveTable.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveTable.setDescription('This table is the H.320 extension to the active call table of IETF Dial Control MIB. It contains H.320 call leg information about specific voice encapsulation call with H.320 setup.')
cvH320CallActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1), ).setIndexNames((0, "DIAL-CONTROL-MIB", "callActiveSetupTime"), (0, "DIAL-CONTROL-MIB", "callActiveIndex"))
if mibBuilder.loadTexts: cvH320CallActiveEntry.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveEntry.setDescription('The information regarding a single voice encapsulation call with H.320 setup. An entry into this table is created when its associated call active entry in the IETF Dial Control MIB is created. The call active entry contains information for the call establishment to a voice encapsulation peer with video call information type. The entry is deleted when its associated call active entry in the IETF Dial Control MIB is deleted.')
cvH320CallActiveConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 1), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveConnectionId.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveConnectionId.setDescription('The global call identifier for a H.320 call.')
cvH320CallActiveIncomingConnectionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 2), CvcGUid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveIncomingConnectionId.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveIncomingConnectionId.setDescription('The global call identifier for the gateway call which will be shared with the associated call legs.')
cvH320CallActiveH320CallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 3), CvcH320CallType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveH320CallType.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveH320CallType.setDescription('The type of H.320 call.')
cvH320CallActiveUsedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveUsedBandwidth.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveUsedBandwidth.setDescription('The bandwidth for the H.320 call session.')
cvH320CallActiveTxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 5), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveTxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveTxVideoCodec.setDescription('The negotiated encoding type used to compress the video data in transmit direction for the H.320 call session.')
cvH320CallActiveTxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 6), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveTxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveTxVideoPackets.setDescription('The total number of video data packets transmitted for the H.320 call session.')
cvH320CallActiveTxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 7), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveTxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveTxVideoBytes.setDescription('The total number of video data bytes transmitted for the H.320 call session.')
cvH320CallActiveRxVideoCodec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 8), CvcVideoCoderRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveRxVideoCodec.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveRxVideoCodec.setDescription('The object contains the negotiated video coder rate in receive direction for the H.320 call session.')
cvH320CallActiveRxVideoPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 9), AbsoluteCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveRxVideoPackets.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveRxVideoPackets.setDescription('The total number of video data packets received for the H.320 call session.')
cvH320CallActiveRxVideoBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 128, 1, 2, 1, 1, 10), AbsoluteCounter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cvH320CallActiveRxVideoBytes.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveRxVideoBytes.setDescription('The total number of video data bytes received for the H.320 call session.')
ciscoH320DialControlMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1))
ciscoH320DialControlMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1, 1))
ciscoH320DialControlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1, 2))
ciscoH320DialControlMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1, 1, 1)).setObjects(("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryGroup"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoH320DialControlMIBCompliance = ciscoH320DialControlMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoH320DialControlMIBCompliance.setDescription('The compliance statement for entities which implement the CISCO H320 DIAL CONTROL MIB')
cvH320CallHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1, 2, 1)).setObjects(("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryConnectionId"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryIncomingConnectionId"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryH320CallType"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryUsedBandwidth"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryTxVideoCodec"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryTxVideoPackets"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryTxVideoBytes"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryRxVideoCodec"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryRxVideoPackets"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallHistoryRxVideoBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvH320CallHistoryGroup = cvH320CallHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: cvH320CallHistoryGroup.setDescription('A collection of objects providing the H.320 Call History entry capability.')
cvH320CallActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 128, 2, 1, 2, 2)).setObjects(("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveConnectionId"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveIncomingConnectionId"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveH320CallType"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveUsedBandwidth"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveTxVideoCodec"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveTxVideoPackets"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveTxVideoBytes"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveRxVideoCodec"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveRxVideoPackets"), ("CISCO-H320-DIAL-CONTROL-MIB", "cvH320CallActiveRxVideoBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cvH320CallActiveGroup = cvH320CallActiveGroup.setStatus('current')
if mibBuilder.loadTexts: cvH320CallActiveGroup.setDescription('A collection of objects providing the H.320 Call Active entry capability.')
mibBuilder.exportSymbols("CISCO-H320-DIAL-CONTROL-MIB", cvH320CallHistory=cvH320CallHistory, ciscoH320DialControlMIBConform=ciscoH320DialControlMIBConform, cvH320CallActiveRxVideoPackets=cvH320CallActiveRxVideoPackets, cvH320CallActive=cvH320CallActive, cvH320CallActiveTable=cvH320CallActiveTable, ciscoH320DialControlMIBCompliances=ciscoH320DialControlMIBCompliances, cvH320CallActiveGroup=cvH320CallActiveGroup, cvH320CallHistoryUsedBandwidth=cvH320CallHistoryUsedBandwidth, cvH320CallHistoryTxVideoBytes=cvH320CallHistoryTxVideoBytes, cvH320CallActiveConnectionId=cvH320CallActiveConnectionId, ciscoH320DialControlMIBGroups=ciscoH320DialControlMIBGroups, cvH320CallActiveUsedBandwidth=cvH320CallActiveUsedBandwidth, cvH320CallHistoryRxVideoCodec=cvH320CallHistoryRxVideoCodec, cvH320CallHistoryTable=cvH320CallHistoryTable, ciscoH320DialControlMIB=ciscoH320DialControlMIB, cvH320CallActiveTxVideoBytes=cvH320CallActiveTxVideoBytes, cvH320CallHistoryIncomingConnectionId=cvH320CallHistoryIncomingConnectionId, ciscoH320DialControlMIBNotifs=ciscoH320DialControlMIBNotifs, cvH320CallHistoryGroup=cvH320CallHistoryGroup, cvH320CallActiveRxVideoCodec=cvH320CallActiveRxVideoCodec, PYSNMP_MODULE_ID=ciscoH320DialControlMIB, ciscoH320DialControlMIBConformance=ciscoH320DialControlMIBConformance, cvH320CallActiveEntry=cvH320CallActiveEntry, cvH320CallActiveRxVideoBytes=cvH320CallActiveRxVideoBytes, cvH320CallHistoryTxVideoCodec=cvH320CallHistoryTxVideoCodec, cvH320CallActiveTxVideoPackets=cvH320CallActiveTxVideoPackets, cvH320CallHistoryEntry=cvH320CallHistoryEntry, cvH320CallHistoryConnectionId=cvH320CallHistoryConnectionId, cvH320CallHistoryRxVideoPackets=cvH320CallHistoryRxVideoPackets, cvH320CallHistoryTxVideoPackets=cvH320CallHistoryTxVideoPackets, ciscoH320DialControlMIBObjects=ciscoH320DialControlMIBObjects, ciscoH320DialControlMIBCompliance=ciscoH320DialControlMIBCompliance, cvH320CallActiveTxVideoCodec=cvH320CallActiveTxVideoCodec, cvH320CallHistoryRxVideoBytes=cvH320CallHistoryRxVideoBytes, cvH320CallActiveH320CallType=cvH320CallActiveH320CallType, cvH320CallHistoryH320CallType=cvH320CallHistoryH320CallType, cvH320CallActiveIncomingConnectionId=cvH320CallActiveIncomingConnectionId)
