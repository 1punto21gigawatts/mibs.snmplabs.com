#
# PySNMP MIB module HUAWEI-ISIS-CONF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-ISIS-CONF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:45:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifName, = mibBuilder.importSymbols("IF-MIB", "ifName")
isisCircIfIndex, isisPduLspId, isisSysInstance, isisAdjState, isisSysLevelIndex = mibBuilder.importSymbols("ISIS-MIB", "isisCircIfIndex", "isisPduLspId", "isisSysInstance", "isisAdjState", "isisSysLevelIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
iso, NotificationType, Gauge32, IpAddress, MibIdentifier, Unsigned32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, TimeTicks, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "NotificationType", "Gauge32", "IpAddress", "MibIdentifier", "Unsigned32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "TimeTicks", "Bits", "Integer32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
hwISIS = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24))
hwISIS.setRevisions(('2015-10-15 11:00', '2015-08-27 19:00', '2015-04-08 11:47', '2015-03-13 09:00', '2014-11-06 15:18', '2014-01-15 17:10', '2013-08-08 11:31', '2013-04-01 11:53', '2003-08-11 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwISIS.setRevisionsDescriptions(('revision 2.1.8', 'revision 2.1.7', 'revision 2.1.6', 'revision 2.1.5', 'revision 2.1.4', 'revision 2.1.3', 'revision 2.1.2', 'revision 2.1.1', 'init',))
if mibBuilder.loadTexts: hwISIS.setLastUpdated('201510151100Z')
if mibBuilder.loadTexts: hwISIS.setOrganization('Huawei Technologies Co.,Ltd.')
if mibBuilder.loadTexts: hwISIS.setContactInfo("Huawei Industrial Base Bantian, Longgang Shenzhen 518129 People's Republic of China Website: http://www.huawei.com Email: support@huawei.com ")
if mibBuilder.loadTexts: hwISIS.setDescription(' The HUAWEI PRIVATE MIB contains objects belonging to processes of the IS-IS protocol existing on the system. It defines the model used to represent data that exists elsewhere in the system and on peripheral devices. There are no constraints on this MIB.')
class SystemID(TextualConvention, OctetString):
    description = 'A system ID.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class InetAddress(TextualConvention, OctetString):
    description = "Denotes a generic Internet address. An InetAddress value is always interpreted within the context of an InetAddressType value. Every usage of the InetAddress textual convention is required to specify the InetAddressType object that provides the context. It is suggested that the InetAddressType object be logically registered before the object(s) that use the InetAddress textual convention, if they appear in the same logical row. The value of an InetAddress object must always be consistent with the value of the associated InetAddressType object. Attempts to set an InetAddress object to a value inconsistent with the associated InetAddressType must fail with an inconsistentValue error. When this textual convention is used as the syntax of an index object, there may be issues with the limit of 128 sub-identifiers specified in SMIv2, STD 58. In this case, the object definition MUST include a 'SIZE' clause to limit the number of potential instance sub-identifiers; otherwise the applicable constraints MUST be stated in the appropriate conceptual row DESCRIPTION clauses, or in the surrounding documentation if there is no single DESCRIPTION clause that is appropriate."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class InetAddressType(TextualConvention, Integer32):
    description = 'A value that represents a type of Internet address. unknown(0) An unknown address type. This value MUST be used if the value of the corresponding InetAddress object is a zero-length string. It may also be used to indicate an IP address that is not in one of the formats defined below. ipv4(1) An IPv4 address as defined by the InetAddressIPv4 textual convention. ipv6(2) An IPv6 address as defined by the InetAddressIPv6 textual convention. ipv4z(3) A non-global IPv4 address including a zone index as defined by the InetAddressIPv4z textual convention. ipv6z(4) A non-global IPv6 address including a zone index as defined by the InetAddressIPv6z textual convention. dns(16) A DNS domain name as defined by the InetAddressDNS textual convention. Each definition of a concrete InetAddressType value must be accompanied by a definition of a textual convention for use with that InetAddressType. To support future extensions, the InetAddressType textual convention SHOULD NOT be sub-typed in object type definitions. It MAY be sub-typed in compliance statements in order to require only a subset of these address types for a compliant implementation. Implementations must ensure that InetAddressType objects and any dependent objects (e.g., InetAddress objects) are consistent. An inconsistentValue error must be generated if an attempt to change an InetAddressType object would, for example, lead to an undefined InetAddress value. In -- [Page 6] particular, InetAddressType/InetAddress pairs must be changed together if the address type changes (e.g., from ipv6(2) to ipv4(1)).'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 16))
    namedValues = NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2), ("ipv4z", 3), ("ipv6z", 4), ("dns", 16))

class InetAddressPrefixLength(TextualConvention, Unsigned32):
    description = "Denotes the length of a generic Internet network address prefix. A value of n corresponds to an IP address mask that has n contiguous 1-bits from the most significant bit (MSB), with all other bits set to 0. An InetAddressPrefixLength value is always interpreted within the context of an InetAddressType value. Every usage of the InetAddressPrefixLength textual convention is required to specify the InetAddressType object that provides the context. It is suggested that the InetAddressType object be logically registered before the object(s) that use the InetAddressPrefixLength textual convention, if they appear in the same logical row. InetAddressPrefixLength values larger than the maximum length of an IP address for a specific InetAddressType are treated as the maximum significant value applicable for the InetAddressType. The maximum significant value is 32 for the InetAddressType 'ipv4(1)' and 'ipv4z(3)' and 128 for the InetAddressType 'ipv6(2)' and 'ipv6z(4)'. The maximum significant value for the InetAddressType 'dns(16)' is 0. The value zero is object-specific and must be defined as part of the description of any object that uses this syntax. Examples of the usage of zero might include situations where the Internet network address prefix is unknown or does not apply. The upper bound of the prefix length has been chosen to be consistent with the maximum size of an InetAddress."
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2040)

hwIsisConf = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2))
hwIsisMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1))
hwIsisProcBaseTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1), )
if mibBuilder.loadTexts: hwIsisProcBaseTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBaseTable.setDescription('The set of commands of the Integrated IS-IS protocol existing on the system.')
hwIsisProcBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"))
if mibBuilder.loadTexts: hwIsisProcBaseEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBaseEntry.setDescription('Each row defines some commmands to a single process of the IS-IS protocol existing on the system. These commands belong to the IS-IS process.')
hwIsisProcIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwIsisProcIdIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcIdIndex.setDescription('The value of this object identifies the IS-IS process ID. The value ranges from 1 to 65535.')
hwIsisProcVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcVpnName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcVpnName.setDescription('The value of this object identifies the name of the IPv4 VPN instance bound to the IS-IS process. The value ranges from 0 to 31.')
hwIsisProcVpn6Name = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcVpn6Name.setStatus('obsolete')
if mibBuilder.loadTexts: hwIsisProcVpn6Name.setDescription('The value of this object identifies the name of the IPv6 VPN instance bound to the IS-IS process. The value ranges from 0 to 31. ')
hwIsisProcAreaAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("simple", 2), ("keychain", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAreaAuthType.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAreaAuthType.setDescription('The value of this object identifies the type of IS-IS area authentication. null (0): Area authentication is not configured. md5 (1): The password is sent after being encrypted through MD5. simple (2): The password is sent in the form of simple text. keychain (3): The key chain table that changes with time is sent after being encrypted through MD5. By default, area authentication is not configured. ')
hwIsisProcAreaAuthPasswordName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAreaAuthPasswordName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAreaAuthPasswordName.setDescription('This object indicates the password of IS-IS area authentication. The password is a string of characters. If the IS-IS area authentication mode is simple, the password is a string of 0 to 16 characters. If the IS-IS area authentication mode is MD5, the password is a string of 0 to 392 characters. If the IS-IS area authentication mode is keychain, the name is a string of 0 to 47 characters. The length 0 indicates that no IS-IS area authentication password is configured. When read, it always returns length 0.')
hwIsisProcAreaAuthPacketAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("authenticateall", 1), ("allsendonly", 2), ("snppacketauthenticationavoid", 3), ("snppacketsendonly", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAreaAuthPacketAuthMode.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAreaAuthPacketAuthMode.setDescription('The value of this object identifies the packet authentication mode of IS-IS area authentication: none (0): Authentication mode is not configured. authenticateall (1): Encapsulates authentication information for both transmitted and received LSPs and SNPs. allsendonly (2): Encapsulates authentication information for both generated LSPs and SNPs; does not authenticate received LSPs or SNPs. snppacketauthenticationavoid (3): Encapsulates authentication information for only generated LSPs and authenticates received LSPs. snppacketsendonly (4): Encapsulates authentication information for generated LSPs and SNPs; authenticates only received LSPs but does not authenticate received SNPs. By default, authentication is not configured. ')
hwIsisProcAreaAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 133))).clone(namedValues=NamedValues(("none", 0), ("osi", 10), ("ip", 133))).clone('osi')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAreaAuthCode.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAreaAuthCode.setDescription('The value of this object identifies the code of area authentication. none (0): The authentication code is not configured. osi (10): indicates OSI authentication. ip (133): indicates IP authentication.')
hwIsisProcDomainAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("simple", 2), ("keychain", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDomainAuthType.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDomainAuthType.setDescription('The value of this object identifies the type of IS-IS router domain authentication. null (0): Domain authentication is not configured. md5 (1): The password is sent after being encrypted through MD5. simple (2): The password is sent in the form of simple text. keychain (3): The key chain table that changes with time is sent after being encrypted through MD5. By default, IS-IS route domain authentication is disabled. ')
hwIsisProcDomainAuthPasswordName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDomainAuthPasswordName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDomainAuthPasswordName.setDescription('This object indicates the password of IS-IS routing domain authentication. The password is a string of characters. If the IS-IS routing domain authentication mode is simple, the password is a string of 0 to 16 characters. If the IS-IS routing domain authentication mode is MD5, the password is a string of 0 to 392 characters. If the IS-IS routing domain authentication mode is keychain, the name is a string of 0 to 47 characters. The length 0 indicates that the password of IS-IS routing domain authentication is not configured. When read, it always returns length 0.')
hwIsisProcDomainAuthPacketAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("authenticateall", 1), ("allsendonly", 2), ("snppacketauthenticationavoid", 3), ("snppacketsendonly", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDomainAuthPacketAuthMode.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDomainAuthPacketAuthMode.setDescription('The value of this object identifies the packet authentication mode of IS-IS route domain authentication. none (0): Authentication mode is not configured. authenticateall (1): Encapsulates authentication information for both transmitted and received LSPs and SNPs. allsendonly (2): Encapsulates authentication information for both generated LSPs and SNPs; does not authenticate received LSPs or SNPs. snppacketauthenticationavoid (3): Encapsulates authentication information for only generated LSPs and authenticates received LSPs. snppacketsendonly (4): Encapsulates authentication information for generated LSPs and SNPs; authenticates only received LSPs but does not authenticate received SNPs. By default, authentication is not configured. ')
hwIsisProcDomainAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 133))).clone(namedValues=NamedValues(("none", 0), ("osi", 10), ("ip", 133))).clone('osi')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDomainAuthCode.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDomainAuthCode.setDescription('The value of this object identifies the code of domain authentication. none (0): The authentication code is not configured. osi (10): indicates OSI authentication. ip (133): indicates IP authentication.')
hwIsisProcLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level12", 3))).clone('level12')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcLevel.setDescription('The value of this object identifies the level of the IS-IS process. level1 (1): indicates level 1. level2 (2): indicates level 2. level12 (3): indicates level 1-2. By default, the level of an IS-IS process is level-1-2. ')
hwIsisProcL1FlashFloodCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1FlashFloodCount.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1FlashFloodCount.setDescription('The value of this object identifies the counter of level-1 LSPs on the interface. The value is an integer ranging from 0 to 15. The value 0 indicates that no counter is configured. The default value is 5. ')
hwIsisProcL1FlashFloodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 50000), )).clone(10)).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1FlashFloodInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1FlashFloodInterval.setDescription('The value of this object identifies the intervals for level-1 LSP flooding. The value ranges from 10 to 50000, in milliseconds. The default value is 10 ms. ')
hwIsisProcL2FlashFloodCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2FlashFloodCount.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2FlashFloodCount.setDescription('The value of this object identifies the counter of level-2 LSPs on the interface. The value is an integer ranging from 0 to 15. The value 0 indicates that no counter is configured. The default value is 5. ')
hwIsisProcL2FlashFloodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 50000), )).clone(10)).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2FlashFloodInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2FlashFloodInterval.setDescription('The value of this object identifies the intervals for level-2 LSP flooding. The value ranges from 10 to 50000 in milliseconds. The default value is 10ms. ')
hwIsisProcLogPeerChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("enabledwithouttopology", 1), ("enabledwithtopology", 2))).clone('null')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcLogPeerChange.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcLogPeerChange.setDescription('Generates a log when the status of the peer changes. null (0): not configured enabledwithouttopology (1): IPv4 topology enabledwithtopology (2): IPv6 topology')
hwIsisProcTimerRefresh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534)).clone(900)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTimerRefresh.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTimerRefresh.setDescription('The value of this object identifies the timer of LSP refreshing. The value ranges from 1 to 65534, in seconds. The default value is 900s. ')
hwIsisProcTimerMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTimerMaxAge.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTimerMaxAge.setDescription('The value of this object identifies the maximum Keepalive time of the LSP. The value ranges from 2 to 65535, in seconds. The default value is 1200s. ')
hwIsisProcL1TimerLspGenMaxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenMaxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenMaxInterval.setDescription('The value of this object identifies the timer for the maximum delay of level-1 LSPs with the same LSP ID. The value ranges from 1 to 120, in seconds. By default, the value is 2s. ')
hwIsisProcL1TimerLspGenInitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenInitInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenInitInterval.setDescription('The value of this object identifies the delay timer that initially triggers a level-1 LSP. The value ranges from 0 to 60000, in milliseconds. By default, the value is 0. ')
hwIsisProcL1TimerLspGenIncrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenIncrInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1TimerLspGenIncrInterval.setDescription('The value of this object identifies the delay timer for generating two level-1 LSPs with the same LSP ID. The value ranges from 1 to 60000, in milliseconds. By default, the value is 0. ')
hwIsisProcL2TimerLspGenMaxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenMaxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenMaxInterval.setDescription('The value of this object identifies the timer for the maximum delay of Level-2 LSPs with the same LSP ID. The value ranges from 1 to 120, in seconds. By default, the value is 2s.')
hwIsisProcL2TimerLspGenInitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenInitInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenInitInterval.setDescription('The value of this object identifies the delay timer that initially triggers a Level-2 LSP. The value ranges from 1 to 60000, in milliseconds. By default, the value is 0. ')
hwIsisProcL2TimerLspGenIncrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenIncrInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2TimerLspGenIncrInterval.setDescription('The value of this object identifies the delay timer for generating two Level-2 LSPs with the same LSP ID. The value ranges from 1 to 60000, in milliseconds. By default, the value is 0. ')
hwIsisProcTimerSPFMaxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTimerSPFMaxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTimerSPFMaxInterval.setDescription('The value of this object identifies the maximum intervals for SPF calculation. The value ranges from 1 to 120, in seconds. By default, the value is 5s. ')
hwIsisProcTimerSPFInitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(50)).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTimerSPFInitInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTimerSPFInitInterval.setDescription('The value of this object identifies the delay timer for initial SPF calculation. The value ranges from 1 to 60000, in milliseconds. By default, the interval is 50ms. ')
hwIsisProcTimerSPFIncrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000)).clone(200)).setUnits('millionseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTimerSPFIncrInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTimerSPFIncrInterval.setDescription('The value of this object identifies the incremental delay timer for two SPF calculations. The value ranges from 1 to 60000, in milliseconds. By default, the interval is 200ms.')
hwIsisProcCostStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("narrow", 1), ("narrowcompatible", 2), ("compatible", 3), ("wide", 4), ("widecompatible", 5), ("narrowcompatiblerelax", 6), ("compatiblerelax", 7))).clone('narrow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcCostStyle.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcCostStyle.setDescription('Configures the cost type of the IS-IS process: narrow (1): the narrow type narrowcompatible (2): the narrow-compatible type compatible (3): compatible type wide (4): wide type widecompatible (5): wide-compatible type narrowcompatiblerelax (6): narrow-compatible relax-spf-limit type compatible-relax (7): compatible relax-spf-limit type By default, the cost type of an IS-IS process is narrow. ')
hwIsisProcDynamicName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDynamicName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDynamicName.setDescription('Configures the name of the IS-IS dynamic host. The value is a string of 1 to 64 characters. When the length is 0, the configured IS-IS dynamic host name is deleted.')
hwIsisProcGREnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 31), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcGREnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcGREnabled.setDescription('Whether to enable IS-IS GR. true (1): enables IS-IS GR. false (2): does not enable IS-IS GR. By default, IS-IS GR is disabled.')
hwIsisProcGRInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 1800), )).clone(300)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcGRInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcGRInterval.setDescription('The value of this object identifies the maximum intervals for enabling GR. The value ranges from 0 to 1800, in seconds. By default, the value is 300 seconds. The value 0 indicates that GR is not configured. ')
hwIsisProcGRSuppresSAEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 33), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcGRSuppresSAEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcGRSuppresSAEnabled.setDescription('This object indicates that the SA bit in the sent Hello packet is set to 1 after the GR-enabled device is started: true (1): enables this function. false (2): disables this function. By default, IS-IS does not suppress Hello PDUs from carrying SA bits. ')
hwIsisProcTEEnableLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("level1", 1), ("level2", 2), ("level12", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcTEEnableLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcTEEnableLevel.setDescription('Enables IS-IS TE. none (0): does not enable IS-IS TE. level1 (1): enables level-1 TE. level2 (2): enables level-2 TE. level12 (3): enables level-1-2 TE. By default, IS-IS TE is disabled. ')
hwIsisProcBFDEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 35), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBFDEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBFDEnabled.setDescription('Whether to enable BFD on each interface. true (1): enables BFD on each interface. false (2): does not enable BFD on each interface. By default, BFD is disabled on each interface. ')
hwIsisProcBFDFrrBindEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 36), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBFDFrrBindEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBFDFrrBindEnabled.setDescription('Enables BFD-FRR binding on each interface. true (1): enables BFD-FRR binding on each interface. false (2): does not enable BFD-FRR binding on each interface. By default, BFD-FRR binding is disabled on each interface. ')
hwIsisProcBFDMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBFDMinTxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBFDMinTxInterval.setDescription('The value of this object identifies the minimum interval for sending BFD packets. If isis binding to vpn and ipv4-family not enable, The value is zero. ')
hwIsisProcBFDMinRecvInteval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBFDMinRecvInteval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBFDMinRecvInteval.setDescription('The value of this object identifies the minimum interval for receiving BFD packets. If isis binding to vpn and ipv4-family not enable, The value is zero.')
hwIsisProcBFDMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBFDMultiplier.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBFDMultiplier.setDescription('The value of this object identifies the local detection multiplier. The value ranges from 1 to 255. If isis binding to vpn and ipv4-family not enable, The value is zero. ')
hwIsisProcIPv6EnableTopologyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 0), ("standard", 1), ("ipv6", 2), ("compatible", 3), ("compatibleenablemtspf", 4))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcIPv6EnableTopologyType.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcIPv6EnableTopologyType.setDescription('This objects indicates whether the IPv6 topology is enabled for the IS-IS process: disable(0): disables the IPv6 topology of the IS-IS process. standard(1): specifies the topology type as the standard mode. ipv6(2): enables IPv6 for the IS-IS process in the IPv6 topology. compatible(3): specifies the topology type as the compatible mode. compatibleenablemtspf(4): indicates that SPF calculation is performed in the IPv6 topology in compatible mode. By default, the IPv6 topology is not enabled for the IS-IS process. ')
hwIsisProcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 41), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcRowStatus.setDescription('This object supports settings of two values. createAndGo(4): A row is created. destroy(6): A row is deleted.')
hwIsisProcOptionalChecksumEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 42), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcOptionalChecksumEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcOptionalChecksumEnabled.setDescription('Enables BFD-FRR binding on each interface. true (1): enables optional checksum for CSNP,PSNP and IIH PDU. false (2): disables optional checksum for CSNP,PSNP and IIH PDU. By default, optional checksum is disabled. ')
hwisisProcLsdbMaxLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwisisProcLsdbMaxLimit.setStatus('current')
if mibBuilder.loadTexts: hwisisProcLsdbMaxLimit.setDescription('This object is used to set the maximum limit number of IS-IS LSPs. The value range is from 0 to 500000. The default value 0 means no limit.')
hwIsisProcLsdbUpperThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcLsdbUpperThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcLsdbUpperThreshold.setDescription('This object is used to set the upper threshold value of LSPs limit. The value range is from 1 to 100. The default means 80.')
hwIsisProcLsdbLowerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 45), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(70)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcLsdbLowerThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcLsdbLowerThreshold.setDescription('This object is used to set the lower threshold value of LSPs limit. The value range is from 1 to 100. The default means 70.')
hwIsisProcLsdbTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 46), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIsisProcLsdbTotal.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcLsdbTotal.setDescription('This object is used to get the number of IS-IS LSPs.')
hwIsisProcAreaAuthKeychainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 47), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAreaAuthKeychainName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAreaAuthKeychainName.setDescription('This object indicates the keychain name of IS-IS area authentication. The name is a string of characters. The name is a string of 0 to 47 characters. The length 0 indicates that no IS-IS area authentication keychain name is configured. When read, it returns the keychain name.')
hwIsisProcDomainAuthKeychainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 1, 1, 48), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDomainAuthKeychainName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDomainAuthKeychainName.setDescription('This object indicates the keychain name of IS-IS domain authentication. The name is a string of characters. The name is a string of 0 to 47 characters. The length 0 indicates that no IS-IS domain authentication keychain name is configured. When read, it returns the keychain name.')
hwIsisNETTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 2), )
if mibBuilder.loadTexts: hwIsisNETTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisNETTable.setDescription('Set of network entities of process.')
hwIsisNETEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisNETIndex"))
if mibBuilder.loadTexts: hwIsisNETEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisNETEntry.setDescription('Each row means one network entity of the process.')
hwIsisNETIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 20)))
if mibBuilder.loadTexts: hwIsisNETIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisNETIndex.setDescription('The value of this object identifies the NET index. It is a string of 8 to 20 bytes.')
hwIsisNETStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisNETStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisNETStatus.setDescription('The value of this object identifies the status of the NET table. createAndGo(4): A row is created. destroy(6): A row is deleted.')
hwIsisProcMTExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3), )
if mibBuilder.loadTexts: hwIsisProcMTExtTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcMTExtTable.setDescription('Set of commands of the integrated IS-IS protocol existing on the system, which are different for IP type and MT. ')
hwIsisProcMTExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"))
if mibBuilder.loadTexts: hwIsisProcMTExtEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcMTExtEntry.setDescription('Each row defines some commands specific to a single process of the IS-IS protocol existing on the system. These commands are different from ProcBaseTable for IP type and MT.')
hwIsisIpTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hwIsisIpTypeIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisIpTypeIndex.setDescription('This object indicates the IP protocol type: ipv4(1): indicates IPv4. ipv6(2): indicates IPv6.')
hwIsisMTIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: hwIsisMTIdIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisMTIdIndex.setDescription('The value of this object identifies the MT ID. ')
hwIsisMTName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisMTName.setStatus('current')
if mibBuilder.loadTexts: hwIsisMTName.setDescription('This object indicates the name of the topology to be bound to an IS-IS process. The value is a string of 1 to 31 characters.')
hwIsisProcDefRoutAdvType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("always", 1), ("matchdefault", 2), ("routepolicy", 3))).clone('null')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvType.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvType.setDescription('This object is used to set the mode in which default routes are advertised: null(0): indicates that default routes are not advertised. always(1): indicates that default routes are always advertised. matchdefault(2): If there is the default route that is generated by another routing protocol or another IS-IS process in the routing table, this default route is advertised in an LSP. If this default route is deleted from the routing table, this default route is not advertised in the LSP. routepolicy(3): indicates that default routes are advertised according to the routing policy.')
hwIsisProcDefRoutAdvPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvPolicyName.setDescription('This object indicates the routing policy name. The name is a string of 0 to 40 characters.')
hwIsisProcDefRoutAdvCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvCost.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvCost.setDescription('This object is used to set the cost of a default route.')
hwIsisProcDefRoutAdvTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvTag.setDescription('This object is used to set the administrative tag of a default route.')
hwIsisProcDefRoutAdvLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("level1", 1), ("level2", 2), ("level12", 3))).clone('level2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvLevel.setDescription('This object is used to set the level of a default route: level1(1): indicates Level-1. level2(2): indicates Level-2. level12(3): indicates Level-1-2. By default, the level of a default route is Level-2. ')
hwIsisProcDefRoutAdvAvoidLearnEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvAvoidLearnEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcDefRoutAdvAvoidLearnEnabled.setDescription('This object indicates whether an IS-IS process is prevented from learning default routes or adding them to the routing table: true(1): indicates that an IS-IS process is prevented from learning default routes or adding them to the routing table. false(2): indicates that an IS-IS process can learn default routes and then add them to the routing table. By default, an IS-IS process can learn default routes and then add them to the routing table. ')
hwIsisProcL1CircuitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1CircuitCost.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1CircuitCost.setDescription('Global level-1 cost for all the interfaces. If the costStyle of the process is wide or widecompatible, the range of this value is from 1 to 16777215, else the range of this value is from 1 to 63.')
hwIsisProcL2CircuitCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2CircuitCost.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2CircuitCost.setDescription('Global level-2 cost for all the interfaces. If the costStyle of the process is wide or widecompatible, the range of this value is from 1 to 16777215, else the range of this value is from 1 to 63.')
hwIsisProcPrefValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcPrefValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcPrefValue.setDescription('This object is used to set the preference of an IS-IS route. The value ranges from 1 to 255, and the default value is 15. If isis binding to vpn and ip-family not enable, The value is zero.')
hwIsisProcPrefPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcPrefPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcPrefPolicyName.setDescription('This object indicates the name of the routing policy used for route filtering. The name is a string of 0 to 40 characters. Zero-length means no configuration.')
hwIsisProcMaxLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcMaxLoadBalance.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcMaxLoadBalance.setDescription('This object is used to set the number of equal-cost routes. The range and the default value depend on license. If isis binding to vpn and ip-family not enable, The value is zero.')
hwIsisProcL1CircuitDefaultTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1CircuitDefaultTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1CircuitDefaultTag.setDescription('This object is used to set the default administrative tag of an IS-IS Level-1 route.')
hwIsisProcL2CircuitDefaultTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2CircuitDefaultTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2CircuitDefaultTag.setDescription('This object is used to set the default administrative tag of an IS-IS Level-2 route.')
hwIsisProcBandWidthReference = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483648)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcBandWidthReference.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBandWidthReference.setDescription('This object is used to set the reference bandwidth.')
hwIsisProcAutoCostEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcAutoCostEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcAutoCostEnabled.setDescription('This object indicates whether automatic interface cost calculation is enabled: true(1): indicates that automatic interface cost calculation is enabled. false(2): indicates that automatic interface cost calculation is disabled. By default, automatic interface cost calculation is disabled. ')
hwIsisProcSetOverLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("onstartup", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcSetOverLoad.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcSetOverLoad.setDescription('This object indicates whether a device is enabled to notify its neighbors that its status is Overload: disable (0): indicates that a device is disabled from notifying its neighbors that its status is Overload. enable(1): indicates that a device is enabled to notify its neighbors that its status is Overload. onstartup(2): When a device is restarted or becomes faulty, it notifies its neighbors that its status is Overload.')
hwIsisProcSetOverLoadAllowRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("external", 1), ("interlevel", 2), ("externalandinterlevel", 3))).clone('null')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcSetOverLoadAllowRoute.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcSetOverLoadAllowRoute.setDescription('This object indicates that the type of routes to be advertised when a device is in the Overload state: null(0): indicates that no route type is specified. external(1): indicates the imported external routes. interlevel(2): indicates the leak routes. externalandinterlevel(3): indicates the imported external and leak routes.')
hwIsisProcOnStartInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), )).clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcOnStartInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcOnStartInterval.setDescription('The value of this object identifies the interval for waiting to clear the overload bit after the system is started. The value ranges from 5 to 86400, in seconds. The default value is 600s.')
hwIsisProcOnStartStartFromPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 22), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(12, 14), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcOnStartStartFromPeer.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcOnStartStartFromPeer.setDescription('This object indicates the system ID of a neighbor.')
hwIsisProcOnStartFromPeerInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 86400), )).clone(1200)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcOnStartFromPeerInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcOnStartFromPeerInterval.setDescription('The value of this object identifies the maximum interval for waiting to clear the overload bit after the system is started and the neighbor relationship is established. The value ranges of set is from 5 to 86400, in seconds. The default value is 1200s. 0 means no configuration. ')
hwIsisProcOnStartWaitForBgpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 24), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcOnStartWaitForBgpEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcOnStartWaitForBgpEnabled.setDescription('This object indicates whether the function of waiting for BGP convergence is enabled: true(1): indicates that the function of waiting for BGP convergence is enabled. false(2): indicates that the function of waiting for BGP convergence is disabled. By default, the function of waiting for BGP convergence is disabled. ')
hwIsisProcMTStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcMTStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcMTStatus.setDescription('This object indicates the row status of this table: createAndGo(4): indicates that a row is created. destroy(6): indicates that a row is deleted.')
hwIsisProcL1RedistMaxLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1RedistMaxLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1RedistMaxLimit.setDescription('This object is used to set the maximum limit number of IS-IS Level-1 redistribute routes advertised in LSPs. The value range is from 0 to 10000000. The default value 0 means no limit.')
hwIsisProcL2RedistMaxLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2RedistMaxLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2RedistMaxLimit.setDescription('This object is used to set the maximum limit number of IS-IS Level-2 redistribute routes advertised in LSPs. The value range is from 0 to 10000000. The default value 0 means no limit.')
hwIsisProcL1UpperRedistThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1UpperRedistThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1UpperRedistThreshold.setDescription('This object is used to set the upper threshold value of level-1 import limit. The value range is from 1 to 100. The default means 80.')
hwIsisProcL2UpperRedistThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2UpperRedistThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2UpperRedistThreshold.setDescription('This object is used to set the upper threshold value of level-2 import limit. The value range is from 1 to 100. The default means 80.')
hwIsisProcL1LowerRedistThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL1LowerRedistThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1LowerRedistThreshold.setDescription('This object is used to set the lower threshold value of level-1 import limit. The value range is from 1 to 100. The default means 70.')
hwIsisProcL2LowerRedistThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisProcL2LowerRedistThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2LowerRedistThreshold.setDescription('This object is used to set the lower threshold value of level-2 import limit. The value range is from 1 to 100 The default means 70.')
hwIsisProcL1TotalRedist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIsisProcL1TotalRedist.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL1TotalRedist.setDescription('This object is used to get the number of level-1 import routes.')
hwIsisProcL2TotalRedist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 3, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIsisProcL2TotalRedist.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcL2TotalRedist.setDescription('This object is used to get the number of level-2 import routes.')
hwIsisPrefixPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4), )
if mibBuilder.loadTexts: hwIsisPrefixPriorityTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityTable.setDescription('Set of commands of priority-based convergence.')
hwIsisPrefixPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityTypeIndex"))
if mibBuilder.loadTexts: hwIsisPrefixPriorityEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityEntry.setDescription('Entry of priority-based convergence, each entry means one priority-based command for IS-IS process.')
hwIsisPrefixPriorityTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("medium", 1), ("high", 2), ("critical", 3))))
if mibBuilder.loadTexts: hwIsisPrefixPriorityTypeIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityTypeIndex.setDescription('This object indicates the preference of a route: medium(1): indicates medium. high(2): indicates high. critical(3): indicates critical.')
hwIsisPrefixPriorityL1PolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("prefix", 1), ("tag", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1PolicyType.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1PolicyType.setDescription('This object indicates the type of a Level-1 route preference policy: none(0): indicates that no policy type is specified. prefix(1): indicates the IP prefix policy. tag(2): indicates the administrative tag policy.')
hwIsisPrefixPriorityL2PolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("prefix", 1), ("tag", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2PolicyType.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2PolicyType.setDescription('This object indicates the type of a Level-2 route preference policy: none(0): indicates that no policy type is specified. prefix(1): indicates the IP prefix policy. tag(2): indicates the administrative tag policy.')
hwIsisPrefixPriorityL1IpPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 169))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1IpPrefixName.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1IpPrefixName.setDescription('This object indicates the name of a Level-1 IP prefix policy. The name is a string of 0 to 169 characters. Zero-length means no configuration.')
hwIsisPrefixPriorityL2IpPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 169))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2IpPrefixName.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2IpPrefixName.setDescription('This object indicates the name of a Level-2 IP prefix policy. The name is a string of 0 to 169 characters. Zero-length means no configuration.')
hwIsisPrefixPriorityL1TagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1TagValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL1TagValue.setDescription('This object indicates the administrative tag of the Level-1 route preference.')
hwIsisPrefixPriorityL2TagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2TagValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityL2TagValue.setDescription('This object indicates the administrative tag of the Level-2 route preference.')
hwIsisSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5), )
if mibBuilder.loadTexts: hwIsisSummaryTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryTable.setDescription('Set of IP summary addresses to use.')
hwIsisSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryIPIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryMaskIndex"))
if mibBuilder.loadTexts: hwIsisSummaryEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryEntry.setDescription('Each entry contains one IP summary address.')
hwIsisSummaryIPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 1), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: hwIsisSummaryIPIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryIPIndex.setDescription('This object indicates the IP address of the summarized route.')
hwIsisSummaryMaskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 2), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwIsisSummaryMaskIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryMaskIndex.setDescription('This object indicates the subnet mask of the summarized route.')
hwIsisSummaryAvoidFeedBackEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisSummaryAvoidFeedBackEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryAvoidFeedBackEnabled.setDescription('This object indicates whether the function of avoiding learning the summarized routes through SPF calculation is enabled: true(1): indicates that the function is enabled. false(2): indicates that the function is disabled. By default, the summarized routes can be learned through SPF calculation. ')
hwIsisSummaryGenNull0RouteEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisSummaryGenNull0RouteEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryGenNull0RouteEnabled.setDescription('This object indicates whether the function of generating Null0 routes during route summarization is enabled: true(1): indicates that the function is enabled. false(2): indicates that the function is disabled. By default, the function of generating Null0 routes during route summarization is disabled. ')
hwIsisSummaryLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level12", 3))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisSummaryLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryLevel.setDescription('This object indicates the level of the summarized route: level1(1): indicates Level-1. level2(2): indicates Level-2. level12(3): indicates Level-1-2.')
hwIsisSummaryTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisSummaryTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryTag.setDescription('This object indicates the administrative tag of the summarized route. ')
hwIsisSummaryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisSummaryStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryStatus.setDescription('This object indicates the row status of this table: createAndGo(4): indicates that a row is created. destroy(6): indicates that a row is deleted.')
hwIsisImportRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6), )
if mibBuilder.loadTexts: hwIsisImportRouteTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportRouteTable.setDescription('Set of import route command.')
hwIsisImportRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisImportProtocolIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisImportProcessIdIndex"))
if mibBuilder.loadTexts: hwIsisImportRouteEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportRouteEntry.setDescription('Entry of import route command.')
hwIsisImportProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("direct", 1), ("static", 2), ("rip", 3), ("ospf", 4), ("isis", 5), ("bgp", 6), ("ospfv3", 7), ("ripng", 8), ("bgpIbgp", 9))))
if mibBuilder.loadTexts: hwIsisImportProtocolIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportProtocolIndex.setDescription('This object indicates the routing protocol of the imported routes: direct(1): indicates direct. static(2): indicates static. rip(3): indicates RIP. ospf(4): indicates OSPF isis(5): indicates IS-IS. bgp(6): For VPN instance, indicates EBGP and IBGP, otherwise indicates EBGP. ospfv3(7): indicates OSPFv3. ripng(8): indicates RIPng. bgpIbgp(9): For VPN instance, this is unusable, otherwise indicates IBGP and EBGP.')
hwIsisImportProcessIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hwIsisImportProcessIdIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportProcessIdIndex.setDescription('Process ID of the route protocols. The range is from 1 to 65535. If the protocol is direct, static or bgp, this value can only be 1.')
hwIsisImportInheritCostEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportInheritCostEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportInheritCostEnabled.setDescription('This object indicates whether the original cost of the source route is inherited: true(1): indicates that the original cost of the source route is inherited. false(2): indicates that the original cost of the source route is not inherited.')
hwIsisImportCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4261412864))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportCost.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportCost.setDescription('Cost of the imported routes. If the costStyle of the process is wide or widecompatible, the range of this value is from 0 to 4261412864, else the range of this value is from 0 to 63. 0 means no configuration.')
hwIsisImportCostType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportCostType.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportCostType.setDescription('This object indicates the cost type of the imported external route. This object does not apply to IPv6. internal(1): indicates internal. external(2): indicates external. This node is invalid for IPv6. By default, the cost type of the imported external route is external.')
hwIsisImportLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level12", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportLevel.setDescription('This object indicates the local IS-IS level of the imported route: level1(1): indicates Level-1. level2(2): indicates Level-2. level12(3): indicates Level-1-2.')
hwIsisImportTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportTag.setDescription('This object indicates the administrative tag assigned to an imported route. If this object is not configured, the value will be 0.')
hwIsisImportPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportPolicyName.setDescription('This object indicates the name of the routing policy used to import routes. The name is a string of 0 to 40 characters. The length 0 indicates that no name is configured for the routing policy used to import routes. ')
hwIsisImportRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 6, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisImportRouteStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportRouteStatus.setDescription('This object indicates the row status of this table: createAndGo(4): indicates that a row is created. destroy(6): indicates that a row is deleted.')
hwIsisRouteLeakTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7), )
if mibBuilder.loadTexts: hwIsisRouteLeakTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakTable.setDescription('Set of route leak commands.')
hwIsisRouteLeakEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakTypeIndex"))
if mibBuilder.loadTexts: hwIsisRouteLeakEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakEntry.setDescription('Entry of route leak commands.')
hwIsisRouteLeakTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1intolevel2", 1), ("level2intolevel1", 2))))
if mibBuilder.loadTexts: hwIsisRouteLeakTypeIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakTypeIndex.setDescription('This object indicates the index of the route leaking type: level1intolevel2(1): indicates that Level-1 routes are leaked to Level-2. level2intolevel1(2): indicates that Level-2 routes are leaked to Level-1.')
hwIsisRouteLeakTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisRouteLeakTag.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakTag.setDescription('This object indicates the tag of route leaking. If the tag is not configured, the reading value will be 0.')
hwIsisRouteLeakFilterPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("basicAcl", 1), ("aclName", 2), ("ipPrefix", 3), ("routePolicy", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyType.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyType.setDescription('This object indicates the type of the policy used for route leaking: none(0): indicates that no policy type is specified. basicAcl(1): indicates the number of a basic ACL. aclName(2): indicates the ACL name. ipPrefix(3): indicates the IPv4 prefix. routePolicy(4): indicates the routing policy.')
hwIsisRouteLeakFilterPolicyBasicAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 2999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyBasicAcl.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyBasicAcl.setDescription('The value of this object identifies the number of a basic ACL. The value ranges from 2000 to 2999. 0 means no configuration, The range of this value is from 2000 to 2999. ')
hwIsisRouteLeakFilterPolicyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 169))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakFilterPolicyPolicyName.setDescription('The policy name of route leak. If policy type is aclName, the length of this value is from 1 to 32. If policy type is ipPrefix the length of this value is from 1 to 169. If policy type is routePolicy, the length of this value is from 1 to 40. The default length is 0.')
hwIsisRouteLeakStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisRouteLeakStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakStatus.setDescription('This object indicates the row status of this table: createAndGo(4): indicates that a row is created. destroy(6): indicates that a row is deleted.')
hwIsisFrrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 8), )
if mibBuilder.loadTexts: hwIsisFrrTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrTable.setDescription('Set of Frr commands.')
hwIsisFrrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 8, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"))
if mibBuilder.loadTexts: hwIsisFrrEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrEntry.setDescription('Entry of frr commands for the specific MT of process.')
hwIsisFrrPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisFrrPolicyName.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrPolicyName.setDescription('The value of this object identifies the FRR policy name. The value is a string of 1 to 40 characters. Value 0 indicates that the FRR policy is deleted.')
hwIsisFrrLoopFreeAltLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("level1", 1), ("level2", 2), ("level12", 3))).clone('null')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisFrrLoopFreeAltLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrLoopFreeAltLevel.setDescription('The value of this object identifies the level of the FRR LFA algorithm. null(0): cancels the operation of the LFA algorithm. level1(1): indicates Level-1. level2(2): indicates Level-2. level12(3): indicates Level-1-2.')
hwIsisFrrEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 8, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisFrrEnabled.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrEnabled.setDescription('The value of this object identifies the status of FRR: enable(1): enables FRR. disable(2): disables FRR. By default, FRR is disabled. ')
hwIsisIntfBaseTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21), )
if mibBuilder.loadTexts: hwIsisIntfBaseTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBaseTable.setDescription('Set of commands on interface of the Integrated IS-IS protocol existing on the system.')
hwIsisIntfBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisInterfaceIndex"))
if mibBuilder.loadTexts: hwIsisIntfBaseEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBaseEntry.setDescription('Each row defines some commands to a single interface of the IS-IS protocol existing on the system.')
hwIsisInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwIsisInterfaceIndex.setStatus('current')
if mibBuilder.loadTexts: hwIsisInterfaceIndex.setDescription('The value of this object identifies the interface index. ')
hwIsisEnableIPProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisEnableIPProtocol.setStatus('current')
if mibBuilder.loadTexts: hwIsisEnableIPProtocol.setDescription('The value of this object identifies the status of IPv4 IS-IS on an interface: enable(1): enables IPv4 IS-IS. disable(2): disables IPv4 IS-IS.')
hwIsisEnableIPv6Protocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisEnableIPv6Protocol.setStatus('current')
if mibBuilder.loadTexts: hwIsisEnableIPv6Protocol.setDescription('The value of this object identifies the status of IPv6 IS-IS on an interface: enable(1): enables IPv6 IS-IS. disable(2): disables IPv6 IS-IS.')
hwIsisCircLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level12", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircLevel.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircLevel.setDescription('The value of this object identifies the level of an interface: level1(1): indicates Level-1. level2(2): indicates Level-2. level12(3): indicates Level-1-2. By default, the interface is at Level-1-2.')
hwIsisCircSimulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircSimulation.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircSimulation.setDescription('The value of this object identifies whether the broadcast interface is simulated as a P2P interface: enable(1): indicates that the broadcast interface is simulated as a P2P interface. disable(2): indicates that the broadcast interface is not simulated as a P2P interface. By default, broadcast interfaces are not simulated as P2P interfaces. ')
hwIsisCircL1HelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 255)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1HelloInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1HelloInterval.setDescription('The value of this object identifies the interval for sending Level-1 Hello PDUs. The value ranges from 3 to 255, in seconds. By default, the value is 10s. ')
hwIsisCircL2HelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 255)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2HelloInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2HelloInterval.setDescription('The value of this object identifies the interval for sending Level-2 Hello PDUs. The value ranges from 3 to 255, in seconds. By default, the value is 10s. ')
hwIsisCircL1HelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1HelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1HelloMultiplier.setDescription('The value of this object identifies the number of Level-1 Hello PDUs that fail to received from the IS-IS neighbor before the neighbor declared Down. The value ranges from 3 to 1000. By default, the value is 3.')
hwIsisCircL2HelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2HelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2HelloMultiplier.setDescription('The value of this object identifies the number of Level-2 Hello PDUs that fail to received from the IS-IS neighbor before the neighbor declared Down. The value ranges from 3 to 1000. By default, the value is 3.')
hwIsisCircL1AuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("simple", 2), ("keychain", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1AuthMode.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1AuthMode.setDescription('The value of this object identifies the mode of authenticating Level-1 Hello PDUs: null(0): indicates that area-based authentication is not configured. md5(1): indicates that the password is encrypted through MD5 and then sent. simple(2): indicates that the password is sent in plaintext. keychain(3): indicates that the key-chain that varies with the time is encrypted through MD5 and then sent. By default, area-based authentication is not configured. ')
hwIsisCircL1AuthText = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1AuthText.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1AuthText.setDescription('The value of this object identifies the authentication password of Level-1 Hello packets. The password is a string of characters. If the packet authentication mode is simple, the password is a string of 0 to 16 characters. If the packet authentication mode is MD5, the password is a string of 0 to 392 characters. If the packet authentication mode is keychain, the name is a string of 0 to 47 characters. The length 0 indicates that the authentication password of Level-1 Hello packets is not configured. When read, it always returns length 0.')
hwIsisCircL1AuthSendOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1AuthSendOnly.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1AuthSendOnly.setDescription('The value of this object identifies the mode of sending the authentication password of Level-1 Hello PDUs: true(1): indicates that the passwords in only the sent PDUs are authenticated but not in the received PDUs. false(2): indicates that the passwords in both sent and received PDUs are authenticated. By default, the passwords in both sent and received PDUs are authenticated.')
hwIsisCircL1AuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 133))).clone(namedValues=NamedValues(("none", 0), ("osi", 10), ("ip", 133))).clone('osi')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1AuthCode.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1AuthCode.setDescription('The value of this object identifies the authentication code of Level-1 Hello PDUs: none(0): indicates that no authentication is configured. osi(10): indicates OSI authentication. ip(133): indicates IP authentication.')
hwIsisCircL2AuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("simple", 2), ("keychain", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2AuthMode.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2AuthMode.setDescription('The value of this object identifies the mode of authenticating Level-2 Hello PDUs: null(0): indicates that area-based authentication is not configured. md5(1): indicates that password is encrypted through MD5 and then sent. simple(2): indicates that the password is sent in plaintext. keychain(3): indicates that the key-chain that varies with the time is encrypted through MD5 and then sent. By default, area-based authentication is not configured. ')
hwIsisCircL2AuthText = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 392))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2AuthText.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2AuthText.setDescription('The value of this object identifies the authentication password of Level-2 Hello packets. The password is a string of characters. If the packet authentication mode is simple, the password is a string of 0 to 16 characters. If the packet authentication mode is MD5, the password is a string of 0 to 392 characters. If the packet authentication mode is keychain, the name is a string of 0 to 47 characters. The length 0 indicates that the authentication password of Level-2 Hello packets is not configured. When read, it always returns length 0.')
hwIsisCircL2AuthSendOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2AuthSendOnly.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2AuthSendOnly.setDescription('The value of this object identifies the mode of sending the authentication password of Level-2 Hello PDUs: true(1): indicates that the passwords in only the sent PDUs are authenticated but not in the received PDUs. false(2): indicates that the password is authenticated in the PDUs that are both sent and received. By default, the passwords in both sent and received PDUs are authenticated.')
hwIsisCircL2AuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 133))).clone(namedValues=NamedValues(("none", 0), ("osi", 10), ("ip", 133))).clone('osi')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2AuthCode.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2AuthCode.setDescription('The value of this object identifies the authentication code of Level-2 Hello PDUs: none(0): indicates that no authentication is configured. osi(10): indicates OSI authentication. ip(133): indicates IP authentication.')
hwIsisCircLdpSync = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircLdpSync.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircLdpSync.setDescription('The value of this object identifies the status of synchronization of IS-IS and LDP: enable(1): enables synchronization of IS-IS and LDP. disable(2): disables synchronization of IS-IS and LDP. By default, synchronization of IS-IS and LDP is disabled.')
hwIsisCircLdpSyncHoldDown = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircLdpSyncHoldDown.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircLdpSyncHoldDown.setDescription('The value of this object identifies the timeout period of the Holddown time for synchronization of IS-IS and LDP. The value ranges from 0 to 65535, in seconds. By default, the value is 10s. 0 means to stop Holddown timer. -1 means no configuration.')
hwIsisCircLdpHldMaxCost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircLdpHldMaxCost.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircLdpHldMaxCost.setDescription('The value of this object identifies the timeout period of the Hold-Max-Cost time for synchronization of IS-IS and LDP. The value ranges from 0 to 65536, in seconds. By default, the value is 10s. The value of 65536 means infinite. 0 means to stop Hold-Max-Cost timer. -1 means no configuration.')
hwIsisCircSmallHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircSmallHello.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircSmallHello.setDescription('The value of this object identifies whether IS-IS sends small Hello PDUs without the padding field: enable(1): indicates that IS-IS sends small Hello PDUs without the padding field. disable(2): indicates that IS-IS does not send small Hello PDUs without the padding field. By default, the function is disabled.')
hwIsisCircIpIgnore = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircIpIgnore.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircIpIgnore.setDescription('The value of this object identifies whether the segment in an IP address is checked: enable(1): indicates that the segment in an IP address is not checked. disable(2): indicates that the segment in an IP address is checked. By default, the segment in an IP address is checked. This object applies to only P2P interfaces. ')
hwIsisCircSenseRpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircSenseRpr.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircSenseRpr.setDescription('The value of this object identifies whether fast RPR loop detection is enabled: enable(1): enables fast RPR loop detection. disable(2): disables fast RPR loop detection. By default, fast RPR loop detection is disabled.')
hwIsisCircPadHello = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircPadHello.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircPadHello.setDescription('The value of this object identifies whether IS-IS sends standard Hello PDUs with the padding field: enable(1): indicates that IS-IS sends standard Hello PDUs with the padding field. disable(2): indicates that IS-IS does not send standard Hello PDUs with the padding field. By default, the function is disabled.')
hwIsisCircLspRetransInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircLspRetransInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircLspRetransInterval.setDescription('The value of this object identifies the interval for resending LSPs. The value ranges from 1 to 300, in seconds. The default value is 5. This object applies to only P2P interfaces. ')
hwIsisL1CsnpTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisL1CsnpTimerValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1CsnpTimerValue.setDescription('The value of this object identifies the interval for sending Level-1 CSNP PDUs on an interface. The value ranges from 1 to 65535, in seconds. The default value is 10.')
hwIsisL2CsnpTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisL2CsnpTimerValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2CsnpTimerValue.setDescription('The value of this object identifies the interval for sending Level-2 CSNP PDUs on an interface. The value ranges from 1 to 65535, in seconds. The default value is 10.')
hwIsisLspThrottleInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setUnits('milliseconds.').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisLspThrottleInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisLspThrottleInterval.setDescription('The value of this object identifies the interval for sending batch of LSPs or CSNPs on an interface. The value ranges from 1 to 10000, in milliseconds. By default, the value is 50.')
hwIsisLspThrottleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisLspThrottleCount.setStatus('current')
if mibBuilder.loadTexts: hwIsisLspThrottleCount.setDescription('The value of this object identifies the number of a bundle of LSPs. The value ranges from 1 to 1000. By default, it is 10.')
hwIsisCircL1DisPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1DisPriority.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1DisPriority.setDescription('The value of this object identifies the priority of the Level-1 DIS, which is valid only on a broadcast interface. The value ranges from 0 to 127. By default, it is 64. ')
hwIsisCircL2DisPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2DisPriority.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2DisPriority.setDescription('The value of this object identifies the priority of the Level-2 DIS, which is valid only on a broadcast interface. The value ranges from 0 to 127. By default, it is 64.')
hwIsisCircSilent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircSilent.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircSilent.setDescription('The value of this object identifies whether the status of an IS-IS interface is set to silent. enable(1): indicates that the status of IS-IS interface is set to silent. disable(2): indicates that the status of IS-IS interface is not set to silent. By default, the function is disabled.')
hwIsisCircMeshGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 33), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircMeshGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircMeshGroup.setDescription('The value of this object identifies the mesh-group ID. The value ranges from 0 to 4294967295. Value 0 indicates that the mesh-group ID is not set.')
hwIsisCircMeshBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircMeshBlock.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircMeshBlock.setDescription('The value of this object identifies the mesh block function. If this function is configured, the set mesh-group ID is deleted. The value of this object can be: enable(1): enables the mesh block function. disable(2): disables the mesh block function. By default, the function is disabled.')
hwIsisCircDisName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircDisName.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircDisName.setDescription('The value of this object identifies the DIS name of an interface. The configuration is applicable to only a broadcast interface. The value is a string of 0 to 64 characters. Value 0 indicates that the DIS name is not configured.')
hwIsisCircPppNego = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("twoWay", 1), ("threeWay", 2), ("threeWayOnly", 3))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircPppNego.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircPppNego.setDescription('The value of this object identifies the mode of negotiating the setup of a neighbor relationship on P2P interfaces: none(0): indicates that the negotiation mode used to establish a neighbor relationship is not specified. twoWay(1): indicates that a neighbor relationship is set up through negotiations in two-way handshake mode. threeWay(2): indicates that a neighbor relationship is set up through negotiations in three-way handshake mode. threeWayOnly(3): indicates that a neighbor relationship is set up through negotiations in three-way handshake mode and the backward compatibility is not supported. By default, a neighbor relationship is set up through negotiations in three-way handshake mode.')
hwIsisCircPppOsicpCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircPppOsicpCheck.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircPppOsicpCheck.setDescription('The value of this object identifies whether the OSICP check is required: enable(1): enables the OSICP check. disable(2): disables the OSICP check. By default, the function is disabled. This object applies to only P2P interfaces. ')
hwIsisIntfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 38), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisIntfRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfRowStatus.setDescription('The value of this object identifies the setting of two values: createAndGo(4): creates one row. destroy(6): deletes one row.')
hwIsisCircL1AuthKeychainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1AuthKeychainName.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1AuthKeychainName.setDescription('The value of this object identifies the keychain name of Level-1 Hello packets. The keychain name is a string of characters. The name is a string of 0 to 47 characters. The length 0 indicates that the authentication password of Level-1 Hello packets is not configured. When read, it returns the keychain name.')
hwIsisCircL2AuthKeychainName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2AuthKeychainName.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2AuthKeychainName.setDescription('The value of this object identifies the keychain name of Level-2 Hello packets. The keychain name is a string of characters. The name is a string of 0 to 47 characters. The length 0 indicates that the authentication password of Level-2 Hello packets is not configured. When read, it returns the keychain name.')
hwIsisCircStrictSnpaCheckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 21, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircStrictSnpaCheckEnable.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircStrictSnpaCheckEnable.setDescription('The value of this object identifies whether the snpa check of lsp and snp is required. enable(1): enables the snpa check. disable(2): disables the snpa check. By default, the function is disabled. This object applies to only simulated P2P interfaces. ')
hwIsisIntfExtTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22), )
if mibBuilder.loadTexts: hwIsisIntfExtTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfExtTable.setDescription('Set of some specific commands on interface of the Integrated IS-IS protocol existing on the system, which are different of IP type.')
hwIsisIntfExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisInterfaceIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisMTIdIndex"))
if mibBuilder.loadTexts: hwIsisIntfExtEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfExtEntry.setDescription('Entry of Some specific commands on interface of the Integrated IS-IS protocol existing on the system, which are different of IP type.')
hwIsisCircL1Cost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL1Cost.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL1Cost.setDescription('The value of this object identifies the Level-1 cost of an interface. If the cost style is wide or widecompatible, the range of this value is from 0 to 16777215, else the range of this value is from 0 to 63. The value of 0 means undo this configuration, and the cost of the circuit will become the default value.')
hwIsisCircL2Cost = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircL2Cost.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircL2Cost.setDescription('The value of this object identifies the Level-2 cost of an interface. If the cost style is wide or widecompatible, the range of this value is from 0 to 16777215, else the range of this value is from 0 to 63. The value of 0 means undo this configuration, and the cost of the circuit will become the default value.')
hwIsisL1TagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisL1TagValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1TagValue.setDescription('The value of this object identifies the tag value of a Level-1 interface. The value ranges from 0 to 4294967295. By default, it is 0, which indicates that the set tag value is deleted. ')
hwIsisL2TagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisL2TagValue.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2TagValue.setDescription('The value of this object identifies the tag value of a Level-2 interface. The value ranges from 0 to 4294967295. By default, it is 0, which indicates that the set tag value is deleted. ')
hwIsisCircSuppReachablity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("level1", 1), ("level2", 2), ("level12", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircSuppReachablity.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircSuppReachablity.setDescription('The value of this object identifies whether the advertisement of the interface address is suppressed: Null(0): indicates that the interface address can be advertised. level1(1): indicates that the advertisement of the Level-1 interface address is suppressed. level2(2): indicates that the advertisement of the Level-2 interface address is suppressed. level12(3): indicates that the advertisement of the Level-1 and Level-2 interface addresses is suppressed. By default, the interface address can be advertised.')
hwIsisCircFrrBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("level1", 1), ("level2", 2), ("level12", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircFrrBackup.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircFrrBackup.setDescription('The value of this object identifies whether an interface is enabled to become a backup interface in Loop Free Alternate (LFA) calculation. Null(0): disables an interface from becoming a backup interface in LFA calculation. level1(1): specifies an interface as a backup interface in Level-1. level2(2): specifies an interface as a backup interface in Level-2. level12(3): specifies an interface as a backup interface in Level-1 and Level-2.')
hwIsisCircMTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 22, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircMTRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircMTRowStatus.setDescription('This object indicates the row status of this table: createAndGo(4): indicates that a row is created. destroy(6): indicates that a row is deleted.')
hwIsisIntfBfdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23), )
if mibBuilder.loadTexts: hwIsisIntfBfdTable.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBfdTable.setDescription('Set of BFD commands on interface of the Integrated IS-IS protocol existing on the system.')
hwIsisIntfBfdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1), ).setIndexNames((0, "HUAWEI-ISIS-CONF-MIB", "hwIsisProcIdIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisInterfaceIndex"), (0, "HUAWEI-ISIS-CONF-MIB", "hwIsisIpTypeIndex"))
if mibBuilder.loadTexts: hwIsisIntfBfdEntry.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBfdEntry.setDescription('Entry of BFD commands on interface of the Integrated IS-IS protocol existing on the system.')
hwIsisCircBfdState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("static", 3), ("block", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircBfdState.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircBfdState.setDescription('The value of this object identifies the BFD status: enable(1): enables BFD. disable(2): disables BFD. static(3): configures static BFD. block(4): blocks BFD on an interface. By default, BFD is not enabled.')
hwIsisCircBfdMinTxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircBfdMinTxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircBfdMinTxInterval.setDescription('The value of this object identifies the minimum interval for sending BFD packets. The value range and default value of this object are determined by the license file.')
hwIsisCircBfdMinRxInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircBfdMinRxInterval.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircBfdMinRxInterval.setDescription('The value of this object identifies the minimum interval for sending BFD packets. The value range and default value of this object are determined by the license file.')
hwIsisCircBfdMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircBfdMultiplier.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircBfdMultiplier.setDescription('The value of this object identifies the local BFD detection multiplier. The value range and default value of this object are determined by the license file.')
hwIsisCircBfdFrrBinding = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 1, 23, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwIsisCircBfdFrrBinding.setStatus('current')
if mibBuilder.loadTexts: hwIsisCircBfdFrrBinding.setDescription('This object indicates that the BFD status is bound to IS-IS Auto FRR. enable(1): indicates that BFD is bound to IS-IS Auto FRR. disable(2): indicates that BFD is not bound to IS-IS Auto FRR. By default, the BFD session status is not bound to IS-IS Auto FRR.')
hwIsisTrapsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2))
hwIsisAdjChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 100))).clone(namedValues=NamedValues(("isNbrHoldTimerExpired", 1), ("isNbrPhysicalInterfaceChange", 2), ("isNbrProtocolReason", 3), ("isNbrBfdSessionDown", 4), ("isNbrConfigurationChange", 5), ("isNbrPeerRouterReason", 6), ("isNbrClear", 100)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisAdjChangeReason.setStatus('current')
if mibBuilder.loadTexts: hwIsisAdjChangeReason.setDescription('Adj down reason')
hwisisSysInstance = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwisisSysInstance.setStatus('current')
if mibBuilder.loadTexts: hwisisSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behavior.')
hwisisSysLevelIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwisisSysLevelIndex.setStatus('current')
if mibBuilder.loadTexts: hwisisSysLevelIndex.setDescription('The level that this entry describes.')
hwIsisOwnSysID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 4), SystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisOwnSysID.setStatus('current')
if mibBuilder.loadTexts: hwIsisOwnSysID.setDescription('The ID for this instance of the Integrated IS-IS protocol. This value is appended to each of the area addresses to form the Network Entity Titles. The derivation of a value for this object is implementation-specific. Some implementations may automatically assign values and not permit an SNMP write, while others may require the value to be set manually.')
hwIsisAdjSysID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 5), SystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisAdjSysID.setStatus('current')
if mibBuilder.loadTexts: hwIsisAdjSysID.setDescription('The ID for this instance of the Integrated IS-IS protocol. This value is appended to each of the area addresses to form the Network Entity Titles. The derivation of a value for this object is implementation-specific. Some implementations may automatically assign values and not permit an SNMP write, while others may require the value to be set manually.')
hwIsisAdjSysName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisAdjSysName.setStatus('current')
if mibBuilder.loadTexts: hwIsisAdjSysName.setDescription('Configures the name of the IS-IS dynamic host. The value is a string of 1 to 64 characters. When the length is 0, the configured IS-IS dynamic host name is deleted.')
hwIsisConflictSystemID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 7), SystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisConflictSystemID.setStatus('current')
if mibBuilder.loadTexts: hwIsisConflictSystemID.setDescription('The ID for this instance of the Integrated IS-IS protocol. This value is appended to each of the area addresses to form the Network Entity Titles. The derivation of a value for this object is implementation-specific. Some implementations may automatically assign values and not permit an SNMP write, while others may require the value to be set manually.')
hwIsisAutoSysId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 8), SystemID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisAutoSysId.setStatus('current')
if mibBuilder.loadTexts: hwIsisAutoSysId.setDescription('The ID for this instance of the Integrated IS-IS protocol. This value is appended to each of the area addresses to form the Network Entity Titles. The derivation of a value for this object is implementation-specific. Some implementations may automatically assign values and not permit an SNMP write, while others may require the value to be set manually.')
hwIsisLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 9), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisLocalIP.setStatus('current')
if mibBuilder.loadTexts: hwIsisLocalIP.setDescription('Local IP address.')
hwIsisRemoteIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 10), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisRemoteIP.setStatus('current')
if mibBuilder.loadTexts: hwIsisRemoteIP.setDescription('IP address of the remote end.')
hwIsisAdjIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 2, 11), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwIsisAdjIP.setStatus('current')
if mibBuilder.loadTexts: hwIsisAdjIP.setDescription('Neighbor IP address.')
hwIsisConfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3))
hwIsisCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 1))
hwIsisModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 1, 1)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBaseGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcMTExtGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisNETGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportRouteGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisFrrGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisIntfBaseGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisIntfExtGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisIntfBfdGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisTrapsObjectsGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisModuleFullCompliance = hwIsisModuleFullCompliance.setStatus('current')
if mibBuilder.loadTexts: hwIsisModuleFullCompliance.setDescription('The compliance statement for entities implementing the Huawei ISIS MIB')
hwIsisConfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2))
hwIsisProcBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 1)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcVpnName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcVpn6Name"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAreaAuthType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAreaAuthPasswordName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAreaAuthPacketAuthMode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAreaAuthCode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDomainAuthType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDomainAuthPasswordName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDomainAuthPacketAuthMode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDomainAuthCode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1FlashFloodCount"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1FlashFloodInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2FlashFloodCount"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2FlashFloodInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLogPeerChange"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTimerRefresh"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTimerMaxAge"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TimerLspGenMaxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TimerLspGenInitInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TimerLspGenIncrInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TimerLspGenMaxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TimerLspGenInitInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TimerLspGenIncrInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTimerSPFMaxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTimerSPFInitInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTimerSPFIncrInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcCostStyle"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDynamicName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcGREnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcGRInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcGRSuppresSAEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcTEEnableLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBFDEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBFDMinTxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBFDMinRecvInteval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBFDMultiplier"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBFDFrrBindEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcIPv6EnableTopologyType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcRowStatus"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcOptionalChecksumEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwisisProcLsdbMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbUpperThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbLowerThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbTotal"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAreaAuthKeychainName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDomainAuthKeychainName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisProcBaseGroup = hwIsisProcBaseGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcBaseGroup.setDescription('The group of hwIsisProcBaseGroup.')
hwIsisProcMTExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 2)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvPolicyName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvCost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDefRoutAdvAvoidLearnEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1CircuitCost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2CircuitCost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcPrefValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcPrefPolicyName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcMaxLoadBalance"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1CircuitDefaultTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2CircuitDefaultTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcAutoCostEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcSetOverLoad"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcSetOverLoadAllowRoute"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcOnStartInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcOnStartStartFromPeer"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcOnStartFromPeerInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisMTName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcMTStatus"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcOnStartWaitForBgpEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcBandWidthReference"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TotalRedist"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TotalRedist"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisProcMTExtGroup = hwIsisProcMTExtGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisProcMTExtGroup.setDescription('The group of hwIsisProcMTExtGroup.')
hwIsisPrefixPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 3)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL1PolicyType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL2PolicyType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL1IpPrefixName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL2IpPrefixName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL1TagValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisPrefixPriorityL2TagValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisPrefixPriorityGroup = hwIsisPrefixPriorityGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisPrefixPriorityGroup.setDescription('The group of hwIsisPrefixPriorityGroup.')
hwIsisSummaryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 4)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryAvoidFeedBackEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryGenNull0RouteEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSummaryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisSummaryGroup = hwIsisSummaryGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisSummaryGroup.setDescription('The group of hwIsisSummaryGroup.')
hwIsisNETGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 5)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisNETStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisNETGroup = hwIsisNETGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisNETGroup.setDescription('The group of hwIsisNETGroup.')
hwIsisImportRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 6)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisImportInheritCostEnabled"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportCost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportCostType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportPolicyName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisImportRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisImportRouteGroup = hwIsisImportRouteGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisImportRouteGroup.setDescription('The group of hwIsisImportRouteGroup.')
hwIsisRouteLeakGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 7)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakTag"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakFilterPolicyType"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakFilterPolicyBasicAcl"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakFilterPolicyPolicyName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRouteLeakStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisRouteLeakGroup = hwIsisRouteLeakGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisRouteLeakGroup.setDescription('The group of hwIsisRouteLeakGroup.')
hwIsisFrrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 8)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisFrrPolicyName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisFrrLoopFreeAltLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisFrrEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisFrrGroup = hwIsisFrrGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisFrrGroup.setDescription('The group of hwIsisFrrGroup.')
hwIsisIntfBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 21)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisEnableIPProtocol"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisEnableIPv6Protocol"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircLevel"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircSimulation"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1HelloInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2HelloInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1HelloMultiplier"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2HelloMultiplier"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1AuthMode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1AuthText"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1AuthSendOnly"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2AuthMode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2AuthText"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2AuthSendOnly"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircLdpSync"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircLdpSyncHoldDown"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircLdpHldMaxCost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircSmallHello"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircIpIgnore"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircSenseRpr"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircPadHello"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircLspRetransInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1CsnpTimerValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2CsnpTimerValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLspThrottleInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLspThrottleCount"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1DisPriority"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2DisPriority"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircSilent"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircMeshGroup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircMeshBlock"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircDisName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircPppNego"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircPppOsicpCheck"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisIntfRowStatus"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1AuthCode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2AuthCode"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1AuthKeychainName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2AuthKeychainName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircStrictSnpaCheckEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisIntfBaseGroup = hwIsisIntfBaseGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBaseGroup.setDescription('The group of hwIsisIntfBaseGroup.')
hwIsisIntfExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 22)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL1Cost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircL2Cost"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1TagValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2TagValue"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircSuppReachablity"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircFrrBackup"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircMTRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisIntfExtGroup = hwIsisIntfExtGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfExtGroup.setDescription('The group of hwIsisIntfExtGroup.')
hwIsisIntfBfdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 23)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisCircBfdMinTxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircBfdMinRxInterval"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircBfdMultiplier"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircBfdFrrBinding"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisCircBfdState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisIntfBfdGroup = hwIsisIntfBfdGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisIntfBfdGroup.setDescription('The group of hwIsisIntfBfdGroup.')
hwIsisTrapsObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 24)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjChangeReason"), ("HUAWEI-ISIS-CONF-MIB", "hwisisSysInstance"), ("HUAWEI-ISIS-CONF-MIB", "hwisisSysLevelIndex"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisOwnSysID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjSysID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjSysName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisConflictSystemID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAutoSysId"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLocalIP"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjIP"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRemoteIP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisTrapsObjectsGroup = hwIsisTrapsObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisTrapsObjectsGroup.setDescription('The group of adj change reason.')
hwIsisTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 3, 2, 25)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisSystemIdConflict"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1ImportRouteExceedLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1ImportRouteRestoreToLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2ImportRouteExceedLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2ImportRouteRestoreToLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1ImportRouteThresholdReach"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL1ImportRouteThresholdReachClear"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2ImportRouteThresholdReach"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisL2ImportRouteThresholdReachClear"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLsdbThresholdReach"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLsdbThresholdReachClear"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSystemIdAutoRecover"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjacencyChangeClear"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisSeqNumExceedThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwIsisTrapsGroup = hwIsisTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: hwIsisTrapsGroup.setDescription('The collections of notifications sent by an IS.')
hwIsisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4))
hwIsisSystemIdConflict = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 1)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwisisSysInstance"), ("HUAWEI-ISIS-CONF-MIB", "hwisisSysLevelIndex"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisOwnSysID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcDynamicName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjSysID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjSysName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLocalIP"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjIP"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRemoteIP"))
if mibBuilder.loadTexts: hwIsisSystemIdConflict.setStatus('current')
if mibBuilder.loadTexts: hwIsisSystemIdConflict.setDescription('ISIS system Id conflict.')
hwIsisL1ImportRouteExceedLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 2)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TotalRedist"))
if mibBuilder.loadTexts: hwIsisL1ImportRouteExceedLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1ImportRouteExceedLimit.setDescription('ISIS level-1 number of imported routes has exceeded the maximum limit.')
hwIsisL1ImportRouteRestoreToLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 3)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TotalRedist"))
if mibBuilder.loadTexts: hwIsisL1ImportRouteRestoreToLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1ImportRouteRestoreToLimit.setDescription('ISIS level-1 number of imported routes is restored to less than or equal to the maximum limit.')
hwIsisL2ImportRouteExceedLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 4)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TotalRedist"))
if mibBuilder.loadTexts: hwIsisL2ImportRouteExceedLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2ImportRouteExceedLimit.setDescription('ISIS level-2 number of imported routes has exceeded the maximum limit.')
hwIsisL2ImportRouteRestoreToLimit = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 5)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TotalRedist"))
if mibBuilder.loadTexts: hwIsisL2ImportRouteRestoreToLimit.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2ImportRouteRestoreToLimit.setDescription('ISIS level-2 number of imported routes is restored to less than or equal to the maximum limit.')
hwIsisL1ImportRouteThresholdReach = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 6)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TotalRedist"))
if mibBuilder.loadTexts: hwIsisL1ImportRouteThresholdReach.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1ImportRouteThresholdReach.setDescription('ISIS level-1 number of imported routes has reached the threshold value.')
hwIsisL1ImportRouteThresholdReachClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 7)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL1TotalRedist"))
if mibBuilder.loadTexts: hwIsisL1ImportRouteThresholdReachClear.setStatus('current')
if mibBuilder.loadTexts: hwIsisL1ImportRouteThresholdReachClear.setDescription('ISIS level-1 number of imported routes has been less than the threshold value.')
hwIsisL2ImportRouteThresholdReach = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 8)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TotalRedist"))
if mibBuilder.loadTexts: hwIsisL2ImportRouteThresholdReach.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2ImportRouteThresholdReach.setDescription('ISIS level-2 number of imported routes has reached the threshold value.')
hwIsisL2ImportRouteThresholdReachClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 9)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2RedistMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2UpperRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2LowerRedistThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcL2TotalRedist"))
if mibBuilder.loadTexts: hwIsisL2ImportRouteThresholdReachClear.setStatus('current')
if mibBuilder.loadTexts: hwIsisL2ImportRouteThresholdReachClear.setDescription('ISIS level-2 number of imported routes has been less than the threshold value.')
hwIsisLsdbThresholdReach = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 10)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwisisProcLsdbMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbUpperThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbLowerThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbTotal"))
if mibBuilder.loadTexts: hwIsisLsdbThresholdReach.setStatus('current')
if mibBuilder.loadTexts: hwIsisLsdbThresholdReach.setDescription('The number of LSP has reached the upper threshold value.')
hwIsisLsdbThresholdReachClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 11)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwisisProcLsdbMaxLimit"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbUpperThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbLowerThreshold"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisProcLsdbTotal"))
if mibBuilder.loadTexts: hwIsisLsdbThresholdReachClear.setStatus('current')
if mibBuilder.loadTexts: hwIsisLsdbThresholdReachClear.setDescription('The number of LSP has been less than the lower threshold value.')
hwIsisSystemIdAutoRecover = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 12)).setObjects(("HUAWEI-ISIS-CONF-MIB", "hwisisSysInstance"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisConflictSystemID"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAutoSysId"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisLocalIP"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisRemoteIP"))
if mibBuilder.loadTexts: hwIsisSystemIdAutoRecover.setStatus('current')
if mibBuilder.loadTexts: hwIsisSystemIdAutoRecover.setDescription('After a system ID conflict was detected within an IS-IS area, IS-IS changed the system ID automatically.')
hwIsisAdjacencyChangeClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 13)).setObjects(("ISIS-MIB", "isisSysInstance"), ("ISIS-MIB", "isisSysLevelIndex"), ("ISIS-MIB", "isisCircIfIndex"), ("ISIS-MIB", "isisPduLspId"), ("ISIS-MIB", "isisAdjState"), ("IF-MIB", "ifName"), ("HUAWEI-ISIS-CONF-MIB", "hwIsisAdjChangeReason"))
if mibBuilder.loadTexts: hwIsisAdjacencyChangeClear.setStatus('current')
if mibBuilder.loadTexts: hwIsisAdjacencyChangeClear.setDescription('The isisAdjacencyChange alarm was cleared.')
hwIsisSeqNumExceedThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 24, 2, 4, 14)).setObjects(("ISIS-MIB", "isisSysInstance"), ("ISIS-MIB", "isisSysLevelIndex"), ("ISIS-MIB", "isisPduLspId"))
if mibBuilder.loadTexts: hwIsisSeqNumExceedThreshold.setStatus('current')
if mibBuilder.loadTexts: hwIsisSeqNumExceedThreshold.setDescription('The LSP sequence number has exceeded the upper threshold value.')
mibBuilder.exportSymbols("HUAWEI-ISIS-CONF-MIB", hwIsisCircBfdMultiplier=hwIsisCircBfdMultiplier, hwIsisProcL1TimerLspGenMaxInterval=hwIsisProcL1TimerLspGenMaxInterval, hwIsisIntfBaseTable=hwIsisIntfBaseTable, hwIsisNETTable=hwIsisNETTable, hwIsisImportRouteGroup=hwIsisImportRouteGroup, hwIsisProcL2CircuitDefaultTag=hwIsisProcL2CircuitDefaultTag, hwIsisCompliances=hwIsisCompliances, SystemID=SystemID, hwIsisL2CsnpTimerValue=hwIsisL2CsnpTimerValue, hwIsisRouteLeakEntry=hwIsisRouteLeakEntry, hwIsisCircSmallHello=hwIsisCircSmallHello, hwIsisProcAreaAuthPasswordName=hwIsisProcAreaAuthPasswordName, hwIsisCircL1DisPriority=hwIsisCircL1DisPriority, hwIsisAutoSysId=hwIsisAutoSysId, hwIsisPrefixPriorityL2TagValue=hwIsisPrefixPriorityL2TagValue, hwIsisProcOnStartFromPeerInterval=hwIsisProcOnStartFromPeerInterval, hwIsisProcBaseTable=hwIsisProcBaseTable, hwIsisPrefixPriorityGroup=hwIsisPrefixPriorityGroup, hwIsisCircPppNego=hwIsisCircPppNego, hwIsisIntfBfdGroup=hwIsisIntfBfdGroup, hwIsisCircSenseRpr=hwIsisCircSenseRpr, hwIsisLocalIP=hwIsisLocalIP, hwIsisCircBfdFrrBinding=hwIsisCircBfdFrrBinding, hwIsisProcTimerSPFMaxInterval=hwIsisProcTimerSPFMaxInterval, InetAddressPrefixLength=InetAddressPrefixLength, hwIsisProcL2FlashFloodCount=hwIsisProcL2FlashFloodCount, hwIsisRouteLeakTypeIndex=hwIsisRouteLeakTypeIndex, hwIsisInterfaceIndex=hwIsisInterfaceIndex, hwIsisImportRouteEntry=hwIsisImportRouteEntry, InetAddressType=InetAddressType, hwIsisCircBfdState=hwIsisCircBfdState, hwIsisProcTimerSPFInitInterval=hwIsisProcTimerSPFInitInterval, hwIsisIntfExtGroup=hwIsisIntfExtGroup, hwIsisCircSimulation=hwIsisCircSimulation, hwIsisAdjChangeReason=hwIsisAdjChangeReason, hwIsisSummaryEntry=hwIsisSummaryEntry, hwIsisCircMeshBlock=hwIsisCircMeshBlock, hwIsisProcDynamicName=hwIsisProcDynamicName, hwIsisProcDefRoutAdvType=hwIsisProcDefRoutAdvType, hwIsisRouteLeakFilterPolicyPolicyName=hwIsisRouteLeakFilterPolicyPolicyName, hwIsisIntfBaseEntry=hwIsisIntfBaseEntry, hwIsisL2ImportRouteRestoreToLimit=hwIsisL2ImportRouteRestoreToLimit, hwIsisProcBFDMinRecvInteval=hwIsisProcBFDMinRecvInteval, hwIsisIntfRowStatus=hwIsisIntfRowStatus, hwIsisProcL1FlashFloodCount=hwIsisProcL1FlashFloodCount, hwIsisMIBObjects=hwIsisMIBObjects, hwIsisFrrPolicyName=hwIsisFrrPolicyName, hwIsisProcTimerMaxAge=hwIsisProcTimerMaxAge, hwIsisProcL1TimerLspGenInitInterval=hwIsisProcL1TimerLspGenInitInterval, hwIsisCircL2Cost=hwIsisCircL2Cost, hwIsisL2ImportRouteThresholdReachClear=hwIsisL2ImportRouteThresholdReachClear, hwIsisSummaryGenNull0RouteEnabled=hwIsisSummaryGenNull0RouteEnabled, hwIsisProcBandWidthReference=hwIsisProcBandWidthReference, hwIsisRouteLeakFilterPolicyType=hwIsisRouteLeakFilterPolicyType, hwIsisProcL1CircuitDefaultTag=hwIsisProcL1CircuitDefaultTag, hwIsisCircL1AuthText=hwIsisCircL1AuthText, hwIsisProcDomainAuthPasswordName=hwIsisProcDomainAuthPasswordName, hwIsisCircLdpSync=hwIsisCircLdpSync, hwIsisTrapsObjects=hwIsisTrapsObjects, hwIsisCircL2HelloMultiplier=hwIsisCircL2HelloMultiplier, hwIsisProcMTStatus=hwIsisProcMTStatus, hwIsisAdjSysName=hwIsisAdjSysName, hwIsisProcDefRoutAdvPolicyName=hwIsisProcDefRoutAdvPolicyName, hwIsisProcDefRoutAdvAvoidLearnEnabled=hwIsisProcDefRoutAdvAvoidLearnEnabled, hwIsisProcDomainAuthCode=hwIsisProcDomainAuthCode, hwIsisPrefixPriorityTable=hwIsisPrefixPriorityTable, hwIsisProcL2UpperRedistThreshold=hwIsisProcL2UpperRedistThreshold, PYSNMP_MODULE_ID=hwISIS, hwIsisCircBfdMinRxInterval=hwIsisCircBfdMinRxInterval, hwIsisProcPrefPolicyName=hwIsisProcPrefPolicyName, hwIsisCircL1Cost=hwIsisCircL1Cost, hwIsisL1TagValue=hwIsisL1TagValue, hwIsisProcMTExtTable=hwIsisProcMTExtTable, hwIsisCircFrrBackup=hwIsisCircFrrBackup, hwIsisImportCostType=hwIsisImportCostType, hwIsisCircL2AuthText=hwIsisCircL2AuthText, hwIsisTrapsObjectsGroup=hwIsisTrapsObjectsGroup, hwIsisOwnSysID=hwIsisOwnSysID, hwIsisProcOptionalChecksumEnabled=hwIsisProcOptionalChecksumEnabled, hwIsisEnableIPProtocol=hwIsisEnableIPProtocol, hwIsisProcL2RedistMaxLimit=hwIsisProcL2RedistMaxLimit, hwIsisPrefixPriorityL1TagValue=hwIsisPrefixPriorityL1TagValue, hwIsisProcDomainAuthType=hwIsisProcDomainAuthType, hwIsisProcOnStartStartFromPeer=hwIsisProcOnStartStartFromPeer, hwIsisProcGRSuppresSAEnabled=hwIsisProcGRSuppresSAEnabled, hwIsisSummaryIPIndex=hwIsisSummaryIPIndex, hwIsisFrrLoopFreeAltLevel=hwIsisFrrLoopFreeAltLevel, hwIsisRemoteIP=hwIsisRemoteIP, hwIsisImportPolicyName=hwIsisImportPolicyName, hwIsisProcIPv6EnableTopologyType=hwIsisProcIPv6EnableTopologyType, hwIsisMTName=hwIsisMTName, hwIsisRouteLeakStatus=hwIsisRouteLeakStatus, hwIsisL1ImportRouteExceedLimit=hwIsisL1ImportRouteExceedLimit, hwIsisProcBaseGroup=hwIsisProcBaseGroup, hwIsisNETIndex=hwIsisNETIndex, hwIsisSummaryGroup=hwIsisSummaryGroup, hwIsisProcMTExtGroup=hwIsisProcMTExtGroup, hwIsisSummaryAvoidFeedBackEnabled=hwIsisSummaryAvoidFeedBackEnabled, hwIsisL2TagValue=hwIsisL2TagValue, hwIsisIpTypeIndex=hwIsisIpTypeIndex, hwIsisCircPadHello=hwIsisCircPadHello, hwIsisCircL2DisPriority=hwIsisCircL2DisPriority, hwIsisImportCost=hwIsisImportCost, hwIsisProcCostStyle=hwIsisProcCostStyle, hwIsisCircL1AuthMode=hwIsisCircL1AuthMode, InetAddress=InetAddress, hwIsisProcGRInterval=hwIsisProcGRInterval, hwIsisProcBFDMinTxInterval=hwIsisProcBFDMinTxInterval, hwIsisCircSuppReachablity=hwIsisCircSuppReachablity, hwIsisProcMTExtEntry=hwIsisProcMTExtEntry, hwIsisProcDefRoutAdvCost=hwIsisProcDefRoutAdvCost, hwIsisProcDefRoutAdvLevel=hwIsisProcDefRoutAdvLevel, hwIsisProcL1RedistMaxLimit=hwIsisProcL1RedistMaxLimit, hwIsisIntfBfdTable=hwIsisIntfBfdTable, hwIsisCircL2AuthSendOnly=hwIsisCircL2AuthSendOnly, hwIsisPrefixPriorityL1PolicyType=hwIsisPrefixPriorityL1PolicyType, hwIsisProcVpn6Name=hwIsisProcVpn6Name, hwIsisCircLspRetransInterval=hwIsisCircLspRetransInterval, hwIsisProcTimerRefresh=hwIsisProcTimerRefresh, hwIsisProcL1CircuitCost=hwIsisProcL1CircuitCost, hwIsisProcDomainAuthPacketAuthMode=hwIsisProcDomainAuthPacketAuthMode, hwIsisProcLogPeerChange=hwIsisProcLogPeerChange, hwIsisRouteLeakGroup=hwIsisRouteLeakGroup, hwIsisAdjacencyChangeClear=hwIsisAdjacencyChangeClear, hwIsisCircLevel=hwIsisCircLevel, hwIsisProcL1UpperRedistThreshold=hwIsisProcL1UpperRedistThreshold, hwIsisProcLsdbTotal=hwIsisProcLsdbTotal, hwIsisCircL1AuthKeychainName=hwIsisCircL1AuthKeychainName, hwIsisProcDefRoutAdvTag=hwIsisProcDefRoutAdvTag, hwIsisSystemIdAutoRecover=hwIsisSystemIdAutoRecover, hwIsisProcLevel=hwIsisProcLevel, hwIsisPrefixPriorityEntry=hwIsisPrefixPriorityEntry, hwIsisProcOnStartInterval=hwIsisProcOnStartInterval, hwIsisProcL2FlashFloodInterval=hwIsisProcL2FlashFloodInterval, hwIsisL1ImportRouteThresholdReach=hwIsisL1ImportRouteThresholdReach, hwIsisAdjSysID=hwIsisAdjSysID, hwIsisProcAreaAuthKeychainName=hwIsisProcAreaAuthKeychainName, hwIsisCircL2AuthCode=hwIsisCircL2AuthCode, hwIsisCircL1HelloMultiplier=hwIsisCircL1HelloMultiplier, hwIsisProcAutoCostEnabled=hwIsisProcAutoCostEnabled, hwIsisNETGroup=hwIsisNETGroup, hwIsisL1ImportRouteThresholdReachClear=hwIsisL1ImportRouteThresholdReachClear, hwIsisCircL1HelloInterval=hwIsisCircL1HelloInterval, hwIsisCircL2HelloInterval=hwIsisCircL2HelloInterval, hwIsisCircL2AuthMode=hwIsisCircL2AuthMode, hwIsisCircBfdMinTxInterval=hwIsisCircBfdMinTxInterval, hwIsisCircLdpSyncHoldDown=hwIsisCircLdpSyncHoldDown, hwIsisProcL1FlashFloodInterval=hwIsisProcL1FlashFloodInterval, hwIsisFrrGroup=hwIsisFrrGroup, hwIsisFrrTable=hwIsisFrrTable, hwIsisCircMTRowStatus=hwIsisCircMTRowStatus, hwIsisProcOnStartWaitForBgpEnabled=hwIsisProcOnStartWaitForBgpEnabled, hwIsisProcL2TotalRedist=hwIsisProcL2TotalRedist, hwIsisConfGroups=hwIsisConfGroups, hwIsisSummaryStatus=hwIsisSummaryStatus, hwisisProcLsdbMaxLimit=hwisisProcLsdbMaxLimit, hwIsisCircSilent=hwIsisCircSilent, hwIsisRouteLeakTag=hwIsisRouteLeakTag, hwIsisProcAreaAuthCode=hwIsisProcAreaAuthCode, hwIsisIntfBfdEntry=hwIsisIntfBfdEntry, hwIsisProcSetOverLoadAllowRoute=hwIsisProcSetOverLoadAllowRoute, hwIsisNETEntry=hwIsisNETEntry, hwIsisSummaryTable=hwIsisSummaryTable, hwIsisCircL1AuthCode=hwIsisCircL1AuthCode, hwIsisCircLdpHldMaxCost=hwIsisCircLdpHldMaxCost, hwIsisIntfExtEntry=hwIsisIntfExtEntry, hwIsisEnableIPv6Protocol=hwIsisEnableIPv6Protocol, hwIsisConflictSystemID=hwIsisConflictSystemID, hwIsisProcIdIndex=hwIsisProcIdIndex, hwIsisProcL2TimerLspGenInitInterval=hwIsisProcL2TimerLspGenInitInterval, hwIsisProcAreaAuthPacketAuthMode=hwIsisProcAreaAuthPacketAuthMode, hwIsisProcMaxLoadBalance=hwIsisProcMaxLoadBalance, hwIsisPrefixPriorityTypeIndex=hwIsisPrefixPriorityTypeIndex, hwIsisIntfBaseGroup=hwIsisIntfBaseGroup, hwIsisSystemIdConflict=hwIsisSystemIdConflict, hwIsisPrefixPriorityL1IpPrefixName=hwIsisPrefixPriorityL1IpPrefixName, hwIsisProcDomainAuthKeychainName=hwIsisProcDomainAuthKeychainName, hwIsisSummaryLevel=hwIsisSummaryLevel, hwIsisSummaryTag=hwIsisSummaryTag, hwIsisProcLsdbUpperThreshold=hwIsisProcLsdbUpperThreshold, hwIsisImportProtocolIndex=hwIsisImportProtocolIndex, hwIsisLspThrottleInterval=hwIsisLspThrottleInterval, hwIsisTrapsGroup=hwIsisTrapsGroup, hwIsisProcGREnabled=hwIsisProcGREnabled, hwIsisProcTimerSPFIncrInterval=hwIsisProcTimerSPFIncrInterval, hwIsisProcL1TimerLspGenIncrInterval=hwIsisProcL1TimerLspGenIncrInterval, hwIsisProcL2LowerRedistThreshold=hwIsisProcL2LowerRedistThreshold, hwIsisProcPrefValue=hwIsisProcPrefValue, hwIsisCircL2AuthKeychainName=hwIsisCircL2AuthKeychainName, hwIsisL2ImportRouteExceedLimit=hwIsisL2ImportRouteExceedLimit, hwIsisImportProcessIdIndex=hwIsisImportProcessIdIndex, hwIsisCircPppOsicpCheck=hwIsisCircPppOsicpCheck, hwIsisProcBFDMultiplier=hwIsisProcBFDMultiplier, hwIsisProcL1LowerRedistThreshold=hwIsisProcL1LowerRedistThreshold, hwIsisModuleFullCompliance=hwIsisModuleFullCompliance, hwIsisCircDisName=hwIsisCircDisName, hwIsisProcAreaAuthType=hwIsisProcAreaAuthType, hwIsisProcBFDEnabled=hwIsisProcBFDEnabled, hwIsisProcL2CircuitCost=hwIsisProcL2CircuitCost, hwIsisProcBFDFrrBindEnabled=hwIsisProcBFDFrrBindEnabled, hwIsisProcL1TotalRedist=hwIsisProcL1TotalRedist, hwIsisRouteLeakFilterPolicyBasicAcl=hwIsisRouteLeakFilterPolicyBasicAcl, hwIsisMTIdIndex=hwIsisMTIdIndex, hwisisSysInstance=hwisisSysInstance, hwIsisImportRouteStatus=hwIsisImportRouteStatus, hwIsisFrrEntry=hwIsisFrrEntry, hwIsisFrrEnabled=hwIsisFrrEnabled, hwIsisAdjIP=hwIsisAdjIP, hwISIS=hwISIS, hwIsisProcL2TimerLspGenIncrInterval=hwIsisProcL2TimerLspGenIncrInterval, hwIsisIntfExtTable=hwIsisIntfExtTable, hwIsisConfConformance=hwIsisConfConformance, hwIsisCircL1AuthSendOnly=hwIsisCircL1AuthSendOnly, hwIsisLsdbThresholdReachClear=hwIsisLsdbThresholdReachClear, hwIsisImportTag=hwIsisImportTag, hwisisSysLevelIndex=hwisisSysLevelIndex, hwIsisLsdbThresholdReach=hwIsisLsdbThresholdReach, hwIsisL2ImportRouteThresholdReach=hwIsisL2ImportRouteThresholdReach, hwIsisL1ImportRouteRestoreToLimit=hwIsisL1ImportRouteRestoreToLimit, hwIsisPrefixPriorityL2IpPrefixName=hwIsisPrefixPriorityL2IpPrefixName, hwIsisRouteLeakTable=hwIsisRouteLeakTable, hwIsisImportInheritCostEnabled=hwIsisImportInheritCostEnabled, hwIsisImportRouteTable=hwIsisImportRouteTable, hwIsisL1CsnpTimerValue=hwIsisL1CsnpTimerValue, hwIsisLspThrottleCount=hwIsisLspThrottleCount, hwIsisCircMeshGroup=hwIsisCircMeshGroup, hwIsisSummaryMaskIndex=hwIsisSummaryMaskIndex, hwIsisProcSetOverLoad=hwIsisProcSetOverLoad, hwIsisConf=hwIsisConf, hwIsisProcL2TimerLspGenMaxInterval=hwIsisProcL2TimerLspGenMaxInterval, hwIsisProcTEEnableLevel=hwIsisProcTEEnableLevel, hwIsisProcLsdbLowerThreshold=hwIsisProcLsdbLowerThreshold, hwIsisCircIpIgnore=hwIsisCircIpIgnore, hwIsisCircStrictSnpaCheckEnable=hwIsisCircStrictSnpaCheckEnable, hwIsisTraps=hwIsisTraps, hwIsisProcRowStatus=hwIsisProcRowStatus, hwIsisSeqNumExceedThreshold=hwIsisSeqNumExceedThreshold, hwIsisPrefixPriorityL2PolicyType=hwIsisPrefixPriorityL2PolicyType, hwIsisImportLevel=hwIsisImportLevel, hwIsisProcVpnName=hwIsisProcVpnName, hwIsisNETStatus=hwIsisNETStatus, hwIsisProcBaseEntry=hwIsisProcBaseEntry)
