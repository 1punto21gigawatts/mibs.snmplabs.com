#
# PySNMP MIB module ENGENIUS-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENGENIUS-CLIENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, IpAddress, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, enterprises, Counter32, MibIdentifier, Integer32, ObjectIdentity, NotificationType, Counter64, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "enterprises", "Counter32", "MibIdentifier", "Integer32", "ObjectIdentity", "NotificationType", "Counter64", "Bits", "ModuleIdentity")
DisplayString, DateAndTime, TimeInterval, MacAddress, RowStatus, TextualConvention, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TimeInterval", "MacAddress", "RowStatus", "TextualConvention", "TimeStamp", "TruthValue")
engeniusmesh = ModuleIdentity((1, 3, 6, 1, 4, 1, 14125, 1))
engeniusmesh.setRevisions(('2007-05-02 10:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: engeniusmesh.setRevisionsDescriptions(('First Release for client purpose',))
if mibBuilder.loadTexts: engeniusmesh.setLastUpdated('200705021000Z')
if mibBuilder.loadTexts: engeniusmesh.setOrganization('Senao Networks, Inc')
if mibBuilder.loadTexts: engeniusmesh.setContactInfo('Senao Networks, Inc. No. 500, Fusing 3rd Rd, Hwa-Ya Technology Park Kuei-Shan Hsiang, Taoyuan County 333, Taiwan. Website: http://www.engeniustech.com/corporate/')
if mibBuilder.loadTexts: engeniusmesh.setDescription('MIB Definition used in the EnGenius Mesh Product Line: iso(1).org(3).dod(6).internet(1).private(4).enterprises(1). engenius(14125).engeniusmesh(1)')
engenius = MibIdentifier((1, 3, 6, 1, 4, 1, 14125))
nodeConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2))
nodeConfigurationSignallevel = MibIdentifier((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30))
signallevelTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2), )
if mibBuilder.loadTexts: signallevelTable.setStatus('current')
if mibBuilder.loadTexts: signallevelTable.setDescription('This table contains the list of signal level between the node and its neighbour nodes.')
signallevelTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1), ).setIndexNames((0, "ENGENIUS-CLIENT-MIB", "signallevelTableIndex"))
if mibBuilder.loadTexts: signallevelTableEntry.setStatus('current')
if mibBuilder.loadTexts: signallevelTableEntry.setDescription('Represent the entry in the Signal Level table.')
signallevelTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: signallevelTableIndex.setStatus('current')
if mibBuilder.loadTexts: signallevelTableIndex.setDescription('Specify the index of the node Signal Level table.')
signallevelTableSource = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableSource.setStatus('current')
if mibBuilder.loadTexts: signallevelTableSource.setDescription("The source node's IP Address")
signallevelTableDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableDestination.setStatus('current')
if mibBuilder.loadTexts: signallevelTableDestination.setDescription("The destination node's IP Address")
signallevelTableRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelTableRssi.setStatus('current')
if mibBuilder.loadTexts: signallevelTableRssi.setDescription('The singal level between the source node and destination node in RSSI.')
signallevelExecute = MibScalar((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: signallevelExecute.setStatus('current')
if mibBuilder.loadTexts: signallevelExecute.setDescription('A command to execute the RSSI update')
clientInfoTable = MibTable((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3), )
if mibBuilder.loadTexts: clientInfoTable.setStatus('current')
if mibBuilder.loadTexts: clientInfoTable.setDescription('This table contains the list of clients info of the nodes.')
clientInfoTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1), ).setIndexNames((0, "ENGENIUS-CLIENT-MIB", "clientInfoTableIndex"))
if mibBuilder.loadTexts: clientInfoTableEntry.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableEntry.setDescription('Represent the entry in the Client Info table.')
clientInfoTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)))
if mibBuilder.loadTexts: clientInfoTableIndex.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableIndex.setDescription('Specify the index of the node Client Info table.')
clientInfoTableEssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableEssid.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableEssid.setDescription('The ESSID of the AP')
clientInfoTableMac = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableMac.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableMac.setDescription('The MAC Address of the client')
clientInfoTableChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableChannel.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableChannel.setDescription('The channel of the Client')
clientInfoTableRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableRate.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableRate.setDescription('The speed rate of the client in kbps')
clientInfoTableRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableRssi.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableRssi.setDescription('The singal level between the client and node in RSSI.')
clientInfoTableIdletime = MibTableColumn((1, 3, 6, 1, 4, 1, 14125, 1, 2, 30, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientInfoTableIdletime.setStatus('current')
if mibBuilder.loadTexts: clientInfoTableIdletime.setDescription('The idle timeout in second of the client.')
mibBuilder.exportSymbols("ENGENIUS-CLIENT-MIB", signallevelTableEntry=signallevelTableEntry, clientInfoTableMac=clientInfoTableMac, signallevelTableDestination=signallevelTableDestination, clientInfoTableEssid=clientInfoTableEssid, clientInfoTableEntry=clientInfoTableEntry, signallevelExecute=signallevelExecute, clientInfoTableRate=clientInfoTableRate, nodeConfigurationSignallevel=nodeConfigurationSignallevel, clientInfoTableIdletime=clientInfoTableIdletime, PYSNMP_MODULE_ID=engeniusmesh, nodeConfiguration=nodeConfiguration, clientInfoTableRssi=clientInfoTableRssi, signallevelTable=signallevelTable, clientInfoTableIndex=clientInfoTableIndex, signallevelTableRssi=signallevelTableRssi, engeniusmesh=engeniusmesh, clientInfoTableChannel=clientInfoTableChannel, signallevelTableIndex=signallevelTableIndex, signallevelTableSource=signallevelTableSource, clientInfoTable=clientInfoTable, engenius=engenius)
