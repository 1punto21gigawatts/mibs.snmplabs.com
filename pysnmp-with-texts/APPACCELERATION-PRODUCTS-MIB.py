#
# PySNMP MIB module APPACCELERATION-PRODUCTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPACCELERATION-PRODUCTS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:23:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
appAccelerationModules, appAccelerationProducts = mibBuilder.importSymbols("APPACCELERATION-SMI", "appAccelerationModules", "appAccelerationProducts")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, Unsigned32, NotificationType, IpAddress, ModuleIdentity, ObjectIdentity, iso, Counter32, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "Unsigned32", "NotificationType", "IpAddress", "ModuleIdentity", "ObjectIdentity", "iso", "Counter32", "Integer32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
appAccelerationProductsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2))
if mibBuilder.loadTexts: appAccelerationProductsMIB.setLastUpdated('201303050000Z')
if mibBuilder.loadTexts: appAccelerationProductsMIB.setOrganization('www.citrix.com')
if mibBuilder.loadTexts: appAccelerationProductsMIB.setContactInfo(' Citrix Systems, Inc. Postal: 851 West Cypress Creek Road Fort Lauderdale, Florida 33309 United States')
if mibBuilder.loadTexts: appAccelerationProductsMIB.setDescription('This module defines the object identifiers that are assigned to various hardware platforms, and hence are returned as values for sysObjectID.')
orbital5500 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 1))
orbitalLC = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 2))
Repeater6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 3))
Repeater6800 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 4))
Repeater8800 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 5))
Repeater8500 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 6))
dp104a = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 7))
Repeater8810 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 8))
Repeater8510 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 9))
Repeater6510 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 10))
Repeater6810 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 11))
CloudBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 12))
CloudBridge700 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 13))
CloudBridgeVPX = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 14))
CloudBridgeSDX = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 15))
CloudBridge2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 16))
CloudBridge3000 = MibIdentifier((1, 3, 6, 1, 4, 1, 3845, 30, 1, 2, 17))
mibBuilder.exportSymbols("APPACCELERATION-PRODUCTS-MIB", CloudBridge3000=CloudBridge3000, CloudBridge2000=CloudBridge2000, Repeater6500=Repeater6500, dp104a=dp104a, Repeater8810=Repeater8810, orbital5500=orbital5500, CloudBridge700=CloudBridge700, Repeater6800=Repeater6800, PYSNMP_MODULE_ID=appAccelerationProductsMIB, Repeater8800=Repeater8800, CloudBridgeSDX=CloudBridgeSDX, CloudBridge=CloudBridge, Repeater8510=Repeater8510, orbitalLC=orbitalLC, Repeater6510=Repeater6510, Repeater6810=Repeater6810, Repeater8500=Repeater8500, appAccelerationProductsMIB=appAccelerationProductsMIB, CloudBridgeVPX=CloudBridgeVPX)
