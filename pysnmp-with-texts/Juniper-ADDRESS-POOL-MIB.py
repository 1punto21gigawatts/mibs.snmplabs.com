#
# PySNMP MIB module Juniper-ADDRESS-POOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-ADDRESS-POOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:01:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
juniRouterName, = mibBuilder.importSymbols("Juniper-ROUTER-MIB", "juniRouterName")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, IpAddress, Integer32, TimeTicks, Counter64, MibIdentifier, Bits, Counter32, iso, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "IpAddress", "Integer32", "TimeTicks", "Counter64", "MibIdentifier", "Bits", "Counter32", "iso", "Unsigned32", "Gauge32")
RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
juniAddressPoolMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21))
juniAddressPoolMIB.setRevisions(('2005-02-11 21:35', '2004-09-17 22:37', '2003-11-03 22:37', '2002-09-16 21:44', '2002-05-06 18:38', '2001-05-02 11:57', '2001-04-27 15:00', '1999-06-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniAddressPoolMIB.setRevisionsDescriptions(('Added support for juniAddressSharedPoolTable.', 'Added support for next pool profile index. Changed the description of the juniAddressPoolRowStatus and the juniAddressAliasRowStatus objects.', 'Added support for address pool aliases.', 'Replaced Unisphere names with Juniper names.', 'Added juniAddressPoolProfileTable to support an address pool with multiple address ranges.', 'Added pool exhaustion variables and notifications for high pool utilization and pool exhaustion.', 'Fixed range on juniAddressPoolNextPoolIndex.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniAddressPoolMIB.setLastUpdated('200502112135Z')
if mibBuilder.loadTexts: juniAddressPoolMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniAddressPoolMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Road Westford, MA 01886-3146 USA Tel: +1 978 589 5800 E-mail: mib@Juniper.net')
if mibBuilder.loadTexts: juniAddressPoolMIB.setDescription('The Address Pool MIB for the Juniper Networks enterprise.')
juniAddressPoolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1))
juniAddressPool = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1))
juniAddressPoolTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1), )
if mibBuilder.loadTexts: juniAddressPoolTable.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolTable.setDescription('A table of IP address pool configuration entries.')
juniAddressPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1), ).setIndexNames((0, "Juniper-ADDRESS-POOL-MIB", "juniAddressPoolIndex"))
if mibBuilder.loadTexts: juniAddressPoolEntry.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolEntry.setDescription('An entry describing an IP address pool configuration.')
juniAddressPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: juniAddressPoolIndex.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolIndex.setDescription('An arbitrary integer index that distinguishes this address pool.')
juniAddressPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolRowStatus.setDescription("Controls creation/deletion of address pools. Only value 'active' will be observed with GET. Only values 'createAndGo' and 'destroy' are supported for SET. To create an entry in this table, the following entry object MUST be explicitly configured: juniAddressPoolName Once created, the objects with current status can be modified with the exception of the juniAddressPoolName object. Deleting a row in this table will result in the removal of all rows in the juniAddressPoolProfileTable with the same pool index.")
juniAddressPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolName.setReference('RFC 854: NVT ASCII character set.')
if mibBuilder.loadTexts: juniAddressPoolName.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolName.setDescription('The name of this address pool. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126).')
juniAddressPoolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolStart.setStatus('deprecated')
if mibBuilder.loadTexts: juniAddressPoolStart.setDescription("The starting IP address for the range of addresses comprising the 'first' pool profile entry. This object is deprecated in favor of juniAddressPoolProfileStart because it applies to a single address range and can only show one of possibly many address ranges found in the newer juniAddressPoolProfileTable. The value in this table maps to the value in the juniAddressPoolProfileTable for the entry with juniAddressPoolProfileIndex equal to 1.")
juniAddressPoolEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolEnd.setStatus('deprecated')
if mibBuilder.loadTexts: juniAddressPoolEnd.setDescription("The ending IP address for the range of addresses comprising the 'first' pool profile entry. This object is deprecated in favor of juniAddressPoolProfileEnd because it applies to a single address range and can only show one of possibly many address ranges found in the newer juniAddressPoolProfileTable. The value in this table maps to the value in the juniAddressPoolProfileTable for the entry with juniAddressPoolProfileIndex equal to 1.")
juniAddressPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolSize.setStatus('deprecated')
if mibBuilder.loadTexts: juniAddressPoolSize.setDescription("The number of addresses available in the 'first' pool profile entry. This object is deprecated in favor of juniAddressPoolProfileSize because it applies to a single address range and can only show one of possibly many address ranges found in the newer juniAddressPoolProfileTable. The value in this table maps to the value in the juniAddressPoolProfileTable for the entry with juniAddressPoolProfileIndex equal to 1.")
juniAddressPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolInUse.setStatus('deprecated')
if mibBuilder.loadTexts: juniAddressPoolInUse.setDescription("The number of addresses currently allocated from the 'first' pool profile entry. This object is deprecated in favor of juniAddressPoolProfileInUse because it applies to a single address range and can only show one of possibly many address ranges found in the newer juniAddressPoolProfileTable. The value in this table maps to the value in the juniAddressPoolProfileTable for the entry with juniAddressPoolProfileIndex equal to 1.")
juniAddressPoolHighUtilThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(85)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolHighUtilThreshold.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolHighUtilThreshold.setDescription('The value of address pool utilization, where if reached for the first time, will generate a high address pool utilization event to the management entity on this system. The value of this object must be greater than the value of juniAddressPoolAbatedUtilThreshold.')
juniAddressPoolAbatedUtilThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(75)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolAbatedUtilThreshold.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolAbatedUtilThreshold.setDescription('The value of address pool utilization that is used to determine when to generate an abated address pool utilization event notification to the management entity on this system. The value of this object must be less than the value of the juniAddressPoolHighUtilThreshold. The abated address pool utilization event is sent once if the high address pool utilization threshold is reached and utilization falls to the value of this object.')
juniAddressPoolUtilPct = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolUtilPct.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolUtilPct.setDescription('The current address utilization for this pool.')
juniAddressPoolTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolTrapEnable.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolTrapEnable.setDescription('The configuration setting for address pool notifications. Setting this object to enable(1) will enable the sending of juniAddressPool event notifications to the management entity on this device. Setting this object to false(2) will disable event notification reports.')
juniAddressPoolNextPoolProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolNextPoolProfileIndex.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolNextPoolProfileIndex.setDescription('Coordinate juniAddressPoolProfileIndex value allocation for entries in juniAddressPoolProfileTable. A GET of this object returns the next available juniAddressPoolProfileIndex value to be used to create an entry in the associated juniAddressPoolProfileTable; or zero, if no valid juniAddressPoolProfileIndex is available. This object returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that a new index allocation is unintended.')
juniAddressPoolProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3), )
if mibBuilder.loadTexts: juniAddressPoolProfileTable.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileTable.setDescription('A table of IP address pool profile entries.')
juniAddressPoolProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1), ).setIndexNames((0, "Juniper-ADDRESS-POOL-MIB", "juniAddressPoolIndex"), (0, "Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileIndex"))
if mibBuilder.loadTexts: juniAddressPoolProfileEntry.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileEntry.setDescription('An IP address pool profile entry. Deleting an entry in the juniAddressPoolProfileTable will result in the removal of all entries in this table that have the same pool index value.')
juniAddressPoolProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: juniAddressPoolProfileIndex.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileIndex.setDescription('A monotonically increasing integer for the sole purpose of indexing entries within the named address pool.')
juniAddressPoolProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileRowStatus.setDescription("Controls creation/deletion of address pools. Only value 'active' will be observed with GET. Only values 'createAndGo' and 'destroy' are supported for SET. To create an entry in this table, the following entry objects MUST be explicitly configured: juniAddressPoolProfileStart juniAddressPoolProfileEnd Once created, entry content cannot be modified except by deleting and recreating an entry with the same index.")
juniAddressPoolProfileStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolProfileStart.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileStart.setDescription('The starting IP address for the range of addresses comprising this pool.')
juniAddressPoolProfileEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressPoolProfileEnd.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileEnd.setDescription('The ending IP address for the range of addresses comprising this pool.')
juniAddressPoolProfileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolProfileSize.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileSize.setDescription('The number of addresses available in this pool.')
juniAddressPoolProfileInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolProfileInUse.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolProfileInUse.setDescription('The number of addresses currently allocated from this pool.')
juniAddressAliasTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 4), )
if mibBuilder.loadTexts: juniAddressAliasTable.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasTable.setDescription("A table of IP address alias entries. An alias is an alternate name for an existing local address pool within a virtual router. It is comprised of an alias name and a pool name. Multiple aliases may be configured for each virtual router. They will be stored in an alias table that will be managed by the virtual router's local address server. A maximum number of 32 aliases may be configured per virtual router. When an AAA Server requests an IP address from a specific local address pool within a virtual router, the local address server will first search its alias table for a matching alias name. If an alias exists, the IP address would be allocated from the pool specified by the alias. If no alias exists, the IP address would be allocated from the pool specified in the request. If a pool is not specified in the request, the local address server would disregard its alias table and allocate the first available IP address from its pools.")
juniAddressAliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 4, 1), ).setIndexNames((1, "Juniper-ADDRESS-POOL-MIB", "juniAddressAliasName"))
if mibBuilder.loadTexts: juniAddressAliasEntry.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasEntry.setDescription('An IP address alias entry.')
juniAddressAliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: juniAddressAliasName.setReference('RFC 854: NVT ASCII character set.')
if mibBuilder.loadTexts: juniAddressAliasName.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasName.setDescription('The name of this alias. It should match a local address pool name that would appear in an IP address request from an AAA Server. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126).')
juniAddressAliasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressAliasRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasRowStatus.setDescription("Controls creation/deletion of address aliases. Only value 'active' will be observed with GET, GETNEXT, and GETBULK. Only values 'createAndGo' and 'destroy' are supported for SET.")
juniAddressAliasPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressAliasPoolName.setReference('RFC 854: NVT ASCII character set.')
if mibBuilder.loadTexts: juniAddressAliasPoolName.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasPoolName.setDescription('The name of the address pool for this alias; corresponds to a juniAddressPoolName value in an existing juniAddressPoolTable entry. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126).')
juniAddressSharedPoolTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5), )
if mibBuilder.loadTexts: juniAddressSharedPoolTable.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolTable.setDescription('A table of shared address pool configuration entries. These pools rely on DHCP for address allocations.')
juniAddressSharedPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1), ).setIndexNames((0, "Juniper-ADDRESS-POOL-MIB", "juniAddressSharedPoolIndex"))
if mibBuilder.loadTexts: juniAddressSharedPoolEntry.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolEntry.setDescription('An entry describing a shared address pool configuration.')
juniAddressSharedPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: juniAddressSharedPoolIndex.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolIndex.setDescription('An arbitrary integer index that distinguishes this address pool.')
juniAddressSharedPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressSharedPoolRowStatus.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolRowStatus.setDescription("Controls creation/deletion of address pools. Only value 'active' will be observed with GET. Only values 'createAndGo' and 'destroy' are supported for SET. To create an entry in this table, the following entry objects MUST be explicitly configured: juniAddressSharedPoolName, juniAddressSharedPoolDhcpPoolName. Once created, the objects in this table can not be modified.")
juniAddressSharedPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressSharedPoolName.setReference('RFC 854: NVT ASCII character set.')
if mibBuilder.loadTexts: juniAddressSharedPoolName.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolName.setDescription('The name of this address pool. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126). Values for this object are mutually exclusive with juniAddressPoolName.')
juniAddressSharedPoolDhcpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: juniAddressSharedPoolDhcpPoolName.setReference('RFC 854: NVT ASCII character set.')
if mibBuilder.loadTexts: juniAddressSharedPoolDhcpPoolName.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolDhcpPoolName.setDescription('The name of the DHCP pool that allocates addresses for this pool. Represents textual information taken from the NVT ASCII graphics character set (codes 32 through 126).')
juniAddressSharedPoolInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressSharedPoolInUse.setStatus('current')
if mibBuilder.loadTexts: juniAddressSharedPoolInUse.setDescription('The current number of address allocations for this entry.')
juniAddressPoolNextPoolIndex = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniAddressPoolNextPoolIndex.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolNextPoolIndex.setDescription('Coordinate values of juniAddressPoolIndex and juniAddressSharedPoolIndex for entries in juniAddressPoolTable and juniAddressSharedPoolTable. A GET of this object returns the next available index value to be used to create an entry in the associated juniAddressPoolTable or juniAddressSharedPoolTable or zero, if no valid index is available. This object returns a value of zero when it is the lexicographic successor of a varbind presented in an SNMP GETNEXT or GETBULK request, for which circumstance it is assumed that a new index allocation is unintended.')
juniAddressPoolTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 3))
juniAddressPoolTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 3, 0))
juniAddressPoolHighAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 3, 0, 1)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"))
if mibBuilder.loadTexts: juniAddressPoolHighAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolHighAddrUtil.setDescription('Reports address pool utilization has reached the configured high utilization threshold.')
juniAddressPoolAbatedAddrUtil = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 3, 0, 2)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"))
if mibBuilder.loadTexts: juniAddressPoolAbatedAddrUtil.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolAbatedAddrUtil.setDescription('Reports address pool utilization has fallen to the configured abated threshold level.')
juniAddressPoolNoAddresses = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 3, 0, 3)).setObjects(("Juniper-ROUTER-MIB", "juniRouterName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"))
if mibBuilder.loadTexts: juniAddressPoolNoAddresses.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolNoAddresses.setDescription('Reports address pool has exhausted its supply of addresses. This trap is issued every time a request is made to allocate an address from a fully utilized pool.')
juniAddressPoolMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4))
juniAddressPoolMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1))
juniAddressPoolMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2))
juniAddressPoolCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 1)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance = juniAddressPoolCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolCompliance.setDescription('Obsolete compliance statement for systems providing local address pools. This statement became obsolete when pool exhaustion variables and notifications were added.')
juniAddressPoolCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 2)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup2"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance2 = juniAddressPoolCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolCompliance2.setDescription('Obsolete compliance statement for systems providing local address pools. This statement became obsolete when support was added for address pools with multiple address ranges.')
juniAddressPoolCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 3)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup3"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance3 = juniAddressPoolCompliance3.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolCompliance3.setDescription('Obsolete compliance statement for systems providing local address pools. This statement became obsolete when support was added for address aliases.')
juniAddressPoolCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 4)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup3"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapGroup"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressAliasGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance4 = juniAddressPoolCompliance4.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolCompliance4.setDescription('Obsolete compliance statement for systems providing local address pools. This statement became obsolete when support was added for next PoolProfile index.')
juniAddressPoolCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 5)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup4"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapGroup"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressAliasGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance5 = juniAddressPoolCompliance5.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolCompliance5.setDescription('Obsolete compliance statement for systems providing local address pools. This statement became obsolete when support was added for shared address pools.')
juniAddressPoolCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 1, 6)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolGroup5"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapGroup"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressAliasGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolCompliance6 = juniAddressPoolCompliance6.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolCompliance6.setDescription('The compliance statement for systems providing local address pools.')
juniAddressPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 1)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolGroup = juniAddressPoolGroup.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolGroup.setDescription('Obsolete collection of objects providing management of local address pools. This group became obsolete when pool exhaustion variables and notifications were added.')
juniAddressPoolGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 2)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolIndex"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolHighUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolAbatedUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolGroup2 = juniAddressPoolGroup2.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolGroup2.setDescription('Obsolete collection of objects providing management of local address pools. This group became obsolete when support was added for address pools with multiple address ranges.')
juniAddressPoolTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 3)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolHighAddrUtil"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolAbatedAddrUtil"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNoAddresses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolTrapGroup = juniAddressPoolTrapGroup.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolTrapGroup.setDescription('The notifications providing alarms for high pool utilization and pool exhaustion of local address pools.')
juniAddressPoolGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 4)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolIndex"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolHighUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolAbatedUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapEnable"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolGroup3 = juniAddressPoolGroup3.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolGroup3.setDescription('The basic collection of objects providing management of local address pools.')
juniAddressPoolDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 5)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolDeprecatedGroup = juniAddressPoolDeprecatedGroup.setStatus('deprecated')
if mibBuilder.loadTexts: juniAddressPoolDeprecatedGroup.setDescription('A collection of deprecated objects providing management of local address pools. This group became deprecated when support was added for address pools with multiple address ranges.')
juniAddressAliasGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 6)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressAliasRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressAliasPoolName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressAliasGroup = juniAddressAliasGroup.setStatus('current')
if mibBuilder.loadTexts: juniAddressAliasGroup.setDescription('The basic collection of objects providing management of local address aliases.')
juniAddressPoolGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 7)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolIndex"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolHighUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolAbatedUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapEnable"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolProfileIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolGroup4 = juniAddressPoolGroup4.setStatus('obsolete')
if mibBuilder.loadTexts: juniAddressPoolGroup4.setDescription('Obsolete collection of objects providing management of local address pools.')
juniAddressPoolGroup5 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 21, 4, 2, 8)).setObjects(("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolIndex"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolHighUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolAbatedUtilThreshold"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolUtilPct"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolTrapEnable"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileStart"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileEnd"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileSize"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolProfileInUse"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressPoolNextPoolProfileIndex"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressSharedPoolRowStatus"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressSharedPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressSharedPoolDhcpPoolName"), ("Juniper-ADDRESS-POOL-MIB", "juniAddressSharedPoolInUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniAddressPoolGroup5 = juniAddressPoolGroup5.setStatus('current')
if mibBuilder.loadTexts: juniAddressPoolGroup5.setDescription('The basic collection of objects providing management of local address pools.')
mibBuilder.exportSymbols("Juniper-ADDRESS-POOL-MIB", juniAddressPoolGroup4=juniAddressPoolGroup4, juniAddressPoolNoAddresses=juniAddressPoolNoAddresses, juniAddressPoolObjects=juniAddressPoolObjects, juniAddressPoolAbatedUtilThreshold=juniAddressPoolAbatedUtilThreshold, juniAddressPoolTraps=juniAddressPoolTraps, juniAddressPoolCompliance2=juniAddressPoolCompliance2, juniAddressPoolTable=juniAddressPoolTable, juniAddressAliasEntry=juniAddressAliasEntry, juniAddressSharedPoolTable=juniAddressSharedPoolTable, juniAddressPoolGroup3=juniAddressPoolGroup3, juniAddressPoolMIB=juniAddressPoolMIB, juniAddressPoolNextPoolIndex=juniAddressPoolNextPoolIndex, juniAddressPoolUtilPct=juniAddressPoolUtilPct, juniAddressPoolAbatedAddrUtil=juniAddressPoolAbatedAddrUtil, juniAddressAliasGroup=juniAddressAliasGroup, juniAddressPoolSize=juniAddressPoolSize, juniAddressPoolGroup5=juniAddressPoolGroup5, juniAddressPoolHighAddrUtil=juniAddressPoolHighAddrUtil, juniAddressPoolHighUtilThreshold=juniAddressPoolHighUtilThreshold, juniAddressPoolTrapEnable=juniAddressPoolTrapEnable, juniAddressPoolProfileEntry=juniAddressPoolProfileEntry, juniAddressPoolProfileIndex=juniAddressPoolProfileIndex, juniAddressSharedPoolDhcpPoolName=juniAddressSharedPoolDhcpPoolName, juniAddressSharedPoolEntry=juniAddressSharedPoolEntry, juniAddressAliasRowStatus=juniAddressAliasRowStatus, juniAddressAliasName=juniAddressAliasName, juniAddressPoolMIBGroups=juniAddressPoolMIBGroups, juniAddressPoolTrapGroup=juniAddressPoolTrapGroup, juniAddressPoolRowStatus=juniAddressPoolRowStatus, juniAddressPoolGroup2=juniAddressPoolGroup2, juniAddressPoolProfileTable=juniAddressPoolProfileTable, juniAddressPoolMIBConformance=juniAddressPoolMIBConformance, juniAddressPoolTrapPrefix=juniAddressPoolTrapPrefix, juniAddressPoolEnd=juniAddressPoolEnd, juniAddressPoolProfileRowStatus=juniAddressPoolProfileRowStatus, juniAddressPoolProfileInUse=juniAddressPoolProfileInUse, juniAddressPoolProfileStart=juniAddressPoolProfileStart, juniAddressPoolCompliance4=juniAddressPoolCompliance4, juniAddressPool=juniAddressPool, juniAddressPoolIndex=juniAddressPoolIndex, PYSNMP_MODULE_ID=juniAddressPoolMIB, juniAddressSharedPoolRowStatus=juniAddressSharedPoolRowStatus, juniAddressPoolCompliance6=juniAddressPoolCompliance6, juniAddressSharedPoolName=juniAddressSharedPoolName, juniAddressSharedPoolInUse=juniAddressSharedPoolInUse, juniAddressPoolGroup=juniAddressPoolGroup, juniAddressPoolInUse=juniAddressPoolInUse, juniAddressPoolCompliance5=juniAddressPoolCompliance5, juniAddressPoolProfileEnd=juniAddressPoolProfileEnd, juniAddressPoolDeprecatedGroup=juniAddressPoolDeprecatedGroup, juniAddressPoolCompliance3=juniAddressPoolCompliance3, juniAddressPoolMIBCompliances=juniAddressPoolMIBCompliances, juniAddressAliasTable=juniAddressAliasTable, juniAddressPoolStart=juniAddressPoolStart, juniAddressAliasPoolName=juniAddressAliasPoolName, juniAddressPoolCompliance=juniAddressPoolCompliance, juniAddressPoolProfileSize=juniAddressPoolProfileSize, juniAddressPoolEntry=juniAddressPoolEntry, juniAddressPoolName=juniAddressPoolName, juniAddressPoolNextPoolProfileIndex=juniAddressPoolNextPoolProfileIndex, juniAddressSharedPoolIndex=juniAddressSharedPoolIndex)
