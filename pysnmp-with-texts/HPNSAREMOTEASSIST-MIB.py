#
# PySNMP MIB module HPNSAREMOTEASSIST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSAREMOTEASSIST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:42:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Integer32, ObjectIdentity, Counter32, NotificationType, Unsigned32, ModuleIdentity, NotificationType, Bits, Gauge32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "ObjectIdentity", "Counter32", "NotificationType", "Unsigned32", "ModuleIdentity", "NotificationType", "Bits", "Gauge32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaRemoteAssist = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8))
hpnsaRAMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1))
hpnsaRAAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2))
hpnsaRAInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3))
hpnsaRATemp = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4))
hpnsaRAVolt = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5))
hpnsaRABusUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6))
hpnsaRALog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7))
hpnsaRAEventConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8))
hpnsaRAMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAMibRevMajor.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAMibRevMajor.setDescription('The major revision level of the MIB.')
hpnsaRAMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAMibRevMinor.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAMibRevMinor.setDescription('The minor revision level of the MIB.')
hpnsaRAAgentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1), )
if mibBuilder.loadTexts: hpnsaRAAgentTable.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentTable.setDescription('A table of SNMP agents that satisfy requests for this MIB.')
hpnsaRAAgentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRAAgentIndex"))
if mibBuilder.loadTexts: hpnsaRAAgentEntry.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentEntry.setDescription('A description of the agents that access related information in HP Remote Assistant.')
hpnsaRAAgentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentIndex.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentIndex.setDescription('A unique index for this module description.')
hpnsaRAAgentName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentName.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentName.setDescription('Name of the agent/agents satisfying SNMP requests for this MIB.')
hpnsaRAAgentVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentVersion.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentVersion.setDescription('Version number of the agent/agents satisfying SNMP requests for this MIB.')
hpnsaRAAgentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAAgentDate.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAAgentDate.setDescription('The date on which this agent was created. field octets contents range ------------------------------------------------- 1 1 years since 1900 0..255 2 2 month 1..12 3 3 day 1..31 4 4 hour 0..23 5 5 minute 0..59 6 6 second 0..59 ')
hpnsaRAInfoBoardType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardType.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAInfoBoardType.setDescription('A description of the type of HP Remote Assistant board.')
hpnsaRAInfoBoardName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardName.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAInfoBoardName.setDescription('The server name configured on the HP Remote Assistant board.')
hpnsaRAInfoBoardID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardID.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAInfoBoardID.setDescription('The server ID configured on the HP Remote Assistant board.')
hpnsaRAInfoBoardVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAInfoBoardVersion.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAInfoBoardVersion.setDescription('The HP Remote Assistant firmware version.')
hpnsaRATempMeasured = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempMeasured.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRATempMeasured.setDescription('Current temperature in degrees Celsius as measured by the HP Remote Assistant on-board sensor.')
hpnsaRATempWarnLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempWarnLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRATempWarnLimit.setDescription('Temperature warning threshold value in degrees Celsius for the HP Remote Assistant on-board sensor.')
hpnsaRATempGracefulSDLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempGracefulSDLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRATempGracefulSDLimit.setDescription('Graceful shutdown temperature threshold value in degrees Celsius for the HP Remote Assistant on-board sensor.')
hpnsaRATempCriticalSDLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRATempCriticalSDLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRATempCriticalSDLimit.setDescription('Critical shutdown temperature threshold value in degrees Celsius for the HP Remote Assistant on-board sensor.')
hpnsaRAVoltTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1), )
if mibBuilder.loadTexts: hpnsaRAVoltTable.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltTable.setDescription('A table of HP Remote Assistant voltage entries.')
hpnsaRAVoltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRAVoltTypeIndex"))
if mibBuilder.loadTexts: hpnsaRAVoltEntry.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltEntry.setDescription('HP Remote Assistant voltage information.')
hpnsaRAVoltTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("negative12v", 1), ("positive12v", 2), ("positive5v", 3), ("positive3v", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltTypeIndex.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltTypeIndex.setDescription('A unique index for each voltage level.')
hpnsaRAVoltMeasured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltMeasured.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltMeasured.setDescription('The measured value for the particular voltage level in volts.')
hpnsaRAVoltLoLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltLoLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltLoLimit.setDescription('The low threshold value in volts at which HP Remote Assistant pages the configured administrator.')
hpnsaRAVoltHiLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 5, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRAVoltHiLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAVoltHiLimit.setDescription('The high threshold value in volts at which HP Remote Assistant pages the configured administrator.')
hpnsaRABusUsage5SecAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage5SecAve.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRABusUsage5SecAve.setDescription('The EISA bus utilization averaged over the last 5 seconds.')
hpnsaRABusUsage15SecAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage15SecAve.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRABusUsage15SecAve.setDescription('The EISA bus utilization averaged over the last 15 seconds.')
hpnsaRABusUsage1MinAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage1MinAve.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRABusUsage1MinAve.setDescription('The EISA bus utilization averaged over the last minute.')
hpnsaRABusUsage5MinAve = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsage5MinAve.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRABusUsage5MinAve.setDescription('The EISA bus utilization averaged over the last 5 minutes.')
hpnsaRABusUsageLimit = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 6, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRABusUsageLimit.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRABusUsageLimit.setDescription('The EISA bus utilization threshold value at which HP Remote Assistant pages the configured administrator. HP Remote Assistant compares this threshold with the 5 minute average.')
hpnsaRALogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1), )
if mibBuilder.loadTexts: hpnsaRALogTable.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogTable.setDescription('A table of HP Remote Assistant log entries.')
hpnsaRALogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1), ).setIndexNames((0, "HPNSAREMOTEASSIST-MIB", "hpnsaRALogIndex"))
if mibBuilder.loadTexts: hpnsaRALogEntry.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogEntry.setDescription('HP Remote Assistant log information.')
hpnsaRALogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogIndex.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogIndex.setDescription('A unique index for each log entry.')
hpnsaRALogEventCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogEventCode.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogEventCode.setDescription("The code for the logged event. Refer to the HP Remote Assistant User's Manual for event code descriptions.")
hpnsaRALogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogDescription.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogDescription.setDescription('A description of the logged event.')
hpnsaRALogViewed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("new", 0), ("viewed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogViewed.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogViewed.setDescription('Indicates whether this log entry is new or has been previously viewed.')
hpnsaRALogDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogDateTime.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogDateTime.setDescription('The date on which the event occured. octets contents range -------------------------------------------- 1 years since 1900 0..255 2 month 1..12 3 day 1..31 4 hour 0..23 5 minute 0..59 6 second 0..59 ')
hpnsaRALogData = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 7, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaRALogData.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRALogData.setDescription('The data associated with the logged event.')
hpnsaRAEventConfigGlobal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigGlobal.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigGlobal.setDescription('Control for the HP Remote Assistant in-band traps. This is a global value that overrides all of the controls in this group. A value of 1 means all traps enabled; 0 means disabled.')
hpnsaRAEventConfigVolt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigVolt.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigVolt.setDescription('Control for the HP Remote Assistant in-band voltage traps. A value of 1 means voltage traps enabled; 0 means disabled.')
hpnsaRAEventConfigTemp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigTemp.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigTemp.setDescription('Control for the HP Remote Assistant in-band temperature traps. A value of 1 means temperature traps enabled; 0 means disabled.')
hpnsaRAEventConfigAsr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigAsr.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigAsr.setDescription('Control for the HP Remote Assistant in-band ASR traps. A value of 1 means ASR traps enabled; 0 means disabled.')
hpnsaRAEventConfigRemBoot = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigRemBoot.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigRemBoot.setDescription('Control for the HP Remote Assistant in-band remote boot traps. A value of 1 means remote boot traps enabled; 0 means disabled.')
hpnsaRAEventConfigBusUsage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigBusUsage.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigBusUsage.setDescription('Control for the HP Remote Assistant in-band EISA bus utilization traps. A value of 1 means bus utilization traps enabled; 0 means disabled.')
hpnsaRAEventConfigRemAsst = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigRemAsst.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigRemAsst.setDescription('Control for the other HP Remote Assistant in-band traps. A value of 1 means traps enabled; 0 means disabled.')
hpnsaRAEventConfigTrapTest = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigTrapTest.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigTrapTest.setDescription('Control for the HP Remote Assistant in-band test trap. A value of 1 means test trap enabled; 0 means disabled.')
hpnsaRAEventConfigHostSys = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 8, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnsaRAEventConfigHostSys.setStatus('mandatory')
if mibBuilder.loadTexts: hpnsaRAEventConfigHostSys.setDescription('Control for the HP Remote Assistant in-band host system traps. A value of 1 means host system traps enabled; 0 means disabled.')
mibBuilder.exportSymbols("HPNSAREMOTEASSIST-MIB", hpnsaRAMibRev=hpnsaRAMibRev, hpnsaRAEventConfigRemBoot=hpnsaRAEventConfigRemBoot, hpnsaRALogIndex=hpnsaRALogIndex, hpnsaRALogDescription=hpnsaRALogDescription, hpnsaRATempMeasured=hpnsaRATempMeasured, hpnsaRAEventConfigTemp=hpnsaRAEventConfigTemp, nm=nm, hpnsaRALogDateTime=hpnsaRALogDateTime, hpnsa=hpnsa, hpnsaRABusUsage15SecAve=hpnsaRABusUsage15SecAve, hpnsaRABusUsageLimit=hpnsaRABusUsageLimit, hpnsaRAEventConfigAsr=hpnsaRAEventConfigAsr, hpnsaRAEventConfigRemAsst=hpnsaRAEventConfigRemAsst, hpnsaRAAgentIndex=hpnsaRAAgentIndex, hpnsaRAMibRevMajor=hpnsaRAMibRevMajor, hpnsaRAAgentTable=hpnsaRAAgentTable, hpnsaRAAgentDate=hpnsaRAAgentDate, hpnsaRAInfoBoardType=hpnsaRAInfoBoardType, hpnsaRAInfo=hpnsaRAInfo, hpnsaRAVoltLoLimit=hpnsaRAVoltLoLimit, hpnsaRAEventConfigVolt=hpnsaRAEventConfigVolt, hpnsaRATempGracefulSDLimit=hpnsaRATempGracefulSDLimit, hpnsaRAEventConfig=hpnsaRAEventConfig, hpnsaRAInfoBoardVersion=hpnsaRAInfoBoardVersion, hpnsaRALogViewed=hpnsaRALogViewed, hpnsaRAEventConfigTrapTest=hpnsaRAEventConfigTrapTest, hpnsaRALogEventCode=hpnsaRALogEventCode, hpnsaRABusUsage5SecAve=hpnsaRABusUsage5SecAve, hpnsaRAVoltMeasured=hpnsaRAVoltMeasured, hpnsaRAVoltHiLimit=hpnsaRAVoltHiLimit, hpnsaRAInfoBoardID=hpnsaRAInfoBoardID, hp=hp, hpnsaRAEventConfigHostSys=hpnsaRAEventConfigHostSys, hpnsaRAEventConfigGlobal=hpnsaRAEventConfigGlobal, hpnsaRAInfoBoardName=hpnsaRAInfoBoardName, hpnsaRAAgent=hpnsaRAAgent, hpnsaRATempCriticalSDLimit=hpnsaRATempCriticalSDLimit, hpnsaRABusUsage=hpnsaRABusUsage, hpnsaRAAgentName=hpnsaRAAgentName, hpnsaRABusUsage5MinAve=hpnsaRABusUsage5MinAve, hpnsaRAAgentEntry=hpnsaRAAgentEntry, hpnsaRAVoltTable=hpnsaRAVoltTable, hpnsaRALog=hpnsaRALog, hpnsaRABusUsage1MinAve=hpnsaRABusUsage1MinAve, hpnsaRALogData=hpnsaRALogData, hpnsaRALogEntry=hpnsaRALogEntry, hpnsaRALogTable=hpnsaRALogTable, hpnsaRAAgentVersion=hpnsaRAAgentVersion, hpnsaRATemp=hpnsaRATemp, hpnsaRAVoltTypeIndex=hpnsaRAVoltTypeIndex, hpnsaRATempWarnLimit=hpnsaRATempWarnLimit, hpnsaRemoteAssist=hpnsaRemoteAssist, hpnsaRAVoltEntry=hpnsaRAVoltEntry, hpnsaRAMibRevMinor=hpnsaRAMibRevMinor, hpnsaRAEventConfigBusUsage=hpnsaRAEventConfigBusUsage, hpnsaRAVolt=hpnsaRAVolt)
