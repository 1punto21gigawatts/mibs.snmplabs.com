#
# PySNMP MIB module HP-ICF-OID (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-OID
# Produced by pysmi-0.3.4 at Wed May  1 12:26:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Gauge32, Counter32, iso, Integer32, Bits, Unsigned32, enterprises, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Gauge32", "Counter32", "iso", "Integer32", "Bits", "Unsigned32", "enterprises", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
icf = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14))
icf.setRevisions(('2017-11-08 00:00', '2017-07-18 00:00', '2017-05-01 00:00', '2017-03-28 00:00', '2017-03-08 00:00', '2017-01-18 00:00', '2016-12-07 00:00', '2016-10-07 00:00', '2016-06-06 00:00', '2016-02-02 00:00', '2015-12-08 00:00', '2015-11-18 00:00', '2015-11-12 00:00', '2015-11-10 00:00', '2015-10-15 00:00', '2015-09-21 00:00', '2015-05-22 00:00', '2015-05-19 00:00', '2015-05-07 00:00', '2015-04-30 00:00', '2015-04-23 00:00', '2015-04-06 00:00', '2015-03-24 00:00', '2015-02-20 00:00', '2015-02-13 00:00', '2015-01-30 00:00', '2014-10-01 00:00', '2014-07-31 00:00', '2014-06-25 00:00', '2014-06-23 00:00', '2014-05-27 00:00', '2014-03-25 00:00', '2014-03-04 00:00', '2014-02-13 00:00', '2013-09-14 00:00', '2013-07-22 00:00', '2013-07-15 00:00', '2013-07-08 00:00', '2013-06-12 00:00', '2013-04-05 00:00', '2013-04-04 00:00', '2013-03-20 00:00', '2013-02-11 00:00', '2013-01-21 00:00', '2012-12-07 00:00', '2012-12-06 00:00', '2012-10-17 00:00', '2012-08-21 00:00', '2012-04-02 00:00', '2012-03-22 00:00', '2012-02-17 00:00', '2011-07-03 00:00', '2011-05-27 00:00', '2011-05-09 00:00', '2011-03-03 00:00', '2010-12-14 00:00', '2010-09-06 16:32', '2010-08-04 00:00', '2010-07-22 00:00', '2010-06-25 00:00', '2010-06-22 00:00', '2010-05-18 00:00', '2010-05-17 00:00', '2010-04-22 00:00', '2010-04-21 00:00', '2010-04-11 00:00', '2010-03-22 00:00', '2010-02-08 00:00', '2009-12-08 00:00', '2009-10-16 00:00', '2009-09-25 00:00', '2009-09-24 00:00', '2009-09-09 00:00', '2009-07-08 00:00', '2009-04-08 00:00', '2009-02-17 00:00', '2009-02-04 00:00', '2009-02-02 00:00', '2008-12-15 00:01', '2008-12-15 00:00', '2008-10-30 00:00', '2008-10-24 00:00', '2008-10-21 00:00', '2008-10-02 00:00', '2008-08-06 00:00', '2008-05-12 00:00', '2008-03-10 00:00', '2008-03-06 00:00', '2008-02-15 00:00', '2008-02-04 15:25', '2007-10-23 00:01', '2007-10-23 00:00', '2007-09-07 00:00', '2007-05-21 00:00', '2007-04-30 00:00', '2007-04-17 00:00', '2006-10-31 00:00', '2006-09-25 12:00', '2006-09-08 12:00', '2006-08-22 12:00', '2006-08-04 00:00', '2006-07-27 12:00', '2006-07-26 00:00', '2006-06-30 00:00', '2006-06-05 12:33', '2006-05-17 12:33', '2006-03-20 16:27', '2006-01-10 18:53', '2005-08-04 16:19', '2005-06-08 12:44', '2005-05-20 21:23', '2005-03-22 19:26', '2005-03-08 15:30', '2005-02-25 00:41', '2005-01-11 17:45', '2005-01-10 20:43', '2004-09-10 20:43', '2004-09-02 10:30', '2004-08-09 10:30', '2004-07-28 20:43', '2004-03-31 00:51', '2004-03-31 00:50', '2004-02-12 21:15', '2004-01-20 18:55', '2003-12-29 17:05', '2003-06-09 16:17', '2003-04-10 11:18', '2003-02-04 17:16', '2003-01-28 15:10', '2003-01-21 16:33', '2002-04-06 01:00', '2000-11-03 22:25', '1999-09-03 00:04', '1998-09-24 00:04', '1997-10-21 02:42', '1997-03-06 03:42', '1996-09-13 23:03',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: icf.setRevisionsDescriptions(('Added hpSwitchExperimental(2) branch under hpicfSwitch node. hpSwitchExperimental branch is for work-in-process(draft) IETF or IEEE MIBs, which do not have a permanent object identifier assigned by IANA. Added hpicfSaviMIB(1) branch under hpSwitchExperimental node.', 'Added JL557A,JL558A andJL559A MIB objects.', 'Added JL323A and JL324A MIB objects.', 'Added 5GbeT port MIB object.', 'Added hpicfConfig MIB object.', 'Added arubaStack2930M MIB object.', 'Added hpicfMauTypeQSFPplusBIDI MIB object.', 'Added hpicfMauTypeQSFPplusGEN.', 'Added Aruba Switch 2540 family.', 'Added hpicfAMPServerMIB MIB.', 'Added hpicfTunneled Node MIB.', 'MIB OID name changes for 3810 switches', 'Added Aruba Switch 2930 family.', 'Added hpicfIpSla MIB.', 'HP Rebranding Changes.', 'Added hpicfDevConf MIB.', 'Added definitions for hpicfPIM6MIB.', 'Added hpicfMdns MIB.', 'Added hpicfArpThrottle MIB.', 'Added hpSwitchFPModule and subtree.', 'Added hpicfMvrp MIB.', 'Added hpicfVsfVC MIB.', 'Added hpicfPrivateVlan MIB', 'Added hpicfRipng MIB.', 'Added hpSwitch3810 and subtree.', 'Added hpicfMauTypeQSFPpluseSR4 MIB object.', 'Added hpicfTlsMinMIB and Header.', 'Added hpicfIsolatedPortsMIB and Header.', 'Added hpSwitchJL070A.', 'Updated the following v3 zl2 Modules hpSwitchModuleJ9986A, hpSwitchModuleJ9987A, hpSwitchModuleJ9988A, hpSwitchModuleJ9989A, hpSwitchModuleJ9990A, hpSwitchModuleJ9991A, hpSwitchModuleJ9992A, hpSwitchModuleJ9993A, hpSwitchModuleJ9995A, hpSwitchModuleJ9996A', 'Added hpicfDldpMIB.', 'Added hpicfVirtualNetwork MIB.', 'Added the following v3 zl2 Modules hpSwitchModuleJ9986A, hpSwitchModuleJ9987A, hpSwitchModuleJ9988A, hpSwitchModuleJ9989A, hpSwitchModuleJ9990A, hpSwitchModuleJ9991A, hpSwitchModuleJ9992A, hpSwitchModuleJ9993A, hpSwitchModuleJ9995A, hpSwitchModuleJ9996A', 'Added hpicfByod MIB.', 'Added hpicfJobSchedulerMIB.', 'Added the 2530-2SFP+ switch family.', 'Added hpicfServiceTunnel for SI.', 'Update descriptions for the 2530 family.', 'Added the following to support 640 switches hpSwitchJ9581PowerSupply, hpSwitchJ9582FanTray', 'Added hpicfDhcpv4ServerMIB for DHCPv4 Server feature.', 'Added hpicfTR069 MIB for TR069 Feature Implementation.', 'Added hpicfSmartLink MIB for Smart Link feature.', 'Added new mib hpicfMAD.mib for LACP_MAD feature.', 'MIB description fixes for 2920 power supplies.', 'Added the following to support 5400R switches: hpSwitchModuleJ9827A, hpSwitchJ9831AFanTray, hpSwitchJ9832AFanTray,hpSwitchJ9850A, hpSwitchJ9851A,hpSwitchJ9828APowerSupply, hpSwitchJ9829APowerSupply hpSwitchJ9830APowerSupply.', 'Mib Description Issue fixes.', 'Added hpicfVrrpv3 MIB for VRRPv3.', 'Added unique stacking definitions for 2920 stackable switch series.', 'Added the 2530 switch family.', 'Added the J numbers J9737A, J9738A, J9739A for the 2920 stackable switch series.', 'Added hpicfMauType10GigBaseESP.', 'Added hpicfIpv6RAGuard MIB for RA Guard.', 'Added hpicfSvcsAppMIB.', 'Added hpSwitchV2ServicesModule.', 'Added hpicfTransceiverMIB for transceivers.', 'Added (J9660A) HP V1810-48G Switch', 'Added hpicfTcp MIB.', 'Added hpSwitchModuleJ9637A.', 'Added hpTunnelMIB for Tunnels.', 'Added hpSwitchModuleJ9485A and hpSBMMIB for HP Survivable Branch Module.', 'Added hpicfLoadBalanceMod for Load Balancing.', 'Added the following fixed modules for stacking: hpSwitchModuleJ9573, hpSwitchModuleJ9574x, hpSwitchModuleJ9574y, hpSwitchModuleJ9575, hpSwitchModuleJ9576x, hpSwitchModuleJ9576y, hpSwitchModuleJ9584, hpSwitchModuleJ9585, hpSwitchModuleJ9586x, hpSwitchModuleJ9586y, hpSwitchModuleJ9587, hpSwitchModuleJ9588x, hpSwitchModuleJ9588y.', 'Added the following to support 2620 switches: J9626A HP 2620-48 ES3652BT-FLF-18 Switch, J9623A HP 2620-24 ES3628BT-FLF-18 Switch, J9627A HP 2620-48-PoE+ ES3652BT-HPoE-FLF-18 Switch, J9625A HP 2620-24-PoE+ ES3628BT-HPoE-FLF-18 Switch, J9624A HP 2620-24-PPoE+ ES3628BT-HPPoE-FLF-18 Switch', 'Added the following to support stacking: hpSwitchJ9573, hpSwitchJ9574, hpSwitchJ9575, hpSwitchJ9576, hpSwitchJ9584, hpSwitchJ9585, hpSwitchJ9586, hpSwitchJ9587, hpSwitchJ9588. Also added hpStack, hpSwitchJ9580PowerSupply, hpSwitchJ9581PowerSupply, hpSwitchJ9582FanTray.', 'Added hpicfTrafficTemplateMIB and hpicfDcbxMIB', 'Added hpEntityPowerMIB', 'Added hpStackMIB', 'Added hpicfGenericVlanMIB', 'Added hpicfMacNotifyMIB', 'Added 8-port PoE 10/100/1000 and 10/100 switches: 2915-8G-PoE (J9562A) and 2615-8-PoE (J9565A).', 'Added the following: hpSwitchModuleJ9534A, hpSwitchModuleJ9535A, hpSwitchModuleJ9536A, hpSwitchModuleJ9537A, hpSwitchModuleJ9538A, hpSwitchModuleJ9546A, hpSwitchModuleJ9547A, hpSwitchModuleJ9548A, hpSwitchModuleJ9549A, hpSwitchModuleJ9550A, hpSwitchAdvServicesModule, hpSwitchExtServicesModule, hpSwitchModuleJ9485A.', 'Added hpicfDebugLog', 'Added 2640-8-POE (J93xxA) and 2640G-8-POE (J93yyA) 8-port PoE 10/100 and 10/100/1000 switches', 'Added hpSwitchModuleJ9312A', 'Added hpSwitchModuleJ9477A, hpSwitchJ9310A and hpSwitchJ9311A', 'Added definitions for 3500 10/100 family', 'Added hpSwitchModuleJ9307A, hpSwitchModuleJ9308A hpSwitchModuleJ9478A and hpSwitchModuleJ9309A', 'Added definition for 1810-8(J9449A) and 1810-24(J9450A)', 'Added hpSwitchImage', 'Added hpicfOobmMIB', 'Added hpicfSysMgmt and hpicfSecurityDevice', 'Added hpicfDhcpClient', 'Updated official name for 2910al family', 'Added 2520G-24-PoE(J9299A) and 2520G-8-PoE(J9298A)', 'Added 2520-24-PoE(J9138A) and 2520-8-PoE(J9137A)', 'Added 1800-24G-B(J9028B) and changed 2510-24-B(J9019B)', 'Added hpicfSyslog ', 'Added 2510G-24 (J9279A) and 2510G-48 (J9280A)', 'Added definitions for 2910', 'Added definitions for transceivers.', 'Added definitions for 2510B', 'Added definitions for 2626C and 2650C', 'Added definition for hpicfInstMIB.', 'Revised definitions for J8766A and J8988A devices.', 'Added definitions for all 2610 products.', 'Added hpicfProviderBridge node and branch.', 'Added hpicfCommonSecurity node and branch.', 'Cleaned up definition of J8715 Chassis.', 'Added definitions for ESP blades.', 'Added definitions for hpicfL3MacConfigMIB.', 'Added definition for hpicfInstMonMIB.', 'Added definitions for J9032A, J9031A, J8768A, J8765B, J9033A, J9036A, J9037A, J8766A and J8988A devices.', 'Added definition for J9049A and J9050A switch.', 'Added definition for J9038A device.', 'Added definition for hpicfDhcpSnoopMIB.', 'Added definition for hpSwitchAuthorizationMIB.', 'Added definition for J9028A and J9029A switch', 'Added definition J8726A device.', 'Added definitions for hpSwitchAuthenticationMIB, hpSwitchAccountingMIB, hpicfXrrpMIB, hpicfUsrAuthMIB, hpicfPimMIB, hpicfUdpFwd, hpicfConnectionRateFilter, hpicfDot1xMIB, hpicfVrrpMIB.', 'Added definition for hpicFrabric.', 'Added definitions J9001 and J9003 devices.', 'Added definitions J8771A and J8772A devices.', 'Added definition for hpSwitchModuleJ8762A, hpSwitch2600n8PPortSlot, updated definition for J8474A, updated hpSwitchJ8433A, updated hpSwitchJ8474A, and updated hpSwitchModuleJ8433A.', 'Added definitions for hpicfRateLimitMIB and J8680A router.', 'Added definitions for J8770A, J8773A, J8765A, J8764A, J8776A, and J8763A products.', 'Added definitions for J8697A, J8698A products.', 'Added definitions for more WAN products.', 'Added definitions for hpSwitchModuleJ4905A, hpSwitchModuleJ4906A, hpSwitchModuleJ8433A, hpSwitchModuleJ8474A, and hpicfJumboMIB.', 'Added HP 6400cl-6XG and 6410cl-6XG.', 'Added definitions for J8718A and J8719A.', 'Added definitions for 10Gig SR, LR, and ER.', 'Added HP 2650-CR and 2626-CR Switch definitions.', 'Added definition for 10Gig CX4, ESP port and WAN Products', 'Added definitions for J8161A, J4907A, J8162A, J4820B, J4821B, and J4878B.', 'Added definitions for J4905A and J4906A Switch definitions.', 'Added definitions for wireless products.', 'Added HP 2650-PWR and 2626-PWR Switch definitions.', 'Added Transceiver cards for HP Switch 2824.', 'Added HP 2626 Switch definitions.', 'Added Proliant Switch Object to hpEtherSwitch.', 'Added new HP Switch definitions', 'Added new HP Switch definitions', 'Added definition for HP Routing Switch products.', 'Added definitions for 100Mbit and 10/100 hub products, and definitions for the HP switch products.', 'Added definitions for new hub products (10Base-T Hub-12M, 10Base-T Hub-24M, and 10Base-T Hub-16M) and Switch 2000 ATM module. Added branch for the Fault Finder MIB.', 'Added definitions for new switch products (208/224), 100T hub (J3233A). Added missing include of OBJECT-IDENTITY.', 'Initial revision. Split from the former monolithic hpicf MIB.',))
if mibBuilder.loadTexts: icf.setLastUpdated('201705010000Z')
if mibBuilder.loadTexts: icf.setOrganization('HP Networking')
if mibBuilder.loadTexts: icf.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: icf.setDescription('This MIB module describes devices in the HP Integrated Communication Facility product line.')
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
icfCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 1))
icfHub = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 2))
icfBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 3))
icfSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 4))
icfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 5))
icfEsSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6))
hpEs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 1))
hpEs2 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 2))
hpNetSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 6, 3))
icfRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 7))
icfDot12Draft = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 8))
icfVgRepeater = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 8, 1))
icfVgInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 8, 2))
hpEntityMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 9))
hpicfAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10))
hpicfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11))
hpicfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12))
hpicfOEMs = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 13))
hpicfFEHub = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 13, 1))
hpicfSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 14))
hpicfDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 1))
hpicfLLCDomain = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 1, 1))
if mibBuilder.loadTexts: hpicfLLCDomain.setStatus('current')
if mibBuilder.loadTexts: hpicfLLCDomain.setDescription('The SNMP over 802.2 transport domain.')
hpicfObjectModules = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2))
icfSecurityMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 1))
hpicfChainMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2))
hpicfChassisMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 3))
hpicfDownloadMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4))
hpicfBasicMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 5))
hpicfStackMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 6))
hpicfLinkTestMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 7))
hpicfGenRptrMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 8))
hpicf8023RptrMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 9))
icfVgRepeaterMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 10))
hpicfVgRptrMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 11))
hpicfFaultFinderMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 12))
hpicfJumboMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 13))
hpicfRateLimitMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 14))
hpicfAgentModules = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 3))
hpicfETwistHubAgentsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 3, 1))
hpicfETwistBridgeAgentsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 3, 2))
hpicfAdvStk8023AgentsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 3, 3))
hpicfAdvStkVGAgentsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 3, 4))
hpicfTextualConventions = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 4))
hpicfCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1))
hpicfRepeater = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 2))
hpicfVg = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 3))
hpicfGenericRepeater = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 4))
hpicfSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5))
hpicfAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 6))
hpicfWAN = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7))
hpicfFabric = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 8))
hpicfSecurityDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 9))
hpicfSysMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 10))
hpSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1))
hpSwitchExperimental = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2))
hpicfSaviMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 2, 1))
hpOpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 1))
hpHwSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 2))
hpVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 3))
hpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 7))
hpSwitchStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 9))
hpSwitchVirtualStackMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 10))
hpicfDhcpRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 11))
hpicfBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 12))
hpicfRip = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 13))
hpicfOspf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 14))
hpicfIpRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 15))
hpSwitchAuthenticationMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 16))
hpSwitchAccountingMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 17))
hpicfXrrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 18))
hpicfUsrAuthMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 19))
hpicfPimMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 20))
hpicfUdpFwd = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 23))
hpicfConnectionRateFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 24))
hpicfDot1xMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 25))
hpicfVrrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 31))
hpSwitchAuthorizationMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 32))
hpicfUdldMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 33))
hpicfIpDhcpSnoop = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 34))
hpicfInstMonMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 35))
hpicfL3MacConfigMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 36))
hpicfArpProtect = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 37))
hpicfSnmpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 38))
hpicfIpLockdown = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 39))
hpicfProviderBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 40))
hpicfGppcMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 41))
hpicfAutorun = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 42))
hpicfInstMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 45))
hpicfFtrCo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 46))
hpicfMldMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 48))
hpicfDhcpv6Relay = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 50))
hpicfScriptMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 51))
hpicfUSBPortMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 53))
hpicfFanMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 54))
hpicfPsMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 55))
hpicfSavepowerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 56))
hpicfDhcpClient = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 57))
hpicfOobmMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 58))
hpSwitchImage = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 59))
hpicfDosFilterMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 60))
hpicfGppcv2MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 61))
hpicfDebugLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 64))
hpicfMacNotifyMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 66))
hpicfGenericVlanMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 67))
hpSwitchErrorMsgMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 68))
hpStackMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 69))
hpicfLayer3VlanConfigMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 70))
hpEntityPowerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 71))
hpicfTrafficTemplateMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 72))
hpicfDcbxMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 73))
hpicfUfdMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 74))
hpSBMMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 75))
hpicfLoadBalanceMod = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 76))
hpTunnelMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 77))
hpicfTcpMib = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 79))
hpicfTransceiverMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 82))
hpicfSvcsAppMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 86))
hpicfIpv6RAGuard = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 87))
hpicfRpvstMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 88))
hpicfOpenFlowMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 89))
hpicfVrrpv3MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 90))
hpicfSflowMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 92))
hpicfMstpExtnMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 94))
hpicfMadMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 95))
hpicfSmartLinkMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 96))
hpicfTR069MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 98))
hpicfDhcpv4ServerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 99))
hpicfServiceTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 100))
hpicfDSnoopV6 = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 102))
hpicfIpv6Lockdown = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103))
hpSwitchTrapMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 104))
hpicfJobSchedulerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 105))
hpicfByodMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 106))
hpicfVirtualNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 107))
hpicfDldpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 108))
hpicfDot1qIsolatedPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 109))
hpicfTlsMinMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 112))
hpicfRipng = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 113))
hpicfPrivateVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 114))
hpicfVsfVCMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 116))
hpicfMvrpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 117))
hpicfArpThrottle = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 119))
hpicfBfd = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 120))
hpicfNtpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 121))
hpicfPim6MIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 122))
hpicfMdns = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 124))
hpicfAMPServerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 125))
hpicfDevConf = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 126))
hpicfIpSla = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 127))
hpicfTunneledNode = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128))
hpicfActivateMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 129))
hpicfMcastMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 130))
hpicfUrpfMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 131))
hpicfMinKeyMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 132))
hpicfDeviceIdentityMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 135))
hpicfConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 136))
hpicfChain = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1))
hpicfChassis = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 2))
hpicfDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3))
hpicfBasic = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 4))
hpicfStack = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 5))
hpicfLinktest = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 6))
hpicfFaultFinder = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 7))
hpicfPOE = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9))
hpicfCommonSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 12))
hpicfSrcIpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 13))
hpicfCoreDumpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 14))
hpicfCommonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1))
hpicfCommonTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1, 0))
hpicf8023RptrTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2))
hpicf8023RptrTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 2, 0))
hpicfVgRptrTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 3))
hpicfVgRptrTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 3, 0))
hpicfGenRptrTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 4))
hpicfGenRptrTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 4, 0))
hpicfRateLimitTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 5))
hpicfRateLimitTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 5, 0))
hpicfSecLoggingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 6))
hpicfSecLoggingTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 6, 0))
hpSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3))
netElement = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7))
bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1))
bridge1010 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 1))
if mibBuilder.loadTexts: bridge1010.setStatus('current')
if mibBuilder.loadTexts: bridge1010.setDescription('The authoritative identifier for the HP 28673A 10:10 LAN Bridge.')
bridgeRemote = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 2))
if mibBuilder.loadTexts: bridgeRemote.setStatus('current')
if mibBuilder.loadTexts: bridgeRemote.setDescription('The authoritative identifier for the HP 28674A/B Remote Bridge.')
eswitch = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 3))
if mibBuilder.loadTexts: eswitch.setStatus('current')
if mibBuilder.loadTexts: eswitch.setDescription('The authoritative identifier for the HP J2418A EtherTwist LAN Switch.')
eswitch2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 8))
if mibBuilder.loadTexts: eswitch2.setStatus('current')
if mibBuilder.loadTexts: eswitch2.setDescription('The authoritative identifier for the HP J2980A AdvanceStack LAN Switch-16.')
netSwitch100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 9))
if mibBuilder.loadTexts: netSwitch100.setStatus('current')
if mibBuilder.loadTexts: netSwitch100.setDescription('The authoritative identifier for the HP J3126A AdvanceStack Switch 100.')
netSwitch200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 1, 10))
if mibBuilder.loadTexts: netSwitch200.setStatus('current')
if mibBuilder.loadTexts: netSwitch200.setDescription('The authoritative identifier for the HP J3125A AdvanceStack Switch 200.')
router = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2))
icfRouterER = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 1))
if mibBuilder.loadTexts: icfRouterER.setStatus('current')
if mibBuilder.loadTexts: icfRouterER.setDescription('The authoritative identifier for the HP 27285A Router ER.')
icfRouterTR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 2))
if mibBuilder.loadTexts: icfRouterTR.setStatus('current')
if mibBuilder.loadTexts: icfRouterTR.setDescription('The authoritative identifier for the HP 27286A Router TR.')
icfRouterSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 3))
if mibBuilder.loadTexts: icfRouterSR.setStatus('current')
if mibBuilder.loadTexts: icfRouterSR.setDescription('The authoritative identifier for the HP 27288A Router SR.')
icfRouterFR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 4))
if mibBuilder.loadTexts: icfRouterFR.setStatus('current')
if mibBuilder.loadTexts: icfRouterFR.setDescription('The authoritative identifier for the HP 27289A Router FR.')
icfRouterLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 5))
if mibBuilder.loadTexts: icfRouterLR.setStatus('current')
if mibBuilder.loadTexts: icfRouterLR.setDescription('The authoritative identifier for the HP Router LR.')
icfRouterBR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 6))
if mibBuilder.loadTexts: icfRouterBR.setStatus('current')
if mibBuilder.loadTexts: icfRouterBR.setDescription('The authoritative identifier for the HP 27290A Router BR.')
icfRouterPR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 7))
if mibBuilder.loadTexts: icfRouterPR.setStatus('current')
if mibBuilder.loadTexts: icfRouterPR.setDescription('The authoritative identifier for the HP J2540A Router PR.')
icfRouter650 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8))
if mibBuilder.loadTexts: icfRouter650.setStatus('current')
if mibBuilder.loadTexts: icfRouter650.setDescription('The authoritative identifier for the HP J2430A AdvanceStack Router 650.')
icfRouter230 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 9))
if mibBuilder.loadTexts: icfRouter230.setStatus('current')
if mibBuilder.loadTexts: icfRouter230.setDescription('The authoritative identifier for the HP J2540B Router 230.')
icfRouter250 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 10))
if mibBuilder.loadTexts: icfRouter250.setStatus('current')
if mibBuilder.loadTexts: icfRouter250.setDescription('The authoritative identifier for the HP 27289B Router 250.')
icfRouter255 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 11))
if mibBuilder.loadTexts: icfRouter255.setStatus('current')
if mibBuilder.loadTexts: icfRouter255.setDescription('The authoritative identifier for the HP J2543A Router 255.')
icfRouter210 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 12))
if mibBuilder.loadTexts: icfRouter210.setStatus('current')
if mibBuilder.loadTexts: icfRouter210.setDescription('The authoritative identifier for the HP J2628A AdvanceStack Router 210.')
icfRouter650Engine = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 2))
if mibBuilder.loadTexts: icfRouter650Engine.setStatus('current')
if mibBuilder.loadTexts: icfRouter650Engine.setDescription('The authoritative identifier for the routing engine card for the HP J2430A AdvanceStack Router 650.')
icfRouter650Port4E = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 3))
if mibBuilder.loadTexts: icfRouter650Port4E.setStatus('current')
if mibBuilder.loadTexts: icfRouter650Port4E.setDescription('The authoritative identifier for the HP J2435A AdvanceStack Router 4E Port Module.')
icfRouter650Port4S = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 4))
if mibBuilder.loadTexts: icfRouter650Port4S.setStatus('current')
if mibBuilder.loadTexts: icfRouter650Port4S.setDescription('The authoritative identifier for the HP J2434A AdvanceStack Router 4S Port Module.')
icfRouter650Port4T = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 5))
if mibBuilder.loadTexts: icfRouter650Port4T.setStatus('current')
if mibBuilder.loadTexts: icfRouter650Port4T.setDescription('The authoritative identifier for the HP J2437A AdvanceStack Router 4T Port Module.')
icfRouter650PortFDDI = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 6))
if mibBuilder.loadTexts: icfRouter650PortFDDI.setStatus('current')
if mibBuilder.loadTexts: icfRouter650PortFDDI.setDescription('The authoritative identifier for the HP J2436A AdvanceStack Router FDDI Port Module.')
icfRouter650Port100VG = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 2, 8, 7))
if mibBuilder.loadTexts: icfRouter650Port100VG.setStatus('current')
if mibBuilder.loadTexts: icfRouter650Port100VG.setDescription('The authoritative identifier for the HP J2438A AdvanceStack Router 100VG Port Module.')
hub = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5))
etherTwist12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 1))
if mibBuilder.loadTexts: etherTwist12.setStatus('current')
if mibBuilder.loadTexts: etherTwist12.setDescription('The authoritative identifier for the HP 27288A/B EtherTwist Hub PLUS.')
fiberOptic = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 3))
if mibBuilder.loadTexts: fiberOptic.setStatus('current')
if mibBuilder.loadTexts: fiberOptic.setDescription('The authoritative identifier for the HP 28682A Fiber-Optic Hub PLUS.')
etherTwist48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 4))
if mibBuilder.loadTexts: etherTwist48.setStatus('current')
if mibBuilder.loadTexts: etherTwist48.setDescription('The authoritative identifier for the HP 28699A EtherTwist Hub PLUS/48.')
thinLAN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 5))
if mibBuilder.loadTexts: thinLAN.setStatus('current')
if mibBuilder.loadTexts: thinLAN.setDescription('The authoritative identifier for the HP 28692A ThinLAN Hub PLUS.')
etherTwist24S = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 6))
if mibBuilder.loadTexts: etherTwist24S.setStatus('current')
if mibBuilder.loadTexts: etherTwist24S.setDescription('The authoritative identifier for the HP J2355A EtherTwist Secure Hub PLUS/24S')
advStack12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 7))
if mibBuilder.loadTexts: advStack12.setStatus('current')
if mibBuilder.loadTexts: advStack12.setDescription('The authoritative identifier for the HP J2600A AdvanceStack 10Base-T Hub-12')
advStack24 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 8))
if mibBuilder.loadTexts: advStack24.setStatus('current')
if mibBuilder.loadTexts: advStack24.setDescription('The authoritative identifier for the HP J2601A/B AdvanceStack 10Base-T Hub-24.')
advStack48 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 9))
if mibBuilder.loadTexts: advStack48.setStatus('current')
if mibBuilder.loadTexts: advStack48.setDescription('The authoritative identifier for the HP J2602A/B AdvanceStack 10Base-T Hub-48.')
advStackVg15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 10))
if mibBuilder.loadTexts: advStackVg15.setStatus('current')
if mibBuilder.loadTexts: advStackVg15.setDescription('The authoritative identifier for the HP J2410A AdvanceStack 100VG Hub-15.')
advStackU8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 11))
if mibBuilder.loadTexts: advStackU8.setStatus('current')
if mibBuilder.loadTexts: advStackU8.setDescription('The authoritative identifier for the HP J2610A AdvanceStack 10Base-T Hub-8U.')
advStackU16 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 12))
if mibBuilder.loadTexts: advStackU16.setStatus('current')
if mibBuilder.loadTexts: advStackU16.setDescription('The authoritative identifier for the HP J2611A AdvanceStack 10Base-T Hub-16U.')
advStackVg6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 13))
if mibBuilder.loadTexts: advStackVg6.setStatus('current')
if mibBuilder.loadTexts: advStackVg6.setDescription('The authoritative identifier for the HP J2413A AdvanceStack 100VG Hub-7M.')
advStackVg12 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 14))
if mibBuilder.loadTexts: advStackVg12.setStatus('current')
if mibBuilder.loadTexts: advStackVg12.setDescription('The authoritative identifier for the HP J2415A AdvanceStack 100VG Hub-14.')
hpAdvStkEnetSH12R = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 15))
if mibBuilder.loadTexts: hpAdvStkEnetSH12R.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSH12R.setDescription('The authoritative identifier for the HP J3200A AdvanceStack 10BT Switching Hub-12R.')
hpAdvStkEnetSH24R = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 16))
if mibBuilder.loadTexts: hpAdvStkEnetSH24R.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSH24R.setDescription('The authoritative identifier for the HP J3202A AdvanceStack 10BT Switching Hub-24R.')
hpAdvStkEnetSH24T = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 17))
if mibBuilder.loadTexts: hpAdvStkEnetSH24T.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSH24T.setDescription('The authoritative identifier for the HP J3204A AdvanceStack 10BT Switching Hub-24T.')
hpAdvStk100Tx12TM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 18))
if mibBuilder.loadTexts: hpAdvStk100Tx12TM.setStatus('current')
if mibBuilder.loadTexts: hpAdvStk100Tx12TM.setDescription('The authoritative identifier for the HP J3233A AdvanceStack 100B-TX Hub-12TM w/MGMT.')
hp10THub16M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 19))
if mibBuilder.loadTexts: hp10THub16M.setStatus('current')
if mibBuilder.loadTexts: hp10THub16M.setDescription('The authoritative identifier for the HP J3188A 10Base-T Hub-16M.')
hp10BaseTHub12M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 20))
if mibBuilder.loadTexts: hp10BaseTHub12M.setStatus('current')
if mibBuilder.loadTexts: hp10BaseTHub12M.setDescription('The authoritative identifier for the HP J3301A 10Base-T Hub-12M')
hp10BaseTHub24M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 21))
if mibBuilder.loadTexts: hp10BaseTHub24M.setStatus('current')
if mibBuilder.loadTexts: hp10BaseTHub24M.setDescription('The authoritative identifier for the HP J3303A 10Base-T Hub-24M')
hpProCurve10T100THub12M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 22))
if mibBuilder.loadTexts: hpProCurve10T100THub12M.setStatus('current')
if mibBuilder.loadTexts: hpProCurve10T100THub12M.setDescription('The authoritative identifier for the HP J3288A 100Base-T Hub 12M')
hpProCurve10T100THub24M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 5, 23))
if mibBuilder.loadTexts: hpProCurve10T100THub24M.setStatus('current')
if mibBuilder.loadTexts: hpProCurve10T100THub24M.setDescription('The authoritative identifier for the HP J3289A 100Base-T Hub 24M')
chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8))
repeaterAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 1))
if mibBuilder.loadTexts: repeaterAgent.setStatus('current')
if mibBuilder.loadTexts: repeaterAgent.setDescription('The authoritative identifier for the HP J2603A/B AdvanceStack Ethernet SNMP module.')
chassisAgents = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2))
icfVgAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 1))
if mibBuilder.loadTexts: icfVgAgent.setStatus('current')
if mibBuilder.loadTexts: icfVgAgent.setDescription('The authoritative identifier for the HP J2414A AdvanceStack 100VG/ET SNMP/Bridge Module.')
icfVgAgent2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 3))
if mibBuilder.loadTexts: icfVgAgent2.setStatus('current')
if mibBuilder.loadTexts: icfVgAgent2.setDescription('The authoritative identifier for the HP J2414B AdvanceStack 100VG/ET SNMP/Bridge Module.')
hpicfEnetSMM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 4))
if mibBuilder.loadTexts: hpicfEnetSMM.setStatus('current')
if mibBuilder.loadTexts: hpicfEnetSMM.setDescription('The authoritative identifier for the HPJ3133A AdvanceStack 8U/16U SNMP Module.')
hpAdvStkEnetSHAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 5))
if mibBuilder.loadTexts: hpAdvStkEnetSHAgent.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHAgent.setDescription('The authoritative identifier for the HPJ3210A AdvanceStack 10BT Switching Hub Management Module.')
hpAdvStkSwStackTopMgmt = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 6))
if mibBuilder.loadTexts: hpAdvStkSwStackTopMgmt.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkSwStackTopMgmt.setDescription('The authoritative identifier for the HPJ3179A AdvanceStack Switch StackTop Management Module.')
hpSwitch8000CpuCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 2, 7))
if mibBuilder.loadTexts: hpSwitch8000CpuCard.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8000CpuCard.setDescription('The authoritative identifier for the HP J4110A Switch 8000M and HP J4121A Switch 4000M CPU card.')
icfSensors = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 3))
icfPowerSupplySensor = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 3, 1))
if mibBuilder.loadTexts: icfPowerSupplySensor.setStatus('current')
if mibBuilder.loadTexts: icfPowerSupplySensor.setDescription('Identifier for a power supply sensor type.')
icfFanSensor = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 3, 2))
if mibBuilder.loadTexts: icfFanSensor.setStatus('current')
if mibBuilder.loadTexts: icfFanSensor.setDescription('Identifier for a fan sensor type.')
icfTemperatureSensor = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 3, 3))
if mibBuilder.loadTexts: icfTemperatureSensor.setStatus('current')
if mibBuilder.loadTexts: icfTemperatureSensor.setDescription('Identifier for a temperature sensor type.')
icfFutureSlotSensor = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 3, 4))
if mibBuilder.loadTexts: icfFutureSlotSensor.setStatus('current')
if mibBuilder.loadTexts: icfFutureSlotSensor.setDescription('Identifier for a FutureSlot sensor type.')
icfCards = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 4))
icfUnidentifiedCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 4, 1))
if mibBuilder.loadTexts: icfUnidentifiedCard.setStatus('current')
if mibBuilder.loadTexts: icfUnidentifiedCard.setDescription('Used to indicate that a module is installed in a slot in a chassis, but the agent is unable to identify it.')
hpAdvStkEnetSHSwitch = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 4, 2))
if mibBuilder.loadTexts: hpAdvStkEnetSHSwitch.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHSwitch.setDescription('The authoritative identifier for the HP J3212A AdvanceStack 10BT Switching Hub Switch Module.')
hpAdvStkSwStackExpander = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 4, 3))
if mibBuilder.loadTexts: hpAdvStkSwStackExpander.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkSwStackExpander.setDescription('The authoritative identifier for the HPJ3180A AdvanceStack Switch Stack Expander Module.')
hpicfStacks = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5))
hpAdvStkEnetSHStack = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 1))
if mibBuilder.loadTexts: hpAdvStkEnetSHStack.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHStack.setDescription('The authoritative identifier for a stack of HP AdvanceStack 10Base-T Switching Hubs.')
hpStack = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 2))
if mibBuilder.loadTexts: hpStack.setStatus('current')
if mibBuilder.loadTexts: hpStack.setDescription('The authoritative identifier for the HP stack of 3800 series switches. The stack can have the devices like hpSwitchJ9573, hpSwitchJ9574, hpSwitchJ9575, hpSwitchJ9576, hpSwitchJ9584, hpSwitchJ9585, hpSwitchJ9586, hpSwitchJ9587, hpSwitchJ9588.')
hpStack2920 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 3))
if mibBuilder.loadTexts: hpStack2920.setStatus('current')
if mibBuilder.loadTexts: hpStack2920.setDescription('The authoritative identifier for the HP stack of 2920 series switches. The stack can include devices like hpSwitchJ9726, hpSwitchJ9727, hpSwitchJ9728, hpSwitchJ9729.')
arubaStack3810 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 4))
if mibBuilder.loadTexts: arubaStack3810.setStatus('current')
if mibBuilder.loadTexts: arubaStack3810.setDescription('The authoritative identifier for a stack of Aruba 3810 series switches. The stack members are aruba3810 subtree devices.')
arubaStack2930 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 5))
if mibBuilder.loadTexts: arubaStack2930.setStatus('current')
if mibBuilder.loadTexts: arubaStack2930.setDescription('The authoritative identifier for a stack of Aruba 2930 series switches.')
hpStackVSF5400R = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 6))
if mibBuilder.loadTexts: hpStackVSF5400R.setStatus('current')
if mibBuilder.loadTexts: hpStackVSF5400R.setDescription('The authoritative identifier for an VSF stack of HP 5400R series switches. The stack members are hpSwitchJ9850A or hpSwitchJ9851A subtree devices.')
arubaStack2930M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 5, 7))
if mibBuilder.loadTexts: arubaStack2930M.setStatus('current')
if mibBuilder.loadTexts: arubaStack2930M.setDescription('The authoritative identifier for a BPS stack of Aruba 2930M series switches.')
hpicfBackplanes = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6))
hpAdvStkEnetSHExtSeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6, 1))
if mibBuilder.loadTexts: hpAdvStkEnetSHExtSeg.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHExtSeg.setDescription('The authoritative identifier for an inter-box repeater segment in a stack of HP AdvanceStack 10Base-T Switching Hubs.')
hpAdvStkEnetSHIntSeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6, 2))
if mibBuilder.loadTexts: hpAdvStkEnetSHIntSeg.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHIntSeg.setDescription('The authoritative identifier for a repeater segment that is internal to a single box in a stack of HP AdvanceStack 10Base-T Switching Hubs.')
hp10BaseTHubSeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6, 3))
if mibBuilder.loadTexts: hp10BaseTHubSeg.setStatus('current')
if mibBuilder.loadTexts: hp10BaseTHubSeg.setDescription('The authoritative identifier for a repeater segment in an HP 10Base-T Hub-12M or HP 10Base-T Hub-24M.')
hpSwitchBackplane = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6, 4))
if mibBuilder.loadTexts: hpSwitchBackplane.setStatus('current')
if mibBuilder.loadTexts: hpSwitchBackplane.setDescription('The authoritative identifier for an HP Switch backplane.')
hp100BaseTHubSeg = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 6, 5))
if mibBuilder.loadTexts: hp100BaseTHubSeg.setStatus('current')
if mibBuilder.loadTexts: hp100BaseTHubSeg.setDescription('The authoritative identifier for a repeater segment in an HP 100Base-T Hub 12M or HP 100Base-T Hub 24M.')
hpicfSlots = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7))
hpAdvStkEnetSHAgentSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 1))
if mibBuilder.loadTexts: hpAdvStkEnetSHAgentSlot.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHAgentSlot.setDescription('The authoritative identifier for the Management Slot in an HP AdvanceStack 10Base-T Switching Hub.')
hpAdvStkEnetSHIOSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 2))
if mibBuilder.loadTexts: hpAdvStkEnetSHIOSlot.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHIOSlot.setDescription('The authoritative identifier for the Expansion Slot in an HP AdvanceStack 10Base-T Switching Hub.')
hpAdvStkSwStackMgmtSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 3))
if mibBuilder.loadTexts: hpAdvStkSwStackMgmtSlot.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkSwStackMgmtSlot.setDescription('The authoritative identifier for the Management/Stacking Slot in an HP AdvanceStack Switch 208 or Switch 224.')
hpAdvStkSwStackExpSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 4))
if mibBuilder.loadTexts: hpAdvStkSwStackExpSlot.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkSwStackExpSlot.setDescription('The authoritative identifier for the Expansion Slot in an HP AdvanceStack Switch 208 or Switch 224.')
hpSwitch8000PowerSupplyBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 5))
if mibBuilder.loadTexts: hpSwitch8000PowerSupplyBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8000PowerSupplyBay.setDescription('The authoritative identifier for a power supply bay in an HP Switch 8000 or HP Switch 4000.')
hpSwitch8000CpuSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 6))
if mibBuilder.loadTexts: hpSwitch8000CpuSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8000CpuSlot.setDescription('The authoritative identifier for the CPU slot in an HP Switch 8000 or HP Switch 4000.')
hpSwitch8000PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 7))
if mibBuilder.loadTexts: hpSwitch8000PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8000PortSlot.setDescription('The authoritative identifier for a port module slot in an HP Switch 8000, HP Switch 4000, HP Switch 1600, or HP Switch 2400/2424.')
hpSwitch2524PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 8))
if mibBuilder.loadTexts: hpSwitch2524PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2524PortSlot.setDescription('The authoritative identifier for a port module slot in an HP Switch 2524, HP Switch 2512, or HP Network Blade.')
hpSwitch5308PowerSupplyBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 9))
if mibBuilder.loadTexts: hpSwitch5308PowerSupplyBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch5308PowerSupplyBay.setDescription('The authoritative identifier for a power supply bay in an HP 5308XL Switch or HP 5304XL Switch.')
hpSwitch5308PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 10))
if mibBuilder.loadTexts: hpSwitch5308PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch5308PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 5308XL Switch, HP 5304XL Switch, HP 3324XL Switch, or HP 3124XL Switch.')
hpSwitch4865PowerSupplyBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 11))
if mibBuilder.loadTexts: hpSwitch4865PowerSupplyBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch4865PowerSupplyBay.setDescription('The authoritative identifier for a power supply bay in an HP 4108GL Switch.')
hpSwitch4865PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 12))
if mibBuilder.loadTexts: hpSwitch4865PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch4865PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 4108GL Switch.')
hpSwitch2650PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 13))
if mibBuilder.loadTexts: hpSwitch2650PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2650PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2650 Switch.')
hpSwitch6108PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 14))
if mibBuilder.loadTexts: hpSwitch6108PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch6108PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 6108 Switch.')
hpSwitch2824PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 15))
if mibBuilder.loadTexts: hpSwitch2824PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2824PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2824 Switch or HP 2848 Switch.')
hpSwitch2626PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 16))
if mibBuilder.loadTexts: hpSwitch2626PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2626PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2626 Switch.')
hpSwitch2650PPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 17))
if mibBuilder.loadTexts: hpSwitch2650PPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2650PPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2650-PWR Switch.')
hpSwitch2626PPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 18))
if mibBuilder.loadTexts: hpSwitch2626PPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2626PPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2626-PWR Switch.')
hpSwitch3324PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 19))
if mibBuilder.loadTexts: hpSwitch3324PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch3324PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 3324 Switch or HP 3348 Switch.')
hpSwitch2650CRPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 20))
if mibBuilder.loadTexts: hpSwitch2650CRPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2650CRPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2650-CR Switch.')
hpSwitch2626CRPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 21))
if mibBuilder.loadTexts: hpSwitch2626CRPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2626CRPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2626-CR Switch.')
hpSwitch2600n8PPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 22))
if mibBuilder.loadTexts: hpSwitch2600n8PPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2600n8PPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2600-8-PWR Switch.')
hpSwitch869xPowerSupplyBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 23))
if mibBuilder.loadTexts: hpSwitch869xPowerSupplyBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch869xPowerSupplyBay.setDescription('The authoritative identifier for a power supply bay in an HP 5406 zl2 Switch Chassis or HP 5412 zl2 Switch Chassis.')
hpSwitch869xPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 24))
if mibBuilder.loadTexts: hpSwitch869xPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch869xPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 5406 zl2 Switch Chassis, HP 5412 zl2 Switch Chassis,HP E3800 Switch, HP 3500yl-24G-PWR Switch, HP 3500yl-48G-PWR Switch, and HP 6200yl-24G-mGBIC Switch.')
hpSwitch2510PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 25))
if mibBuilder.loadTexts: hpSwitch2510PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2510PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2510-24 Switch or HP 2510-48 Switch.')
hpSwitch2810PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 26))
if mibBuilder.loadTexts: hpSwitch2810PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2810PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2810-24G Switch or HP 2810-48G Switch .')
hpSwitch5400CpuCardBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 27))
if mibBuilder.loadTexts: hpSwitch5400CpuCardBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch5400CpuCardBay.setDescription('The authoritative identifier for a Management Module bay in a HP 54XXZL Switch or HP 8212ZL Switch .')
hpSwitch8212FabricBay = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 28))
if mibBuilder.loadTexts: hpSwitch8212FabricBay.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8212FabricBay.setDescription('The authoritative identifier for a Fabric bay in a HP 8212ZL Switch .')
hpSwitch2610PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 29))
if mibBuilder.loadTexts: hpSwitch2610PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2610PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2610-24 Switch or HP 2610-48 Switch.')
hpSwitch2610PPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 30))
if mibBuilder.loadTexts: hpSwitch2610PPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2610PPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2610-24-PWR Switch, HP 2610-48-PWR Switch or HP 2610-24/12PWR Switch.')
hpSwitch2510BPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 31))
if mibBuilder.loadTexts: hpSwitch2510BPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2510BPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2510B-24 Switch.')
hpSwitch2626CPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 32))
if mibBuilder.loadTexts: hpSwitch2626CPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2626CPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2626C Switch.')
hpSwitch2650CPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 33))
if mibBuilder.loadTexts: hpSwitch2650CPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2650CPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2650C Switch.')
hpSwitch2910PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 34))
if mibBuilder.loadTexts: hpSwitch2910PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2910PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2910al-24G Switch or HP 2910al-48G Switch.')
hpSwitch2510GPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 35))
if mibBuilder.loadTexts: hpSwitch2510GPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2510GPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2510G-24 Switch or HP 2510G-48 Switch.')
hpSwitch2520PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 36))
if mibBuilder.loadTexts: hpSwitch2520PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2520PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2520-24 Switch or HP 2520-8 Switch.')
hpSwitch2520GPortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 37))
if mibBuilder.loadTexts: hpSwitch2520GPortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2520GPortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2520G-24 Switch or HP 2520G-8 Switch.')
hpSwitch2615PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 38))
if mibBuilder.loadTexts: hpSwitch2615PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2615PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2615-8-PoE Switch.')
hpSwitch2915PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 39))
if mibBuilder.loadTexts: hpSwitch2915PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2915PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2915-8G-PoE Switch.')
hpSwitchJ9580PowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 40))
if mibBuilder.loadTexts: hpSwitchJ9580PowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9580PowerSupply.setDescription('The authoritative identifier for the HP X312 1000W 100-240VAC to 54VDC PS.')
hpSwitchJ9581PowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 41))
if mibBuilder.loadTexts: hpSwitchJ9581PowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9581PowerSupply.setDescription('The authoritative identifier for the HP X311 400W 100-240VAC to 12VDC PS.')
hpSwitchJ9582FanTray = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 42))
if mibBuilder.loadTexts: hpSwitchJ9582FanTray.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9582FanTray.setDescription('The authoritative identifier for the HP E3800 Switch Fan Tray.')
hpSwitch2620PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 43))
if mibBuilder.loadTexts: hpSwitch2620PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2620PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2620-24 Switch or HP 2620-48 Switch.')
hpSwitch2530PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 45))
if mibBuilder.loadTexts: hpSwitch2530PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2530PortSlot.setDescription('The authoritative identifier for a port module slot in an HP 2530 Switch.')
hpSwitch2920StackingSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 46))
if mibBuilder.loadTexts: hpSwitch2920StackingSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2920StackingSlot.setDescription('The authoritative identifier for a stacking module slot in an HP E2920-24 Switch or HP E2920-48 Switch.')
hpSwitchJ9737APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 47))
if mibBuilder.loadTexts: hpSwitchJ9737APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9737APowerSupply.setDescription('The authoritative identifier for the HP 2920 X332 1050W 100-240VAC to 54VDC Power Supply.')
hpSwitchJ9738APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 48))
if mibBuilder.loadTexts: hpSwitchJ9738APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9738APowerSupply.setDescription('The authoritative identifier for the HP 2920 X332 575W 100-240VAC to 54VDC Power Supply.')
hpSwitchJ9739APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 49))
if mibBuilder.loadTexts: hpSwitchJ9739APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9739APowerSupply.setDescription('The authoritative identifier for the HP J9739A X331 165W 100-240VAC to 12VDC Power Supply')
hpSwitch2920PortSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 50))
if mibBuilder.loadTexts: hpSwitch2920PortSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2920PortSlot.setDescription('The authoritative identifier for a port module slot in an HP E2920-24 Switch or HP E2920-48 Switch.')
hpSwitch3800StackingSlot = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 51))
if mibBuilder.loadTexts: hpSwitch3800StackingSlot.setStatus('current')
if mibBuilder.loadTexts: hpSwitch3800StackingSlot.setDescription('The authoritative identifier for a stacking module slot in an HP E3800 Switch.')
hpSwitchJ9828APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 52))
if mibBuilder.loadTexts: hpSwitchJ9828APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9828APowerSupply.setDescription('The authoritative identifier for the HP 5400R 700W PoE+ zl2 Power Supply')
hpSwitchJ9829APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 53))
if mibBuilder.loadTexts: hpSwitchJ9829APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9829APowerSupply.setDescription('The authoritative identifier for the HP 5400R 1100W PoE+ zl2 Power Supply')
hpSwitchJ9830APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 54))
if mibBuilder.loadTexts: hpSwitchJ9830APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9830APowerSupply.setDescription('The authoritative identifier for the HP 5400R 2750W PoE+ zl2 Power Supply')
hpSwitchJ9831AFanTray = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 55))
if mibBuilder.loadTexts: hpSwitchJ9831AFanTray.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9831AFanTray.setDescription('The authoritative identifier for the HP 5406R zl2 Switch Fan Tray.')
hpSwitchJ9832AFanTray = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 56))
if mibBuilder.loadTexts: hpSwitchJ9832AFanTray.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9832AFanTray.setDescription('The authoritative identifier for the HP 5412R zl2 Switch Fan Tray.')
hpSwitchJ9805APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 57))
if mibBuilder.loadTexts: hpSwitchJ9805APowerSupply.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9805APowerSupply.setDescription('The authoritative identifier for the HP 640 External/Redundant Power Supply.')
hpSwitchJ9806APowerCable = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 58))
if mibBuilder.loadTexts: hpSwitchJ9806APowerCable.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9806APowerCable.setDescription('The authoritative identifier for the HP 640 EPS/RPS 1m Cable.')
arubaJL085APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 59))
if mibBuilder.loadTexts: arubaJL085APowerSupply.setStatus('current')
if mibBuilder.loadTexts: arubaJL085APowerSupply.setDescription('The authoritative identifier for the Aruba X371 12VDC 250W 100-240VAC Power Supply.')
arubaJL086APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 60))
if mibBuilder.loadTexts: arubaJL086APowerSupply.setStatus('current')
if mibBuilder.loadTexts: arubaJL086APowerSupply.setDescription('The authoritative identifier for the Aruba X372 54VDC 680W 100-240VAC Power Supply.')
arubaJL087APowerSupply = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 7, 61))
if mibBuilder.loadTexts: arubaJL087APowerSupply.setStatus('current')
if mibBuilder.loadTexts: arubaJL087APowerSupply.setDescription('The authoritative identifier for the Aruba X372 54VDC 1050W 100-240VAC Power Supply.')
hpicfHubPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8))
hpAdvStkEnetSHExtPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 1))
if mibBuilder.loadTexts: hpAdvStkEnetSHExtPort.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHExtPort.setDescription('The authoritative identifier for a repeater port which has an external connector on an HP AdvanceStack 10Base-T Switching Hub.')
hpAdvStkEnetSHIntPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 2))
if mibBuilder.loadTexts: hpAdvStkEnetSHIntPort.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHIntPort.setDescription('The authoritative identifier for a repeater port which does not have an external connector on an HP AdvanceStack 10Base-T Switching Hub. This port may be used to connect to an interface on an expansion module.')
hpAdvStkEnetSHAgentPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 3))
if mibBuilder.loadTexts: hpAdvStkEnetSHAgentPort.setStatus('current')
if mibBuilder.loadTexts: hpAdvStkEnetSHAgentPort.setDescription('The authoritative identifier for an internal repeater port used to connect to an interface on a management module in an HP AdvanceStack 10Base-T Switching Hub.')
hp10BaseTHubPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 4))
if mibBuilder.loadTexts: hp10BaseTHubPort.setStatus('current')
if mibBuilder.loadTexts: hp10BaseTHubPort.setDescription('The authoritative identifier for a repeater port which has an external connector on an HP 10Base-T Hub-12M or an HP 10Base-T Hub-24M.')
hp10BaseTHubAgentPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 5))
if mibBuilder.loadTexts: hp10BaseTHubAgentPort.setStatus('current')
if mibBuilder.loadTexts: hp10BaseTHubAgentPort.setDescription('The authoritative identifier for an internal repeater port used to connect to an agent interface in an HP 10Base-T Hub-12M or an HP 10Base-T Hub-24M.')
hp10T100THubPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 6))
if mibBuilder.loadTexts: hp10T100THubPort.setStatus('current')
if mibBuilder.loadTexts: hp10T100THubPort.setDescription('The authoritative identifier for a 10/100 repeater port that has an external connector on an HP 100Base-T Hub.')
hp100BaseTHubAgentPort = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 8, 7))
if mibBuilder.loadTexts: hp100BaseTHubAgentPort.setStatus('current')
if mibBuilder.loadTexts: hp100BaseTHubAgentPort.setDescription('The authoritative identifier for an internal 100Mbit repeater port used to connect to an agent interface in an HP 100Base-T Hub.')
hpicfEnetChipSets = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 9))
hpicfEnetChipSetHydra = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 9, 1))
if mibBuilder.loadTexts: hpicfEnetChipSetHydra.setStatus('current')
if mibBuilder.loadTexts: hpicfEnetChipSetHydra.setDescription('The authoritative identifier for the HP Hydra 4-interface Ethernet LAN controller.')
hpicfEnetChipSetGT48001 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 9, 2))
if mibBuilder.loadTexts: hpicfEnetChipSetGT48001.setStatus('current')
if mibBuilder.loadTexts: hpicfEnetChipSetGT48001.setDescription('The authoritative identifier for the GT48001 8-interface switch chip.')
hpicfEnetChipSetPentagon = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 9, 3))
if mibBuilder.loadTexts: hpicfEnetChipSetPentagon.setStatus('current')
if mibBuilder.loadTexts: hpicfEnetChipSetPentagon.setDescription('The authoritative identifier for the HP Pentagon ASIC.')
hpicfSwitchPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10))
hpicfSwitchPort10T100TX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 1))
if mibBuilder.loadTexts: hpicfSwitchPort10T100TX.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10T100TX.setDescription('The authoritative identifier for an IEEE 802.3 10BASE-T/100BASE-TX autonegotiating port on an HP switch.')
hpicfSwitchPort100FX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 2))
if mibBuilder.loadTexts: hpicfSwitchPort100FX.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort100FX.setDescription('The authoritative identifier for an IEEE 802.3 100BASE-FX port on an HP switch.')
hpicfSwitchPort10FL = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 3))
if mibBuilder.loadTexts: hpicfSwitchPort10FL.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10FL.setDescription('The authoritative identifier for an IEEE 802.3 10BASE-FL port on an HP switch.')
hpicfSwitchPort1000SX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 4))
if mibBuilder.loadTexts: hpicfSwitchPort1000SX.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000SX.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-SX port on an HP switch.')
hpicfSwitchPort10T = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 5))
if mibBuilder.loadTexts: hpicfSwitchPort10T.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10T.setDescription('The authoritative identifier for an IEEE 802.3 10BASE-T port on an HP switch.')
hpicfSwitchPort1000LX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 6))
if mibBuilder.loadTexts: hpicfSwitchPort1000LX.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000LX.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-LX port on an HP switch.')
hpicfSwitchPort1000T = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 7))
if mibBuilder.loadTexts: hpicfSwitchPort1000T.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000T.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-T port on an HP switch.')
hpicfSwitchPort1000Stk = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 8))
if mibBuilder.loadTexts: hpicfSwitchPort1000Stk.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000Stk.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-Stk port on an HP switch.')
hpicfSwitchPort1000LH = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 9))
if mibBuilder.loadTexts: hpicfSwitchPort1000LH.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000LH.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-LH port on an HP switch.')
hpicfSwitchPort10GigBaseCX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 10))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseCX4.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseCX4.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CX4 port on an HP switch.')
hpicfSwitchPort1000ESP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 11))
if mibBuilder.loadTexts: hpicfSwitchPort1000ESP.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000ESP.setDescription('The authoritative identifier for an internal ESP Blade port on an HP switch.')
hpicfSwitchPort10GigBaseSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 12))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseSR.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseSR.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-SR port on an HP switch.')
hpicfSwitchPort10GigBaseER = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 13))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseER.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseER.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-ER port on an HP switch.')
hpicfSwitchPort10GigBaseLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 14))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseLR.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseLR.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-LR port on an HP switch.')
hpicfSwitchPort100GEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 15))
if mibBuilder.loadTexts: hpicfSwitchPort100GEN.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort100GEN.setDescription('The authoritative identifier for a generic 100BASE port on an HP switch.')
hpicfSwitchPort1000GEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 16))
if mibBuilder.loadTexts: hpicfSwitchPort1000GEN.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000GEN.setDescription('The authoritative identifier for a generic 1000BASE port on an HP switch.')
hpicfSwitchPort10GigBaseGEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 17))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseGEN.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseGEN.setDescription('The authoritative identifier for a generic 10Gig port on an HP switch.')
hpicfSwitchPort100BXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 18))
if mibBuilder.loadTexts: hpicfSwitchPort100BXD.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort100BXD.setDescription('The authoritative identifier for an IEEE 802.3 100BASE-BX downstream port on an HP switch.')
hpicfSwitchPort100BXU = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 19))
if mibBuilder.loadTexts: hpicfSwitchPort100BXU.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort100BXU.setDescription('The authoritative identifier for an IEEE 802.3 100BASE-BX upstream port on an HP switch.')
hpicfSwitchPort1000BXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 20))
if mibBuilder.loadTexts: hpicfSwitchPort1000BXD.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000BXD.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-BX downstream port on an HP switch.')
hpicfSwitchPort1000BXU = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 21))
if mibBuilder.loadTexts: hpicfSwitchPort1000BXU.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000BXU.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-BX upstream port on an HP switch.')
hpicfSwitchPort10GigBaseLRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 22))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseLRM.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseLRM.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-LRM port on an HP switch.')
hpicfSwitchPortSFPplusSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 23))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusSR.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusSR.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-SR SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 24))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusLR.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusLR.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-LR SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusLRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 25))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusLRM.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusLRM.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-LRM SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDAC = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 26))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDAC.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDAC.setDescription('The authoritative identifier for a 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 27))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA1.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA1.setDescription('The authoritative identifier for a 1 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 28))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA2.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA2.setDescription('The authoritative identifier for a 2 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 29))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA3.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA3.setDescription('The authoritative identifier for a 3 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 30))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA5.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA5.setDescription('The authoritative identifier for a 5 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 31))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA7.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA7.setDescription('The authoritative identifier for a 7 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 32))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA10.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA10.setDescription('The authoritative identifier for a 10 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 33))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA15.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA15.setDescription('The authoritative identifier for a 15 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPortSFPplusDA20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 34))
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA20.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPortSFPplusDA20.setDescription('The authoritative identifier for a 20 meter 10 GIG DAC SFP+ port on an HP switch.')
hpicfSwitchPort10GigBaseT = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 35))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseT.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseT.setDescription('The authoritative identifier for a 10 GIG T port on an HP switch.')
hpicfSwitchPort10GigBaseTSH = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 36))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseTSH.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseTSH.setDescription('The authoritative identifier for a 10 GIG TSH port on an HP switch.')
hpicfSwitchPort10GigBaseTLH = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 37))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseTLH.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseTLH.setDescription('The authoritative identifier for a 10 GIG TLH port on an HP switch.')
hpicfSwitchPort10GigBaseSTK = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 38))
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseSTK.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigBaseSTK.setDescription('The authoritative identifier for a 10 GIG stacking port on an HP switch.')
hpicfSwitchPort1000CWDM1470 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 39))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1470.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1470.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1470 port on an HP switch.')
hpicfSwitchPort1000CWDM1490 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 40))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1490.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1490.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1490 port on an HP switch.')
hpicfSwitchPort1000CWDM1510 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 41))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1510.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1510.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1510 port on an HP switch.')
hpicfSwitchPort1000CWDM1530 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 42))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1530.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1530.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1530 port on an HP switch.')
hpicfSwitchPort1000CWDM1550 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 43))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1550.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1550.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1550 port on an HP switch.')
hpicfSwitchPort1000CWDM1570 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 44))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1570.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1570.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1570 port on an HP switch.')
hpicfSwitchPort1000CWDM1590 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 45))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1590.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1590.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1590 port on an HP switch.')
hpicfSwitchPort1000CWDM1610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 46))
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1610.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort1000CWDM1610.setDescription('The authoritative identifier for an IEEE 802.3 1000BASE-CWDM1610 port on an HP switch.')
hpicfSwitchPort10GigCWDM1470 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 47))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1470.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1470.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1470 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1490 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 48))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1490.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1490.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1490 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1510 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 49))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1510.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1510.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1510 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1530 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 50))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1530.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1530.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1530 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1550 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 51))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1550.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1550.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1550 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1570 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 52))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1570.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1570.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1570 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1590 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 53))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1590.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1590.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1590 SFP+ port on an HP switch.')
hpicfSwitchPort10GigCWDM1611 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 54))
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1611.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort10GigCWDM1611.setDescription('The authoritative identifier for an IEEE 802.3 10GIGBASE-CWDM1611 SFP+ port on an HP switch.')
hpicfSwitchPort5GigBaseT = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 10, 55))
if mibBuilder.loadTexts: hpicfSwitchPort5GigBaseT.setStatus('current')
if mibBuilder.loadTexts: hpicfSwitchPort5GigBaseT.setDescription('The authoritative identifier for a 5GBASE-T port on an Aruba switch.')
hpicfMAUTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11))
hpicfMauType1000BaseSXHD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 1))
if mibBuilder.loadTexts: hpicfMauType1000BaseSXHD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseSXHD.setDescription('IEEE 802.3 X fiber over short-wavelength laser PMD (clause 38), half-duplex.')
hpicfMauType1000BaseSXFD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 2))
if mibBuilder.loadTexts: hpicfMauType1000BaseSXFD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseSXFD.setDescription('IEEE 802.3 X fiber over short-wavelength laser PMD (clause 38), full-duplex.')
hpicfMauType1000BaseLXHD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 3))
if mibBuilder.loadTexts: hpicfMauType1000BaseLXHD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseLXHD.setDescription('IEEE 802.3 X fiber over long-wavelength laser PMD (clause 38), half-duplex.')
hpicfMauType1000BaseLXFD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 4))
if mibBuilder.loadTexts: hpicfMauType1000BaseLXFD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseLXFD.setDescription('IEEE 802.3 X fiber over long-wavelength laser PMD (clause 38), full-duplex.')
hpicfMauType1000BaseTHD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 5))
if mibBuilder.loadTexts: hpicfMauType1000BaseTHD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseTHD.setDescription('IEEE 802.3 four-pair Category 5 UTP PHY (clause 40), half-duplex.')
hpicfMauType1000BaseTFD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 6))
if mibBuilder.loadTexts: hpicfMauType1000BaseTFD.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfMauType1000BaseTFD.setDescription('IEEE 802.3 four-pair Category 5 UTP PHY (clause 40), full-duplex.')
hpicfMauType1000BaseStkHD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 7))
if mibBuilder.loadTexts: hpicfMauType1000BaseStkHD.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseStkHD.setDescription('IEEE 802.3 X copper, half-duplex.')
hpicfMauType1000BaseStkFD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 8))
if mibBuilder.loadTexts: hpicfMauType1000BaseStkFD.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseStkFD.setDescription('IEEE 802.3 X copper, full-duplex.')
hpicfMauType1000BaseLHFD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 9))
if mibBuilder.loadTexts: hpicfMauType1000BaseLHFD.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseLHFD.setDescription('Proprietary Long Haul, Fiber full-duplex.')
hpicfMauType1000BaseEspPCS = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 10))
if mibBuilder.loadTexts: hpicfMauType1000BaseEspPCS.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseEspPCS.setDescription('Proprietary internal, PCS port.')
hpicfMauType1000BaseEspG = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 11))
if mibBuilder.loadTexts: hpicfMauType1000BaseEspG.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseEspG.setDescription('Proprietary internal, GMII port.')
hpicfMauType10GigBaseCX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 12))
if mibBuilder.loadTexts: hpicfMauType10GigBaseCX4.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseCX4.setDescription('Proprietary 10Gig CX4, full-duplex.')
hpicfMauType10GigBaseSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 13))
if mibBuilder.loadTexts: hpicfMauType10GigBaseSR.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseSR.setDescription('Proprietary 10Gig SR, full-duplex.')
hpicfMauType10GigBaseER = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 14))
if mibBuilder.loadTexts: hpicfMauType10GigBaseER.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseER.setDescription('Proprietary 10Gig ER, full-duplex.')
hpicfMauType10GigBaseLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 15))
if mibBuilder.loadTexts: hpicfMauType10GigBaseLR.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseLR.setDescription('Proprietary 10Gig LR, full-duplex.')
hpicfMauType100BaseGEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 16))
if mibBuilder.loadTexts: hpicfMauType100BaseGEN.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType100BaseGEN.setDescription('Proprietary 100Base Generic, full-duplex.')
hpicfMauType1000BaseGEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 17))
if mibBuilder.loadTexts: hpicfMauType1000BaseGEN.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseGEN.setDescription('Proprietary 1000Base Generic, full-duplex.')
hpicfMauType10GigBaseGEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 18))
if mibBuilder.loadTexts: hpicfMauType10GigBaseGEN.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseGEN.setDescription('Proprietary 10Gig Generic, full-duplex.')
hpicfMauType100BaseBXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 19))
if mibBuilder.loadTexts: hpicfMauType100BaseBXD.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType100BaseBXD.setDescription('Proprietary 100Base BX downstream, full-duplex.')
hpicfMauType100BaseBXU = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 20))
if mibBuilder.loadTexts: hpicfMauType100BaseBXU.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType100BaseBXU.setDescription('Proprietary 100Base BX upstream, full-duplex.')
hpicfMauType1000BaseBXD = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 21))
if mibBuilder.loadTexts: hpicfMauType1000BaseBXD.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseBXD.setDescription('Proprietary 1000Base BX downstream, full-duplex.')
hpicfMauType1000BaseBXU = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 22))
if mibBuilder.loadTexts: hpicfMauType1000BaseBXU.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000BaseBXU.setDescription('Proprietary 1000Base BX upstream, full-duplex.')
hpicfMauType10GigBaseLRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 23))
if mibBuilder.loadTexts: hpicfMauType10GigBaseLRM.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseLRM.setDescription('Proprietary 10Gig LRM, full-duplex.')
hpicfMauTypeSFPplusSR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 24))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusSR.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusSR.setDescription('Proprietary 10Gig SR SFP+, full-duplex.')
hpicfMauTypeSFPplusLR = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 25))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusLR.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusLR.setDescription('Proprietary 10Gig LR SFP+, full-duplex.')
hpicfMauTypeSFPplusLRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 26))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusLRM.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusLRM.setDescription('Proprietary 10Gig LRM SFP+, full-duplex.')
hpicfMauTypeSFPplusDAC = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 27))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDAC.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDAC.setDescription('Proprietary 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA1 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 28))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA1.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA1.setDescription('Proprietary 1 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 29))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA2.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA2.setDescription('Proprietary 2 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 30))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA3.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA3.setDescription('Proprietary 3 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA5 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 31))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA5.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA5.setDescription('Proprietary 5 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA7 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 32))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA7.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA7.setDescription('Proprietary 7 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA10 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 33))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA10.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA10.setDescription('Proprietary 10 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA15 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 34))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA15.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA15.setDescription('Proprietary 15 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauTypeSFPplusDA20 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 35))
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA20.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeSFPplusDA20.setDescription('Proprietary 20 meter 10Gig DAC SFP+, full-duplex.')
hpicfMauType10GigBaseT = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 36))
if mibBuilder.loadTexts: hpicfMauType10GigBaseT.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseT.setDescription('Proprietary 10Gig T, full-duplex.')
hpicfMauType10GigBaseTSH = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 37))
if mibBuilder.loadTexts: hpicfMauType10GigBaseTSH.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseTSH.setDescription('Proprietary 10Gig TSH, full-duplex.')
hpicfMauType10GigBaseTLH = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 38))
if mibBuilder.loadTexts: hpicfMauType10GigBaseTLH.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseTLH.setDescription('Proprietary 10Gig TLH, full-duplex.')
hpicfMauType10GigBaseSTK = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 39))
if mibBuilder.loadTexts: hpicfMauType10GigBaseSTK.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseSTK.setDescription('Proprietary 10Gig STK, full-duplex.')
hpicfMauType1000CWDM1470 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 40))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1470.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1470.setDescription('Proprietary 1000CWDM1470 SFP, full-duplex.')
hpicfMauType1000CWDM1490 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 41))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1490.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1490.setDescription('Proprietary 1000CWDM1490 SFP, full-duplex.')
hpicfMauType1000CWDM1510 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 42))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1510.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1510.setDescription('Proprietary 1000CWDM1510 SFP, full-duplex.')
hpicfMauType1000CWDM1530 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 43))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1530.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1530.setDescription('Proprietary 1000CWDM1530 SFP, full-duplex.')
hpicfMauType1000CWDM1550 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 44))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1550.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1550.setDescription('Proprietary 1000CWDM1550 SFP, full-duplex.')
hpicfMauType1000CWDM1570 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 45))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1570.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1570.setDescription('Proprietary 1000CWDM1570 SFP, full-duplex.')
hpicfMauType1000CWDM1590 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 46))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1590.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1590.setDescription('Proprietary 1000CWDM1590 SFP, full-duplex.')
hpicfMauType1000CWDM1610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 47))
if mibBuilder.loadTexts: hpicfMauType1000CWDM1610.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType1000CWDM1610.setDescription('Proprietary 1000CWDM1610 SFP, full-duplex.')
hpicfMauType10GigCWDM1470 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 48))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1470.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1470.setDescription('Proprietary 10Gig CWDM1470 SFP+, full-duplex.')
hpicfMauType10GigCWDM1490 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 49))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1490.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1490.setDescription('Proprietary 10Gig CWDM1490 SFP+, full-duplex.')
hpicfMauType10GigCWDM1510 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 50))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1510.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1510.setDescription('Proprietary 10Gig CWDM1510 SFP+, full-duplex.')
hpicfMauType10GigCWDM1530 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 51))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1530.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1530.setDescription('Proprietary 10Gig CWDM1530 SFP+, full-duplex.')
hpicfMauType10GigCWDM1550 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 52))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1550.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1550.setDescription('Proprietary 10Gig CWDM1550 SFP+, full-duplex.')
hpicfMauType10GigCWDM1570 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 53))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1570.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1570.setDescription('Proprietary 10Gig CWDM1570 SFP+, full-duplex.')
hpicfMauType10GigCWDM1590 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 54))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1590.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1590.setDescription('Proprietary 10Gig CWDM1590 SFP+, full-duplex.')
hpicfMauType10GigCWDM1610 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 55))
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1610.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigCWDM1610.setDescription('Proprietary 10Gig CWDM1610 SFP+, full-duplex.')
hpicfMauType10GigBaseESP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 56))
if mibBuilder.loadTexts: hpicfMauType10GigBaseESP.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType10GigBaseESP.setDescription('Proprietary internal, 10Gig port.')
hpicfMauTypeQSFPpluseSR4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 57))
if mibBuilder.loadTexts: hpicfMauTypeQSFPpluseSR4.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeQSFPpluseSR4.setDescription('Proprietary 40gig QSFP+ eSR4, full-duplex.')
hpicfMauTypeQSFPplusGEN = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 58))
if mibBuilder.loadTexts: hpicfMauTypeQSFPplusGEN.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeQSFPplusGEN.setDescription('Generic 40gig QSFP+, full-duplex.')
hpicfMauTypeQSFPplusBIDI = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 59))
if mibBuilder.loadTexts: hpicfMauTypeQSFPplusBIDI.setStatus('current')
if mibBuilder.loadTexts: hpicfMauTypeQSFPplusBIDI.setDescription('Proprietary 40gig QSFP+ BIDI, full-duplex.')
hpicfMauType5GigBaseT = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 8, 11, 60))
if mibBuilder.loadTexts: hpicfMauType5GigBaseT.setStatus('current')
if mibBuilder.loadTexts: hpicfMauType5GigBaseT.setDescription('Proprietary 5GBASE-T, full-duplex.')
hpEtherSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11))
hpAdvSwitch2000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1))
if mibBuilder.loadTexts: hpAdvSwitch2000.setStatus('current')
if mibBuilder.loadTexts: hpAdvSwitch2000.setDescription('The authoritative identifier for the HP J3100A AdvanceStack Switch 2000.')
hpAdvSwitch2000B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 2))
if mibBuilder.loadTexts: hpAdvSwitch2000B.setStatus('current')
if mibBuilder.loadTexts: hpAdvSwitch2000B.setDescription('The authoritative identifier for the HP J3100B AdvanceStack Switch 2000B.')
hpAdvSwitch800T = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 3))
if mibBuilder.loadTexts: hpAdvSwitch800T.setStatus('current')
if mibBuilder.loadTexts: hpAdvSwitch800T.setDescription('The authoritative identifier for the HP J3245A AdvanceStack Switch 800T.')
hpAdvSwitch200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 4))
if mibBuilder.loadTexts: hpAdvSwitch200.setStatus('current')
if mibBuilder.loadTexts: hpAdvSwitch200.setDescription('The authoritative identifier for the HP J3175A AdvanceStack Switch 208T and HP J3177A AdvanceStack Switch 224T.')
hpSwitch212M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 5))
if mibBuilder.loadTexts: hpSwitch212M.setStatus('current')
if mibBuilder.loadTexts: hpSwitch212M.setDescription('The authoritative identifier for the J3298A HP 212M Switch.')
hpSwitch224M = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 6))
if mibBuilder.loadTexts: hpSwitch224M.setStatus('current')
if mibBuilder.loadTexts: hpSwitch224M.setDescription('The authoritative identifier for the J3299A HP 224M Switch.')
hpSwitch8000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7))
if mibBuilder.loadTexts: hpSwitch8000.setStatus('current')
if mibBuilder.loadTexts: hpSwitch8000.setDescription('The authoritative identifier for the J4110A HP 8000M Switch.')
hpSwitch1600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 8))
if mibBuilder.loadTexts: hpSwitch1600.setStatus('current')
if mibBuilder.loadTexts: hpSwitch1600.setDescription('The authoritative identifier for the J4120A HP 1600M Switch.')
hpSwitch4000 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 9))
if mibBuilder.loadTexts: hpSwitch4000.setStatus('current')
if mibBuilder.loadTexts: hpSwitch4000.setDescription('The authoritative identifier for the J4121A HP 4000M Switch.')
hpSwitch2400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 10))
if mibBuilder.loadTexts: hpSwitch2400.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2400.setDescription('The authoritative identifier for the J4122A HP 2400M Switch.')
hpSwitch2424 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 11))
if mibBuilder.loadTexts: hpSwitch2424.setStatus('current')
if mibBuilder.loadTexts: hpSwitch2424.setDescription('The authoritative identifier for the J4122B HP 2424M Switch.')
hpSwitch9308 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 13))
if mibBuilder.loadTexts: hpSwitch9308.setStatus('current')
if mibBuilder.loadTexts: hpSwitch9308.setDescription('The authoritative identifier for the J4138A HP 9308M Switch.')
hpSwitch9304 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 14))
if mibBuilder.loadTexts: hpSwitch9304.setStatus('current')
if mibBuilder.loadTexts: hpSwitch9304.setDescription('The authoritative identifier for the J4139A HP 9304M Routing Switch.')
hpSwitch6308 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 15))
if mibBuilder.loadTexts: hpSwitch6308.setStatus('current')
if mibBuilder.loadTexts: hpSwitch6308.setDescription('The authoritative identifier for the J4840A HP 6308M Switch.')
hpSwitch6208 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 16))
if mibBuilder.loadTexts: hpSwitch6208.setStatus('current')
if mibBuilder.loadTexts: hpSwitch6208.setDescription('The authoritative identifier for the J4841A HP 6208M Switch.')
hpSwitchJ4819A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17))
if mibBuilder.loadTexts: hpSwitchJ4819A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4819A.setDescription('The authoritative identifier for the J4819A HP 5308XL Switch.')
hpSwitchJ4812A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 18))
if mibBuilder.loadTexts: hpSwitchJ4812A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4812A.setDescription('The authoritative identifier for the J4812A HP 2512 Switch.')
hpSwitchJ4813A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 19))
if mibBuilder.loadTexts: hpSwitchJ4813A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4813A.setDescription('The authoritative identifier for the J4813A HP 2524 Switch.')
hpSwitchJ4850A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 20))
if mibBuilder.loadTexts: hpSwitchJ4850A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4850A.setDescription('The authoritative identifier for the J4850A HP E5304XL Switch.')
hpSwitchJ4815A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 21))
if mibBuilder.loadTexts: hpSwitchJ4815A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4815A.setDescription('The authoritative identifier for the J4815A HP E3324XL Switch.')
hpSwitchJ4851A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 22))
if mibBuilder.loadTexts: hpSwitchJ4851A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4851A.setDescription('The authoritative identifier for the J4851A HP E3124 Switch.')
hpSwitchJ4865A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23))
if mibBuilder.loadTexts: hpSwitchJ4865A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4865A.setDescription('The authoritative identifier for the J4865A HP 4108GL Switch.')
hpSwitchA6713A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 24))
if mibBuilder.loadTexts: hpSwitchA6713A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchA6713A.setDescription('The authoritative identifier for the HP A6713A Network Blade.')
hpSwitchA6716A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 25))
if mibBuilder.loadTexts: hpSwitchA6716A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchA6716A.setDescription('The authoritative identifier for the HP A6716A Network Blade.')
hpSwitchA6717A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 26))
if mibBuilder.loadTexts: hpSwitchA6717A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchA6717A.setDescription('The authoritative identifier for the HP A6717A Network Blade.')
hpSwitchJ4887A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 27))
if mibBuilder.loadTexts: hpSwitchJ4887A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4887A.setDescription('The authoritative identifier for the J4887A HP 4104GL Switch.')
hpSwitchJ4874A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 28))
if mibBuilder.loadTexts: hpSwitchJ4874A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4874A.setDescription('The authoritative identifier for the J4874A HP 9315 Switch.')
hpSwitchJ4899A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 29))
if mibBuilder.loadTexts: hpSwitchJ4899A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4899A.setDescription('The authoritative identifier for the J4899A HP 2650 Switch.')
hpSwitchJ4902A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 30))
if mibBuilder.loadTexts: hpSwitchJ4902A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4902A.setDescription('The authoritative identifier for the J4902A HP 6108 Switch.')
hpSwitchJ4903A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 31))
if mibBuilder.loadTexts: hpSwitchJ4903A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4903A.setDescription('The authoritative identifier for the J4903A HP 2824 Switch.')
hpSwitchJ4904A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 32))
if mibBuilder.loadTexts: hpSwitchJ4904A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4904A.setDescription('The authoritative identifier for the J4904A HP 2848 Switch.')
hpSwitchProliant = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 33))
if mibBuilder.loadTexts: hpSwitchProliant.setStatus('current')
if mibBuilder.loadTexts: hpSwitchProliant.setDescription('The authoritative identifier for the HP Proliant Series Switches.')
hpSwitchJ4900A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 34))
if mibBuilder.loadTexts: hpSwitchJ4900A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4900A.setDescription('The authoritative identifier for the J4900A HP 2626 Switch.')
hpSwitchJ8165A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 35))
if mibBuilder.loadTexts: hpSwitchJ8165A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8165A.setDescription('The authoritative identifier for the J8165A HP 2650-PWR Switch.')
hpSwitchJ8164A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 36))
if mibBuilder.loadTexts: hpSwitchJ8164A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8164A.setDescription('The authoritative identifier for the J8164A HP 2626-PWR Switch.')
hpSwitchJ8130A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 37))
if mibBuilder.loadTexts: hpSwitchJ8130A.setStatus('obsolete')
if mibBuilder.loadTexts: hpSwitchJ8130A.setDescription('The authoritative identifier for the HP J8130A Wireless Access Point AP420WL.')
hpSwitchJ8133A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 38))
if mibBuilder.loadTexts: hpSwitchJ8133A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8133A.setDescription('The authoritative identifier for the HP J8133A Wireless Access Point AP520WL.')
hpSwitchJ8153A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 39))
if mibBuilder.loadTexts: hpSwitchJ8153A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8153A.setDescription('The authoritative identifier for the HP J8153A Access Controller 720WL.')
hpSwitchJ8154A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 40))
if mibBuilder.loadTexts: hpSwitchJ8154A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8154A.setDescription('The authoritative identifier for the HP J8154A Access Controller Server 740WL.')
hpSwitchJ8155A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 41))
if mibBuilder.loadTexts: hpSwitchJ8155A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8155A.setDescription('The authoritative identifier for the HP J8155A Integrated Access Manager 760WL.')
hpSwitchJ4905A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 42))
if mibBuilder.loadTexts: hpSwitchJ4905A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4905A.setDescription('The authoritative identifier for the J4905A HP 3400cl-24G Switch.')
hpSwitchJ4906A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 43))
if mibBuilder.loadTexts: hpSwitchJ4906A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4906A.setDescription('The authoritative identifier for the J4906A HP 3400cl-48G Switch.')
hpSwitchJ4899B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 44))
if mibBuilder.loadTexts: hpSwitchJ4899B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4899B.setDescription('The authoritative identifier for the J4899B HP 2650 Switch.')
hpSwitchJ4900B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 45))
if mibBuilder.loadTexts: hpSwitchJ4900B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4900B.setDescription('The authoritative identifier for the J4900B HP 2626 Switch.')
hpSwitchJ8433A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 48))
if mibBuilder.loadTexts: hpSwitchJ8433A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8433A.setDescription('The authoritative identifier for the J8433A HP 6400cl-6XG Switch.')
hpSwitchJ8474A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 49))
if mibBuilder.loadTexts: hpSwitchJ8474A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8474A.setDescription('The authoritative identifier for the J8474A HP 6410cl-6XG Switch.')
hpSwitchJ8697A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50))
if mibBuilder.loadTexts: hpSwitchJ8697A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8697A.setDescription('The authoritative identifier for the J8697A HP 5406zl Switch.')
hpSwitchJ8698A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 51))
if mibBuilder.loadTexts: hpSwitchJ8698A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8698A.setDescription('The authoritative identifier for the J8698A HP 5412zl Switch. ')
hpSwitchJ8770A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52))
if mibBuilder.loadTexts: hpSwitchJ8770A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8770A.setDescription('The authoritative identifier for the J8770A HP 4204vl Switch.')
hpSwitchJ8773A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 53))
if mibBuilder.loadTexts: hpSwitchJ8773A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8773A.setDescription('The authoritative identifier for the J8773A HP 4208vl Switch.')
hpSwitchJ8680A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 54))
if mibBuilder.loadTexts: hpSwitchJ8680A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8680A.setDescription('The authoritative identifier for the J8680A HP E9408sl Router.')
hpSwitchJ8762A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 55))
if mibBuilder.loadTexts: hpSwitchJ8762A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8762A.setDescription('The authoritative identifier for the J8762A HP 2600-8-PWR Switch.')
hpSwitchJ8771A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 56))
if mibBuilder.loadTexts: hpSwitchJ8771A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8771A.setDescription('The authoritative identifier for the J8771A HP 4202vl-48G Switch.')
hpSwitchJ8772A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 57))
if mibBuilder.loadTexts: hpSwitchJ8772A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8772A.setDescription('The authoritative identifier for the J8772A HP 4202vl-72 Switch.')
hpSwitchJ8692A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 58))
if mibBuilder.loadTexts: hpSwitchJ8692A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8692A.setDescription('The authoritative identifier for the J8692A HP 3500yl-24G-PWR Switch.')
hpSwitchJ8693A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 59))
if mibBuilder.loadTexts: hpSwitchJ8693A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8693A.setDescription('The authoritative identifier for the J8693A HP 3500yl-48G-PWR Switch.')
hpSwitchJ8992A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 60))
if mibBuilder.loadTexts: hpSwitchJ8992A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ8992A.setDescription('The authoritative identifier for the J8992A HP 6200yl-24G Switch.')
hpSwitchJ9019A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 61))
if mibBuilder.loadTexts: hpSwitchJ9019A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9019A.setDescription('The authoritative identifier for the J9019A HP 2510-24 Switch.')
hpSwitchJ9020A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 62))
if mibBuilder.loadTexts: hpSwitchJ9020A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9020A.setDescription('The authoritative identifier for the J9020A HP 2510-48 Switch.')
hpSwitchJ9021A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 63))
if mibBuilder.loadTexts: hpSwitchJ9021A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9021A.setDescription('The authoritative identifier for the J9021A HP 2810-24G Switch.')
hpSwitchJ9022A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 64))
if mibBuilder.loadTexts: hpSwitchJ9022A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9022A.setDescription('The authoritative identifier for the J9022A HP 2810-48G Switch.')
hpSwitchJ9028A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 65))
if mibBuilder.loadTexts: hpSwitchJ9028A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9028A.setDescription('The authoritative identifier for the J9028A HP 1800-24G Switch.')
hpSwitchJ9029A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 66))
if mibBuilder.loadTexts: hpSwitchJ9029A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9029A.setDescription('The authoritative identifier for the J9029A HP 1800-8G Switch.')
hpSwitchJ9038A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 67))
if mibBuilder.loadTexts: hpSwitchJ9038A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9038A.setDescription('The authoritative identifier for the HP J9038A Access Control Server 745wl.')
hpSwitchJ9050A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 68))
if mibBuilder.loadTexts: hpSwitchJ9050A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9050A.setDescription('The authoritative identifier for the J9050A HP 2900-48G Switch.')
hpSwitchJ9049A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 69))
if mibBuilder.loadTexts: hpSwitchJ9049A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9049A.setDescription('The authoritative identifier for the J9049A HP 2900-24G Switch.')
hpSwitchJ9091A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 72))
if mibBuilder.loadTexts: hpSwitchJ9091A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9091A.setDescription('The authoritative identifier for the J9091A HP 8212zl Switch. ')
hpSwitchJ9065A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 73))
if mibBuilder.loadTexts: hpSwitchJ9065A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9065A.setDescription('The authoritative identifier for the HP J9065A Network Access Controller 800. ')
hpSwitchJ9079A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 74))
if mibBuilder.loadTexts: hpSwitchJ9079A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9079A.setDescription('The authoritative identifier for the J9079A HP 1700-8 Switch. ')
hpSwitchJ9080A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 75))
if mibBuilder.loadTexts: hpSwitchJ9080A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9080A.setDescription('The authoritative identifier for the J9080A HP 1700-24 Switch. ')
hpSwitchJ9085A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 76))
if mibBuilder.loadTexts: hpSwitchJ9085A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9085A.setDescription('The authoritative identifier for the J9085A HP 2610-24 Switch.')
hpSwitchJ9088A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 77))
if mibBuilder.loadTexts: hpSwitchJ9088A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9088A.setDescription('The authoritative identifier for the J9088A HP 2610-48 Switch. ')
hpSwitchJ9087A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 78))
if mibBuilder.loadTexts: hpSwitchJ9087A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9087A.setDescription('The authoritative identifier for the J9087A HP 2610-24-PWR Switch. ')
hpSwitchJ9089A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 79))
if mibBuilder.loadTexts: hpSwitchJ9089A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9089A.setDescription('The authoritative identifier for the J9089A HP 2610-48-PWR Switch. ')
hpSwitchJ9086A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 80))
if mibBuilder.loadTexts: hpSwitchJ9086A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9086A.setDescription('The authoritative identifier for the J9086A HP E2610-24-PPoE Switch .')
hpSwitchJ9028B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 81))
if mibBuilder.loadTexts: hpSwitchJ9028B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9028B.setDescription('The authoritative identifier for the J9028B HP 1800-24G Switch .')
hpSwitchJ4900C = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 82))
if mibBuilder.loadTexts: hpSwitchJ4900C.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4900C.setDescription('The authoritative identifier for the J4900C HP 2626 Switch .')
hpSwitchJ4899C = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 83))
if mibBuilder.loadTexts: hpSwitchJ4899C.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ4899C.setDescription('The authoritative identifier for the J4899C HP 2650C Switch .')
hpSwitchJ9146A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 84))
if mibBuilder.loadTexts: hpSwitchJ9146A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9146A.setDescription('The authoritative identifier for the J9146A HP 2910al-24G-PoE+ Switch.')
hpSwitchJ9148A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 85))
if mibBuilder.loadTexts: hpSwitchJ9148A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9148A.setDescription('The authoritative identifier for the J9148A HP 2910al-48G-PoE+ Switch.')
hpSwitchJ9145A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 86))
if mibBuilder.loadTexts: hpSwitchJ9145A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9145A.setDescription('The authoritative identifier for the J9145A HP 2910al-24G Switch.')
hpSwitchJ9147A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 87))
if mibBuilder.loadTexts: hpSwitchJ9147A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9147A.setDescription('The authoritative identifier for the J9147A HP 2910al-48G Switch.')
hpSwitchJ9279A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 88))
if mibBuilder.loadTexts: hpSwitchJ9279A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9279A.setDescription('The authoritative identifier for the J9279A HP 2510G-24 Switch. ')
hpSwitchJ9280A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 89))
if mibBuilder.loadTexts: hpSwitchJ9280A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9280A.setDescription('The authoritative identifier for the J9280A HP 2510G-48 Switch. ')
hpSwitchJ9019B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 90))
if mibBuilder.loadTexts: hpSwitchJ9019B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9019B.setDescription('The authoritative identifier for the J9019B HP 2510-24B Switch.')
hpSwitchJ9137A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 94))
if mibBuilder.loadTexts: hpSwitchJ9137A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9137A.setDescription('The authoritative identifier for the J9137A HP 2520-8 Switch. ')
hpSwitchJ9138A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 95))
if mibBuilder.loadTexts: hpSwitchJ9138A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9138A.setDescription('The authoritative identifier for the J9138A HP 2520-24 Switch. ')
hpSwitchJ9298A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 96))
if mibBuilder.loadTexts: hpSwitchJ9298A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9298A.setDescription('The authoritative identifier for the J9298A HP 2520G-8 Switch. ')
hpSwitchJ9299A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 97))
if mibBuilder.loadTexts: hpSwitchJ9299A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9299A.setDescription('The authoritative identifier for the J9299A HP 2520G-24 Switch. ')
hpSwitchJ9265A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98))
if mibBuilder.loadTexts: hpSwitchJ9265A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9265A.setDescription('The authoritative identifier for the J9265A HP 6600-24XG Switch. ')
hpEtherSwitchPortType = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 99))
hpSwitchJ9263A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 100))
if mibBuilder.loadTexts: hpSwitchJ9263A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9263A.setDescription('The authoritative identifier for the J9263A HP 6600-24G Switch. ')
hpSwitchJ9264A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 101))
if mibBuilder.loadTexts: hpSwitchJ9264A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9264A.setDescription('The authoritative identifier for the J9264A HP 6600-24G-4XG Switch. ')
hpSwitchJ9445A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 102))
if mibBuilder.loadTexts: hpSwitchJ9445A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9445A.setDescription('The authoritative identifier for the HP J9445A DCM Controller. ')
hpSwitchJ9449A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 103))
if mibBuilder.loadTexts: hpSwitchJ9449A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9449A.setDescription('The authoritative identifier for the J9449A HP 1810-8G Switch.')
hpSwitchJ9450A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 104))
if mibBuilder.loadTexts: hpSwitchJ9450A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9450A.setDescription('The authoritative identifier for the J9450A HP 1810-24G Switch.')
hpSwitchJ9452A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 105))
if mibBuilder.loadTexts: hpSwitchJ9452A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9452A.setDescription('The authoritative identifier for the J9452A HP 6600-48G-4XG Switch.')
hpSwitchJ9451A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 106))
if mibBuilder.loadTexts: hpSwitchJ9451A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9451A.setDescription('The authoritative identifier for the J9451A HP 6600-48G Switch .')
hpSwitch516733_B21 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 107)).setLabel("hpSwitch516733-B21")
if mibBuilder.loadTexts: hpSwitch516733_B21.setStatus('current')
if mibBuilder.loadTexts: hpSwitch516733_B21.setDescription('The authoritative identifier for the 516733-B21 HP 6120-XG Switch.')
hpSwitch498358_B21 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 108)).setLabel("hpSwitch498358-B21")
if mibBuilder.loadTexts: hpSwitch498358_B21.setStatus('current')
if mibBuilder.loadTexts: hpSwitch498358_B21.setDescription('The authoritative identifier for the 498358-B21 HP 6120-GXG Switch.')
hpSwitchJ9471A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 109))
if mibBuilder.loadTexts: hpSwitchJ9471A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9471A.setDescription('The authoritative identifier for the J9471A HP 3500-24-PoE Switch.')
hpSwitchJ9473A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 110))
if mibBuilder.loadTexts: hpSwitchJ9473A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9473A.setDescription('The authoritative identifier for the J9473A HP 3500-48-PoE Switch.')
hpSwitchJ9470A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 111))
if mibBuilder.loadTexts: hpSwitchJ9470A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9470A.setDescription('The authoritative identifier for the J9470A HP 3500-24 Switch.')
hpSwitchJ9472A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 112))
if mibBuilder.loadTexts: hpSwitchJ9472A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9472A.setDescription('The authoritative identifier for the J9472A HP 3500-48 Switch.')
hpSwitchJ9477A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 113))
if mibBuilder.loadTexts: hpSwitchJ9477A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9477A.setDescription('The authoritative identifier for the J9477A HP 8206zl Switch.')
hpSwitchJ9310A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 114))
if mibBuilder.loadTexts: hpSwitchJ9310A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9310A.setDescription('The authoritative identifier for the J9310A HP 3500yl-24G-PoE+ Switch.')
hpSwitchJ9311A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 115))
if mibBuilder.loadTexts: hpSwitchJ9311A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9311A.setDescription('The authoritative identifier for the J9311A HP 3500yl-48G-PoE+ Switch.')
hpSwitchJ9565A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 117))
if mibBuilder.loadTexts: hpSwitchJ9565A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9565A.setDescription('The authoritative identifier for the J9565A HP 2615-8-PoE Switch.')
hpSwitchJ9562A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 118))
if mibBuilder.loadTexts: hpSwitchJ9562A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9562A.setDescription('The authoritative identifier for the J9562A HP 2915-8G-PoE Switch.')
hpSwitchJ9573 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 119))
if mibBuilder.loadTexts: hpSwitchJ9573.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9573.setDescription('The authoritative identifier for the HP E3800-24G-PoE+-2SFP+ Switch.')
hpSwitchJ9574 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 120))
if mibBuilder.loadTexts: hpSwitchJ9574.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9574.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4SFP+ Switch.')
hpSwitchJ9575 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 121))
if mibBuilder.loadTexts: hpSwitchJ9575.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9575.setDescription('The authoritative identifier for the HP E3800-24G-2SFP+ Switch.')
hpSwitchJ9576 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 122))
if mibBuilder.loadTexts: hpSwitchJ9576.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9576.setDescription('The authoritative identifier for the HP E3800-48G-4SFP+ Switch.')
hpSwitchJ9584 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 123))
if mibBuilder.loadTexts: hpSwitchJ9584.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9584.setDescription('The authoritative identifier for the HP E3800-24SFP-2SFP+ Switch.')
hpSwitchJ9585 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 124))
if mibBuilder.loadTexts: hpSwitchJ9585.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9585.setDescription('The authoritative identifier for the HP E3800-24G-2XG Switch.')
hpSwitchJ9586 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 125))
if mibBuilder.loadTexts: hpSwitchJ9586.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9586.setDescription('The authoritative identifier for the HP E3800-48G-4XG Switch.')
hpSwitchJ9587 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 126))
if mibBuilder.loadTexts: hpSwitchJ9587.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9587.setDescription('The authoritative identifier for the HP E3800-24G-PoE+-2XG Switch.')
hpSwitchJ9588 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 127))
if mibBuilder.loadTexts: hpSwitchJ9588.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9588.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4XG Switch.')
hpSwitchJ9577 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 128))
if mibBuilder.loadTexts: hpSwitchJ9577.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9577.setDescription('The authoritative identifier for the HP E3800 4-port Stacking Module.')
hpSwitchJ9623A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 129))
if mibBuilder.loadTexts: hpSwitchJ9623A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9623A.setDescription('The authoritative identifier for the J9623A HP 2620-24 Switch.')
hpSwitchJ9624A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 130))
if mibBuilder.loadTexts: hpSwitchJ9624A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9624A.setDescription('The authoritative identifier for the J9624A HP 2620-24-PPoE+ Switch.')
hpSwitchJ9625A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 131))
if mibBuilder.loadTexts: hpSwitchJ9625A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9625A.setDescription('The authoritative identifier for the J9625A HP 2620-24-PoE+ Switch.')
hpSwitchJ9626A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 132))
if mibBuilder.loadTexts: hpSwitchJ9626A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9626A.setDescription('The authoritative identifier for the J9626A HP 2620-48 Switch.')
hpSwitchJ9627A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 133))
if mibBuilder.loadTexts: hpSwitchJ9627A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9627A.setDescription('The authoritative identifier for the J9627A HP 2620-48-PoE+ Switch.')
hpSwitchJ9660A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 134))
if mibBuilder.loadTexts: hpSwitchJ9660A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9660A.setDescription('The authoritative identifier for the J9660A HP 1810-48G Switch.')
hpSwitchJ9772A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 136))
if mibBuilder.loadTexts: hpSwitchJ9772A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9772A.setDescription('The authoritative identifier for the J9772A HP 2530-48G-PoE+ Switch.')
hpSwitchJ9773A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 137))
if mibBuilder.loadTexts: hpSwitchJ9773A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9773A.setDescription('The authoritative identifier for the J9773A HP 2530-24G-PoE+ Switch.')
hpSwitchJ9774A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 138))
if mibBuilder.loadTexts: hpSwitchJ9774A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9774A.setDescription('The authoritative identifier for the J9774A HP 2530-8G-PoE+ Switch.')
hpSwitchJ9775A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 139))
if mibBuilder.loadTexts: hpSwitchJ9775A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9775A.setDescription('The authoritative identifier for the J9775A HP 2530-48G Switch.')
hpSwitchJ9776A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 140))
if mibBuilder.loadTexts: hpSwitchJ9776A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9776A.setDescription('The authoritative identifier for the J9776A HP 2530-24G Switch.')
hpSwitchJ9777A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 141))
if mibBuilder.loadTexts: hpSwitchJ9777A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9777A.setDescription('The authoritative identifier for the J9777A HP 2530-8G Switch.')
hpSwitchJ9778A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 142))
if mibBuilder.loadTexts: hpSwitchJ9778A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9778A.setDescription('The authoritative identifier for the J9778A HP 2530-48-PoE+ Switch.')
hpSwitchJ9779A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 143))
if mibBuilder.loadTexts: hpSwitchJ9779A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9779A.setDescription('The authoritative identifier for the J9779A HP 2530-24-PoE+ Switch.')
hpSwitchJ9780A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 144))
if mibBuilder.loadTexts: hpSwitchJ9780A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9780A.setDescription('The authoritative identifier for the J9780A HP 2530-8-PoE+ Switch.')
hpSwitchJ9781A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 145))
if mibBuilder.loadTexts: hpSwitchJ9781A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9781A.setDescription('The authoritative identifier for the J9781A HP 2530-48 Switch.')
hpSwitchJ9782A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 146))
if mibBuilder.loadTexts: hpSwitchJ9782A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9782A.setDescription('The authoritative identifier for the J9782A HP 2530-24 Switch.')
hpSwitchJ9783A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 147))
if mibBuilder.loadTexts: hpSwitchJ9783A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9783A.setDescription('The authoritative identifier for the J9783A HP 2530-8 Switch.')
hpSwitchJ9800A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 148))
if mibBuilder.loadTexts: hpSwitchJ9800A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9800A.setDescription('The authoritative identifier for the J9800A HP 1810-8 Switch.')
hpSwitchJ9801A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 149))
if mibBuilder.loadTexts: hpSwitchJ9801A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9801A.setDescription('The authoritative identifier for the J9801A HP 1810-24 Switch.')
hpSwitchJ9802A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 150))
if mibBuilder.loadTexts: hpSwitchJ9802A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9802A.setDescription('The authoritative identifier for the J9802A HP 1810-8G Switch.')
hpSwitchJ9803A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 151))
if mibBuilder.loadTexts: hpSwitchJ9803A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9803A.setDescription('The authoritative identifier for the J9803A HP 1810-24G Switch.')
hpSwitchJ9726A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 152))
if mibBuilder.loadTexts: hpSwitchJ9726A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9726A.setDescription('The authoritative identifier for the J9726A HP 2920-24G Switch.')
hpSwitchJ9727A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 153))
if mibBuilder.loadTexts: hpSwitchJ9727A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9727A.setDescription('The authoritative identifier for the J9727A HP 2920-24G-PoE+ Switch.')
hpSwitchJ9728A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 154))
if mibBuilder.loadTexts: hpSwitchJ9728A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9728A.setDescription('The authoritative identifier for the J9728A HP 2920-48G Switch.')
hpSwitchJ9729A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155))
if mibBuilder.loadTexts: hpSwitchJ9729A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9729A.setDescription('The authoritative identifier for the J9729A HP 2920-48G-PoE+ Switch.')
hpSwitchJ9833A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 158))
if mibBuilder.loadTexts: hpSwitchJ9833A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9833A.setDescription('The authoritative identifier for the J9833A HP PS1810-8G Switch.')
hpSwitchJ9834A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 159))
if mibBuilder.loadTexts: hpSwitchJ9834A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9834A.setDescription('The authoritative identifier for the J9834A HP PS1810-24G Switch.')
hpSwitchJ9850A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160))
if mibBuilder.loadTexts: hpSwitchJ9850A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9850A.setDescription('The authoritative identifier for the J9850A HP 5406R zl2 Switch Chassis.')
hpSwitchJ9851A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 161))
if mibBuilder.loadTexts: hpSwitchJ9851A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9851A.setDescription('The authoritative identifier for the J9851A HP 5412R zl2 Switch Chassis.')
hpSwitchJ9853A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 163))
if mibBuilder.loadTexts: hpSwitchJ9853A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9853A.setDescription('The authoritative identifier for the J9853A HP 2530-48G-PoE+-2SFP+ Switch.')
hpSwitchJ9854A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 164))
if mibBuilder.loadTexts: hpSwitchJ9854A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9854A.setDescription('The authoritative identifier for the J9854A HP 2530-24G-PoE+-2SFP+ Switch.')
hpSwitchJ9855A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 165))
if mibBuilder.loadTexts: hpSwitchJ9855A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9855A.setDescription('The authoritative identifier for the J9855A HP 2530-48G-2SFP+ Switch.')
hpSwitchJ9856A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 166))
if mibBuilder.loadTexts: hpSwitchJ9856A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9856A.setDescription('The authoritative identifier for the J9856A HP 2530-24G-2SFP+ Switch.')
hpSwitchJ9979A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 167))
if mibBuilder.loadTexts: hpSwitchJ9979A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9979A.setDescription('The authoritative identifier for the J9979A HP 1820-8G Switch.')
hpSwitchJ9980A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 168))
if mibBuilder.loadTexts: hpSwitchJ9980A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9980A.setDescription('The authoritative identifier for the J9980A HP 1820-24G Switch.')
hpSwitchJ9981A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 169))
if mibBuilder.loadTexts: hpSwitchJ9981A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9981A.setDescription('The authoritative identifier for the J9981A HP 1820-48G Switch.')
hpSwitchJ9982A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 170))
if mibBuilder.loadTexts: hpSwitchJ9982A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9982A.setDescription('The authoritative identifier for the J9982A HP 1820-8G-PoE+ (65W) Switch.')
hpSwitchJ9983A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 171))
if mibBuilder.loadTexts: hpSwitchJ9983A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9983A.setDescription('The authoritative identifier for the J9983A HP 1820-24G-PoE+ (185W) Switch.')
hpSwitchJ9984A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 172))
if mibBuilder.loadTexts: hpSwitchJ9984A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJ9984A.setDescription('The authoritative identifier for the J9984A HP 1820-48G-PoE+ (370W) Switch.')
hpSwitchJL070A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 173))
if mibBuilder.loadTexts: hpSwitchJL070A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchJL070A.setDescription('The authoritative identifier for the JL070A HP 2530-8-PoE+ Internal PS Switch.')
aruba3810 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174))
if mibBuilder.loadTexts: aruba3810.setStatus('current')
if mibBuilder.loadTexts: aruba3810.setDescription('Device OID branch for the Aruba 3810 Switch family.')
arubaFPModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180))
if mibBuilder.loadTexts: arubaFPModule.setStatus('current')
if mibBuilder.loadTexts: arubaFPModule.setDescription('Device OID branch for the flexible port modules used by the Aruba 3810 Switch family and others.')
arubaSwitch2930 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181))
if mibBuilder.loadTexts: arubaSwitch2930.setStatus('current')
if mibBuilder.loadTexts: arubaSwitch2930.setDescription('Device OID branch for the Aruba 2930 Switch family.')
arubaSwitch2540 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182))
if mibBuilder.loadTexts: arubaSwitch2540.setStatus('current')
if mibBuilder.loadTexts: arubaSwitch2540.setDescription('Device OID branch for the Aruba 2540 Switch family.')
hpEtherSwitchPort10T = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 99, 1))
hpEtherSwitchPort100T = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 99, 2))
hpEtherSwitchPort100VG = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 99, 3))
hpEtherSwitchPort100F = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 99, 4))
hpAdvSwitch208T = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 4, 1))
hpAdvSwitch208VG = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 4, 2))
hpAdvSwitch224T = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 4, 3))
hpAdvSwitch224VG = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 4, 4))
hpSwitchPortModuleET4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 1))
if mibBuilder.loadTexts: hpSwitchPortModuleET4.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleET4.setDescription('The authoritative identifier for the HP J3102A AdvanceStack Switch Ethernet Port Module.')
hpSwitchPortModuleVG2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 2))
if mibBuilder.loadTexts: hpSwitchPortModuleVG2.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleVG2.setDescription('The authoritative identifier for the HP J3103A AdvanceStack Switch 100VG Port Module.')
hpSwitchPortModule10FL = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 3))
if mibBuilder.loadTexts: hpSwitchPortModule10FL.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModule10FL.setDescription('The authoritative identifier for the HP AdvanceStack Switch 10BaseFL Port Module.')
hpSwitchPortModuleFDDI = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 4))
if mibBuilder.loadTexts: hpSwitchPortModuleFDDI.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleFDDI.setDescription('The authoritative identifier for the HP AdvanceStack Switch FDDI Port Module.')
hpSwitchPortModuleTX2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 5))
if mibBuilder.loadTexts: hpSwitchPortModuleTX2.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleTX2.setDescription('The authoritative identifier for the HP AdvanceStack Switch 100BaseT Port Module.')
hpSwitchPortModuleATM = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 1, 6))
if mibBuilder.loadTexts: hpSwitchPortModuleATM.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleATM.setDescription('The authoritative identifier for the HP AdvanceStack Switch ATM Port Module.')
hpSwitchPortModule100TX8 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 1))
if mibBuilder.loadTexts: hpSwitchPortModule100TX8.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModule100TX8.setDescription('The authoritative identifier for the HP J4111A 8-port 10/100Base-TX module.')
hpSwitchPortModule100FX4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 2))
if mibBuilder.loadTexts: hpSwitchPortModule100FX4.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModule100FX4.setDescription('The authoritative identifier for the HP J4112A 4-port 100Base-FX module.')
hpSwitchPortModule10FL4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 3))
if mibBuilder.loadTexts: hpSwitchPortModule10FL4.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModule10FL4.setDescription('The authoritative identifier for the HP J4118A 4-port 10Base-FL module.')
hpSwitchPortModuleGigSX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 4))
if mibBuilder.loadTexts: hpSwitchPortModuleGigSX.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleGigSX.setDescription('The authoritative identifier for the HP J4113A 1-port Gigabit SX module.')
hpSwitchPortModuleGigLX = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 5))
if mibBuilder.loadTexts: hpSwitchPortModuleGigLX.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleGigLX.setDescription('The authoritative identifier for the HP J4114A 1-port Gigabit LX module.')
hpSwitchPortModuleTwoGig = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 6))
if mibBuilder.loadTexts: hpSwitchPortModuleTwoGig.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleTwoGig.setDescription('The authoritative identifier for the HP J4130A 2-port Gigabit module.')
hpSwitchPortModuleGigStk = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 7))
if mibBuilder.loadTexts: hpSwitchPortModuleGigStk.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleGigStk.setDescription('The authoritative identifier for the HP J4130A 1-port Gigabit Stacking module.')
hpSwitchPortModuleGigT = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 7, 8))
if mibBuilder.loadTexts: hpSwitchPortModuleGigT.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleGigT.setDescription('The authoritative identifier for the HP J4115A 1-port Gigabit T module.')
hpSwitchPortModuleJ4820A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 1))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4820A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4820A.setDescription('The authoritative identifier for the HP J4820A 24 Port 10/100Base-TX Module.')
hpSwitchPortModuleJ4821A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 2))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4821A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4821A.setDescription('The authoritative identifier for the HP J4821A 4 Port 100/1000Base-TX Module.')
hpSwitchPortModuleJ4878A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 3))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4878A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4878A.setDescription('The authoritative identifier for the HP J4878A 4x MiniGBIC Module.')
hpSwitchModuleJ4852A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ4852A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4852A.setDescription('The authoritative identifier for the HP J4852A 12-port 100-FX MTRJ')
hpSwitchModuleJ8161A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ8161A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8161A.setDescription('The authoritative identifier for the HP J8161A 24-port 10/100Base-TX PoE Module.')
hpSwitchModuleJ4907A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ4907A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4907A.setDescription('The authoritative identifier for the HP J4907A Gig-T/GBIC xl Module.')
hpSwitchModuleJ8162A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 7))
if mibBuilder.loadTexts: hpSwitchModuleJ8162A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8162A.setDescription('The authoritative identifier for the HP J8162A XL Access Controller Module.')
hpSwitchPortModuleJ4820B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 8))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4820B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4820B.setDescription('The authoritative identifier for the HP J4820B 24 Port 10/100Base-TX Module.')
hpSwitchPortModuleJ4821B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 9))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4821B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4821B.setDescription('The authoritative identifier for the HP J4821B 4 Port 100/1000Base-TX Module.')
hpSwitchPortModuleJ4878B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 10))
if mibBuilder.loadTexts: hpSwitchPortModuleJ4878B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchPortModuleJ4878B.setDescription('The authoritative identifier for the HP J4878B 4x MiniGBIC Module.')
hpSwitchModuleJ9001A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 11))
if mibBuilder.loadTexts: hpSwitchModuleJ9001A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9001A.setDescription('The authoritative identifier for the HP J9001A Wireless Services xl Module.')
hpSwitchModuleJ9003A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 12))
if mibBuilder.loadTexts: hpSwitchModuleJ9003A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9003A.setDescription('The authoritative identifier for the HP J9003A Redundant Wireless Services xl Module.')
hpSwitchModuleJ8988A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 17, 13))
if mibBuilder.loadTexts: hpSwitchModuleJ8988A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8988A.setDescription('The authoritative identifier for the HP J8988A 10-GbE X2 xl module.')
hpSwitchModuleJ4812A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 18, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4812A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4812A.setDescription('The authoritative identifier for the HP J4812A 12-port 10/100Base-TX + 2 Gig module')
hpSwitchModuleJ4813A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 19, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4813A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4813A.setDescription('The authoritative identifier for the HP J4813A 24-port 10/100Base-TX + 2 Gig module')
hpSwitchModuleJ4862A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4862A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4862A.setDescription('The authoritative identifier for the HP J4862A 24-port 10/100Base-TX')
hpSwitchModuleJ4863A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ4863A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4863A.setDescription('The authoritative identifier for the HP J4863A 6-port 100/1000Base-TX')
hpSwitchModuleJ4864A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ4864A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4864A.setDescription('The authoritative identifier for the HP J4864A 3-port tranceiver module')
hpSwitchModuleJ4862B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ4862B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4862B.setDescription('The authoritative identifier for the HP J4862B 24-port 10/100Base-TX')
hpSwitchModuleJ4893A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ4893A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4893A.setDescription('The authoritative identifier for the HP J4893A 6-port Mini-GBIC module')
hpSwitchModuleJ4892A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ4892A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4892A.setDescription('The authoritative identifier for the HP J4892A 12-port 100-FX MTRJ')
hpSwitchModuleJ4908A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 23, 7))
if mibBuilder.loadTexts: hpSwitchModuleJ4908A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4908A.setDescription('The authoritative identifier for the HP J489XA 20-port 10/100/1000Base-TX + 2 Mini-GBIC')
hpSwitchModuleJ4903A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 31, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4903A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4903A.setDescription('The authoritative identifier for the HP J4903A 24-port 10/100/1000Base-TX')
hpSwitchModuleJ8434A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 31, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ8434A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8434A.setDescription('The authoritative identifier for the HP J8434A 2-port 10G CX4')
hpSwitchModuleJ8435A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 31, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ8435A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8435A.setDescription('The authoritative identifier for the HP J8435A 2-port 10G CL')
hpSwitchModuleJ4904A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 32, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4904A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4904A.setDescription('The authoritative identifier for the HP J4904A 48-port 10/100/1000Base-TX')
hpSwitchModuleJ4905A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 42, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4905A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4905A.setDescription('The authoritative identifier for the J4905A 24-port 10/100/1000-T + 4-port Gigabit module.')
hpSwitchModuleJ4906A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 43, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4906A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4906A.setDescription('The authoritative identifier for the J4906A 48-port 10/100/1000-T + 4-port Gigabit module.')
hpSwitchModuleJ8433A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 48, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8433A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8433A.setDescription('The authoritative identifier for the J8433A HP 6400cl-6XG Switch.')
hpSwitchModuleJ8474A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 49, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8474A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8474A.setDescription('The authoritative identifier for the J8474A HP 6410cl-6XG Switch.')
hpSwitchModuleJ8701A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8701A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8701A.setDescription('The authoritative identifier for the HP J8701A 24 port Gig-T.')
hpSwitchModuleJ8702A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ8702A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8702A.setDescription('The authoritative identifier for the HP J8702A 24 port Gig-T zl Module.')
hpSwitchModuleJ8705A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ8705A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8705A.setDescription('The authoritative identifier for the HP J8705A Gig-T/SFP zl Module.')
hpSwitchModuleJ8706A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ8706A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8706A.setDescription('The authoritative identifier for the HP J8706A 24 port SFP zl Module. ')
hpSwitchModuleJ8707A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ8707A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8707A.setDescription('The authoritative identifier for the HP J8707A 4 port 10-GbE zl Module.')
hpSwitchModuleJ8708A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ8708A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8708A.setDescription('The authoritative identifier for the HP J8708A 4 port 10G CX4 zl Module. ')
hpSwitchModuleJ87xxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 7))
if mibBuilder.loadTexts: hpSwitchModuleJ87xxA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ87xxA.setDescription('The authoritative identifier for the HP J87xxA yl Fixed Gig-T/SFP.')
hpSwitchModuleJ87yyA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 8))
if mibBuilder.loadTexts: hpSwitchModuleJ87yyA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ87yyA.setDescription('The authoritative identifier for the HP J87yyA yl Fixed 24p Gig-T.')
hpSwitchModuleJ8694A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 9))
if mibBuilder.loadTexts: hpSwitchModuleJ8694A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8694A.setDescription('The authoritative identifier for the HP J8694A yl X2/CX4 10-GbE Module.')
hpSwitchModuleJ8726A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 10))
if mibBuilder.loadTexts: hpSwitchModuleJ8726A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8726A.setDescription('The authoritative identifier for the J8726A HP 5400 zl Switch Management Module.')
hpSwitchModuleJ90xxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 68, 11))
if mibBuilder.loadTexts: hpSwitchModuleJ90xxA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ90xxA.setDescription('The authoritative identifier for the HP J9050A yl Fixed Gig-T/SFP.')
hpSwitchModuleJ90yyA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 68, 12))
if mibBuilder.loadTexts: hpSwitchModuleJ90yyA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ90yyA.setDescription('The authoritative identifier for the HP J9050A yl Fixed 24p Gig-T.')
hpSwitchModuleJ90zzA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 68, 13))
if mibBuilder.loadTexts: hpSwitchModuleJ90zzA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ90zzA.setDescription('The authoritative identifier for the HP J9050A yl X2/CX4 10-GbE Module.')
hpSwitchModuleJ9051A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 14))
if mibBuilder.loadTexts: hpSwitchModuleJ9051A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9051A.setDescription('The authoritative identifier for the HP J9051A Wireless Services zl Module.')
hpSwitchModuleJ9052A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 15))
if mibBuilder.loadTexts: hpSwitchModuleJ9052A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9052A.setDescription('The authoritative identifier for the HP J9052A Redundant Wireless Services zl Module.')
hpSwitchModuleJ9154A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 16))
if mibBuilder.loadTexts: hpSwitchModuleJ9154A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9154A.setDescription('The authoritative identifier for the HP J9154A Services zl Module.')
hpSwitchModuleJ9155A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 17))
if mibBuilder.loadTexts: hpSwitchModuleJ9155A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9155A.setDescription('The authoritative identifier for the HP J9155A zl Threat Management Services Module.')
hpSwitchModuleJ9446A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 18))
if mibBuilder.loadTexts: hpSwitchModuleJ9446A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9446A.setDescription('The authoritative identifier for the HP J9446A zl Data Center Connection Manager ONE Module.')
hpSwitchModuleJ9307A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 19))
if mibBuilder.loadTexts: hpSwitchModuleJ9307A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9307A.setDescription('The authoritative identifier for the HP J9307A 24-Port 10/100/1000 PoE+ zl Module.')
hpSwitchModuleJ9308A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 20))
if mibBuilder.loadTexts: hpSwitchModuleJ9308A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9308A.setDescription('The authoritative identifier for the HP J9308A 20-Port 10/100/1000 PoE+ with 4-Port SFP zl Module.')
hpSwitchModuleJ9478A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 21))
if mibBuilder.loadTexts: hpSwitchModuleJ9478A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9478A.setDescription('The authoritative identifier for the HP J9478A 24-Port 10/100 PoE+ zl Module.')
hpSwitchModuleJ9309A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 22))
if mibBuilder.loadTexts: hpSwitchModuleJ9309A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9309A.setDescription('The authoritative identifier for the HP J9309A 4-Port 10-GbE SFP+ zl Module.')
hpSwitchModuleJ9312A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 23))
if mibBuilder.loadTexts: hpSwitchModuleJ9312A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9312A.setDescription('The authoritative identifier for the HP J9312A yl SFP+/CX4 10G Module.')
hpSwitchModuleJ9534A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 24))
if mibBuilder.loadTexts: hpSwitchModuleJ9534A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9534A.setDescription('The authoritative identifier for the HP J9534A 24 port Gig-T PoE+ v2 zl Module.')
hpSwitchModuleJ9535A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 25))
if mibBuilder.loadTexts: hpSwitchModuleJ9535A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9535A.setDescription('The authoritative identifier for the HP J9535A 20-Port Gig-T PoE+ / 4-Port SFP v2 zl Module.')
hpSwitchModuleJ9536A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 26))
if mibBuilder.loadTexts: hpSwitchModuleJ9536A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9536A.setDescription('The authoritative identifier for the HP J9536A 20-Port Gig-T PoE+ / 2-Port SFP+ zl Module.')
hpSwitchModuleJ9537A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 27))
if mibBuilder.loadTexts: hpSwitchModuleJ9537A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9537A.setDescription('The authoritative identifier for the HP J9537A 24-Port SFP v2 zl Module.')
hpSwitchModuleJ9538A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 28))
if mibBuilder.loadTexts: hpSwitchModuleJ9538A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9538A.setDescription('The authoritative identifier for the HP J9538A 8-Port 10GbE SFP+ v2 zl Module.')
hpSwitchModuleJ9546A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 29))
if mibBuilder.loadTexts: hpSwitchModuleJ9546A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9546A.setDescription('The authoritative identifier for the HP J9546A 8-Port 10Gig-T LH zl Module.')
hpSwitchModuleJ9547A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 30))
if mibBuilder.loadTexts: hpSwitchModuleJ9547A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9547A.setDescription('The authoritative identifier for the HP J9547A 24-Port 10/100 PoE+ zl Module.')
hpSwitchModuleJ9548A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 31))
if mibBuilder.loadTexts: hpSwitchModuleJ9548A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9548A.setDescription('The authoritative identifier for the HP J9548A 20-Port Gig-T / 2-Port 10GbE SFP+ v2 zl Module.')
hpSwitchModuleJ9549A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 32))
if mibBuilder.loadTexts: hpSwitchModuleJ9549A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9549A.setDescription('The authoritative identifier for the HP J9549A 20-Port Gig-T / 4-Port SFP v2 zl Module.')
hpSwitchModuleJ9550A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 33))
if mibBuilder.loadTexts: hpSwitchModuleJ9550A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9550A.setDescription('The authoritative identifier for the HP J9550A 24-Port Gig-T v2 zl Module.')
hpSwitchAdvServicesModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 34))
if mibBuilder.loadTexts: hpSwitchAdvServicesModule.setStatus('current')
if mibBuilder.loadTexts: hpSwitchAdvServicesModule.setDescription('The authoritative identifier for the HP Advanced Services zl Module. The actual JwxyzA product number varies by SKU.')
hpSwitchExtServicesModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 35))
if mibBuilder.loadTexts: hpSwitchExtServicesModule.setStatus('current')
if mibBuilder.loadTexts: hpSwitchExtServicesModule.setDescription('The authoritative identifier for the HP Extended Services zl Module. The actual JwxyzA product number varies by SKU.')
hpSwitchModuleJ9485A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 36))
if mibBuilder.loadTexts: hpSwitchModuleJ9485A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9485A.setDescription('The authoritative identifier for the HP AllianceONE zl module (J9485A) with PCIe telephony interfaces, Microsoft Windows Server 2008 and Communications Server software installed.')
hpSwitchModuleJ9637A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 37))
if mibBuilder.loadTexts: hpSwitchModuleJ9637A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9637A.setDescription('The authoritative identifier for the HP J9637A 12-Port Gig-T PoE+ / 12-Port SFP v2 zl Module.')
hpSwitchV2ServicesModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 50, 41))
if mibBuilder.loadTexts: hpSwitchV2ServicesModule.setStatus('current')
if mibBuilder.loadTexts: hpSwitchV2ServicesModule.setDescription('The authoritative identifier for the HP Advanced Services v2 zl Module. The actual JwxyzA product number varies by SKU.')
hpSwitchModuleJ9986A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9986A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9986A.setDescription('The authoritative identifier for the J9986A HP 24-port 10/100/1000BASE-T PoE+ MACsec v3 zl2 Module')
hpSwitchModuleJ9987A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ9987A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9987A.setDescription('The authoritative identifier for the J9987A HP 24-port 10/100/1000BASE-T MACsec v3 zl2 Module')
hpSwitchModuleJ9988A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ9988A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9988A.setDescription('The authoritative identifier for the J9988A HP 24-port 1GbE SFP MACsec v3 zl2 Module')
hpSwitchModuleJ9989A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ9989A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9989A.setDescription('The authoritative identifier for the J9989A HP 12-port 10/100/1000BASE-T PoE+ / 12-port 1GbE SFP MACsec v3 zl2 Module')
hpSwitchModuleJ9990A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ9990A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9990A.setDescription('The authoritative identifier for the J9990A HP 20-port 10/100/1000BASE-T PoE+ / 4-port 1G/10GbE SFP+ MACsec v3 zl2 Module')
hpSwitchModuleJ9991A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 7))
if mibBuilder.loadTexts: hpSwitchModuleJ9991A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9991A.setDescription('The authoritative identifier for the J9991A HP 20-port 10/100/1000BASE-T PoE+ / 4-port 1/2.5/5/10GBASE-T PoE+ MACsec v3 zl2 Module')
hpSwitchModuleJ9992A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 8))
if mibBuilder.loadTexts: hpSwitchModuleJ9992A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9992A.setDescription('The authoritative identifier for the J9992A HP 20-port 10/100/1000BASE-T PoE+ MACsec / 1-port 40GbE QSFP+ v3 zl2 Module')
hpSwitchModuleJ9993A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 9))
if mibBuilder.loadTexts: hpSwitchModuleJ9993A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9993A.setDescription('The authoritative identifier for the J9993A HP 8-port 1G/10GbE SFP+ MACsec v3 zl2 Module')
hpSwitchModuleJ9995A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 10))
if mibBuilder.loadTexts: hpSwitchModuleJ9995A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9995A.setDescription('The authoritative identifier for the J9995A HP 8-port 1/2.5/5/10GBASE-T PoE+ MACsec v3 zl2 Module')
hpSwitchModuleJ9996A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 11))
if mibBuilder.loadTexts: hpSwitchModuleJ9996A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9996A.setDescription('The authoritative identifier for the J9996A HP 2-port 40GbE QSFP+ v3 zl2 Module')
hpSwitchModuleJ8765A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8765A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8765A.setDescription('The authoritative identifier for the HP J8765A 10/100 module.')
hpSwitchModuleJ8764A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ8764A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8764A.setDescription('The authoritative identifier for the HP J8764A 10/100/1000 module.')
hpSwitchModuleJ8776A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ8776A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8776A.setDescription('The authoritative identifier for the HP J8776A miniGBIC module.')
hpSwitchModuleJ8763A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ8763A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8763A.setDescription('The authoritative identifier for the HP J8763A 100FX module.')
hpSwitchModuleJ8768A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ8768A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8768A.setDescription('The authoritative identifier for the HP J8768A Gig-T vl module.')
hpSwitchModuleJ9033A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ9033A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9033A.setDescription('The authoritative identifier for the HP J9033A Gig-T/SFP vl module.')
hpSwitchModuleJ8766A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 52, 10))
if mibBuilder.loadTexts: hpSwitchModuleJ8766A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8766A.setDescription('The authoritative identifier for the HP J8766A 10-GbE X2 vl module.')
hpSwitchModuleJ9021A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 63, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9021A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9021A.setDescription('The authoritative identifier for the J9021A Fixed 24-port 10/100/1000-T module.')
hpSwitchModuleJ9022A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 64, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9022A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9022A.setDescription('The authoritative identifier for the J9022A Fixed 48-port 10/100/1000-T module.')
hpSwitchModuleJ9019A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 61, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9019A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9019A.setDescription('The authoritative identifier for the J9019A Fixed 24-port 10/100-T module.')
hpSwitchModuleJ9020A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 62, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9020A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9020A.setDescription('The authoritative identifier for the J9020A Fixed 48-port 10/100-T module.')
hpSwitchModuleJ9085A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 76, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9085A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9085A.setDescription('The authoritative identifier for the J9085A Fixed 24-port 10/100-T + 4-port Gigabit module.')
hpSwitchModuleJ9088A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 77, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9088A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9088A.setDescription('The authoritative identifier for the J9088A Fixed 48-port 10/100-T + 4-port Gigabit module.')
hpSwitchModuleJ9087A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 78, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9087A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9087A.setDescription('The authoritative identifier for the J9087A Fixed 24-port 10/100-T + 4-port Gigabit module.')
hpSwitchModuleJ9089A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 79, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9089A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9089A.setDescription('The authoritative identifier for the J9089A Fixed 48-port 10/100-T + 4-port Gigabit module.')
hpSwitchModuleJ9086A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 80, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9086A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9086A.setDescription('The authoritative identifier for the J9086A Fixed 24-port 10/100-T + 4-port Gigabit module.')
hpSwitchModuleJ9279A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 88, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9279A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9279A.setDescription('The authoritative identifier for the J9279A HP 2510G-24 Switch.')
hpSwitchModuleJ9280A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 89, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9280A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9280A.setDescription('The authoritative identifier for the J9280A HP 2510G-48 Switch.')
hpSwitchModuleJ9147A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 87, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9147A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9147A.setDescription('The authoritative identifier for the J9147A al Fixed 48p Gig-T/SFP module.')
hpSwitchModuleJ9145A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 86, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9145A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9145A.setDescription('The authoritative identifier for the J9145A al Fixed 24p Gig-T/SFP module.')
hpSwitchModuleJ9148A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 85, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9148A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9148A.setDescription('The authoritative identifier for the J9148A al Fixed 48p Gig-T/SFP module.')
hpSwitchModuleJ9146A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 84, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9146A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9146A.setDescription('The authoritative identifier for the J9146A al Fixed 24p Gig-T/SFP module.')
hpSwitchModuleJ9149A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 84, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9149A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9149A.setDescription('The authoritative identifier for the HP J9149A 10-GbE 2-port CX4')
hpSwitchModuleJ9008A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 84, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ9008A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9008A.setDescription('The authoritative identifier for the HP J9008A 10-GbE 2-port SFP+')
hpSwitchModuleJ9165A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 84, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ9165A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9165A.setDescription('The authoritative identifier for the HP J9165A 10-GbE 1-port passive CX4')
hpSwitchModuleJ9137A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 94, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9137A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9137A.setDescription('The authoritative identifier for the J9137A HP 2520-8 Switch.')
hpSwitchModuleJ9138A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 95, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9138A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9138A.setDescription('The authoritative identifier for the J9138A HP 2520-24 Switch.')
hpSwitchModuleJ9298A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 96, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9298A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9298A.setDescription('The authoritative identifier for the J9298A HP 2520G-8 Switch.')
hpSwitchModuleJ9299A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 97, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9299A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9299A.setDescription('The authoritative identifier for the J9299A HP 2520G-24 Switch.')
hpSwitchModuleJ9726A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 152, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9726A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9726A.setDescription('The authoritative identifier for the J9726A Fixed 24G module.')
hpSwitchModuleJ9727A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 153, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9727A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9727A.setDescription('The authoritative identifier for the J9727A Fixed 24G PoE+ module.')
hpSwitchModuleJ9728A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 154, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9728A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9728A.setDescription('The authoritative identifier for the J9728A Fixed 48G module.')
hpSwitchModuleJ9729A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9729A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9729A.setDescription('The authoritative identifier for the J9729A Fixed 48G POE+ module.')
hpSwitchModuleJ9577A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 128, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9577A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9577A.setDescription('The authoritative identifier for the HP E3800 4-port Stacking Module.')
hpSwitchModuleJ9573 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 119, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9573.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9573.setDescription('The authoritative identifier for the HP E3800-24G-PoE+-2SFP+ Switch.')
hpSwitchModuleJ9574x = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 120, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9574x.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9574x.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4SFP+ Switch.')
hpSwitchModuleJ9574y = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 120, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9574y.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9574y.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4SFP+ Switch.')
hpSwitchModuleJ9575 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 121, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9575.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9575.setDescription('The authoritative identifier for the HP E3800-24G-2SFP+ Switch.')
hpSwitchModuleJ9576x = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 122, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9576x.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9576x.setDescription('The authoritative identifier for the HP E3800-48G-4SFP+ Switch.')
hpSwitchModuleJ9576y = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 122, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9576y.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9576y.setDescription('The authoritative identifier for the HP E3800-48G-4SFP+ Switch.')
hpSwitchModuleJ9584 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 123, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9584.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9584.setDescription('The authoritative identifier for the HP E3800-24SFP-2SFP+ Switch.')
hpSwitchModuleJ9585 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 124, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9585.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9585.setDescription('The authoritative identifier for the HP E3800-24G-2XG Switch.')
hpSwitchModuleJ9586x = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 125, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9586x.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9586x.setDescription('The authoritative identifier for the HP E3800-48G-4XG Switch.')
hpSwitchModuleJ9586y = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 125, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9586y.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9586y.setDescription('The authoritative identifier for the HP E3800-48G-4XG Switch.')
hpSwitchModuleJ9587 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 126, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9587.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9587.setDescription('The authoritative identifier for the HP E3800-24G-PoE+-2XG Switch.')
hpSwitchModuleJ9588x = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 127, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9588x.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9588x.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4XG Switch.')
hpSwitchModuleJ9588y = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 127, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9588y.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9588y.setDescription('The authoritative identifier for the HP E3800-48G-PoE+-4XG Switch.')
hpSwitchModuleJ94xxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 112, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ94xxA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ94xxA.setDescription('The authoritative identifier for the HP J94xxA Fixed 10/100Base-TX/SFP.')
hpSwitchModuleJ94xyA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 112, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ94xyA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ94xyA.setDescription('The authoritative identifier for the HP J94xyA Fixed 24p 10/100Base-TX.')
hpSwitchModuleJ94yxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 110, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ94yxA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ94yxA.setDescription('The authoritative identifier for the HP J94yxA Fixed 10/100Base-TX/SFP PoE.')
hpSwitchModuleJ94yyA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 110, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ94yyA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ94yyA.setDescription('The authoritative identifier for the HP J94yyA Fixed 24p 10/100Base-TX PoE.')
hpSwitchModuleJ93aaA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 115, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ93aaA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ93aaA.setDescription('The authoritative identifier for the HP J93aaA Fixed Gig-T/SFP PoE+.')
hpSwitchModuleJ93bbA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 115, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ93bbA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ93bbA.setDescription('The authoritative identifier for the HP J93bbA Fixed 24p Gig-T PoE+.')
hpSwitchModuleJ9565A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 117, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9565A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9565A.setDescription('The authoritative identifier for the J9565A Fixed 8-port 10/100-T + 2-port Gigabit module.')
hpSwitchModuleJ9562A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 118, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9562A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9562A.setDescription('The authoritative identifier for the J9562A 8-port 10/100/1000-T + 2-port Gigabit module.')
hpSwitchModuleJ9623A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 129, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9623A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9623A.setDescription('The authoritative identifier for the J9623A Fixed 24p 10/100 module.')
hpSwitchModuleJ9624A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 130, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9624A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9624A.setDescription('The authoritative identifier for the J9624A Fixed 24p PPoEP 10/100 module.')
hpSwitchModuleJ9625A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 131, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9625A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9625A.setDescription('The authoritative identifier for the J9625A Fixed 24p PoEP 10/100 module.')
hpSwitchModuleJ9626A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 132, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9626A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9626A.setDescription('The authoritative identifier for the J9626A Fixed 48p 10/100 module.')
hpSwitchModuleJ9627A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 133, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9627A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9627A.setDescription('The authoritative identifier for the J9627A Fixed 48p PoEP 10/100 module.')
hpSwitchModuleJ9772A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 136, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9772A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9772A.setDescription('The authoritative identifier for the J9772A Fixed 48p PoEP 10/100/1000-T module.')
hpSwitchModuleJ9773A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 137, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9773A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9773A.setDescription('The authoritative identifier for the J9773A Fixed 24p PoEP 10/100/1000-T module.')
hpSwitchModuleJ9774A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 138, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9774A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9774A.setDescription('The authoritative identifier for the J9774A Fixed 8p PoEP 10/100/1000-T module.')
hpSwitchModuleJ9775A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 139, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9775A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9775A.setDescription('The authoritative identifier for the J9775A Fixed 48p 10/100/1000-T module.')
hpSwitchModuleJ9776A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 140, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9776A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9776A.setDescription('The authoritative identifier for the J9776A Fixed 24p 10/100/1000-T module.')
hpSwitchModuleJ9777A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 141, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9777A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9777A.setDescription('The authoritative identifier for the J9777A Fixed 8p 10/100/1000-T module.')
hpSwitchModuleJ9778A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 142, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9778A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9778A.setDescription('The authoritative identifier for the J9778A Fixed 48p PoEP 10/100 module.')
hpSwitchModuleJ9779A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 143, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9779A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9779A.setDescription('The authoritative identifier for the J9779A Fixed 24p PoEP 10/100 module.')
hpSwitchModuleJ9780A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 144, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9780A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9780A.setDescription('The authoritative identifier for the J9779A Fixed 8p PoEP 10/100 module.')
hpSwitchModuleJ9781A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 145, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9781A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9781A.setDescription('The authoritative identifier for the J9781A Fixed 48p 10/100 module.')
hpSwitchModuleJ9782A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 146, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9782A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9782A.setDescription('The authoritative identifier for the J9782A Fixed 24p 10/100 module.')
hpSwitchModuleJ9783A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 147, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9783A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9783A.setDescription('The authoritative identifier for the J9783A Fixed 8p 10/100 module.')
hpSwitchModuleJ9853A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 163, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9853A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9853A.setDescription('The authoritative identifier for the J9853A Fixed 48p PoEP 10/100/1000-T 2SFP+ module.')
hpSwitchModuleJ9854A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 164, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9854A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9854A.setDescription('The authoritative identifier for the J9854A Fixed 24p PoEP 10/100/1000-T 2SFP+ module.')
hpSwitchModuleJ9855A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 165, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9855A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9855A.setDescription('The authoritative identifier for the J9855A Fixed 48p 10/100/1000-T 2SFP+ module.')
hpSwitchModuleJ9856A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 166, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9856A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9856A.setDescription('The authoritative identifier for the J9856A Fixed 24p 10/100/1000-T 2SFP+ module.')
hpSwitchModuleJL070A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 173, 1))
if mibBuilder.loadTexts: hpSwitchModuleJL070A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJL070A.setDescription('The authoritative identifier for the JL070A Fixed 8p PoEP Internal PS 10/100 module.')
hpSwitchModuleJ9730A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ9730A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9730A.setDescription('The authoritative identifier for the HP J9730A 10-GbE 2-port CX4')
hpSwitchModuleJ9731A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ9731A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9731A.setDescription('The authoritative identifier for the HP J9731A 10-GbE 2-port SFP+')
hpSwitchModuleJ9732A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ9732A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9732A.setDescription('The authoritative identifier for the HP J9732A 10GBASE-T')
hpSwitchModuleJ9733A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 155, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ9733A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9733A.setDescription('The authoritative identifier for the HP J9733A 2 Port Stacking')
hpSwitchModuleJ9827A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 160, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ9827A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ9827A.setDescription('The authoritative identifier for the J9827A HP 5400R zl2 Switch Management Module')
hpWANRouters = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1))
hpWANModules = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2))
hpSRJ8751A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1, 1))
if mibBuilder.loadTexts: hpSRJ8751A.setStatus('current')
if mibBuilder.loadTexts: hpSRJ8751A.setDescription('The authoritative identifier for the HP J8751A Secure Router 7001dl.')
hpSRJ8752A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1, 2))
if mibBuilder.loadTexts: hpSRJ8752A.setStatus('current')
if mibBuilder.loadTexts: hpSRJ8752A.setDescription('The authoritative identifier for the HP J8752A Secure Router 7102dl.')
hpSRJ8753A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1, 3))
if mibBuilder.loadTexts: hpSRJ8753A.setStatus('current')
if mibBuilder.loadTexts: hpSRJ8753A.setDescription('The authoritative identifier for the HP J8753A Secure Router 7203dl.')
hpSRJ8754A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1, 4))
if mibBuilder.loadTexts: hpSRJ8754A.setStatus('current')
if mibBuilder.loadTexts: hpSRJ8754A.setDescription('The authoritative identifier for the HP J8754A Secure Router 7306dl.')
hpSRmoduleJ8451A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 1))
if mibBuilder.loadTexts: hpSRmoduleJ8451A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8451A.setDescription('The authoritative identifier for the HP SR dl 1 x T1 module.')
hpSRmoduleJ8452A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 2))
if mibBuilder.loadTexts: hpSRmoduleJ8452A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8452A.setDescription('The authoritative identifier for the HP SR dl 1 x T1 + DSX-1 module.')
hpSRmoduleJ8453A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 3))
if mibBuilder.loadTexts: hpSRmoduleJ8453A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8453A.setDescription('The authoritative identifier for the HP SR dl 2 x T1 module.')
hpSRmoduleJ8454A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 4))
if mibBuilder.loadTexts: hpSRmoduleJ8454A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8454A.setDescription('The authoritative identifier for the HP SR dl 1 x E1 module.')
hpSRmoduleJ8455A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 5))
if mibBuilder.loadTexts: hpSRmoduleJ8455A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8455A.setDescription('The authoritative identifier for the HP SR dl 1 x E1 + G.703 module.')
hpSRmoduleJ8456A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 6))
if mibBuilder.loadTexts: hpSRmoduleJ8456A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8456A.setDescription('The authoritative identifier for the HP SR dl 2 x E1 module.')
hpSRmoduleJ8457A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 7))
if mibBuilder.loadTexts: hpSRmoduleJ8457A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8457A.setDescription('The authoritative identifier for the HP SR dl 2 x ISDN BRI S/T module.')
hpSRmoduleJ8458A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 8))
if mibBuilder.loadTexts: hpSRmoduleJ8458A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8458A.setDescription('The authoritative identifier for the HP SR dl 1 x Serial module.')
hpSRmoduleJ8459A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 9))
if mibBuilder.loadTexts: hpSRmoduleJ8459A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8459A.setDescription('The authoritative identifier for the HP SR dl 1 x ADSL2+ Annex A module.')
hpSRmoduleJ8759A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 10))
if mibBuilder.loadTexts: hpSRmoduleJ8759A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8759A.setDescription('The authoritative identifier for the HP SR dl 1 x ADSL2+ Annex B module.')
hpSRmoduleJ8460A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 11))
if mibBuilder.loadTexts: hpSRmoduleJ8460A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8460A.setDescription('The authoritative identifier for the HP SR dl ISDN BRI U backup.')
hpSRmoduleJ8461A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 12))
if mibBuilder.loadTexts: hpSRmoduleJ8461A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8461A.setDescription('The authoritative identifier for the HP SR dl ISDN BRI S/T backup.')
hpSRmoduleJ8462A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 13))
if mibBuilder.loadTexts: hpSRmoduleJ8462A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8462A.setDescription('The authoritative identifier for the HP SR dl Analog Modem backup.')
hpSRmoduleJ8463A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 14))
if mibBuilder.loadTexts: hpSRmoduleJ8463A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8463A.setDescription('The authoritative identifier for the HP SR dl 8 x T1/E1 wide module.')
hpSRmoduleJ8464A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 15))
if mibBuilder.loadTexts: hpSRmoduleJ8464A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8464A.setDescription('The authoritative identifier for the HP SR dl DS-3 wide module.')
hpSRmoduleJ8465A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 16))
if mibBuilder.loadTexts: hpSRmoduleJ8465A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8465A.setDescription('The authoritative identifier for the HP SR dl HSSI wide module.')
hpSRmoduleJ8471A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 17))
if mibBuilder.loadTexts: hpSRmoduleJ8471A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8471A.setDescription('The authoritative identifier for the HP SR 7100/7200 IPSec module.')
hpSRmoduleJ8472A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 2, 18))
if mibBuilder.loadTexts: hpSRmoduleJ8472A.setStatus('current')
if mibBuilder.loadTexts: hpSRmoduleJ8472A.setDescription('The authoritative identifier for the HP SR 7300 series IPSec module.')
hpSRPowerSupply8756A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 7, 1, 4, 1))
if mibBuilder.loadTexts: hpSRPowerSupply8756A.setStatus('current')
if mibBuilder.loadTexts: hpSRPowerSupply8756A.setDescription('The authoritative identifier for the HP J8754A Secure Router 7306dl power supply.')
hpManagementModuleJ9092A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 72, 1))
if mibBuilder.loadTexts: hpManagementModuleJ9092A.setStatus('current')
if mibBuilder.loadTexts: hpManagementModuleJ9092A.setDescription('The authoritative identifier for the J9092A HP 8200zl Switch Management Module.')
hpFabricModuleJ9093A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 72, 2))
if mibBuilder.loadTexts: hpFabricModuleJ9093A.setStatus('current')
if mibBuilder.loadTexts: hpFabricModuleJ9093A.setDescription('The authoritative identifier for the J9093A HP 8200zl Switch Fabric Module.')
hpSSMModuleJ8784A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 72, 3))
if mibBuilder.loadTexts: hpSSMModuleJ8784A.setStatus('current')
if mibBuilder.loadTexts: hpSSMModuleJ8784A.setDescription('The authoritative identifier for the J8784A HP 8212zl Switch System Support Module.')
hpSwitchModuleJ92yyA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ92yyA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92yyA.setDescription('The authoritative identifier for the HP J92yyA ml Fixed 4p SFP+.')
hpSwitchModuleJ92xxA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 2))
if mibBuilder.loadTexts: hpSwitchModuleJ92xxA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92xxA.setDescription('The authoritative identifier for the HP J92xxA ml Fixed Gig-T/SFP.')
hpSwitchModuleJ92wwA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 3))
if mibBuilder.loadTexts: hpSwitchModuleJ92wwA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92wwA.setDescription('The authoritative identifier for the HP J92wwA ml Fixed 24 Gig.')
hpSwitchModuleJ92vvA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 4))
if mibBuilder.loadTexts: hpSwitchModuleJ92vvA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92vvA.setDescription('The authoritative identifier for the HP J92vvA ml Fixed 24 Gig DP.')
hpSwitchModuleJ92uuA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 5))
if mibBuilder.loadTexts: hpSwitchModuleJ92uuA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92uuA.setDescription('The authoritative identifier for the HP J92uuA ml Fixed 24 Gig Non DP.')
hpSwitchModuleJ92ttA = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 98, 6))
if mibBuilder.loadTexts: hpSwitchModuleJ92ttA.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ92ttA.setDescription('The authoritative identifier for the HP J92ttA ml Fixed 2 10Gig.')
hpSwitchModuleJ4899A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 29, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4899A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4899A.setDescription('The authoritative identifier for the J4899A HP 2650 48-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ4902A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 30, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4902A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4902A.setDescription('The authoritative identifier for the J4902A HP 6108 6-port 10/100/1000-TX + 2-port Gig module.')
hpSwitchModuleJ4900A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 34, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4900A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4900A.setDescription('The authoritative identifier for the J4900A HP 2626 24-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ8165A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 35, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8165A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8165A.setDescription('The authoritative identifier for the J8165A HP 2650-PWR 48-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ8164A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 36, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8164A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8164A.setDescription('The authoritative identifier for the J8164A HP 2626-PWR 24-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ4899B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 44, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4899B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4899B.setDescription('The authoritative identifier for the J4899B HP 2650 48-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ4900B = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 45, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4900B.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4900B.setDescription('The authoritative identifier for the J4900B HP 2626 24-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ8762A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 55, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ8762A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ8762A.setDescription('The authoritative identifier for the J8762A HP 2600-8-PWR 8-port 10/100-T + 1-port Gig module.')
hpSwitchModuleJ4899C = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 83, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4899C.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4899C.setDescription('The authoritative identifier for the J4899C HP 2650 48-port 10/100-T + 2-port Gig module.')
hpSwitchModuleJ4900C = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 82, 1))
if mibBuilder.loadTexts: hpSwitchModuleJ4900C.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleJ4900C.setDescription('The authoritative identifier for the J4900C HP 2626 24-port 10/100-T + 2-port Gig module.')
hpSwitchModuleA6713A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 24, 11))
if mibBuilder.loadTexts: hpSwitchModuleA6713A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleA6713A.setDescription('The authoritative identifier for the HP A6713A 16+8-port 10/100T + Gig TX module.')
hpSwitchModuleA6716A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 25, 12))
if mibBuilder.loadTexts: hpSwitchModuleA6716A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleA6716A.setDescription('The authoritative identifier for the HP A6716A 16+8-port 10/100T + Gig SX module.')
hpSwitchModuleA6717A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 26, 13))
if mibBuilder.loadTexts: hpSwitchModuleA6717A.setStatus('current')
if mibBuilder.loadTexts: hpSwitchModuleA6717A.setDescription('The authoritative identifier for the HP A6717A 16+8-port 10/100T + Gig LX module.')
arubaJL071A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 1))
if mibBuilder.loadTexts: arubaJL071A.setStatus('current')
if mibBuilder.loadTexts: arubaJL071A.setDescription('The authoritative identifier for the JL071A Aruba 3810M 24G 1-slot Switch.')
arubaJL071AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 1, 1))
if mibBuilder.loadTexts: arubaJL071AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL071AModule.setDescription('The authoritative identifier for the JL071A Aruba 3810M 24G 1-slot Module.')
arubaJL072A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 2))
if mibBuilder.loadTexts: arubaJL072A.setStatus('current')
if mibBuilder.loadTexts: arubaJL072A.setDescription('The authoritative identifier for the JL072A Aruba 3810M 48G 1-slot Switch.')
arubaJL072AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 2, 1))
if mibBuilder.loadTexts: arubaJL072AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL072AModule.setDescription('The authoritative identifier for the JL072A Aruba 3810M 48G 1-slot Module.')
arubaJL073A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 3))
if mibBuilder.loadTexts: arubaJL073A.setStatus('current')
if mibBuilder.loadTexts: arubaJL073A.setDescription('The authoritative identifier for the JL073A Aruba 3810M 24G PoE+ 1-slot Switch.')
arubaJL073AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 3, 1))
if mibBuilder.loadTexts: arubaJL073AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL073AModule.setDescription('The authoritative identifier for the JL073A Aruba 3810M 24G PoE+ 1-slot Module.')
arubaJL074A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 4))
if mibBuilder.loadTexts: arubaJL074A.setStatus('current')
if mibBuilder.loadTexts: arubaJL074A.setDescription('The authoritative identifier for the JL074A Aruba 3810M 48G PoE+ 1-slot Switch.')
arubaJL074AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 4, 1))
if mibBuilder.loadTexts: arubaJL074AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL074AModule.setDescription('The authoritative identifier for the JL074A Aruba 3810M 48G PoE+ 1-slot Module.')
arubaJL075A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 5))
if mibBuilder.loadTexts: arubaJL075A.setStatus('current')
if mibBuilder.loadTexts: arubaJL075A.setDescription('The authoritative identifier for the JL075A Aruba 3810M 16SFP+ 2-slot Switch.')
arubaJL075AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 5, 1))
if mibBuilder.loadTexts: arubaJL075AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL075AModule.setDescription('The authoritative identifier for the JL075A Aruba 3810M 16SFP+ 2-slot Module.')
arubaJL076A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 6))
if mibBuilder.loadTexts: arubaJL076A.setStatus('current')
if mibBuilder.loadTexts: arubaJL076A.setDescription('The authoritative identifier for the JL076A Aruba 3810M 40G 8 HPE Smart Rate PoE+ 1-slot Switch.')
arubaJL076AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 6, 1))
if mibBuilder.loadTexts: arubaJL076AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL076AModule.setDescription('The authoritative identifier for the JL076A Aruba 3810M 20G 8 HPE Smart Rate PoE+ 1-slot Module.')
arubaJL077A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 7))
if mibBuilder.loadTexts: arubaJL077A.setStatus('current')
if mibBuilder.loadTexts: arubaJL077A.setDescription('The authoritative identifier for the JL077A Aruba 3810M 16 HPE Smart Rate PoE+ 2-slot Switch.')
arubaJL077AModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 7, 1))
if mibBuilder.loadTexts: arubaJL077AModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL077AModule.setDescription('The authoritative identifier for the JL077A Aruba 3810M 16 HPE Smart Rate PoE+ 2-slot Module.')
arubaJL084AStackingModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 8))
if mibBuilder.loadTexts: arubaJL084AStackingModule.setStatus('current')
if mibBuilder.loadTexts: arubaJL084AStackingModule.setDescription('The authoritative identifier for the Aruba 3810M 4-port Stacking Module.')
arubaJL088AFanTray = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 174, 9))
if mibBuilder.loadTexts: arubaJL088AFanTray.setStatus('current')
if mibBuilder.loadTexts: arubaJL088AFanTray.setDescription('The authoritative identifier for the Aruba 3810 Switch Fan Tray.')
arubaFPModuleJL078A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 1))
if mibBuilder.loadTexts: arubaFPModuleJL078A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL078A.setDescription('The authoritative identifier for the Aruba 1QSFP+ 40GbE Module.')
arubaFPModuleJL079A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 2))
if mibBuilder.loadTexts: arubaFPModuleJL079A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL079A.setDescription('The authoritative identifier for the Aruba 2QSFP+ 40GbE Module.')
arubaFPModuleJL080A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 3))
if mibBuilder.loadTexts: arubaFPModuleJL080A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL080A.setDescription('The authoritative identifier for the Aruba 2 HPE Smart Rate PoE+ Module.')
arubaFPModuleJL081A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 4))
if mibBuilder.loadTexts: arubaFPModuleJL081A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL081A.setDescription('The authoritative identifier for the Aruba 4 HPE Smart Rate PoE+ Module.')
arubaFPModuleJL082A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 5))
if mibBuilder.loadTexts: arubaFPModuleJL082A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL082A.setDescription('The authoritative identifier for the Aruba 2SFP+ Module.')
arubaFPModuleJL083A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 180, 6))
if mibBuilder.loadTexts: arubaFPModuleJL083A.setStatus('current')
if mibBuilder.loadTexts: arubaFPModuleJL083A.setDescription('The authoritative identifier for the Aruba 4SFP+ Module.')
arubaSwitchJL319A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 2))
if mibBuilder.loadTexts: arubaSwitchJL319A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL319A.setDescription('The authoritative identifier for the Aruba 2930M-24G Switch.')
arubaModuleJL319A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 2, 1))
if mibBuilder.loadTexts: arubaModuleJL319A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL319A.setDescription('The authoritative identifier for the Aruba 2930M-24G module.')
arubaSwitchJL321A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 3))
if mibBuilder.loadTexts: arubaSwitchJL321A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL321A.setDescription('The authoritative identifier for the Aruba 2930M-48G Switch.')
arubaModuleJL321A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 3, 1))
if mibBuilder.loadTexts: arubaModuleJL321A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL321A.setDescription('The authoritative identifier for the Aruba 2930M-48G module.')
arubaSwitchJL320A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 4))
if mibBuilder.loadTexts: arubaSwitchJL320A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL320A.setDescription('The authoritative identifier for the Aruba 2930M-24G-PoE+ Switch.')
arubaModuleJL320A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 4, 1))
if mibBuilder.loadTexts: arubaModuleJL320A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL320A.setDescription('The authoritative identifier for the Aruba 2930M-24G-PoE+ module.')
arubaSwitchJL322A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 5))
if mibBuilder.loadTexts: arubaSwitchJL322A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL322A.setDescription('The authoritative identifier for the Aruba 2930M-48G-PoE+ Switch.')
arubaModuleJL322A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 5, 1))
if mibBuilder.loadTexts: arubaModuleJL322A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL322A.setDescription('The authoritative identifier for the Aruba 2930M-48G-PoE+ module.')
arubaSwitchJL324A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 6))
if mibBuilder.loadTexts: arubaSwitchJL324A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL324A.setDescription('The authoritative identifier for the Aruba 2930M-24SR-PoE+ Switch.')
arubaModuleJL324A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 6, 1))
if mibBuilder.loadTexts: arubaModuleJL324A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL324A.setDescription('The authoritative identifier for the Aruba 2930M-24SR-PoE+ module.')
arubaSwitchJL323A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 9))
if mibBuilder.loadTexts: arubaSwitchJL323A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL323A.setDescription('The authoritative identifier for the Aruba 2930M-40G-8SR-PoE+ Switch.')
arubaModuleJL323A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 9, 1))
if mibBuilder.loadTexts: arubaModuleJL323A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL323A.setDescription('The authoritative identifier for the Aruba 2930M-40G-8SR-PoE+ module.')
arubaSwitchJL258A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 16))
if mibBuilder.loadTexts: arubaSwitchJL258A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL258A.setDescription('The authoritative identifier for the Aruba 2930F-8G-PoE+-2SFP+ Switch.')
arubaModuleJL258A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 16, 1))
if mibBuilder.loadTexts: arubaModuleJL258A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL258A.setDescription('The authoritative identifier for the Aruba 2930F-8G-PoE+-2SFP+ module.')
arubaSwitchJL253A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 18))
if mibBuilder.loadTexts: arubaSwitchJL253A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL253A.setDescription('The authoritative identifier for the Aruba 2930F-24G-4SFP+ Switch.')
arubaModuleJL253A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 18, 1))
if mibBuilder.loadTexts: arubaModuleJL253A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL253A.setDescription('The authoritative identifier for the Aruba 2930F-24G-4SFP+ module.')
arubaSwitchJL254A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 19))
if mibBuilder.loadTexts: arubaSwitchJL254A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL254A.setDescription('The authoritative identifier for the Aruba 2930F-48G-4SFP+ Switch.')
arubaModuleJL254A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 19, 1))
if mibBuilder.loadTexts: arubaModuleJL254A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL254A.setDescription('The authoritative identifier for the Aruba 2930F-48G-4SFP+ module.')
arubaSwitchJL255A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 20))
if mibBuilder.loadTexts: arubaSwitchJL255A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL255A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP+ Switch.')
arubaModuleJL255A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 20, 1))
if mibBuilder.loadTexts: arubaModuleJL255A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL255A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP+ module.')
arubaSwitchJL256A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 21))
if mibBuilder.loadTexts: arubaSwitchJL256A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL256A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP+ Switch.')
arubaModuleJL256A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 21, 1))
if mibBuilder.loadTexts: arubaModuleJL256A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL256A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP+ module.')
arubaSwitchJL259A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 22))
if mibBuilder.loadTexts: arubaSwitchJL259A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL259A.setDescription('The authoritative identifier for the Aruba 2930F-24G-4SFP Switch.')
arubaModuleJL259A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 22, 1))
if mibBuilder.loadTexts: arubaModuleJL259A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL259A.setDescription('The authoritative identifier for the Aruba 2930F-24G-4SFP module.')
arubaSwitchJL260A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 23))
if mibBuilder.loadTexts: arubaSwitchJL260A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL260A.setDescription('The authoritative identifier for the Aruba 2930F-48G-4SFP Switch.')
arubaModuleJL260A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 23, 1))
if mibBuilder.loadTexts: arubaModuleJL260A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL260A.setDescription('The authoritative identifier for the Aruba 2930F-48G-4SFP module.')
arubaSwitchJL261A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 24))
if mibBuilder.loadTexts: arubaSwitchJL261A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL261A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP Switch.')
arubaModuleJL261A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 24, 1))
if mibBuilder.loadTexts: arubaModuleJL261A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL261A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP module.')
arubaSwitchJL262A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 25))
if mibBuilder.loadTexts: arubaSwitchJL262A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL262A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP Switch.')
arubaModuleJL262A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 25, 1))
if mibBuilder.loadTexts: arubaModuleJL262A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL262A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP module.')
arubaSwitchJL558A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 26))
if mibBuilder.loadTexts: arubaSwitchJL558A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL558A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF+ Switch.')
arubaModuleJL558A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 26, 1))
if mibBuilder.loadTexts: arubaModuleJL558A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL558A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF+ module.')
arubaSwitchJL557A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 27))
if mibBuilder.loadTexts: arubaSwitchJL557A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL557A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF Switch.')
arubaModuleJL557A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 27, 1))
if mibBuilder.loadTexts: arubaModuleJL557A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL557A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF module.')
arubaSwitchJL263A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 276))
if mibBuilder.loadTexts: arubaSwitchJL263A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL263A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP+-TAA Switch.')
arubaModuleJL263A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 276, 1))
if mibBuilder.loadTexts: arubaModuleJL263A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL263A.setDescription('The authoritative identifier for the Aruba 2930F-24G-PoE+-4SFP+-TAA module.')
arubaSwitchJL264A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 277))
if mibBuilder.loadTexts: arubaSwitchJL264A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL264A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP+-TAA Switch.')
arubaModuleJL264A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 277, 1))
if mibBuilder.loadTexts: arubaModuleJL264A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL264A.setDescription('The authoritative identifier for the Aruba 2930F-48G-PoE+-4SFP+-TAA module.')
arubaSwitchJL559A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 282))
if mibBuilder.loadTexts: arubaSwitchJL559A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL559A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF+ TAA Switch.')
arubaModuleJL559A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 282, 1))
if mibBuilder.loadTexts: arubaModuleJL559A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL559A.setDescription('The authoritative identifier for the Aruba 2930F 48G 740W PoE+ 4SPF+ TAA module.')
arubaSwitchJL354A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 18))
if mibBuilder.loadTexts: arubaSwitchJL354A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL354A.setDescription('The authoritative identifier for the Aruba 2540-24G-4SFP+ Switch.')
arubaModuleJL354A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 18, 1))
if mibBuilder.loadTexts: arubaModuleJL354A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL354A.setDescription('The authoritative identifier for the Aruba 2540-24G-4SFP+ module.')
arubaSwitchJL355A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 19))
if mibBuilder.loadTexts: arubaSwitchJL355A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL355A.setDescription('The authoritative identifier for the Aruba 2540-48G-4SFP+ Switch.')
arubaModuleJL355A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 19, 1))
if mibBuilder.loadTexts: arubaModuleJL355A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL355A.setDescription('The authoritative identifier for the Aruba 2540-48G-4SFP+ module.')
arubaSwitchJL356A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 20))
if mibBuilder.loadTexts: arubaSwitchJL356A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL356A.setDescription('The authoritative identifier for the Aruba 2540-24G-PoE+-4SFP+ Switch.')
arubaModuleJL356A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 20, 1))
if mibBuilder.loadTexts: arubaModuleJL356A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL356A.setDescription('The authoritative identifier for the Aruba 2540-24G-PoE+-4SFP+ module.')
arubaSwitchJL357A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 21))
if mibBuilder.loadTexts: arubaSwitchJL357A.setStatus('current')
if mibBuilder.loadTexts: arubaSwitchJL357A.setDescription('The authoritative identifier for the Aruba 2540-48G-PoE+-4SFP+ Switch.')
arubaModuleJL357A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 182, 21, 1))
if mibBuilder.loadTexts: arubaModuleJL357A.setStatus('current')
if mibBuilder.loadTexts: arubaModuleJL357A.setDescription('The authoritative identifier for the Aruba 2540-48G-PoE+-4SFP+ module.')
arubaStackingModuleJL325A = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 181, 1))
if mibBuilder.loadTexts: arubaStackingModuleJL325A.setStatus('current')
if mibBuilder.loadTexts: arubaStackingModuleJL325A.setDescription('The authoritative identifier for the Aruba 2930M 2 port Stacking Module.')
mibBuilder.exportSymbols("HP-ICF-OID", hpSwitchModuleJ9280A=hpSwitchModuleJ9280A, hpSwitchModuleJ9624A=hpSwitchModuleJ9624A, hpSwitchModuleJ9547A=hpSwitchModuleJ9547A, hpSwitchJ9022A=hpSwitchJ9022A, hpSwitchPortModuleET4=hpSwitchPortModuleET4, hpSRmoduleJ8463A=hpSRmoduleJ8463A, hpSwitchModuleJ9538A=hpSwitchModuleJ9538A, hpSwitchJ8693A=hpSwitchJ8693A, arubaSwitchJL264A=arubaSwitchJL264A, hpicfMauTypeSFPplusDA20=hpicfMauTypeSFPplusDA20, hpicfSwitchPort10GigCWDM1530=hpicfSwitchPort10GigCWDM1530, icfRouter210=icfRouter210, bridgeRemote=bridgeRemote, hpSwitch2920PortSlot=hpSwitch2920PortSlot, hpSwitchModuleJ8764A=hpSwitchModuleJ8764A, hpSwitchModuleJ9573=hpSwitchModuleJ9573, hpSwitchAuthorizationMIB=hpSwitchAuthorizationMIB, hpSwitchModuleJ8474A=hpSwitchModuleJ8474A, arubaJL073A=arubaJL073A, arubaSwitchJL260A=arubaSwitchJL260A, hpSwitchJ9577=hpSwitchJ9577, hpSwitchJ8771A=hpSwitchJ8771A, hpSwitchJ4900A=hpSwitchJ4900A, hpSwitchModuleJ9990A=hpSwitchModuleJ9990A, hpSRmoduleJ8455A=hpSRmoduleJ8455A, hpSRmoduleJ8471A=hpSRmoduleJ8471A, hpicfMauType1000BaseLHFD=hpicfMauType1000BaseLHFD, hpicfSwitchPort10T=hpicfSwitchPort10T, hpicfMauType1000CWDM1570=hpicfMauType1000CWDM1570, hpicfSyslog=hpicfSyslog, hpicfDeviceIdentityMIB=hpicfDeviceIdentityMIB, hpSRmoduleJ8453A=hpSRmoduleJ8453A, hpicfOEMs=hpicfOEMs, hpSwitchJ9773A=hpSwitchJ9773A, hpSwitchModuleJ4899A=hpSwitchModuleJ4899A, hpSwitchModuleJ9299A=hpSwitchModuleJ9299A, hpicfSwitchPortSFPplusDA15=hpicfSwitchPortSFPplusDA15, hpicfMauType1000BaseTHD=hpicfMauType1000BaseTHD, hpicfMauType1000BaseStkHD=hpicfMauType1000BaseStkHD, arubaSwitchJL262A=arubaSwitchJL262A, hpSwitchJ4899A=hpSwitchJ4899A, arubaJL075AModule=arubaJL075AModule, hpicfMauType1000CWDM1470=hpicfMauType1000CWDM1470, hpicfRip=hpicfRip, hpicfSwitchPort1000LX=hpicfSwitchPort1000LX, hpEs=hpEs, hpicfIpv6Lockdown=hpicfIpv6Lockdown, hpicfSwitchPort1000CWDM1470=hpicfSwitchPort1000CWDM1470, hpicfSwitchPort1000T=hpicfSwitchPort1000T, hpSwitchModuleJ9565A=hpSwitchModuleJ9565A, arubaFPModuleJL083A=arubaFPModuleJL083A, hpSwitchModuleJ9008A=hpSwitchModuleJ9008A, icfUnidentifiedCard=icfUnidentifiedCard, hpSwitchModuleJ9854A=hpSwitchModuleJ9854A, arubaModuleJL319A=arubaModuleJL319A, hpSwitchPortModuleJ4878B=hpSwitchPortModuleJ4878B, hpicfMdns=hpicfMdns, hpSwitchJ9856A=hpSwitchJ9856A, hpicfRepeater=hpicfRepeater, hpEtherSwitchPort100T=hpEtherSwitchPort100T, hpSwitchModuleJ8162A=hpSwitchModuleJ8162A, hpSwitchModuleJ8706A=hpSwitchModuleJ8706A, hpSwitchPortModule10FL=hpSwitchPortModule10FL, arubaSwitchJL319A=arubaSwitchJL319A, hpSwitchBackplane=hpSwitchBackplane, hpicfSmartLinkMIB=hpicfSmartLinkMIB, hpSwitchJ4819A=hpSwitchJ4819A, arubaJL073AModule=arubaJL073AModule, hpSwitchModuleJ9574x=hpSwitchModuleJ9574x, arubaModuleJL322A=arubaModuleJL322A, hpSwitchJ9019B=hpSwitchJ9019B, hpSwitchJ9580PowerSupply=hpSwitchJ9580PowerSupply, hpSwitchModuleJ8988A=hpSwitchModuleJ8988A, hpicfLLCDomain=hpicfLLCDomain, hpAdvStk100Tx12TM=hpAdvStk100Tx12TM, hpSwitchModuleJ92wwA=hpSwitchModuleJ92wwA, hpSwitchModuleJ9992A=hpSwitchModuleJ9992A, hpAdvSwitch208VG=hpAdvSwitch208VG, hpSwitch2424=hpSwitch2424, hpSwitchJ8165A=hpSwitchJ8165A, hpSRmoduleJ8460A=hpSRmoduleJ8460A, hpicfEnetSMM=hpicfEnetSMM, icfRouter=icfRouter, hpStackMIB=hpStackMIB, hpicfMauType1000BaseBXU=hpicfMauType1000BaseBXU, hpSBMMIB=hpSBMMIB, hpicfMAUTypes=hpicfMAUTypes, hpSwitchModuleJ9773A=hpSwitchModuleJ9773A, hpicfDownloadMib=hpicfDownloadMib, hpSwitchJ9452A=hpSwitchJ9452A, hpWANRouters=hpWANRouters, arubaJL071A=arubaJL071A, hpicfSaviMIB=hpicfSaviMIB, hpSwitchJ9588=hpSwitchJ9588, hpSwitchJ9806APowerCable=hpSwitchJ9806APowerCable, hpSwitchJ9019A=hpSwitchJ9019A, hpicfTextualConventions=hpicfTextualConventions, hpicfObjectModules=hpicfObjectModules, hpicfSysMgmt=hpicfSysMgmt, icfRouter650Engine=icfRouter650Engine, hpicfMauType10GigBaseTSH=hpicfMauType10GigBaseTSH, hpSwitchModuleJ4903A=hpSwitchModuleJ4903A, hpSwitchPortModule100TX8=hpSwitchPortModule100TX8, hpSRJ8754A=hpSRJ8754A, hpicfMacNotifyMIB=hpicfMacNotifyMIB, hpicfSwitchPortSFPplusDAC=hpicfSwitchPortSFPplusDAC, hpSwitchJ9138A=hpSwitchJ9138A, hpicfEnetChipSetGT48001=hpicfEnetChipSetGT48001, icfBridge=icfBridge, arubaStack3810=arubaStack3810, hpSwitchJ4812A=hpSwitchJ4812A, advStackVg15=advStackVg15, hpSwitchA6717A=hpSwitchA6717A, hpSwitchJ9028B=hpSwitchJ9028B, hpSwitchJ8154A=hpSwitchJ8154A, hpicfSavepowerMIB=hpicfSavepowerMIB, hpSwitchVirtualStackMib=hpSwitchVirtualStackMib, hpicfAgentModules=hpicfAgentModules, hpSwitch1600=hpSwitch1600, hpSRmoduleJ8462A=hpSRmoduleJ8462A, hpSwitchJ4903A=hpSwitchJ4903A, netElement=netElement, hpSwitchJ8697A=hpSwitchJ8697A, hpSwitch4865PortSlot=hpSwitch4865PortSlot, hpSwitchExperimental=hpSwitchExperimental, hpSwitchJ9582FanTray=hpSwitchJ9582FanTray, hpSwitchModuleJ9774A=hpSwitchModuleJ9774A, hpSwitchJ9147A=hpSwitchJ9147A, hpSwitchJ8762A=hpSwitchJ8762A, icfFutureSlotSensor=icfFutureSlotSensor, hpicfMauType1000CWDM1550=hpicfMauType1000CWDM1550, hpicfSwitchPort10FL=hpicfSwitchPort10FL, hpicfMauType10GigBaseLRM=hpicfMauType10GigBaseLRM, hpSwitchPortModuleJ4821B=hpSwitchPortModuleJ4821B, hpSwitchModuleA6713A=hpSwitchModuleA6713A, hpicfJumboMIB=hpicfJumboMIB, hpSwitch4000=hpSwitch4000, arubaSwitchJL357A=arubaSwitchJL357A, hpSwitch5308PortSlot=hpSwitch5308PortSlot, hpSwitchModuleJ9562A=hpSwitchModuleJ9562A, hpicfXrrpMIB=hpicfXrrpMIB, hpSwitchJ9299A=hpSwitchJ9299A, hpAdvSwitch800T=hpAdvSwitch800T, hpSwitchJ8992A=hpSwitchJ8992A, icfVgRepeater=icfVgRepeater, hpicfTlsMinMIB=hpicfTlsMinMIB, arubaJL077AModule=arubaJL077AModule, hpSwitch6108PortSlot=hpSwitch6108PortSlot, hpSwitchAccountingMIB=hpSwitchAccountingMIB, hpSwitchPortModuleTwoGig=hpSwitchPortModuleTwoGig, hpSwitchModuleJ9546A=hpSwitchModuleJ9546A, hpicfInstMonMIB=hpicfInstMonMIB, hpicfMauTypeSFPplusDAC=hpicfMauTypeSFPplusDAC, hpSwitchJ9828APowerSupply=hpSwitchJ9828APowerSupply, hpSwitchModuleJ9779A=hpSwitchModuleJ9779A, hpSwitchJ9850A=hpSwitchJ9850A, hpAdvStkEnetSHExtSeg=hpAdvStkEnetSHExtSeg, hpSwitchModuleJ8768A=hpSwitchModuleJ8768A, hpicfMauTypeSFPplusDA5=hpicfMauTypeSFPplusDA5, hpStack=hpStack, hpSwitchJ9738APowerSupply=hpSwitchJ9738APowerSupply, hpSwitchModuleJ9996A=hpSwitchModuleJ9996A, hpSwitchModuleJ9588x=hpSwitchModuleJ9588x, hpicfMauType10GigCWDM1470=hpicfMauType10GigCWDM1470, arubaJL076AModule=arubaJL076AModule, hpicfMauType5GigBaseT=hpicfMauType5GigBaseT, hpSwitchJ9774A=hpSwitchJ9774A, hpicfMauTypeSFPplusLR=hpicfMauTypeSFPplusLR, arubaSwitchJL263A=arubaSwitchJL263A, hpSwitch2824PortSlot=hpSwitch2824PortSlot, hpicfMcastMIB=hpicfMcastMIB, hpicfMauType1000BaseTFD=hpicfMauType1000BaseTFD, hpicfSwitchPort10GigCWDM1470=hpicfSwitchPort10GigCWDM1470, hpicfActivateMIB=hpicfActivateMIB, hpEtherSwitchPort100VG=hpEtherSwitchPort100VG, hpSwitchModuleJ9086A=hpSwitchModuleJ9086A, hpSwitchJ4905A=hpSwitchJ4905A, hpicfSwitchPort1000LH=hpicfSwitchPort1000LH, hpicfSwitchPort1000BXU=hpicfSwitchPort1000BXU, hpSwitchJ9660A=hpSwitchJ9660A, hpSwitchModuleJ9485A=hpSwitchModuleJ9485A, hp10T100THubPort=hp10T100THubPort, hpicfOspf=hpicfOspf, hpEtherSwitchPortType=hpEtherSwitchPortType, hpAdvStkSwStackMgmtSlot=hpAdvStkSwStackMgmtSlot, hpSRmoduleJ8459A=hpSRmoduleJ8459A, hpSwitchModuleJ8766A=hpSwitchModuleJ8766A, hpSwitchModuleJ8762A=hpSwitchModuleJ8762A, hpicfFanMIB=hpicfFanMIB, arubaFPModuleJL082A=arubaFPModuleJL082A, hpSwitch3800StackingSlot=hpSwitch3800StackingSlot, hpicfSwitchPort1000CWDM1550=hpicfSwitchPort1000CWDM1550, hpSwitchJ9772A=hpSwitchJ9772A, hpSwitchJ9854A=hpSwitchJ9854A, hpSwitchModuleJ8434A=hpSwitchModuleJ8434A, hpSwitchModuleJ9728A=hpSwitchModuleJ9728A, arubaFPModuleJL081A=arubaFPModuleJL081A, hpicfCommonTraps=hpicfCommonTraps, hpicfBackplanes=hpicfBackplanes, hpSwitchJ9575=hpSwitchJ9575, hpicfDomains=hpicfDomains, arubaModuleJL256A=arubaModuleJL256A, hpSwitchModuleA6716A=hpSwitchModuleA6716A, hpicfVgRptrMib=hpicfVgRptrMib, hpSwitchJ9802A=hpSwitchJ9802A, hpSwitchModuleJ8701A=hpSwitchModuleJ8701A, hpicfUsrAuthMIB=hpicfUsrAuthMIB, hpSwitchModuleJ9001A=hpSwitchModuleJ9001A, icfRouter250=icfRouter250, hpSwitchJ8164A=hpSwitchJ8164A, hpSwitch2650CPortSlot=hpSwitch2650CPortSlot, arubaModuleJL262A=arubaModuleJL262A, arubaModuleJL354A=arubaModuleJL354A, hpSwitchJ9471A=hpSwitchJ9471A, hpicfSwitchPort1000CWDM1570=hpicfSwitchPort1000CWDM1570, hpSwitch516733_B21=hpSwitch516733_B21, hpSwitchPortModuleFDDI=hpSwitchPortModuleFDDI, arubaModuleJL264A=arubaModuleJL264A, hpicfMauTypeSFPplusSR=hpicfMauTypeSFPplusSR, hpSwitch8212FabricBay=hpSwitch8212FabricBay, hpSwitch8000CpuCard=hpSwitch8000CpuCard, hpicfMauTypeSFPplusDA15=hpicfMauTypeSFPplusDA15, hpSwitchJ4900C=hpSwitchJ4900C, hpAdvSwitch200=hpAdvSwitch200, hpicfMauTypeQSFPpluseSR4=hpicfMauTypeQSFPpluseSR4, hpicfObjects=hpicfObjects, hpSwitchJ8153A=hpSwitchJ8153A, hp10THub16M=hp10THub16M, hpicfServiceTunnel=hpicfServiceTunnel, nm=nm, hpicfIpLockdown=hpicfIpLockdown, hpSwitchJ9831AFanTray=hpSwitchJ9831AFanTray, hpicfSwitchPort10GigCWDM1490=hpicfSwitchPort10GigCWDM1490, hpicfMauType10GigCWDM1530=hpicfMauType10GigCWDM1530, hpSwitch224M=hpSwitch224M, arubaStack2930=arubaStack2930, hpicfPimMIB=hpicfPimMIB, hpSwitchJ9473A=hpSwitchJ9473A, hpSwitchModuleJ94yxA=hpSwitchModuleJ94yxA, hpSwitchModuleJ9088A=hpSwitchModuleJ9088A, hpSwitchJ9470A=hpSwitchJ9470A, arubaStackingModuleJL325A=arubaStackingModuleJL325A, hpAdvStkEnetSHAgentPort=hpAdvStkEnetSHAgentPort, hpicfDownload=hpicfDownload, bridge=bridge, arubaModuleJL557A=arubaModuleJL557A, hpSwitchJ9574=hpSwitchJ9574, hpSwitch5308PowerSupplyBay=hpSwitch5308PowerSupplyBay, arubaJL072A=arubaJL072A, hpSwitchModuleJ9827A=hpSwitchModuleJ9827A, hpSwitchModuleJ8765A=hpSwitchModuleJ8765A, hpSwitchModuleJ9775A=hpSwitchModuleJ9775A, hpicfSwitchPortSFPplusDA2=hpicfSwitchPortSFPplusDA2, hpicfFabric=hpicfFabric)
mibBuilder.exportSymbols("HP-ICF-OID", hpSwitchPortModuleJ4821A=hpSwitchPortModuleJ4821A, hpSwitchPortModuleJ4878A=hpSwitchPortModuleJ4878A, hpSRmoduleJ8451A=hpSRmoduleJ8451A, hpicfSecLoggingTraps=hpicfSecLoggingTraps, advStack48=advStack48, hpicfBfd=hpicfBfd, hpSwitchModuleJ9537A=hpSwitchModuleJ9537A, icfRouter650Port4E=icfRouter650Port4E, hpicfDhcpv4ServerMIB=hpicfDhcpv4ServerMIB, hpSwitchModuleJ9585=hpSwitchModuleJ9585, hpProCurve10T100THub24M=hpProCurve10T100THub24M, arubaSwitchJL261A=arubaSwitchJL261A, arubaSwitch2540=arubaSwitch2540, hpEtherSwitchPort10T=hpEtherSwitchPort10T, arubaJL074A=arubaJL074A, hpicfDhcpRelay=hpicfDhcpRelay, arubaModuleJL253A=arubaModuleJL253A, hpSwitchModuleJ9298A=hpSwitchModuleJ9298A, arubaSwitchJL355A=arubaSwitchJL355A, hp=hp, hpSwitchModuleJ94xxA=hpSwitchModuleJ94xxA, hpicfPOE=hpicfPOE, chassis=chassis, hpSwitchJ9146A=hpSwitchJ9146A, hpSwitchJ4874A=hpSwitchJ4874A, hpSwitchModuleJ9446A=hpSwitchModuleJ9446A, arubaModuleJL254A=arubaModuleJL254A, hub=hub, etherTwist48=etherTwist48, arubaFPModule=arubaFPModule, hpSwitchModuleJ9776A=hpSwitchModuleJ9776A, hpSRJ8751A=hpSRJ8751A, hpicfSwitchPort10GigBaseSR=hpicfSwitchPort10GigBaseSR, hpSRmoduleJ8458A=hpSRmoduleJ8458A, hpFabricModuleJ9093A=hpFabricModuleJ9093A, hpSwitchModuleJ8164A=hpSwitchModuleJ8164A, hpSwitch869xPortSlot=hpSwitch869xPortSlot, icfRouterSR=icfRouterSR, hpSwitchModuleJ9987A=hpSwitchModuleJ9987A, hpSwitchModuleJ9148A=hpSwitchModuleJ9148A, hpSwitchModuleJ9623A=hpSwitchModuleJ9623A, hpSwitchJ9472A=hpSwitchJ9472A, hpEntityPowerMIB=hpEntityPowerMIB, hpicfTunneledNode=hpicfTunneledNode, hpSwitchJ9832AFanTray=hpSwitchJ9832AFanTray, hpicfMauType10GigBaseT=hpicfMauType10GigBaseT, hpSwitchModuleJ4893A=hpSwitchModuleJ4893A, hpicfRpvstMIB=hpicfRpvstMIB, hpicfBridge=hpicfBridge, hpSRPowerSupply8756A=hpSRPowerSupply8756A, hpicfPrivateVlan=hpicfPrivateVlan, hpicfSwitchPort10GigCWDM1510=hpicfSwitchPort10GigCWDM1510, arubaJL075A=arubaJL075A, arubaJL087APowerSupply=arubaJL087APowerSupply, hpicfSwitchPort1000CWDM1510=hpicfSwitchPort1000CWDM1510, hpicfSrcIpMIB=hpicfSrcIpMIB, hpSRmoduleJ8452A=hpSRmoduleJ8452A, hpicfSflowMIB=hpicfSflowMIB, hpicfMauTypeQSFPplusGEN=hpicfMauTypeQSFPplusGEN, hpSwitchPortModuleVG2=hpSwitchPortModuleVG2, arubaStack2930M=arubaStack2930M, hpSwitchModuleJ9986A=hpSwitchModuleJ9986A, etherTwist24S=etherTwist24S, hpSwitchJ9737APowerSupply=hpSwitchJ9737APowerSupply, hpSwitchJ9091A=hpSwitchJ9091A, hpSwitchModuleJ9732A=hpSwitchModuleJ9732A, hpSwitch2650PortSlot=hpSwitch2650PortSlot, hp10BaseTHub24M=hp10BaseTHub24M, hpicfStackMib=hpicfStackMib, hpicfSwitchPort10GigBaseLRM=hpicfSwitchPort10GigBaseLRM, hpicfMauTypeSFPplusDA10=hpicfMauTypeSFPplusDA10, hpSwitchModuleJ9727A=hpSwitchModuleJ9727A, hpicfRateLimitTrapsPrefix=hpicfRateLimitTrapsPrefix, hpSwitch8000=hpSwitch8000, hpicfOpenFlowMIB=hpicfOpenFlowMIB, hpSwitchModuleJ4899B=hpSwitchModuleJ4899B, fiberOptic=fiberOptic, hpSwitchJ4899C=hpSwitchJ4899C, hpSwitchJ9279A=hpSwitchJ9279A, hpicfSwitchPort100GEN=hpicfSwitchPort100GEN, hpSwitchJ9981A=hpSwitchJ9981A, hpSwitchPortModule100FX4=hpSwitchPortModule100FX4, hpicfSwitchPortSFPplusDA1=hpicfSwitchPortSFPplusDA1, icfRouterPR=icfRouterPR, arubaSwitchJL323A=arubaSwitchJL323A, hpicfDot1xMIB=hpicfDot1xMIB, hpSRmoduleJ8457A=hpSRmoduleJ8457A, hpSwitch2650PPortSlot=hpSwitch2650PPortSlot, hpicfTrafficTemplateMIB=hpicfTrafficTemplateMIB, hpicfMauType1000BaseGEN=hpicfMauType1000BaseGEN, arubaModuleJL355A=arubaModuleJL355A, hpSwitchModuleJ8763A=hpSwitchModuleJ8763A, hpSwitchModuleJ4907A=hpSwitchModuleJ4907A, netSwitch200=netSwitch200, hpicfRateLimitMIB=hpicfRateLimitMIB, hpSwitchModuleJ9478A=hpSwitchModuleJ9478A, hpSwitchJ9627A=hpSwitchJ9627A, hpSwitchJ9783A=hpSwitchJ9783A, arubaModuleJL260A=arubaModuleJL260A, hpSwitchPortModuleTX2=hpSwitchPortModuleTX2, hpicfAccess=hpicfAccess, icfRouterFR=icfRouterFR, arubaJL086APowerSupply=arubaJL086APowerSupply, hpSwitchModuleJ9995A=hpSwitchModuleJ9995A, arubaSwitchJL559A=arubaSwitchJL559A, hpSwitchJ9148A=hpSwitchJ9148A, hpicfArpProtect=hpicfArpProtect, hpSwitchModuleJ9312A=hpSwitchModuleJ9312A, hpSwitchModuleJ8705A=hpSwitchModuleJ8705A, hpSwitchTrapMIB=hpSwitchTrapMIB, hpSwitchImage=hpSwitchImage, hpSwitchModuleJ4904A=hpSwitchModuleJ4904A, hpSwitchJ9623A=hpSwitchJ9623A, icfRouterLR=icfRouterLR, hpicfTransceiverMIB=hpicfTransceiverMIB, hpicfSwitchPorts=hpicfSwitchPorts, hpAdvStkSwStackExpander=hpAdvStkSwStackExpander, arubaJL072AModule=arubaJL072AModule, arubaFPModuleJL079A=arubaFPModuleJL079A, hpSwitchJ9727A=hpSwitchJ9727A, hpSwitchModuleJ9627A=hpSwitchModuleJ9627A, hpicfVrrpMIB=hpicfVrrpMIB, hpSwitchJ9800A=hpSwitchJ9800A, hpSwitchJ4813A=hpSwitchJ4813A, icfRouter255=icfRouter255, hpicfIpDhcpSnoop=hpicfIpDhcpSnoop, hpicfGppcMIB=hpicfGppcMIB, hpSwitchJ9729A=hpSwitchJ9729A, hpSwitchModuleJ9536A=hpSwitchModuleJ9536A, hpSwitchModuleJ9726A=hpSwitchModuleJ9726A, hpSwitchModuleJ9993A=hpSwitchModuleJ9993A, hpSwitchModuleJ9021A=hpSwitchModuleJ9021A, hpSwitchModuleJ9022A=hpSwitchModuleJ9022A, hpSwitchModuleJ9051A=hpSwitchModuleJ9051A, hpTunnelMIB=hpTunnelMIB, hpSwitchJ9085A=hpSwitchJ9085A, hpSwitchJ9050A=hpSwitchJ9050A, hpSwitchJ9584=hpSwitchJ9584, hpSwitchModuleJ8708A=hpSwitchModuleJ8708A, hpicfMauType10GigCWDM1570=hpicfMauType10GigCWDM1570, hpicfMauType1000BaseLXHD=hpicfMauType1000BaseLXHD, hpSwitch2626CRPortSlot=hpSwitch2626CRPortSlot, hpicfMauTypeSFPplusDA1=hpicfMauTypeSFPplusDA1, hpSwitchModuleJ4862A=hpSwitchModuleJ4862A, hpSwitchModuleJ4900C=hpSwitchModuleJ4900C, arubaSwitchJL255A=arubaSwitchJL255A, hpSwitchV2ServicesModule=hpSwitchV2ServicesModule, arubaSwitchJL256A=arubaSwitchJL256A, hpicfTcpMib=hpicfTcpMib, hpSwitch8000PowerSupplyBay=hpSwitch8000PowerSupplyBay, hpicfEnetChipSetHydra=hpicfEnetChipSetHydra, hpSwitchJ9777A=hpSwitchJ9777A, hpSwitchModuleJ9991A=hpSwitchModuleJ9991A, etherTwist12=etherTwist12, hpSwitchModuleJ9574y=hpSwitchModuleJ9574y, hpNetSwitch=hpNetSwitch, hpicfFEHub=hpicfFEHub, hpSwitch2510BPortSlot=hpSwitch2510BPortSlot, hpicfMauType1000CWDM1510=hpicfMauType1000CWDM1510, hpSwitch869xPowerSupplyBay=hpSwitch869xPowerSupplyBay, hpSwitchModuleJ9309A=hpSwitchModuleJ9309A, PYSNMP_MODULE_ID=icf, hpicfUdpFwd=hpicfUdpFwd, hpicfConnectionRateFilter=hpicfConnectionRateFilter, arubaModuleJL258A=arubaModuleJL258A, hpSwitchJ8773A=hpSwitchJ8773A, hpSwitchModuleJ9279A=hpSwitchModuleJ9279A, hpicfSnmpMIB=hpicfSnmpMIB, hpSwitchJ9145A=hpSwitchJ9145A, hpSwitchJ4900B=hpSwitchJ4900B, hpSwitchPortModuleGigLX=hpSwitchPortModuleGigLX, hpicfSwitchPort10T100TX=hpicfSwitchPort10T100TX, hpSwitchPortModuleJ4820A=hpSwitchPortModuleJ4820A, hpSwitchModuleJ92xxA=hpSwitchModuleJ92xxA, arubaJL074AModule=arubaJL074AModule, hpSwitchJ9038A=hpSwitchJ9038A, hpicfMvrpMIB=hpicfMvrpMIB, router=router, arubaSwitchJL557A=arubaSwitchJL557A, hpHwSystem=hpHwSystem, hpSwitchModuleJ92uuA=hpSwitchModuleJ92uuA, hpicfUfdMIB=hpicfUfdMIB, icfSensors=icfSensors, hpSwitchJ9298A=hpSwitchJ9298A, icfSecurityMib=icfSecurityMib, hpSwitch4865PowerSupplyBay=hpSwitch4865PowerSupplyBay, bridge1010=bridge1010, hpSwitchJ4904A=hpSwitchJ4904A, hpSwitchJ8155A=hpSwitchJ8155A, hpSwitchModuleJ87xxA=hpSwitchModuleJ87xxA, hpSwitch3324PortSlot=hpSwitch3324PortSlot, hpicfGenericVlanMIB=hpicfGenericVlanMIB, hpSwitchJ9626A=hpSwitchJ9626A, hpSwitchModuleJ4863A=hpSwitchModuleJ4863A, hpSwitchModuleJ9165A=hpSwitchModuleJ9165A, hpicfIpv6RAGuard=hpicfIpv6RAGuard, hpSwitchJ9573=hpSwitchJ9573, hpSwitch2530PortSlot=hpSwitch2530PortSlot, hpSwitchJ9776A=hpSwitchJ9776A, hpSwitchJ9029A=hpSwitchJ9029A, hpicfVgRptrTrapsPrefix=hpicfVgRptrTrapsPrefix, hpicfDevConf=hpicfDevConf, hpSwitchModuleJ9549A=hpSwitchModuleJ9549A, hpicfGenRptrMib=hpicfGenRptrMib, hpSwitchModuleJ9548A=hpSwitchModuleJ9548A, hpicfMstpExtnMIB=hpicfMstpExtnMIB, hpicfSwitchPort100FX=hpicfSwitchPort100FX, hpicfMauType1000BaseLXFD=hpicfMauType1000BaseLXFD, arubaFPModuleJL078A=arubaFPModuleJL078A, hpSwitchJ8772A=hpSwitchJ8772A, arubaModuleJL357A=arubaModuleJL357A, hpicfSwitchPort1000SX=hpicfSwitchPort1000SX, hpSwitchJ9979A=hpSwitchJ9979A, hpSwitchModuleJ9535A=hpSwitchModuleJ9535A, hpicfChassis=hpicfChassis, hpicfSwitchPortSFPplusDA3=hpicfSwitchPortSFPplusDA3, hpSwitchModuleJ90xxA=hpSwitchModuleJ90xxA, hpicfLinktest=hpicfLinktest, hpSwitchModuleJ9587=hpSwitchModuleJ9587, hpSwitchJ9984A=hpSwitchJ9984A, advStack12=advStack12, hpicfJobSchedulerMIB=hpicfJobSchedulerMIB, hpicfMauType10GigBaseTLH=hpicfMauType10GigBaseTLH, hpAdvStkEnetSHIntPort=hpAdvStkEnetSHIntPort, thinLAN=thinLAN, hpSwitch2524PortSlot=hpSwitch2524PortSlot, hpSwitchJ4887A=hpSwitchJ4887A, hpicfOobmMIB=hpicfOobmMIB, hpSwitch2626CPortSlot=hpSwitch2626CPortSlot, hpSwitchA6716A=hpSwitchA6716A, hpSwitchJ9280A=hpSwitchJ9280A, hp10BaseTHubPort=hp10BaseTHubPort, hpSwitchModuleJ9586y=hpSwitchModuleJ9586y, hpSwitchJ9801A=hpSwitchJ9801A, hpAdvStkEnetSH12R=hpAdvStkEnetSH12R, arubaSwitchJL356A=arubaSwitchJL356A, icfSecurity=icfSecurity, hpicfDot1qIsolatedPorts=hpicfDot1qIsolatedPorts, hpicfSwitchPort10GigCWDM1550=hpicfSwitchPort10GigCWDM1550, hpSwitchModuleJ94xyA=hpSwitchModuleJ94xyA, advStackU16=advStackU16, hpAdvSwitch2000=hpAdvSwitch2000, hpSwitch2520PortSlot=hpSwitch2520PortSlot, hpSwitchModuleJ9307A=hpSwitchModuleJ9307A, hpSwitchModuleJ8161A=hpSwitchModuleJ8161A, hpSwitch2620PortSlot=hpSwitch2620PortSlot, hpSwitchJ9450A=hpSwitchJ9450A, hpSwitchModuleJ9853A=hpSwitchModuleJ9853A, hpicfBasicMib=hpicfBasicMib, hpSwitchJ9775A=hpSwitchJ9775A, hpicfMauType10GigBaseSTK=hpicfMauType10GigBaseSTK, hpicfSwitchPort1000CWDM1610=hpicfSwitchPort1000CWDM1610, hpSwitchModuleJ9730A=hpSwitchModuleJ9730A, hpSwitchJ9080A=hpSwitchJ9080A)
mibBuilder.exportSymbols("HP-ICF-OID", hpicfMauType10GigCWDM1590=hpicfMauType10GigCWDM1590, hpicfWAN=hpicfWAN, hpicfMauType10GigBaseSR=hpicfMauType10GigBaseSR, hpEntityMIB=hpEntityMIB, hpAdvStkSwStackExpSlot=hpAdvStkSwStackExpSlot, hpicfDebugLog=hpicfDebugLog, hpicfAMPServerMIB=hpicfAMPServerMIB, hpSwitchModuleJ9772A=hpSwitchModuleJ9772A, hpSwitchModuleJ8776A=hpSwitchModuleJ8776A, hpSwitchModuleJ9989A=hpSwitchModuleJ9989A, hpicfSwitchPort1000CWDM1490=hpicfSwitchPort1000CWDM1490, hpAdvStkEnetSHIntSeg=hpAdvStkEnetSHIntSeg, hpSwitchJ9028A=hpSwitchJ9028A, hpEtherSwitch=hpEtherSwitch, hpSwitch2615PortSlot=hpSwitch2615PortSlot, hpSwitchJL070A=hpSwitchJL070A, hpSRmoduleJ8461A=hpSRmoduleJ8461A, hpicfFaultFinderMib=hpicfFaultFinderMib, hpicfFaultFinder=hpicfFaultFinder, hpicfSwitchPort10GigBaseT=hpicfSwitchPort10GigBaseT, hpSwitch2400=hpSwitch2400, arubaModuleJL323A=arubaModuleJL323A, arubaJL077A=arubaJL077A, icfVgInterface=icfVgInterface, hpicfSwitchPort10GigBaseSTK=hpicfSwitchPort10GigBaseSTK, icfTemperatureSensor=icfTemperatureSensor, hpSwitchModuleA6717A=hpSwitchModuleA6717A, hpSwitchModuleJ9626A=hpSwitchModuleJ9626A, arubaSwitchJL254A=arubaSwitchJL254A, arubaSwitchJL253A=arubaSwitchJL253A, arubaModuleJL558A=arubaModuleJL558A, hpSwitchJ4815A=hpSwitchJ4815A, hpicfNotifications=hpicfNotifications, hpSwitchModuleJ9783A=hpSwitchModuleJ9783A, icf=icf, hpSwitchA6713A=hpSwitchA6713A, hpicf8023RptrTraps=hpicf8023RptrTraps, hpSwitchModuleJL070A=hpSwitchModuleJL070A, hpSwitch2920StackingSlot=hpSwitch2920StackingSlot, hpSwitchJ9782A=hpSwitchJ9782A, hpAdvStkEnetSHExtPort=hpAdvStkEnetSHExtPort, hpSwitchJ9855A=hpSwitchJ9855A, hpSwitchJ9565A=hpSwitchJ9565A, hpSwitchJ9263A=hpSwitchJ9263A, hpSwitchJ9781A=hpSwitchJ9781A, arubaSwitchJL258A=arubaSwitchJL258A, arubaModuleJL259A=arubaModuleJL259A, hpEtherSwitchPort100F=hpEtherSwitchPort100F, hpSwitchModuleJ9087A=hpSwitchModuleJ9087A, hpSwitchModuleJ9534A=hpSwitchModuleJ9534A, hpSwitchModuleJ92yyA=hpSwitchModuleJ92yyA, hpicfSwitchPort10GigBaseTLH=hpicfSwitchPort10GigBaseTLH, hpSwitchModuleJ9085A=hpSwitchModuleJ9085A, hpicfUdldMIB=hpicfUdldMIB, hpSwitch2650CRPortSlot=hpSwitch2650CRPortSlot, hpicfMauType1000BaseSXHD=hpicfMauType1000BaseSXHD, hpicfMauType10GigBaseESP=hpicfMauType10GigBaseESP, hpSwitchJ9625A=hpSwitchJ9625A, hpicfSwitchPort10GigBaseCX4=hpicfSwitchPort10GigBaseCX4, hpSwitch2626PPortSlot=hpSwitch2626PPortSlot, hpSwitchModuleJ90zzA=hpSwitchModuleJ90zzA, hpWANModules=hpWANModules, chassisAgents=chassisAgents, eswitch=eswitch, hpicfSwitchPort1000Stk=hpicfSwitchPort1000Stk, hpicfSwitchPort10GigBaseLR=hpicfSwitchPort10GigBaseLR, hpEs2=hpEs2, hpicfCommonTrapsPrefix=hpicfCommonTrapsPrefix, hpAdvStkSwStackTopMgmt=hpAdvStkSwStackTopMgmt, hpSwitchModuleJ9550A=hpSwitchModuleJ9550A, hpicfMauType1000BaseSXFD=hpicfMauType1000BaseSXFD, hpSwitchModuleJ4905A=hpSwitchModuleJ4905A, hpSwitchExtServicesModule=hpSwitchExtServicesModule, hpicfScriptMIB=hpicfScriptMIB, hpicfMauType1000BaseEspG=hpicfMauType1000BaseEspG, hpSwitchModuleJ87yyA=hpSwitchModuleJ87yyA, icfHub=icfHub, hpicfAutorun=hpicfAutorun, icfRouter650Port4T=icfRouter650Port4T, hpicfL3MacConfigMIB=hpicfL3MacConfigMIB, repeaterAgent=repeaterAgent, hpicfGppcv2MIB=hpicfGppcv2MIB, hpSRmoduleJ8465A=hpSRmoduleJ8465A, hpicfVg=hpicfVg, hpicfMauType10GigCWDM1550=hpicfMauType10GigCWDM1550, hpSwitchModuleJ94yyA=hpSwitchModuleJ94yyA, hpSwitchJ9830APowerSupply=hpSwitchJ9830APowerSupply, hpicfSvcsAppMIB=hpicfSvcsAppMIB, hpSwitchModuleJ9731A=hpSwitchModuleJ9731A, hpSSMModuleJ8784A=hpSSMModuleJ8784A, hpSwitch2520GPortSlot=hpSwitch2520GPortSlot, hpicfSwitchPort10GigBaseTSH=hpicfSwitchPort10GigBaseTSH, hpSwitchJ9624A=hpSwitchJ9624A, icfRouter650Port4S=icfRouter650Port4S, hpSwitchModuleJ8435A=hpSwitchModuleJ8435A, hpAdvStkEnetSHSwitch=hpAdvStkEnetSHSwitch, hpSwitchModuleJ9637A=hpSwitchModuleJ9637A, hpSwitchModuleJ9778A=hpSwitchModuleJ9778A, hpAdvSwitch2000B=hpAdvSwitch2000B, hp100BaseTHubAgentPort=hp100BaseTHubAgentPort, hpProCurve10T100THub12M=hpProCurve10T100THub12M, hpicfMinKeyMIB=hpicfMinKeyMIB, hpicfSwitchPortSFPplusDA20=hpicfSwitchPortSFPplusDA20, hpAdvSwitch224VG=hpAdvSwitch224VG, hpSwitchModuleJ4902A=hpSwitchModuleJ4902A, hpSwitchModuleJ92vvA=hpSwitchModuleJ92vvA, icfDot12Draft=icfDot12Draft, hpSwitchModuleJ4812A=hpSwitchModuleJ4812A, hpSwitchJ9779A=hpSwitchJ9779A, hpSwitchJ9834A=hpSwitchJ9834A, hpSwitchJ8433A=hpSwitchJ8433A, icfRouterBR=icfRouterBR, hpicfMauType100BaseBXU=hpicfMauType100BaseBXU, hpicfUSBPortMIB=hpicfUSBPortMIB, hpSwitchJ9739APowerSupply=hpSwitchJ9739APowerSupply, hpicfEnetChipSets=hpicfEnetChipSets, hpSwitch212M=hpSwitch212M, hpSwitchJ9585=hpSwitchJ9585, hpAdvStkEnetSH24T=hpAdvStkEnetSH24T, hpSwitchJ9829APowerSupply=hpSwitchJ9829APowerSupply, hpicfGenRptrTraps=hpicfGenRptrTraps, hpicfETwistBridgeAgentsMib=hpicfETwistBridgeAgentsMib, hpicfMauTypeSFPplusDA7=hpicfMauTypeSFPplusDA7, hpSwitchModuleJ90yyA=hpSwitchModuleJ90yyA, arubaSwitch2930=arubaSwitch2930, hpicfHubPorts=hpicfHubPorts, hpSwitchModuleJ9154A=hpSwitchModuleJ9154A, hpSwitchModuleJ4862B=hpSwitchModuleJ4862B, hpSwitchModuleJ9146A=hpSwitchModuleJ9146A, hpicfDSnoopV6=hpicfDSnoopV6, hpSwitchModuleJ8702A=hpSwitchModuleJ8702A, hpicfTR069MIB=hpicfTR069MIB, hpStack2920=hpStack2920, hpicfEnetChipSetPentagon=hpicfEnetChipSetPentagon, hpicfChassisMib=hpicfChassisMib, hpicfMauType1000BaseBXD=hpicfMauType1000BaseBXD, arubaModuleJL321A=arubaModuleJL321A, hpicfMauTypeSFPplusLRM=hpicfMauTypeSFPplusLRM, hpSwitchJ4906A=hpSwitchJ4906A, hpSwitchJ8474A=hpSwitchJ8474A, hpSwitchJ9728A=hpSwitchJ9728A, hpSwitchAdvServicesModule=hpSwitchAdvServicesModule, hpicfSwitchPort1000GEN=hpicfSwitchPort1000GEN, hpSwitchModuleJ9780A=hpSwitchModuleJ9780A, hpicfDhcpv6Relay=hpicfDhcpv6Relay, hpSwitchModuleJ9155A=hpSwitchModuleJ9155A, hpConfig=hpConfig, hpicfByodMIB=hpicfByodMIB, hpicfSwitchPort10GigCWDM1611=hpicfSwitchPort10GigCWDM1611, hpSwitchModuleJ9625A=hpSwitchModuleJ9625A, hpSwitchJ9021A=hpSwitchJ9021A, hpSwitchModuleJ4900A=hpSwitchModuleJ4900A, hpSwitchJ9049A=hpSwitchJ9049A, arubaSwitchJL320A=arubaSwitchJL320A, hpSwitchJ8680A=hpSwitchJ8680A, hpSwitchJ4899B=hpSwitchJ4899B, hpSwitch2910PortSlot=hpSwitch2910PortSlot, hpicfSwitch=hpicfSwitch, hpicfSwitchPort1000ESP=hpicfSwitchPort1000ESP, hpicfDosFilterMib=hpicfDosFilterMib, hpicfMauType10GigCWDM1510=hpicfMauType10GigCWDM1510, hpSwitchJ9449A=hpSwitchJ9449A, hpicfCommonSecurity=hpicfCommonSecurity, hpSwitchJ9982A=hpSwitchJ9982A, hpStackVSF5400R=hpStackVSF5400R, hpicfLoadBalanceMod=hpicfLoadBalanceMod, hpicfSecLoggingTrapsPrefix=hpicfSecLoggingTrapsPrefix, hpAdvStkEnetSHAgentSlot=hpAdvStkEnetSHAgentSlot, hpSwitchModuleJ9020A=hpSwitchModuleJ9020A, arubaModuleJL320A=arubaModuleJL320A, hpicfSwitchPort1000CWDM1590=hpicfSwitchPort1000CWDM1590, hpSwitchModuleJ92ttA=hpSwitchModuleJ92ttA, hpSwitch2610PPortSlot=hpSwitch2610PPortSlot, hpSwitchJ9086A=hpSwitchJ9086A, icfRouterTR=icfRouterTR, hpSwitchPortModuleGigStk=hpSwitchPortModuleGigStk, advStackVg12=advStackVg12, hpSwitchJ9726A=hpSwitchJ9726A, hpOpSystem=hpOpSystem, hpSwitchModuleJ9729A=hpSwitchModuleJ9729A, icfVgAgent2=icfVgAgent2, hpSwitchJ9780A=hpSwitchJ9780A, hpSRJ8753A=hpSRJ8753A, hpSwitchStatistics=hpSwitchStatistics, hpicfMauType1000CWDM1530=hpicfMauType1000CWDM1530, hpSwitchJ8692A=hpSwitchJ8692A, hpSwitchModuleJ9782A=hpSwitchModuleJ9782A, hpSwitchModuleJ9147A=hpSwitchModuleJ9147A, hp10BaseTHubSeg=hp10BaseTHubSeg, hpSwitchModuleJ9988A=hpSwitchModuleJ9988A, hpSwitchErrorMsgMIB=hpSwitchErrorMsgMIB, hpSwitchJ9020A=hpSwitchJ9020A, hpSwitchPortModuleGigSX=hpSwitchPortModuleGigSX, hpSwitchModuleJ9577A=hpSwitchModuleJ9577A, hpSwitchJ9137A=hpSwitchJ9137A, hpSwitchJ9803A=hpSwitchJ9803A, hpSwitchModuleJ8694A=hpSwitchModuleJ8694A, hpicfSwitchPort10GigCWDM1570=hpicfSwitchPort10GigCWDM1570, hpSwitchModuleJ9584=hpSwitchModuleJ9584, hpicfETwistHubAgentsMib=hpicfETwistHubAgentsMib, hpSwitchJ9088A=hpSwitchJ9088A, hpSwitchJ9310A=hpSwitchJ9310A, hpicfMauType10GigBaseGEN=hpicfMauType10GigBaseGEN, hpSwitch6308=hpSwitch6308, hpSwitchJ8133A=hpSwitchJ8133A, hpSwitchJ8770A=hpSwitchJ8770A, arubaModuleJL263A=arubaModuleJL263A, hpicfSwitchPort100BXU=hpicfSwitchPort100BXU, hpSwitchJ9980A=hpSwitchJ9980A, hpicfSwitchPort10GigBaseGEN=hpicfSwitchPort10GigBaseGEN, hpicfMauType10GigBaseLR=hpicfMauType10GigBaseLR, arubaJL088AFanTray=arubaJL088AFanTray, arubaModuleJL324A=arubaModuleJL324A, hpicfSwitchPort10GigBaseER=hpicfSwitchPort10GigBaseER, hpicfSwitchPortSFPplusLR=hpicfSwitchPortSFPplusLR, arubaSwitchJL321A=arubaSwitchJL321A, hpSwitchJ8698A=hpSwitchJ8698A, hpSwitchProliant=hpSwitchProliant, hpSwitch2915PortSlot=hpSwitch2915PortSlot, hpSwitchModuleJ4852A=hpSwitchModuleJ4852A, hpSwitchModuleJ9576x=hpSwitchModuleJ9576x, hpSwitchModuleJ4900B=hpSwitchModuleJ4900B, hpSwitchPortModule10FL4=hpSwitchPortModule10FL4, hpicfGenericRepeater=hpicfGenericRepeater, hpSwitchModuleJ4906A=hpSwitchModuleJ4906A, hpSRmoduleJ8472A=hpSRmoduleJ8472A, hpSwitch2610PortSlot=hpSwitch2610PortSlot, hpSwitchModuleJ9576y=hpSwitchModuleJ9576y, hpSwitchModuleJ4892A=hpSwitchModuleJ4892A, hpicfPim6MIB=hpicfPim6MIB, hpSwitchModuleJ9149A=hpSwitchModuleJ9149A, hpAdvStkEnetSHStack=hpAdvStkEnetSHStack, hpSwitchModuleJ4813A=hpSwitchModuleJ4813A, hpSRmoduleJ8464A=hpSRmoduleJ8464A, arubaModuleJL356A=arubaModuleJL356A, arubaSwitchJL322A=arubaSwitchJL322A, hpSwitchJ9778A=hpSwitchJ9778A, hpSystem=hpSystem, hpSwitch8000PortSlot=hpSwitch8000PortSlot, hpicfSwitchPortSFPplusDA10=hpicfSwitchPortSFPplusDA10, hpicfDhcpClient=hpicfDhcpClient, arubaJL084AStackingModule=arubaJL084AStackingModule, hpAdvStkEnetSH24R=hpAdvStkEnetSH24R, icfCards=icfCards, hpSwitchJ4902A=hpSwitchJ4902A, hpSwitchModuleJ4908A=hpSwitchModuleJ4908A, hpSwitchModuleJ9145A=hpSwitchModuleJ9145A, hpSRmoduleJ8456A=hpSRmoduleJ8456A, hpSwitch9308=hpSwitch9308, hpSwitchModuleJ9089A=hpSwitchModuleJ9089A, icfRouterER=icfRouterER, hpicfSwitchPort5GigBaseT=hpicfSwitchPort5GigBaseT, hpSwitchPortModuleGigT=hpSwitchPortModuleGigT, hpicfMauType1000BaseStkFD=hpicfMauType1000BaseStkFD)
mibBuilder.exportSymbols("HP-ICF-OID", icfConfig=icfConfig, hpicfMauType100BaseBXD=hpicfMauType100BaseBXD, hpicfInstMIB=hpicfInstMIB, hpSwitchModuleJ8433A=hpSwitchModuleJ8433A, hpicf8023RptrMib=hpicf8023RptrMib, hpSwitchModuleJ9137A=hpSwitchModuleJ9137A, aruba3810=aruba3810, hpSwitch5400CpuCardBay=hpSwitch5400CpuCardBay, hpicfSwitchPortSFPplusLRM=hpicfSwitchPortSFPplusLRM, hpicfSecurityDevice=hpicfSecurityDevice, hpicfPsMIB=hpicfPsMIB, hpicfSwitchPort100BXD=hpicfSwitchPort100BXD, hpSwitch6208=hpSwitch6208, arubaSwitchJL324A=arubaSwitchJL324A, hpSwitchModuleJ9003A=hpSwitchModuleJ9003A, hpicfCommon=hpicfCommon, hpSwitchModuleJ9781A=hpSwitchModuleJ9781A, hpSRJ8752A=hpSRJ8752A, arubaModuleJL261A=arubaModuleJL261A, hpicfUrpfMIB=hpicfUrpfMIB, icfVgAgent=icfVgAgent, hpSwitchJ9445A=hpSwitchJ9445A, hpicfLinkTestMib=hpicfLinkTestMib, hpSwitch2626PortSlot=hpSwitch2626PortSlot, hpSwitchJ9805APowerSupply=hpSwitchJ9805APowerSupply, hpSwitchModuleJ93aaA=hpSwitchModuleJ93aaA, hpicfVirtualNetwork=hpicfVirtualNetwork, hpSRmoduleJ8759A=hpSRmoduleJ8759A, hpSwitchModuleJ9308A=hpSwitchModuleJ9308A, hpicfLayer3VlanConfigMIB=hpicfLayer3VlanConfigMIB, hpSwitchJ9311A=hpSwitchJ9311A, hpSwitchModuleJ9138A=hpSwitchModuleJ9138A, advStackU8=advStackU8, hpicfSlots=hpicfSlots, hpSwitchJ9087A=hpSwitchJ9087A, hpicfSwitchPort10GigCWDM1590=hpicfSwitchPort10GigCWDM1590, arubaSwitchJL259A=arubaSwitchJL259A, hpicfCoreDumpMIB=hpicfCoreDumpMIB, hpicfIpRouting=hpicfIpRouting, hpicfStack=hpicfStack, hpicfSwitchPort1000CWDM1530=hpicfSwitchPort1000CWDM1530, hpicfMauType100BaseGEN=hpicfMauType100BaseGEN, hpSwitchJ4850A=hpSwitchJ4850A, hpSwitchModuleJ8707A=hpSwitchModuleJ8707A, hpicfSwitchPortSFPplusDA5=hpicfSwitchPortSFPplusDA5, hpSwitchModuleJ9033A=hpSwitchModuleJ9033A, hpicfMldMIB=hpicfMldMIB, hpicfVsfVCMIB=hpicfVsfVCMIB, hpicfStacks=hpicfStacks, icfRouter230=icfRouter230, hpicfMauType1000BaseEspPCS=hpicfMauType1000BaseEspPCS, hpSwitchJ9983A=hpSwitchJ9983A, hpVLAN=hpVLAN, hpAdvStkEnetSHAgent=hpAdvStkEnetSHAgent, hpicfMauType10GigBaseER=hpicfMauType10GigBaseER, arubaJL071AModule=arubaJL071AModule, hpicfBasic=hpicfBasic, hpicfGenRptrTrapsPrefix=hpicfGenRptrTrapsPrefix, hpSwitch2510GPortSlot=hpSwitch2510GPortSlot, hp10BaseTHubAgentPort=hp10BaseTHubAgentPort, hpSwitchJ9451A=hpSwitchJ9451A, hpSwitchJ9562A=hpSwitchJ9562A, hpSwitchModuleJ9019A=hpSwitchModuleJ9019A, hpSRmoduleJ8454A=hpSRmoduleJ8454A, hpSwitchJ9079A=hpSwitchJ9079A, hpicfDldpMIB=hpicfDldpMIB, arubaJL076A=arubaJL076A, hpicfDcbxMIB=hpicfDcbxMIB, hpicf8023RptrTrapsPrefix=hpicf8023RptrTrapsPrefix, icfRouter650=icfRouter650, hpSwitchJ9576=hpSwitchJ9576, hpSwitchModuleJ8726A=hpSwitchModuleJ8726A, hp10BaseTHub12M=hp10BaseTHub12M, hpicfAdmin=hpicfAdmin, icfEsSwitch=icfEsSwitch, hpSwitchModuleJ9586x=hpSwitchModuleJ9586x, hpSwitchAuthenticationMIB=hpSwitchAuthenticationMIB, advStackVg6=advStackVg6, hpicfMauTypeSFPplusDA2=hpicfMauTypeSFPplusDA2, hpSwitchModuleJ9777A=hpSwitchModuleJ9777A, hpSwitch498358_B21=hpSwitch498358_B21, hpicfSwitchPortSFPplusDA7=hpicfSwitchPortSFPplusDA7, icfCommon=icfCommon, hpSwitchModuleJ9052A=hpSwitchModuleJ9052A, hpSwitchJ9264A=hpSwitchJ9264A, hpicfArpThrottle=hpicfArpThrottle, hpicfMauTypeQSFPplusBIDI=hpicfMauTypeQSFPplusBIDI, hpicfProviderBridge=hpicfProviderBridge, hpicfMauType10GigCWDM1610=hpicfMauType10GigCWDM1610, hpSwitchJ4851A=hpSwitchJ4851A, icfPowerSupplySensor=icfPowerSupplySensor, hpSwitchJ9089A=hpSwitchJ9089A, hp100BaseTHubSeg=hp100BaseTHubSeg, hpicfSwitchPort1000BXD=hpicfSwitchPort1000BXD, hpSwitchJ9581PowerSupply=hpSwitchJ9581PowerSupply, hpicfChainMib=hpicfChainMib, arubaJL085APowerSupply=arubaJL085APowerSupply, hpSwitchJ9065A=hpSwitchJ9065A, hpManagementModuleJ9092A=hpManagementModuleJ9092A, hpSwitchModuleJ9588y=hpSwitchModuleJ9588y, icfRouter650Port100VG=icfRouter650Port100VG, hpicfMauType1000CWDM1590=hpicfMauType1000CWDM1590, hpSwitch2510PortSlot=hpSwitch2510PortSlot, hpicfMauType10GigCWDM1490=hpicfMauType10GigCWDM1490, hpAdvStkEnetSHIOSlot=hpAdvStkEnetSHIOSlot, hpicfFtrCo=hpicfFtrCo, hpicfVgRptrTraps=hpicfVgRptrTraps, hpSwitchModuleJ9733A=hpSwitchModuleJ9733A, hpicfMauType1000CWDM1490=hpicfMauType1000CWDM1490, hpSwitchModuleJ4899C=hpSwitchModuleJ4899C, hpSwitch8000CpuSlot=hpSwitch8000CpuSlot, hpSwitch2600n8PPortSlot=hpSwitch2600n8PPortSlot, arubaFPModuleJL080A=arubaFPModuleJL080A, hpSwitchModuleJ9856A=hpSwitchModuleJ9856A, hpicfNtpMIB=hpicfNtpMIB, hpicfMadMIB=hpicfMadMIB, advStack24=advStack24, hpicfMauTypeSFPplusDA3=hpicfMauTypeSFPplusDA3, hpicfRateLimitTraps=hpicfRateLimitTraps, hpSwitchPortModuleJ4820B=hpSwitchPortModuleJ4820B, hpSwitchJ9265A=hpSwitchJ9265A, hpSwitchJ9851A=hpSwitchJ9851A, hpSwitchJ9586=hpSwitchJ9586, hpSwitchModuleJ9575=hpSwitchModuleJ9575, arubaSwitchJL558A=arubaSwitchJL558A, hpSwitch9304=hpSwitch9304, icfVgRepeaterMib=icfVgRepeaterMib, hpicfChain=hpicfChain, hpSwitchModuleJ93bbA=hpSwitchModuleJ93bbA, hpicfVrrpv3MIB=hpicfVrrpv3MIB, hpicfMauType10GigBaseCX4=hpicfMauType10GigBaseCX4, hpicfAdvStk8023AgentsMib=hpicfAdvStk8023AgentsMib, hpSwitchJ8130A=hpSwitchJ8130A, hpSwitchPortModuleATM=hpSwitchPortModuleATM, netSwitch100=netSwitch100, hpicfConfig=hpicfConfig, hpSwitchModuleJ4864A=hpSwitchModuleJ4864A, arubaSwitchJL354A=arubaSwitchJL354A, icfRouter650PortFDDI=icfRouter650PortFDDI, hpSwitch2810PortSlot=hpSwitch2810PortSlot, hpicfMauType1000CWDM1610=hpicfMauType1000CWDM1610, hpSwitchModuleJ8165A=hpSwitchModuleJ8165A, hpicfIpSla=hpicfIpSla, hpAdvSwitch224T=hpAdvSwitch224T, hpicfRipng=hpicfRipng, arubaModuleJL255A=arubaModuleJL255A, hpicfAdvStkVGAgentsMib=hpicfAdvStkVGAgentsMib, hpSwitchJ9853A=hpSwitchJ9853A, hpSwitch=hpSwitch, eswitch2=eswitch2, hpicfSwitchPortSFPplusSR=hpicfSwitchPortSFPplusSR, hpSwitchJ9477A=hpSwitchJ9477A, hpSwitchJ9833A=hpSwitchJ9833A, icfFanSensor=icfFanSensor, arubaModuleJL559A=arubaModuleJL559A, hpSwitchModuleJ9855A=hpSwitchModuleJ9855A, hpAdvSwitch208T=hpAdvSwitch208T, hpSwitchJ9587=hpSwitchJ9587, hpSwitchJ4865A=hpSwitchJ4865A)
