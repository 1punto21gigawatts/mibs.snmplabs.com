#
# PySNMP MIB module CISCO-DIAMETER-CC-APPL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DIAMETER-CC-APPL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, ObjectIdentity, MibIdentifier, Bits, ModuleIdentity, Integer32, NotificationType, TimeTicks, Gauge32, iso, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibIdentifier", "Bits", "ModuleIdentity", "Integer32", "NotificationType", "TimeTicks", "Gauge32", "iso", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
StorageType, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "DisplayString", "TextualConvention")
ciscoDiameterCCAMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 575))
ciscoDiameterCCAMIB.setRevisions(('2006-08-23 00:01',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDiameterCCAMIB.setRevisionsDescriptions(('Initial version of this module.',))
if mibBuilder.loadTexts: ciscoDiameterCCAMIB.setLastUpdated('200608230001Z')
if mibBuilder.loadTexts: ciscoDiameterCCAMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDiameterCCAMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-aaa@cisco.com')
if mibBuilder.loadTexts: ciscoDiameterCCAMIB.setDescription("The MIB module for entities implementing the Diameter Credit Control Application, RFC 4006. Initial Cisco'ized version of the IETF draft draft-zorn-dime-diameter-cc-app-mib-00.txt.")
ciscoDiameterCCAMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 0))
ciscoDiameterCCAMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 1))
ciscoDiameterCCAMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 2))
cdccaHostCfgs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1))
cdccaPeerCfgs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2))
cdccaPeerStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3))
cdccaHostId = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaHostId.setStatus('current')
if mibBuilder.loadTexts: cdccaHostId.setDescription("The implementation identification string for the Diameter software in use on the system, for example; 'diameterd'")
cdccaHostIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 2), )
if mibBuilder.loadTexts: cdccaHostIpAddrTable.setStatus('current')
if mibBuilder.loadTexts: cdccaHostIpAddrTable.setDescription("The table listing the Diameter Credit Control host's IP Addresses.")
cdccaHostIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-DIAMETER-CC-APPL-MIB", "cdccaHostIpAddrIndex"))
if mibBuilder.loadTexts: cdccaHostIpAddrEntry.setStatus('current')
if mibBuilder.loadTexts: cdccaHostIpAddrEntry.setDescription('A row entry representing a Diameter Credit Control host IP Address.')
cdccaHostIpAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cdccaHostIpAddrIndex.setStatus('current')
if mibBuilder.loadTexts: cdccaHostIpAddrIndex.setDescription('A number uniquely identifying the number of IP Addresses supported by this Diameter Credit Control host.')
cdccaHostIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaHostIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cdccaHostIpAddrType.setDescription('The type of internet address stored in cdccaHostIpAddress.')
cdccaHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 1, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaHostIpAddress.setStatus('current')
if mibBuilder.loadTexts: cdccaHostIpAddress.setDescription('The IP-Address of the host, which is of the type specified in cdccaHostIpAddrType.')
cdccaPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1), )
if mibBuilder.loadTexts: cdccaPeerTable.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerTable.setDescription('The table listing information regarding the discovered or configured Diameter Credit Control peers.')
cdccaPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerIndex"))
if mibBuilder.loadTexts: cdccaPeerEntry.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerEntry.setDescription('A row entry representing a discovered or configured Diameter Credit Control peer.')
cdccaPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cdccaPeerIndex.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerIndex.setDescription('An index that uniquely identifies a dcca peer. This index is assigned arbitrarily by the SNMP engine and is not saved over reloads.')
cdccaPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerId.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerId.setDescription('The server identifier for the Diameter Credit Control peer. It has to be unique and not an empty string.')
cdccaPeerFirmwareRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerFirmwareRevision.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerFirmwareRevision.setDescription('Firmware revision of peer. If no firmware revision, the revision of the Diameter Credit Control software module may be reported instead.')
cdccaPeerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerStorageType.setReference('Textual Conventions for SMIv2, Section 2.')
if mibBuilder.loadTexts: cdccaPeerStorageType.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStorageType.setDescription('The storage type for this conceptual row. None of the columnar objects is writable when the conceptual row is permanent.')
cdccaPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerRowStatus.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerRowStatus.setDescription("The status of this conceptual row. To create a row in this table, a manager must set this object to either createAndGo(4) or createAndWait(5). Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the cdccaPeerRowStatus column is 'notReady'. In particular, a newly created row cannot be made active until the corresponding cdccaPeerId has been set. cdccaPeerId may not be modified while the value of this object is active(1): An attempt to set these objects while the value of cdccaPeerRowStatus is active(1) will result in an inconsistentValue error. Entries in this table with cdccaPeerRowStatus equal to active(1) remain in the table until destroyed. Entries in this table with cdccaPeerRowStatus equal to values other than active(1) will be destroyed after timeout (5 minutes). If a cdccaPeerId being created via SNMP already exists in another active cdccaPeerEntry, then a newly created row cannot be made active until the original row with the with the cdccaPeerId value is destroyed. Upon reload, cdccaPeerIndex values may be changed.")
cdccaPeerVendorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2), )
if mibBuilder.loadTexts: cdccaPeerVendorTable.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorTable.setDescription('The table listing the Vendor IDs supported by the peer.')
cdccaPeerVendorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerIndex"), (0, "CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerVendorIndex"))
if mibBuilder.loadTexts: cdccaPeerVendorEntry.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorEntry.setDescription('A row entry representing a Vendor ID supported by the peer.')
cdccaPeerVendorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cdccaPeerVendorIndex.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorIndex.setDescription('A number uniquely identifying the Vendor ID supported by the peer.')
cdccaPeerVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerVendorId.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorId.setDescription('The active Vendor IDs used for peer connections.')
cdccaPeerVendorStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerVendorStorageType.setReference('Textual Conventions for SMIv2, Section 2.')
if mibBuilder.loadTexts: cdccaPeerVendorStorageType.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorStorageType.setDescription('The storage type for this conceptual row. An agent implementing the table must allow adding cdccaPeerVendorId into the table. None of the columnar objects is writable when the conceptual row is permanent.')
cdccaPeerVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdccaPeerVendorRowStatus.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerVendorRowStatus.setDescription("The status of this conceptual row. To create a row in this table, a manager must set this object to either createAndGo(4) or createAndWait(5). Until instances of all corresponding columns are appropriately configured, the value of the corresponding instance of the cdccaPeerVendorRowStatus column is 'notReady'. In particular, a newly created row cannot be made active until the corresponding cdccaPeerVendorId has been set. cdccaPeerVendorId may not be modified while the value of this object is active(1): An attempt to set these objects while the value of cdccaPeerVendorRowStatus is active(1) will result in an inconsistentValue error. Entries in this table with cdccaPeerVendorRowStatus equal to active(1) remain in the table until destroyed. Entries in this table with cdccaPeerVendorRowStatus equal to values other than active(1) will be destroyed after timeout (5 minutes). If the peer vendor id being created via SNMP already exists in another active cdccaPeerVendorEntry, then a newly created row cannot be made active until the original row with the peer vendor id value is destroyed. Upon reload, cdccaPeerVendorIndex values may be changed.")
cdccaPeerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1), )
if mibBuilder.loadTexts: cdccaPeerStatsTable.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsTable.setDescription('The table listing the Diameter Credit Control Peer Statistics.')
cdccaPeerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerIndex"))
if mibBuilder.loadTexts: cdccaPeerStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsEntry.setDescription('A row entry representing a Diameter Credit Control Peer.')
cdccaPeerStatsCCRIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 1), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCRIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCRIn.setDescription('Number of Diameter Credit-Control-Request (CCR) messages received, per peer.')
cdccaPeerStatsCCROut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCROut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCROut.setDescription('Number of Diameter Credit-Control-Request (CCR) messages sent, per peer.')
cdccaPeerStatsCCRDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCRDropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCRDropped.setDescription('Number of Diameter Credit-Control-Request (CCR) messages dropped, per peer.')
cdccaPeerStatsCCAIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCAIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCAIn.setDescription('Number of Diameter Credit-Control-Answer (CCA) messages received, per peer.')
cdccaPeerStatsCCAOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCAOut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCAOut.setDescription('Number of Diameter Credit-Control-Answer (CCA) messages sent, per peer.')
cdccaPeerStatsCCADropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsCCADropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsCCADropped.setDescription('Number of Diameter Credit-Control-Answer (CCA) messages dropped, per peer.')
cdccaPeerStatsRARIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsRARIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsRARIn.setDescription('Number of Diameter Re-Auth-Request (RAR) messages received, per peer.')
cdccaPeerStatsRARDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsRARDropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsRARDropped.setDescription('Number of Diameter Re-Auth-Request (RAR) messages dropped, per peer.')
cdccaPeerStatsRAAOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 9), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsRAAOut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsRAAOut.setDescription('Number of Diameter Re-Auth-Answer (RAA) messages transmitted, per peer.')
cdccaPeerStatsRAADropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 10), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsRAADropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsRAADropped.setDescription('Number of Diameter Re-Auth-Answer (RAA) messages dropped, per peer.')
cdccaPeerStatsSTROut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 11), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsSTROut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsSTROut.setDescription('Number of Diameter Session-Termination-Request (STR) messages transmitted, per peer.')
cdccaPeerStatsSTRDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 12), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsSTRDropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsSTRDropped.setDescription('Number of Diameter Session-Termination-Request (STR) messages dropped, per peer.')
cdccaPeerStatsSTAIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 13), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsSTAIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsSTAIn.setDescription('Number of Diameter Session-Termination-Answer (STA) messages received, per peer.')
cdccaPeerStatsSTADropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 14), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsSTADropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsSTADropped.setDescription('Number of Diameter Session-Termination-Answer (STA) messages dropped, per peer.')
cdccaPeerStatsAAROut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 15), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsAAROut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsAAROut.setDescription('Number of Diameter AA-Request (AAR) messages transmitted, per peer.')
cdccaPeerStatsAARDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 16), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsAARDropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsAARDropped.setDescription('Number of Diameter AA-Request (AAR) messages dropped, per peer.')
cdccaPeerStatsAAAIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 17), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsAAAIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsAAAIn.setDescription('Number of Diameter AA-Answer (AAA) messages received, per peer.')
cdccaPeerStatsAAADropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 18), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsAAADropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsAAADropped.setDescription('Number of Diameter AA-Answer (AAA) messages dropped, per peer.')
cdccaPeerStatsASRIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 19), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsASRIn.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsASRIn.setDescription('Number of Diameter Abort-Session-Request (ASR) messages received, per peer.')
cdccaPeerStatsASRDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 20), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsASRDropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsASRDropped.setDescription('Number of Diameter Abort-Session-Request (ASR) messages dropped, per peer.')
cdccaPeerStatsASAOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 21), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsASAOut.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsASAOut.setDescription('Number of Diameter Abort-Session-Answer (ASA) messages transmitted, per peer.')
cdccaPeerStatsASADropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 575, 1, 3, 1, 1, 22), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdccaPeerStatsASADropped.setStatus('current')
if mibBuilder.loadTexts: cdccaPeerStatsASADropped.setDescription('Number of Diameter Abort-Session-Answer (ASA) messages dropped, per peer.')
ciscoDiameterCCAMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 1))
ciscoDiameterCCAMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 2))
ciscoDiameterCCAMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 1, 1)).setObjects(("CISCO-DIAMETER-CC-APPL-MIB", "ciscoDiameterCCAPeerStatsGroup"), ("CISCO-DIAMETER-CC-APPL-MIB", "ciscoDiameterCCAHostCfgGroup"), ("CISCO-DIAMETER-CC-APPL-MIB", "ciscoDiameterCCAPeerCfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiameterCCAMIBCompliance = ciscoDiameterCCAMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoDiameterCCAMIBCompliance.setDescription('The compliance statement for Diameter Credit Control application entities.')
ciscoDiameterCCAHostCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 2, 1)).setObjects(("CISCO-DIAMETER-CC-APPL-MIB", "cdccaHostIpAddrType"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaHostIpAddress"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaHostId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiameterCCAHostCfgGroup = ciscoDiameterCCAHostCfgGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoDiameterCCAHostCfgGroup.setDescription('A collection of objects providing host configuration common to the server.')
ciscoDiameterCCAPeerCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 2, 2)).setObjects(("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerId"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerVendorId"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStorageType"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerVendorStorageType"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerFirmwareRevision"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerRowStatus"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerVendorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiameterCCAPeerCfgGroup = ciscoDiameterCCAPeerCfgGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoDiameterCCAPeerCfgGroup.setDescription('A collection of objects providing peer configuration common to the server.')
ciscoDiameterCCAPeerStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 575, 2, 2, 3)).setObjects(("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCRIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCROut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCRDropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCAIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCAOut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsCCADropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsRARIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsRARDropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsRAAOut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsRAADropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsSTROut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsSTRDropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsSTAIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsSTADropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsAAROut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsAARDropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsAAAIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsAAADropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsASRIn"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsASRDropped"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsASAOut"), ("CISCO-DIAMETER-CC-APPL-MIB", "cdccaPeerStatsASADropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiameterCCAPeerStatsGroup = ciscoDiameterCCAPeerStatsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoDiameterCCAPeerStatsGroup.setDescription('A collection of objects providing peer statistics common to the server.')
mibBuilder.exportSymbols("CISCO-DIAMETER-CC-APPL-MIB", ciscoDiameterCCAMIBCompliances=ciscoDiameterCCAMIBCompliances, cdccaPeerStatsCCAIn=cdccaPeerStatsCCAIn, cdccaPeerEntry=cdccaPeerEntry, cdccaPeerStatsAAADropped=cdccaPeerStatsAAADropped, PYSNMP_MODULE_ID=ciscoDiameterCCAMIB, cdccaPeerStatsRARDropped=cdccaPeerStatsRARDropped, cdccaPeerStatsRAADropped=cdccaPeerStatsRAADropped, cdccaPeerStatsAARDropped=cdccaPeerStatsAARDropped, cdccaPeerStorageType=cdccaPeerStorageType, cdccaHostCfgs=cdccaHostCfgs, cdccaHostIpAddrEntry=cdccaHostIpAddrEntry, cdccaHostIpAddress=cdccaHostIpAddress, cdccaPeerVendorRowStatus=cdccaPeerVendorRowStatus, cdccaPeerCfgs=cdccaPeerCfgs, ciscoDiameterCCAMIB=ciscoDiameterCCAMIB, ciscoDiameterCCAMIBConform=ciscoDiameterCCAMIBConform, cdccaHostIpAddrIndex=cdccaHostIpAddrIndex, cdccaPeerVendorTable=cdccaPeerVendorTable, cdccaPeerStatsSTRDropped=cdccaPeerStatsSTRDropped, cdccaPeerStatsASAOut=cdccaPeerStatsASAOut, ciscoDiameterCCAMIBObjects=ciscoDiameterCCAMIBObjects, cdccaPeerVendorEntry=cdccaPeerVendorEntry, cdccaPeerRowStatus=cdccaPeerRowStatus, cdccaPeerStatsSTROut=cdccaPeerStatsSTROut, cdccaPeerStatsCCRDropped=cdccaPeerStatsCCRDropped, cdccaHostIpAddrType=cdccaHostIpAddrType, ciscoDiameterCCAPeerCfgGroup=ciscoDiameterCCAPeerCfgGroup, ciscoDiameterCCAMIBNotifs=ciscoDiameterCCAMIBNotifs, cdccaPeerStats=cdccaPeerStats, cdccaPeerStatsCCRIn=cdccaPeerStatsCCRIn, cdccaPeerVendorIndex=cdccaPeerVendorIndex, ciscoDiameterCCAMIBCompliance=ciscoDiameterCCAMIBCompliance, cdccaPeerStatsRAAOut=cdccaPeerStatsRAAOut, ciscoDiameterCCAMIBGroups=ciscoDiameterCCAMIBGroups, cdccaPeerIndex=cdccaPeerIndex, cdccaPeerStatsTable=cdccaPeerStatsTable, cdccaPeerStatsEntry=cdccaPeerStatsEntry, cdccaPeerStatsCCADropped=cdccaPeerStatsCCADropped, cdccaPeerStatsAAAIn=cdccaPeerStatsAAAIn, ciscoDiameterCCAHostCfgGroup=ciscoDiameterCCAHostCfgGroup, cdccaPeerStatsASRIn=cdccaPeerStatsASRIn, cdccaPeerStatsSTAIn=cdccaPeerStatsSTAIn, cdccaPeerStatsSTADropped=cdccaPeerStatsSTADropped, ciscoDiameterCCAPeerStatsGroup=ciscoDiameterCCAPeerStatsGroup, cdccaPeerId=cdccaPeerId, cdccaPeerStatsCCROut=cdccaPeerStatsCCROut, cdccaHostIpAddrTable=cdccaHostIpAddrTable, cdccaPeerFirmwareRevision=cdccaPeerFirmwareRevision, cdccaHostId=cdccaHostId, cdccaPeerVendorId=cdccaPeerVendorId, cdccaPeerStatsASADropped=cdccaPeerStatsASADropped, cdccaPeerStatsASRDropped=cdccaPeerStatsASRDropped, cdccaPeerVendorStorageType=cdccaPeerVendorStorageType, cdccaPeerStatsCCAOut=cdccaPeerStatsCCAOut, cdccaPeerTable=cdccaPeerTable, cdccaPeerStatsRARIn=cdccaPeerStatsRARIn, cdccaPeerStatsAAROut=cdccaPeerStatsAAROut)
