#
# PySNMP MIB module PUBLISHEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PUBLISHEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:42:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
publishExt, = mibBuilder.importSymbols("APENT-MIB", "publishExt")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, ModuleIdentity, Gauge32, Counter32, Integer32, Bits, TimeTicks, Counter64, NotificationType, iso, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "ModuleIdentity", "Gauge32", "Counter32", "Integer32", "Bits", "TimeTicks", "Counter64", "NotificationType", "iso", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
apPublishExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 57, 1))
if mibBuilder.loadTexts: apPublishExtMib.setLastUpdated('0006082000Z')
if mibBuilder.loadTexts: apPublishExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: apPublishExtMib.setContactInfo(' Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01720 Tel: +1 978-206-3000 option 1 E-Mail: support@arrowpoint.com')
if mibBuilder.loadTexts: apPublishExtMib.setDescription('The MIB module used to describe the ArrowPoint Communications publisher and subscriber')
apPubTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2), )
if mibBuilder.loadTexts: apPubTable.setStatus('current')
if mibBuilder.loadTexts: apPubTable.setDescription('A list of Publishers')
apPubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1), ).setIndexNames((0, "PUBLISHEXT-MIB", "apPubName"))
if mibBuilder.loadTexts: apPubEntry.setStatus('current')
if mibBuilder.loadTexts: apPubEntry.setDescription('A group of information uniqely identifying a publisher. One entry exists for every publisher')
apPubName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubName.setStatus('current')
if mibBuilder.loadTexts: apPubName.setDescription('The name of the Publisher service')
apPubState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("publisherRegister", 0), ("subscriberRegister", 1), ("needsConfig", 2), ("accessFail", 3), ("ready", 4), ("busyPublisher", 5), ("busyScan", 6), ("initializing", 7), ("waitsConfig", 8), ("online", 9), ("suspended", 10), ("down", 11), ("invalid", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubState.setStatus('current')
if mibBuilder.loadTexts: apPubState.setDescription('The status of our publisher.')
apPubAccessError = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessError.setStatus('current')
if mibBuilder.loadTexts: apPubAccessError.setDescription('If apPubStatus is accessFail(3) then we will return the error here.')
apPubAccessIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessIP.setStatus('current')
if mibBuilder.loadTexts: apPubAccessIP.setDescription('The IP address of the publisher.')
apPubAccessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessUserName.setStatus('current')
if mibBuilder.loadTexts: apPubAccessUserName.setDescription('Usernmae to use when logging in to a publisher.')
apPubPublishedFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubPublishedFiles.setStatus('current')
if mibBuilder.loadTexts: apPubPublishedFiles.setDescription('The total number of published files.')
apPubSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubSubscribers.setStatus('current')
if mibBuilder.loadTexts: apPubSubscribers.setDescription('The number of subscribers to this publisher.')
apPubPublishInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubPublishInterval.setStatus('current')
if mibBuilder.loadTexts: apPubPublishInterval.setDescription('The interval at which files are published.')
apPubManagedFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubManagedFiles.setStatus('current')
if mibBuilder.loadTexts: apPubManagedFiles.setDescription('The total number of files managed.')
apPubManagedDirs = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubManagedDirs.setStatus('current')
if mibBuilder.loadTexts: apPubManagedDirs.setDescription('The total number of directories managed.')
apPubLastMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubLastMethod.setStatus('current')
if mibBuilder.loadTexts: apPubLastMethod.setDescription('The last method used to publish.')
apPubAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ftp", 0), ("http", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessType.setStatus('current')
if mibBuilder.loadTexts: apPubAccessType.setDescription('The type of access to the publisher.')
apPubAccessPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessPort.setStatus('current')
if mibBuilder.loadTexts: apPubAccessPort.setDescription('The port to access content on the publisher.')
apPubAccessBaseDir = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubAccessBaseDir.setStatus('current')
if mibBuilder.loadTexts: apPubAccessBaseDir.setDescription('The base directory to access content on the publisher.')
apPubPublishedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubPublishedBytes.setStatus('current')
if mibBuilder.loadTexts: apPubPublishedBytes.setDescription('The total number of bytes published by the publisher.')
apPubTriggerFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubTriggerFile.setStatus('current')
if mibBuilder.loadTexts: apPubTriggerFile.setDescription('The file used to trigger publishing.')
apPubNextInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubNextInterval.setStatus('current')
if mibBuilder.loadTexts: apPubNextInterval.setDescription('The next interval at which the publisher will publish.')
apPubSubscrbrsSyncd = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubSubscrbrsSyncd.setStatus('current')
if mibBuilder.loadTexts: apPubSubscrbrsSyncd.setDescription('Total number of syncronized subscribers.')
apPubManagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubManagedBytes.setStatus('current')
if mibBuilder.loadTexts: apPubManagedBytes.setDescription('Total number of butes we manage.')
apPubLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 57, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apPubLastTime.setStatus('current')
if mibBuilder.loadTexts: apPubLastTime.setDescription('Last time a publisher action was taken.')
mibBuilder.exportSymbols("PUBLISHEXT-MIB", apPubManagedDirs=apPubManagedDirs, apPubAccessError=apPubAccessError, apPubAccessIP=apPubAccessIP, apPubAccessBaseDir=apPubAccessBaseDir, apPubState=apPubState, apPubEntry=apPubEntry, apPubPublishedFiles=apPubPublishedFiles, apPubSubscrbrsSyncd=apPubSubscrbrsSyncd, apPubNextInterval=apPubNextInterval, apPubLastMethod=apPubLastMethod, apPubTable=apPubTable, apPubAccessPort=apPubAccessPort, PYSNMP_MODULE_ID=apPublishExtMib, apPubSubscribers=apPubSubscribers, apPubManagedBytes=apPubManagedBytes, apPubLastTime=apPubLastTime, apPubName=apPubName, apPubTriggerFile=apPubTriggerFile, apPubAccessUserName=apPubAccessUserName, apPublishExtMib=apPublishExtMib, apPubPublishInterval=apPubPublishInterval, apPubAccessType=apPubAccessType, apPubManagedFiles=apPubManagedFiles, apPubPublishedBytes=apPubPublishedBytes)
