#
# PySNMP MIB module ENTERASYS-CONVERGENCE-END-POINT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-CONVERGENCE-END-POINT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, NotificationType, IpAddress, MibIdentifier, Bits, Counter32, ObjectIdentity, Counter64, TimeTicks, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "NotificationType", "IpAddress", "MibIdentifier", "Bits", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "Unsigned32", "Gauge32")
DateAndTime, TextualConvention, DisplayString, TruthValue, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString", "TruthValue", "RowStatus", "MacAddress")
etsysConvergenceEndPointMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40))
etsysConvergenceEndPointMIB.setRevisions(('2005-11-18 13:25', '2005-10-19 15:49', '2005-08-16 12:33', '2005-06-16 14:27', '2005-03-31 16:10', '2003-11-05 19:42',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysConvergenceEndPointMIB.setRevisionsDescriptions(('Added new ConvEndPointType of lldpMed(6).', 'Added the etsysCEPCiscoCDPVoicePortVlan to configure the remote configuration of Cisco VOIP phones using Cisco CDP.', 'Added new etsysConvEndPointDetectionEndPointType enumeration of sip(2).', 'Added new ConvEndPointType of sip(5). Added new default behavior to etsysConvEndPointDetectionTable for SIP.', 'Deprecated the etsysConvEndPointConnMacTable in favor of the more flexible etsysCEPConnMacTable. The etsysCEPPortClearUsers object has been added to allow easier clearing of detected Convergence End Points on a per port basis.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: etsysConvergenceEndPointMIB.setLastUpdated('200511181325Z')
if mibBuilder.loadTexts: etsysConvergenceEndPointMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysConvergenceEndPointMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysConvergenceEndPointMIB.setDescription('This MIB module defines a portion of the SNMP MIB under Enterasys Networks enterprise OID pertaining to Convergence End Point management.')
class ConvEndPointTypes(TextualConvention, Bits):
    description = 'Supported Convergence End Point products.'
    status = 'current'
    namedValues = NamedValues(("ciscoIPphone", 0), ("siemensIPphone", 1), ("avayaCLan", 2), ("avayaMedPro", 3), ("genericH323", 4), ("sip", 5), ("lldpMed", 6))

etsysConvEndPointObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1))
etsysConvEndPointConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1))
etsysConvEndPointStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2))
etsysConvEndPointDetection = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3))
etsysConvEndPointGlobalConfigEnable = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigEnable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigEnable.setDescription('When set to enabled(1) this object activates the current Convergence End Point configuration. When set to disabled(2) this MIB SHALL be configurable, but MUST NOT be applied, all entries will be removed from the etsysConvEndPointConnMacTable and the etsysConvEndPointConnPortTable, and any policies that have been changed as a result of End Point detection will revert to their default states. Maintaining the value of this object across agent reboots is REQUIRED.')
etsysConvEndPointGlobalConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 2), )
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigTable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigTable.setDescription('This table represents all Convergence End Point types supported by this entity, and provides a default policy profile for each Convergence End Point type.')
etsysConvEndPointGlobalConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 2, 1), ).setIndexNames((0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointGlobalEndPointType"))
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigEntry.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigEntry.setDescription('Defines the default policy to be applied when this type of Convergence End Point is detected or discovered.')
etsysConvEndPointGlobalEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 2, 1, 1), ConvEndPointTypes())
if mibBuilder.loadTexts: etsysConvEndPointGlobalEndPointType.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalEndPointType.setDescription('The Convergence End Point type. The value of this object is limited to a single enumerated bit in the ConvEndPointTypes textual convention.')
etsysConvEndPointGlobalDefaultPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysConvEndPointGlobalDefaultPolicyIndex.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalDefaultPolicyIndex.setDescription('The policy that should be applied for this type of Convergence End Point. This value is an etsysPolicyProfileIndex as defined in the ENTERASYS-POLICY-PROFILE-MIB. If no such policy index exists, then no policy will be applied when this type of Convergence End Point is detected or discovered. The value zero is not a valid etsysPolicyProfileIndex, so zero indicates that no policy should be applied. Maintaining the value of this object across system reboots is REQUIRED.')
etsysConvEndPointProtocolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 3), )
if mibBuilder.loadTexts: etsysConvEndPointProtocolConfigTable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointProtocolConfigTable.setDescription('This table provides control of Convergence End Point detection and discovery on a per interface and per Convergence End Point type basis. Maintaining the values of this table across system reboots is REQUIRED.')
etsysConvEndPointProtocolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointProtocolEndPointType"))
if mibBuilder.loadTexts: etsysConvEndPointProtocolConfigEntry.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointProtocolConfigEntry.setDescription('The current Convergence End Point detection and discovery status for an interface.')
etsysConvEndPointProtocolEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 3, 1, 1), ConvEndPointTypes())
if mibBuilder.loadTexts: etsysConvEndPointProtocolEndPointType.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointProtocolEndPointType.setDescription('The Convergence End Point type.')
etsysConvEndPointProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 1, 3, 1, 2), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysConvEndPointProtocolEnable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointProtocolEnable.setDescription('When set to enabled(1), Convergence End Point detection and discovery will be enabled on this interface for the Convergence End Point type specified. When set to disabled(2), the Convergence End Points that have been discovered or detected on this interface of the type specified will be removed from the etsysConvEndPointConnMacTable and the etsysConvEndPointConnPortTable. After all of the End Points have been removed from an interface the policy on that interface will revert to its default state.')
etsysConvEndPointConnMacTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1), )
if mibBuilder.loadTexts: etsysConvEndPointConnMacTable.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacTable.setDescription('This table provides information on each of the Convergence End Points that has been discovered or detected by this entity. Maintaining the value of this object across system reboots is NOT REQUIRED.')
etsysConvEndPointConnMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1), ).setIndexNames((0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacMacAddress"))
if mibBuilder.loadTexts: etsysConvEndPointConnMacEntry.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacEntry.setDescription('Information about an individual Convergence End Point.')
etsysConvEndPointConnMacMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: etsysConvEndPointConnMacMacAddress.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacMacAddress.setDescription('The MAC address of this Convergence End Point.')
etsysConvEndPointConnMacPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacPortNumber.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacPortNumber.setDescription('The interface on which this Convergence End Point was detected or discovered.')
etsysConvEndPointConnMacEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 3), ConvEndPointTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacEndPointType.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacEndPointType.setDescription('The type of Convergence End Point described by this row.')
etsysConvEndPointConnMacPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacPolicyIndex.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacPolicyIndex.setDescription('The policy applied for this Convergence End Point. This value is an etsysPolicyProfileIndex as defined in the ENTERASYS-POLICY-PROFILE-MIB. If the desired policy does not currently exist, or never did exist, then a zero MUST be returned.')
etsysConvEndPointConnMacDiscoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacDiscoveryTime.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacDiscoveryTime.setDescription('The time and date that this Convergence End Point was detected or discovered.')
etsysConvEndPointConnMacFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacFirmwareVersion.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacFirmwareVersion.setDescription('This is the firmware version of the discovered Convergence End Point. If this information is not available via the detection protocol then a zero length string MUST be returned.')
etsysConvEndPointConnMacInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacInetAddressType.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacInetAddressType.setDescription("The address type of the discovered or detected Convergence End Point. If the address is unknown, then this object MUST return 'unknown'.")
etsysConvEndPointConnMacInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 1, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnMacInetAddress.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointConnMacInetAddress.setDescription('The address of the discovered or detected Convergence End Point. If the address is unknown, then this object MUST return a zero length string.')
etsysConvEndPointConnPortTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 2), )
if mibBuilder.loadTexts: etsysConvEndPointConnPortTable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointConnPortTable.setDescription('This table provides a mapping from the entities interfaces to discovered Convergence End Points. Maintaining the value of this object across system reboots is NOT REQUIRED.')
etsysConvEndPointConnPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnPortMacAddress"))
if mibBuilder.loadTexts: etsysConvEndPointConnPortEntry.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointConnPortEntry.setDescription('Information about an individual Convergence End Point.')
etsysConvEndPointConnPortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointConnPortMacAddress.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointConnPortMacAddress.setDescription('The MAC address of the discovered or detected Convergence End Point.')
etsysCEPConnMacTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3), )
if mibBuilder.loadTexts: etsysCEPConnMacTable.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacTable.setDescription('This table provides information on each of the Convergence End Points that has been discovered or detected by this entity. Maintaining the value of this object across system reboots is NOT REQUIRED.')
etsysCEPConnMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1), ).setIndexNames((0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnPortMacAddress"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysCEPConnMacEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacEntry.setDescription('Information about an individual Convergence End Point (CEP).')
etsysCEPConnMacEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 1), ConvEndPointTypes()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacEndPointType.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacEndPointType.setDescription('The type of Convergence End Point described by this row.')
etsysCEPConnMacPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacPolicyIndex.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacPolicyIndex.setDescription('The policy applied for this Convergence End Point. This value is an etsysPolicyProfileIndex as defined in the ENTERASYS-POLICY-PROFILE-MIB. If the desired policy does not currently exist, or never did exist, then a zero MUST be returned.')
etsysCEPConnMacDiscoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacDiscoveryTime.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacDiscoveryTime.setDescription('The time and date that this Convergence End Point was detected or discovered.')
etsysCEPConnMacFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacFirmwareVersion.setDescription('This is the firmware version of the discovered Convergence End Point. If this information is not available via the detection protocol then a zero length string MUST be returned.')
etsysCEPConnMacInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacInetAddressType.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacInetAddressType.setDescription("The address type of the discovered or detected Convergence End Point. If the address is unknown, then this object MUST return 'unknown'.")
etsysCEPConnMacInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 2, 3, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysCEPConnMacInetAddress.setStatus('current')
if mibBuilder.loadTexts: etsysCEPConnMacInetAddress.setDescription('The address of the discovered or detected Convergence End Point. If the address is unknown, then this object MUST return a zero length string.')
etsysConvEndPointDetectionMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysConvEndPointDetectionMaxEntries.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionMaxEntries.setDescription('This value represents the maximum number of entries allowed in the etsysConvEndPointDetectionTable.')
etsysConvEndPointDetectionTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2), )
if mibBuilder.loadTexts: etsysConvEndPointDetectionTable.setReference('Internet Assigned Numbers Authority (INTERNET MULTICAST ADDRESSES). RFC3261 (SIP: Session Initiation Protocol).')
if mibBuilder.loadTexts: etsysConvEndPointDetectionTable.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionTable.setDescription("A table that describes the IP address and IP port based Convergence End Point detection parameters. Packets on interfaces that are configured to detect End Points, via the etsysConvEndPointProtocolConfigTable, that are defined in this table are inspected to determine if a Convergence End Point exists on that interface. Rules applying to Convergence End Point types that are configured for detection are evaluated according to the following: 1. If etsysConvEndPointDetectionProtocol does not have any bits set, this indicates that the port based detection should not be performed, proceed to step 2. Otherwise the value in etsysConvEndPointDetectionProtocol is evaluated against the protocol field in the IP header, if it is of a, or the, type specified then the destination port must be between the values of etsysConvEndPointDetectionPortLow and etsysConvEndPointDetectionPortHigh, inclusive. 2. If the etsysConvEndPointDetectionAddr is null, this indicates that no detection address check should be performed, consider the End Point detected. Otherwise the value the of etsysConvEndPointDetectionAddr will be masked with the value of etsysConvEndPointDetectionAddrMask, via a bitwise AND operation, and this value will be compared with the destination IP address that has also been masked with the value of etsysConvEndPointDetectionAddrMask, via a bitwise AND operation, if they are equal then consider the End Point detected. If there are no rows in this table that are in the active state then the following pseudo entries describe the behavior of the IP based Convergence End Point detection. EndPointType siemens Protocol { { udp, tcp } } PortLow 4060 PortHigh 4060 AddrType unknown Addr '' AddrMaskType unknown AddrMask '' EndPointType h323 Protocol { { udp, tcp } } PortLow 1718 PortHigh 1720 AddrType ipv4 Addr '224.0.1.41' AddrMaskType ipv4 AddrMask '255.255.255.255' EndPointType sip Protocol { { udp, tcp } } PortLow 5060 PortHigh 5060 AddrType ipv4 Addr '224.0.1.75' AddrMaskType ipv4 AddrMask '255.255.255.255' If one or more entries in this table are active the active entries will define the IP based detection behavior in its entirety. Maintaining entries in this table across system reboots is REQUIRED for entries with an etsysConvEndPointDetectionRowStatus value of active(1).")
etsysConvEndPointDetectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1), ).setIndexNames((0, "ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionRuleIndex"))
if mibBuilder.loadTexts: etsysConvEndPointDetectionEntry.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionEntry.setDescription('Each entry represents a describes parameters for detecting a Convergence End Point.')
etsysConvEndPointDetectionRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: etsysConvEndPointDetectionRuleIndex.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionRuleIndex.setDescription('The index of this conceptual row. This row represents a single rule for determining if an incoming IP packet indicates the presence of a Convergence End Point device. The lower the numerical value of the index the greater the precedence of the rule. It is recommended that the lowest index be configured to most predominate protocol in the network for greater efficiency.')
etsysConvEndPointDetectionEndPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("h323", 0), ("siemens", 1), ("sip", 2))).clone('siemens')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionEndPointType.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionEndPointType.setDescription("The Convergence End Point device type that a 'hit' on this rule will indicate the presence of.")
etsysConvEndPointDetectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 3), Bits().clone(namedValues=NamedValues(("udp", 0), ("tcp", 1))).clone(namedValues=NamedValues(("udp", 0), ("tcp", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionProtocol.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionProtocol.setDescription('The IP protocol type that the following port range applies to. If no bits are set then the destination port will not be evaluated as part of the detection process.')
etsysConvEndPointDetectionPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4060)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionPortLow.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionPortLow.setDescription('The low end of the range of the IP destination port that will be used for Convergence End Point detection. This value represents the low value in a range of port numbers that will be used to indicate this type of Convergence End Point. This value must be less than or equal to etsysConvEndPointDetectionPortHigh.')
etsysConvEndPointDetectionPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(4060)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionPortHigh.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionPortHigh.setDescription('The high end of the range of the IP destination port that will be used for Convergence End Point detection. This value represents the high value in a range of port numbers that will be used to indicate this type of Convergence End Point. This value must be greater than or equal to etsysConvEndPointDetectionPortLow.')
etsysConvEndPointDetectionAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 6), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrType.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrType.setDescription("The destination address type that will be used for Convergence End Point detection. If the address type is 'unknown', then this value will not be evaluated as part of the detection process.")
etsysConvEndPointDetectionAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddr.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddr.setDescription('The destination IP address that will be used for Convergence End Point detection. If this address is null, then this value will not be evaluated as part of the detection process.')
etsysConvEndPointDetectionAddrMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 8), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrMaskType.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrMaskType.setDescription("The address type of the mask that will be applied to the destination IP address as part of the Convergence End Point detection process. If the address type is 'unknown', then this value will not be evaluated as part of the detection process.")
etsysConvEndPointDetectionAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 9), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrMask.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionAddrMask.setDescription('The destination address mask that will be used for Convergence End Point detection. If the mask is null, then this value will not be evaluated as part of the detection process.')
etsysConvEndPointDetectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysConvEndPointDetectionRowStatus.setReference('RFC2579 (Textual Conventions for SMIv2)')
if mibBuilder.loadTexts: etsysConvEndPointDetectionRowStatus.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionRowStatus.setDescription("The status of this row as defined by the RowStatus textual convention. Rows in this table can only transition to 'notInService', or to 'active' if the etsysConvEndPointDetectionAddrType object and the etsysConvEndPointDetectionAddrMaskType object have the same value, and either their values are not 'unknown' or there is at least one bit set in the etsysConvEndPointDetectionProtocol object.")
etsysCEPDetectionPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 3), )
if mibBuilder.loadTexts: etsysCEPDetectionPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: etsysCEPDetectionPortConfigTable.setDescription('A table of per port configuration for Convergence End Point detection. Maintaining the value of this object across system reboots is NOT REQUIRED.')
etsysCEPDetectionPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysCEPDetectionPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCEPDetectionPortConfigEntry.setDescription('An entry containing per port Convergence End Point data. Only interfaces that are able to detect Convergence End Points are represented in this table.')
etsysCEPPortClearUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCEPPortClearUsers.setStatus('current')
if mibBuilder.loadTexts: etsysCEPPortClearUsers.setDescription('Setting this object to a value of true(1) will cause all detected or discovered Convergence End Points to be removed from the following status tables: etsysConvEndPointConnMacTable etsysConvEndPointConnPortTable etsysCEPConnMacTable Setting this object to a value of false(2) has no effect. This object will always return a value of false(2).')
etsysCEPCdpPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 4), )
if mibBuilder.loadTexts: etsysCEPCdpPortConfigTable.setStatus('current')
if mibBuilder.loadTexts: etsysCEPCdpPortConfigTable.setDescription('A table of per port configuration for Convergence End Point detection related to the Cisco CDP protocol. Only ports that are capable of participating in Cisco CDP protocol are represented in this table.')
etsysCEPCdpPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: etsysCEPCdpPortConfigEntry.setStatus('current')
if mibBuilder.loadTexts: etsysCEPCdpPortConfigEntry.setDescription('An entry containing per port Convergence End Point data. Only interfaces that are able to detect Convergence End Points are represented in this table.')
etsysCEPCiscoCDPVoicePortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4094), ValueRangeConstraint(4095, 4095), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysCEPCiscoCDPVoicePortVlan.setStatus('current')
if mibBuilder.loadTexts: etsysCEPCiscoCDPVoicePortVlan.setDescription('This object controls the behavior of the remote configuration of Cisco VOIP phones via Cisco CDP. Setting this object to a value of -1 will cause the device to not attempt to remotely configure a Cisco phone using CDP. Setting this object to a value of 0 will cause the device to configure the phone to send 802.1p priority tagged frames. A value of 4095 will cause the device to configure the phone to send untagged frames. A value in the range 1..4094 will cause the device to configure the phone to send 802.1Q tagged frames using that value as the VLAN ID encoded in the tag. This object SHOULD be maintained across device reboots.')
etsysConvEndPointConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2))
etsysConvEndPointGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1))
etsysConvEndPointCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 2))
etsysConvEndPointGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 1)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointGlobalConfigEnable"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointGlobalDefaultPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointGlobalConfigGroup = etsysConvEndPointGlobalConfigGroup.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointGlobalConfigGroup.setDescription('Objects which provide global control of the Convergence End Point features.')
etsysConvEndPointConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 2)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointProtocolEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointConfigGroup = etsysConvEndPointConfigGroup.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointConfigGroup.setDescription('Objects which provide overrides to the global Convergence End Point controls.')
etsysConvEndPointDetectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 3)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionEndPointType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionProtocol"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionPortLow"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionPortHigh"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddr"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrMaskType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrMask"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointDetectionGroup = etsysConvEndPointDetectionGroup.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointDetectionGroup.setDescription('Objects that provide configuration information specific to IP, port, and address based Convergence End Point detection.')
etsysConvEndPointStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 4)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacPortNumber"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacEndPointType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacPolicyIndex"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacDiscoveryTime"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacFirmwareVersion"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacInetAddressType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnMacInetAddress"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnPortMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointStatusGroup = etsysConvEndPointStatusGroup.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointStatusGroup.setDescription('Objects that provide status information for discovered and detected Convergence End Points.')
etsysConvEndPointStatusGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 5)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConnPortMacAddress"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacEndPointType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacPolicyIndex"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacDiscoveryTime"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacFirmwareVersion"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacInetAddressType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPConnMacInetAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointStatusGroup2 = etsysConvEndPointStatusGroup2.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointStatusGroup2.setDescription('Objects that provide status information for discovered and detected Convergence End Points.')
etsysConvEndPointDetectionGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 6)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionEndPointType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionProtocol"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionPortLow"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionPortHigh"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddr"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrMaskType"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionAddrMask"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionRowStatus"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionMaxEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointDetectionGroup2 = etsysConvEndPointDetectionGroup2.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointDetectionGroup2.setDescription('Objects that provide configuration information specific to IP, port, and address based Convergence End Point detection.')
etsysConvEndPointPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 7)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPPortClearUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointPortConfigGroup = etsysConvEndPointPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointPortConfigGroup.setDescription('Objects that provide per port control for discovered and detected Convergence End Points.')
etsysConvEndPointCiscoVoiceVLANGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 1, 8)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysCEPCiscoCDPVoicePortVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointCiscoVoiceVLANGroup = etsysConvEndPointCiscoVoiceVLANGroup.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointCiscoVoiceVLANGroup.setDescription('Objects that provide per port control for configuring Cisco VOIP phones via Cisco CDP.')
etsysConvEndPointCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 2, 1)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointGlobalConfigGroup"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointStatusGroup"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConfigGroup"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointCompliance = etsysConvEndPointCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: etsysConvEndPointCompliance.setDescription('This compliance statement has been deprecated in favor of the etsysConvEndPointCompliance2 group.')
etsysConvEndPointCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 2, 2)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointGlobalConfigGroup"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointStatusGroup2"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointConfigGroup"), ("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointDetectionGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointCompliance2 = etsysConvEndPointCompliance2.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointCompliance2.setDescription('The compliance statement for entities which implement the Enterasys Convergence End Point Management MIB.')
etsysConvEndPointPortConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 2, 3)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointPortConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointPortConfigCompliance = etsysConvEndPointPortConfigCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointPortConfigCompliance.setDescription('The compliance statement for devices that support per port configuration of Convergence End Point detection and discovery.')
etsysConvEndPointCiscoVoiceVLANCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 40, 2, 2, 4)).setObjects(("ENTERASYS-CONVERGENCE-END-POINT-MIB", "etsysConvEndPointCiscoVoiceVLANGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysConvEndPointCiscoVoiceVLANCompliance = etsysConvEndPointCiscoVoiceVLANCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysConvEndPointCiscoVoiceVLANCompliance.setDescription('The compliance statement for devices that support detection and configuration of Cisco VOIP phones via Cisco CDP.')
mibBuilder.exportSymbols("ENTERASYS-CONVERGENCE-END-POINT-MIB", etsysConvEndPointDetectionEndPointType=etsysConvEndPointDetectionEndPointType, etsysConvEndPointConnMacInetAddress=etsysConvEndPointConnMacInetAddress, etsysConvEndPointDetectionEntry=etsysConvEndPointDetectionEntry, etsysConvEndPointCiscoVoiceVLANCompliance=etsysConvEndPointCiscoVoiceVLANCompliance, etsysConvEndPointCompliances=etsysConvEndPointCompliances, etsysConvEndPointProtocolConfigTable=etsysConvEndPointProtocolConfigTable, etsysConvEndPointGlobalDefaultPolicyIndex=etsysConvEndPointGlobalDefaultPolicyIndex, etsysConvEndPointStatusGroup=etsysConvEndPointStatusGroup, etsysConvEndPointGlobalConfigEntry=etsysConvEndPointGlobalConfigEntry, etsysConvEndPointDetectionMaxEntries=etsysConvEndPointDetectionMaxEntries, etsysConvergenceEndPointMIB=etsysConvergenceEndPointMIB, etsysConvEndPointGlobalEndPointType=etsysConvEndPointGlobalEndPointType, etsysConvEndPointGlobalConfigEnable=etsysConvEndPointGlobalConfigEnable, etsysConvEndPointConnPortTable=etsysConvEndPointConnPortTable, etsysConvEndPointConfig=etsysConvEndPointConfig, etsysConvEndPointDetectionAddrMaskType=etsysConvEndPointDetectionAddrMaskType, etsysConvEndPointPortConfigGroup=etsysConvEndPointPortConfigGroup, etsysConvEndPointConnMacDiscoveryTime=etsysConvEndPointConnMacDiscoveryTime, etsysCEPConnMacTable=etsysCEPConnMacTable, etsysConvEndPointConfigGroup=etsysConvEndPointConfigGroup, etsysConvEndPointConnMacInetAddressType=etsysConvEndPointConnMacInetAddressType, etsysConvEndPointConnMacEntry=etsysConvEndPointConnMacEntry, etsysConvEndPointDetectionProtocol=etsysConvEndPointDetectionProtocol, etsysCEPConnMacPolicyIndex=etsysCEPConnMacPolicyIndex, etsysConvEndPointGroups=etsysConvEndPointGroups, ConvEndPointTypes=ConvEndPointTypes, etsysConvEndPointConnMacFirmwareVersion=etsysConvEndPointConnMacFirmwareVersion, etsysConvEndPointDetectionGroup=etsysConvEndPointDetectionGroup, etsysConvEndPointDetectionRowStatus=etsysConvEndPointDetectionRowStatus, etsysConvEndPointConnPortMacAddress=etsysConvEndPointConnPortMacAddress, etsysCEPConnMacEntry=etsysCEPConnMacEntry, etsysCEPCiscoCDPVoicePortVlan=etsysCEPCiscoCDPVoicePortVlan, etsysConvEndPointDetectionGroup2=etsysConvEndPointDetectionGroup2, etsysConvEndPointObjects=etsysConvEndPointObjects, etsysCEPCdpPortConfigTable=etsysCEPCdpPortConfigTable, etsysCEPDetectionPortConfigEntry=etsysCEPDetectionPortConfigEntry, etsysConvEndPointDetectionPortHigh=etsysConvEndPointDetectionPortHigh, etsysConvEndPointDetectionAddrMask=etsysConvEndPointDetectionAddrMask, etsysConvEndPointDetection=etsysConvEndPointDetection, etsysConvEndPointCiscoVoiceVLANGroup=etsysConvEndPointCiscoVoiceVLANGroup, etsysConvEndPointConnMacPolicyIndex=etsysConvEndPointConnMacPolicyIndex, etsysCEPConnMacFirmwareVersion=etsysCEPConnMacFirmwareVersion, etsysConvEndPointDetectionTable=etsysConvEndPointDetectionTable, PYSNMP_MODULE_ID=etsysConvergenceEndPointMIB, etsysCEPPortClearUsers=etsysCEPPortClearUsers, etsysConvEndPointConnMacMacAddress=etsysConvEndPointConnMacMacAddress, etsysConvEndPointProtocolEnable=etsysConvEndPointProtocolEnable, etsysConvEndPointConnMacEndPointType=etsysConvEndPointConnMacEndPointType, etsysCEPConnMacInetAddress=etsysCEPConnMacInetAddress, etsysConvEndPointConformance=etsysConvEndPointConformance, etsysConvEndPointCompliance=etsysConvEndPointCompliance, etsysConvEndPointCompliance2=etsysConvEndPointCompliance2, etsysConvEndPointGlobalConfigGroup=etsysConvEndPointGlobalConfigGroup, etsysConvEndPointPortConfigCompliance=etsysConvEndPointPortConfigCompliance, etsysCEPConnMacEndPointType=etsysCEPConnMacEndPointType, etsysConvEndPointDetectionPortLow=etsysConvEndPointDetectionPortLow, etsysConvEndPointDetectionAddr=etsysConvEndPointDetectionAddr, etsysConvEndPointDetectionAddrType=etsysConvEndPointDetectionAddrType, etsysCEPCdpPortConfigEntry=etsysCEPCdpPortConfigEntry, etsysConvEndPointStatus=etsysConvEndPointStatus, etsysConvEndPointProtocolConfigEntry=etsysConvEndPointProtocolConfigEntry, etsysConvEndPointConnMacTable=etsysConvEndPointConnMacTable, etsysCEPDetectionPortConfigTable=etsysCEPDetectionPortConfigTable, etsysConvEndPointDetectionRuleIndex=etsysConvEndPointDetectionRuleIndex, etsysConvEndPointConnPortEntry=etsysConvEndPointConnPortEntry, etsysCEPConnMacDiscoveryTime=etsysCEPConnMacDiscoveryTime, etsysConvEndPointConnMacPortNumber=etsysConvEndPointConnMacPortNumber, etsysConvEndPointStatusGroup2=etsysConvEndPointStatusGroup2, etsysCEPConnMacInetAddressType=etsysCEPConnMacInetAddressType, etsysConvEndPointGlobalConfigTable=etsysConvEndPointGlobalConfigTable, etsysConvEndPointProtocolEndPointType=etsysConvEndPointProtocolEndPointType)
