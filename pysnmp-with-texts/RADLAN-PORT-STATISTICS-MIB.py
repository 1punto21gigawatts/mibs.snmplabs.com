#
# PySNMP MIB module RADLAN-PORT-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-PORT-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:48:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, TimeTicks, Counter32, Gauge32, Integer32, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, MibIdentifier, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "TimeTicks", "Counter32", "Gauge32", "Integer32", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "MibIdentifier", "Counter64", "iso")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
rlPortStat = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 223))
rlPortStat.setRevisions(('2015-04-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rlPortStat.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: rlPortStat.setLastUpdated('201504060000Z')
if mibBuilder.loadTexts: rlPortStat.setOrganization('Marvell Computer Communications Ltd.')
if mibBuilder.loadTexts: rlPortStat.setContactInfo('marvell.com')
if mibBuilder.loadTexts: rlPortStat.setDescription('This private MIB module for Port-Statistics')
class PortStatisticsSubType(TextualConvention, Integer32):
    description = 'Specifies port-statistic sub-type'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("second", 1), ("minute", 2), ("hour", 3), ("day", 4), ("week", 5))

class PortStatisticsSampleClockSource(TextualConvention, Integer32):
    description = 'Specifies port-statistic sample clock-source'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("internal", 1), ("sntp", 2), ("userDefined", 3))

class PortStatisticsCounterName(TextualConvention, Integer32):
    description = 'Specifies port-statistic counter-name'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38))
    namedValues = NamedValues(("anyCounter", 0), ("unicastFrameSent", 1), ("broadcastFrameSent", 2), ("multicastFrameSent", 3), ("goodOctetsSent", 4), ("txUtilization", 5), ("goodUnicastFrameReceived", 6), ("broadcastFrameReceived", 7), ("multicastFrameReceived", 8), ("rxErrorFrameReceived", 9), ("totalOctetsReceived", 10), ("rxUtilization", 11), ("txRxUtilization", 12), ("frames64B", 13), ("frames65To127B", 14), ("frames128To255B", 15), ("frames256To511B", 16), ("frames512To1023B", 17), ("frames1024To1518B", 18), ("dot3StatsFCSErrors", 19), ("dot3StatsSingleCollisionFrames", 20), ("dot3StatsLateCollisions", 21), ("dot3StatsExcessiveCollisions", 22), ("dot3StatsFrameTooLongs", 23), ("dot3StatsInternalMacReceiveErrors", 24), ("dot3InPauseFrames", 25), ("dot3OutPauseFrames", 26), ("etherStatsDropEvents", 27), ("etherStatsCRCAlignErrors", 28), ("etherStatsUndersizePkts", 29), ("etherStatsOversizePkts", 30), ("etherStatsFragments", 31), ("etherStatsJabbers", 32), ("etherStatsCollisions", 33), ("goodOctetsReceived", 34), ("badOctetsReceived", 35), ("goodFrameSent", 36), ("goodFrameReceived", 37), ("lastCounterSpecifier", 38))

rlPortStatEnabledPorts = MibScalar((1, 3, 6, 1, 4, 1, 89, 223, 1), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortStatEnabledPorts.setStatus('current')
if mibBuilder.loadTexts: rlPortStatEnabledPorts.setDescription('Port-set to determine from which port to collect port-statistics')
rlPortStatClearPorts = MibScalar((1, 3, 6, 1, 4, 1, 89, 223, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlPortStatClearPorts.setStatus('current')
if mibBuilder.loadTexts: rlPortStatClearPorts.setDescription('Action MIB for clearing port-statistics history on a list of selected ports')
rlPortStatSampleTable = MibTable((1, 3, 6, 1, 4, 1, 89, 223, 3), )
if mibBuilder.loadTexts: rlPortStatSampleTable.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleTable.setDescription('The table holds port-statistics for Ethernet ports This is a read-only MIB for presentation purposes.')
rlPortStatSampleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 223, 3, 1), ).setIndexNames((0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatSampleIfIndex"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatSampleStatSubType"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatSampleCounterName"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatSampleStatID"))
if mibBuilder.loadTexts: rlPortStatSampleEntry.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleEntry.setDescription('Entry in the rlPortStatSampleTable.')
rlPortStatSampleIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlPortStatSampleIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleIfIndex.setDescription('Interface Index. This variable is a key in port-statistics table.')
rlPortStatSampleStatSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 2), PortStatisticsSubType())
if mibBuilder.loadTexts: rlPortStatSampleStatSubType.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleStatSubType.setDescription('Port-statistic sub-type. This variable is a key in port-statistics table.')
rlPortStatSampleCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 3), PortStatisticsCounterName())
if mibBuilder.loadTexts: rlPortStatSampleCounterName.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleCounterName.setDescription('Port-statistic counter-name. This variable is a key in port-statistics table.')
rlPortStatSampleStatID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 4), Unsigned32())
if mibBuilder.loadTexts: rlPortStatSampleStatID.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleStatID.setDescription('Statistics ID. This variable is a key in port-statistics table.')
rlPortStatSampleCollectionInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleCollectionInterval.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleCollectionInterval.setDescription('Port-statistic collection time interval (in seconds).')
rlPortStatSampleSystemCollectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleSystemCollectionTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleSystemCollectionTime.setDescription('The system up-time when the samples were taken, formatted in posix-time format')
rlPortStatSampleCollectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleCollectionTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleCollectionTime.setDescription('The absolute time when the samples were taken, formatted in posix-time format')
rlPortStatSampleCollectionTimeStr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleCollectionTimeStr.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleCollectionTimeStr.setDescription("The absolute time when the samples were taken, in string format - 'hhmmssddMMYYYYw' where 'w' stands for weekDay (1-7)")
rlPortStatSampleCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleCounterValue.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleCounterValue.setDescription('Port-Statistics counter value')
rlPortStatSamplePartialFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSamplePartialFlag.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSamplePartialFlag.setDescription('Indicates whether the collected statistics for the current entry are partial.')
rlPortStatSampleClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 3, 1, 11), PortStatisticsSampleClockSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatSampleClockSource.setStatus('current')
if mibBuilder.loadTexts: rlPortStatSampleClockSource.setDescription('Indicates the clock-source used for marking the collection-time of the collected sample')
rlPortStatLastSampleTable = MibTable((1, 3, 6, 1, 4, 1, 89, 223, 4), )
if mibBuilder.loadTexts: rlPortStatLastSampleTable.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleTable.setDescription('The table holds the last sample from port-statistics. This is a read-only MIB for presentation purposes.')
rlPortStatLastSampleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 223, 4, 1), ).setIndexNames((0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatLastSampleIfIndex"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatLastSampleStatSubType"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatLastSampleCounterName"))
if mibBuilder.loadTexts: rlPortStatLastSampleEntry.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleEntry.setDescription('Entry in the rlPortStatLastSampleTable.')
rlPortStatLastSampleIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlPortStatLastSampleIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleIfIndex.setDescription('Interface Index. This variable is a key in port-statistics table.')
rlPortStatLastSampleStatSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 2), PortStatisticsSubType())
if mibBuilder.loadTexts: rlPortStatLastSampleStatSubType.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleStatSubType.setDescription('Port-statistic sub-type. This variable is a key in port-statistics table.')
rlPortStatLastSampleCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 3), PortStatisticsCounterName())
if mibBuilder.loadTexts: rlPortStatLastSampleCounterName.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleCounterName.setDescription('Port-statistic counter-name. This variable is a key in port-statistics table.')
rlPortStatLastSampleStatID = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleStatID.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleStatID.setDescription('Statistics ID. This variable is a key in port-statistics table.')
rlPortStatLastSampleCollectionInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionInterval.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionInterval.setDescription('Port-statistic collection time interval (in seconds).')
rlPortStatLastSampleSystemCollectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleSystemCollectionTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleSystemCollectionTime.setDescription('The system up-time when the samples were taken, formatted in posix-time format')
rlPortStatLastSampleCollectionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionTime.setDescription('The absolute time when the samples were taken, formatted in posix-time format')
rlPortStatLastSampleCollectionTimeStr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionTimeStr.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleCollectionTimeStr.setDescription("The absolute time when the samples were taken, in string format - 'hhmmssddMMYYYYw' where 'w' stands for weekDay (1-7)")
rlPortStatLastSampleCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleCounterValue.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleCounterValue.setDescription('Port-Statistics counter value')
rlPortStatLastSamplePartialFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSamplePartialFlag.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSamplePartialFlag.setDescription('Indicates whether the collected statistics for the current entry are partial.')
rlPortStatLastSampleClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 4, 1, 11), PortStatisticsSampleClockSource()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastSampleClockSource.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastSampleClockSource.setDescription('Indicates the clock-source used for marking the collection-time of the collected sample')
rlPortStatLastEventTable = MibTable((1, 3, 6, 1, 4, 1, 89, 223, 5), )
if mibBuilder.loadTexts: rlPortStatLastEventTable.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventTable.setDescription('This table holds records of the last time an ether-like counter changed its value and time when the change had occoured. This is a read-only MIB for presentation purposes.')
rlPortStatLastEventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 223, 5, 1), ).setIndexNames((0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatLastEventIfIndex"), (0, "RADLAN-PORT-STATISTICS-MIB", "rlPortStatLastEventCounterName"))
if mibBuilder.loadTexts: rlPortStatLastEventEntry.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventEntry.setDescription('Entry in the rlPortStatLastEventTable.')
rlPortStatLastEventIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: rlPortStatLastEventIfIndex.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventIfIndex.setDescription('Interface Index. This variable is a key in last-event table.')
rlPortStatLastEventCounterName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 2), PortStatisticsCounterName())
if mibBuilder.loadTexts: rlPortStatLastEventCounterName.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventCounterName.setDescription("Port-statistic counter-name. use 'anyCounter' (0) enum value to extract the last event that occoured in a given port / ifIndex. This variable is a key in last-event table.")
rlPortStatLastEventSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastEventSystemTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventSystemTime.setDescription('The system up-time of the event, formatted in posix-time format')
rlPortStatLastEventPosixTime = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastEventPosixTime.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventPosixTime.setDescription('The absolute time of the event, formatted in posix-time format')
rlPortStatLastEventTimeStr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastEventTimeStr.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventTimeStr.setDescription("The absolute time of the event, in string format - 'hhmmssddMMYYYYw' where 'w' stands for weekDay (1-7)")
rlPortStatLastEventCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 6), PortStatisticsCounterName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastEventCounter.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventCounter.setDescription('Port-statistic counter-name')
rlPortStatLastEventCounterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 223, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlPortStatLastEventCounterValue.setStatus('current')
if mibBuilder.loadTexts: rlPortStatLastEventCounterValue.setDescription('Port-Statistics counter value')
mibBuilder.exportSymbols("RADLAN-PORT-STATISTICS-MIB", rlPortStatSampleSystemCollectionTime=rlPortStatSampleSystemCollectionTime, PortStatisticsSubType=PortStatisticsSubType, rlPortStatLastSampleCollectionTime=rlPortStatLastSampleCollectionTime, rlPortStatLastSampleCollectionTimeStr=rlPortStatLastSampleCollectionTimeStr, rlPortStatSampleCollectionTimeStr=rlPortStatSampleCollectionTimeStr, rlPortStatEnabledPorts=rlPortStatEnabledPorts, rlPortStat=rlPortStat, rlPortStatLastSampleCounterValue=rlPortStatLastSampleCounterValue, rlPortStatSampleCollectionTime=rlPortStatSampleCollectionTime, rlPortStatLastEventEntry=rlPortStatLastEventEntry, rlPortStatSampleCollectionInterval=rlPortStatSampleCollectionInterval, rlPortStatSampleStatSubType=rlPortStatSampleStatSubType, rlPortStatLastSampleTable=rlPortStatLastSampleTable, rlPortStatClearPorts=rlPortStatClearPorts, rlPortStatSamplePartialFlag=rlPortStatSamplePartialFlag, rlPortStatSampleTable=rlPortStatSampleTable, PortStatisticsCounterName=PortStatisticsCounterName, rlPortStatLastSampleIfIndex=rlPortStatLastSampleIfIndex, rlPortStatLastSampleStatSubType=rlPortStatLastSampleStatSubType, rlPortStatLastSampleCounterName=rlPortStatLastSampleCounterName, rlPortStatLastEventTimeStr=rlPortStatLastEventTimeStr, rlPortStatLastEventCounter=rlPortStatLastEventCounter, rlPortStatLastSampleCollectionInterval=rlPortStatLastSampleCollectionInterval, rlPortStatSampleCounterValue=rlPortStatSampleCounterValue, rlPortStatLastEventCounterName=rlPortStatLastEventCounterName, rlPortStatLastSampleStatID=rlPortStatLastSampleStatID, PYSNMP_MODULE_ID=rlPortStat, rlPortStatSampleIfIndex=rlPortStatSampleIfIndex, rlPortStatLastSamplePartialFlag=rlPortStatLastSamplePartialFlag, rlPortStatSampleCounterName=rlPortStatSampleCounterName, rlPortStatLastEventTable=rlPortStatLastEventTable, PortStatisticsSampleClockSource=PortStatisticsSampleClockSource, rlPortStatLastEventCounterValue=rlPortStatLastEventCounterValue, rlPortStatLastSampleClockSource=rlPortStatLastSampleClockSource, rlPortStatLastSampleSystemCollectionTime=rlPortStatLastSampleSystemCollectionTime, rlPortStatSampleClockSource=rlPortStatSampleClockSource, rlPortStatLastEventPosixTime=rlPortStatLastEventPosixTime, rlPortStatLastEventIfIndex=rlPortStatLastEventIfIndex, rlPortStatSampleStatID=rlPortStatSampleStatID, rlPortStatLastEventSystemTime=rlPortStatLastEventSystemTime, rlPortStatLastSampleEntry=rlPortStatLastSampleEntry, rlPortStatSampleEntry=rlPortStatSampleEntry)
