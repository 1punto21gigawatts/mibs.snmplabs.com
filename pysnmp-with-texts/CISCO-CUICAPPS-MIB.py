#
# PySNMP MIB module CISCO-CUICAPPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CUICAPPS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, TimeTicks, ObjectIdentity, Counter64, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, IpAddress, Integer32, Counter32, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "ObjectIdentity", "Counter64", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "IpAddress", "Integer32", "Counter32", "NotificationType", "Bits")
DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
ciscoCuicappsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 718))
ciscoCuicappsMIB.setRevisions(('2010-01-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoCuicappsMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoCuicappsMIB.setLastUpdated('201001230000Z')
if mibBuilder.loadTexts: ciscoCuicappsMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoCuicappsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cse-dev-intelsuite@cisco.com')
if mibBuilder.loadTexts: ciscoCuicappsMIB.setDescription('The Cisco Unified Intelligence Center (CUIC) is a scalable robust and secure reporting solution for contact center applications. The CUIC application can be deployed on multiple servers that form a cluster, where each server hosts a reporting engine. The CISCO-CUICAPPS-MIB defines objects that describe instrumentation implemented by the components comprising CUIC. DEFINITION OF TERMS AND ACRONYMS CUIC Cisco Unified Intelligence Center cluster A group of CUIC servers deployed and associated to form high availability model. sub system A subsystem is a coherent and somewhat independent component of a larger system. Service A functional component of the CUIC application publisher A server in a CUIC cluster which provides administration facility. first node Publisher node is alternatively referred as first node. Connector A CUIC Tomcat Connector represents an endpoint that receives requests and sends responses. The Connector handles HTTP/HTTPS requests and sends HTTP/HTTPS responses that occur when CUIC - related web pages are accessed. data source Data source is a connection to a database server.')
class CuicServiceStatus(TextualConvention, Integer32):
    description = "This textual convention denotes the run status of a CUIC's service. The value is the result of evaluating the current run status of each of the individual elements associated with the service. 'inService' The service is up and running optimally. 'partialService' Some of the components comprising the application are not running; service is in warning state. 'notResponding' The service is either shut down or not responding. 'unknown' The service status is unknown"
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("inService", 1), ("partialService", 2), ("notResponding", 3), ("unknown", 4))

class CuicSubsystemId(TextualConvention, Unsigned32):
    description = 'Sub System ID is five digit unique identifier for a given CUIC server in a cluster. For example an the value could be like 43009.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

ciscoCuicappsMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 0))
ciscoCuicappsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 1))
ciscoCuicappsMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 2))
cuicGeneralInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1), )
if mibBuilder.loadTexts: cuicGeneralInfoTable.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoTable.setDescription('This table contains a list of CUIC servers')
cuicGeneralInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicGeneralInfoIndex"))
if mibBuilder.loadTexts: cuicGeneralInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoEntry.setDescription('An entry in this table represents a CUIC server in this cluster. A row will be created in this table, whenever a new server is being added to this cluster. And a row will be deleted when a server is being removed from this cluster.')
cuicGeneralInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicGeneralInfoIndex.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicGeneralInfoServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoServerName.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoServerName.setDescription('This object indicates the host name of a CUIC server.')
cuicGeneralInfoServerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoServerDescription.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoServerDescription.setDescription('This object indicates a textual description of the CUIC application installed on this server. This information is same as description entered for the application during installation.')
cuicGeneralInfoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoVersion.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoVersion.setDescription('This object indicates the version number of the CUIC software installed on the server. The following illustrates the format of the value for an instance of this object: CUIC_<major>_<minor>_<buildnumber> where, <major> is an integer denoting Major revision number. <minor> is an integer denoting minor revision number. <buildnumebr> is an integer denoting the build number.')
cuicGeneralInfoStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoStartTime.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoStartTime.setDescription('This object indicates the CUIC application server starting time.')
cuicGeneralInfoTimeZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoTimeZoneName.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoTimeZoneName.setDescription('This object indicates the time zone where the CUIC server is physically located.')
cuicGeneralInfoSystemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 7), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoSystemStatus.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoSystemStatus.setDescription('This object indicates, last known status of the application.')
cuicGeneralInfoOpsConsoleURL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 8), CiscoURLString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicGeneralInfoOpsConsoleURL.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoOpsConsoleURL.setDescription('This object indicates the URL for CUIC operations Console web server. The operations console offers a web-based, centralized interface for mapping and summarizing the solution network configuration, setting and displaying configuration information on a batch or per-Device basis and storing local copies of those configurations. Other functions include troubleshooting, health monitoring and direct administration.')
cuicGeneralInfoEnableNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 1, 1, 9), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cuicGeneralInfoEnableNotifications.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoEnableNotifications.setDescription('This object specifies the notification status to management station, to disable and alternatively enable outbound notifications on this server.')
cuicLicenseInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2), )
if mibBuilder.loadTexts: cuicLicenseInfoTable.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoTable.setDescription('This table contains a list of CUIC servers where license is instaled on. Usually license is installed on a publisher node.')
cuicLicenseInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicLicenseInfoIndex"))
if mibBuilder.loadTexts: cuicLicenseInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoEntry.setDescription("An entry in this table describes a CUIC server's licensing details. A row will be created in this table, whenever a CUIC license is installed on a server in this cluster.")
cuicLicenseInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicLicenseInfoIndex.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicLicenseInfoType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("trial", 2), ("standard", 3), ("premium", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicLicenseInfoType.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoType.setDescription('This object specifies the type of license installed. trial license exipire in 90 days. standard and premium license supports unlimited number of users but latter supports premium features.')
cuicLicenseInfoStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicLicenseInfoStartTime.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoStartTime.setDescription('This object specifies the CUIC application license install time.')
cuicLicenseInfoExpirationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicLicenseInfoExpirationTime.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoExpirationTime.setDescription('This object specifies the CUIC application license expiration time.')
cuicLicenseInfoHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicLicenseInfoHost.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoHost.setDescription('This object specifies the host name of the publisher node. CUIC license will be installed on publisher node of the CUIC cluster.')
cuicReportingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3), )
if mibBuilder.loadTexts: cuicReportingTable.setStatus('current')
if mibBuilder.loadTexts: cuicReportingTable.setDescription('This table contains a list of CUIC Reporting Engine. CUIC is a reporting software for Cisco Call Center application and reporting engine is a main component of this application.')
cuicReportingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicReportingIndex"))
if mibBuilder.loadTexts: cuicReportingEntry.setStatus('current')
if mibBuilder.loadTexts: cuicReportingEntry.setDescription("An entry in this table describes a CUIC server's report engine statistics. A row will be created in this table, whenever a new server is being added to this cluster. And a row will be deleted when a server is being removed from this cluster.")
cuicReportingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicReportingIndex.setStatus('current')
if mibBuilder.loadTexts: cuicReportingIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicReportingDataSourceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 2), Gauge32()).setUnits('data sources').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingDataSourceCount.setStatus('current')
if mibBuilder.loadTexts: cuicReportingDataSourceCount.setDescription('This object indicates the number of data sources configured on the CUIC application. CUIC application require data source connection to be setup to a database server. CUIC reports read data from an associated and data source.')
cuicReportingEngineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 3), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingEngineStatus.setStatus('current')
if mibBuilder.loadTexts: cuicReportingEngineStatus.setDescription('This object indicates the last known status of the Reporting Engine component. The CUIC Reporting Engine component is responsible for fetching data from data source and pass it to a report.')
cuicReportingHistoricalReportDefinitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 4), Gauge32()).setUnits('report definitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingHistoricalReportDefinitionCount.setStatus('current')
if mibBuilder.loadTexts: cuicReportingHistoricalReportDefinitionCount.setDescription('This object indicates the number of historical report definitions installed on the CUIC application. A Report definition is template for a report. A report has an association with a report definition. CUIC application has two types of report definitions: real time and historical.')
cuicReportingRealTimeReportDefinitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 5), Gauge32()).setUnits('report definitions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingRealTimeReportDefinitionCount.setStatus('current')
if mibBuilder.loadTexts: cuicReportingRealTimeReportDefinitionCount.setDescription('This object indicates the number of real time reports installed on the CUIC application. A Report definition is template for a report. A report has an association with a report definition. CUIC application has two types of reports: real time and historical.')
cuicReportingHistoricalReportRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 6), Gauge32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingHistoricalReportRunning.setStatus('current')
if mibBuilder.loadTexts: cuicReportingHistoricalReportRunning.setDescription('This object indicates the number of historical reports that are currently running.')
cuicReportingHistoricalReportWaiting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 7), Gauge32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingHistoricalReportWaiting.setStatus('current')
if mibBuilder.loadTexts: cuicReportingHistoricalReportWaiting.setDescription('This object indicates the number of historical reports that are currently waiting to execute.')
cuicReportingTotalKickedOffHistoricalReports = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 8), Counter32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingTotalKickedOffHistoricalReports.setStatus('current')
if mibBuilder.loadTexts: cuicReportingTotalKickedOffHistoricalReports.setDescription('This object indicates the total number of historical reports that have been launched.')
cuicReportingRealTimeReportRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 9), Gauge32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingRealTimeReportRunning.setStatus('current')
if mibBuilder.loadTexts: cuicReportingRealTimeReportRunning.setDescription('This object indicates the number of real time reports that are currently running.')
cuicReportingTotalKickedOffRealTimeReports = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 10), Counter32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingTotalKickedOffRealTimeReports.setStatus('current')
if mibBuilder.loadTexts: cuicReportingTotalKickedOffRealTimeReports.setDescription('This object indicates the total number of real time reports that have been launched.')
cuicReportingRealTimeReportWaiting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 3, 1, 11), Gauge32()).setUnits('reports').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicReportingRealTimeReportWaiting.setStatus('current')
if mibBuilder.loadTexts: cuicReportingRealTimeReportWaiting.setDescription('This object indicates the number of real time reports that are currently waiting to be executed.')
cuicSchedulerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4), )
if mibBuilder.loadTexts: cuicSchedulerTable.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerTable.setDescription('This table contains a list of CUIC Scheduler Component. The Scheduler is a component that allows users to run reports at some time in the future. Either once or periodically and have the reports be delivered via email or show in a dashboard.')
cuicSchedulerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicSchedulerIndex"))
if mibBuilder.loadTexts: cuicSchedulerEntry.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerEntry.setDescription("An entry in this table describes a CUIC server's scheduler component health and statistics. A row will be created in this table, whenever Scheduler Component is enabled on a server in this cluster. Usually Scheduler is enabled on publisher node.")
cuicSchedulerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicSchedulerIndex.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicSchedulerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 2), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSchedulerStatus.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerStatus.setDescription('This object indicates the status of the Report Scheduler engine.')
cuicSchedulerEmailServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 3), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSchedulerEmailServerStatus.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerEmailServerStatus.setDescription('This object indicates the status of the emailing server. The Report Scheduler allows users to run reports at some time in future. Either once or periodically and have the report results be delivered via email.')
cuicSchedulerJobsCompletedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 4), Counter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSchedulerJobsCompletedCount.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerJobsCompletedCount.setDescription('This object indicates the number of jobs that the scheduler service has completed.')
cuicSchedulerJobsRunningCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 5), Gauge32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSchedulerJobsRunningCount.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerJobsRunningCount.setDescription('This object indicates the number of jobs that the scheduler service is currently running.')
cuicSchedulerJobsFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 4, 1, 6), Counter32()).setUnits('jobs').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSchedulerJobsFailedCount.setStatus('current')
if mibBuilder.loadTexts: cuicSchedulerJobsFailedCount.setDescription('This object indicates the number of jobs that the scheduler service has failed to complete successfully.')
cuicDbInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5), )
if mibBuilder.loadTexts: cuicDbInfoTable.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoTable.setDescription('This table contains a list database servers. CUIC reporting server uses database to store reports and configurations.')
cuicDbInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicDbInfoIndex"))
if mibBuilder.loadTexts: cuicDbInfoEntry.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoEntry.setDescription("An entry in this table describes a CUIC server's database service disk space usage and status. A row will be created in this table, whenever a new server is being added to this cluster. And a row will be deleted when a server is being removed from this cluster.")
cuicDbInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicDbInfoIndex.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicDbInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1, 2), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDbInfoStatus.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoStatus.setDescription('This object indicates the status of the Database Server.')
cuicDbInfoReplicationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1, 3), CuicServiceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDbInfoReplicationStatus.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoReplicationStatus.setDescription('This object indicates the status of replication server. CUIC replicates a database to other CUIC servers in a cluster.')
cuicDbInfoTmpSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDbInfoTmpSpaceUsed.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoTmpSpaceUsed.setDescription('This object indicates the percentage temporary disk space used.')
cuicDbInfoSpaceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 5, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDbInfoSpaceUsed.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoSpaceUsed.setDescription('This object indicates the percentage database disk space.')
cuicClusterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6), )
if mibBuilder.loadTexts: cuicClusterTable.setStatus('current')
if mibBuilder.loadTexts: cuicClusterTable.setDescription('This table contains a list of cluster information. CUIC can consist of multiple servers that form a cluster.')
cuicClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicClusterIndex"))
if mibBuilder.loadTexts: cuicClusterEntry.setStatus('current')
if mibBuilder.loadTexts: cuicClusterEntry.setDescription('An entry in this table describes a CUIC cluster.')
cuicClusterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicClusterIndex.setStatus('current')
if mibBuilder.loadTexts: cuicClusterIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicClusterName.setStatus('current')
if mibBuilder.loadTexts: cuicClusterName.setDescription('This object specifies the unique name of cluster. At any point in time, the cluster name helps in associating a device to any given cluster.')
cuicClusterServerCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6, 1, 3), Gauge32()).setUnits('servers').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicClusterServerCount.setStatus('current')
if mibBuilder.loadTexts: cuicClusterServerCount.setDescription('This object specifies the number of CUIC servers in this cluster.')
cuicClusterFirstNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 6, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicClusterFirstNodeName.setStatus('current')
if mibBuilder.loadTexts: cuicClusterFirstNodeName.setDescription('This object specifies the hostname of the first node server (Publisher node).')
cuicDatasourceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7), )
if mibBuilder.loadTexts: cuicDatasourceTable.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceTable.setDescription('This table contains a list of data sources configured in CUIC server. The data for the report has to come from a database server. There will be data sources configured in the CUIC application to connect to a particular database.')
cuicDatasourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicDatasourceIndex"))
if mibBuilder.loadTexts: cuicDatasourceEntry.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceEntry.setDescription('An entry in this table describes a CUIC data source configured on this CUIC server. A row will be created in this table, whenever a new data source is being configured on this server. And a row will be deleted when a configured data source is being removed from this server.')
cuicDatasourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: cuicDatasourceIndex.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceIndex.setDescription('This object indicates a row index which is an integer starting from value one.')
cuicDatasourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDatasourceName.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceName.setDescription('This object indicates the name of the data source configured in the CUIC application.')
cuicDatasourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("online", 1), ("offline", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDatasourceStatus.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceStatus.setDescription("This object indicates the status of the datsource. The data sources configured in CUIC application can go offline due to various reasons. The value can be, 'online' The data source is connected and it is online. 'offline' The data source is disconnected and it is offline. 'unknown' The data source connectivity status is unknown.")
cuicDatasourceHost = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDatasourceHost.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceHost.setDescription('This object indicates the host name of database server.')
cuicDatasourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("mssql", 2), ("informix", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicDatasourceType.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceType.setDescription('This object indicates the vendor name. CUIC can support different vendor data sources like MSSQL,IBM Informix etc.')
cuicSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8), )
if mibBuilder.loadTexts: cuicSecurityTable.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityTable.setDescription("This table contains a list of CUIC server's security information. CUIC application is a multiuser system. There can be many number of users and groups configured. This table gives information about users and groups.")
cuicSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1), ).setIndexNames((0, "CISCO-CUICAPPS-MIB", "cuicSecurityIndex"))
if mibBuilder.loadTexts: cuicSecurityEntry.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityEntry.setDescription('An entry in this table describes user and group information of a CUIC server in this cluster. A row will be created in this table, whenever a new server is being added to this cluster. And a row will be deleted when a server is being removed from this cluster.')
cuicSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1, 1), CuicSubsystemId())
if mibBuilder.loadTexts: cuicSecurityIndex.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityIndex.setDescription('This object indicates the sub-system identifier assigned to the CUIC reporting component.')
cuicSecurityUsersConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1, 2), Gauge32()).setUnits('users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSecurityUsersConfigured.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityUsersConfigured.setDescription('This object indicates number of users configured to access CUIC application.')
cuicSecurityUsersLoggedIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1, 3), Gauge32()).setUnits('users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSecurityUsersLoggedIn.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityUsersLoggedIn.setDescription('This object indicates the number of users currently logged in.')
cuicSecurityLoginFailedAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSecurityLoginFailedAttempts.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityLoginFailedAttempts.setDescription('This object indicates the number of rejected login attempts.')
cuicSecurityGroupsConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 8, 1, 5), Gauge32()).setUnits('groups').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicSecurityGroupsConfigured.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityGroupsConfigured.setDescription('This object indicates the overall number of groups configured on this server. There can be different groups with various privileges; Like Admin, Restricted, Designer etc. Each group can share objects like Reports, Report Definition etc.')
cuicThreadPoolInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 9))
cuicEnvInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10))
cuicNotificationInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11))
cuicThreadsMaxAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 9, 1), Gauge32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicThreadsMaxAvailable.setStatus('current')
if mibBuilder.loadTexts: cuicThreadsMaxAvailable.setDescription("This object indicates the maximum number of threads available to the CUIC web server's thread pool manager.")
cuicThreadsRunning = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 9, 2), Gauge32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicThreadsRunning.setStatus('current')
if mibBuilder.loadTexts: cuicThreadsRunning.setDescription('This object indicates the number of threads that are currently running tasks. This counter is useful in monitoring performance of the server. If the number of threads is close to maximum available, then next reporting request will have to wait till a thread becomes free.')
cuicQueuedTasks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 9, 3), Gauge32()).setUnits('tasks').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicQueuedTasks.setStatus('current')
if mibBuilder.loadTexts: cuicQueuedTasks.setDescription('This object indicates the number of queued tasks. A task is a job, performed by one or more thread.')
cuicQueuedTasksMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 9, 4), Gauge32()).setUnits('tasks').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicQueuedTasksMax.setStatus('current')
if mibBuilder.loadTexts: cuicQueuedTasksMax.setDescription('This object indicates the maximum number of queued tasks.')
cuicWaErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 1), Counter32()).setUnits('errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicWaErrors.setStatus('current')
if mibBuilder.loadTexts: cuicWaErrors.setDescription('This object indicates the total number of HTTP errors (for example, 401 Unauthorized) encountered by a CUIC-related web application.')
cuicWaSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicWaSessionsActive.setStatus('current')
if mibBuilder.loadTexts: cuicWaSessionsActive.setDescription('This object indicates the number of currently active (in use) sessions the web application currently has')
cuicJvmPercentCPUTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicJvmPercentCPUTime.setStatus('current')
if mibBuilder.loadTexts: cuicJvmPercentCPUTime.setDescription('This object indicates the percentage of CPU utilized by the Tomcat JVM. This object is for the CUIC Tomcat JVM object.')
cuicJvmMemoryFree = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 4), Gauge32()).setUnits('kilo bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicJvmMemoryFree.setStatus('current')
if mibBuilder.loadTexts: cuicJvmMemoryFree.setDescription('This object indicates the amount of free dynamic memory in the CUIC Tomcat Java Virtual Machine.')
cuicJvmMemoryTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 5), Gauge32()).setUnits('kilo bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicJvmMemoryTotal.setStatus('current')
if mibBuilder.loadTexts: cuicJvmMemoryTotal.setDescription('This object indicates the Tomcat Java Virtual Machine current total dynamic memory including free and in-use memory.')
cuicJvmMemoryMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 6), Gauge32()).setUnits('kilo bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicJvmMemoryMax.setStatus('current')
if mibBuilder.loadTexts: cuicJvmMemoryMax.setDescription('This object indicates the CUIC Tomcat Java Virtual Machine maximum dynamic size.')
cuicTomcatThreadsBusy = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 7), Gauge32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicTomcatThreadsBusy.setStatus('current')
if mibBuilder.loadTexts: cuicTomcatThreadsBusy.setDescription("This object indicates the CUIC Tomcat Connector's current number of busy/in-use request processing threads.")
cuicTomcatThreadsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 8), Gauge32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicTomcatThreadsTotal.setStatus('current')
if mibBuilder.loadTexts: cuicTomcatThreadsTotal.setDescription("This object indicates the CUIC tomcat Connector's current total number of request processing threads, including available and in-use threads.")
cuicTomcatThreadsMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 10, 9), Gauge32()).setUnits('threads').setMaxAccess("readonly")
if mibBuilder.loadTexts: cuicTomcatThreadsMax.setStatus('current')
if mibBuilder.loadTexts: cuicTomcatThreadsMax.setDescription('This object indicates the Connector maximum number of request processing threads. Each incoming request on a CUIC -related web page requires a thread for the duration of that request. If more simultaneous requests are received than can be handled by the currently available request processing threads, additional threads will be created up to the configured maximum shown in this counter.')
cuicEventId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventId.setStatus('current')
if mibBuilder.loadTexts: cuicEventId.setDescription('The event ID is the unique notification message identifier that is assigned by the CUIC application. This identifier is unique for each different notification but consistent for each instance of the same notification. This id can be used to correlate raise and clear notification.')
cuicEventHostName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 2), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventHostName.setStatus('current')
if mibBuilder.loadTexts: cuicEventHostName.setDescription('The event host name object specifies the host name or the fully qualified domain name of the CUIC server from which this event originated.')
cuicEventAppName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 3), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventAppName.setStatus('current')
if mibBuilder.loadTexts: cuicEventAppName.setDescription('The event application name object specifies the service-specific name of the functional service that generated this notification.')
cuicEventName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 4), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventName.setStatus('current')
if mibBuilder.loadTexts: cuicEventName.setDescription('The event name object specifies the service-specific name of the CUIC service notification message. The object value is used to group and correlate similar notifications.')
cuicEventState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("raise", 1), ("clear", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventState.setStatus('current')
if mibBuilder.loadTexts: cuicEventState.setDescription("The event state object identifies the state (not to be confused with severity) of the notification and potentially the current state of the functional component that generated the notification. The possible states are: 'raise': A raise state identifies a notification received as a result of a health-impacting condition, such as a process failure. A subsequent clear state notification will follow when the error condition is resolved. 'clear': The clear state indicates that the condition which generated a previous raise notification has been resolved.")
cuicEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("informational", 7), ("debug", 8)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventSeverity.setStatus('current')
if mibBuilder.loadTexts: cuicEventSeverity.setDescription("The event severity object indicates the severity level of this notification. The severity levels are: 'emergency': The notification indicates that a devastating failure has occurred; the system or service is unusable. Immediate operator intervention is required. 'alert': The notification indicates that a devastating failure is imminent that will render the system unusable. Immediate operator attention is necessary. 'critical': The notification indicates that a service impacting failure is likely to occur soon; an error has occurred that was not appropriately handled by the system. Operator attention is needed as soon as possible. 'error': The notification contains important operational state information and may indicate that the system has experienced a temporary impairment or an error that was appropriately handled by the system. An operator should review the notification soon to determine if action is needed. 'warning': The notification contains important operational state information that may be a precursor to an error occurrence. An operator should review the notification soon to determine if action is needed. 'notice': The notification contains health or operational state information that may be pertinent to the health of the system but does not require the attention of the administrator at this time. 'informational': The notification contains interesting system-level information that is valuable to an administrator, however, the event itself does not indicate a failure or impairment condition. 'debug': The notification provides supplemental information that may be beneficial toward diagnosing or resolving a problem but does not in itself provide operational health status.")
cuicEventTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 7), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventTimestamp.setStatus('current')
if mibBuilder.loadTexts: cuicEventTimestamp.setDescription('The event time stamp object specifies the date and time that the notification was generated on the originating device.')
cuicEventText = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 718, 1, 11, 8), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cuicEventText.setStatus('current')
if mibBuilder.loadTexts: cuicEventText.setDescription('The event text is the full text of the notification. This text includes a description of the event that was generated, component state information and potentially a brief description of administrative action that may be necessary to correct the condition that caused the event to occur.')
ciscoCuicappsMIBEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 718, 0, 1)).setObjects(("CISCO-CUICAPPS-MIB", "cuicEventId"), ("CISCO-CUICAPPS-MIB", "cuicEventHostName"), ("CISCO-CUICAPPS-MIB", "cuicEventAppName"), ("CISCO-CUICAPPS-MIB", "cuicEventName"), ("CISCO-CUICAPPS-MIB", "cuicEventState"), ("CISCO-CUICAPPS-MIB", "cuicEventSeverity"), ("CISCO-CUICAPPS-MIB", "cuicEventTimestamp"), ("CISCO-CUICAPPS-MIB", "cuicEventText"))
if mibBuilder.loadTexts: ciscoCuicappsMIBEvent.setStatus('current')
if mibBuilder.loadTexts: ciscoCuicappsMIBEvent.setDescription('This notification indicates an unusual condition occur that potentially, can affect the functioning of a service in CUIC. Notification describes the operation state information of a service when such service impacting conditions occur. Notification is sent by a functional service of the CUIC application.')
ciscoCuicappsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 1))
ciscoCuicAppsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 1, 1)).setObjects(("CISCO-CUICAPPS-MIB", "cuicGeneralInfoTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicLicenseInfoTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicReportingTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicReportSchedulerTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicDbInfoTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicClusterInfoTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicDatasourceInfoTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicSecurityTableGroup"), ("CISCO-CUICAPPS-MIB", "cuicNotificationInfoGroup"), ("CISCO-CUICAPPS-MIB", "ciscoCuicappsMIBEventGroup"), ("CISCO-CUICAPPS-MIB", "cuicThreadPoolInfoGroup"), ("CISCO-CUICAPPS-MIB", "cuicEnvInfoGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCuicAppsMIBCompliance = ciscoCuicAppsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoCuicAppsMIBCompliance.setDescription('This object is the compliance statement for entities which implement the Cisco CUIC Apps MIB.')
ciscoCuicappsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2))
cuicGeneralInfoTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 1)).setObjects(("CISCO-CUICAPPS-MIB", "cuicGeneralInfoServerName"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoServerDescription"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoVersion"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoStartTime"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoTimeZoneName"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoSystemStatus"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoOpsConsoleURL"), ("CISCO-CUICAPPS-MIB", "cuicGeneralInfoEnableNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicGeneralInfoTableGroup = cuicGeneralInfoTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicGeneralInfoTableGroup.setDescription('The general info group defines the general CUIC objects. All servers will populate these objects.')
cuicLicenseInfoTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 2)).setObjects(("CISCO-CUICAPPS-MIB", "cuicLicenseInfoType"), ("CISCO-CUICAPPS-MIB", "cuicLicenseInfoStartTime"), ("CISCO-CUICAPPS-MIB", "cuicLicenseInfoExpirationTime"), ("CISCO-CUICAPPS-MIB", "cuicLicenseInfoHost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicLicenseInfoTableGroup = cuicLicenseInfoTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicLicenseInfoTableGroup.setDescription('The licensing information group defines the set of objects for the licensing system. All CUIC servers will populate these objects.')
cuicReportingTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 3)).setObjects(("CISCO-CUICAPPS-MIB", "cuicReportingDataSourceCount"), ("CISCO-CUICAPPS-MIB", "cuicReportingEngineStatus"), ("CISCO-CUICAPPS-MIB", "cuicReportingHistoricalReportDefinitionCount"), ("CISCO-CUICAPPS-MIB", "cuicReportingRealTimeReportDefinitionCount"), ("CISCO-CUICAPPS-MIB", "cuicReportingHistoricalReportRunning"), ("CISCO-CUICAPPS-MIB", "cuicReportingHistoricalReportWaiting"), ("CISCO-CUICAPPS-MIB", "cuicReportingTotalKickedOffHistoricalReports"), ("CISCO-CUICAPPS-MIB", "cuicReportingRealTimeReportRunning"), ("CISCO-CUICAPPS-MIB", "cuicReportingTotalKickedOffRealTimeReports"), ("CISCO-CUICAPPS-MIB", "cuicReportingRealTimeReportWaiting"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicReportingTableGroup = cuicReportingTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicReportingTableGroup.setDescription('The reporting group defines the set of objects for the reporting service. All CUIC servers populate these objects.')
cuicReportSchedulerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 4)).setObjects(("CISCO-CUICAPPS-MIB", "cuicSchedulerStatus"), ("CISCO-CUICAPPS-MIB", "cuicSchedulerEmailServerStatus"), ("CISCO-CUICAPPS-MIB", "cuicSchedulerJobsCompletedCount"), ("CISCO-CUICAPPS-MIB", "cuicSchedulerJobsRunningCount"), ("CISCO-CUICAPPS-MIB", "cuicSchedulerJobsFailedCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicReportSchedulerTableGroup = cuicReportSchedulerTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicReportSchedulerTableGroup.setDescription('The reporting scheduler group defines the set of objects for the report scheduler component. All CUIC servers populate these objects.')
cuicDbInfoTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 5)).setObjects(("CISCO-CUICAPPS-MIB", "cuicDbInfoStatus"), ("CISCO-CUICAPPS-MIB", "cuicDbInfoReplicationStatus"), ("CISCO-CUICAPPS-MIB", "cuicDbInfoTmpSpaceUsed"), ("CISCO-CUICAPPS-MIB", "cuicDbInfoSpaceUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicDbInfoTableGroup = cuicDbInfoTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicDbInfoTableGroup.setDescription('The db info group defines the set of objects for the database service. All CUIC servers populate these objects.')
cuicClusterInfoTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 6)).setObjects(("CISCO-CUICAPPS-MIB", "cuicClusterName"), ("CISCO-CUICAPPS-MIB", "cuicClusterServerCount"), ("CISCO-CUICAPPS-MIB", "cuicClusterFirstNodeName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicClusterInfoTableGroup = cuicClusterInfoTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicClusterInfoTableGroup.setDescription('The cluster info group defines the set of objects for the CUIC cluster. All CUIC servers populate these objects.')
cuicDatasourceInfoTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 7)).setObjects(("CISCO-CUICAPPS-MIB", "cuicDatasourceName"), ("CISCO-CUICAPPS-MIB", "cuicDatasourceStatus"), ("CISCO-CUICAPPS-MIB", "cuicDatasourceHost"), ("CISCO-CUICAPPS-MIB", "cuicDatasourceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicDatasourceInfoTableGroup = cuicDatasourceInfoTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicDatasourceInfoTableGroup.setDescription('The data source info group defines the data source related objects. All CUIC servers populate these objects.')
cuicSecurityTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 8)).setObjects(("CISCO-CUICAPPS-MIB", "cuicSecurityUsersConfigured"), ("CISCO-CUICAPPS-MIB", "cuicSecurityUsersLoggedIn"), ("CISCO-CUICAPPS-MIB", "cuicSecurityLoginFailedAttempts"), ("CISCO-CUICAPPS-MIB", "cuicSecurityGroupsConfigured"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicSecurityTableGroup = cuicSecurityTableGroup.setStatus('current')
if mibBuilder.loadTexts: cuicSecurityTableGroup.setDescription('The security group defines the set of objects related to users and groups. All CUIC servers populate these objects.')
cuicNotificationInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 9)).setObjects(("CISCO-CUICAPPS-MIB", "cuicEventId"), ("CISCO-CUICAPPS-MIB", "cuicEventHostName"), ("CISCO-CUICAPPS-MIB", "cuicEventAppName"), ("CISCO-CUICAPPS-MIB", "cuicEventName"), ("CISCO-CUICAPPS-MIB", "cuicEventState"), ("CISCO-CUICAPPS-MIB", "cuicEventSeverity"), ("CISCO-CUICAPPS-MIB", "cuicEventTimestamp"), ("CISCO-CUICAPPS-MIB", "cuicEventText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicNotificationInfoGroup = cuicNotificationInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cuicNotificationInfoGroup.setDescription('This group defines the set of Notification objects for CUIC.')
ciscoCuicappsMIBEventGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 10)).setObjects(("CISCO-CUICAPPS-MIB", "ciscoCuicappsMIBEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCuicappsMIBEventGroup = ciscoCuicappsMIBEventGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoCuicappsMIBEventGroup.setDescription('This group defines the notification types defined in this MIB.')
cuicThreadPoolInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 11)).setObjects(("CISCO-CUICAPPS-MIB", "cuicThreadsMaxAvailable"), ("CISCO-CUICAPPS-MIB", "cuicThreadsRunning"), ("CISCO-CUICAPPS-MIB", "cuicQueuedTasks"), ("CISCO-CUICAPPS-MIB", "cuicQueuedTasksMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicThreadPoolInfoGroup = cuicThreadPoolInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cuicThreadPoolInfoGroup.setDescription('The thread pool information group defines the set of objects for the CUIC reporting engine thread pool. All servers will populate these objects.')
cuicEnvInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 718, 2, 2, 12)).setObjects(("CISCO-CUICAPPS-MIB", "cuicWaErrors"), ("CISCO-CUICAPPS-MIB", "cuicWaSessionsActive"), ("CISCO-CUICAPPS-MIB", "cuicJvmPercentCPUTime"), ("CISCO-CUICAPPS-MIB", "cuicJvmMemoryFree"), ("CISCO-CUICAPPS-MIB", "cuicJvmMemoryTotal"), ("CISCO-CUICAPPS-MIB", "cuicJvmMemoryMax"), ("CISCO-CUICAPPS-MIB", "cuicTomcatThreadsBusy"), ("CISCO-CUICAPPS-MIB", "cuicTomcatThreadsTotal"), ("CISCO-CUICAPPS-MIB", "cuicTomcatThreadsMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cuicEnvInfoGroup = cuicEnvInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cuicEnvInfoGroup.setDescription('The EnvInfo group defines the set of objects for the Runtime tomcat info. All servers will populate these objects.')
mibBuilder.exportSymbols("CISCO-CUICAPPS-MIB", cuicLicenseInfoHost=cuicLicenseInfoHost, cuicSchedulerJobsRunningCount=cuicSchedulerJobsRunningCount, cuicClusterTable=cuicClusterTable, cuicClusterEntry=cuicClusterEntry, cuicSchedulerTable=cuicSchedulerTable, ciscoCuicappsMIBConform=ciscoCuicappsMIBConform, cuicReportingRealTimeReportDefinitionCount=cuicReportingRealTimeReportDefinitionCount, cuicReportingEngineStatus=cuicReportingEngineStatus, cuicEventSeverity=cuicEventSeverity, cuicGeneralInfoVersion=cuicGeneralInfoVersion, cuicSecurityTableGroup=cuicSecurityTableGroup, cuicTomcatThreadsBusy=cuicTomcatThreadsBusy, CuicSubsystemId=CuicSubsystemId, cuicThreadPoolInfoGroup=cuicThreadPoolInfoGroup, cuicReportingTable=cuicReportingTable, cuicEventState=cuicEventState, cuicQueuedTasksMax=cuicQueuedTasksMax, cuicEventText=cuicEventText, cuicJvmMemoryFree=cuicJvmMemoryFree, cuicGeneralInfoTableGroup=cuicGeneralInfoTableGroup, cuicGeneralInfoEnableNotifications=cuicGeneralInfoEnableNotifications, cuicClusterInfoTableGroup=cuicClusterInfoTableGroup, cuicGeneralInfoIndex=cuicGeneralInfoIndex, cuicDbInfoStatus=cuicDbInfoStatus, cuicLicenseInfoEntry=cuicLicenseInfoEntry, cuicSecurityEntry=cuicSecurityEntry, cuicReportingRealTimeReportRunning=cuicReportingRealTimeReportRunning, cuicDbInfoEntry=cuicDbInfoEntry, cuicDatasourceTable=cuicDatasourceTable, cuicEventAppName=cuicEventAppName, ciscoCuicappsMIBNotifs=ciscoCuicappsMIBNotifs, cuicDatasourceStatus=cuicDatasourceStatus, cuicEventName=cuicEventName, cuicSchedulerIndex=cuicSchedulerIndex, cuicEnvInfo=cuicEnvInfo, cuicQueuedTasks=cuicQueuedTasks, cuicSecurityLoginFailedAttempts=cuicSecurityLoginFailedAttempts, cuicThreadPoolInfo=cuicThreadPoolInfo, cuicGeneralInfoTable=cuicGeneralInfoTable, cuicReportingEntry=cuicReportingEntry, cuicEnvInfoGroup=cuicEnvInfoGroup, cuicLicenseInfoExpirationTime=cuicLicenseInfoExpirationTime, cuicSchedulerEntry=cuicSchedulerEntry, cuicTomcatThreadsTotal=cuicTomcatThreadsTotal, cuicGeneralInfoTimeZoneName=cuicGeneralInfoTimeZoneName, cuicSchedulerEmailServerStatus=cuicSchedulerEmailServerStatus, cuicReportingHistoricalReportWaiting=cuicReportingHistoricalReportWaiting, cuicLicenseInfoIndex=cuicLicenseInfoIndex, cuicDatasourceInfoTableGroup=cuicDatasourceInfoTableGroup, cuicSchedulerStatus=cuicSchedulerStatus, cuicEventId=cuicEventId, cuicDbInfoTable=cuicDbInfoTable, cuicJvmPercentCPUTime=cuicJvmPercentCPUTime, cuicThreadsRunning=cuicThreadsRunning, cuicGeneralInfoStartTime=cuicGeneralInfoStartTime, cuicReportingHistoricalReportDefinitionCount=cuicReportingHistoricalReportDefinitionCount, cuicLicenseInfoType=cuicLicenseInfoType, cuicSchedulerJobsCompletedCount=cuicSchedulerJobsCompletedCount, cuicSecurityIndex=cuicSecurityIndex, cuicReportingRealTimeReportWaiting=cuicReportingRealTimeReportWaiting, cuicLicenseInfoTable=cuicLicenseInfoTable, cuicReportingHistoricalReportRunning=cuicReportingHistoricalReportRunning, cuicEventTimestamp=cuicEventTimestamp, PYSNMP_MODULE_ID=ciscoCuicappsMIB, ciscoCuicappsMIBEvent=ciscoCuicappsMIBEvent, cuicReportingDataSourceCount=cuicReportingDataSourceCount, cuicWaErrors=cuicWaErrors, cuicClusterServerCount=cuicClusterServerCount, ciscoCuicAppsMIBCompliance=ciscoCuicAppsMIBCompliance, cuicGeneralInfoServerDescription=cuicGeneralInfoServerDescription, cuicJvmMemoryMax=cuicJvmMemoryMax, cuicDatasourceHost=cuicDatasourceHost, cuicClusterName=cuicClusterName, ciscoCuicappsMIB=ciscoCuicappsMIB, cuicDbInfoIndex=cuicDbInfoIndex, cuicReportingTotalKickedOffHistoricalReports=cuicReportingTotalKickedOffHistoricalReports, ciscoCuicappsMIBObjects=ciscoCuicappsMIBObjects, cuicDatasourceType=cuicDatasourceType, cuicSecurityGroupsConfigured=cuicSecurityGroupsConfigured, cuicReportingIndex=cuicReportingIndex, cuicTomcatThreadsMax=cuicTomcatThreadsMax, ciscoCuicappsMIBGroups=ciscoCuicappsMIBGroups, cuicClusterFirstNodeName=cuicClusterFirstNodeName, cuicSchedulerJobsFailedCount=cuicSchedulerJobsFailedCount, cuicReportSchedulerTableGroup=cuicReportSchedulerTableGroup, CuicServiceStatus=CuicServiceStatus, ciscoCuicappsMIBEventGroup=ciscoCuicappsMIBEventGroup, cuicDatasourceEntry=cuicDatasourceEntry, cuicGeneralInfoServerName=cuicGeneralInfoServerName, cuicDbInfoReplicationStatus=cuicDbInfoReplicationStatus, cuicDatasourceName=cuicDatasourceName, cuicLicenseInfoTableGroup=cuicLicenseInfoTableGroup, cuicGeneralInfoOpsConsoleURL=cuicGeneralInfoOpsConsoleURL, cuicGeneralInfoEntry=cuicGeneralInfoEntry, cuicReportingTableGroup=cuicReportingTableGroup, cuicLicenseInfoStartTime=cuicLicenseInfoStartTime, cuicSecurityUsersConfigured=cuicSecurityUsersConfigured, cuicNotificationInfo=cuicNotificationInfo, cuicEventHostName=cuicEventHostName, cuicDbInfoTableGroup=cuicDbInfoTableGroup, cuicClusterIndex=cuicClusterIndex, cuicThreadsMaxAvailable=cuicThreadsMaxAvailable, cuicDbInfoSpaceUsed=cuicDbInfoSpaceUsed, cuicNotificationInfoGroup=cuicNotificationInfoGroup, cuicJvmMemoryTotal=cuicJvmMemoryTotal, cuicGeneralInfoSystemStatus=cuicGeneralInfoSystemStatus, cuicWaSessionsActive=cuicWaSessionsActive, cuicReportingTotalKickedOffRealTimeReports=cuicReportingTotalKickedOffRealTimeReports, cuicDbInfoTmpSpaceUsed=cuicDbInfoTmpSpaceUsed, cuicSecurityTable=cuicSecurityTable, ciscoCuicappsMIBCompliances=ciscoCuicappsMIBCompliances, cuicSecurityUsersLoggedIn=cuicSecurityUsersLoggedIn, cuicDatasourceIndex=cuicDatasourceIndex)
