#
# PySNMP MIB module APTIS-FRAME-RELAY-DTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APTIS-FRAME-RELAY-DTE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:24:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
aptis_generic, = mibBuilder.importSymbols("APTIS-MIB", "aptis-generic")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Gauge32, TimeTicks, ModuleIdentity, Counter64, Counter32, Unsigned32, IpAddress, Bits, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter64", "Counter32", "Unsigned32", "IpAddress", "Bits", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aptisFrameRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 2637, 2, 6))
class Index(Integer32):
    pass

class DLCI(Integer32):
    pass

aptisDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1), )
if mibBuilder.loadTexts: aptisDlcmiTable.setReference('Draft American National Standard T1.617-1991, Annex D')
if mibBuilder.loadTexts: aptisDlcmiTable.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiTable.setDescription('The Parameters for the Data Link Connection Management Interface corresponding to any given ifEntry. These parameters are logical extensions to those in object frDlcmiTable.')
aptisDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1), ).setIndexNames((0, "APTIS-FRAME-RELAY-DTE-MIB", "aptisDlcmiIfIndex"))
if mibBuilder.loadTexts: aptisDlcmiEntry.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiEntry.setDescription('The Parameters for the Data Link Connection Management Interface.')
aptisDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiIfIndex.setDescription('The ifIndex value of the corresponding ifEntry.')
aptisDlcmiXmtFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiXmtFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiXmtFramesDropped.setDescription('The number of Tranmsitted frames dropped on this interface.')
aptisDlcmiXmtOctetsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiXmtOctetsDropped.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiXmtOctetsDropped.setDescription('The number of Tranmsitted octets dropped on this interface.')
aptisDlcmiRcvFramesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvFramesDropped.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvFramesDropped.setDescription('The number of Received frames dropped on this interface.')
aptisDlcmiRcvOctetsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvOctetsDropped.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvOctetsDropped.setDescription('The number of Received octets dropped on this interface.')
aptisDlcmiRcvInvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvInvFrames.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvInvFrames.setDescription('The number of invalid frames received on this interface.')
aptisDlcmiRcvShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvShortFrames.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvShortFrames.setDescription('The number of frames containing less than 5 octets received on this interface.')
aptisDlcmiRcvLongFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvLongFrames.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvLongFrames.setDescription('The number of frames containing greater than 8193 octets received on this interface.')
aptisDlcmiRcvInvalidDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvInvalidDLCI.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvInvalidDLCI.setDescription('The number of frames with an invalid DLCI received on this interface.')
aptisDlcmiRcvUnknownDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvUnknownDLCI.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvUnknownDLCI.setDescription('The number of frames with an unknown DLCI received on this interface.')
aptisDlcmiRcvUnknownErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiRcvUnknownErrs.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiRcvUnknownErrs.setDescription('The number of frames with other errors received on this interface.')
aptisDlcmiLMIStatusEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLMIStatusEnquiries.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLMIStatusEnquiries.setDescription('The total number of LMI status enquiries sent by the DTE or received by the DCE on this interface.')
aptisDlcmiLMIFullStatusEnquiries = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLMIFullStatusEnquiries.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLMIFullStatusEnquiries.setDescription('The total number of LMI full status enquiries sent by the DTE or received by the DCE on this interface.')
aptisDlcmiLMIStatusResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLMIStatusResponses.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLMIStatusResponses.setDescription('The total number of LMI status responses received by the DTE or sent by the DCE on this interface.')
aptisDlcmiLMIFullStatusResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLMIFullStatusResponses.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLMIFullStatusResponses.setDescription('The total number of LMI full status responses received by the DTE or sent by the DCE on this interface.')
aptisDlcmiLMIUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLMIUpdates.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLMIUpdates.setDescription('The total number of LMI status updates received by the DTE or sent by the DCE on this interface.')
aptisDlcmiUnknownLMIMessagesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiUnknownLMIMessagesRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiUnknownLMIMessagesRcvd.setDescription('The total number of unknown LMI messages received on this interface.')
aptisDlcmiBadLMIMessagesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiBadLMIMessagesRcvd.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiBadLMIMessagesRcvd.setDescription('The total number of LMI messages received with unknown or missing required Information Elements.')
aptisDlcmiLostLMISequences = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiLostLMISequences.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiLostLMISequences.setDescription('The total number of times a loss of sequencing in received LMI messages was detected by the DTE on this interface.')
aptisDlcmiMissingLMIResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiMissingLMIResponses.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiMissingLMIResponses.setDescription('The total number of times a timeout occurred without receiving a response to an LMI request by the DTE on this interface.')
aptisDlcmiUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 1, 1, 21), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisDlcmiUpTime.setStatus('mandatory')
if mibBuilder.loadTexts: aptisDlcmiUpTime.setDescription("The duration that this data link has existed. This is the difference between the value of sysUpTime at the time of a 'get' and the value of sysUpTime at the time that the link level object was initialized.")
aptisCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2), )
if mibBuilder.loadTexts: aptisCircuitTable.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitTable.setDescription('A table containing information about specific Data Link Connection Identifiers and corresponding virtual circuits. These parameters are logical extensions to those in object frCircuitTable.')
aptisCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1), ).setIndexNames((0, "APTIS-FRAME-RELAY-DTE-MIB", "aptisCircuitIfIndex"), (0, "APTIS-FRAME-RELAY-DTE-MIB", "aptisCircuitDlci"))
if mibBuilder.loadTexts: aptisCircuitEntry.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitEntry.setDescription('The information regarding a single Data Link Connection Identifier.')
aptisCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 1), Index()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitIfIndex.setDescription('The ifIndex Value of the ifEntry this virtual circuit is layered onto.')
aptisCircuitDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 2), DLCI()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitDlci.setReference('Draft American National Standard T1.618-1991, Section 3.3.6')
if mibBuilder.loadTexts: aptisCircuitDlci.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitDlci.setDescription('The Data Link Connection Identifier for this virtual circuit.')
aptisCircuitReceivedRBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitReceivedRBits.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitReceivedRBits.setDescription('Number of times a status report for this circuit was received with the R-bit (congestion) set since the circuit was created.')
aptisCircuitRateFallbacks = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitRateFallbacks.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitRateFallbacks.setDescription('The number of times that the insertion rate was lowered (due to network congestion reports) since the circuit was created.')
aptisCircuitRateFallforwards = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitRateFallforwards.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitRateFallforwards.setDescription('The number of times that the insertion rate was lowered (due to lack of network congestion reports) since the circuit was created.')
aptisCircuitFramesDroppedQueueFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitFramesDroppedQueueFull.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitFramesDroppedQueueFull.setDescription('Number of frames which were dropped on this circuit because the hold queue was full.')
aptisCircuitNormalSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitNormalSentOctets.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitNormalSentOctets.setDescription('Number of octets sent on this virtual circuit within the Commited Information Rate since the circuit was created.')
aptisCircuitExcessSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitExcessSentOctets.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitExcessSentOctets.setDescription('Number of octets sent on this virtual circuit above the Commited Information Rate, but below the Excess Information Rate since the circuit was created.')
aptisCircuitFramesQueuedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitFramesQueuedBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitFramesQueuedBandwidth.setDescription('Number of frames which were queued by the circuit in preference to exceeding the allowed burst rate on this circuit since the circuit was created.')
aptisCircuitOctetsQueuedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitOctetsQueuedBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitOctetsQueuedBandwidth.setDescription('Number of octets placed on the hold queue since the circuit was created. Data is placed on the hold queue when the data would exceed the Excess Information Rate during a given time period.')
aptisCircuitFramesOnQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitFramesOnQueue.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitFramesOnQueue.setDescription('Number of frames currently on the transmit hold queue.')
aptisCircuitReceivedUnknownProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownProtocol.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownProtocol.setDescription('Number of frames received and discarded due to unkown protocol ID.')
aptisCircuitSentUnknownProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitSentUnknownProtocol.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitSentUnknownProtocol.setDescription('Number of frames requested to be sent but were discarded due to an unknown protocol ID.')
aptisCircuitReceivedUnknownFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownFrame.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownFrame.setDescription('Number of frames received and dropped due to an unknown frame type.')
aptisCircuitReceivedUnknownOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownOrg.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitReceivedUnknownOrg.setDescription('Number of frames received and dropped due to an unknown organization unique identifier.')
aptisCircuitNormalSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitNormalSentFrames.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitNormalSentFrames.setDescription('Number of frames sent on this virtual circuit within the Commited Information Rate since the circuit was created.')
aptisCircuitExcessSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitExcessSentFrames.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitExcessSentFrames.setDescription('Number of frames sent on this virtual circuit above the Commited Information Rate, but below the Excess Information Rate since the circuit was created.')
aptisCircuitOctetsDroppedQueueFull = MibTableColumn((1, 3, 6, 1, 4, 1, 2637, 2, 6, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aptisCircuitOctetsDroppedQueueFull.setStatus('mandatory')
if mibBuilder.loadTexts: aptisCircuitOctetsDroppedQueueFull.setDescription('Number of octets which were dropped on this circuit because the hold queue was full.')
mibBuilder.exportSymbols("APTIS-FRAME-RELAY-DTE-MIB", aptisDlcmiXmtFramesDropped=aptisDlcmiXmtFramesDropped, aptisCircuitRateFallforwards=aptisCircuitRateFallforwards, aptisCircuitFramesOnQueue=aptisCircuitFramesOnQueue, aptisDlcmiLMIStatusResponses=aptisDlcmiLMIStatusResponses, aptisCircuitEntry=aptisCircuitEntry, aptisCircuitOctetsQueuedBandwidth=aptisCircuitOctetsQueuedBandwidth, aptisCircuitSentUnknownProtocol=aptisCircuitSentUnknownProtocol, aptisDlcmiRcvUnknownErrs=aptisDlcmiRcvUnknownErrs, aptisCircuitNormalSentFrames=aptisCircuitNormalSentFrames, aptisDlcmiRcvShortFrames=aptisDlcmiRcvShortFrames, aptisDlcmiLMIFullStatusResponses=aptisDlcmiLMIFullStatusResponses, aptisCircuitIfIndex=aptisCircuitIfIndex, aptisCircuitExcessSentFrames=aptisCircuitExcessSentFrames, aptisDlcmiMissingLMIResponses=aptisDlcmiMissingLMIResponses, aptisCircuitReceivedUnknownProtocol=aptisCircuitReceivedUnknownProtocol, aptisDlcmiIfIndex=aptisDlcmiIfIndex, aptisCircuitReceivedUnknownFrame=aptisCircuitReceivedUnknownFrame, aptisCircuitDlci=aptisCircuitDlci, aptisDlcmiLMIUpdates=aptisDlcmiLMIUpdates, aptisCircuitOctetsDroppedQueueFull=aptisCircuitOctetsDroppedQueueFull, aptisCircuitRateFallbacks=aptisCircuitRateFallbacks, aptisDlcmiTable=aptisDlcmiTable, aptisFrameRelay=aptisFrameRelay, aptisDlcmiUpTime=aptisDlcmiUpTime, aptisDlcmiRcvOctetsDropped=aptisDlcmiRcvOctetsDropped, aptisDlcmiRcvLongFrames=aptisDlcmiRcvLongFrames, DLCI=DLCI, aptisDlcmiEntry=aptisDlcmiEntry, aptisCircuitNormalSentOctets=aptisCircuitNormalSentOctets, aptisDlcmiBadLMIMessagesRcvd=aptisDlcmiBadLMIMessagesRcvd, aptisDlcmiLMIStatusEnquiries=aptisDlcmiLMIStatusEnquiries, aptisDlcmiXmtOctetsDropped=aptisDlcmiXmtOctetsDropped, aptisCircuitTable=aptisCircuitTable, aptisDlcmiUnknownLMIMessagesRcvd=aptisDlcmiUnknownLMIMessagesRcvd, aptisCircuitReceivedRBits=aptisCircuitReceivedRBits, aptisCircuitFramesDroppedQueueFull=aptisCircuitFramesDroppedQueueFull, aptisCircuitFramesQueuedBandwidth=aptisCircuitFramesQueuedBandwidth, aptisDlcmiRcvInvFrames=aptisDlcmiRcvInvFrames, aptisCircuitExcessSentOctets=aptisCircuitExcessSentOctets, Index=Index, aptisDlcmiRcvUnknownDLCI=aptisDlcmiRcvUnknownDLCI, aptisDlcmiRcvFramesDropped=aptisDlcmiRcvFramesDropped, aptisDlcmiLMIFullStatusEnquiries=aptisDlcmiLMIFullStatusEnquiries, aptisDlcmiLostLMISequences=aptisDlcmiLostLMISequences, aptisDlcmiRcvInvalidDLCI=aptisDlcmiRcvInvalidDLCI, aptisCircuitReceivedUnknownOrg=aptisCircuitReceivedUnknownOrg)
