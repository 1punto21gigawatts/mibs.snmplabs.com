#
# PySNMP MIB module IBMFRBRS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBMFRBRS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:51:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ModuleIdentity, iso, MibIdentifier, Gauge32, Unsigned32, Integer32, ObjectIdentity, Counter32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "iso", "MibIdentifier", "Gauge32", "Unsigned32", "Integer32", "ObjectIdentity", "Counter32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "Counter64", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ibmfrBRS = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4))
ibmfrBRSOperational = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1))
ibmfrBRSAdministravive = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 2))
ibmfrBRSInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1), )
if mibBuilder.loadTexts: ibmfrBRSInterfaceTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceTable.setDescription('FR BRS interface information.')
ibmfrBRSInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ibmfrBRSInterfaceEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceEntry.setDescription('Information related to a particular FR BRS interface.')
ibmfrBRSInterfaceMaxQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSInterfaceMaxQueue.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceMaxQueue.setDescription('The maximum queue length for each priority queue of each traffic class that is defined for a virtual circuit.')
ibmfrBRSInterfaceMinQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSInterfaceMinQueue.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceMinQueue.setDescription('The minimum queue length for each priority queue of each traffic class that is defined for a virtual circuit.')
ibmfrBRSInterfaceTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSInterfaceTotalBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceTotalBandwidth.setDescription('The total bandwidth which is a sum of the individual bandwidth allocations for each circuit class defined for this interface.')
ibmfrBRSInterfaceTotalCircuitClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSInterfaceTotalCircuitClasses.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceTotalCircuitClasses.setDescription('The total number of circuit classes defined for this interface. This includes the predefined DEFAULT circuit class.')
ibmfrBRSInterfaceDefaultCircuitClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSInterfaceDefaultCircuitClassName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSInterfaceDefaultCircuitClassName.setDescription('The name of the circuit class that is considered the default circuit class. It is used for virtual circuits not explicitly assigned to any circuit class.')
ibmfrBRSCircuitClassTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2), )
if mibBuilder.loadTexts: ibmfrBRSCircuitClassTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassTable.setDescription('FR BRS circuit class information.')
ibmfrBRSCircuitClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitClassName"))
if mibBuilder.loadTexts: ibmfrBRSCircuitClassEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassEntry.setDescription('Information related to a particular circuit class defined for a given FR interface.')
ibmfrBRSCircuitClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 1), DisplayString())
if mibBuilder.loadTexts: ibmfrBRSCircuitClassName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassName.setDescription('The name of a circuit class for this interface.')
ibmfrBRSCircuitClassBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBandwidth.setDescription('The designated percent of bandwidth associated with this circuit class.')
ibmfrBRSCircuitClassPacketXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassPacketXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassPacketXmit.setDescription('The total number of packets that have been transmitted by this circuit class.')
ibmfrBRSCircuitClassBytesXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBytesXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBytesXmit.setDescription('The total number of bytes for packets that have been transmitted by this circuit class.')
ibmfrBRSCircuitClassBytesOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBytesOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassBytesOverflow.setDescription('The total number of bytes for packets that could not be transmitted for this circuit class. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSCircuitClassLastPacketXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastPacketXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastPacketXmit.setDescription('The last total number of packets that have been transmitted by this circuit class before the counter was being cleared.')
ibmfrBRSCircuitClassLastBytesXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastBytesXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastBytesXmit.setDescription('The last total number of bytes for packets that have been transmitted by this circuit class before the counter was being cleared.')
ibmfrBRSCircuitClassLastBytesOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastBytesOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassLastBytesOverflow.setDescription('The last total number of bytes for packets that could not be transmitted for this circuit class before the counter was being cleared.')
ibmfrBRSCircuitClassClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ibmfrBRSCircuitClassClearCounters.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitClassClearCounters.setDescription('Clear all statistics counters associated with this circuit class. The counter is cleared immediately on completion of the set operation and the previous counter values are saved.')
ibmfrBRSCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3), )
if mibBuilder.loadTexts: ibmfrBRSCircuitTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitTable.setDescription('FR BRS virtual circuit information.')
ibmfrBRSCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitClassName"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitNumber"))
if mibBuilder.loadTexts: ibmfrBRSCircuitEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitEntry.setDescription('Information related to a particular FR virtual circuit assigned to a circuit class on this FR interface.')
ibmfrBRSCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: ibmfrBRSCircuitNumber.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitNumber.setDescription('For PVC circuit this number is the FR DLCI identifying this virtual circuit. For SVC circuit this number is the unique identifier number. The SVC name can be obtained via ibmfrBRSCircuitSVCName, ibmfrBRSTrafficClassSVCName, or ibmfrBRSProtFiltSVCName.')
ibmfrBRSCircuitMaxQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitMaxQueue.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitMaxQueue.setDescription('The maximum queue length for each priority queue of each traffic class that is defined for a virtual circuit. This value overrides the max queue length specified for the interface and indicated by ibmfrBRSInterfaceMaxQueue.')
ibmfrBRSCircuitMinQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitMinQueue.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitMinQueue.setDescription('The minimum queue length for each priority queue of each traffic class that is defined for a virtual circuit. This value overrides the min queue length specified for the interface and indicated by ibmfrBRSInterfaceMinQueue.')
ibmfrBRSCircuitTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitTotalBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitTotalBandwidth.setDescription('The total bandwidth which is a sum of the individual bandwidth allocations for each traffic class defined for this virtual circuit.')
ibmfrBRSCircuitTotalTrafficClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitTotalTrafficClasses.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitTotalTrafficClasses.setDescription('The total number of traffic classes defined for this virtual circuit. This includes the predefined LOCAL and DEFAULT traffic classes.')
ibmfrBRSCircuitDefaultTrafficClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitDefaultTrafficClassName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitDefaultTrafficClassName.setDescription('The name of the traffic class that is considered the default traffic class. It is used for protocols and filters not explicitly assigned to any traffic class.')
ibmfrBRSCircuitDefaultTrafficClassPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("normal", 2), ("high", 3), ("urgent", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitDefaultTrafficClassPrio.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitDefaultTrafficClassPrio.setDescription('The priority of the default traffic class.')
ibmfrBRSCircuitSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("defaults", 1), ("specific", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitSpecification.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitSpecification.setDescription('An indication of which traffic classes are being used by a virtual circuit. defaults(1) - No specific traffic classes have been defined and the virtual circuit is using the default traffic class definitions. specific(2) - Specific traffic classes have been defined and are being used by the virtual circuit.')
ibmfrBRSCircuitSuperClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitSuperClassName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitSuperClassName.setDescription("The name of the traffic class that is considered the super traffic class. The protocols and filters assigned to the super class have the higher priority than those assigned to any other traffic classes. The null string indicates that the super class doesn't exist.")
ibmfrBRSCircuitSVCName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSCircuitSVCName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSCircuitSVCName.setDescription('The name of the SVC. This only applies to SVC circuit. A null string indicates that this circuit is a PVC.')
ibmfrBRSTrafficClassTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4), )
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTable.setDescription('FR BRS traffic class information.')
ibmfrBRSTrafficClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitClassName"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitNumber"), (0, "IBMFRBRS-MIB", "ibmfrBRSTrafficClassName"))
if mibBuilder.loadTexts: ibmfrBRSTrafficClassEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassEntry.setDescription('Information related to a specific traffic class defined for a particular virtual circuit.')
ibmfrBRSTrafficClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 1), DisplayString())
if mibBuilder.loadTexts: ibmfrBRSTrafficClassName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassName.setDescription('The name of a traffic class for this virtual circuit.')
ibmfrBRSTrafficClassBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBandwidth.setDescription('The designated percent of bandwidth associated with this traffic class. Since the super class has higher priority than any other traffic class, the percent of bandwidth is indicated by zero')
ibmfrBRSTrafficClassTotalPacketXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalPacketXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalPacketXmit.setDescription('The total number of packets that have been transmitted by this traffic class.')
ibmfrBRSTrafficClassPacketXmitLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitLow.setDescription('The total number of packets that have been transmitted by this traffic class at priority level of low.')
ibmfrBRSTrafficClassPacketXmitNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitNormal.setDescription('The total number of packets that have been transmitted by this traffic class at priority level of normal.')
ibmfrBRSTrafficClassPacketXmitHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitHigh.setDescription('The total number of packets that have been transmitted by this traffic class at priority level of high.')
ibmfrBRSTrafficClassPacketXmitUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketXmitUrgent.setDescription('The total number of packets that have been transmitted by this traffic class at priority level of urgent.')
ibmfrBRSTrafficClassTotalBytesXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalBytesXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalBytesXmit.setDescription('The total number of bytes for packets that have been transmitted by this traffic class.')
ibmfrBRSTrafficClassBytesXmitLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitLow.setDescription('The total number of bytes that have been transmitted by this traffic class at priority level of low.')
ibmfrBRSTrafficClassBytesXmitNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitNormal.setDescription('The total number of bytes that have been transmitted by this traffic class at priority level of normal.')
ibmfrBRSTrafficClassBytesXmitHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitHigh.setDescription('The total number of bytes that have been transmitted by this traffic class at priority level of high.')
ibmfrBRSTrafficClassBytesXmitUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesXmitUrgent.setDescription('The total number of bytes that have been transmitted by this traffic class at priority level of urgent.')
ibmfrBRSTrafficClassTotalBytesOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalBytesOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalBytesOverflow.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassBytesOverflowLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowLow.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority level of low. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassBytesOverflowNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowNormal.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority level of normal. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassBytesOverflowHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowHigh.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority level of high. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassBytesOverflowUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassBytesOverflowUrgent.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority level of urgent. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassTotalPacketOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalPacketOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalPacketOverflow.setDescription('The total number of packets that could not be transmitted for this traffic class. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassPacketOverflowLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowLow.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of low. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassPacketOverflowNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowNormal.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of normal. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassPacketOverflowHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowHigh.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of high. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassPacketOverflowUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassPacketOverflowUrgent.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of urgent. This can be either the maximum queue-length was reached for a priority queue or the packet could not be queued because the priority queue was at the minimum queue length threshold and the packet came from an interface that was running low on receive buffers.')
ibmfrBRSTrafficClassTotalLastPacketXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastPacketXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastPacketXmit.setDescription('The last total number of packets that have been transmitted by this traffic class before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketXmitLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitLow.setDescription('The last total number of packets that have been transmitted by this traffic class at priority level of low before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketXmitNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitNormal.setDescription('The last total number of packets that have been transmitted by this traffic class at priority level of normal before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketXmitHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitHigh.setDescription('The last total number of packets that have been transmitted by this traffic class at priority level of high before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketXmitUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketXmitUrgent.setDescription('The last total number of packets that have been transmitted by this traffic class at priority level of urgent before the counter was being cleared.')
ibmfrBRSTrafficClassTotalLastBytesXmit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastBytesXmit.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastBytesXmit.setDescription('The total number of bytes for packets that have been transmitted by this traffic class before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesXmitLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitLow.setDescription('The total number of bytes for packets that have been transmitted by this traffic class at priority level of low before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesXmitNormal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitNormal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitNormal.setDescription('The total number of bytes for packets that have been transmitted by this traffic class at priority level of normal before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesXmitHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitHigh.setDescription('The total number of bytes for packets that have been transmitted by this traffic class at priority level of high before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesXmitUrgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitUrgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesXmitUrgent.setDescription('The total number of bytes for packets that have been transmitted by this traffic class at priority level of urgent before the counter was being cleared.')
ibmfrBRSTrafficClassTotalLastBytesOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastBytesOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastBytesOverflow.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesOverflowLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowLow.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority level of low before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesOverflowNmal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowNmal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowNmal.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority levle of normal before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesOverflowHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowHigh.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority levle of high before the counter was being cleared.')
ibmfrBRSTrafficClassLastBytesOverflowUgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowUgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastBytesOverflowUgent.setDescription('The total number of bytes for packets that could not be transmitted for this traffic class at priority levle of urgent before the counter was being cleared.')
ibmfrBRSTrafficClassTotalLastPacketOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastPacketOverflow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassTotalLastPacketOverflow.setDescription('The total number of packets that could not be transmitted for this traffic class before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketOverflowLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowLow.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowLow.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of low before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketOverflowNmal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowNmal.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowNmal.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of low before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketOverflowHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowHigh.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowHigh.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of high before the counter was being cleared.')
ibmfrBRSTrafficClassLastPacketOverflowUgent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowUgent.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassLastPacketOverflowUgent.setDescription('The total number of packets that could not be transmitted for this traffic class at priority level of urgent before the counter was being cleared.')
ibmfrBRSTrafficClassClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassClearCounters.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassClearCounters.setDescription('Clear all the statistics counters associated with this traffic class. The counters are cleared immediately on completion of the set operation and the previous counter values are saved.')
ibmfrBRSTrafficClassSVCName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 4, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSTrafficClassSVCName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSTrafficClassSVCName.setDescription('The name of the SVC. This only applies to SVC circuit. A null string indicates that this circuit is a PVC.')
ibmfrBRSProtFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5), )
if mibBuilder.loadTexts: ibmfrBRSProtFiltTable.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltTable.setDescription('FR BRS protocol/filter information.')
ibmfrBRSProtFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitClassName"), (0, "IBMFRBRS-MIB", "ibmfrBRSCircuitNumber"), (0, "IBMFRBRS-MIB", "ibmfrBRSTrafficClassName"), (0, "IBMFRBRS-MIB", "ibmfrBRSProtFiltId"))
if mibBuilder.loadTexts: ibmfrBRSProtFiltEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltEntry.setDescription('Information related to a protocol/filter related to a particular traffic class. Note that the LOCAL traffic class will never appear in this table since it never has a protocol/filter associated with it.')
ibmfrBRSProtFiltId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5, 1, 1), DisplayString())
if mibBuilder.loadTexts: ibmfrBRSProtFiltId.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltId.setDescription('The idenitifer for a protocol/filter.')
ibmfrBRSProtFiltPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("low", 1), ("normal", 2), ("high", 3), ("urgent", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSProtFiltPrio.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltPrio.setDescription('The priority of the protocol/filter within the particular traffic class.')
ibmfrBRSProtFiltDE = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSProtFiltDE.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltDE.setDescription('An indication of whether this traffic type should be considered discard eligible from a frame relay point of view.')
ibmfrBRSProtFiltSVCName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 119, 4, 4, 4, 1, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ibmfrBRSProtFiltSVCName.setStatus('mandatory')
if mibBuilder.loadTexts: ibmfrBRSProtFiltSVCName.setDescription('The name of the SVC. This only applies to SVC circuit. A null string indicates that this circuit is a PVC.')
mibBuilder.exportSymbols("IBMFRBRS-MIB", ibmfrBRSTrafficClassLastBytesOverflowNmal=ibmfrBRSTrafficClassLastBytesOverflowNmal, ibmfrBRSTrafficClassTotalPacketXmit=ibmfrBRSTrafficClassTotalPacketXmit, ibmfrBRSTrafficClassPacketOverflowUrgent=ibmfrBRSTrafficClassPacketOverflowUrgent, ibmfrBRSTrafficClassTable=ibmfrBRSTrafficClassTable, ibmfrBRSInterfaceTotalCircuitClasses=ibmfrBRSInterfaceTotalCircuitClasses, ibmfrBRSCircuitSpecification=ibmfrBRSCircuitSpecification, ibmfrBRSTrafficClassPacketXmitUrgent=ibmfrBRSTrafficClassPacketXmitUrgent, ibmfrBRSTrafficClassBytesOverflowUrgent=ibmfrBRSTrafficClassBytesOverflowUrgent, ibmfrBRSTrafficClassLastPacketOverflowHigh=ibmfrBRSTrafficClassLastPacketOverflowHigh, ibmfrBRSInterfaceTotalBandwidth=ibmfrBRSInterfaceTotalBandwidth, ibmfrBRSTrafficClassLastBytesOverflowLow=ibmfrBRSTrafficClassLastBytesOverflowLow, ibmfrBRSCircuitClassTable=ibmfrBRSCircuitClassTable, ibmfrBRSOperational=ibmfrBRSOperational, ibmfrBRSCircuitMaxQueue=ibmfrBRSCircuitMaxQueue, ibmfrBRSProtFiltDE=ibmfrBRSProtFiltDE, ibmfrBRSCircuitClassBandwidth=ibmfrBRSCircuitClassBandwidth, ibmfrBRSTrafficClassLastBytesXmitNormal=ibmfrBRSTrafficClassLastBytesXmitNormal, ibmfrBRSTrafficClassPacketXmitNormal=ibmfrBRSTrafficClassPacketXmitNormal, ibmfrBRSProtFiltPrio=ibmfrBRSProtFiltPrio, ibmfrBRSCircuitClassClearCounters=ibmfrBRSCircuitClassClearCounters, ibmfrBRSProtFiltId=ibmfrBRSProtFiltId, ibmfrBRSAdministravive=ibmfrBRSAdministravive, ibmfrBRSCircuitClassBytesXmit=ibmfrBRSCircuitClassBytesXmit, ibmfrBRSCircuitTotalTrafficClasses=ibmfrBRSCircuitTotalTrafficClasses, ibmfrBRSInterfaceTable=ibmfrBRSInterfaceTable, ibmfrBRSTrafficClassPacketOverflowHigh=ibmfrBRSTrafficClassPacketOverflowHigh, ibmfrBRSTrafficClassTotalPacketOverflow=ibmfrBRSTrafficClassTotalPacketOverflow, ibmfrBRSCircuitClassEntry=ibmfrBRSCircuitClassEntry, ibmfrBRSProtFiltEntry=ibmfrBRSProtFiltEntry, ibmfrBRSTrafficClassClearCounters=ibmfrBRSTrafficClassClearCounters, ibmfrBRSProtFiltSVCName=ibmfrBRSProtFiltSVCName, ibmfrBRSTrafficClassSVCName=ibmfrBRSTrafficClassSVCName, ibmfrBRSInterfaceEntry=ibmfrBRSInterfaceEntry, ibmfrBRSInterfaceMinQueue=ibmfrBRSInterfaceMinQueue, ibmfrBRSTrafficClassLastBytesXmitUrgent=ibmfrBRSTrafficClassLastBytesXmitUrgent, ibmfrBRSCircuitTable=ibmfrBRSCircuitTable, ibmfrBRSTrafficClassBytesOverflowHigh=ibmfrBRSTrafficClassBytesOverflowHigh, ibmfrBRSTrafficClassLastPacketOverflowLow=ibmfrBRSTrafficClassLastPacketOverflowLow, ibmfrBRSTrafficClassLastPacketXmitUrgent=ibmfrBRSTrafficClassLastPacketXmitUrgent, ibmfrBRSCircuitClassLastPacketXmit=ibmfrBRSCircuitClassLastPacketXmit, ibmfrBRSTrafficClassBytesOverflowLow=ibmfrBRSTrafficClassBytesOverflowLow, ibmfrBRSCircuitEntry=ibmfrBRSCircuitEntry, ibmfrBRSCircuitClassBytesOverflow=ibmfrBRSCircuitClassBytesOverflow, ibmfrBRSTrafficClassLastPacketXmitHigh=ibmfrBRSTrafficClassLastPacketXmitHigh, ibmfrBRSCircuitTotalBandwidth=ibmfrBRSCircuitTotalBandwidth, ibmfrBRSTrafficClassLastBytesOverflowUgent=ibmfrBRSTrafficClassLastBytesOverflowUgent, ibmfrBRSCircuitClassLastBytesXmit=ibmfrBRSCircuitClassLastBytesXmit, ibmfrBRSTrafficClassTotalBytesXmit=ibmfrBRSTrafficClassTotalBytesXmit, ibmfrBRSTrafficClassLastPacketOverflowNmal=ibmfrBRSTrafficClassLastPacketOverflowNmal, ibmfrBRSTrafficClassLastPacketOverflowUgent=ibmfrBRSTrafficClassLastPacketOverflowUgent, ibmfrBRSTrafficClassBytesXmitLow=ibmfrBRSTrafficClassBytesXmitLow, ibmfrBRSCircuitSVCName=ibmfrBRSCircuitSVCName, ibmfrBRSTrafficClassPacketOverflowLow=ibmfrBRSTrafficClassPacketOverflowLow, ibmfrBRSCircuitSuperClassName=ibmfrBRSCircuitSuperClassName, ibmfrBRSTrafficClassPacketOverflowNormal=ibmfrBRSTrafficClassPacketOverflowNormal, ibmfrBRSTrafficClassName=ibmfrBRSTrafficClassName, ibmfrBRSCircuitClassName=ibmfrBRSCircuitClassName, ibmfrBRSTrafficClassBytesOverflowNormal=ibmfrBRSTrafficClassBytesOverflowNormal, ibmfrBRSCircuitMinQueue=ibmfrBRSCircuitMinQueue, ibmfrBRSTrafficClassBandwidth=ibmfrBRSTrafficClassBandwidth, ibmfrBRSInterfaceDefaultCircuitClassName=ibmfrBRSInterfaceDefaultCircuitClassName, ibmfrBRSCircuitDefaultTrafficClassName=ibmfrBRSCircuitDefaultTrafficClassName, ibmfrBRSTrafficClassTotalLastBytesXmit=ibmfrBRSTrafficClassTotalLastBytesXmit, ibmfrBRSCircuitNumber=ibmfrBRSCircuitNumber, ibmfrBRSTrafficClassTotalBytesOverflow=ibmfrBRSTrafficClassTotalBytesOverflow, ibmfrBRSTrafficClassBytesXmitUrgent=ibmfrBRSTrafficClassBytesXmitUrgent, ibmfrBRSTrafficClassTotalLastPacketXmit=ibmfrBRSTrafficClassTotalLastPacketXmit, ibmfrBRSTrafficClassTotalLastBytesOverflow=ibmfrBRSTrafficClassTotalLastBytesOverflow, ibmfrBRS=ibmfrBRS, ibmfrBRSTrafficClassEntry=ibmfrBRSTrafficClassEntry, ibmfrBRSTrafficClassLastBytesXmitLow=ibmfrBRSTrafficClassLastBytesXmitLow, ibmfrBRSTrafficClassLastPacketXmitLow=ibmfrBRSTrafficClassLastPacketXmitLow, ibmfrBRSProtFiltTable=ibmfrBRSProtFiltTable, ibmfrBRSCircuitDefaultTrafficClassPrio=ibmfrBRSCircuitDefaultTrafficClassPrio, ibmfrBRSCircuitClassPacketXmit=ibmfrBRSCircuitClassPacketXmit, ibmfrBRSTrafficClassBytesXmitNormal=ibmfrBRSTrafficClassBytesXmitNormal, ibmfrBRSTrafficClassLastBytesXmitHigh=ibmfrBRSTrafficClassLastBytesXmitHigh, ibmfrBRSTrafficClassPacketXmitLow=ibmfrBRSTrafficClassPacketXmitLow, ibmfrBRSTrafficClassTotalLastPacketOverflow=ibmfrBRSTrafficClassTotalLastPacketOverflow, ibmfrBRSTrafficClassLastBytesOverflowHigh=ibmfrBRSTrafficClassLastBytesOverflowHigh, ibmfrBRSTrafficClassBytesXmitHigh=ibmfrBRSTrafficClassBytesXmitHigh, ibmfrBRSTrafficClassLastPacketXmitNormal=ibmfrBRSTrafficClassLastPacketXmitNormal, ibmfrBRSCircuitClassLastBytesOverflow=ibmfrBRSCircuitClassLastBytesOverflow, ibmfrBRSTrafficClassPacketXmitHigh=ibmfrBRSTrafficClassPacketXmitHigh, ibmfrBRSInterfaceMaxQueue=ibmfrBRSInterfaceMaxQueue)
