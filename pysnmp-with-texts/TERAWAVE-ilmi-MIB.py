#
# PySNMP MIB module TERAWAVE-ilmi-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERAWAVE-ilmi-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, IpAddress, Counter32, NotificationType, enterprises, Integer32, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Counter64, iso, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "Counter32", "NotificationType", "enterprises", "Integer32", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Counter64", "iso", "TimeTicks", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmForum = MibIdentifier((1, 3, 6, 1, 4, 1, 353))
atmForumUni = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2))
atmfPhysicalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 1))
atmfPortTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 1, 1), )
if mibBuilder.loadTexts: atmfPortTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortTable.setDescription(' table atmfPortTable')
atmfPortTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfPortIndex"))
if mibBuilder.loadTexts: atmfPortTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortTableEntry.setDescription(' table entry atmfPortTableEntry ')
atmfPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortIndex.setDescription('')
atmfPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortAddress.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortAddress.setDescription('')
atmfPortTransmissionType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortTransmissionType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortTransmissionType.setDescription('')
atmfPortMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMediaType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortMediaType.setDescription('')
atmfPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("inService", 2), ("outOfService", 3), ("loopBack", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortOperStatus.setDescription('')
atmfPortSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortSpecific.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortSpecific.setDescription('')
atmfPortMyIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMyIfName.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortMyIfName.setDescription('')
atmfPortMyIfIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfPortMyIfIdentifier.setStatus('mandatory')
if mibBuilder.loadTexts: atmfPortMyIfIdentifier.setDescription('')
atmfMyIpNmAddress = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMyIpNmAddress.setStatus('mandatory')
if mibBuilder.loadTexts: atmfMyIpNmAddress.setDescription('')
atmfMyOsiNmNsapAddress = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMyOsiNmNsapAddress.setStatus('mandatory')
if mibBuilder.loadTexts: atmfMyOsiNmNsapAddress.setDescription('')
atmfMySystemIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 353, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfMySystemIdentifier.setStatus('mandatory')
if mibBuilder.loadTexts: atmfMySystemIdentifier.setDescription('')
atmfAtmLayerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 2))
atmfAtmLayerTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 2, 1), )
if mibBuilder.loadTexts: atmfAtmLayerTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerTable.setDescription(' table atmfAtmLayerTable')
atmfAtmLayerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfAtmLayerIndex"))
if mibBuilder.loadTexts: atmfAtmLayerTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerTableEntry.setDescription(' table entry atmfAtmLayerTableEntry ')
atmfAtmLayerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerIndex.setDescription('')
atmfAtmLayerMaxVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVPCs.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxVPCs.setDescription('')
atmfAtmLayerMaxVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVCCs.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxVCCs.setDescription('')
atmfAtmLayerConfiguredVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVPCs.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVPCs.setDescription('')
atmfAtmLayerConfiguredVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435456))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVCCs.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerConfiguredVCCs.setDescription('')
atmfAtmLayerMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVpiBits.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxVpiBits.setDescription('')
atmfAtmLayerMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxVciBits.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxVciBits.setDescription('')
atmfAtmLayerUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerUniType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerUniType.setDescription('')
atmfAtmLayerUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("version2point0", 1), ("version3point0", 2), ("version3point1", 3), ("version4point0", 4), ("unsupported", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerUniVersion.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerUniVersion.setDescription('')
atmfAtmLayerDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("node", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerDeviceType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerDeviceType.setDescription('')
atmfAtmLayerIlmiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("version4point0", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerIlmiVersion.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerIlmiVersion.setDescription('')
atmfAtmLayerNniSigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unsupported", 1), ("iisp", 2), ("pnniVersion1point0", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerNniSigVersion.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerNniSigVersion.setDescription('')
atmfAtmLayerMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxSvpcVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxSvpcVpi.setDescription('')
atmfAtmLayerMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMaxSvccVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMaxSvccVpi.setDescription('')
atmfAtmLayerMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmLayerMinSvccVci.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmLayerMinSvccVci.setDescription('')
atmfAtmStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 3))
atmfAtmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 3, 1), )
if mibBuilder.loadTexts: atmfAtmStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsTable.setDescription(' table atmfAtmStatsTable')
atmfAtmStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfAtmStatsIndex"))
if mibBuilder.loadTexts: atmfAtmStatsTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsTableEntry.setDescription(' table entry atmfAtmStatsTableEntry ')
atmfAtmStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsIndex.setDescription('')
atmfAtmStatsReceivedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsReceivedCells.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsReceivedCells.setDescription('')
atmfAtmStatsDroppedReceivedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsDroppedReceivedCells.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsDroppedReceivedCells.setDescription('')
atmfAtmStatsTransmittedCells = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAtmStatsTransmittedCells.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAtmStatsTransmittedCells.setDescription('')
atmfVpcGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 4))
atmfVpcTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 4, 1), )
if mibBuilder.loadTexts: atmfVpcTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTable.setDescription(' table atmfVpcTable')
atmfVpcTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfVpcPortIndex"), (0, "TERAWAVE-ilmi-MIB", "atmfVpcVpi"))
if mibBuilder.loadTexts: atmfVpcTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTableEntry.setDescription(' table entry atmfVpcTableEntry ')
atmfVpcPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcPortIndex.setDescription('')
atmfVpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcVpi.setDescription('')
atmfVpcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endUp", 2), ("end2endDown", 3), ("localUpEnd2endUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcOperStatus.setDescription('')
atmfVpcTransmitTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorType.setDescription('')
atmfVpcTransmitTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam1.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam1.setDescription('')
atmfVpcTransmitTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam2.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam2.setDescription('')
atmfVpcTransmitTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam3.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam3.setDescription('')
atmfVpcTransmitTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam4.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam4.setDescription('')
atmfVpcTransmitTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam5.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitTrafficDescriptorParam5.setDescription('')
atmfVpcReceiveTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 10), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorType.setDescription('')
atmfVpcReceiveTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam1.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam1.setDescription('')
atmfVpcReceiveTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam2.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam2.setDescription('')
atmfVpcReceiveTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam3.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam3.setDescription('')
atmfVpcReceiveTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam4.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam4.setDescription('')
atmfVpcReceiveTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam5.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveTrafficDescriptorParam5.setDescription('')
atmfVpcQoSCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("deterministic", 2), ("statistical", 3), ("unspecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcQoSCategory.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcQoSCategory.setDescription('')
atmfVpcTransmitQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcTransmitQoSClass.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcTransmitQoSClass.setDescription('')
atmfVpcReceiveQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcReceiveQoSClass.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcReceiveQoSClass.setDescription('')
atmfVpcBestEffortIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcBestEffortIndicator.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcBestEffortIndicator.setDescription('')
atmfVpcServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 4, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcServiceCategory.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcServiceCategory.setDescription('')
atmfVpcAbrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 9))
atmfVpcAbrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 9, 1), )
if mibBuilder.loadTexts: atmfVpcAbrTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTable.setDescription(' table atmfVpcAbrTable')
atmfVpcAbrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfVpcAbrPortIndex"), (0, "TERAWAVE-ilmi-MIB", "atmfVpcAbrVpi"))
if mibBuilder.loadTexts: atmfVpcAbrTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTableEntry.setDescription(' table entry atmfVpcAbrTableEntry ')
atmfVpcAbrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrPortIndex.setDescription('')
atmfVpcAbrVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrVpi.setDescription('')
atmfVpcAbrTransmitIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitIcr.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitIcr.setDescription('')
atmfVpcAbrTransmitNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitNrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitNrm.setDescription('')
atmfVpcAbrTransmitTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitTrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitTrm.setDescription('')
atmfVpcAbrTransmitCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitCdf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitCdf.setDescription('')
atmfVpcAbrTransmitRif = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitRif.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitRif.setDescription('')
atmfVpcAbrTransmitRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitRdf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitRdf.setDescription('')
atmfVpcAbrTransmitAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitAdtf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitAdtf.setDescription('')
atmfVpcAbrTransmitCrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVpcAbrTransmitCrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVpcAbrTransmitCrm.setDescription('')
atmfVccGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 5))
atmfVccTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 5, 1), )
if mibBuilder.loadTexts: atmfVccTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTable.setDescription(' table atmfVccTable')
atmfVccTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfVccPortIndex"), (0, "TERAWAVE-ilmi-MIB", "atmfVccVpi"), (0, "TERAWAVE-ilmi-MIB", "atmfVccVci"))
if mibBuilder.loadTexts: atmfVccTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTableEntry.setDescription(' table entry atmfVccTableEntry ')
atmfVccPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccPortIndex.setDescription('')
atmfVccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccVpi.setDescription('')
atmfVccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccVci.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccVci.setDescription('')
atmfVccOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("end2endUp", 2), ("end2endDown", 3), ("localUpEnd2endUnknown", 4), ("localDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccOperStatus.setDescription('')
atmfVccTransmitTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorType.setDescription('')
atmfVccTransmitTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam1.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam1.setDescription('')
atmfVccTransmitTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam2.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam2.setDescription('')
atmfVccTransmitTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam3.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam3.setDescription('')
atmfVccTransmitTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam4.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam4.setDescription('')
atmfVccTransmitTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam5.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitTrafficDescriptorParam5.setDescription('')
atmfVccReceiveTrafficDescriptorType = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 11), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorType.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorType.setDescription('')
atmfVccReceiveTrafficDescriptorParam1 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam1.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam1.setDescription('')
atmfVccReceiveTrafficDescriptorParam2 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam2.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam2.setDescription('')
atmfVccReceiveTrafficDescriptorParam3 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam3.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam3.setDescription('')
atmfVccReceiveTrafficDescriptorParam4 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam4.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam4.setDescription('')
atmfVccReceiveTrafficDescriptorParam5 = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam5.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveTrafficDescriptorParam5.setDescription('')
atmfVccQoSCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("deterministic", 2), ("statistical", 3), ("unspecified", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccQoSCategory.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccQoSCategory.setDescription('')
atmfVccTransmitQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitQoSClass.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitQoSClass.setDescription('')
atmfVccReceiveQoSClass = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveQoSClass.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveQoSClass.setDescription('')
atmfVccBestEffortIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccBestEffortIndicator.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccBestEffortIndicator.setDescription('')
atmfVccTransmitFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccTransmitFrameDiscard.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccTransmitFrameDiscard.setDescription('')
atmfVccReceiveFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccReceiveFrameDiscard.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccReceiveFrameDiscard.setDescription('')
atmfVccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 5, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccServiceCategory.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccServiceCategory.setDescription('')
atmfVccAbrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 10))
atmfVccAbrTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 10, 1), )
if mibBuilder.loadTexts: atmfVccAbrTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTable.setDescription(' table atmfVccAbrTable')
atmfVccAbrTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfVccAbrPortIndex"), (0, "TERAWAVE-ilmi-MIB", "atmfVccAbrVpi"), (0, "TERAWAVE-ilmi-MIB", "atmfVccAbrVci"))
if mibBuilder.loadTexts: atmfVccAbrTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTableEntry.setDescription(' table entry atmfVccAbrTableEntry ')
atmfVccAbrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrPortIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrPortIndex.setDescription('')
atmfVccAbrVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrVpi.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrVpi.setDescription('')
atmfVccAbrVci = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrVci.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrVci.setDescription('')
atmfVccAbrTransmitIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitIcr.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitIcr.setDescription('')
atmfVccAbrTransmitNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitNrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitNrm.setDescription('')
atmfVccAbrTransmitTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitTrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitTrm.setDescription('')
atmfVccAbrTransmitCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitCdf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitCdf.setDescription('')
atmfVccAbrTransmitRif = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitRif.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitRif.setDescription('')
atmfVccAbrTransmitRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitRdf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitRdf.setDescription('')
atmfVccAbrTransmitAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitAdtf.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitAdtf.setDescription('')
atmfVccAbrTransmitCrm = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8388608))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfVccAbrTransmitCrm.setStatus('mandatory')
if mibBuilder.loadTexts: atmfVccAbrTransmitCrm.setDescription('')
atmfAddressRegistrationAdminGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 11))
atmfAddressRegistrationAdminTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 11, 1), )
if mibBuilder.loadTexts: atmfAddressRegistrationAdminTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressRegistrationAdminTable.setDescription(' table atmfAddressRegistrationAdminTable')
atmfAddressRegistrationAdminTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfAddressRegistrationAdminIndex"))
if mibBuilder.loadTexts: atmfAddressRegistrationAdminTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressRegistrationAdminTableEntry.setDescription(' table entry atmfAddressRegistrationAdminTableEntry ')
atmfAddressRegistrationAdminIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressRegistrationAdminIndex.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressRegistrationAdminIndex.setDescription('')
atmfAddressRegistrationAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("supported", 1), ("unsupported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressRegistrationAdminStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressRegistrationAdminStatus.setDescription('')
atmfAddressGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 6))
atmfAddressTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 6, 1), )
if mibBuilder.loadTexts: atmfAddressTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressTable.setDescription(' table atmfAddressTable')
atmfAddressTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfAddressPort"), (0, "TERAWAVE-ilmi-MIB", "atmfAddressAtmAddress"))
if mibBuilder.loadTexts: atmfAddressTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressTableEntry.setDescription(' table entry atmfAddressTableEntry ')
atmfAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressPort.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressPort.setDescription('')
atmfAddressAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressAtmAddress.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressAtmAddress.setDescription('')
atmfAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressStatus.setDescription('')
atmfAddressOrgScope = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("localNetwork", 1), ("localNetworkPlusOne", 2), ("localNetworkPlusTwo", 3), ("siteMinusOne", 4), ("intraSite", 5), ("sitePlusOne", 6), ("organizationMinusOne", 7), ("intraOrganization", 8), ("organizationPlusOne", 9), ("communityMinusOne", 10), ("intraCommunity", 11), ("communityPlusOne", 12), ("regional", 13), ("interRegional", 14), ("global", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfAddressOrgScope.setStatus('mandatory')
if mibBuilder.loadTexts: atmfAddressOrgScope.setDescription('')
atmfNetPrefixGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 353, 2, 7))
atmfNetPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 353, 2, 7, 1), )
if mibBuilder.loadTexts: atmfNetPrefixTable.setStatus('mandatory')
if mibBuilder.loadTexts: atmfNetPrefixTable.setDescription(' table atmfNetPrefixTable')
atmfNetPrefixTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 353, 2, 7, 1, 1), ).setIndexNames((0, "TERAWAVE-ilmi-MIB", "atmfNetPrefixPort"), (0, "TERAWAVE-ilmi-MIB", "atmfNetPrefixPrefix"))
if mibBuilder.loadTexts: atmfNetPrefixTableEntry.setStatus('mandatory')
if mibBuilder.loadTexts: atmfNetPrefixTableEntry.setDescription(' table entry atmfNetPrefixTableEntry ')
atmfNetPrefixPort = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfNetPrefixPort.setStatus('mandatory')
if mibBuilder.loadTexts: atmfNetPrefixPort.setDescription('')
atmfNetPrefixPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 7, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfNetPrefixPrefix.setStatus('mandatory')
if mibBuilder.loadTexts: atmfNetPrefixPrefix.setDescription('')
atmfNetPrefixStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 353, 2, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmfNetPrefixStatus.setStatus('mandatory')
if mibBuilder.loadTexts: atmfNetPrefixStatus.setDescription('')
mibBuilder.exportSymbols("TERAWAVE-ilmi-MIB", atmfVpcReceiveTrafficDescriptorType=atmfVpcReceiveTrafficDescriptorType, atmfAddressTable=atmfAddressTable, atmfVccReceiveTrafficDescriptorParam5=atmfVccReceiveTrafficDescriptorParam5, atmfAtmLayerDeviceType=atmfAtmLayerDeviceType, atmfNetPrefixPort=atmfNetPrefixPort, atmfVpcAbrGroup=atmfVpcAbrGroup, atmfVpcAbrTransmitAdtf=atmfVpcAbrTransmitAdtf, atmfAtmLayerUniVersion=atmfAtmLayerUniVersion, atmfAtmLayerMaxSvpcVpi=atmfAtmLayerMaxSvpcVpi, atmfVccAbrVci=atmfVccAbrVci, atmfVccReceiveTrafficDescriptorType=atmfVccReceiveTrafficDescriptorType, atmfVccReceiveTrafficDescriptorParam3=atmfVccReceiveTrafficDescriptorParam3, atmfAddressGroup=atmfAddressGroup, atmfAddressRegistrationAdminTableEntry=atmfAddressRegistrationAdminTableEntry, atmfPortSpecific=atmfPortSpecific, atmfVpcTransmitTrafficDescriptorParam5=atmfVpcTransmitTrafficDescriptorParam5, atmfVccTransmitTrafficDescriptorParam3=atmfVccTransmitTrafficDescriptorParam3, atmfVccAbrTable=atmfVccAbrTable, atmfMySystemIdentifier=atmfMySystemIdentifier, atmfAtmStatsTransmittedCells=atmfAtmStatsTransmittedCells, atmfVpcTransmitTrafficDescriptorParam3=atmfVpcTransmitTrafficDescriptorParam3, atmfVpcVpi=atmfVpcVpi, atmfVpcTableEntry=atmfVpcTableEntry, atmfVpcReceiveTrafficDescriptorParam5=atmfVpcReceiveTrafficDescriptorParam5, atmfVpcQoSCategory=atmfVpcQoSCategory, atmfPortMyIfName=atmfPortMyIfName, atmfAtmLayerMaxVciBits=atmfAtmLayerMaxVciBits, atmfVccAbrTransmitCdf=atmfVccAbrTransmitCdf, atmfVccReceiveTrafficDescriptorParam2=atmfVccReceiveTrafficDescriptorParam2, atmfVccReceiveTrafficDescriptorParam4=atmfVccReceiveTrafficDescriptorParam4, atmfPortMyIfIdentifier=atmfPortMyIfIdentifier, atmfAtmLayerTableEntry=atmfAtmLayerTableEntry, atmfNetPrefixTableEntry=atmfNetPrefixTableEntry, atmfAddressStatus=atmfAddressStatus, atmfVccReceiveTrafficDescriptorParam1=atmfVccReceiveTrafficDescriptorParam1, atmfAtmLayerConfiguredVPCs=atmfAtmLayerConfiguredVPCs, atmfNetPrefixStatus=atmfNetPrefixStatus, atmfVpcReceiveTrafficDescriptorParam4=atmfVpcReceiveTrafficDescriptorParam4, atmfVpcTable=atmfVpcTable, atmfAtmStatsTableEntry=atmfAtmStatsTableEntry, atmForumUni=atmForumUni, atmfAddressRegistrationAdminIndex=atmfAddressRegistrationAdminIndex, atmfVccTableEntry=atmfVccTableEntry, atmfPortIndex=atmfPortIndex, atmfPortTableEntry=atmfPortTableEntry, atmfNetPrefixPrefix=atmfNetPrefixPrefix, atmfVccAbrTransmitNrm=atmfVccAbrTransmitNrm, atmfAtmStatsGroup=atmfAtmStatsGroup, atmfAtmLayerMaxVPCs=atmfAtmLayerMaxVPCs, atmfVccAbrTransmitIcr=atmfVccAbrTransmitIcr, atmfAddressRegistrationAdminGroup=atmfAddressRegistrationAdminGroup, atmfVccTable=atmfVccTable, atmfAtmStatsReceivedCells=atmfAtmStatsReceivedCells, atmfVpcAbrTransmitTrm=atmfVpcAbrTransmitTrm, atmfVccTransmitTrafficDescriptorParam4=atmfVccTransmitTrafficDescriptorParam4, atmfVpcAbrPortIndex=atmfVpcAbrPortIndex, atmfVpcReceiveTrafficDescriptorParam3=atmfVpcReceiveTrafficDescriptorParam3, atmfAtmLayerNniSigVersion=atmfAtmLayerNniSigVersion, atmfAtmLayerUniType=atmfAtmLayerUniType, atmfVccTransmitTrafficDescriptorParam5=atmfVccTransmitTrafficDescriptorParam5, atmfVccGroup=atmfVccGroup, atmfAtmLayerMinSvccVci=atmfAtmLayerMinSvccVci, atmfVccQoSCategory=atmfVccQoSCategory, atmfVccReceiveQoSClass=atmfVccReceiveQoSClass, atmfVpcBestEffortIndicator=atmfVpcBestEffortIndicator, atmfVpcAbrTransmitNrm=atmfVpcAbrTransmitNrm, atmfVccVci=atmfVccVci, atmfAtmLayerConfiguredVCCs=atmfAtmLayerConfiguredVCCs, atmfVpcReceiveQoSClass=atmfVpcReceiveQoSClass, atmfVpcServiceCategory=atmfVpcServiceCategory, atmfPortTable=atmfPortTable, atmfVccAbrTransmitRdf=atmfVccAbrTransmitRdf, atmfAddressRegistrationAdminTable=atmfAddressRegistrationAdminTable, atmfAtmStatsIndex=atmfAtmStatsIndex, atmfVpcTransmitTrafficDescriptorType=atmfVpcTransmitTrafficDescriptorType, atmfVpcAbrTable=atmfVpcAbrTable, atmfVpcAbrTransmitCrm=atmfVpcAbrTransmitCrm, atmfVccTransmitQoSClass=atmfVccTransmitQoSClass, atmfNetPrefixTable=atmfNetPrefixTable, atmfVpcReceiveTrafficDescriptorParam2=atmfVpcReceiveTrafficDescriptorParam2, atmfAtmLayerTable=atmfAtmLayerTable, atmfVccOperStatus=atmfVccOperStatus, atmfAddressAtmAddress=atmfAddressAtmAddress, atmfAddressTableEntry=atmfAddressTableEntry, atmfVccAbrTransmitTrm=atmfVccAbrTransmitTrm, atmfPortTransmissionType=atmfPortTransmissionType, atmfPortOperStatus=atmfPortOperStatus, atmfVccTransmitTrafficDescriptorParam1=atmfVccTransmitTrafficDescriptorParam1, atmfAtmLayerIlmiVersion=atmfAtmLayerIlmiVersion, atmfVpcAbrTransmitRdf=atmfVpcAbrTransmitRdf, atmfAddressPort=atmfAddressPort, atmfAtmStatsTable=atmfAtmStatsTable, atmForum=atmForum, atmfVccAbrGroup=atmfVccAbrGroup, atmfVccReceiveFrameDiscard=atmfVccReceiveFrameDiscard, atmfVpcAbrTransmitCdf=atmfVpcAbrTransmitCdf, atmfVccVpi=atmfVccVpi, atmfVpcAbrVpi=atmfVpcAbrVpi, atmfPortMediaType=atmfPortMediaType, atmfAtmLayerMaxVpiBits=atmfAtmLayerMaxVpiBits, atmfVccAbrTransmitRif=atmfVccAbrTransmitRif, atmfAtmLayerMaxVCCs=atmfAtmLayerMaxVCCs, atmfVccAbrTransmitCrm=atmfVccAbrTransmitCrm, atmfVccTransmitTrafficDescriptorType=atmfVccTransmitTrafficDescriptorType, atmfVccAbrPortIndex=atmfVccAbrPortIndex, atmfVpcTransmitQoSClass=atmfVpcTransmitQoSClass, atmfVccTransmitTrafficDescriptorParam2=atmfVccTransmitTrafficDescriptorParam2, atmfAddressOrgScope=atmfAddressOrgScope, atmfNetPrefixGroup=atmfNetPrefixGroup, atmfVpcAbrTransmitRif=atmfVpcAbrTransmitRif, atmfVpcTransmitTrafficDescriptorParam4=atmfVpcTransmitTrafficDescriptorParam4, atmfMyOsiNmNsapAddress=atmfMyOsiNmNsapAddress, atmfVccPortIndex=atmfVccPortIndex, atmfAtmLayerMaxSvccVpi=atmfAtmLayerMaxSvccVpi, atmfMyIpNmAddress=atmfMyIpNmAddress, atmfAtmLayerGroup=atmfAtmLayerGroup, atmfAtmStatsDroppedReceivedCells=atmfAtmStatsDroppedReceivedCells, atmfVccAbrTransmitAdtf=atmfVccAbrTransmitAdtf, atmfVpcOperStatus=atmfVpcOperStatus, atmfVccTransmitFrameDiscard=atmfVccTransmitFrameDiscard, atmfAtmLayerIndex=atmfAtmLayerIndex, atmfVpcAbrTransmitIcr=atmfVpcAbrTransmitIcr, atmfPhysicalGroup=atmfPhysicalGroup, atmfVpcReceiveTrafficDescriptorParam1=atmfVpcReceiveTrafficDescriptorParam1, atmfAddressRegistrationAdminStatus=atmfAddressRegistrationAdminStatus, atmfVccAbrTableEntry=atmfVccAbrTableEntry, atmfVpcTransmitTrafficDescriptorParam1=atmfVpcTransmitTrafficDescriptorParam1, atmfVccAbrVpi=atmfVccAbrVpi, atmfVpcAbrTableEntry=atmfVpcAbrTableEntry, atmfPortAddress=atmfPortAddress, atmfVccServiceCategory=atmfVccServiceCategory, atmfVccBestEffortIndicator=atmfVccBestEffortIndicator, atmfVpcGroup=atmfVpcGroup, atmfVpcTransmitTrafficDescriptorParam2=atmfVpcTransmitTrafficDescriptorParam2, atmfVpcPortIndex=atmfVpcPortIndex)
