#
# PySNMP MIB module JUNIPER-WX-GLOBAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-WX-GLOBAL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:01:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
jnxWxMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxWxMibRoot")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, ModuleIdentity, Gauge32, MibIdentifier, Counter32, ObjectIdentity, Counter64, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "ModuleIdentity", "Gauge32", "MibIdentifier", "Counter32", "ObjectIdentity", "Counter64", "IpAddress", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxWxGrpModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1))
if mibBuilder.loadTexts: jnxWxGrpModule.setLastUpdated('200804081400Z')
if mibBuilder.loadTexts: jnxWxGrpModule.setOrganization('Juniper Networks, Inc')
if mibBuilder.loadTexts: jnxWxGrpModule.setContactInfo(' Customer Support Juniper Networks, Inc. 1194 North Mathilda Avenue Sunnyvale, CA 94089 support@juniper.net')
if mibBuilder.loadTexts: jnxWxGrpModule.setDescription('Juniper Networks enterprise MIB module for WAN Acceleration (WX) product-line from software release version JWOS 6.0 onwards. ')
jnxWxGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1))
if mibBuilder.loadTexts: jnxWxGrp.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrp.setDescription('The MIB group containing all status, statistics, events and configuration information for WX product-line from software release version JWOS 6.0 onwards. ')
jnxWxGrpStatus = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 1))
if mibBuilder.loadTexts: jnxWxGrpStatus.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpStatus.setDescription('The MIB group containing status related information. ')
jnxWxGrpStats = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 2))
if mibBuilder.loadTexts: jnxWxGrpStats.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpStats.setDescription('This group contains statisitics related information. It contains system, acceleration, compression and wan performance data. ')
jnxWxGrpEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 3))
if mibBuilder.loadTexts: jnxWxGrpEvents.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpEvents.setDescription('This group contains events related information. ')
jnxWxGrpConf = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 4))
if mibBuilder.loadTexts: jnxWxGrpConf.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpConf.setDescription('This group contains configuration related information. ')
jnxWxGrpProduct = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5))
if mibBuilder.loadTexts: jnxWxGrpProduct.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProduct.setDescription('This group contains product related information. ')
jnxWxGrpProductWxc250 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 1))
if mibBuilder.loadTexts: jnxWxGrpProductWxc250.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc250.setDescription(' Sequence Caching Model 250')
jnxWxGrpProductWxc500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 2))
if mibBuilder.loadTexts: jnxWxGrpProductWxc500.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc500.setDescription(' Sequence Caching Model 500')
jnxWxGrpProductWxc590 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 3))
if mibBuilder.loadTexts: jnxWxGrpProductWxc590.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc590.setDescription(' Sequence Caching Model 590')
jnxWxGrpProductWxc1800 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 4))
if mibBuilder.loadTexts: jnxWxGrpProductWxc1800.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc1800.setDescription(' WAN Acceleration Model 1800 New in Phoenix')
jnxWxGrpProductWxc2600 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 5))
if mibBuilder.loadTexts: jnxWxGrpProductWxc2600.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc2600.setDescription(' WAN Acceleration Model 2600 New in Phoenix')
jnxWxGrpProductWxc3400 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 6))
if mibBuilder.loadTexts: jnxWxGrpProductWxc3400.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc3400.setDescription(' WAN Acceleration Model 3400 New in Phoenix')
jnxWxGrpProductWxc7800 = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 41, 1, 1, 5, 7))
if mibBuilder.loadTexts: jnxWxGrpProductWxc7800.setStatus('current')
if mibBuilder.loadTexts: jnxWxGrpProductWxc7800.setDescription(' WAN Acceleration Model 7800 New in Phoenix')
mibBuilder.exportSymbols("JUNIPER-WX-GLOBAL-MIB", jnxWxGrpProductWxc7800=jnxWxGrpProductWxc7800, jnxWxGrpConf=jnxWxGrpConf, jnxWxGrpProductWxc250=jnxWxGrpProductWxc250, jnxWxGrpProductWxc590=jnxWxGrpProductWxc590, jnxWxGrpProductWxc500=jnxWxGrpProductWxc500, jnxWxGrp=jnxWxGrp, jnxWxGrpProductWxc3400=jnxWxGrpProductWxc3400, jnxWxGrpModule=jnxWxGrpModule, jnxWxGrpProduct=jnxWxGrpProduct, jnxWxGrpProductWxc2600=jnxWxGrpProductWxc2600, jnxWxGrpStatus=jnxWxGrpStatus, jnxWxGrpProductWxc1800=jnxWxGrpProductWxc1800, PYSNMP_MODULE_ID=jnxWxGrpModule, jnxWxGrpEvents=jnxWxGrpEvents, jnxWxGrpStats=jnxWxGrpStats)
