#
# PySNMP MIB module CISCO-SEU-MITIGATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SEU-MITIGATION-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:11:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, IpAddress, NotificationType, Counter64, TimeTicks, Counter32, Gauge32, Bits, ObjectIdentity, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "IpAddress", "NotificationType", "Counter64", "TimeTicks", "Counter32", "Gauge32", "Bits", "ObjectIdentity", "iso", "MibIdentifier")
DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
ciscoSeuMitigationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 701))
ciscoSeuMitigationMIB.setRevisions(('2009-06-24 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setLastUpdated('200906240000Z')
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-seu-mitigation@cisco.com')
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setDescription("This MIB reports the status of non-automatic and automatic, rate-adaptive Single Event Upset (SEU) mitigation algorithms and adjusts their parameters, as well as reports the effects of those mitigations on memories, caches, and registers. SEU mitigation allows Cisco IOS to run on radiation tolerant hardware deployed in a geosynchronous Earth orbit satellites for IP communications. One of the challenges in deploying equipment in such an environment is the impact that radiation has on digital circuits. A Single Event Upset (SEU) occurs when the hardware is exposed to energetic ions and protons in the space environment. The value stored in a bit of information can change when a large enough charge is deposited on the digital circuit. This leads to adverse effects in the operation of the software; in this case Cisco IOS. While steps have been taken to reduce the occurrence of SEUs through the use of radiation tolerant hardware, these steps do not eliminate the threat. A critical requirement in running IOS on such platforms is the utilization of SEU mitigation strategies to reduce the impact of such events on the operation of the Cisco device. GLOSSARY SEU : Acronym for 'Single Event Upset' : A hardware disruption caused when hardware is exposed to energetic ions and protons. scrub : An algorithm that periodically refreshes memory, cache or register contents by various means.")
ciscoSeuMitigationMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 0))
ciscoSeuMitigationMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 1))
ciscoSeuMitigationMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2))
csmScrubTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1), )
if mibBuilder.loadTexts: csmScrubTable.setStatus('current')
if mibBuilder.loadTexts: csmScrubTable.setDescription('This table provides the configuration settings for the scrub algorithms. All entries are added with the SEU subsystem is initialized.')
csmScrubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmScrubIndex"))
if mibBuilder.loadTexts: csmScrubEntry.setStatus('current')
if mibBuilder.loadTexts: csmScrubEntry.setDescription('This object represents an entry in the csmScrubConfigTable.')
csmScrubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csmScrubIndex.setStatus('current')
if mibBuilder.loadTexts: csmScrubIndex.setDescription('This object uniquely identifies the csmScrubEntry.')
csmScrubEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubEntPhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: csmScrubEntPhysicalIndex.setDescription('This object represents the EntityPhysicalIndex (from the ENTITY-MIB) corresponding to the physical entity upon which the scrub or SEU-mitigation is being performed.')
csmScrubScrubName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubScrubName.setStatus('current')
if mibBuilder.loadTexts: csmScrubScrubName.setDescription('This object represents the name of the particular scrub or SEU algorithm, such as Memory Scrub, Register Scrub, etc.')
csmScrubRateAdaptive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRateAdaptive.setStatus('current')
if mibBuilder.loadTexts: csmScrubRateAdaptive.setDescription("This object indicates whether the scrub or SEU algorithm is rate-adaptive. The values provided by objects csmScrubDeltaInterval, csmScrubRetryInterval, and csmScrubThresholdInterval are only applicable when this object is set to 'true'. true : Algorithm is rate-adaptive. false : Algorithm is NOT rate-adaptive.")
csmScrubAlgorithmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubAlgorithmEnabled.setStatus('current')
if mibBuilder.loadTexts: csmScrubAlgorithmEnabled.setDescription('This object indicates whether the SEU algorithm is enabled. true : Algorithm is enabled false : Algorithm is disabled')
csmScrubRunInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 6), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubRunInterval.setStatus('current')
if mibBuilder.loadTexts: csmScrubRunInterval.setDescription('This object represents the amount of wait time between when a scrub algorithm finishes its current run and begins its next run.')
csmScrubRunIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 7), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRunIntervalUnits.setStatus('current')
if mibBuilder.loadTexts: csmScrubRunIntervalUnits.setDescription('This object represents the units for csmScrubRunInterval.')
csmScrubDeltaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 8), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubDeltaInterval.setStatus('current')
if mibBuilder.loadTexts: csmScrubDeltaInterval.setDescription('This object represents the amount of time that a rate-adaptive scrub algorithm increases or decreases the csmScrubRunInterval. The scrub interval is decreased when an error interrupt occurs and the cScrubThresholdIntervalCount is exceeded. The scrub interval is increased when the scrub retry timer expires.')
csmScrubDeltaIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 9), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubDeltaIntervalUnits.setStatus('current')
if mibBuilder.loadTexts: csmScrubDeltaIntervalUnits.setDescription('This object represents the units for csmScrubDeltaInterval.')
csmScrubRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 10), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubRetryInterval.setStatus('current')
if mibBuilder.loadTexts: csmScrubRetryInterval.setDescription('This object represents the amount of time a rate-adaptive scrub algorithm waits before increasing the csmScrubRunInterval.')
csmScrubRetryIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 11), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRetryIntervalUnits.setStatus('current')
if mibBuilder.loadTexts: csmScrubRetryIntervalUnits.setDescription('This object represents the units for csmScrubConfigRetryInterval.')
csmScrubCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubCurrentInterval.setStatus('current')
if mibBuilder.loadTexts: csmScrubCurrentInterval.setDescription('This object represents the current interval between which scrubs or SEU-mitigation runs. A value of 0 (zero) indicates that the scrubs or runs are back-to-back.')
csmScrubCurrentIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubCurrentIntervalUnits.setStatus('current')
if mibBuilder.loadTexts: csmScrubCurrentIntervalUnits.setDescription('This object represents the units for csmScrubCurrentInterval.')
csmScrubThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 14), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdInterval.setStatus('current')
if mibBuilder.loadTexts: csmScrubThresholdInterval.setDescription('This object represents the period of time that a rate-adaptive scrub algorithm will check for csmScrubThresholdErrorValue being exceeded. If the threshold is exceeded within this sliding time window, the scrub rate will increase.')
csmScrubThresholdIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 15), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubThresholdIntervalUnits.setStatus('current')
if mibBuilder.loadTexts: csmScrubThresholdIntervalUnits.setDescription('This object indicates the units for csmScrubConfigThresholdInterval.')
csmScrubThresholdIntervalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdIntervalCount.setStatus('current')
if mibBuilder.loadTexts: csmScrubThresholdIntervalCount.setDescription('This object represents the number of error interrupts received before a rate-adaptive scrub or SEU-mitigation algorithm decreases the scrub interval.')
csmScrubThresholdErrorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdErrorValue.setStatus('current')
if mibBuilder.loadTexts: csmScrubThresholdErrorValue.setDescription('This object represents the error threshold above which, when it occurs during sliding window (csmScrubThresholdInterval), the scrub or SEU-mitigation rate will increase.')
csmScrubRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRunning.setStatus('current')
if mibBuilder.loadTexts: csmScrubRunning.setDescription('This object indicates whether the scrub or SEU algorithm is running or not. true : Algorithm is running. false : Algorithm is NOT running.')
csmScrubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("elevated", 1), ("decreased", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubStatus.setStatus('current')
if mibBuilder.loadTexts: csmScrubStatus.setDescription('This object indicates whether an adaptive scrub or SEU algorithm is performing scrubs more frequently (elevated) due most likely to more frequent SEUs or decreased due to less frequent SEUs, or at a normal rate.')
csmScrubLastRun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubLastRun.setStatus('current')
if mibBuilder.loadTexts: csmScrubLastRun.setDescription('This object represents the date and time a scrub or SEU-mitigation algorithm last ran.')
csmScrubPassesCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubPassesCompleted.setStatus('current')
if mibBuilder.loadTexts: csmScrubPassesCompleted.setDescription("This object represents the total number of scrub or SEU-mitigations runs since the last 'clear SEU counters' CLI (command line interace) command was issued.")
csmScrubErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2), )
if mibBuilder.loadTexts: csmScrubErrorsTable.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsTable.setDescription('This table lists the errors and counts for the errors that the scrub algorithms are mitigating. All entries are added with the SEU subsystem is initialized.')
csmScrubErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsIndex"))
if mibBuilder.loadTexts: csmScrubErrorsEntry.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsEntry.setDescription('This object represents an entry in the csmScrubErrorsTable.')
csmScrubErrorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csmScrubErrorsIndex.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsIndex.setDescription('This object uniquely identifies the csmScrubEntry.')
csmScrubErrorsEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsEntPhysicalIndex.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsEntPhysicalIndex.setDescription('This object is represents the EntityPhysicalIndex (from the ENTITY-MIB) corresponding to the physical entity upon which the scrub or SEU-mitigation is being performed.')
csmScrubErrorsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsDescription.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsDescription.setDescription('This object represents the error name and may include things such as DDR memory errors, cache errors, register errors, and other processor-specific register errors.')
csmScrubErrorsReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsReference.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsReference.setDescription("This object provides a reference to a User's Manual entry, if one exists, for processor and other device-specific errors.")
csmScrubErrorsSingleBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsSingleBit.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsSingleBit.setDescription('This object counts the single-bit errors for the specific error type described by csmScrubErrorsDescription.')
csmScrubErrorsSingleBitInterrupts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsSingleBitInterrupts.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsSingleBitInterrupts.setDescription('This object counts number of interrupts thrown, if any, for single-bit errors that occurred for the specific error type described by csmScrubErrorsDescription.')
csmScrubErrorsMultibit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsMultibit.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsMultibit.setDescription('This object counts the multi-bit errors for the specific error type described by csmScrubErrorsDescription.')
csmScrubErrorsMultibitInterrupts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsMultibitInterrupts.setStatus('current')
if mibBuilder.loadTexts: csmScrubErrorsMultibitInterrupts.setDescription('This object counts number of interrupts thrown, if any, for multiple-bit errors that occurred for the specific error type described by csmScrubErrorsDescription.')
csmSeuEventLogMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogMaxEntries.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogMaxEntries.setDescription('This object represents the maximum number of entries in the csmSeuEventLogTable.')
csmSeuEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4), )
if mibBuilder.loadTexts: csmSeuEventLogTable.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogTable.setDescription('This table lists any special error and scrub or SEU-mitigation algorithm events that may have occurred and is limited to csmSeuEventLogMaxEntries. All entries are added with the SEU subsystem is initialized.')
csmSeuEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogIndex"))
if mibBuilder.loadTexts: csmSeuEventLogEntry.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogEntry.setDescription('This object represents an entry in the csmSeuEventLogTable.')
csmSeuEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csmSeuEventLogIndex.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogIndex.setDescription('This object uniquely identifies the csmScrubEventLogEntry.')
csmSeuEventLogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogDescription.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogDescription.setDescription('This object describes the event of interest.')
csmSeuEventLogReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogReference.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogReference.setDescription("This object provides a reference to a User's Manual entry, if one exists, that describes and provides more detail for the event of interest.")
csmSeuEventLogAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogAddress.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogAddress.setDescription('This object provides the hexadecimal address (if one exists) associated with the event that occurred.')
csmSeuEventLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogTimeStamp.setStatus('current')
if mibBuilder.loadTexts: csmSeuEventLogTimeStamp.setDescription('This object provides a date-and-time-stamp for the event that occurred.')
csmSeuScrubAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 701, 0, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmScrubStatus"))
if mibBuilder.loadTexts: csmSeuScrubAlert.setStatus('current')
if mibBuilder.loadTexts: csmSeuScrubAlert.setDescription('Notifies NMS when the scrub rate or SEU-mitigation rate is elevated, decreased or returns to normal.')
ciscoSeuMitigationMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 1))
ciscoSeuMitigationMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2))
ciscoSeuMitigationMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 1, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "ciscoSeuMitigationMIBMainObjectGroup"), ("CISCO-SEU-MITIGATION-MIB", "ciscoSeuMitigationMIBNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBCompliance = ciscoSeuMitigationMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoSeuMitigationMIBCompliance.setDescription('This is the module-compliance containing default object groups.')
ciscoSeuMitigationMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmScrubEntPhysicalIndex"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubAlgorithmEnabled"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubScrubName"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRateAdaptive"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubDeltaInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubDeltaIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRetryInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRetryIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubCurrentInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubCurrentIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdIntervalCount"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdErrorValue"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunning"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubStatus"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubLastRun"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubPassesCompleted"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsEntPhysicalIndex"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsDescription"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsReference"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsSingleBit"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsSingleBitInterrupts"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsMultibit"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsMultibitInterrupts"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogMaxEntries"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogDescription"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogReference"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogAddress"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBMainObjectGroup = ciscoSeuMitigationMIBMainObjectGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSeuMitigationMIBMainObjectGroup.setDescription('This is the list of objects that are required for an agent to support the CISCO-SEU-MITIGATION-MIB.')
ciscoSeuMitigationMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2, 2)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmSeuScrubAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBNotificationGroup = ciscoSeuMitigationMIBNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSeuMitigationMIBNotificationGroup.setDescription('This is the list of Notifications required for an agent to support the CISCO-SEU-MITIGATION-MIB.')
mibBuilder.exportSymbols("CISCO-SEU-MITIGATION-MIB", csmScrubRateAdaptive=csmScrubRateAdaptive, csmScrubRunIntervalUnits=csmScrubRunIntervalUnits, ciscoSeuMitigationMIBNotifs=ciscoSeuMitigationMIBNotifs, csmScrubEntPhysicalIndex=csmScrubEntPhysicalIndex, csmSeuEventLogDescription=csmSeuEventLogDescription, csmScrubRunning=csmScrubRunning, csmSeuScrubAlert=csmSeuScrubAlert, csmScrubErrorsMultibit=csmScrubErrorsMultibit, csmScrubPassesCompleted=csmScrubPassesCompleted, csmScrubThresholdInterval=csmScrubThresholdInterval, csmScrubStatus=csmScrubStatus, csmScrubErrorsIndex=csmScrubErrorsIndex, csmSeuEventLogEntry=csmSeuEventLogEntry, csmScrubScrubName=csmScrubScrubName, csmScrubErrorsEntPhysicalIndex=csmScrubErrorsEntPhysicalIndex, ciscoSeuMitigationMIBGroups=ciscoSeuMitigationMIBGroups, ciscoSeuMitigationMIBObjects=ciscoSeuMitigationMIBObjects, csmScrubDeltaInterval=csmScrubDeltaInterval, csmScrubRetryInterval=csmScrubRetryInterval, csmScrubErrorsSingleBit=csmScrubErrorsSingleBit, csmScrubErrorsSingleBitInterrupts=csmScrubErrorsSingleBitInterrupts, csmSeuEventLogTable=csmSeuEventLogTable, csmScrubRunInterval=csmScrubRunInterval, csmScrubThresholdErrorValue=csmScrubThresholdErrorValue, csmSeuEventLogMaxEntries=csmSeuEventLogMaxEntries, csmSeuEventLogReference=csmSeuEventLogReference, csmSeuEventLogIndex=csmSeuEventLogIndex, ciscoSeuMitigationMIB=ciscoSeuMitigationMIB, ciscoSeuMitigationMIBCompliance=ciscoSeuMitigationMIBCompliance, csmScrubLastRun=csmScrubLastRun, csmScrubErrorsTable=csmScrubErrorsTable, csmScrubErrorsEntry=csmScrubErrorsEntry, csmScrubCurrentInterval=csmScrubCurrentInterval, csmScrubEntry=csmScrubEntry, ciscoSeuMitigationMIBMainObjectGroup=ciscoSeuMitigationMIBMainObjectGroup, ciscoSeuMitigationMIBCompliances=ciscoSeuMitigationMIBCompliances, csmScrubRetryIntervalUnits=csmScrubRetryIntervalUnits, csmScrubDeltaIntervalUnits=csmScrubDeltaIntervalUnits, csmScrubThresholdIntervalCount=csmScrubThresholdIntervalCount, csmScrubAlgorithmEnabled=csmScrubAlgorithmEnabled, ciscoSeuMitigationMIBConform=ciscoSeuMitigationMIBConform, csmScrubErrorsMultibitInterrupts=csmScrubErrorsMultibitInterrupts, csmScrubThresholdIntervalUnits=csmScrubThresholdIntervalUnits, csmScrubTable=csmScrubTable, csmScrubIndex=csmScrubIndex, csmScrubErrorsReference=csmScrubErrorsReference, csmSeuEventLogAddress=csmSeuEventLogAddress, csmSeuEventLogTimeStamp=csmSeuEventLogTimeStamp, ciscoSeuMitigationMIBNotificationGroup=ciscoSeuMitigationMIBNotificationGroup, PYSNMP_MODULE_ID=ciscoSeuMitigationMIB, csmScrubErrorsDescription=csmScrubErrorsDescription, csmScrubCurrentIntervalUnits=csmScrubCurrentIntervalUnits)
