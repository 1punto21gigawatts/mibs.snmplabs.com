#
# PySNMP MIB module Nortel-Magellan-Passport-ExtensionsMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-ExtensionsMIB
# Produced by pysmi-0.3.4 at Wed May  1 14:27:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
RowPointer, = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "RowPointer")
passportMIBs, components = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs", "components")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Bits, NotificationType, ModuleIdentity, ObjectIdentity, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, MibIdentifier, Counter32, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "MibIdentifier", "Counter32", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
extensionsMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5))
extensions = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 4))
extensionIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 4, 1), )
if mibBuilder.loadTexts: extensionIfTable.setStatus('mandatory')
if mibBuilder.loadTexts: extensionIfTable.setDescription('A table which provides enterprise extensions to the standard ifTable.')
extensionIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: extensionIfEntry.setStatus('mandatory')
if mibBuilder.loadTexts: extensionIfEntry.setDescription(' An entry containing enterprise extensions to the standard ifEntry.')
ifRowPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 4, 1, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifRowPointer.setStatus('mandatory')
if mibBuilder.loadTexts: ifRowPointer.setDescription('A pointer to the RowStatus variable for the component represented by the ifTable entry.')
extensionsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 1))
extensionsGroupBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 1, 3))
extensionsGroupBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 1, 3, 2))
extensionsGroupBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 1, 3, 2, 2))
extensionsCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 3))
extensionsCapabilitiesBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 3, 3))
extensionsCapabilitiesBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 3, 3, 2))
extensionsCapabilitiesBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 5, 3, 3, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-ExtensionsMIB", extensionsGroupBC02=extensionsGroupBC02, extensionIfEntry=extensionIfEntry, extensionsGroupBC02A=extensionsGroupBC02A, extensionIfTable=extensionIfTable, extensionsGroupBC=extensionsGroupBC, extensionsCapabilitiesBC02=extensionsCapabilitiesBC02, extensionsCapabilitiesBC02A=extensionsCapabilitiesBC02A, extensions=extensions, extensionsGroup=extensionsGroup, extensionsMIB=extensionsMIB, ifRowPointer=ifRowPointer, extensionsCapabilities=extensionsCapabilities, extensionsCapabilitiesBC=extensionsCapabilitiesBC)
