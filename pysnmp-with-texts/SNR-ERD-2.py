#
# PySNMP MIB module SNR-ERD-2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNR-ERD-2
# Produced by pysmi-0.3.4 at Wed May  1 15:08:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, TimeTicks, Counter64, Unsigned32, IpAddress, enterprises, Counter32, MibIdentifier, ObjectIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "Counter64", "Unsigned32", "IpAddress", "enterprises", "Counter32", "MibIdentifier", "ObjectIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snr = ModuleIdentity((1, 3, 6, 1, 4, 1, 40418))
snr.setRevisions(('2015-04-29 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: snr.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: snr.setLastUpdated('201504291200Z')
if mibBuilder.loadTexts: snr.setOrganization('NAG ')
if mibBuilder.loadTexts: snr.setContactInfo('erd@nag.ru')
if mibBuilder.loadTexts: snr.setDescription('The MIB module for SNR-ERD')
snr_erd = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2)).setLabel("snr-erd")
snr_erd_2 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2)).setLabel("snr-erd-2")
ipAddressEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1))
resetsSet = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2))
sensesSet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3))
sensesSet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4))
commS = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5))
erd2Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0))
temperatureSensorAlarM = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 0))
if mibBuilder.loadTexts: temperatureSensorAlarM.setStatus('current')
if mibBuilder.loadTexts: temperatureSensorAlarM.setDescription('Check the text of message')
temperatureSensorReleasE = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 1))
if mibBuilder.loadTexts: temperatureSensorReleasE.setStatus('current')
if mibBuilder.loadTexts: temperatureSensorReleasE.setDescription('Check the text of message')
signalContact3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 2))
if mibBuilder.loadTexts: signalContact3Alarm.setStatus('current')
if mibBuilder.loadTexts: signalContact3Alarm.setDescription('Check the text of message')
signalContact3Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 3))
if mibBuilder.loadTexts: signalContact3Ok.setStatus('current')
if mibBuilder.loadTexts: signalContact3Ok.setDescription('Check the text of message')
voltageSignalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 4))
if mibBuilder.loadTexts: voltageSignalAlarm.setStatus('current')
if mibBuilder.loadTexts: voltageSignalAlarm.setDescription('Check the text of message')
voltageSignalOk = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 5))
if mibBuilder.loadTexts: voltageSignalOk.setStatus('current')
if mibBuilder.loadTexts: voltageSignalOk.setDescription('Check the text of message')
anySensorSignal1contact4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 6))
if mibBuilder.loadTexts: anySensorSignal1contact4Alarm.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal1contact4Alarm.setDescription('Check the text of message')
anySensorSignal1contact4Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 7))
if mibBuilder.loadTexts: anySensorSignal1contact4Ok.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal1contact4Ok.setDescription('Check the text of message')
anySensorSignal2contact7Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 8))
if mibBuilder.loadTexts: anySensorSignal2contact7Alarm.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal2contact7Alarm.setDescription('Check the text of message')
anySensorSignal2contact7Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 9))
if mibBuilder.loadTexts: anySensorSignal2contact7Ok.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal2contact7Ok.setDescription('Check the text of message')
anySensorSignal3contact9Alarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 10))
if mibBuilder.loadTexts: anySensorSignal3contact9Alarm.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal3contact9Alarm.setDescription('Check the text of message')
anySensorSignal3contact9Ok = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 11))
if mibBuilder.loadTexts: anySensorSignal3contact9Ok.setStatus('current')
if mibBuilder.loadTexts: anySensorSignal3contact9Ok.setDescription('Check the text of message')
voltageAlarm = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 12))
if mibBuilder.loadTexts: voltageAlarm.setStatus('current')
if mibBuilder.loadTexts: voltageAlarm.setDescription('Check the text of message')
voltageOk = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 13))
if mibBuilder.loadTexts: voltageOk.setStatus('current')
if mibBuilder.loadTexts: voltageOk.setDescription('Check the text of message')
remoteControlContact8ON = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 14))
if mibBuilder.loadTexts: remoteControlContact8ON.setStatus('current')
if mibBuilder.loadTexts: remoteControlContact8ON.setDescription('Check the text of message')
remoteControlContact8OFF = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 15))
if mibBuilder.loadTexts: remoteControlContact8OFF.setStatus('current')
if mibBuilder.loadTexts: remoteControlContact8OFF.setDescription('Check the text of message')
resetedSmartContact6 = NotificationType((1, 3, 6, 1, 4, 1, 40418, 2, 2, 0, 16))
if mibBuilder.loadTexts: resetedSmartContact6.setStatus('current')
if mibBuilder.loadTexts: resetedSmartContact6.setDescription('Check the text of message')
erd2TrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 40418, 2, 2, 99)).setObjects(("SNR-ERD-2", "temperatureSensorAlarM"), ("SNR-ERD-2", "temperatureSensorReleasE"), ("SNR-ERD-2", "signalContact3Alarm"), ("SNR-ERD-2", "signalContact3Ok"), ("SNR-ERD-2", "voltageSignalAlarm"), ("SNR-ERD-2", "voltageSignalOk"), ("SNR-ERD-2", "anySensorSignal1contact4Alarm"), ("SNR-ERD-2", "anySensorSignal1contact4Ok"), ("SNR-ERD-2", "anySensorSignal2contact7Alarm"), ("SNR-ERD-2", "anySensorSignal2contact7Ok"), ("SNR-ERD-2", "anySensorSignal3contact9Alarm"), ("SNR-ERD-2", "anySensorSignal3contact9Ok"), ("SNR-ERD-2", "voltageAlarm"), ("SNR-ERD-2", "voltageOk"), ("SNR-ERD-2", "remoteControlContact8ON"), ("SNR-ERD-2", "remoteControlContact8OFF"), ("SNR-ERD-2", "resetedSmartContact6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    erd2TrapGroup = erd2TrapGroup.setStatus('current')
if mibBuilder.loadTexts: erd2TrapGroup.setDescription(' ')
ipAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipAddress.setStatus('current')
if mibBuilder.loadTexts: ipAddress.setDescription('myIp')
ipGatewayAddress = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipGatewayAddress.setStatus('current')
if mibBuilder.loadTexts: ipGatewayAddress.setDescription('DGIp')
ipMonitoringDevice = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipMonitoringDevice.setStatus('current')
if mibBuilder.loadTexts: ipMonitoringDevice.setDescription('monitoredIP')
ipForTrap = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipForTrap.setStatus('current')
if mibBuilder.loadTexts: ipForTrap.setDescription('ipForTrap')
resetSmartContact6 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reset", 1), ("bypass", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetSmartContact6.setStatus('current')
if mibBuilder.loadTexts: resetSmartContact6.setDescription('qwerty')
numberOfResetPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfResetPositives.setStatus('current')
if mibBuilder.loadTexts: numberOfResetPositives.setDescription('qwerty')
remoteControlContact8 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 2, 1, 0, 6, 5))).clone(namedValues=NamedValues(("termostatSetON", 3), ("switch", 4), ("manualSetON", 2), ("manOFF", 1), ("manON", 0), ("autoOFF", 6), ("autoON", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: remoteControlContact8.setStatus('current')
if mibBuilder.loadTexts: remoteControlContact8.setDescription('qwerty')
monitorAlarmSignalContact3 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("doorIsClose", 1), ("doorIsOpen", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAlarmSignalContact3.setStatus('current')
if mibBuilder.loadTexts: monitorAlarmSignalContact3.setDescription('qwerty')
numberOfAlarmPositives = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("resetPositives", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: numberOfAlarmPositives.setStatus('current')
if mibBuilder.loadTexts: numberOfAlarmPositives.setDescription('qwerty')
monitorAnySensorSignal1contact4 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal1contact4.setStatus('current')
if mibBuilder.loadTexts: monitorAnySensorSignal1contact4.setDescription('qwerty')
monitorAnySensorSignal2contact7 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal2contact7.setStatus('current')
if mibBuilder.loadTexts: monitorAnySensorSignal2contact7.setDescription('qwerty')
monitorAnySensorSignal3contact9 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 1, 2, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("sensorIs0", 1), ("sensorIs1", 2), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorAnySensorSignal3contact9.setStatus('current')
if mibBuilder.loadTexts: monitorAnySensorSignal3contact9.setDescription('qwerty')
monitorVoltageSignal = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1, 0))).clone(namedValues=NamedValues(("sensorOn", 3), ("voltageIsYes", 2), ("voltageIsNo", 1), ("sensorOff", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: monitorVoltageSignal.setStatus('current')
if mibBuilder.loadTexts: monitorVoltageSignal.setDescription('qwerty')
temperatureSensor = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: temperatureSensor.setStatus('current')
if mibBuilder.loadTexts: temperatureSensor.setDescription('qwerty')
voltageSensorContact10 = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voltageSensorContact10.setStatus('current')
if mibBuilder.loadTexts: voltageSensorContact10.setDescription('qwerty')
sysVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysVoltageAlarm.setStatus('current')
if mibBuilder.loadTexts: sysVoltageAlarm.setDescription('qwerty')
communityString = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityString.setStatus('current')
if mibBuilder.loadTexts: communityString.setDescription('qwerty')
trapMode = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("once", 1), ("cyclically", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapMode.setStatus('current')
if mibBuilder.loadTexts: trapMode.setDescription('qwerty')
alarmSenseName = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmSenseName.setStatus('current')
if mibBuilder.loadTexts: alarmSenseName.setDescription('qwerty')
userSense1Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense1Name.setStatus('current')
if mibBuilder.loadTexts: userSense1Name.setDescription('qwerty')
userSense2Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense2Name.setStatus('current')
if mibBuilder.loadTexts: userSense2Name.setDescription('qwerty')
userSense3Name = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userSense3Name.setStatus('current')
if mibBuilder.loadTexts: userSense3Name.setDescription('qwerty')
message = MibScalar((1, 3, 6, 1, 4, 1, 40418, 2, 2, 5, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: message.setStatus('current')
if mibBuilder.loadTexts: message.setDescription('Text trap message')
mibBuilder.exportSymbols("SNR-ERD-2", userSense2Name=userSense2Name, resetsSet=resetsSet, communityString=communityString, message=message, signalContact3Alarm=signalContact3Alarm, ipAddress=ipAddress, remoteControlContact8=remoteControlContact8, temperatureSensorAlarM=temperatureSensorAlarM, remoteControlContact8ON=remoteControlContact8ON, monitorAnySensorSignal2contact7=monitorAnySensorSignal2contact7, ipMonitoringDevice=ipMonitoringDevice, trapMode=trapMode, temperatureSensor=temperatureSensor, voltageSensorContact10=voltageSensorContact10, ipAddressEntry=ipAddressEntry, voltageSignalOk=voltageSignalOk, numberOfResetPositives=numberOfResetPositives, numberOfAlarmPositives=numberOfAlarmPositives, userSense1Name=userSense1Name, commS=commS, remoteControlContact8OFF=remoteControlContact8OFF, sysVoltageAlarm=sysVoltageAlarm, erd2TrapGroup=erd2TrapGroup, voltageAlarm=voltageAlarm, temperatureSensorReleasE=temperatureSensorReleasE, monitorAlarmSignalContact3=monitorAlarmSignalContact3, voltageSignalAlarm=voltageSignalAlarm, monitorAnySensorSignal3contact9=monitorAnySensorSignal3contact9, snr_erd_2=snr_erd_2, voltageOk=voltageOk, anySensorSignal3contact9Alarm=anySensorSignal3contact9Alarm, ipGatewayAddress=ipGatewayAddress, alarmSenseName=alarmSenseName, userSense3Name=userSense3Name, monitorVoltageSignal=monitorVoltageSignal, anySensorSignal1contact4Ok=anySensorSignal1contact4Ok, snr=snr, signalContact3Ok=signalContact3Ok, snr_erd=snr_erd, anySensorSignal2contact7Ok=anySensorSignal2contact7Ok, sensesSet2=sensesSet2, ipForTrap=ipForTrap, PYSNMP_MODULE_ID=snr, sensesSet1=sensesSet1, anySensorSignal1contact4Alarm=anySensorSignal1contact4Alarm, erd2Traps=erd2Traps, monitorAnySensorSignal1contact4=monitorAnySensorSignal1contact4, anySensorSignal3contact9Ok=anySensorSignal3contact9Ok, resetSmartContact6=resetSmartContact6, resetedSmartContact6=resetedSmartContact6, anySensorSignal2contact7Alarm=anySensorSignal2contact7Alarm)
