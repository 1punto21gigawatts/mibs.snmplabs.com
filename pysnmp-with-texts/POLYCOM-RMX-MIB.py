#
# PySNMP MIB module POLYCOM-RMX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/POLYCOM-RMX-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:41:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, Counter32, ModuleIdentity, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Gauge32, MibIdentifier, TimeTicks, NotificationType, ObjectIdentity, IpAddress, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "Counter32", "ModuleIdentity", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Gauge32", "MibIdentifier", "TimeTicks", "NotificationType", "ObjectIdentity", "IpAddress", "NotificationType")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
polycom = ModuleIdentity((1, 3, 6, 1, 4, 1, 13885))
if mibBuilder.loadTexts: polycom.setLastUpdated('200703140000Z')
if mibBuilder.loadTexts: polycom.setOrganization('Polycom Ltd.')
if mibBuilder.loadTexts: polycom.setContactInfo('Sagi Amiel')
if mibBuilder.loadTexts: polycom.setDescription('This is RMX MCU MIB')
nsdProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9))
rmx = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1))
rmxMib1 = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1))
rmxMib1General = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 1))
rmxMib1Events = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2))
rmxMib1EventsParams = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1))
rmxNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2))
rmxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0))
rmxProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 10))
rmx2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 10, 1))
rmx4000 = MibIdentifier((1, 3, 6, 1, 4, 1, 13885, 9, 1, 10, 2))
class RmxStatus(TextualConvention, Integer32):
    description = 'A possible status of RMX'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("normal", 0), ("startup", 1), ("minor", 2), ("major", 3))

rmxCurrentStatus = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 1, 1), RmxStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rmxCurrentStatus.setStatus('current')
if mibBuilder.loadTexts: rmxCurrentStatus.setDescription('MCU current status')
rmxAlarmDescription = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rmxAlarmDescription.setStatus('current')
if mibBuilder.loadTexts: rmxAlarmDescription.setDescription('Active alarm description')
rmxActiveAlarmDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1, 2), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rmxActiveAlarmDateAndTime.setStatus('current')
if mibBuilder.loadTexts: rmxActiveAlarmDateAndTime.setDescription('Active alarm date and time')
rmxActiveAlarmIndex = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rmxActiveAlarmIndex.setStatus('current')
if mibBuilder.loadTexts: rmxActiveAlarmIndex.setDescription('Active alarm table unique index number')
rmxActiveAlarmListName = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rmxActiveAlarmListName.setStatus('current')
if mibBuilder.loadTexts: rmxActiveAlarmListName.setDescription('The alarmListName value of this entery.')
rmxActiveAlarmRmxStatus = MibScalar((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 1, 5), RmxStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: rmxActiveAlarmRmxStatus.setStatus('current')
if mibBuilder.loadTexts: rmxActiveAlarmRmxStatus.setDescription('The current status of the RMX')
rmxNoLicensingAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5001)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoLicensingAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoLicensingAlarmFault.setDescription('License not found')
rmxNoLicensingAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15001)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoLicensingAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoLicensingAlarmClear.setDescription('License not found')
rmxNoMeetingRoomAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5002)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoMeetingRoomAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoMeetingRoomAlarmFault.setDescription('Resource process did not receive the Meeting Room list during startup.')
rmxNoMeetingRoomAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15002)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoMeetingRoomAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoMeetingRoomAlarmClear.setDescription('Resource process did not receive the Meeting Room list during startup.')
rmxNoIpServiceParamsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5003)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIpServiceParamsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoIpServiceParamsAlarmFault.setDescription('No IP Network Services defined')
rmxNoIpServiceParamsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15003)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIpServiceParamsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoIpServiceParamsAlarmClear.setDescription('No IP Network Services defined')
rmxTaskTerminatedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5004)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTaskTerminatedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxTaskTerminatedAlarmFault.setDescription('Task terminated')
rmxTaskTerminatedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15004)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTaskTerminatedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxTaskTerminatedAlarmClear.setDescription('Task terminated')
rmxCfgChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5005)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCfgChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCfgChangedAlarmFault.setDescription('System Configuration modified')
rmxCfgChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15005)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCfgChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCfgChangedAlarmClear.setDescription('System Configuration modified')
rmxCfgInvalidAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5006)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCfgInvalidAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCfgInvalidAlarmFault.setDescription('Invalid System Configuration')
rmxCfgInvalidAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15006)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCfgInvalidAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCfgInvalidAlarmClear.setDescription('Invalid System Configuration')
rmxDebugModeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5007)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDebugModeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDebugModeAlarmFault.setDescription('DEBUG mode enabled')
rmxDebugModeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15007)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDebugModeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDebugModeAlarmClear.setDescription('DEBUG mode enabled')
rmxLowProcessMemoryAlertAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5008)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxLowProcessMemoryAlertAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxLowProcessMemoryAlertAlarmFault.setDescription('Low Processing Memory')
rmxLowProcessMemoryAlertAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15008)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxLowProcessMemoryAlertAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxLowProcessMemoryAlertAlarmClear.setDescription('Low Processing Memory')
rmxLowSystemMemoryAlertAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5009)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxLowSystemMemoryAlertAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxLowSystemMemoryAlertAlarmFault.setDescription('Low system Memory')
rmxLowSystemMemoryAlertAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15009)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxLowSystemMemoryAlertAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxLowSystemMemoryAlertAlarmClear.setDescription('Low system Memory')
rmxSystemCpuUsageAlertAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5010)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemCpuUsageAlertAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSystemCpuUsageAlertAlarmFault.setDescription('High system CPU usage')
rmxSystemCpuUsageAlertAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15010)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemCpuUsageAlertAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSystemCpuUsageAlertAlarmClear.setDescription('High system CPU usage')
rmxTestErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5011)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTestErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxTestErrorAlarmFault.setDescription('Used for testing the Active Alarms mechanism')
rmxTestErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15011)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTestErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxTestErrorAlarmClear.setDescription('Used for testing the Active Alarms mechanism')
rmxSipSecuredCommunicationFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5012)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSipSecuredCommunicationFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSipSecuredCommunicationFailedAlarmFault.setDescription('Secured SIP communication failed')
rmxSipSecuredCommunicationFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15012)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSipSecuredCommunicationFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSipSecuredCommunicationFailedAlarmClear.setDescription('Secured SIP communication failed')
rmxBadFileAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5013)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadFileAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBadFileAlarmFault.setDescription('File error')
rmxBadFileAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15013)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadFileAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBadFileAlarmClear.setDescription('File error')
rmxHighCpuUsageProcessAlertAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5014)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHighCpuUsageProcessAlertAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxHighCpuUsageProcessAlertAlarmFault.setDescription('High CPU utilization')
rmxHighCpuUsageProcessAlertAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15014)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHighCpuUsageProcessAlertAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxHighCpuUsageProcessAlertAlarmClear.setDescription('High CPU utilization')
rmxIdleDeadlineReachedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5016)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIdleDeadlineReachedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIdleDeadlineReachedAlarmFault.setDescription('Process idle')
rmxIdleDeadlineReachedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15016)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIdleDeadlineReachedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIdleDeadlineReachedAlarmClear.setDescription('Process idle')
rmxStartupConditionConfigurationAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5017)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxStartupConditionConfigurationAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxStartupConditionConfigurationAlarmFault.setDescription('Internal System configuration during startup')
rmxStartupConditionConfigurationAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15017)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxStartupConditionConfigurationAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxStartupConditionConfigurationAlarmClear.setDescription('Internal System configuration during startup')
rmxRestoringDefaultFactoryAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5018)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoringDefaultFactoryAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRestoringDefaultFactoryAlarmFault.setDescription('Restoring Factory Defaults. Default system settings will be restored once Reset is completed')
rmxRestoringDefaultFactoryAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15018)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoringDefaultFactoryAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRestoringDefaultFactoryAlarmClear.setDescription('Restoring Factory Defaults. Default system settings will be restored once Reset is completed')
rmxIpVersionChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5019)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpVersionChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIpVersionChangedAlarmFault.setDescription('IP Version has been changed')
rmxIpVersionChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15019)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpVersionChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIpVersionChangedAlarmClear.setDescription('IP Version has been changed')
rmxNoServiceFoundInDbAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoServiceFoundInDbAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoServiceFoundInDbAlarmFault.setDescription('IP Network Service not found')
rmxNoServiceFoundInDbAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoServiceFoundInDbAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoServiceFoundInDbAlarmClear.setDescription('IP Network Service not found')
rmxNoConnectionWithCsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5052)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithCsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithCsAlarmFault.setDescription('No response from Central Signaling')
rmxNoConnectionWithCsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15052)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithCsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithCsAlarmClear.setDescription('No response from Central Signaling')
rmxCsComponentFatalAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5053)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsComponentFatalAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCsComponentFatalAlarmFault.setDescription('Central signaling component failure')
rmxCsComponentFatalAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15053)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsComponentFatalAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCsComponentFatalAlarmClear.setDescription('Central signaling component failure')
rmxCsNotConfiguredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5054)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsNotConfiguredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCsNotConfiguredAlarmFault.setDescription('Missing Central Signaling configuration')
rmxCsNotConfiguredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15054)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsNotConfiguredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCsNotConfiguredAlarmClear.setDescription('Missing Central Signaling configuration')
rmxCsServiceStateFailAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5055)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsServiceStateFailAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCsServiceStateFailAlarmFault.setDescription('Central Signaling indicating Faulty status')
rmxCsServiceStateFailAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15055)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsServiceStateFailAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCsServiceStateFailAlarmClear.setDescription('Central Signaling indicating Faulty status')
rmxCsStartupFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5056)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsStartupFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCsStartupFailedAlarmFault.setDescription('Central Signaling startup failure')
rmxCsStartupFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15056)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsStartupFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCsStartupFailedAlarmClear.setDescription('Central Signaling startup failure')
rmxDuplicateIpCsMngmntAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5058)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDuplicateIpCsMngmntAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDuplicateIpCsMngmntAlarmFault.setDescription('IP addresses of Signaling Host and Control Unit are the same')
rmxDuplicateIpCsMngmntAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15058)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDuplicateIpCsMngmntAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDuplicateIpCsMngmntAlarmClear.setDescription('IP addresses of Signaling Host and Control Unit are the same')
rmxIpServiceDeletedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5059)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpServiceDeletedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIpServiceDeletedAlarmFault.setDescription('IP Network Service deleted')
rmxIpServiceDeletedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15059)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpServiceDeletedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIpServiceDeletedAlarmClear.setDescription('IP Network Service deleted')
rmxIpServiceChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5060)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpServiceChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIpServiceChangedAlarmFault.setDescription('IP Network Service configuration modified')
rmxIpServiceChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15060)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIpServiceChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIpServiceChangedAlarmClear.setDescription('IP Network Service configuration modified')
rmxCsRecoveryStatusAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5061)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsRecoveryStatusAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCsRecoveryStatusAlarmFault.setDescription('Central Signaling indicating Recovery status')
rmxCsRecoveryStatusAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15061)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCsRecoveryStatusAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCsRecoveryStatusAlarmClear.setDescription('Central Signaling indicating Recovery status')
rmxExternalAlertCsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5062)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalAlertCsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxExternalAlertCsAlarmFault.setDescription('Alarm generated by a Central Signaling component')
rmxExternalAlertCsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15062)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalAlertCsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxExternalAlertCsAlarmClear.setDescription('Alarm generated by a Central Signaling component')
rmxProductActivationFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5100)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProductActivationFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxProductActivationFailureAlarmFault.setDescription('Product activation failure')
rmxProductActivationFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15100)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProductActivationFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxProductActivationFailureAlarmClear.setDescription('Product activation failure')
rmxNoManagementIpInterfaceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5101)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoManagementIpInterfaceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoManagementIpInterfaceAlarmFault.setDescription('Management Network not configured')
rmxNoManagementIpInterfaceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15101)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoManagementIpInterfaceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoManagementIpInterfaceAlarmClear.setDescription('Management Network not configured')
rmxNoTimeConfigurationAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5102)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoTimeConfigurationAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoTimeConfigurationAlarmFault.setDescription('Error reading MCU time')
rmxNoTimeConfigurationAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15102)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoTimeConfigurationAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoTimeConfigurationAlarmClear.setDescription('Error reading MCU time')
rmxMplStartupFailureAuthenticationNotReceivedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5103)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMplStartupFailureAuthenticationNotReceivedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxMplStartupFailureAuthenticationNotReceivedAlarmFault.setDescription('MPL startup failure. Authentication not received.')
rmxMplStartupFailureAuthenticationNotReceivedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15103)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMplStartupFailureAuthenticationNotReceivedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxMplStartupFailureAuthenticationNotReceivedAlarmClear.setDescription('MPL startup failure. Authentication not received.')
rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5104)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmFault.setDescription('MPL startup failure. Management Network configuration not received.')
rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15104)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmClear.setDescription('MPL startup failure. Management Network configuration not received.')
rmxNoDnsConfigurationAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5105)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoDnsConfigurationAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoDnsConfigurationAlarmFault.setDescription('DNS not configured in IP Network Service')
rmxNoDnsConfigurationAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15105)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoDnsConfigurationAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoDnsConfigurationAlarmClear.setDescription('DNS not configured in IP Network Service')
rmxDnsRegistraionFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5106)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDnsRegistraionFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDnsRegistraionFailedAlarmFault.setDescription('Failed to register with DNS server')
rmxDnsRegistraionFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15106)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDnsRegistraionFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDnsRegistraionFailedAlarmClear.setDescription('Failed to register with DNS server')
rmxFailedToOpenApacheConfigurationFileAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5107)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToOpenApacheConfigurationFileAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToOpenApacheConfigurationFileAlarmFault.setDescription('Failed to open Apache server configuration file')
rmxFailedToOpenApacheConfigurationFileAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15107)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToOpenApacheConfigurationFileAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToOpenApacheConfigurationFileAlarmClear.setDescription('Failed to open Apache server configuration file')
rmxFailedToSaveApacheConfigurationFileAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5108)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToSaveApacheConfigurationFileAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToSaveApacheConfigurationFileAlarmFault.setDescription('Failed to save Apache server configuration file')
rmxFailedToSaveApacheConfigurationFileAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15108)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToSaveApacheConfigurationFileAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToSaveApacheConfigurationFileAlarmClear.setDescription('Failed to save Apache server configuration file')
rmxPatchedVersionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5109)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPatchedVersionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxPatchedVersionAlarmFault.setDescription('The software contains patch(es)')
rmxPatchedVersionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15109)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPatchedVersionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxPatchedVersionAlarmClear.setDescription('The software contains patch(es)')
rmxPrivateVersionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5110)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPrivateVersionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxPrivateVersionAlarmFault.setDescription('A private version is loaded')
rmxPrivateVersionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15110)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPrivateVersionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxPrivateVersionAlarmClear.setDescription('A private version is loaded')
rmxNtpSyncFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5111)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNtpSyncFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNtpSyncFailureAlarmFault.setDescription('NTP synchronization failure')
rmxNtpSyncFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15111)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNtpSyncFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNtpSyncFailureAlarmClear.setDescription('NTP synchronization failure')
rmxIllegalTimeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5112)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIllegalTimeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIllegalTimeAlarmFault.setDescription('Invalid date and time')
rmxIllegalTimeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15112)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIllegalTimeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIllegalTimeAlarmClear.setDescription('Invalid date and time')
rmxExternalNtpServersFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5113)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalNtpServersFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxExternalNtpServersFailureAlarmFault.setDescription('External NTP servers failure')
rmxExternalNtpServersFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15113)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalNtpServersFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxExternalNtpServersFailureAlarmClear.setDescription('External NTP servers failure')
rmxRunningVersionMismatchesCurrentVersionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5114)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRunningVersionMismatchesCurrentVersionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRunningVersionMismatchesCurrentVersionAlarmFault.setDescription('Fallback version is being used')
rmxRunningVersionMismatchesCurrentVersionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15114)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRunningVersionMismatchesCurrentVersionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRunningVersionMismatchesCurrentVersionAlarmClear.setDescription('Fallback version is being used')
rmxIdeNotInDmaModeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5115)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIdeNotInDmaModeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIdeNotInDmaModeAlarmFault.setDescription('DMA not supported by IDE device')
rmxIdeNotInDmaModeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15115)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIdeNotInDmaModeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIdeNotInDmaModeAlarmClear.setDescription('DMA not supported by IDE device')
rmxBadEthernetSettingsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5116)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadEthernetSettingsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBadEthernetSettingsAlarmFault.setDescription('Incorrect Ethernet Settings')
rmxBadEthernetSettingsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15116)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadEthernetSettingsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBadEthernetSettingsAlarmClear.setDescription('Incorrect Ethernet Settings')
rmxSmartReportErrorsOnHdAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5117)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSmartReportErrorsOnHdAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSmartReportErrorsOnHdAlarmFault.setDescription('Smart Report found errors on hard disk')
rmxSmartReportErrorsOnHdAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15117)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSmartReportErrorsOnHdAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSmartReportErrorsOnHdAlarmClear.setDescription('Smart Report found errors on hard disk')
rmxIllegalMcuVersionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5118)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIllegalMcuVersionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIllegalMcuVersionAlarmFault.setDescription('Invalid MCU Version')
rmxIllegalMcuVersionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15118)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIllegalMcuVersionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIllegalMcuVersionAlarmClear.setDescription('Invalid MCU Version')
rmxDebugCfgExistAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5119)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDebugCfgExistAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDebugCfgExistAlarmFault.setDescription('DEBUG mode flags in use')
rmxDebugCfgExistAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15119)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDebugCfgExistAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDebugCfgExistAlarmClear.setDescription('DEBUG mode flags in use')
rmxInstallingNewVersionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5120)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInstallingNewVersionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxInstallingNewVersionAlarmFault.setDescription('Version upgrade is in progress')
rmxInstallingNewVersionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15120)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInstallingNewVersionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxInstallingNewVersionAlarmClear.setDescription('Version upgrade is in progress')
rmxSshEnabledAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5121)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSshEnabledAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSshEnabledAlarmFault.setDescription('SSH is enabled')
rmxSshEnabledAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15121)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSshEnabledAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSshEnabledAlarmClear.setDescription('SSH is enabled')
rmxFailedToValidateCertificateAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5122)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToValidateCertificateAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToValidateCertificateAlarmFault.setDescription('Security mode failed. Error in certificate file.')
rmxFailedToValidateCertificateAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15122)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToValidateCertificateAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToValidateCertificateAlarmClear.setDescription('Security mode failed. Error in certificate file.')
rmxCertificateExpiredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5123)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateExpiredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateExpiredAlarmFault.setDescription('Security mode failed. Certificate has expired.')
rmxCertificateExpiredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15123)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateExpiredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateExpiredAlarmClear.setDescription('Security mode failed. Certificate has expired.')
rmxCertificateCommonNameErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5124)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateCommonNameErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateCommonNameErrorAlarmFault.setDescription('Security mode failed. Certificate host name does not match the RMX host name.')
rmxCertificateCommonNameErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15124)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateCommonNameErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateCommonNameErrorAlarmClear.setDescription('Security mode failed. Certificate host name does not match the RMX host name.')
rmxCertificateNotValidYetAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5125)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateNotValidYetAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateNotValidYetAlarmFault.setDescription('Security mode failed. Certificate not yet valid.')
rmxCertificateNotValidYetAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15125)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateNotValidYetAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateNotValidYetAlarmClear.setDescription('Security mode failed. Certificate not yet valid.')
rmxCertificateGoingToBeExpiredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5126)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateGoingToBeExpiredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateGoingToBeExpiredAlarmFault.setDescription('Security mode failed. Certificate is about to expire.')
rmxCertificateGoingToBeExpiredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15126)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCertificateGoingToBeExpiredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCertificateGoingToBeExpiredAlarmClear.setDescription('Security mode failed. Certificate is about to expire.')
rmxProductTypeMismatchAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5127)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProductTypeMismatchAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxProductTypeMismatchAlarmFault.setDescription('Product Type mismatch. System is restarting.')
rmxProductTypeMismatchAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15127)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProductTypeMismatchAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxProductTypeMismatchAlarmClear.setDescription('Product Type mismatch. System is restarting.')
rmxUnknownCpuSlotIdAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5128)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUnknownCpuSlotIdAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxUnknownCpuSlotIdAlarmFault.setDescription('CPU slot ID not identified')
rmxUnknownCpuSlotIdAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15128)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUnknownCpuSlotIdAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxUnknownCpuSlotIdAlarmClear.setDescription('CPU slot ID not identified')
rmxNoFipsTestResultFromEncryptionkeyserverAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5129)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoFipsTestResultFromEncryptionkeyserverAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoFipsTestResultFromEncryptionkeyserverAlarmFault.setDescription('FIPS 140 test result not received')
rmxNoFipsTestResultFromEncryptionkeyserverAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15129)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoFipsTestResultFromEncryptionkeyserverAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoFipsTestResultFromEncryptionkeyserverAlarmClear.setDescription('FIPS 140 test result not received')
rmxFipsFailureWithinEncryptionkeyserverAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5130)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFipsFailureWithinEncryptionkeyserverAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFipsFailureWithinEncryptionkeyserverAlarmFault.setDescription('FIPS 140 failure')
rmxFipsFailureWithinEncryptionkeyserverAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15130)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFipsFailureWithinEncryptionkeyserverAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFipsFailureWithinEncryptionkeyserverAlarmClear.setDescription('FIPS 140 failure')
rmxHttpsDisabledInJitcAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5131)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHttpsDisabledInJitcAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxHttpsDisabledInJitcAlarmFault.setDescription('The system has been configured for JITC mode, but communication is not secured until a TLS certificate is installed and the MCU is set to Secured communication.')
rmxHttpsDisabledInJitcAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15131)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHttpsDisabledInJitcAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxHttpsDisabledInJitcAlarmClear.setDescription('The system has been configured for JITC mode, but communication is not secured until a TLS certificate is installed and the MCU is set to Secured communication.')
rmxBackupOfCdrFilesIsRequiredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5140)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfCdrFilesIsRequiredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfCdrFilesIsRequiredAlarmFault.setDescription('Backup of CDR files is required')
rmxBackupOfCdrFilesIsRequiredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15140)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfCdrFilesIsRequiredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfCdrFilesIsRequiredAlarmClear.setDescription('Backup of CDR files is required')
rmxNoMusicSourceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5150)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoMusicSourceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoMusicSourceAlarmFault.setDescription('Music file error')
rmxNoMusicSourceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15150)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoMusicSourceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoMusicSourceAlarmClear.setDescription('Music file error')
rmxSwitchNotLoadedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5151)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSwitchNotLoadedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSwitchNotLoadedAlarmFault.setDescription('SWITCH not responding')
rmxSwitchNotLoadedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15151)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSwitchNotLoadedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSwitchNotLoadedAlarmClear.setDescription('SWITCH not responding')
rmxNoIsdnServiceParamsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5152)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIsdnServiceParamsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoIsdnServiceParamsAlarmFault.setDescription('No ISDN/PSTN Network Services defined')
rmxNoIsdnServiceParamsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15152)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIsdnServiceParamsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoIsdnServiceParamsAlarmClear.setDescription('No ISDN/PSTN Network Services defined')
rmxModuleDoesNotExistAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5153)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxModuleDoesNotExistAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxModuleDoesNotExistAlarmFault.setDescription('Card not found')
rmxModuleDoesNotExistAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15153)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxModuleDoesNotExistAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxModuleDoesNotExistAlarmClear.setDescription('Card not found')
rmxNoDefaultIsdnServiceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5154)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoDefaultIsdnServiceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoDefaultIsdnServiceAlarmFault.setDescription('No default ISDN/PSTN Network Service defined in ISDN/PSTN Network Services list')
rmxNoDefaultIsdnServiceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15154)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoDefaultIsdnServiceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoDefaultIsdnServiceAlarmClear.setDescription('No default ISDN/PSTN Network Service defined in ISDN/PSTN Network Services list')
rmxExternalAlertEmbAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5155)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalAlertEmbAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxExternalAlertEmbAlarmFault.setDescription('Alarm generated by an internal component')
rmxExternalAlertEmbAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15155)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalAlertEmbAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxExternalAlertEmbAlarmClear.setDescription('Alarm generated by an internal component')
rmxVersionInstallProgressAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5156)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVersionInstallProgressAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxVersionInstallProgressAlarmFault.setDescription('Software upgrade in component')
rmxVersionInstallProgressAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15156)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVersionInstallProgressAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxVersionInstallProgressAlarmClear.setDescription('Software upgrade in component')
rmxVersionIpmcInstallProgressAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5157)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVersionIpmcInstallProgressAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxVersionIpmcInstallProgressAlarmFault.setDescription('IPMC software upgrade in component')
rmxVersionIpmcInstallProgressAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15157)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVersionIpmcInstallProgressAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxVersionIpmcInstallProgressAlarmClear.setDescription('IPMC software upgrade in component')
rmxVoltageProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5200)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVoltageProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxVoltageProblemAlarmFault.setDescription('Voltage problem')
rmxVoltageProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15200)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxVoltageProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxVoltageProblemAlarmClear.setDescription('Voltage problem')
rmxTemperatureMajorProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5201)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTemperatureMajorProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxTemperatureMajorProblemAlarmFault.setDescription('Temperature Level Major')
rmxTemperatureMajorProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15201)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTemperatureMajorProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxTemperatureMajorProblemAlarmClear.setDescription('Temperature Level Major')
rmxTemperatureCriticalProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5202)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTemperatureCriticalProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxTemperatureCriticalProblemAlarmFault.setDescription('Temperature Level Critical')
rmxTemperatureCriticalProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15202)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxTemperatureCriticalProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxTemperatureCriticalProblemAlarmClear.setDescription('Temperature Level Critical')
rmxFailureProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5203)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailureProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailureProblemAlarmFault.setDescription('Card failure')
rmxFailureProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15203)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailureProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailureProblemAlarmClear.setDescription('Card failure')
rmxPowerOffProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5204)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPowerOffProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxPowerOffProblemAlarmFault.setDescription('Power off')
rmxPowerOffProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15204)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPowerOffProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxPowerOffProblemAlarmClear.setDescription('Power off')
rmxOtherProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5205)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxOtherProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxOtherProblemAlarmFault.setDescription('Unspecified problem')
rmxOtherProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15205)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxOtherProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxOtherProblemAlarmClear.setDescription('Unspecified problem')
rmxNoConnectionWithCardAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5206)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithCardAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithCardAlarmFault.setDescription('Card not responding')
rmxNoConnectionWithCardAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15206)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithCardAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithCardAlarmClear.setDescription('Card not responding')
rmxUnitNotRespondingAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5207)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUnitNotRespondingAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxUnitNotRespondingAlarmFault.setDescription('Unit not responding')
rmxUnitNotRespondingAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15207)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUnitNotRespondingAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxUnitNotRespondingAlarmClear.setDescription('Unit not responding')
rmxMediaIpConfigurationFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5208)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMediaIpConfigurationFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxMediaIpConfigurationFailureAlarmFault.setDescription('Failed to configure the Media card IP address')
rmxMediaIpConfigurationFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15208)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxMediaIpConfigurationFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxMediaIpConfigurationFailureAlarmClear.setDescription('Failed to configure the Media card IP address')
rmxCardFolderMountingFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5209)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardFolderMountingFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCardFolderMountingFailedAlarmFault.setDescription('Failed to mount Card folder')
rmxCardFolderMountingFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15209)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardFolderMountingFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCardFolderMountingFailedAlarmClear.setDescription('Failed to mount Card folder')
rmxCardStartupFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5211)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardStartupFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCardStartupFailureAlarmFault.setDescription('Could not complete MPM Card startup procedure')
rmxCardStartupFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15211)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardStartupFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCardStartupFailureAlarmClear.setDescription('Could not complete MPM Card startup procedure')
rmxRtmIsdnStartupFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5212)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmIsdnStartupFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRtmIsdnStartupFailureAlarmFault.setDescription('Could not complete RTM ISDN Card startup procedure')
rmxRtmIsdnStartupFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15212)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmIsdnStartupFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRtmIsdnStartupFailureAlarmClear.setDescription('Could not complete RTM ISDN Card startup procedure')
rmxRtmIsdnStartupProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5213)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmIsdnStartupProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRtmIsdnStartupProblemAlarmFault.setDescription('RTM ISDN card startup procedure error')
rmxRtmIsdnStartupProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15213)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmIsdnStartupProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRtmIsdnStartupProblemAlarmClear.setDescription('RTM ISDN card startup procedure error')
rmxNoConnectionWithRtmIsdnAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5214)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithRtmIsdnAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithRtmIsdnAlarmFault.setDescription('No response from RTM ISDN card')
rmxNoConnectionWithRtmIsdnAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15214)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoConnectionWithRtmIsdnAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoConnectionWithRtmIsdnAlarmClear.setDescription('No response from RTM ISDN card')
rmxRedAlarmAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5215)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRedAlarmAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRedAlarmAlarmFault.setDescription('Red Alarm')
rmxRedAlarmAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15215)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRedAlarmAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRedAlarmAlarmClear.setDescription('Red Alarm')
rmxYellowAlarmAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5216)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxYellowAlarmAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxYellowAlarmAlarmFault.setDescription('Yellow Alarm')
rmxYellowAlarmAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15216)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxYellowAlarmAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxYellowAlarmAlarmClear.setDescription('Yellow Alarm')
rmxDChannelNotEstablishedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5217)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDChannelNotEstablishedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDChannelNotEstablishedAlarmFault.setDescription('D channel cannot be established')
rmxDChannelNotEstablishedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15217)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDChannelNotEstablishedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDChannelNotEstablishedAlarmClear.setDescription('D channel cannot be established')
rmxCardsConfigEventAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5218)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsConfigEventAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCardsConfigEventAlarmFault.setDescription('Card configuration event')
rmxCardsConfigEventAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15218)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsConfigEventAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCardsConfigEventAlarmClear.setDescription('Card configuration event')
rmxCardsWrongFileModeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5219)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsWrongFileModeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCardsWrongFileModeAlarmFault.setDescription("Cards wrong file's mode")
rmxCardsWrongFileModeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15219)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsWrongFileModeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCardsWrongFileModeAlarmClear.setDescription("Cards wrong file's mode")
rmxCardsFlashAccessProblemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5220)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsFlashAccessProblemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCardsFlashAccessProblemAlarmFault.setDescription('Card failed to switch to Enhanced Security Mode')
rmxCardsFlashAccessProblemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15220)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCardsFlashAccessProblemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCardsFlashAccessProblemAlarmClear.setDescription('Card failed to switch to Enhanced Security Mode')
rmxRtmLanOrIsdnMissingAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5221)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmLanOrIsdnMissingAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRtmLanOrIsdnMissingAlarmFault.setDescription('No RTM-LAN or RTM-ISDN installed. One of these cards must be installed in the RMX 4000')
rmxRtmLanOrIsdnMissingAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15221)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRtmLanOrIsdnMissingAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRtmLanOrIsdnMissingAlarmClear.setDescription('No RTM-LAN or RTM-ISDN installed. One of these cards must be installed in the RMX 4000')
rmxNoLanConnectionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5222)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoLanConnectionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoLanConnectionAlarmFault.setDescription('No LAN connection')
rmxNoLanConnectionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15222)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoLanConnectionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoLanConnectionAlarmClear.setDescription('No LAN connection')
rmxCanNotEstablishConnectionWithSipRegistrarAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5300)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithSipRegistrarAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithSipRegistrarAlarmFault.setDescription('Failed to connect to SIP registrar')
rmxCanNotEstablishConnectionWithSipRegistrarAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15300)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithSipRegistrarAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithSipRegistrarAlarmClear.setDescription('Failed to connect to SIP registrar')
rmxSipRegistrationLimitReachedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5301)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSipRegistrationLimitReachedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSipRegistrationLimitReachedAlarmFault.setDescription('SIP registrations limit reached')
rmxSipRegistrationLimitReachedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15301)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSipRegistrationLimitReachedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSipRegistrationLimitReachedAlarmClear.setDescription('SIP registrations limit reached')
rmxFailedToAccessDnsServerAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5350)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToAccessDnsServerAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToAccessDnsServerAlarmFault.setDescription('Failed to access DNS server')
rmxFailedToAccessDnsServerAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15350)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToAccessDnsServerAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToAccessDnsServerAlarmClear.setDescription('Failed to access DNS server')
rmxNoIndDnsSuccessAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5351)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIndDnsSuccessAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoIndDnsSuccessAlarmFault.setDescription('DNS configuration error')
rmxNoIndDnsSuccessAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15351)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIndDnsSuccessAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoIndDnsSuccessAlarmClear.setDescription('DNS configuration error')
rmxFailedToInitFileSystemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5400)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToInitFileSystemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToInitFileSystemAlarmFault.setDescription('Failed to initialize the file system')
rmxFailedToInitFileSystemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15400)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToInitFileSystemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToInitFileSystemAlarmClear.setDescription('Failed to initialize the file system')
rmxBadFileSystemAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5401)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadFileSystemAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBadFileSystemAlarmFault.setDescription('The Log file system is disabled')
rmxBadFileSystemAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15401)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadFileSystemAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBadFileSystemAlarmClear.setDescription('The Log file system is disabled')
rmxBadHardDiskAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5402)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadHardDiskAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBadHardDiskAlarmFault.setDescription('Hard disk error')
rmxBadHardDiskAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15402)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBadHardDiskAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBadHardDiskAlarmClear.setDescription('Hard disk error')
rmxBackupOfLogFilesIsRequiredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5403)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfLogFilesIsRequiredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfLogFilesIsRequiredAlarmFault.setDescription('Backup of log files is required')
rmxBackupOfLogFilesIsRequiredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15403)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfLogFilesIsRequiredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfLogFilesIsRequiredAlarmClear.setDescription('Backup of log files is required')
rmxBackupOfAuditFilesIsRequiredAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5430)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfAuditFilesIsRequiredAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfAuditFilesIsRequiredAlarmFault.setDescription('Backup of audit files is required')
rmxBackupOfAuditFilesIsRequiredAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15430)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxBackupOfAuditFilesIsRequiredAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxBackupOfAuditFilesIsRequiredAlarmClear.setDescription('Backup of audit files is required')
rmxFailedToFillActionRedirectionAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5450)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToFillActionRedirectionAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToFillActionRedirectionAlarmFault.setDescription('Action redirection failure')
rmxFailedToFillActionRedirectionAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15450)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToFillActionRedirectionAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToFillActionRedirectionAlarmClear.setDescription('Action redirection failure')
rmxFailedConfigUserListInLinuxAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5500)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedConfigUserListInLinuxAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedConfigUserListInLinuxAlarmFault.setDescription('Failed to configure the Users list in Linux')
rmxFailedConfigUserListInLinuxAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15500)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedConfigUserListInLinuxAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedConfigUserListInLinuxAlarmClear.setDescription('Failed to configure the Users list in Linux')
rmxInsufficientResourcesAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5550)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInsufficientResourcesAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxInsufficientResourcesAlarmFault.setDescription('Insufficient resources')
rmxInsufficientResourcesAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15550)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInsufficientResourcesAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxInsufficientResourcesAlarmClear.setDescription('Insufficient resources')
rmxPortConfigurationChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5551)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPortConfigurationChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxPortConfigurationChangedAlarmFault.setDescription('Port configuration was modified')
rmxPortConfigurationChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15551)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxPortConfigurationChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxPortConfigurationChangedAlarmClear.setDescription('Port configuration was modified')
rmxNoUtilizableUnitForAudioControllerAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5552)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoUtilizableUnitForAudioControllerAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoUtilizableUnitForAudioControllerAlarmFault.setDescription('No usable unit for audio controller')
rmxNoUtilizableUnitForAudioControllerAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15552)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoUtilizableUnitForAudioControllerAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoUtilizableUnitForAudioControllerAlarmClear.setDescription('No usable unit for audio controller')
rmxAllocationModeChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5553)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxAllocationModeChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxAllocationModeChangedAlarmFault.setDescription('Allocation mode was modified')
rmxAllocationModeChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15553)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxAllocationModeChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxAllocationModeChangedAlarmClear.setDescription('Allocation mode was modified')
rmxProcessTerminatedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5601)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProcessTerminatedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxProcessTerminatedAlarmFault.setDescription('Process terminated')
rmxProcessTerminatedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15601)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProcessTerminatedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxProcessTerminatedAlarmClear.setDescription('Process terminated')
rmxResetMcuByTerminalAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5602)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuByTerminalAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuByTerminalAlarmFault.setDescription('Terminal initiated MCU reset')
rmxResetMcuByTerminalAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15602)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuByTerminalAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuByTerminalAlarmClear.setDescription('Terminal initiated MCU reset')
rmxResetMcuByOperatorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5603)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuByOperatorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuByOperatorAlarmFault.setDescription('User initiated MCU reset')
rmxResetMcuByOperatorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15603)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuByOperatorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuByOperatorAlarmClear.setDescription('User initiated MCU reset')
rmxResetMcuInternalAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5604)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuInternalAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuInternalAlarmFault.setDescription('Internal MCU reset')
rmxResetMcuInternalAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15604)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuInternalAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuInternalAlarmClear.setDescription('Internal MCU reset')
rmxResetMcuAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5605)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuAlarmFault.setDescription('MCU reset')
rmxResetMcuAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15605)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuAlarmClear.setDescription('MCU reset')
rmxResetMcuDiagnosticsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5606)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuDiagnosticsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuDiagnosticsAlarmFault.setDescription('MCU Reset to enable Diagnostics mode')
rmxResetMcuDiagnosticsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15606)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxResetMcuDiagnosticsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxResetMcuDiagnosticsAlarmClear.setDescription('MCU Reset to enable Diagnostics mode')
rmxProcessStartupFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5607)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProcessStartupFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxProcessStartupFailedAlarmFault.setDescription('Startup process failure')
rmxProcessStartupFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15607)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxProcessStartupFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxProcessStartupFailedAlarmClear.setDescription('Startup process failure')
rmxSystemInSafeModeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5608)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemInSafeModeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSystemInSafeModeAlarmFault.setDescription('Automatic reset is unavailable in Safe Mode')
rmxSystemInSafeModeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15608)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemInSafeModeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSystemInSafeModeAlarmClear.setDescription('Automatic reset is unavailable in Safe Mode')
rmxGuiSystemConfigIsIllegalAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5609)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGuiSystemConfigIsIllegalAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxGuiSystemConfigIsIllegalAlarmFault.setDescription('GUI System configuration file is invalid xml file')
rmxGuiSystemConfigIsIllegalAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15609)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGuiSystemConfigIsIllegalAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxGuiSystemConfigIsIllegalAlarmClear.setDescription('GUI System configuration file is invalid xml file')
rmxFileSystemFailedToScanAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5650)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFileSystemFailedToScanAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFileSystemFailedToScanAlarmFault.setDescription('File system scan failure')
rmxFileSystemFailedToScanAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15650)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFileSystemFailedToScanAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFileSystemFailedToScanAlarmClear.setDescription('File system scan failure')
rmxFileSystemOverflowAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5651)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFileSystemOverflowAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFileSystemOverflowAlarmFault.setDescription('File system space shortage')
rmxFileSystemOverflowAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15651)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFileSystemOverflowAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFileSystemOverflowAlarmClear.setDescription('File system space shortage')
rmxHardDiskFailureAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5652)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHardDiskFailureAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxHardDiskFailureAlarmFault.setDescription('Hard disk error')
rmxHardDiskFailureAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15652)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxHardDiskFailureAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxHardDiskFailureAlarmClear.setDescription('Hard disk error')
rmxCpuIpcmSoftwareIsNotUpdatedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5690)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCpuIpcmSoftwareIsNotUpdatedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCpuIpcmSoftwareIsNotUpdatedAlarmFault.setDescription('CPU IPMC software was not updated.')
rmxCpuIpcmSoftwareIsNotUpdatedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15690)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCpuIpcmSoftwareIsNotUpdatedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCpuIpcmSoftwareIsNotUpdatedAlarmClear.setDescription('CPU IPMC software was not updated.')
rmxNewVersionInstalledAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5700)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNewVersionInstalledAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNewVersionInstalledAlarmFault.setDescription('A new version was installed. Reset the system.')
rmxNewVersionInstalledAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15700)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNewVersionInstalledAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNewVersionInstalledAlarmClear.setDescription('A new version was installed. Reset the system.')
rmxNewActivationKeyLoadedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5701)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNewActivationKeyLoadedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNewActivationKeyLoadedAlarmFault.setDescription('A new activation key was loaded. Reset the system.')
rmxNewActivationKeyLoadedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15701)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNewActivationKeyLoadedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNewActivationKeyLoadedAlarmClear.setDescription('A new activation key was loaded. Reset the system.')
rmxInsufficientUdpPortsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5751)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInsufficientUdpPortsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxInsufficientUdpPortsAlarmFault.setDescription('Insufficient UDP Ports')
rmxInsufficientUdpPortsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15751)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxInsufficientUdpPortsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxInsufficientUdpPortsAlarmClear.setDescription('Insufficient UDP Ports')
rmxUsersListCorruptedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5800)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUsersListCorruptedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxUsersListCorruptedAlarmFault.setDescription('Failed to open Users list file')
rmxUsersListCorruptedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15800)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxUsersListCorruptedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxUsersListCorruptedAlarmClear.setDescription('Failed to open Users list file')
rmxDefaultUserExistsAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5801)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDefaultUserExistsAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxDefaultUserExistsAlarmFault.setDescription('Polycom default User exists. For security reasons, it is recommended to delete this User and create your own User.')
rmxDefaultUserExistsAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15801)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxDefaultUserExistsAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxDefaultUserExistsAlarmClear.setDescription('Polycom default User exists. For security reasons, it is recommended to delete this User and create your own User.')
rmxSupportOperatorIllegalInFederalModeAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5802)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSupportOperatorIllegalInFederalModeAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSupportOperatorIllegalInFederalModeAlarmFault.setDescription('User Name SUPPORT cannot be used in Enhanced Security Mode')
rmxSupportOperatorIllegalInFederalModeAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15802)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSupportOperatorIllegalInFederalModeAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSupportOperatorIllegalInFederalModeAlarmClear.setDescription('User Name SUPPORT cannot be used in Enhanced Security Mode')
rmxIsdnServicesConfigurationChangedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5900)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIsdnServicesConfigurationChangedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIsdnServicesConfigurationChangedAlarmFault.setDescription('ISDN/PSTN Network Services configuration changed')
rmxIsdnServicesConfigurationChangedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15900)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIsdnServicesConfigurationChangedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIsdnServicesConfigurationChangedAlarmClear.setDescription('ISDN/PSTN Network Services configuration changed')
rmxNoIsdnPstnLicensingAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5901)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIsdnPstnLicensingAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoIsdnPstnLicensingAlarmFault.setDescription('No License for ISDN/PSTN. Please activate the RTM ISDN card through Polycom website')
rmxNoIsdnPstnLicensingAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15901)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoIsdnPstnLicensingAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoIsdnPstnLicensingAlarmClear.setDescription('No License for ISDN/PSTN. Please activate the RTM ISDN card through Polycom website')
rmxNoRtmIsdnCardAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5902)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoRtmIsdnCardAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoRtmIsdnCardAlarmFault.setDescription('RTM ISDN card not found')
rmxNoRtmIsdnCardAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15902)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoRtmIsdnCardAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoRtmIsdnCardAlarmClear.setDescription('RTM ISDN card not found')
rmxNoClockSourceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5903)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoClockSourceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoClockSourceAlarmFault.setDescription('No clock source')
rmxNoClockSourceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15903)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoClockSourceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoClockSourceAlarmClear.setDescription('No clock source')
rmxSingleClockSourceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5904)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSingleClockSourceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSingleClockSourceAlarmFault.setDescription('Single clock source')
rmxSingleClockSourceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15904)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSingleClockSourceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSingleClockSourceAlarmClear.setDescription('Single clock source')
rmxGkmngrAvfWrongMcuConfigAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5950)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGkmngrAvfWrongMcuConfigAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxGkmngrAvfWrongMcuConfigAlarmFault.setDescription('MCU is not configured for AVF gatekeeper mode')
rmxGkmngrAvfWrongMcuConfigAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15950)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGkmngrAvfWrongMcuConfigAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxGkmngrAvfWrongMcuConfigAlarmClear.setDescription('MCU is not configured for AVF gatekeeper mode')
rmxGateKeeperErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 5951)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGateKeeperErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxGateKeeperErrorAlarmFault.setDescription('Gatekeeper failure')
rmxGateKeeperErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 15951)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxGateKeeperErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxGateKeeperErrorAlarmClear.setDescription('Gatekeeper failure')
rmxCanNotEstablishConnectionWithApplicationServerAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6000)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithApplicationServerAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithApplicationServerAlarmFault.setDescription('Failed to connect to application server')
rmxCanNotEstablishConnectionWithApplicationServerAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16000)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithApplicationServerAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotEstablishConnectionWithApplicationServerAlarmClear.setDescription('Failed to connect to application server')
rmxSystemConfigurationAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6001)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemConfigurationAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSystemConfigurationAlarmFault.setDescription('Configuration of external database did not complete.')
rmxSystemConfigurationAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16001)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemConfigurationAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSystemConfigurationAlarmClear.setDescription('Configuration of external database did not complete.')
rmxExternalDbCertificateErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6002)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalDbCertificateErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxExternalDbCertificateErrorAlarmFault.setDescription('Error in external database certificate')
rmxExternalDbCertificateErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16002)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExternalDbCertificateErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxExternalDbCertificateErrorAlarmClear.setDescription('Error in external database certificate')
rmxIvrServiceListMissingDefaultServiceAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIvrServiceListMissingDefaultServiceAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxIvrServiceListMissingDefaultServiceAlarmFault.setDescription('No default IVR Service in IVR Services list')
rmxIvrServiceListMissingDefaultServiceAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxIvrServiceListMissingDefaultServiceAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxIvrServiceListMissingDefaultServiceAlarmClear.setDescription('No default IVR Service in IVR Services list')
rmxCanNotCreateDefaultProfileAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6051)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotCreateDefaultProfileAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotCreateDefaultProfileAlarmFault.setDescription('Failed to create Default Profile')
rmxCanNotCreateDefaultProfileAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16051)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxCanNotCreateDefaultProfileAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxCanNotCreateDefaultProfileAlarmClear.setDescription('Failed to create Default Profile')
rmxNoReadMrDbReqRecievedFromRsrcAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6052)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoReadMrDbReqRecievedFromRsrcAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxNoReadMrDbReqRecievedFromRsrcAlarmFault.setDescription('Resource process failed to request the Meeting Room list during startup.')
rmxNoReadMrDbReqRecievedFromRsrcAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16052)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxNoReadMrDbReqRecievedFromRsrcAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxNoReadMrDbReqRecievedFromRsrcAlarmClear.setDescription('Resource process failed to request the Meeting Room list during startup.')
rmxFailedToConnectRecordingLinkAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6053)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToConnectRecordingLinkAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToConnectRecordingLinkAlarmFault.setDescription('Failed to connect to recording device')
rmxFailedToConnectRecordingLinkAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16053)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxFailedToConnectRecordingLinkAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxFailedToConnectRecordingLinkAlarmClear.setDescription('Failed to connect to recording device')
rmxRecordingLinkDisconnecedUnexpectedlyAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6054)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRecordingLinkDisconnecedUnexpectedlyAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRecordingLinkDisconnecedUnexpectedlyAlarmFault.setDescription('Recording device has disconnected unexpectedly')
rmxRecordingLinkDisconnecedUnexpectedlyAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16054)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRecordingLinkDisconnecedUnexpectedlyAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRecordingLinkDisconnecedUnexpectedlyAlarmClear.setDescription('Recording device has disconnected unexpectedly')
rmxSystemBasedModeNotIntializedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6055)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemBasedModeNotIntializedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSystemBasedModeNotIntializedAlarmFault.setDescription('Failed to initialize system base mode')
rmxSystemBasedModeNotIntializedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16055)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSystemBasedModeNotIntializedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSystemBasedModeNotIntializedAlarmClear.setDescription('Failed to initialize system base mode')
rmxConfEncryptionErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6056)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxConfEncryptionErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxConfEncryptionErrorAlarmFault.setDescription('Conference Encryption Error')
rmxConfEncryptionErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16056)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxConfEncryptionErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxConfEncryptionErrorAlarmClear.setDescription('Conference Encryption Error')
rmxSnmpAgentInitFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6100)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSnmpAgentInitFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxSnmpAgentInitFailedAlarmFault.setDescription('Failure in initialization of SNMP agent.')
rmxSnmpAgentInitFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16100)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxSnmpAgentInitFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxSnmpAgentInitFailedAlarmClear.setDescription('Failure in initialization of SNMP agent.')
rmxRestoreSucceededAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6200)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoreSucceededAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRestoreSucceededAlarmFault.setDescription('Restore Succeeded')
rmxRestoreSucceededAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16200)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoreSucceededAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRestoreSucceededAlarmClear.setDescription('Restore Succeeded')
rmxRestoreFailedAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 6201)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoreFailedAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxRestoreFailedAlarmFault.setDescription('Restore Failed')
rmxRestoreFailedAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 16201)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxRestoreFailedAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxRestoreFailedAlarmClear.setDescription('Restore Failed')
rmxEncryptionServerErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 7010)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxEncryptionServerErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxEncryptionServerErrorAlarmFault.setDescription('Encryption Server Error. Failed to generate the encryption key')
rmxEncryptionServerErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 17010)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxEncryptionServerErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxEncryptionServerErrorAlarmClear.setDescription('Encryption Server Error. Failed to generate the encryption key')
rmxExchangeServerConnectionErrorAlarmFault = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 7050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExchangeServerConnectionErrorAlarmFault.setStatus('current')
if mibBuilder.loadTexts: rmxExchangeServerConnectionErrorAlarmFault.setDescription('Unable to connect to Exchange Server.')
rmxExchangeServerConnectionErrorAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 13885, 9, 1, 1, 2, 2, 0, 17050)).setObjects(("POLYCOM-RMX-MIB", "rmxAlarmDescription"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmDateAndTime"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmIndex"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmListName"), ("POLYCOM-RMX-MIB", "rmxActiveAlarmRmxStatus"))
if mibBuilder.loadTexts: rmxExchangeServerConnectionErrorAlarmClear.setStatus('current')
if mibBuilder.loadTexts: rmxExchangeServerConnectionErrorAlarmClear.setDescription('Unable to connect to Exchange Server.')
mibBuilder.exportSymbols("POLYCOM-RMX-MIB", rmxIllegalMcuVersionAlarmClear=rmxIllegalMcuVersionAlarmClear, rmxAllocationModeChangedAlarmClear=rmxAllocationModeChangedAlarmClear, rmxIvrServiceListMissingDefaultServiceAlarmClear=rmxIvrServiceListMissingDefaultServiceAlarmClear, rmxSupportOperatorIllegalInFederalModeAlarmClear=rmxSupportOperatorIllegalInFederalModeAlarmClear, rmxProducts=rmxProducts, rmxMediaIpConfigurationFailureAlarmFault=rmxMediaIpConfigurationFailureAlarmFault, rmxIdeNotInDmaModeAlarmClear=rmxIdeNotInDmaModeAlarmClear, rmxIdleDeadlineReachedAlarmClear=rmxIdleDeadlineReachedAlarmClear, rmxNoConnectionWithCardAlarmClear=rmxNoConnectionWithCardAlarmClear, rmxNoIpServiceParamsAlarmClear=rmxNoIpServiceParamsAlarmClear, rmxNoDefaultIsdnServiceAlarmFault=rmxNoDefaultIsdnServiceAlarmFault, rmxSnmpAgentInitFailedAlarmFault=rmxSnmpAgentInitFailedAlarmFault, rmxCfgInvalidAlarmFault=rmxCfgInvalidAlarmFault, rmxFailedToOpenApacheConfigurationFileAlarmClear=rmxFailedToOpenApacheConfigurationFileAlarmClear, rmxVoltageProblemAlarmFault=rmxVoltageProblemAlarmFault, rmxIpVersionChangedAlarmClear=rmxIpVersionChangedAlarmClear, rmxDChannelNotEstablishedAlarmFault=rmxDChannelNotEstablishedAlarmFault, rmxIpServiceChangedAlarmClear=rmxIpServiceChangedAlarmClear, rmxSystemConfigurationAlarmFault=rmxSystemConfigurationAlarmFault, rmxCpuIpcmSoftwareIsNotUpdatedAlarmClear=rmxCpuIpcmSoftwareIsNotUpdatedAlarmClear, rmxIllegalMcuVersionAlarmFault=rmxIllegalMcuVersionAlarmFault, rmxPowerOffProblemAlarmClear=rmxPowerOffProblemAlarmClear, rmxMediaIpConfigurationFailureAlarmClear=rmxMediaIpConfigurationFailureAlarmClear, rmxFailedToAccessDnsServerAlarmClear=rmxFailedToAccessDnsServerAlarmClear, rmxProcessStartupFailedAlarmClear=rmxProcessStartupFailedAlarmClear, rmxUnknownCpuSlotIdAlarmClear=rmxUnknownCpuSlotIdAlarmClear, rmxResetMcuInternalAlarmClear=rmxResetMcuInternalAlarmClear, rmxLowProcessMemoryAlertAlarmClear=rmxLowProcessMemoryAlertAlarmClear, rmxIdeNotInDmaModeAlarmFault=rmxIdeNotInDmaModeAlarmFault, rmxNoDnsConfigurationAlarmClear=rmxNoDnsConfigurationAlarmClear, rmxFipsFailureWithinEncryptionkeyserverAlarmFault=rmxFipsFailureWithinEncryptionkeyserverAlarmFault, rmxResetMcuDiagnosticsAlarmFault=rmxResetMcuDiagnosticsAlarmFault, rmxVersionInstallProgressAlarmFault=rmxVersionInstallProgressAlarmFault, rmxCardsConfigEventAlarmClear=rmxCardsConfigEventAlarmClear, rmxCertificateCommonNameErrorAlarmFault=rmxCertificateCommonNameErrorAlarmFault, rmxRedAlarmAlarmFault=rmxRedAlarmAlarmFault, rmxSshEnabledAlarmFault=rmxSshEnabledAlarmFault, rmxUnknownCpuSlotIdAlarmFault=rmxUnknownCpuSlotIdAlarmFault, rmxCertificateNotValidYetAlarmClear=rmxCertificateNotValidYetAlarmClear, rmxTraps=rmxTraps, rmxOtherProblemAlarmFault=rmxOtherProblemAlarmFault, rmxGkmngrAvfWrongMcuConfigAlarmClear=rmxGkmngrAvfWrongMcuConfigAlarmClear, rmxBadHardDiskAlarmClear=rmxBadHardDiskAlarmClear, rmxCsNotConfiguredAlarmClear=rmxCsNotConfiguredAlarmClear, rmxPrivateVersionAlarmFault=rmxPrivateVersionAlarmFault, rmxLowSystemMemoryAlertAlarmFault=rmxLowSystemMemoryAlertAlarmFault, rmxHttpsDisabledInJitcAlarmFault=rmxHttpsDisabledInJitcAlarmFault, rmxBackupOfCdrFilesIsRequiredAlarmFault=rmxBackupOfCdrFilesIsRequiredAlarmFault, rmxNoConnectionWithRtmIsdnAlarmFault=rmxNoConnectionWithRtmIsdnAlarmFault, rmxBackupOfAuditFilesIsRequiredAlarmClear=rmxBackupOfAuditFilesIsRequiredAlarmClear, rmxNewActivationKeyLoadedAlarmFault=rmxNewActivationKeyLoadedAlarmFault, rmxCanNotEstablishConnectionWithApplicationServerAlarmClear=rmxCanNotEstablishConnectionWithApplicationServerAlarmClear, rmxCardsConfigEventAlarmFault=rmxCardsConfigEventAlarmFault, rmxFailedToValidateCertificateAlarmFault=rmxFailedToValidateCertificateAlarmFault, rmxMib1Events=rmxMib1Events, rmxNoIpServiceParamsAlarmFault=rmxNoIpServiceParamsAlarmFault, rmxRedAlarmAlarmClear=rmxRedAlarmAlarmClear, rmxYellowAlarmAlarmFault=rmxYellowAlarmAlarmFault, rmxModuleDoesNotExistAlarmFault=rmxModuleDoesNotExistAlarmFault, rmxRunningVersionMismatchesCurrentVersionAlarmClear=rmxRunningVersionMismatchesCurrentVersionAlarmClear, rmxNoIsdnServiceParamsAlarmClear=rmxNoIsdnServiceParamsAlarmClear, rmxCertificateGoingToBeExpiredAlarmFault=rmxCertificateGoingToBeExpiredAlarmFault, rmxProcessTerminatedAlarmFault=rmxProcessTerminatedAlarmFault, rmxNewVersionInstalledAlarmClear=rmxNewVersionInstalledAlarmClear, rmxSipRegistrationLimitReachedAlarmClear=rmxSipRegistrationLimitReachedAlarmClear, rmxUnitNotRespondingAlarmFault=rmxUnitNotRespondingAlarmFault, rmxProductActivationFailureAlarmFault=rmxProductActivationFailureAlarmFault, rmxPowerOffProblemAlarmFault=rmxPowerOffProblemAlarmFault, rmxCardsFlashAccessProblemAlarmFault=rmxCardsFlashAccessProblemAlarmFault, rmxAlarmDescription=rmxAlarmDescription, rmxHardDiskFailureAlarmClear=rmxHardDiskFailureAlarmClear, rmxTemperatureMajorProblemAlarmFault=rmxTemperatureMajorProblemAlarmFault, rmxResetMcuByTerminalAlarmClear=rmxResetMcuByTerminalAlarmClear, rmxSystemBasedModeNotIntializedAlarmFault=rmxSystemBasedModeNotIntializedAlarmFault, rmxMib1=rmxMib1, rmxProcessStartupFailedAlarmFault=rmxProcessStartupFailedAlarmFault, rmxInsufficientUdpPortsAlarmClear=rmxInsufficientUdpPortsAlarmClear, rmxBadHardDiskAlarmFault=rmxBadHardDiskAlarmFault, rmxBadFileSystemAlarmClear=rmxBadFileSystemAlarmClear, rmxCertificateNotValidYetAlarmFault=rmxCertificateNotValidYetAlarmFault, rmxCardsWrongFileModeAlarmClear=rmxCardsWrongFileModeAlarmClear, rmxNoUtilizableUnitForAudioControllerAlarmFault=rmxNoUtilizableUnitForAudioControllerAlarmFault, rmxCardFolderMountingFailedAlarmClear=rmxCardFolderMountingFailedAlarmClear, rmxNoTimeConfigurationAlarmFault=rmxNoTimeConfigurationAlarmFault, rmxResetMcuByOperatorAlarmClear=rmxResetMcuByOperatorAlarmClear, rmxTemperatureCriticalProblemAlarmClear=rmxTemperatureCriticalProblemAlarmClear, rmxRtmIsdnStartupFailureAlarmClear=rmxRtmIsdnStartupFailureAlarmClear, rmxCanNotCreateDefaultProfileAlarmFault=rmxCanNotCreateDefaultProfileAlarmFault, rmxActiveAlarmListName=rmxActiveAlarmListName, rmxGateKeeperErrorAlarmFault=rmxGateKeeperErrorAlarmFault, rmxMplStartupFailureAuthenticationNotReceivedAlarmClear=rmxMplStartupFailureAuthenticationNotReceivedAlarmClear, rmxNoConnectionWithCardAlarmFault=rmxNoConnectionWithCardAlarmFault, rmxGuiSystemConfigIsIllegalAlarmClear=rmxGuiSystemConfigIsIllegalAlarmClear, rmxSystemBasedModeNotIntializedAlarmClear=rmxSystemBasedModeNotIntializedAlarmClear, rmxFailedToValidateCertificateAlarmClear=rmxFailedToValidateCertificateAlarmClear, rmxRtmLanOrIsdnMissingAlarmFault=rmxRtmLanOrIsdnMissingAlarmFault, rmxFailedToConnectRecordingLinkAlarmClear=rmxFailedToConnectRecordingLinkAlarmClear, rmxNoMusicSourceAlarmClear=rmxNoMusicSourceAlarmClear, rmxHardDiskFailureAlarmFault=rmxHardDiskFailureAlarmFault, rmxFailedToFillActionRedirectionAlarmClear=rmxFailedToFillActionRedirectionAlarmClear, rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmFault=rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmFault, rmxBadFileSystemAlarmFault=rmxBadFileSystemAlarmFault, rmxFailureProblemAlarmFault=rmxFailureProblemAlarmFault, rmxResetMcuByTerminalAlarmFault=rmxResetMcuByTerminalAlarmFault, rmxNoUtilizableUnitForAudioControllerAlarmClear=rmxNoUtilizableUnitForAudioControllerAlarmClear, rmxRunningVersionMismatchesCurrentVersionAlarmFault=rmxRunningVersionMismatchesCurrentVersionAlarmFault, rmxNoRtmIsdnCardAlarmFault=rmxNoRtmIsdnCardAlarmFault, rmxDefaultUserExistsAlarmClear=rmxDefaultUserExistsAlarmClear, rmxNoClockSourceAlarmClear=rmxNoClockSourceAlarmClear, rmxDefaultUserExistsAlarmFault=rmxDefaultUserExistsAlarmFault, rmxFailedToFillActionRedirectionAlarmFault=rmxFailedToFillActionRedirectionAlarmFault, rmxDChannelNotEstablishedAlarmClear=rmxDChannelNotEstablishedAlarmClear, rmxCardStartupFailureAlarmClear=rmxCardStartupFailureAlarmClear, rmxNoReadMrDbReqRecievedFromRsrcAlarmFault=rmxNoReadMrDbReqRecievedFromRsrcAlarmFault, rmxFailedConfigUserListInLinuxAlarmFault=rmxFailedConfigUserListInLinuxAlarmFault, rmxCanNotEstablishConnectionWithSipRegistrarAlarmFault=rmxCanNotEstablishConnectionWithSipRegistrarAlarmFault, rmxNoIsdnPstnLicensingAlarmFault=rmxNoIsdnPstnLicensingAlarmFault, rmxNewVersionInstalledAlarmFault=rmxNewVersionInstalledAlarmFault, rmxCsRecoveryStatusAlarmClear=rmxCsRecoveryStatusAlarmClear, rmxNoReadMrDbReqRecievedFromRsrcAlarmClear=rmxNoReadMrDbReqRecievedFromRsrcAlarmClear, rmxYellowAlarmAlarmClear=rmxYellowAlarmAlarmClear, rmxStartupConditionConfigurationAlarmFault=rmxStartupConditionConfigurationAlarmFault, rmxRecordingLinkDisconnecedUnexpectedlyAlarmClear=rmxRecordingLinkDisconnecedUnexpectedlyAlarmClear, rmxNoConnectionWithRtmIsdnAlarmClear=rmxNoConnectionWithRtmIsdnAlarmClear, rmxTemperatureCriticalProblemAlarmFault=rmxTemperatureCriticalProblemAlarmFault, rmxDnsRegistraionFailedAlarmClear=rmxDnsRegistraionFailedAlarmClear, rmxExternalAlertEmbAlarmFault=rmxExternalAlertEmbAlarmFault, rmxExchangeServerConnectionErrorAlarmFault=rmxExchangeServerConnectionErrorAlarmFault, rmxNoIndDnsSuccessAlarmClear=rmxNoIndDnsSuccessAlarmClear, rmxNoManagementIpInterfaceAlarmFault=rmxNoManagementIpInterfaceAlarmFault, rmxFipsFailureWithinEncryptionkeyserverAlarmClear=rmxFipsFailureWithinEncryptionkeyserverAlarmClear, rmxRtmIsdnStartupProblemAlarmClear=rmxRtmIsdnStartupProblemAlarmClear, rmxBackupOfCdrFilesIsRequiredAlarmClear=rmxBackupOfCdrFilesIsRequiredAlarmClear, rmxBackupOfAuditFilesIsRequiredAlarmFault=rmxBackupOfAuditFilesIsRequiredAlarmFault, rmxIpServiceDeletedAlarmFault=rmxIpServiceDeletedAlarmFault, rmxProductActivationFailureAlarmClear=rmxProductActivationFailureAlarmClear, rmxExternalDbCertificateErrorAlarmClear=rmxExternalDbCertificateErrorAlarmClear, rmxCertificateGoingToBeExpiredAlarmClear=rmxCertificateGoingToBeExpiredAlarmClear, rmxTaskTerminatedAlarmClear=rmxTaskTerminatedAlarmClear, rmxEncryptionServerErrorAlarmFault=rmxEncryptionServerErrorAlarmFault, rmxNoServiceFoundInDbAlarmFault=rmxNoServiceFoundInDbAlarmFault, rmxUsersListCorruptedAlarmFault=rmxUsersListCorruptedAlarmFault, rmxHttpsDisabledInJitcAlarmClear=rmxHttpsDisabledInJitcAlarmClear, rmxActiveAlarmRmxStatus=rmxActiveAlarmRmxStatus, rmxDebugCfgExistAlarmFault=rmxDebugCfgExistAlarmFault, rmxIllegalTimeAlarmClear=rmxIllegalTimeAlarmClear, rmxBadFileAlarmClear=rmxBadFileAlarmClear, rmxFailedConfigUserListInLinuxAlarmClear=rmxFailedConfigUserListInLinuxAlarmClear, rmxNoIsdnServiceParamsAlarmFault=rmxNoIsdnServiceParamsAlarmFault, rmxSnmpAgentInitFailedAlarmClear=rmxSnmpAgentInitFailedAlarmClear, rmxIsdnServicesConfigurationChangedAlarmClear=rmxIsdnServicesConfigurationChangedAlarmClear, rmx2000=rmx2000, rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmClear=rmxMplStartupFailureMngmntIpCnfgNotReceivedAlarmClear, rmxPrivateVersionAlarmClear=rmxPrivateVersionAlarmClear, rmxDebugModeAlarmFault=rmxDebugModeAlarmFault, rmxFailedToOpenApacheConfigurationFileAlarmFault=rmxFailedToOpenApacheConfigurationFileAlarmFault, rmxCsComponentFatalAlarmClear=rmxCsComponentFatalAlarmClear, rmxFailedToInitFileSystemAlarmClear=rmxFailedToInitFileSystemAlarmClear, polycom=polycom, rmxActiveAlarmDateAndTime=rmxActiveAlarmDateAndTime, rmxFileSystemOverflowAlarmClear=rmxFileSystemOverflowAlarmClear, rmxAllocationModeChangedAlarmFault=rmxAllocationModeChangedAlarmFault, rmxNoIsdnPstnLicensingAlarmClear=rmxNoIsdnPstnLicensingAlarmClear, rmxBadEthernetSettingsAlarmClear=rmxBadEthernetSettingsAlarmClear, rmxSystemCpuUsageAlertAlarmClear=rmxSystemCpuUsageAlertAlarmClear, rmxFailureProblemAlarmClear=rmxFailureProblemAlarmClear, rmxNoLicensingAlarmClear=rmxNoLicensingAlarmClear, rmxNotify=rmxNotify, rmxGateKeeperErrorAlarmClear=rmxGateKeeperErrorAlarmClear, rmx=rmx, rmxIpServiceDeletedAlarmClear=rmxIpServiceDeletedAlarmClear, rmxPortConfigurationChangedAlarmClear=rmxPortConfigurationChangedAlarmClear, rmxNoTimeConfigurationAlarmClear=rmxNoTimeConfigurationAlarmClear, rmxRestoringDefaultFactoryAlarmClear=rmxRestoringDefaultFactoryAlarmClear, rmxCsServiceStateFailAlarmClear=rmxCsServiceStateFailAlarmClear, rmxSystemConfigurationAlarmClear=rmxSystemConfigurationAlarmClear, rmxCardFolderMountingFailedAlarmFault=rmxCardFolderMountingFailedAlarmFault, rmxTaskTerminatedAlarmFault=rmxTaskTerminatedAlarmFault, rmxResetMcuAlarmFault=rmxResetMcuAlarmFault, rmxSipRegistrationLimitReachedAlarmFault=rmxSipRegistrationLimitReachedAlarmFault, rmxExchangeServerConnectionErrorAlarmClear=rmxExchangeServerConnectionErrorAlarmClear, rmxResetMcuAlarmClear=rmxResetMcuAlarmClear, rmx4000=rmx4000, rmxCsNotConfiguredAlarmFault=rmxCsNotConfiguredAlarmFault, rmxCardsFlashAccessProblemAlarmClear=rmxCardsFlashAccessProblemAlarmClear, PYSNMP_MODULE_ID=polycom, rmxSmartReportErrorsOnHdAlarmFault=rmxSmartReportErrorsOnHdAlarmFault, rmxCanNotEstablishConnectionWithApplicationServerAlarmFault=rmxCanNotEstablishConnectionWithApplicationServerAlarmFault, rmxIllegalTimeAlarmFault=rmxIllegalTimeAlarmFault, rmxSingleClockSourceAlarmFault=rmxSingleClockSourceAlarmFault, rmxCanNotEstablishConnectionWithSipRegistrarAlarmClear=rmxCanNotEstablishConnectionWithSipRegistrarAlarmClear, rmxLowProcessMemoryAlertAlarmFault=rmxLowProcessMemoryAlertAlarmFault, rmxNoMusicSourceAlarmFault=rmxNoMusicSourceAlarmFault, rmxProcessTerminatedAlarmClear=rmxProcessTerminatedAlarmClear, rmxRestoreFailedAlarmFault=rmxRestoreFailedAlarmFault, rmxSipSecuredCommunicationFailedAlarmClear=rmxSipSecuredCommunicationFailedAlarmClear, rmxCardsWrongFileModeAlarmFault=rmxCardsWrongFileModeAlarmFault, rmxNoLicensingAlarmFault=rmxNoLicensingAlarmFault, rmxUsersListCorruptedAlarmClear=rmxUsersListCorruptedAlarmClear, rmxEncryptionServerErrorAlarmClear=rmxEncryptionServerErrorAlarmClear, rmxStartupConditionConfigurationAlarmClear=rmxStartupConditionConfigurationAlarmClear, rmxCfgInvalidAlarmClear=rmxCfgInvalidAlarmClear, rmxNoConnectionWithCsAlarmClear=rmxNoConnectionWithCsAlarmClear, rmxExternalAlertCsAlarmFault=rmxExternalAlertCsAlarmFault, rmxFailedToConnectRecordingLinkAlarmFault=rmxFailedToConnectRecordingLinkAlarmFault, rmxSshEnabledAlarmClear=rmxSshEnabledAlarmClear, rmxMib1General=rmxMib1General, rmxExternalAlertEmbAlarmClear=rmxExternalAlertEmbAlarmClear, rmxBackupOfLogFilesIsRequiredAlarmClear=rmxBackupOfLogFilesIsRequiredAlarmClear, rmxNoFipsTestResultFromEncryptionkeyserverAlarmFault=rmxNoFipsTestResultFromEncryptionkeyserverAlarmFault, RmxStatus=RmxStatus, rmxPatchedVersionAlarmClear=rmxPatchedVersionAlarmClear, rmxDuplicateIpCsMngmntAlarmClear=rmxDuplicateIpCsMngmntAlarmClear, rmxCertificateCommonNameErrorAlarmClear=rmxCertificateCommonNameErrorAlarmClear, rmxNoDnsConfigurationAlarmFault=rmxNoDnsConfigurationAlarmFault, rmxNoServiceFoundInDbAlarmClear=rmxNoServiceFoundInDbAlarmClear, rmxNoDefaultIsdnServiceAlarmClear=rmxNoDefaultIsdnServiceAlarmClear, rmxInsufficientUdpPortsAlarmFault=rmxInsufficientUdpPortsAlarmFault, rmxDuplicateIpCsMngmntAlarmFault=rmxDuplicateIpCsMngmntAlarmFault, rmxNoMeetingRoomAlarmFault=rmxNoMeetingRoomAlarmFault, rmxNoLanConnectionAlarmFault=rmxNoLanConnectionAlarmFault, rmxLowSystemMemoryAlertAlarmClear=rmxLowSystemMemoryAlertAlarmClear, rmxTestErrorAlarmClear=rmxTestErrorAlarmClear, rmxBadEthernetSettingsAlarmFault=rmxBadEthernetSettingsAlarmFault, rmxIvrServiceListMissingDefaultServiceAlarmFault=rmxIvrServiceListMissingDefaultServiceAlarmFault, rmxRestoreSucceededAlarmClear=rmxRestoreSucceededAlarmClear, rmxVersionIpmcInstallProgressAlarmFault=rmxVersionIpmcInstallProgressAlarmFault, rmxNoClockSourceAlarmFault=rmxNoClockSourceAlarmFault, rmxVersionInstallProgressAlarmClear=rmxVersionInstallProgressAlarmClear, rmxNewActivationKeyLoadedAlarmClear=rmxNewActivationKeyLoadedAlarmClear, rmxCsStartupFailedAlarmClear=rmxCsStartupFailedAlarmClear, rmxCsServiceStateFailAlarmFault=rmxCsServiceStateFailAlarmFault, rmxRtmIsdnStartupProblemAlarmFault=rmxRtmIsdnStartupProblemAlarmFault, rmxSingleClockSourceAlarmClear=rmxSingleClockSourceAlarmClear, rmxCanNotCreateDefaultProfileAlarmClear=rmxCanNotCreateDefaultProfileAlarmClear, rmxOtherProblemAlarmClear=rmxOtherProblemAlarmClear, rmxUnitNotRespondingAlarmClear=rmxUnitNotRespondingAlarmClear, rmxNoConnectionWithCsAlarmFault=rmxNoConnectionWithCsAlarmFault, rmxRtmIsdnStartupFailureAlarmFault=rmxRtmIsdnStartupFailureAlarmFault, rmxCsComponentFatalAlarmFault=rmxCsComponentFatalAlarmFault, rmxExternalNtpServersFailureAlarmClear=rmxExternalNtpServersFailureAlarmClear, rmxRestoreFailedAlarmClear=rmxRestoreFailedAlarmClear, rmxBackupOfLogFilesIsRequiredAlarmFault=rmxBackupOfLogFilesIsRequiredAlarmFault, rmxGuiSystemConfigIsIllegalAlarmFault=rmxGuiSystemConfigIsIllegalAlarmFault, rmxResetMcuDiagnosticsAlarmClear=rmxResetMcuDiagnosticsAlarmClear, rmxVoltageProblemAlarmClear=rmxVoltageProblemAlarmClear, rmxGkmngrAvfWrongMcuConfigAlarmFault=rmxGkmngrAvfWrongMcuConfigAlarmFault, rmxExternalDbCertificateErrorAlarmFault=rmxExternalDbCertificateErrorAlarmFault, rmxHighCpuUsageProcessAlertAlarmFault=rmxHighCpuUsageProcessAlertAlarmFault, rmxVersionIpmcInstallProgressAlarmClear=rmxVersionIpmcInstallProgressAlarmClear, rmxBadFileAlarmFault=rmxBadFileAlarmFault, rmxHighCpuUsageProcessAlertAlarmClear=rmxHighCpuUsageProcessAlertAlarmClear, rmxIsdnServicesConfigurationChangedAlarmFault=rmxIsdnServicesConfigurationChangedAlarmFault, rmxFailedToAccessDnsServerAlarmFault=rmxFailedToAccessDnsServerAlarmFault)
mibBuilder.exportSymbols("POLYCOM-RMX-MIB", rmxCertificateExpiredAlarmClear=rmxCertificateExpiredAlarmClear, rmxCfgChangedAlarmFault=rmxCfgChangedAlarmFault, rmxResetMcuByOperatorAlarmFault=rmxResetMcuByOperatorAlarmFault, rmxCertificateExpiredAlarmFault=rmxCertificateExpiredAlarmFault, rmxSwitchNotLoadedAlarmFault=rmxSwitchNotLoadedAlarmFault, rmxRestoringDefaultFactoryAlarmFault=rmxRestoringDefaultFactoryAlarmFault, rmxSystemInSafeModeAlarmClear=rmxSystemInSafeModeAlarmClear, rmxConfEncryptionErrorAlarmClear=rmxConfEncryptionErrorAlarmClear, rmxMplStartupFailureAuthenticationNotReceivedAlarmFault=rmxMplStartupFailureAuthenticationNotReceivedAlarmFault, rmxProductTypeMismatchAlarmClear=rmxProductTypeMismatchAlarmClear, rmxInstallingNewVersionAlarmClear=rmxInstallingNewVersionAlarmClear, rmxTemperatureMajorProblemAlarmClear=rmxTemperatureMajorProblemAlarmClear, rmxRtmLanOrIsdnMissingAlarmClear=rmxRtmLanOrIsdnMissingAlarmClear, rmxDnsRegistraionFailedAlarmFault=rmxDnsRegistraionFailedAlarmFault, rmxIpVersionChangedAlarmFault=rmxIpVersionChangedAlarmFault, rmxCsStartupFailedAlarmFault=rmxCsStartupFailedAlarmFault, rmxModuleDoesNotExistAlarmClear=rmxModuleDoesNotExistAlarmClear, rmxNoRtmIsdnCardAlarmClear=rmxNoRtmIsdnCardAlarmClear, rmxNoMeetingRoomAlarmClear=rmxNoMeetingRoomAlarmClear, rmxFileSystemFailedToScanAlarmFault=rmxFileSystemFailedToScanAlarmFault, rmxNoManagementIpInterfaceAlarmClear=rmxNoManagementIpInterfaceAlarmClear, rmxRecordingLinkDisconnecedUnexpectedlyAlarmFault=rmxRecordingLinkDisconnecedUnexpectedlyAlarmFault, rmxCfgChangedAlarmClear=rmxCfgChangedAlarmClear, rmxSystemCpuUsageAlertAlarmFault=rmxSystemCpuUsageAlertAlarmFault, rmxPatchedVersionAlarmFault=rmxPatchedVersionAlarmFault, rmxIpServiceChangedAlarmFault=rmxIpServiceChangedAlarmFault, rmxCurrentStatus=rmxCurrentStatus, rmxDebugModeAlarmClear=rmxDebugModeAlarmClear, rmxActiveAlarmIndex=rmxActiveAlarmIndex, rmxCardStartupFailureAlarmFault=rmxCardStartupFailureAlarmFault, rmxConfEncryptionErrorAlarmFault=rmxConfEncryptionErrorAlarmFault, rmxInstallingNewVersionAlarmFault=rmxInstallingNewVersionAlarmFault, rmxNoIndDnsSuccessAlarmFault=rmxNoIndDnsSuccessAlarmFault, rmxInsufficientResourcesAlarmClear=rmxInsufficientResourcesAlarmClear, rmxExternalNtpServersFailureAlarmFault=rmxExternalNtpServersFailureAlarmFault, rmxFailedToSaveApacheConfigurationFileAlarmClear=rmxFailedToSaveApacheConfigurationFileAlarmClear, rmxInsufficientResourcesAlarmFault=rmxInsufficientResourcesAlarmFault, rmxNtpSyncFailureAlarmClear=rmxNtpSyncFailureAlarmClear, rmxResetMcuInternalAlarmFault=rmxResetMcuInternalAlarmFault, rmxNoFipsTestResultFromEncryptionkeyserverAlarmClear=rmxNoFipsTestResultFromEncryptionkeyserverAlarmClear, rmxSupportOperatorIllegalInFederalModeAlarmFault=rmxSupportOperatorIllegalInFederalModeAlarmFault, rmxProductTypeMismatchAlarmFault=rmxProductTypeMismatchAlarmFault, rmxFailedToInitFileSystemAlarmFault=rmxFailedToInitFileSystemAlarmFault, rmxExternalAlertCsAlarmClear=rmxExternalAlertCsAlarmClear, rmxMib1EventsParams=rmxMib1EventsParams, rmxFailedToSaveApacheConfigurationFileAlarmFault=rmxFailedToSaveApacheConfigurationFileAlarmFault, rmxTestErrorAlarmFault=rmxTestErrorAlarmFault, rmxSmartReportErrorsOnHdAlarmClear=rmxSmartReportErrorsOnHdAlarmClear, rmxFileSystemOverflowAlarmFault=rmxFileSystemOverflowAlarmFault, rmxCpuIpcmSoftwareIsNotUpdatedAlarmFault=rmxCpuIpcmSoftwareIsNotUpdatedAlarmFault, rmxSipSecuredCommunicationFailedAlarmFault=rmxSipSecuredCommunicationFailedAlarmFault, rmxIdleDeadlineReachedAlarmFault=rmxIdleDeadlineReachedAlarmFault, rmxSwitchNotLoadedAlarmClear=rmxSwitchNotLoadedAlarmClear, nsdProducts=nsdProducts, rmxRestoreSucceededAlarmFault=rmxRestoreSucceededAlarmFault, rmxDebugCfgExistAlarmClear=rmxDebugCfgExistAlarmClear, rmxFileSystemFailedToScanAlarmClear=rmxFileSystemFailedToScanAlarmClear, rmxPortConfigurationChangedAlarmFault=rmxPortConfigurationChangedAlarmFault, rmxNtpSyncFailureAlarmFault=rmxNtpSyncFailureAlarmFault, rmxCsRecoveryStatusAlarmFault=rmxCsRecoveryStatusAlarmFault, rmxNoLanConnectionAlarmClear=rmxNoLanConnectionAlarmClear, rmxSystemInSafeModeAlarmFault=rmxSystemInSafeModeAlarmFault)
