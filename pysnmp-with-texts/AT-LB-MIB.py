#
# PySNMP MIB module AT-LB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AT-LB-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:30:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
modules, DisplayStringUnsized = mibBuilder.importSymbols("AT-SMI-MIB", "modules", "DisplayStringUnsized")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibIdentifier, Bits, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, ObjectIdentity, TimeTicks, Counter64, NotificationType, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "Bits", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "ObjectIdentity", "TimeTicks", "Counter64", "NotificationType", "Unsigned32", "iso")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
lb = ModuleIdentity((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104))
lb.setRevisions(('2006-06-28 12:22',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: lb.setRevisionsDescriptions(('Initial Revision',))
if mibBuilder.loadTexts: lb.setLastUpdated('200606281222Z')
if mibBuilder.loadTexts: lb.setOrganization('Allied Telesis, Inc')
if mibBuilder.loadTexts: lb.setContactInfo('http://www.alliedtelesis.com')
if mibBuilder.loadTexts: lb.setDescription('This MIB file contains definitions of managed objects for the LB module. ')
lbShowGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1), )
if mibBuilder.loadTexts: lbShowGlobalTable.setStatus('current')
if mibBuilder.loadTexts: lbShowGlobalTable.setDescription('General configuration and status of all of the virtual balancers configured on the router.')
lbShowGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1), ).setIndexNames((0, "AT-LB-MIB", "lbGlobalIndex"))
if mibBuilder.loadTexts: lbShowGlobalEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowGlobalEntry.setDescription('An entry in the global table.')
lbGlobalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbGlobalIndex.setStatus('current')
if mibBuilder.loadTexts: lbGlobalIndex.setDescription('The index for the global table.')
lbAffinityTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffinityTimeOut.setStatus('current')
if mibBuilder.loadTexts: lbAffinityTimeOut.setDescription('The length of time in seconds that a resource can be associated to a source IP address or Cookie after the connection has been closed.')
lbOrphanTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbOrphanTimeOut.setStatus('current')
if mibBuilder.loadTexts: lbOrphanTimeOut.setDescription('The length of time in seconds that a connection can exist without having any data traversing it, before being declared an orphan and closed by the router.')
lbCriticalRst = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbCriticalRst.setStatus('current')
if mibBuilder.loadTexts: lbCriticalRst.setDescription('The ratio of total messages received from a resource that can be TCP RST messages represented as a percentage.')
lbTotalResources = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTotalResources.setStatus('current')
if mibBuilder.loadTexts: lbTotalResources.setDescription('The total number of resources configured on the router.')
lbTotalResPools = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTotalResPools.setStatus('current')
if mibBuilder.loadTexts: lbTotalResPools.setDescription('The total number of resource pools configured on the router.')
lbTotalVirtBals = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTotalVirtBals.setStatus('current')
if mibBuilder.loadTexts: lbTotalVirtBals.setDescription('The total number of virtual balancers configured on the router.')
lbCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbCurrentConnections.setStatus('current')
if mibBuilder.loadTexts: lbCurrentConnections.setDescription('Displays the current total number of connections to all resources in every resource pool on the router.')
lbShowResTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2), )
if mibBuilder.loadTexts: lbShowResTable.setStatus('current')
if mibBuilder.loadTexts: lbShowResTable.setDescription('A list about the general information about for a given resource.')
lbShowResEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1), ).setIndexNames((0, "AT-LB-MIB", "lbResIndex"))
if mibBuilder.loadTexts: lbShowResEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowResEntry.setDescription('An entry in the resource table.')
lbResIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResIndex.setStatus('current')
if mibBuilder.loadTexts: lbResIndex.setDescription('The index for the resource table.')
lbResource = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResource.setStatus('current')
if mibBuilder.loadTexts: lbResource.setDescription('The name of the resource.')
lbResIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResIp.setStatus('current')
if mibBuilder.loadTexts: lbResIp.setDescription('The IP address that a virtual balancer uses to accesses the resource.')
lbResPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPort.setStatus('current')
if mibBuilder.loadTexts: lbResPort.setDescription('The port that the service that the resource offer is accessed on.')
lbResState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResState.setStatus('current')
if mibBuilder.loadTexts: lbResState.setDescription('The current state of the resource, either UP, DOWN, or CLOSING.')
lbResWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResWeight.setStatus('current')
if mibBuilder.loadTexts: lbResWeight.setDescription('The weight that the virtual balancer will apply to the resource when selecting resources to try a connection to from a resource pool using either the WEIGHTEDLEASTCONNECT or WEIGHTEDLOTTERY selection algorithms.')
lbResTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResTotalConnections.setStatus('current')
if mibBuilder.loadTexts: lbResTotalConnections.setDescription('The total number of successful connections that have been made to this resource while it has been in the UP state.')
lbResCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResCurrentConnections.setStatus('current')
if mibBuilder.loadTexts: lbResCurrentConnections.setDescription('The total number of connections currently made to the resource.')
lbShowResPoolTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3), )
if mibBuilder.loadTexts: lbShowResPoolTable.setStatus('current')
if mibBuilder.loadTexts: lbShowResPoolTable.setDescription('A list about the general information about for a given resource pool.')
lbShowResPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1), ).setIndexNames((0, "AT-LB-MIB", "lbResPoolIndex"), (0, "AT-LB-MIB", "lbResPoolResourceIndex"))
if mibBuilder.loadTexts: lbShowResPoolEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowResPoolEntry.setDescription('An entry in the resource pool table.')
lbResPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolIndex.setStatus('current')
if mibBuilder.loadTexts: lbResPoolIndex.setDescription('The index for the resource pool table.')
lbResPoolResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolResourceIndex.setStatus('current')
if mibBuilder.loadTexts: lbResPoolResourceIndex.setDescription('The index for the resource table.')
lbResPool = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPool.setStatus('current')
if mibBuilder.loadTexts: lbResPool.setDescription('The name of the resource pool.')
lbResPoolSelectionAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolSelectionAlg.setStatus('current')
if mibBuilder.loadTexts: lbResPoolSelectionAlg.setDescription('The selection algorithm that ius employed by this resource pool when a resource has been selected for a connection. The options are ROUNDROBIN, WEIGHTEDLEASTCONNECT, WEIGHTEDLOTTERY and FASTESTRESPONSE.')
lbResPoolFailOnLast = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolFailOnLast.setStatus('current')
if mibBuilder.loadTexts: lbResPoolFailOnLast.setDescription('Indicates whether or not the resource pool will fail a resource if it is the last resource in the resource pool.')
lbResPoolTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolTotalConnections.setStatus('current')
if mibBuilder.loadTexts: lbResPoolTotalConnections.setDescription('The total number of successful connections that have been made to the resources in the resource pool over the lifetime of the resource pool.')
lbResPoolResources = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbResPoolResources.setStatus('current')
if mibBuilder.loadTexts: lbResPoolResources.setDescription('The name of the resource that is currently allocated to the resource pool.')
lbShowVirtBalTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4), )
if mibBuilder.loadTexts: lbShowVirtBalTable.setStatus('current')
if mibBuilder.loadTexts: lbShowVirtBalTable.setDescription('A list about the general information about for a given virtual balancer.')
lbShowVirtBalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1), ).setIndexNames((0, "AT-LB-MIB", "lbVirtBalIndex"))
if mibBuilder.loadTexts: lbShowVirtBalEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowVirtBalEntry.setDescription('An entry in the virtual balancer table.')
lbVirtBalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalIndex.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalIndex.setDescription('The index for the virtual balancer table.')
lbVirtBal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBal.setStatus('current')
if mibBuilder.loadTexts: lbVirtBal.setDescription('The name of the virtual balancer.')
lbVirtBalPublicIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalPublicIp.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalPublicIp.setDescription('The IP address on which the virtual balancer will receive requests for the service provided by the resource pool associated with it.')
lbVirtBalPublicPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalPublicPort.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalPublicPort.setDescription('The port on which the virtual balancer will receive requests for the service provided by the resource pool associated with it.')
lbVirtBalState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalState.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalState.setDescription('The current state of the virtual balancer, can either be UP, CLOSING, or DOWN.')
lbVirtBalResPool = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalResPool.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalResPool.setDescription('The name of the resource pool that is associated with the virtual balancer.')
lbVirtBalType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalType.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalType.setDescription('The type of load balancer that this virtual balancer currently is, can be either TCP, HTTP, or ROUTE.')
lbVirtBalTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalTotalConnections.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalTotalConnections.setDescription('The total number of stateful connections currently running through this virtual balancer.')
lbVirtBalAffinity = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalAffinity.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalAffinity.setDescription("Indicates whether or not entries will be made in a virtual balancers' affinity table for each stateful connection to a resource in its' resource pool (TCP and ROUTE type) or for cookies received from clients (HTTP type).")
lbVirtBalHttpErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 4, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbVirtBalHttpErrorCode.setStatus('current')
if mibBuilder.loadTexts: lbVirtBalHttpErrorCode.setDescription('A list of the HTTP server error status code added.')
lbShowAffTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5), )
if mibBuilder.loadTexts: lbShowAffTable.setStatus('current')
if mibBuilder.loadTexts: lbShowAffTable.setDescription('A list of affinity tables for all configured virtual balancers on the router.')
lbShowAffEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1), ).setIndexNames((0, "AT-LB-MIB", "lbAffIndex"))
if mibBuilder.loadTexts: lbShowAffEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowAffEntry.setDescription('An entry in the affinity table.')
lbAffIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffIndex.setStatus('current')
if mibBuilder.loadTexts: lbAffIndex.setDescription('The index for the affinity table.')
lbAffVirtBal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffVirtBal.setStatus('current')
if mibBuilder.loadTexts: lbAffVirtBal.setDescription('The name of the virtual balancer whose affinity table is being displayed.')
lbAffClientIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffClientIp.setStatus('current')
if mibBuilder.loadTexts: lbAffClientIp.setDescription('The IP address that has affinity to the given resource.')
lbAffCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffCookie.setStatus('current')
if mibBuilder.loadTexts: lbAffCookie.setDescription('The cookie that has affinity to the given resource.')
lbAffResource = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffResource.setStatus('current')
if mibBuilder.loadTexts: lbAffResource.setDescription('The name of the resource that the Client IP/Cookie has an affinity for.')
lbAffExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbAffExpiry.setStatus('current')
if mibBuilder.loadTexts: lbAffExpiry.setDescription('The amount of seconds left before this entry expires, and is removed from the affinity table.')
lbShowConTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6), )
if mibBuilder.loadTexts: lbShowConTable.setStatus('current')
if mibBuilder.loadTexts: lbShowConTable.setDescription('A list about all of the TCP connections currently open to a given virtual balancer.')
lbShowConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1), ).setIndexNames((0, "AT-LB-MIB", "lbConIndex"))
if mibBuilder.loadTexts: lbShowConEntry.setStatus('current')
if mibBuilder.loadTexts: lbShowConEntry.setDescription('An entry in the connections table.')
lbConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbConIndex.setStatus('current')
if mibBuilder.loadTexts: lbConIndex.setDescription('The index for the connections table.')
lbConVirtBal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbConVirtBal.setStatus('current')
if mibBuilder.loadTexts: lbConVirtBal.setDescription('The name of the virtual balancer the listed connections are to.')
lbConClientIp = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbConClientIp.setStatus('current')
if mibBuilder.loadTexts: lbConClientIp.setDescription('The IP address of that originated the connection.')
lbConPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbConPort.setStatus('current')
if mibBuilder.loadTexts: lbConPort.setDescription('The port on the originating system that represents the other end of the connection.')
lbConResource = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 4, 4, 4, 104, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbConResource.setStatus('current')
if mibBuilder.loadTexts: lbConResource.setDescription('The name of the resource that the connection has been made to.')
mibBuilder.exportSymbols("AT-LB-MIB", lbShowConTable=lbShowConTable, lbVirtBalState=lbVirtBalState, lbVirtBalHttpErrorCode=lbVirtBalHttpErrorCode, lb=lb, lbResCurrentConnections=lbResCurrentConnections, lbVirtBalResPool=lbVirtBalResPool, lbGlobalIndex=lbGlobalIndex, lbShowVirtBalEntry=lbShowVirtBalEntry, lbShowConEntry=lbShowConEntry, lbAffIndex=lbAffIndex, lbShowAffEntry=lbShowAffEntry, lbAffExpiry=lbAffExpiry, lbVirtBalAffinity=lbVirtBalAffinity, lbTotalResources=lbTotalResources, lbConVirtBal=lbConVirtBal, lbOrphanTimeOut=lbOrphanTimeOut, lbConResource=lbConResource, lbResPoolFailOnLast=lbResPoolFailOnLast, lbResPoolIndex=lbResPoolIndex, lbAffCookie=lbAffCookie, lbTotalResPools=lbTotalResPools, lbCurrentConnections=lbCurrentConnections, lbShowVirtBalTable=lbShowVirtBalTable, lbVirtBal=lbVirtBal, lbVirtBalPublicPort=lbVirtBalPublicPort, lbAffinityTimeOut=lbAffinityTimeOut, lbResPort=lbResPort, lbResState=lbResState, lbConIndex=lbConIndex, lbResPoolTotalConnections=lbResPoolTotalConnections, lbResPoolResourceIndex=lbResPoolResourceIndex, lbCriticalRst=lbCriticalRst, lbAffVirtBal=lbAffVirtBal, lbResPool=lbResPool, lbShowResPoolEntry=lbShowResPoolEntry, lbVirtBalTotalConnections=lbVirtBalTotalConnections, lbShowAffTable=lbShowAffTable, lbShowGlobalTable=lbShowGlobalTable, lbShowResPoolTable=lbShowResPoolTable, lbShowGlobalEntry=lbShowGlobalEntry, lbTotalVirtBals=lbTotalVirtBals, lbAffClientIp=lbAffClientIp, lbVirtBalType=lbVirtBalType, lbResource=lbResource, lbResPoolSelectionAlg=lbResPoolSelectionAlg, lbResIndex=lbResIndex, lbResTotalConnections=lbResTotalConnections, lbVirtBalIndex=lbVirtBalIndex, PYSNMP_MODULE_ID=lb, lbResPoolResources=lbResPoolResources, lbVirtBalPublicIp=lbVirtBalPublicIp, lbAffResource=lbAffResource, lbResIp=lbResIp, lbConClientIp=lbConClientIp, lbShowResTable=lbShowResTable, lbResWeight=lbResWeight, lbConPort=lbConPort, lbShowResEntry=lbShowResEntry)
