#
# PySNMP MIB module ALVARION-DEVICE-DOT1X-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-DEVICE-DOT1X-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
coDevDisIndex, = mibBuilder.importSymbols("ALVARION-DEVICE-MIB", "coDevDisIndex")
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Gauge32, MibIdentifier, Counter32, TimeTicks, Counter64, ObjectIdentity, ModuleIdentity, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Gauge32", "MibIdentifier", "Counter32", "TimeTicks", "Counter64", "ObjectIdentity", "ModuleIdentity", "IpAddress", "iso", "Integer32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
alvarionDeviceDot1xMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32))
if mibBuilder.loadTexts: alvarionDeviceDot1xMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionDeviceDot1xMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionDeviceDot1xMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionDeviceDot1xMIB.setDescription('Alvarion Device IEEE 802.1x MIB.')
alvarionDeviceDot1xMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1))
coDeviceDot1xConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 1))
coDeviceDot1xStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2))
coDeviceDot1xStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3))
coDeviceDot1xStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceDot1xStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceDot1xStatusTable.setDescription('Device IEEE 802.1x wireless station status attributes.')
coDeviceDot1xStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaIndex"))
if mibBuilder.loadTexts: coDeviceDot1xStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceDot1xStatusEntry.setDescription('An entry in the coDeviceDot1xStatusTable. coDevDisIndex - Uniquely identifies a device on the MultiService Controller. coDev1xStaIndex - Uniquely identifies a 802.1x station on the device.')
coDev1xStaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDev1xStaIndex.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaIndex.setDescription('Specifies the index of a 802.1x station on the device.')
coDev1xStaMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaMacAddress.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaMacAddress.setDescription('Wireless MAC address of the 802.1x station.')
coDev1xStaUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaUserName.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaUserName.setDescription('The User-Name representing the identity of the Supplicant PAE.')
coDev1xStaPaeState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuth", 8), ("forceUnauth", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaPaeState.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaPaeState.setDescription('The current value of the Authenticator PAE state machine.')
coDev1xStaBackendAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("request", 1), ("response", 2), ("success", 3), ("fail", 4), ("timeout", 5), ("idle", 6), ("initialize", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaBackendAuthState.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaBackendAuthState.setDescription('The current state of the Backend Authentication state machine.')
coDev1xStaPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("authorized", 1), ("unauthorized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaPortStatus.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaPortStatus.setDescription('The current value of the controlled Port status parameter for the Port.')
coDev1xStaSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaSessionTime.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaSessionTime.setDescription('The duration of the session in seconds.')
coDev1xStaTerminateCause = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 999))).clone(namedValues=NamedValues(("supplicantLogoff", 1), ("portFailure", 2), ("supplicantRestart", 3), ("reauthFailed", 4), ("authControlForceUnauth", 5), ("portReInit", 6), ("portAdminDisabled", 7), ("notTerminatedYet", 999)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaTerminateCause.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaTerminateCause.setDescription('The reason for session termination.')
coDeviceDot1xStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1), )
if mibBuilder.loadTexts: coDeviceDot1xStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceDot1xStatsTable.setDescription('Device IEEE 802.1x wireless client statistic attributes.')
coDeviceDot1xStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1), )
coDeviceDot1xStatusEntry.registerAugmentions(("ALVARION-DEVICE-DOT1X-MIB", "coDeviceDot1xStatsEntry"))
coDeviceDot1xStatsEntry.setIndexNames(*coDeviceDot1xStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceDot1xStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceDot1xStatsEntry.setDescription('An entry in the coDeviceDot1xStatsTable. coDevDisIndex - Uniquely identify a device in the MultiService Controller. coDev1xStaIndex - Uniquely identify a 802.1x station on the device.')
coDev1xStaEapolRxFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaEapolRxFrame.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaEapolRxFrame.setDescription('The number of valid EAPOL frames of any type that have been received by this Authenticator.')
coDev1xStaEapolTxFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaEapolTxFrame.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaEapolTxFrame.setDescription('The number of EAPOL frames of any type that have been transmitted by this Authenticator.')
coDev1xStaBackendResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaBackendResponses.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaBackendResponses.setDescription('Counts the number of times that the state machine sends an initial Access-Request packet to the Authentication server (i.e., executes sendRespToServer on entry to the RESPONSE state). Indicates that the Authenticator attempted communication with the Authentication Server.')
coDev1xStaBackendChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaBackendChallenges.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaBackendChallenges.setDescription('Counts the number of times that the state machine receives an initial Access-Challenge packet from the Authentication server (i.e., aReq becomes TRUE, causing exit from the RESPONSE state). Indicates that the Authentication Server has communication with the Authenticator.')
coDev1xStaBackendAuthSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaBackendAuthSuccesses.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaBackendAuthSuccesses.setDescription('Counts the number of times that the state machine receives an EAP-Success message from the Authentication Server (i.e., aSuccess becomes TRUE, causing a transition from RESPONSE to SUCCESS). Indicates that the Supplicant has successfully authenticated to the Authentication Server.')
coDev1xStaBackendAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDev1xStaBackendAuthFails.setStatus('current')
if mibBuilder.loadTexts: coDev1xStaBackendAuthFails.setDescription('Counts the number of times that the state machine receives an EAP-Failure message from the Authentication Server (i.e., aFail becomes TRUE, causing a transition from RESPONSE to FAIL). Indicates that the Supplicant has not authenticated to the Authentication Server.')
alvarionDeviceDot1xMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2))
alvarionDeviceDot1xMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2, 1))
alvarionDeviceDot1xMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2, 2))
alvarionDeviceDot1xMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2, 1, 1)).setObjects(("ALVARION-DEVICE-DOT1X-MIB", "alvarionDeviceDot1xStatusMIBGroup"), ("ALVARION-DEVICE-DOT1X-MIB", "alvarionDeviceDot1xStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceDot1xMIBCompliance = alvarionDeviceDot1xMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceDot1xMIBCompliance.setDescription('The compliance statement for the Device MIB.')
alvarionDeviceDot1xStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2, 2, 1)).setObjects(("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaMacAddress"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaUserName"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaPaeState"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaBackendAuthState"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaPortStatus"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaSessionTime"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaTerminateCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceDot1xStatusMIBGroup = alvarionDeviceDot1xStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceDot1xStatusMIBGroup.setDescription('A collection of status objects for IEEE 802.1x stations connected to Alvarion devices.')
alvarionDeviceDot1xStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 32, 2, 2, 2)).setObjects(("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaEapolRxFrame"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaEapolTxFrame"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaBackendResponses"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaBackendChallenges"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaBackendAuthSuccesses"), ("ALVARION-DEVICE-DOT1X-MIB", "coDev1xStaBackendAuthFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceDot1xStatsMIBGroup = alvarionDeviceDot1xStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceDot1xStatsMIBGroup.setDescription('A collection of statistical objects for IEEE 802.1x stations connected to Alvarion devices.')
mibBuilder.exportSymbols("ALVARION-DEVICE-DOT1X-MIB", coDev1xStaBackendAuthState=coDev1xStaBackendAuthState, coDev1xStaPortStatus=coDev1xStaPortStatus, coDev1xStaEapolRxFrame=coDev1xStaEapolRxFrame, alvarionDeviceDot1xStatsMIBGroup=alvarionDeviceDot1xStatsMIBGroup, alvarionDeviceDot1xStatusMIBGroup=alvarionDeviceDot1xStatusMIBGroup, coDev1xStaEapolTxFrame=coDev1xStaEapolTxFrame, coDev1xStaMacAddress=coDev1xStaMacAddress, coDeviceDot1xStatsGroup=coDeviceDot1xStatsGroup, alvarionDeviceDot1xMIB=alvarionDeviceDot1xMIB, PYSNMP_MODULE_ID=alvarionDeviceDot1xMIB, alvarionDeviceDot1xMIBCompliance=alvarionDeviceDot1xMIBCompliance, coDev1xStaIndex=coDev1xStaIndex, coDev1xStaSessionTime=coDev1xStaSessionTime, coDev1xStaTerminateCause=coDev1xStaTerminateCause, alvarionDeviceDot1xMIBGroups=alvarionDeviceDot1xMIBGroups, coDeviceDot1xStatsTable=coDeviceDot1xStatsTable, alvarionDeviceDot1xMIBCompliances=alvarionDeviceDot1xMIBCompliances, coDeviceDot1xStatusGroup=coDeviceDot1xStatusGroup, coDeviceDot1xStatusEntry=coDeviceDot1xStatusEntry, coDeviceDot1xConfigGroup=coDeviceDot1xConfigGroup, alvarionDeviceDot1xMIBObjects=alvarionDeviceDot1xMIBObjects, coDev1xStaPaeState=coDev1xStaPaeState, coDev1xStaBackendAuthFails=coDev1xStaBackendAuthFails, coDeviceDot1xStatusTable=coDeviceDot1xStatusTable, coDev1xStaBackendAuthSuccesses=coDev1xStaBackendAuthSuccesses, coDev1xStaBackendChallenges=coDev1xStaBackendChallenges, coDeviceDot1xStatsEntry=coDeviceDot1xStatsEntry, alvarionDeviceDot1xMIBConformance=alvarionDeviceDot1xMIBConformance, coDev1xStaUserName=coDev1xStaUserName, coDev1xStaBackendResponses=coDev1xStaBackendResponses)
