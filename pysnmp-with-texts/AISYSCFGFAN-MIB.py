#
# PySNMP MIB module AISYSCFGFAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AISYSCFGFAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, ModuleIdentity, Counter64, Integer32, NotificationType, Counter32, Gauge32, enterprises, iso, MibIdentifier, IpAddress, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "ModuleIdentity", "Counter64", "Integer32", "NotificationType", "Counter32", "Gauge32", "enterprises", "iso", "MibIdentifier", "IpAddress", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSysCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32))
aiSysCfgFan = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 32, 4))
aiSysCfgFan.setRevisions(('2001-04-30 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aiSysCfgFan.setRevisionsDescriptions(('The initial revision of this module.',))
if mibBuilder.loadTexts: aiSysCfgFan.setLastUpdated('200104301700Z')
if mibBuilder.loadTexts: aiSysCfgFan.setOrganization('Applied Innovation Inc.')
if mibBuilder.loadTexts: aiSysCfgFan.setContactInfo(' Engineering MIB Administrator Postal: Applied Innovation Inc. 5800 Innovation Drive Dublin, Ohio 43017-3271 Tel: 614-798-2000 Fax: 614-798-1770 Email: snmp@aiinet.com')
if mibBuilder.loadTexts: aiSysCfgFan.setDescription('MIB module for fans.')
aiSCFanTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32, 4, 0))
aiSCFanTrapFail = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 4, 0, 1)).setObjects(("AISYSCFGFAN-MIB", "aiSCFanIndex"), ("AISYSCFGFAN-MIB", "aiSCFanStatus"))
if mibBuilder.loadTexts: aiSCFanTrapFail.setStatus('current')
if mibBuilder.loadTexts: aiSCFanTrapFail.setDescription('Trap sent when a fan goes into a failure mode.')
aiSCFanTrapOk = NotificationType((1, 3, 6, 1, 4, 1, 539, 32, 4, 0, 2)).setObjects(("AISYSCFGFAN-MIB", "aiSCFanIndex"), ("AISYSCFGFAN-MIB", "aiSCFanStatus"))
if mibBuilder.loadTexts: aiSCFanTrapOk.setStatus('current')
if mibBuilder.loadTexts: aiSCFanTrapOk.setDescription('Trap sent when a fan reverts from a failure mode.')
aiSCFanAgregateStatus = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("okay", 1), ("trouble", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCFanAgregateStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCFanAgregateStatus.setDescription('Aggregate status of all fan units in the system.')
aiSCFanTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 4, 2), )
if mibBuilder.loadTexts: aiSCFanTable.setStatus('current')
if mibBuilder.loadTexts: aiSCFanTable.setDescription('A table of information on each fan in the system.')
aiSCFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 4, 2, 1), ).setIndexNames((0, "AISYSCFGFAN-MIB", "aiSCFanIndex"))
if mibBuilder.loadTexts: aiSCFanEntry.setStatus('current')
if mibBuilder.loadTexts: aiSCFanEntry.setDescription('Information on a given fan.')
aiSCFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCFanIndex.setStatus('current')
if mibBuilder.loadTexts: aiSCFanIndex.setDescription('Self referential index into this table.')
aiSCFanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCFanDescription.setStatus('current')
if mibBuilder.loadTexts: aiSCFanDescription.setDescription('Description of the fan to which this table entry refers.')
aiSCFanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("okay", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCFanStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCFanStatus.setDescription('Status of the fan unit.')
mibBuilder.exportSymbols("AISYSCFGFAN-MIB", aiSCFanAgregateStatus=aiSCFanAgregateStatus, aii=aii, aiSCFanEntry=aiSCFanEntry, aiSysCfgFan=aiSysCfgFan, aiSCFanDescription=aiSCFanDescription, aiSCFanTrapInfo=aiSCFanTrapInfo, aiSCFanIndex=aiSCFanIndex, aiSCFanTrapOk=aiSCFanTrapOk, aiSCFanStatus=aiSCFanStatus, aiSCFanTable=aiSCFanTable, PYSNMP_MODULE_ID=aiSysCfgFan, aiSysCfg=aiSysCfg, aiSCFanTrapFail=aiSCFanTrapFail)
