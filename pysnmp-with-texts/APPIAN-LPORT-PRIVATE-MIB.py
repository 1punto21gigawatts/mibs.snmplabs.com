#
# PySNMP MIB module APPIAN-LPORT-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/APPIAN-LPORT-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:23:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
acLport, AcNodeId, AcOpStatus = mibBuilder.importSymbols("APPIAN-SMI-MIB", "acLport", "AcNodeId", "AcOpStatus")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, Counter32, Gauge32, iso, TimeTicks, IpAddress, NotificationType, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "Counter32", "Gauge32", "iso", "TimeTicks", "IpAddress", "NotificationType", "Counter64", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
acLportPrivate = ModuleIdentity((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1))
if mibBuilder.loadTexts: acLportPrivate.setLastUpdated('0003190000Z')
if mibBuilder.loadTexts: acLportPrivate.setOrganization('Appian Communications, Inc.')
if mibBuilder.loadTexts: acLportPrivate.setContactInfo('Brian Johnson')
if mibBuilder.loadTexts: acLportPrivate.setDescription('Draft engineering version. Not for release.')
acLportTable = MibTable((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1, 1), )
if mibBuilder.loadTexts: acLportTable.setStatus('current')
if mibBuilder.loadTexts: acLportTable.setDescription('The logical table is an abstraction of the entity that uses a time slot. For an example, a VT1.5 time slot can be used as a DS1 and this DS1 entity is refered to as a logical port. Rows in this table are created automatically when a trunk is activated for this OSAP. The information in this table is local to this OSAP and not shared. Before the trunk was activated, it was configured with a list of logical port index(es). A logical port index maps directly to a timeslot index from the shared timeslot table. A row in the Lport table will be created for each logical port / timeslot that is defined in the lport list for a trunk that is used/dropped by this OSAP.')
acLportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1, 1, 1), ).setIndexNames((0, "APPIAN-LPORT-PRIVATE-MIB", "acLportNodeId"), (0, "APPIAN-LPORT-PRIVATE-MIB", "acLportIndex"))
if mibBuilder.loadTexts: acLportEntry.setStatus('current')
if mibBuilder.loadTexts: acLportEntry.setDescription('A row in the logical port table.')
acLportNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1, 1, 1, 1), AcNodeId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acLportNodeId.setStatus('current')
if mibBuilder.loadTexts: acLportNodeId.setDescription('The node id is the id for this specific node in the OSAP ring.')
acLportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: acLportIndex.setStatus('current')
if mibBuilder.loadTexts: acLportIndex.setDescription('The row index. This is the same as the index int the timeslot table that this instance corresponds. It provides a mapping between the shared and private tables.')
acLportOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2785, 2, 4, 1, 1, 1, 3), AcOpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acLportOpStatus.setStatus('current')
if mibBuilder.loadTexts: acLportOpStatus.setDescription('The current operational status of the logical port that corresponds to this entity.')
mibBuilder.exportSymbols("APPIAN-LPORT-PRIVATE-MIB", acLportNodeId=acLportNodeId, acLportPrivate=acLportPrivate, PYSNMP_MODULE_ID=acLportPrivate, acLportTable=acLportTable, acLportIndex=acLportIndex, acLportOpStatus=acLportOpStatus, acLportEntry=acLportEntry)
