#
# PySNMP MIB module CISCO-VISM-PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-PORT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:18:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
vismPort, = mibBuilder.importSymbols("BASIS-MIB", "vismPort")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, ModuleIdentity, NotificationType, Gauge32, Unsigned32, Bits, MibIdentifier, IpAddress, Counter64, TimeTicks, ObjectIdentity, iso, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "NotificationType", "Gauge32", "Unsigned32", "Bits", "MibIdentifier", "IpAddress", "Counter64", "TimeTicks", "ObjectIdentity", "iso", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoVismPortMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 92))
ciscoVismPortMIB.setRevisions(('2003-10-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoVismPortMIB.setRevisionsDescriptions(('Initial version of the MIB. The content of this MIB was originally available in SMIv1 version. The MIB has been converted to SMIv2 version and descriptions of some of the objects have been modified.',))
if mibBuilder.loadTexts: ciscoVismPortMIB.setLastUpdated('200310160000Z')
if mibBuilder.loadTexts: ciscoVismPortMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoVismPortMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-wanatm@cisco.com')
if mibBuilder.loadTexts: ciscoVismPortMIB.setDescription('The MIB module containing Port information for VISM service module.')
vismPortCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1))
vismPortCnfGrpTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1), )
if mibBuilder.loadTexts: vismPortCnfGrpTable.setStatus('current')
if mibBuilder.loadTexts: vismPortCnfGrpTable.setDescription('Port configuration table for the virtual port. Only one entry is allowed in this table. ')
vismPortCnfGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1), ).setIndexNames((0, "CISCO-VISM-PORT-MIB", "vismPortNum"))
if mibBuilder.loadTexts: vismPortCnfGrpEntry.setStatus('current')
if mibBuilder.loadTexts: vismPortCnfGrpEntry.setDescription(' An entry for logical port. ')
vismPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismPortNum.setStatus('current')
if mibBuilder.loadTexts: vismPortNum.setDescription('This is a logical port number. If PXM1 (Processor Switch Module) is the PXM used on the shelf this object should be set to 1. For PXM1E this object should be set to 255. ')
vismPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("add", 1), ("del", 2), ("mod", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismPortRowStatus.setStatus('current')
if mibBuilder.loadTexts: vismPortRowStatus.setDescription("The object add, delete or modify a port. 'add' - add a port, a port acn only be added if the status is in 'del'. 'del' - delete a port, once a port is deleted the status is chane to 'del'. The port can only be deleted after deleting all the connections and the resource partition. 'mod' - modify a port and change status to 'mod'. ")
vismPortLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismPortLineNum.setStatus('current')
if mibBuilder.loadTexts: vismPortLineNum.setDescription('This represents the line number to which this port is associated. Since the network port is not associated with any line, line number 0 is returned on a GET. ')
vismPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("voIP", 1), ("userPort", 2))).clone('voIP')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismPortType.setStatus('current')
if mibBuilder.loadTexts: vismPortType.setDescription("The value of this object is always set to 'voIP'. It indicates that network port. The same value is used even when VISM supports VoAAL1 or VoAAL2. ")
vismPortDs0ConfigBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismPortDs0ConfigBitMap.setStatus('current')
if mibBuilder.loadTexts: vismPortDs0ConfigBitMap.setDescription('This respesents the bit map of DS0s which is used to create this port. Bit 0 represents DS0-1. Since this object is not applicable to the network port, value 0 is returned on a GET. ')
vismPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5651320)).clone(5651320)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismPortSpeed.setStatus('current')
if mibBuilder.loadTexts: vismPortSpeed.setDescription('The speed of the port in cells per second. It is used by VISM card to advertise virtual port bandwidth to the controller, SVC(Switched Virtual Circuit) and PVC(Permanent Virtual Circuit) connection admission control and aggregate traffic clipping. This object can be modified only when there is no existing resource partition on the port. ')
vismPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notConfigured", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismPortState.setStatus('current')
if mibBuilder.loadTexts: vismPortState.setDescription('This object indicates the state of the port. ')
ciscoVismPortMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 92, 2))
ciscoVismPortMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 92, 2, 1))
ciscoVismPortMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 92, 2, 2))
ciscoVismPortCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 92, 2, 2, 1)).setObjects(("CISCO-VISM-PORT-MIB", "ciscoVismPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismPortCompliance = ciscoVismPortCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoVismPortCompliance.setDescription('The compliance statement for objects related to VISM Port module.')
ciscoVismPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 92, 2, 1, 1)).setObjects(("CISCO-VISM-PORT-MIB", "vismPortNum"), ("CISCO-VISM-PORT-MIB", "vismPortRowStatus"), ("CISCO-VISM-PORT-MIB", "vismPortLineNum"), ("CISCO-VISM-PORT-MIB", "vismPortType"), ("CISCO-VISM-PORT-MIB", "vismPortDs0ConfigBitMap"), ("CISCO-VISM-PORT-MIB", "vismPortSpeed"), ("CISCO-VISM-PORT-MIB", "vismPortState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismPortGroup = ciscoVismPortGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoVismPortGroup.setDescription('The collection of objects which are used to represent VISM Port information.')
mibBuilder.exportSymbols("CISCO-VISM-PORT-MIB", vismPortCnfGrpEntry=vismPortCnfGrpEntry, vismPortType=vismPortType, vismPortLineNum=vismPortLineNum, ciscoVismPortMIB=ciscoVismPortMIB, ciscoVismPortCompliance=ciscoVismPortCompliance, vismPortDs0ConfigBitMap=vismPortDs0ConfigBitMap, ciscoVismPortMIBCompliances=ciscoVismPortMIBCompliances, ciscoVismPortGroup=ciscoVismPortGroup, vismPortNum=vismPortNum, vismPortSpeed=vismPortSpeed, vismPortCnfGrp=vismPortCnfGrp, vismPortRowStatus=vismPortRowStatus, ciscoVismPortMIBGroups=ciscoVismPortMIBGroups, ciscoVismPortMIBConformance=ciscoVismPortMIBConformance, PYSNMP_MODULE_ID=ciscoVismPortMIB, vismPortState=vismPortState, vismPortCnfGrpTable=vismPortCnfGrpTable)
