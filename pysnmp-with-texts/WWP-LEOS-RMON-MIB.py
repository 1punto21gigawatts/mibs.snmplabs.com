#
# PySNMP MIB module WWP-LEOS-RMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-RMON-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibIdentifier, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, IpAddress, Unsigned32, ModuleIdentity, Bits, iso, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "IpAddress", "Unsigned32", "ModuleIdentity", "Bits", "iso", "TimeTicks", "Integer32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosRmonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41))
wwpLeosRmonMIB.setRevisions(('2012-06-27 00:00', '2011-08-01 17:00', '2010-06-20 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosRmonMIB.setRevisionsDescriptions(('Corrected string lengths.', 'Added xftp server configuration.', 'Initial creation.',))
if mibBuilder.loadTexts: wwpLeosRmonMIB.setLastUpdated('201206270000Z')
if mibBuilder.loadTexts: wwpLeosRmonMIB.setOrganization('Ciena, Inc')
if mibBuilder.loadTexts: wwpLeosRmonMIB.setContactInfo(' Mib Meister 115 North Sullivan Road Spokane Valley, WA 99037 USA Phone: +1 509 242 9000 Email: support@ciena.com')
if mibBuilder.loadTexts: wwpLeosRmonMIB.setDescription('The MIB module for the ciena proprietary rmon configuration.')
wwpLeosRmonMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1))
wwpLeosRmon = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1))
wwpLeosRmonMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 2))
wwpLeosRmonMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 2, 0))
wwpLeosRmonMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 3))
wwpLeosRmonsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 3, 1))
wwpLeosRmonMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 3, 2))
wwpLeosRmonFileTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosRmonFileTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileTable.setDescription('The table specifying rmon file configuration.')
wwpLeosRmonFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-RMON-MIB", "wwpLeosRmonFileIndex"))
if mibBuilder.loadTexts: wwpLeosRmonFileEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileEntry.setDescription('An entry in the port stats table.')
wwpLeosRmonFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonFileIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileIndex.setDescription('placeholder for index')
wwpLeosRmonFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileName.setDescription('The rmon file name')
wwpLeosRmonFileRemoteDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileRemoteDir.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileRemoteDir.setDescription('The location on the remote server to place the file')
wwpLeosRmonFileServer = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileServer.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileServer.setDescription('The servers name')
wwpLeosRmonFileInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3600, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileInterval.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileInterval.setDescription('retransmit the last rmon file to the server')
wwpLeosRmonFilePushLastFile = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFilePushLastFile.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFilePushLastFile.setDescription('retransmit the last rmon file to the server')
wwpLeosRmonFileState = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileState.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileState.setDescription('the current operational state of the file push')
wwpLeosRmonFileLastRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonFileLastRemoteName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileLastRemoteName.setDescription('The name and location on the remote server of the last file')
wwpLeosRmonFileLastPushTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonFileLastPushTime.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileLastPushTime.setDescription('The Time of the last file push')
wwpLeosRmonFileLastPushStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonFileLastPushStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileLastPushStatus.setDescription('the status of the last rmon file push')
wwpLeosRmonFileUserFilesKept = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileUserFilesKept.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileUserFilesKept.setDescription('Must be less than or equal to wwpLeosRmonFileMaxFiles')
wwpLeosRmonFileMaxFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonFileMaxFiles.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileMaxFiles.setDescription('Only 1 file is supported on leos 4.x devices and the 3902, 3911 and 3920')
wwpLeosRmonFileXftpTransferMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("tftp", 1), ("ftp", 2), ("sftp", 3), ("defaultTftp", 4), ("defaultFtp", 5), ("defaultSftp", 6), ("default", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileXftpTransferMode.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileXftpTransferMode.setDescription('The type of server to use.')
wwpLeosRmonFileXftpLoginId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileXftpLoginId.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileXftpLoginId.setDescription('The username to use for xftp downloads.')
wwpLeosRmonFileXftpPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileXftpPassword.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileXftpPassword.setDescription('The password to use for xftp downloads.')
wwpLeosRmonFileXftpSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 1, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonFileXftpSecret.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonFileXftpSecret.setDescription('The secret to use for xftp downloads.')
wwpLeosRmonHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosRmonHistoryTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryTable.setDescription('The table specifying rmon History configuration.')
wwpLeosRmonHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-RMON-MIB", "wwpLeosRmonHistoryIndex"))
if mibBuilder.loadTexts: wwpLeosRmonHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryEntry.setDescription('An entry in the port stats table.')
wwpLeosRmonHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosRmonHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryIndex.setDescription('placeholder for index')
wwpLeosRmonHistoryAutoConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryAutoConfig.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryAutoConfig.setDescription('auto create rmon history entries when ports go operationally enabled')
wwpLeosRmonHistoryFileLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryFileLogging.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryFileLogging.setDescription('file logging setting to use when creating the next autogenerated etherHistory entry')
wwpLeosRmonHistoryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryInterval.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryInterval.setDescription('interval to use when creating the next autogenerated etherHistory entry')
wwpLeosRmonHistoryNumBuckets = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryNumBuckets.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryNumBuckets.setDescription('number of buckets to request when creating the next autogenerated etherHistory entry')
wwpLeosRmonHistoryOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryOwner.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryOwner.setDescription('the owner to use when creating the next autogenerated etherHistory entry')
wwpLeosRmonHistoryStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 41, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 22, 36, 37, 38, 39, 45, 47, 51, 54, 55, 63, 71, 87, 79, 95, 103, 111, 119, 127))).clone(namedValues=NamedValues(("none", 0), ("basicTx", 1), ("basicRx", 2), ("basicRxBasicTx", 3), ("basicError", 4), ("basicTxBasicError", 5), ("basicRxBasicError", 6), ("basicAll", 7), ("txAll", 9), ("rxAll", 10), ("txAllBasicError", 13), ("rxAllBasicError", 22), ("errorAll", 36), ("basicTxErrorAll", 37), ("basicRxErrorAll", 38), ("basicRxBasicTxErroAll", 39), ("txAllErrorAll", 45), ("txAllRxBasicErrorAll", 47), ("rxTxAll", 51), ("rxAllErrorAll", 54), ("rxAllTxBasicErrorAll", 55), ("allStatsNoStandard", 63), ("standardRmon", 71), ("standardRxAll", 87), ("standardTxAll", 79), ("standardRxAllTxAll", 95), ("standardErrorAll", 103), ("standardTxAllErrorAll", 111), ("standardRxAllErrorAll", 119), ("allStatsWithStandard", 127)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosRmonHistoryStatistics.setStatus('current')
if mibBuilder.loadTexts: wwpLeosRmonHistoryStatistics.setDescription('The statistics to gather when using the etherhistory')
mibBuilder.exportSymbols("WWP-LEOS-RMON-MIB", wwpLeosRmonFileEntry=wwpLeosRmonFileEntry, wwpLeosRmonMIBObjects=wwpLeosRmonMIBObjects, wwpLeosRmonHistoryNumBuckets=wwpLeosRmonHistoryNumBuckets, wwpLeosRmonMIBGroups=wwpLeosRmonMIBGroups, wwpLeosRmonFileIndex=wwpLeosRmonFileIndex, wwpLeosRmonFileXftpTransferMode=wwpLeosRmonFileXftpTransferMode, wwpLeosRmonMIBNotifications=wwpLeosRmonMIBNotifications, wwpLeosRmonFileLastRemoteName=wwpLeosRmonFileLastRemoteName, wwpLeosRmonFileInterval=wwpLeosRmonFileInterval, wwpLeosRmonFilePushLastFile=wwpLeosRmonFilePushLastFile, wwpLeosRmonHistoryOwner=wwpLeosRmonHistoryOwner, wwpLeosRmonHistoryStatistics=wwpLeosRmonHistoryStatistics, wwpLeosRmonMIBConformance=wwpLeosRmonMIBConformance, wwpLeosRmonFileXftpPassword=wwpLeosRmonFileXftpPassword, wwpLeosRmonMIBNotificationPrefix=wwpLeosRmonMIBNotificationPrefix, wwpLeosRmon=wwpLeosRmon, wwpLeosRmonFileMaxFiles=wwpLeosRmonFileMaxFiles, wwpLeosRmonFileLastPushTime=wwpLeosRmonFileLastPushTime, wwpLeosRmonFileName=wwpLeosRmonFileName, wwpLeosRmonFileTable=wwpLeosRmonFileTable, wwpLeosRmonMIB=wwpLeosRmonMIB, wwpLeosRmonsMIBCompliances=wwpLeosRmonsMIBCompliances, wwpLeosRmonFileXftpLoginId=wwpLeosRmonFileXftpLoginId, wwpLeosRmonHistoryFileLogging=wwpLeosRmonHistoryFileLogging, wwpLeosRmonHistoryTable=wwpLeosRmonHistoryTable, wwpLeosRmonFileUserFilesKept=wwpLeosRmonFileUserFilesKept, wwpLeosRmonHistoryEntry=wwpLeosRmonHistoryEntry, wwpLeosRmonHistoryInterval=wwpLeosRmonHistoryInterval, wwpLeosRmonFileRemoteDir=wwpLeosRmonFileRemoteDir, wwpLeosRmonFileState=wwpLeosRmonFileState, PYSNMP_MODULE_ID=wwpLeosRmonMIB, wwpLeosRmonHistoryIndex=wwpLeosRmonHistoryIndex, wwpLeosRmonFileXftpSecret=wwpLeosRmonFileXftpSecret, wwpLeosRmonFileLastPushStatus=wwpLeosRmonFileLastPushStatus, wwpLeosRmonHistoryAutoConfig=wwpLeosRmonHistoryAutoConfig, wwpLeosRmonFileServer=wwpLeosRmonFileServer)
