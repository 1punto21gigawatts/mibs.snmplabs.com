#
# PySNMP MIB module HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:34:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
hpicfSaviObjectsFilteringEntry, = mibBuilder.importSymbols("HPICF-SAVI-MIB", "hpicfSaviObjectsFilteringEntry")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, Integer32, iso, Counter32, Bits, TimeTicks, Unsigned32, MibIdentifier, NotificationType, ModuleIdentity, IpAddress, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "iso", "Counter32", "Bits", "TimeTicks", "Unsigned32", "MibIdentifier", "NotificationType", "ModuleIdentity", "IpAddress", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
MacAddress, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "DisplayString", "TextualConvention")
hpicfIpv6Lockdown = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103))
hpicfIpv6Lockdown.setRevisions(('2017-11-08 00:00', '2013-10-06 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfIpv6Lockdown.setRevisionsDescriptions(('Importing hpicfSaviObjectsFilteringEntry from HPICF-SAVI-MIB and augmenting it instead of saviObjectsFilteringEntry.', 'Initial Version.',))
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setLastUpdated('201711080000Z')
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setContactInfo('Hewlett-Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfIpv6Lockdown.setDescription('This MIB module contains HP proprietary objects for managing DHCPV6 Snooping.')
hpicfDIPLDv6SourceBindingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0))
hpicfDIPLDv6Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1))
hpicfIpv6LockConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2))
hpicfDIPDv6SourceBindingOutOfResources = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddressType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrVlan"))
if mibBuilder.loadTexts: hpicfDIPDv6SourceBindingOutOfResources.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPDv6SourceBindingOutOfResources.setDescription('This trap is sent when hardware runs out of resource to program Dynamic IPv6 Lockdown rule. It is controlled by the state of hpicfcfDIPLDv6SourceBindingOutOfResourcesTrapCtrl object.Implementation of this trap is optional.')
hpicfDIPLDv6SourceBindingOutOfResourcesObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2))
hpicfDIPLDv6SourceBindingAddrPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 1), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrPort.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrPort.setDescription('The Interface Index of the port for which Dynamic IPv6 Lockdown rule cannot be programmed into hardware.')
hpicfDIPLDv6SourceBindingAddrMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrMacAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrMacAddress.setDescription('The source MAC address for which Dynamic IPv6 Lockdown rule cannot be programmed into hardware.')
hpicfDIPLDv6SourceBindingAddrIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddressType.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddressType.setDescription('The Type of the IP Address of the source for which Dynamic IPv6 lockdown rule cannot be programmed into the hardware.')
hpicfDIPLDv6SourceBindingAddrIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrIpAddress.setDescription('A source IP address for which Dynamic IPv6 Lockdown rule cannot be programmed into hardware.')
hpicfDIPLDv6SourceBindingAddrVlan = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 2, 5), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrVlan.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingAddrVlan.setDescription('The VLAN for which Dynamic IPv6 Lockdown rule cannot be programmed into hardware.')
hpicfDIPLDv6SourceBindingVoilations = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 3)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPktCount"))
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilations.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilations.setDescription("This notification indicates a host was denied access to the switch based on Dynamic IPv6 lockdown protection rules. This trap is controlled by the state of the 'hpicfDIPLDv6SourceBindingViolationsTrapCtrl' object. Implementation of this trap is optional.")
hpicfDIPLDv6SourceBindingVoilationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4))
hpicfDIPLDv6SourceBindingVoilationsCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 1), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsCount.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsCount.setDescription('The number of DIPLDv6 violations sent from a DIPLDv6 entity to the SNMP entity.')
hpicfDIPLDv6SourceBindingVoilationsPort = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 2), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPort.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPort.setDescription("The Interface Index of the port for which this 'hpicfDIPLDv6SourceBindingVoilations' applies.")
hpicfDIPLDv6SourceBindingVoilationsSrcIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 3), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpType.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpType.setDescription("The type of IP address contained in 'hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress'. The only values expected are ipv6 or ipv6z.")
hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 4), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress.setDescription("The source IP address for which this 'hpicfDIPLDv6SourceBindingVoilations' applies.")
hpicfDIPLDv6SourceBindingVoilationsDstIpType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 5), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpType.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpType.setDescription("The type of IP address contained in 'hpicfIpLockSourceBindingVoilationsDstIpAddress'. The only values expected are ipv6 or ipv6z.")
hpicfDIPLDv6SourceBindingVoilationsDstIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 6), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsDstIpAddress.setDescription("The destination IP address for which this 'hpicfDIPLDv6SourceBindingVoilations' applies.")
hpicfDIPLDv6SourceBindingVoilationsMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsMacAddress.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsMacAddress.setDescription("The source MAC address for which this 'hpicfDIPLDv6SourceBindingVoilations' applies.")
hpicfDIPLDv6SourceBindingVoilationsPktCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 0, 4, 8), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPktCount.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingVoilationsPktCount.setDescription('This object indicates the number of packets received from this host which were dropped.')
hpicfDIPLDv6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1))
hpicfDIPLDv6LockEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6LockEnable.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6LockEnable.setDescription('The administrative status of the Dynamic IPv6 Lockdown feature.')
hpicfDIPLDv6PortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfDIPLDv6PortTable.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6PortTable.setDescription('Per-interface configuration for Dynamic IPv6 Lockdown.')
hpicfDIPLDv6PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfDIPLDv6PortEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6PortEntry.setDescription('Dynamic IPv6 Lockdown configuration information for a single port.')
hpicfDIPLDv6PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6PortEnable.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6PortEnable.setDescription('This object indicates whether this port is enabled for Dynamic IPv6 Lockdown.')
hpicfDIPLDv6PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 2, 1, 2), Bits().clone(namedValues=NamedValues(("active", 0), ("noDsnoopv6", 1), ("trustedPort", 2), ("noSnoopingVlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6PortOperStatus.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6PortOperStatus.setDescription('This object indicates the various states of the current operating mode of Dynamic IPv6 Lockdown on this port. The states are: active - Dynamic IPv6 Lockdown is active on this port. noDsnoop - Dynamic IPv6 Lockdown is enabled on this port, but DHCPv6 Snooping is not globally enabled. trustedPort - Dynamic IPv6 Lockdown is enabled on this port, but is not active because the port is a DHCPv6 Snooping trusted port. noSnoopingVlan - Dynamic IPv6 Lockdown is enabled on this port, but is not active because the port is not a member of any VLAN with DHCPv6 Snooping enabled.')
hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl.setDescription('Controls generation of SNMP notifications for traps defined in this MIB.')
hpicfDIPLDv6SourceBindingViolationsTrapCtrl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingViolationsTrapCtrl.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6SourceBindingViolationsTrapCtrl.setDescription('Controls generation of SNMP notifications for traps defined in this MIB.')
hpicfDIPLDv6Status = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2))
hpicfDIPLDv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1), )
if mibBuilder.loadTexts: hpicfDIPLDv6AddrTable.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6AddrTable.setDescription('Table of source address bindings on ports where Dynamic IPv6 Lockdown is active that are currently permitted.')
hpicfDIPLDv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1), )
hpicfSaviObjectsFilteringEntry.registerAugmentions(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6AddrEntry"))
hpicfDIPLDv6AddrEntry.setIndexNames(*hpicfSaviObjectsFilteringEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfDIPLDv6AddrEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6AddrEntry.setDescription('Extension to the hpicfSAVI filtering table.')
hpicfDIPLDv6AddrVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1, 1), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6AddrVlan.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6AddrVlan.setDescription('The VLAN on which this binding entry is permitted.')
hpicfDIPLDv6ResourceAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDIPLDv6ResourceAvailable.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6ResourceAvailable.setDescription('This Object provides the availability of HW resources while adding a binding. TRUE indicates that hardware resources were available to add a binding. FALSE indicates that resources were not available.')
hpicfIpv6LockGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1))
hpicfIpv6LockBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6LockEnable"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6PortEnable"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6PortOperStatus"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6AddrVlan"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6ResourceAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpv6LockBaseGroup = hpicfIpv6LockBaseGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfIpv6LockBaseGroup.setDescription('A collection of objects for configuring and monitoring the base Dynamic IPv6 Lockdown functionality.')
hpicfSourceBindingTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 2)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddressType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingAddrVlan"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPort"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpType"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsDstIpAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsMacAddress"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilationsPktCount"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingViolationsTrapCtrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSourceBindingTrapObjectsGroup = hpicfSourceBindingTrapObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSourceBindingTrapObjectsGroup.setDescription('A collection of objects used in the Dynamic IPv6 Lockdown notification.')
hpicfSourceBindingTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 1, 3)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPDv6SourceBindingOutOfResources"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfDIPLDv6SourceBindingVoilations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfSourceBindingTrapsGroup = hpicfSourceBindingTrapsGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfSourceBindingTrapsGroup.setDescription('A collection of trap objects for Dynamic IP Lockdown feature.')
hpicfIpv6LockCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2))
hpicfDIPLDv6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2, 1)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfIpv6LockBaseGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDIPLDv6Compliance = hpicfDIPLDv6Compliance.setStatus('current')
if mibBuilder.loadTexts: hpicfDIPLDv6Compliance.setDescription('The compliance statement for HP switches that support Dynamic IPv6 Lockdown.')
hpicfIpv6SourceBindingTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 103, 2, 2, 2)).setObjects(("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfSourceBindingTrapObjectsGroup"), ("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", "hpicfSourceBindingTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfIpv6SourceBindingTrapCompliance = hpicfIpv6SourceBindingTrapCompliance.setStatus('current')
if mibBuilder.loadTexts: hpicfIpv6SourceBindingTrapCompliance.setDescription('The compliance statement for HP switches that support Dynamic IP Lockdown Notify group .')
mibBuilder.exportSymbols("HP-ICF-IPv6-DYNAMIC-LOCKDOWN-MIB", hpicfIpv6Lockdown=hpicfIpv6Lockdown, hpicfDIPLDv6SourceBindingVoilationsDstIpType=hpicfDIPLDv6SourceBindingVoilationsDstIpType, hpicfDIPLDv6PortEnable=hpicfDIPLDv6PortEnable, hpicfSourceBindingTrapsGroup=hpicfSourceBindingTrapsGroup, hpicfDIPLDv6Compliance=hpicfDIPLDv6Compliance, hpicfDIPLDv6Objects=hpicfDIPLDv6Objects, hpicfDIPLDv6Config=hpicfDIPLDv6Config, hpicfDIPLDv6PortEntry=hpicfDIPLDv6PortEntry, hpicfDIPLDv6AddrEntry=hpicfDIPLDv6AddrEntry, hpicfDIPLDv6PortOperStatus=hpicfDIPLDv6PortOperStatus, hpicfDIPLDv6AddrVlan=hpicfDIPLDv6AddrVlan, hpicfDIPLDv6ResourceAvailable=hpicfDIPLDv6ResourceAvailable, hpicfDIPLDv6SourceBindingAddrIpAddress=hpicfDIPLDv6SourceBindingAddrIpAddress, hpicfDIPLDv6Status=hpicfDIPLDv6Status, hpicfDIPLDv6SourceBindingAddrMacAddress=hpicfDIPLDv6SourceBindingAddrMacAddress, hpicfDIPLDv6SourceBindingVoilations=hpicfDIPLDv6SourceBindingVoilations, hpicfDIPLDv6SourceBindingVoilationsPort=hpicfDIPLDv6SourceBindingVoilationsPort, hpicfIpv6SourceBindingTrapCompliance=hpicfIpv6SourceBindingTrapCompliance, hpicfIpv6LockCompliances=hpicfIpv6LockCompliances, hpicfDIPDv6SourceBindingOutOfResources=hpicfDIPDv6SourceBindingOutOfResources, hpicfIpv6LockGroups=hpicfIpv6LockGroups, hpicfDIPLDv6SourceBindingNotifications=hpicfDIPLDv6SourceBindingNotifications, hpicfSourceBindingTrapObjectsGroup=hpicfSourceBindingTrapObjectsGroup, hpicfDIPLDv6PortTable=hpicfDIPLDv6PortTable, hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl=hpicfDIPLDv6SourceBindingOutOfResourcesTrapCtrl, hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress=hpicfDIPLDv6SourceBindingVoilationsSrcIpAddress, hpicfDIPLDv6SourceBindingVoilationsPktCount=hpicfDIPLDv6SourceBindingVoilationsPktCount, hpicfDIPLDv6SourceBindingVoilationsSrcIpType=hpicfDIPLDv6SourceBindingVoilationsSrcIpType, hpicfDIPLDv6SourceBindingVoilationsMacAddress=hpicfDIPLDv6SourceBindingVoilationsMacAddress, hpicfDIPLDv6LockEnable=hpicfDIPLDv6LockEnable, hpicfDIPLDv6SourceBindingViolationsTrapCtrl=hpicfDIPLDv6SourceBindingViolationsTrapCtrl, PYSNMP_MODULE_ID=hpicfIpv6Lockdown, hpicfDIPLDv6SourceBindingAddrPort=hpicfDIPLDv6SourceBindingAddrPort, hpicfDIPLDv6SourceBindingAddrIpAddressType=hpicfDIPLDv6SourceBindingAddrIpAddressType, hpicfDIPLDv6SourceBindingVoilationsObjects=hpicfDIPLDv6SourceBindingVoilationsObjects, hpicfDIPLDv6AddrTable=hpicfDIPLDv6AddrTable, hpicfDIPLDv6SourceBindingVoilationsDstIpAddress=hpicfDIPLDv6SourceBindingVoilationsDstIpAddress, hpicfIpv6LockBaseGroup=hpicfIpv6LockBaseGroup, hpicfDIPLDv6SourceBindingVoilationsCount=hpicfDIPLDv6SourceBindingVoilationsCount, hpicfIpv6LockConformance=hpicfIpv6LockConformance, hpicfDIPLDv6SourceBindingAddrVlan=hpicfDIPLDv6SourceBindingAddrVlan, hpicfDIPLDv6SourceBindingOutOfResourcesObjects=hpicfDIPLDv6SourceBindingOutOfResourcesObjects)
