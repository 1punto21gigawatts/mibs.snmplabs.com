#
# PySNMP MIB module Double-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Double-VLAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:58:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, TimeTicks, Integer32, Gauge32, NotificationType, IpAddress, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "TimeTicks", "Integer32", "Gauge32", "NotificationType", "IpAddress", "Counter32", "MibIdentifier")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
swDoubleVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 28))
if mibBuilder.loadTexts: swDoubleVlanMIB.setLastUpdated('200601160000Z')
if mibBuilder.loadTexts: swDoubleVlanMIB.setOrganization('.')
if mibBuilder.loadTexts: swDoubleVlanMIB.setContactInfo('')
if mibBuilder.loadTexts: swDoubleVlanMIB.setDescription('.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swDoubleVlanCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 28, 1))
swDoubleVlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 28, 2))
swDoubleVlanMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 28, 3))
swDoubleVlanGlobalState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoubleVlanGlobalState.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanGlobalState.setDescription('This object enable\\disable the double vlan status of the device.')
swDoubleVlanCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1), )
if mibBuilder.loadTexts: swDoubleVlanCtrlTable.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanCtrlTable.setDescription('A table that contains mothod and state about every port.')
swDoubleVlanCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1), ).setIndexNames((0, "Double-VLAN-MIB", "swDoubleVlanSPVIDIndex"))
if mibBuilder.loadTexts: swDoubleVlanCtrlEntry.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanCtrlEntry.setDescription('A list of mothod type and state for each port.')
swDoubleVlanSPVIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDoubleVlanSPVIDIndex.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanSPVIDIndex.setDescription('This object indicates the VLAN ID, the range is 1-4094. The vlaue is read only.')
swDoubleVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDoubleVlanName.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanName.setDescription('This object indicates the name for the entry.')
swDoubleVlanTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDoubleVlanTPID.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanTPID.setDescription('This object indicates the tag protocol identifier format(TPID), the range is 0x0000-0xFFFF.')
swDoubleVlanUplinkPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoubleVlanUplinkPorts.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanUplinkPorts.setDescription('This object indicates the port list that are connected to the service provider VLANs(tag-port). Only gigabit ports can be chose.When the double vlan is disabled, the port list is NULL.')
swDoubleVlanAccessPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoubleVlanAccessPorts.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanAccessPorts.setDescription('This object indicates the port list that are connect to the customer VLANs(untag-port). All the switch ports can be chose.When the double vlan is disabled, the port list is NULL.')
swDoubleVlanUnknowPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swDoubleVlanUnknowPorts.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanUnknowPorts.setDescription('When the double vlan is disabled, this object indicates the port list that are connect to the provider or customer VLANs in 802.1q. When the double vlan is enabled, the port list is NULL.')
swDoubleVlanDeletePorts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 7), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swDoubleVlanDeletePorts.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanDeletePorts.setDescription('This object deletes the port list that are connect to the customer VLANs. When the double vlan is disabled, the port list is NULL.')
swDoubleVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 28, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swDoubleVlanStatus.setStatus('current')
if mibBuilder.loadTexts: swDoubleVlanStatus.setDescription('TThis object indicates the RowStatus of this entry.')
mibBuilder.exportSymbols("Double-VLAN-MIB", swDoubleVlanSPVIDIndex=swDoubleVlanSPVIDIndex, swDoubleVlanMgmt=swDoubleVlanMgmt, swDoubleVlanCtrl=swDoubleVlanCtrl, swDoubleVlanUnknowPorts=swDoubleVlanUnknowPorts, swDoubleVlanTPID=swDoubleVlanTPID, swDoubleVlanGlobalState=swDoubleVlanGlobalState, PYSNMP_MODULE_ID=swDoubleVlanMIB, swDoubleVlanCtrlEntry=swDoubleVlanCtrlEntry, PortList=PortList, swDoubleVlanDeletePorts=swDoubleVlanDeletePorts, swDoubleVlanStatus=swDoubleVlanStatus, swDoubleVlanAccessPorts=swDoubleVlanAccessPorts, swDoubleVlanInfo=swDoubleVlanInfo, swDoubleVlanUplinkPorts=swDoubleVlanUplinkPorts, swDoubleVlanMIB=swDoubleVlanMIB, swDoubleVlanCtrlTable=swDoubleVlanCtrlTable, swDoubleVlanName=swDoubleVlanName)
