#
# PySNMP MIB module CYAN-PEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-PEM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:34:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
CyanTypeTc, cyanEntityModules = mibBuilder.importSymbols("CYAN-MIB", "CyanTypeTc", "cyanEntityModules")
CyanOpStateTc, CyanOpStateQualTc, CyanAdminStateTc, CyanSecServiceStateTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanOpStateTc", "CyanOpStateQualTc", "CyanAdminStateTc", "CyanSecServiceStateTc")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibIdentifier, iso, Unsigned32, Counter32, NotificationType, ObjectIdentity, Integer32, IpAddress, Bits, Counter64, Gauge32, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Unsigned32", "Counter32", "NotificationType", "ObjectIdentity", "Integer32", "IpAddress", "Bits", "Counter64", "Gauge32", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyanPemModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30))
cyanPemModule.setRevisions(('2014-12-07 05:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: cyanPemModule.setRevisionsDescriptions(('Release 6.0 build 1416362081',))
if mibBuilder.loadTexts: cyanPemModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanPemModule.setOrganization('Cyan, Inc.')
if mibBuilder.loadTexts: cyanPemModule.setContactInfo(' E-mail: support@cyaninc.com Postal: Cyan, Inc. 1390 N. McDowell Blvd., # G-327 Petaluma, CA 94954 USA Tel: +1-707-735-2300')
if mibBuilder.loadTexts: cyanPemModule.setDescription('MIB module for Power Entry Module')
cyanPemMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1))
cyanPemTable = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1), )
if mibBuilder.loadTexts: cyanPemTable.setStatus('current')
if mibBuilder.loadTexts: cyanPemTable.setDescription('A list of Pem entries.')
cyanPemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1), ).setIndexNames((0, "CYAN-PEM-MIB", "cyanPemShelfId"), (0, "CYAN-PEM-MIB", "cyanPemPemId"))
if mibBuilder.loadTexts: cyanPemEntry.setStatus('current')
if mibBuilder.loadTexts: cyanPemEntry.setDescription('An entry of Pem.')
cyanPemShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanPemShelfId.setStatus('current')
if mibBuilder.loadTexts: cyanPemShelfId.setDescription('Shelf Id')
cyanPemPemId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanPemPemId.setStatus('current')
if mibBuilder.loadTexts: cyanPemPemId.setDescription('Power Entry Module Id')
cyanPemAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 3), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemAdminState.setStatus('current')
if mibBuilder.loadTexts: cyanPemAdminState.setDescription('Administrative state')
cyanPemAssetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemAssetTag.setStatus('current')
if mibBuilder.loadTexts: cyanPemAssetTag.setDescription('Asset Tag')
cyanPemAutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemAutoinserviceSoakTimeSec.setStatus('current')
if mibBuilder.loadTexts: cyanPemAutoinserviceSoakTimeSec.setDescription('Auto-In-Service soak time')
cyanPemBaseMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemBaseMacAddress.setStatus('current')
if mibBuilder.loadTexts: cyanPemBaseMacAddress.setDescription('Base MAC address of a range of addresses')
cyanPemDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemDescription.setStatus('current')
if mibBuilder.loadTexts: cyanPemDescription.setDescription('Description')
cyanPemIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemIdentifier.setStatus('current')
if mibBuilder.loadTexts: cyanPemIdentifier.setDescription('string OID')
cyanPemMacBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMacBlockSize.setStatus('current')
if mibBuilder.loadTexts: cyanPemMacBlockSize.setDescription('Number of MAC addresses allocated from the base MAC address')
cyanPemMfgCleiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgCleiCode.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgCleiCode.setDescription('Common Language Equipment Identifier')
cyanPemMfgEciCode = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgEciCode.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgEciCode.setDescription('Equipment Catalog Item')
cyanPemMfgModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgModuleId.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgModuleId.setDescription('Module ID')
cyanPemMfgPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgPartNumber.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgPartNumber.setDescription('Manufacturing part number')
cyanPemMfgRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgRevision.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgRevision.setDescription('Mfg revision number')
cyanPemMfgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemMfgSerialNumber.setStatus('current')
if mibBuilder.loadTexts: cyanPemMfgSerialNumber.setDescription('Mfg serial number')
cyanPemName = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemName.setStatus('current')
if mibBuilder.loadTexts: cyanPemName.setDescription('Cyan name')
cyanPemOidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemOidClass.setStatus('current')
if mibBuilder.loadTexts: cyanPemOidClass.setDescription('OID Class')
cyanPemOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 18), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemOperState.setStatus('current')
if mibBuilder.loadTexts: cyanPemOperState.setDescription('Primary Operation State')
cyanPemOperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 19), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemOperStateQual.setStatus('current')
if mibBuilder.loadTexts: cyanPemOperStateQual.setDescription('Operation state qualifier')
cyanPemOssLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemOssLabel.setStatus('current')
if mibBuilder.loadTexts: cyanPemOssLabel.setDescription('CyMS label')
cyanPemOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemOwner.setStatus('current')
if mibBuilder.loadTexts: cyanPemOwner.setDescription('Owner')
cyanPemPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemPartNumber.setStatus('current')
if mibBuilder.loadTexts: cyanPemPartNumber.setDescription('Cyan part number')
cyanPemSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 23), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemSecServState.setStatus('current')
if mibBuilder.loadTexts: cyanPemSecServState.setDescription('Secondary service state')
cyanPemType = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 1, 1, 1, 24), CyanTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanPemType.setStatus('current')
if mibBuilder.loadTexts: cyanPemType.setDescription('Equipment type')
cyanPemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 20)).setObjects(("CYAN-PEM-MIB", "cyanPemAdminState"), ("CYAN-PEM-MIB", "cyanPemAssetTag"), ("CYAN-PEM-MIB", "cyanPemAutoinserviceSoakTimeSec"), ("CYAN-PEM-MIB", "cyanPemBaseMacAddress"), ("CYAN-PEM-MIB", "cyanPemDescription"), ("CYAN-PEM-MIB", "cyanPemIdentifier"), ("CYAN-PEM-MIB", "cyanPemMacBlockSize"), ("CYAN-PEM-MIB", "cyanPemMfgCleiCode"), ("CYAN-PEM-MIB", "cyanPemMfgEciCode"), ("CYAN-PEM-MIB", "cyanPemMfgModuleId"), ("CYAN-PEM-MIB", "cyanPemMfgPartNumber"), ("CYAN-PEM-MIB", "cyanPemMfgRevision"), ("CYAN-PEM-MIB", "cyanPemMfgSerialNumber"), ("CYAN-PEM-MIB", "cyanPemName"), ("CYAN-PEM-MIB", "cyanPemOidClass"), ("CYAN-PEM-MIB", "cyanPemOperState"), ("CYAN-PEM-MIB", "cyanPemOperStateQual"), ("CYAN-PEM-MIB", "cyanPemOssLabel"), ("CYAN-PEM-MIB", "cyanPemOwner"), ("CYAN-PEM-MIB", "cyanPemPartNumber"), ("CYAN-PEM-MIB", "cyanPemSecServState"), ("CYAN-PEM-MIB", "cyanPemType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanPemObjectGroup = cyanPemObjectGroup.setStatus('current')
if mibBuilder.loadTexts: cyanPemObjectGroup.setDescription('Group of objects that comes with Pem module')
cyanPemCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 30, 30)).setObjects(("CYAN-PEM-MIB", "cyanPemObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanPemCompliance = cyanPemCompliance.setStatus('current')
if mibBuilder.loadTexts: cyanPemCompliance.setDescription('The basic info needed to be a cyan Pem')
mibBuilder.exportSymbols("CYAN-PEM-MIB", cyanPemAdminState=cyanPemAdminState, cyanPemOssLabel=cyanPemOssLabel, cyanPemEntry=cyanPemEntry, cyanPemSecServState=cyanPemSecServState, cyanPemType=cyanPemType, cyanPemMfgCleiCode=cyanPemMfgCleiCode, cyanPemName=cyanPemName, cyanPemAssetTag=cyanPemAssetTag, cyanPemDescription=cyanPemDescription, cyanPemMfgRevision=cyanPemMfgRevision, cyanPemMfgEciCode=cyanPemMfgEciCode, cyanPemAutoinserviceSoakTimeSec=cyanPemAutoinserviceSoakTimeSec, cyanPemOperStateQual=cyanPemOperStateQual, cyanPemPemId=cyanPemPemId, cyanPemMibObjects=cyanPemMibObjects, cyanPemShelfId=cyanPemShelfId, cyanPemOwner=cyanPemOwner, cyanPemObjectGroup=cyanPemObjectGroup, cyanPemModule=cyanPemModule, cyanPemPartNumber=cyanPemPartNumber, cyanPemBaseMacAddress=cyanPemBaseMacAddress, cyanPemOidClass=cyanPemOidClass, cyanPemOperState=cyanPemOperState, cyanPemMfgModuleId=cyanPemMfgModuleId, cyanPemIdentifier=cyanPemIdentifier, cyanPemCompliance=cyanPemCompliance, PYSNMP_MODULE_ID=cyanPemModule, cyanPemMfgSerialNumber=cyanPemMfgSerialNumber, cyanPemMfgPartNumber=cyanPemMfgPartNumber, cyanPemMacBlockSize=cyanPemMacBlockSize, cyanPemTable=cyanPemTable)
