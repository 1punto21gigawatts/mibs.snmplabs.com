#
# PySNMP MIB module Dlink-IMPB-ARP-INSP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dlink-IMPB-ARP-INSP
# Produced by pysmi-0.3.4 at Wed May  1 12:58:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
rnd, = mibBuilder.importSymbols("DLINK-3100-MIB", "rnd")
rlImpbArpInspection, = mibBuilder.importSymbols("Dlink-IMPB-FEATURES", "rlImpbArpInspection")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
VlanId, PortList = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId", "PortList")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, MibIdentifier, IpAddress, Counter64, Unsigned32, TimeTicks, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "IpAddress", "Counter64", "Unsigned32", "TimeTicks", "NotificationType", "Integer32")
RowStatus, MacAddress, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TruthValue", "TextualConvention", "DisplayString")
rlIMPBArpInspectionStationTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1), )
if mibBuilder.loadTexts: rlIMPBArpInspectionStationTable.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationTable.setDescription('IMPB ARP Inspection Station entry.')
rlIMPBArpInspectionStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1, 1), ).setIndexNames((0, "Dlink-IMPB-ARP-INSP", "rlIMPBArpInspectionStationIPAddress"))
if mibBuilder.loadTexts: rlIMPBArpInspectionStationEntry.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationEntry.setDescription('The row definition for this table.')
rlIMPBArpInspectionStationIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: rlIMPBArpInspectionStationIPAddress.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationIPAddress.setDescription('IMPB ARP Inspection Station IP address.')
rlIMPBArpInspectionStationMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIMPBArpInspectionStationMACAddress.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationMACAddress.setDescription('IMPB ARP Inspection Station mac address')
rlIMPBArpInspectionStationPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIMPBArpInspectionStationPortList.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationPortList.setDescription('IMPB ARP Inspection Station Port List. All ports in the list are in CHECKED state.')
rlIMPBArpInspectionStationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIMPBArpInspectionStationRowStatus.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionStationRowStatus.setDescription('Entry status. A valid status is CreateandGo, Active or Destroy.')
rlIMPBArpInspectionClearAction = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 94, 89, 89, 139, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlIMPBArpInspectionClearAction.setStatus('current')
if mibBuilder.loadTexts: rlIMPBArpInspectionClearAction.setDescription('The value is always false. Setting this variable to true causes erasing all entries in station table.')
mibBuilder.exportSymbols("Dlink-IMPB-ARP-INSP", rlIMPBArpInspectionStationEntry=rlIMPBArpInspectionStationEntry, rlIMPBArpInspectionStationTable=rlIMPBArpInspectionStationTable, rlIMPBArpInspectionStationPortList=rlIMPBArpInspectionStationPortList, rlIMPBArpInspectionClearAction=rlIMPBArpInspectionClearAction, rlIMPBArpInspectionStationMACAddress=rlIMPBArpInspectionStationMACAddress, rlIMPBArpInspectionStationRowStatus=rlIMPBArpInspectionStationRowStatus, rlIMPBArpInspectionStationIPAddress=rlIMPBArpInspectionStationIPAddress)
