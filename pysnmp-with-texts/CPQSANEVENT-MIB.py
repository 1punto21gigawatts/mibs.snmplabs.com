#
# PySNMP MIB module CPQSANEVENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CPQSANEVENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:27:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, enterprises, Counter32, ObjectIdentity, IpAddress, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Integer32, NotificationType, Gauge32, Unsigned32, NotificationType, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "enterprises", "Counter32", "ObjectIdentity", "IpAddress", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Integer32", "NotificationType", "Gauge32", "Unsigned32", "NotificationType", "iso", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
compaq = MibIdentifier((1, 3, 6, 1, 4, 1, 232))
cpqSanAppliance = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151))
sanEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151, 101))
sanEventObj = MibIdentifier((1, 3, 6, 1, 4, 1, 232, 151, 101, 100))
sanEventEventCode = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventEventCode.setStatus('mandatory')
if mibBuilder.loadTexts: sanEventEventCode.setDescription('Event code written to the SAN Appliance Event log. ')
sanEventIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventIPAddress.setStatus('mandatory')
if mibBuilder.loadTexts: sanEventIPAddress.setDescription('The HostName/IPAddress of the entity that generated the event. ')
sanEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSeverity.setStatus('mandatory')
if mibBuilder.loadTexts: sanEventSeverity.setDescription('The Severity of the Event. ')
sanEventCategory = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventCategory.setStatus('mandatory')
if mibBuilder.loadTexts: sanEventCategory.setDescription('The Category of the Event as determined by the originator of the event. ')
sanEventGroup = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventGroup.setStatus('optional')
if mibBuilder.loadTexts: sanEventGroup.setDescription('The group the subject of the event belongs to. ')
sanEventSourceType = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSourceType.setStatus('optional')
if mibBuilder.loadTexts: sanEventSourceType.setDescription('Device type of the subject of the event. ')
sanEventSourceSubtype = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventSourceSubtype.setStatus('optional')
if mibBuilder.loadTexts: sanEventSourceSubtype.setDescription('Device subtype of the subject of the event. ')
sanEventURL = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventURL.setStatus('optional')
if mibBuilder.loadTexts: sanEventURL.setDescription('A URL to use to learn more information about this event. It may be the SAN Appliance or an other application. ')
sanEventDesc = MibScalar((1, 3, 6, 1, 4, 1, 232, 151, 101, 100, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sanEventDesc.setStatus('optional')
if mibBuilder.loadTexts: sanEventDesc.setDescription('Event Description.')
sanEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 232, 151, 101) + (0,1)).setObjects(("CPQSANEVENT-MIB", "sanEventEventCode"), ("CPQSANEVENT-MIB", "sanEventIPAddress"), ("CPQSANEVENT-MIB", "sanEventSeverity"), ("CPQSANEVENT-MIB", "sanEventCategory"), ("CPQSANEVENT-MIB", "sanEventGroup"), ("CPQSANEVENT-MIB", "sanEventSourceType"), ("CPQSANEVENT-MIB", "sanEventSourceSubtype"), ("CPQSANEVENT-MIB", "sanEventURL"), ("CPQSANEVENT-MIB", "sanEventDesc"))
if mibBuilder.loadTexts: sanEventTrap.setDescription('This trap signals (using SNMP) an event has been published to the HP OpenView Storage Management Appliance.')
sanTestTrap = NotificationType((1, 3, 6, 1, 4, 1, 232, 151, 101) + (0,2)).setObjects(("CPQSANEVENT-MIB", "sanEventIPAddress"), ("CPQSANEVENT-MIB", "sanEventSeverity"), ("CPQSANEVENT-MIB", "sanEventSourceType"), ("CPQSANEVENT-MIB", "sanEventSourceSubtype"), ("CPQSANEVENT-MIB", "sanEventURL"))
if mibBuilder.loadTexts: sanTestTrap.setDescription('HP OpenView Storage Management Appliance has sent a test trap.')
mibBuilder.exportSymbols("CPQSANEVENT-MIB", sanEventObj=sanEventObj, sanEventTrap=sanEventTrap, sanTestTrap=sanTestTrap, cpqSanAppliance=cpqSanAppliance, sanEventCategory=sanEventCategory, sanEventEventCode=sanEventEventCode, sanEventDesc=sanEventDesc, sanEventSourceType=sanEventSourceType, sanEventIPAddress=sanEventIPAddress, sanEvent=sanEvent, sanEventSeverity=sanEventSeverity, sanEventSourceSubtype=sanEventSourceSubtype, compaq=compaq, sanEventURL=sanEventURL, sanEventGroup=sanEventGroup)
