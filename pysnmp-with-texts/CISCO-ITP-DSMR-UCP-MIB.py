#
# PySNMP MIB module CISCO-ITP-DSMR-UCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ITP-DSMR-UCP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:03:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
cgspInstNetwork, cgspEventSequenceNumber, cgspCLLICode = mibBuilder.importSymbols("CISCO-ITP-GSP-MIB", "cgspInstNetwork", "cgspEventSequenceNumber", "cgspCLLICode")
CmlrName, = mibBuilder.importSymbols("CISCO-ITP-MLR-MIB", "CmlrName")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, ObjectIdentity, TimeTicks, NotificationType, iso, Bits, MibIdentifier, Integer32, ModuleIdentity, Unsigned32, IpAddress, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "TimeTicks", "NotificationType", "iso", "Bits", "MibIdentifier", "Integer32", "ModuleIdentity", "Unsigned32", "IpAddress", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
ciscoItpDsmrUcpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 1302))
ciscoItpDsmrUcpMIB.setRevisions(('2005-05-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoItpDsmrUcpMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoItpDsmrUcpMIB.setLastUpdated('200505180000Z')
if mibBuilder.loadTexts: ciscoItpDsmrUcpMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoItpDsmrUcpMIB.setContactInfo(' Cisco Systems, Inc Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ss7@cisco.com')
if mibBuilder.loadTexts: ciscoItpDsmrUcpMIB.setDescription('The MIB for providing information about Distributed Short Message Routing delivery using Universal Computer Protocol. Acronyms and Terms: DSMR Distributed Short Message Routing SMPP Short Message Peer-to-Peer (protocol) SMD-PP Short Message Delivery Point to Point. SMS Short Message Service UCP Universal Computer Protocol. WRR Weighted Round Robin. A variation of the round robin algorithm that uses server weights to allow uneven distribution of traffic among a set of available servers. ********************************************')
ciscoItpDsmrUcpMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 0))
ciscoItpDsmrUcpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1))
ciscoItpDsmrUcpMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2))
class CdsmrUcpInactivityTimer(TextualConvention, Unsigned32):
    description = 'This textual convention defines the allowed values used to define Inactivity timer used by Short Message Peer-to-Peer session. The value of zero is reserved to indicate that an object has not been set to value and that the default value is to be used.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1000, 9000000), )
class CdsmrUcpResponseTimer(TextualConvention, Unsigned32):
    description = 'This textual convention defines the allowed values used to define response timer ,in milliseconds, used by Universal Computer Protocol. The value of zero is reserved to indicate that an object has not been set to value and that the default value is to be used.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1000, 10000), )
class CdsmrUcpSendWindow(TextualConvention, Unsigned32):
    description = 'This textual convention defines the allowed values used to define send window used by Short Message Peer-to-Peer session. The value of zero is reserved to indicate that an object has not been set to value and that the default value is to be used.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 100), )
class CdsmrUcpSessionInitTimer(TextualConvention, Unsigned32):
    description = 'This textual convention defines the allowed values used to define session initiation timer used to create Universal Computer Protocol. The value of zero is reserved to indicate that an object has not been set to value and that the default value is to be used.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(500, 120000), )
cdsmrUcpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 0))
cdsmrUcpSessionStateNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 0, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsmrUcpSessionStateNotifEnabled.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionStateNotifEnabled.setDescription("A control to enable or disable notifications as follows: 'true' Indicates that the ciscoItpDsmrUcpSessionState notification should be generated.. 'false' Indicates that ciscoItpDsmrUcpSessionState notification generation is disabled.")
cdsmrUcpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5), )
if mibBuilder.loadTexts: cdsmrUcpProfileTable.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileTable.setDescription('A table that is used to monitor specific information used to configure universal computer protocol profile. Entries are added to this table via cdsmrUcpProfileRowStatus in accordance with the RowStatus convention.')
cdsmrUcpProfileTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileName"))
if mibBuilder.loadTexts: cdsmrUcpProfileTableEntry.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileTableEntry.setDescription('Each entry defines parameter that can be used to default values for sessions.')
cdsmrUcpProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 1), CmlrName())
if mibBuilder.loadTexts: cdsmrUcpProfileName.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileName.setDescription('A name used to define a collection of parameters for short message peer-to-peer protocol.')
cdsmrUcpProfileInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 2), CdsmrUcpInactivityTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpProfileInactivityTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileInactivityTimer.setDescription('This object specifies the duration of the inactivity timer used by Universal Computer Protocol. It indicates the maximum time lapse allowed between transactions before destination is considered inactive. ')
cdsmrUcpProfileResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 3), CdsmrUcpResponseTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpProfileResponseTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileResponseTimer.setDescription('This object specifies the duration of the response timer used by Universal Computer Protocol. It indicates the amount of time to wait before retransmitting packet.')
cdsmrUcpProfileSendWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 7), CdsmrUcpSendWindow()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpProfileSendWindow.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileSendWindow.setDescription('This object specifies the Send Window size to be used by Universal Computer Protocol.')
cdsmrUcpProfileSessionInitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 8), CdsmrUcpSessionInitTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpProfileSessionInitTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileSessionInitTimer.setDescription('This object specifies the duration of the session initiation timer used to create Short Message Peer-to-Peer session. It specifies the maximum amount of time to wait for the session Bind to be received.')
cdsmrUcpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 5, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpProfileRowStatus.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpProfileRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cdsmrUcpProfileTable following the RowStatus textual convention.')
cdsmrUcpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6), )
if mibBuilder.loadTexts: cdsmrUcpSessionTable.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionTable.setDescription('A table that is used to collection information on universal computer protocol sessions. Entries are added to this table via cdsmrUcpSessionRowStatus in accordance with the RowStatus convention.')
cdsmrUcpSessionTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionLocalPortNumber"))
if mibBuilder.loadTexts: cdsmrUcpSessionTableEntry.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionTableEntry.setDescription('Each entry defines parameter and state information on universal computer protocol sessions.')
cdsmrUcpSessionLocalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1, 1), InetPortNumber())
if mibBuilder.loadTexts: cdsmrUcpSessionLocalPortNumber.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionLocalPortNumber.setDescription('Local port number used to establish Ucp Session.')
cdsmrUcpSessionLocalIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpSessionLocalIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionLocalIpAddrType.setDescription('This object contains the type of the local IP address used to create an session.')
cdsmrUcpSessionLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpSessionLocalIpAddress.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionLocalIpAddress.setDescription('This object contains the local IP address used to create the session with the partner of this session.')
cdsmrUcpSessionDynamicDest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpSessionDynamicDest.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionDynamicDest.setDescription("Indicates whether dynamic destinations are allowed as follows. 'true' - dynamic destination are allowed. 'false' - dynamic destinations are not allowed.")
cdsmrUcpSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpSessionRowStatus.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpSessionRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cdsmrUcpSessionTable following the RowStatus textual convention.')
cdsmrUcpDestTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7), )
if mibBuilder.loadTexts: cdsmrUcpDestTable.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestTable.setDescription('A table that is used to define a collection of information on used to universal computer protocol destinations. Entries are added to this table via cdsmrUcpDestRowStatus in accordance with the RowStatus convention.')
cdsmrUcpDestTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionLocalPortNumber"), (0, "CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestName"))
if mibBuilder.loadTexts: cdsmrUcpDestTableEntry.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestTableEntry.setDescription('Each entry defines parameter and state information on short message peer-to-peer protocol destinations.')
cdsmrUcpDestName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 1), CmlrName())
if mibBuilder.loadTexts: cdsmrUcpDestName.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestName.setDescription('A name used to uniquely identify a destination using short message peer-to-peer protocol.')
cdsmrUcpDestInactivityTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 2), CdsmrUcpInactivityTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestInactivityTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestInactivityTimer.setDescription('This object defines the allowed values used to define inactivity timer used by Universal Computer Protocol. Indicates the maximum time lapse allowed between transactions before destination is considered inactive.')
cdsmrUcpDestResponseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 3), CdsmrUcpResponseTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestResponseTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestResponseTimer.setDescription('This object specifies the duration of the response timer used by Universal Computer Protocol. It indicates the amount of time to wait before retransmitting packet.')
cdsmrUcpDestSendWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 4), CdsmrUcpSendWindow()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestSendWindow.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestSendWindow.setDescription('This object specifies the Send Window size to be used by Universal Computer Protocol.')
cdsmrUcpDestSessionInitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 5), CdsmrUcpSessionInitTimer()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestSessionInitTimer.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestSessionInitTimer.setDescription('This object specifies the duration of the session initiation timer used to create Short Message Peer-to-Peer session. It specifies the maximum amount of time to wait for the session Bind to be received.')
cdsmrUcpDestRemotePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestRemotePortNumber.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRemotePortNumber.setDescription('Remote port number used to establish short message peer-to-peer protocol session.')
cdsmrUcpDestRemoteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestRemoteIpAddrType.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRemoteIpAddrType.setDescription('This object contains the type of the remote IP address used to create an session.')
cdsmrUcpDestRemoteIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestRemoteIpAddress.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRemoteIpAddress.setDescription('This object contains the remote IP address used to create the session.')
cdsmrUcpDestProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 9), CmlrName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestProfileName.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestProfileName.setDescription('Specifies Profile from cdsmrUcpProfileTable table to define common default parameters for session.')
cdsmrUcpDestState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2), ("open", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmrUcpDestState.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestState.setDescription("Current state of destination. 'active' - Destination is available. 'inactive' - Destination is unvailable. 'open' - Device is listening on port for destination to establish connection.")
cdsmrUcpDestSentRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 11), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmrUcpDestSentRequests.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestSentRequests.setDescription('Number of SMS requests sent to destination.')
cdsmrUcpDestRcvdRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 12), Counter32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmrUcpDestRcvdRequests.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRcvdRequests.setDescription('Number of SMS requests received from destination.')
cdsmrUcpDestSentResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 13), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmrUcpDestSentResponses.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestSentResponses.setDescription('Number of SMS responses sent to destination.')
cdsmrUcpDestRcvdResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 14), Counter32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmrUcpDestRcvdResponses.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRcvdResponses.setDescription('Number of SMS responses received from destination.')
cdsmrUcpDestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 1302, 1, 7, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmrUcpDestRowStatus.setStatus('current')
if mibBuilder.loadTexts: cdsmrUcpDestRowStatus.setDescription('The object is used by a management station to create or delete the row entry in cdsmrUcpDestTable following the RowStatus textual convention.')
ciscoItpDsmrUcpSessionState = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 1302, 0, 1)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestState"))
if mibBuilder.loadTexts: ciscoItpDsmrUcpSessionState.setStatus('current')
if mibBuilder.loadTexts: ciscoItpDsmrUcpSessionState.setDescription('This notification is generated whenever SMPP destination changes state. This notification provides information on the availablity of the destination to receive and process packets using the UCP protocol.')
ciscoItpDsmrUcpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2, 1))
ciscoItpDsmrUcpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2, 2))
ciscoItpDsmrUcpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2, 1, 1)).setObjects(("CISCO-ITP-DSMR-UCP-MIB", "ciscoItpDsmrUcpGroup"), ("CISCO-ITP-DSMR-UCP-MIB", "ciscoItpDsmrUcpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpDsmrUcpMIBCompliance = ciscoItpDsmrUcpMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoItpDsmrUcpMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco CISCO-ITP-MLR-MIB')
ciscoItpDsmrUcpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2, 2, 1)).setObjects(("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionStateNotifEnabled"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileInactivityTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileResponseTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileSendWindow"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileSessionInitTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpProfileRowStatus"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionLocalIpAddrType"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionLocalIpAddress"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionDynamicDest"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpSessionRowStatus"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestInactivityTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestResponseTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestSendWindow"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestSessionInitTimer"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRemotePortNumber"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRemoteIpAddrType"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRemoteIpAddress"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestProfileName"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestState"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestSentRequests"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRcvdRequests"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestSentResponses"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRcvdResponses"), ("CISCO-ITP-DSMR-UCP-MIB", "cdsmrUcpDestRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpDsmrUcpGroup = ciscoItpDsmrUcpGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoItpDsmrUcpGroup.setDescription('A collection of objects providing information used to configure UCP profile and notifications.')
ciscoItpDsmrUcpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 1302, 2, 2, 2)).setObjects(("CISCO-ITP-DSMR-UCP-MIB", "ciscoItpDsmrUcpSessionState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoItpDsmrUcpNotificationsGroup = ciscoItpDsmrUcpNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoItpDsmrUcpNotificationsGroup.setDescription('DSMR Universal Computer Protocol notification objects.')
mibBuilder.exportSymbols("CISCO-ITP-DSMR-UCP-MIB", cdsmrUcpDestRemotePortNumber=cdsmrUcpDestRemotePortNumber, PYSNMP_MODULE_ID=ciscoItpDsmrUcpMIB, cdsmrUcpSessionStateNotifEnabled=cdsmrUcpSessionStateNotifEnabled, ciscoItpDsmrUcpMIB=ciscoItpDsmrUcpMIB, cdsmrUcpSessionLocalIpAddrType=cdsmrUcpSessionLocalIpAddrType, cdsmrUcpDestSentRequests=cdsmrUcpDestSentRequests, ciscoItpDsmrUcpMIBCompliance=ciscoItpDsmrUcpMIBCompliance, cdsmrUcpProfileTableEntry=cdsmrUcpProfileTableEntry, cdsmrUcpSessionTable=cdsmrUcpSessionTable, cdsmrUcpSessionDynamicDest=cdsmrUcpSessionDynamicDest, cdsmrUcpDestSendWindow=cdsmrUcpDestSendWindow, ciscoItpDsmrUcpMIBGroups=ciscoItpDsmrUcpMIBGroups, cdsmrUcpDestRemoteIpAddrType=cdsmrUcpDestRemoteIpAddrType, CdsmrUcpSendWindow=CdsmrUcpSendWindow, cdsmrUcpDestRemoteIpAddress=cdsmrUcpDestRemoteIpAddress, cdsmrUcpDestRcvdRequests=cdsmrUcpDestRcvdRequests, cdsmrUcpScalars=cdsmrUcpScalars, cdsmrUcpDestTableEntry=cdsmrUcpDestTableEntry, cdsmrUcpDestName=cdsmrUcpDestName, cdsmrUcpSessionTableEntry=cdsmrUcpSessionTableEntry, cdsmrUcpDestProfileName=cdsmrUcpDestProfileName, CdsmrUcpInactivityTimer=CdsmrUcpInactivityTimer, cdsmrUcpDestRowStatus=cdsmrUcpDestRowStatus, cdsmrUcpSessionLocalIpAddress=cdsmrUcpSessionLocalIpAddress, ciscoItpDsmrUcpGroup=ciscoItpDsmrUcpGroup, cdsmrUcpSessionLocalPortNumber=cdsmrUcpSessionLocalPortNumber, cdsmrUcpProfileTable=cdsmrUcpProfileTable, CdsmrUcpSessionInitTimer=CdsmrUcpSessionInitTimer, ciscoItpDsmrUcpNotificationsGroup=ciscoItpDsmrUcpNotificationsGroup, cdsmrUcpDestTable=cdsmrUcpDestTable, ciscoItpDsmrUcpMIBConform=ciscoItpDsmrUcpMIBConform, cdsmrUcpProfileResponseTimer=cdsmrUcpProfileResponseTimer, ciscoItpDsmrUcpMIBObjects=ciscoItpDsmrUcpMIBObjects, ciscoItpDsmrUcpMIBNotifs=ciscoItpDsmrUcpMIBNotifs, cdsmrUcpProfileSendWindow=cdsmrUcpProfileSendWindow, cdsmrUcpDestSessionInitTimer=cdsmrUcpDestSessionInitTimer, cdsmrUcpDestInactivityTimer=cdsmrUcpDestInactivityTimer, cdsmrUcpDestState=cdsmrUcpDestState, cdsmrUcpDestRcvdResponses=cdsmrUcpDestRcvdResponses, ciscoItpDsmrUcpMIBCompliances=ciscoItpDsmrUcpMIBCompliances, cdsmrUcpProfileInactivityTimer=cdsmrUcpProfileInactivityTimer, cdsmrUcpProfileSessionInitTimer=cdsmrUcpProfileSessionInitTimer, CdsmrUcpResponseTimer=CdsmrUcpResponseTimer, cdsmrUcpProfileName=cdsmrUcpProfileName, cdsmrUcpSessionRowStatus=cdsmrUcpSessionRowStatus, cdsmrUcpDestSentResponses=cdsmrUcpDestSentResponses, ciscoItpDsmrUcpSessionState=ciscoItpDsmrUcpSessionState, cdsmrUcpProfileRowStatus=cdsmrUcpProfileRowStatus, cdsmrUcpDestResponseTimer=cdsmrUcpDestResponseTimer)
