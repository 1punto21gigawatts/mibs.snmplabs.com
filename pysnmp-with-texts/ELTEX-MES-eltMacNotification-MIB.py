#
# PySNMP MIB module ELTEX-MES-eltMacNotification-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-eltMacNotification-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
VlanIndex, = mibBuilder.importSymbols("CISCO-VTP-MIB", "VlanIndex")
eltMesMng, = mibBuilder.importSymbols("ELTEX-MES", "eltMesMng")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, Counter32, MibIdentifier, iso, Counter64, ObjectIdentity, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "Counter32", "MibIdentifier", "iso", "Counter64", "ObjectIdentity", "Integer32", "ModuleIdentity")
TimeStamp, TruthValue, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "TextualConvention", "MacAddress", "DisplayString")
eltMesMacNotificationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7))
eltMesMacNotificationMIB.setRevisions(('2015-11-05 00:00', '2015-11-19 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eltMesMacNotificationMIB.setRevisionsDescriptions(('Initial version of this MIB module.', 'Deprecate all objects in this module.',))
if mibBuilder.loadTexts: eltMesMacNotificationMIB.setLastUpdated('201511190000Z')
if mibBuilder.loadTexts: eltMesMacNotificationMIB.setOrganization('Eltex Enterprise Co, Ltd.')
if mibBuilder.loadTexts: eltMesMacNotificationMIB.setContactInfo('www.eltex.nsk.ru')
if mibBuilder.loadTexts: eltMesMacNotificationMIB.setDescription('Configuration of MAC notification feature.')
eltMesMacNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1))
eltMesMnFlappingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1))
eltMnFlappingFeatureEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltMnFlappingFeatureEnabled.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingFeatureEnabled.setDescription('Specifies whether the MAC Flapping notification feature is currently running in the device. Setting this object to false(2) disables the MAC Flapping notification feature globally. Setting this object to true(1) will start the MAC Flapping notification feature running in the device.')
eltMnFlappingNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltMnFlappingNotificationsEnabled.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingNotificationsEnabled.setDescription('Specifies whether eltMnFlappingNotification notifications will or will not be sent when a MAC flapping is detected by the MAC flapping notification feature. Setting this object to false(2) will not send the eltMnFlappingNotification notifications. Setting this object to true(1) will send the eltMnFlappingNotification notifications.')
eltMnFlappingAddress = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltMnFlappingAddress.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingAddress.setDescription('Indicates the MAC address that is flapping between eltMnFlappingFirstPortId and eltMnFlappingSecondPortId on eltMnFlappingVlanNumber. This object is instantiated only when eltMnFlappingFeatureEnabled value is set to true(1) and a MAC flapping is detected by the MAC flapping notification feature.')
eltMnFlappingVlanNumber = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 4), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltMnFlappingVlanNumber.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingVlanNumber.setDescription('Indicates the VLAN on which the eltMnFlappingAddress is flapping between eltMnFlappingFirstPortId to eltMnFlappingSecondPortId. This object is instantiated only when eltMnFlappingFeatureEnabled value is set to true(1) and a MAC flapping is detected by the MAC flapping notification feature.')
eltMnFlappingFirstPortId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltMnFlappingFirstPortId.setReference('dot1dBasePort is defined in RFC1493.')
if mibBuilder.loadTexts: eltMnFlappingFirstPortId.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingFirstPortId.setDescription('The first value of dot1dBasePort for the bridge port on which the eltMnFlappingAddress is flapping on eltMnFlappingVlanNumber. This object is instantiated only when eltMnFlappingFeatureEnabled value is set to true(1) and a MAC flapping is detected by the MAC flapping notification feature.')
eltMnFlappingSecondPortId = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltMnFlappingSecondPortId.setReference('dot1dBasePort is defined in RFC1493.')
if mibBuilder.loadTexts: eltMnFlappingSecondPortId.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingSecondPortId.setDescription('The second value of dot1dBasePort for the bridge port on which the eltMnFlappingAddress is flapping on eltMnFlappingVlanNumber. This object is instantiated only when eltMnFlappingFeatureEnabled value is set to true(1) and a MAC flapping is detected by the MAC flapping notification feature.')
eltMnFlappingTime = MibScalar((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltMnFlappingTime.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingTime.setDescription('The value of sysUpTime when a eltMnFlappingAddress is flapping between eltMnFlappingFirstPortId and eltMnFlappingSecondPortId. This object is instantiated only when eltMnFlappingFeatureEnabled value is set to true(1) and a MAC flapping is detected by the MAC flapping notification feature.')
eltMesMnNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 2))
eltMesMnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 2, 0))
eltMnFlappingNotification = NotificationType((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 7, 2, 0, 1)).setObjects(("ELTEX-MES-eltMacNotification-MIB", "eltMnFlappingAddress"), ("ELTEX-MES-eltMacNotification-MIB", "eltMnFlappingVlanNumber"), ("ELTEX-MES-eltMacNotification-MIB", "eltMnFlappingFirstPortId"), ("ELTEX-MES-eltMacNotification-MIB", "eltMnFlappingSecondPortId"), ("ELTEX-MES-eltMacNotification-MIB", "eltMnFlappingTime"))
if mibBuilder.loadTexts: eltMnFlappingNotification.setStatus('deprecated')
if mibBuilder.loadTexts: eltMnFlappingNotification.setDescription('This notification is generated when a MAC address is flapping between two or more interfaces.')
mibBuilder.exportSymbols("ELTEX-MES-eltMacNotification-MIB", eltMnFlappingSecondPortId=eltMnFlappingSecondPortId, eltMnFlappingFirstPortId=eltMnFlappingFirstPortId, eltMnFlappingTime=eltMnFlappingTime, eltMesMacNotificationMIB=eltMesMacNotificationMIB, eltMesMacNotificationObjects=eltMesMacNotificationObjects, eltMnFlappingNotificationsEnabled=eltMnFlappingNotificationsEnabled, eltMnFlappingNotification=eltMnFlappingNotification, eltMnFlappingFeatureEnabled=eltMnFlappingFeatureEnabled, eltMesMnNotificationPrefix=eltMesMnNotificationPrefix, eltMesMnNotifications=eltMesMnNotifications, eltMesMnFlappingObjects=eltMesMnFlappingObjects, eltMnFlappingAddress=eltMnFlappingAddress, eltMnFlappingVlanNumber=eltMnFlappingVlanNumber, PYSNMP_MODULE_ID=eltMesMacNotificationMIB)
