#
# PySNMP MIB module WWP-LEOS-TABLE-CHG-NOTIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-TABLE-CHG-NOTIF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:38:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Integer32, ModuleIdentity, NotificationType, iso, Bits, Gauge32, Counter32, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Integer32", "ModuleIdentity", "NotificationType", "iso", "Bits", "Gauge32", "Counter32", "TimeTicks", "IpAddress")
RowStatus, TruthValue, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "MacAddress", "DisplayString", "TextualConvention")
wwpModulesLeos, wwpModules = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos", "wwpModules")
wwpLeosTableChgNotifMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9))
wwpLeosTableChgNotifMIB.setRevisions(('2002-03-12 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setRevisionsDescriptions(('Initial creation.',))
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setLastUpdated('200203120000Z')
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setDescription('This MIB module is used to maintain the table of (Table, Ems IP)')
wwpLeosTableChgNotifMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1))
wwpLeosTableChgNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7))
wwpLeosTableChgNotifMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2))
wwpLeosTableChgNotifMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0))
wwpLeosTableChgNotifMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3))
wwpLeosTableChgNotifMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3, 1))
wwpLeosTableChgNotifMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3, 2))
wwpLeosTableTrapNotifTimer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTableTrapNotifTimer.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableTrapNotifTimer.setDescription('Setting this value will set the trap timer. Device will send the trap notification after every wwpLeosTableTrapNotifTimer seconds if any of the table changes.')
wwpLeosListenerRefreshTimer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosListenerRefreshTimer.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerRefreshTimer.setDescription("Setting this value will set the listener refresh timer. Device will send the trap notification 'wwpLeosTableRefreshTrap' after every 'wwpLeosListenerRefreshTimer' seconds if count value associated with 'wwpLeosListenerEntry' becomes 20 or 10 or 5. Device will delete entry from wwpLeosListenerEntry once count = 0. Minimum value is 30 sec and maximum = 1000 seconds.")
wwpLeosTableChgNotifTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4), )
if mibBuilder.loadTexts: wwpLeosTableChgNotifTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifTable.setDescription('Table of Ems.')
wwpLeosTableChgNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifIndex"))
if mibBuilder.loadTexts: wwpLeosTableChgNotifEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifEntry.setDescription('Ems Entry in the ems Port Table.')
wwpLeosTableChgNotifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndex.setDescription('This is the index used for this table.')
wwpLeosTableChgNotifOid = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifOid.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifOid.setDescription('This is the OID of the table for which device will send trap if anything changed in this table.')
wwpLeosTableChgNotifNumChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifNumChanges.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifNumChanges.setDescription('This variables returns the counter value which keeps track of how many times wwpLeosTableChgNotifOid has changed. This counter is 32 bit counter and will never reset, except if device is rebooted.')
wwpLeosListenerTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5), )
if mibBuilder.loadTexts: wwpLeosListenerTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerTable.setDescription("Table of EMS/NMS Ip's. This table uses Multiple Set operation to create entry in the table.")
wwpLeosListenerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosListenerIndex"))
if mibBuilder.loadTexts: wwpLeosListenerEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerEntry.setDescription('Entry of each EMS/NMS who is interested to receive table change notification.')
wwpLeosListenerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerIndex.setDescription('Specifies the unique index in the wwpLeosListenerTable.')
wwpLeosListenerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosListenerAddr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerAddr.setDescription('This is the host name or ip address of the EMS/NMS.')
wwpLeosListenerResolvedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerResolvedIp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerResolvedIp.setDescription('This shows the resolved IP address of the host name specified in wwpLeosListenerAddr. If wwpLeosListenerAddr is set to IpV4 type then wwpLeosListenerResolvedIp is equal to wwpLeosListenerAddr. If wwpLeosListenerAddr is set to dns type then wwpLeosListenerResolvedIp is equal to 0 if it is unresolved or is equal to resolved IP address.')
wwpLeosListenerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosListenerStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerStatus.setDescription("Used to manage the creation and deletion of the conceptual rows in this table. To create a row in this table, a manager must set this object to 'createAndGo'. Setting this object to 'active' if it is already active will result in refreshing this entry. Setting this object to 'create and go' if this entry is already active will result in refreshing this entry. This table uses Multiple Set operation to create entry in the table. wwpLeosListenerAddr and wwpLeosListenerStatus and index are mandatory objects that need to be set when creating entry. While deleting entry ony index needs to be specified. ")
wwpLeosTableChgNotifIndexStr = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndexStr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndexStr.setDescription("This variable contains the string of indexes that changed corresponding to table wwpLeosTableChgNotifOid. This variable is sent in the trap 'wwpLeosTableChgTrap'.")
wwpLeosListenerRefreshCount = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerRefreshCount.setStatus('current')
if mibBuilder.loadTexts: wwpLeosListenerRefreshCount.setDescription('This is the count value for each listener entry. when this count value becomes zero, the listener entry corresponding to this value will be deleted. This count value is sent in the trap.')
wwpLeosTableChgTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0, 1)).setObjects(("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifOid"), ("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifNumChanges"), ("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifIndexStr"))
if mibBuilder.loadTexts: wwpLeosTableChgTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableChgTrap.setDescription('A notification is sent whenever the table has changed. OID of the table and the counter associated with this table is sent in the trap.')
wwpLeosTableRefreshTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0, 2)).setObjects(("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosListenerRefreshCount"))
if mibBuilder.loadTexts: wwpLeosTableRefreshTrap.setStatus('current')
if mibBuilder.loadTexts: wwpLeosTableRefreshTrap.setDescription('A notification is sent whenever the listener table entry needs to be refreshed.')
mibBuilder.exportSymbols("WWP-LEOS-TABLE-CHG-NOTIF-MIB", wwpLeosTableChgNotifTable=wwpLeosTableChgNotifTable, wwpLeosTableChgNotifMIBObjects=wwpLeosTableChgNotifMIBObjects, wwpLeosTableChgNotifEntry=wwpLeosTableChgNotifEntry, wwpLeosTableRefreshTrap=wwpLeosTableRefreshTrap, wwpLeosTableChgNotif=wwpLeosTableChgNotif, wwpLeosTableChgNotifMIBNotificationPrefix=wwpLeosTableChgNotifMIBNotificationPrefix, wwpLeosTableChgNotifMIB=wwpLeosTableChgNotifMIB, wwpLeosListenerResolvedIp=wwpLeosListenerResolvedIp, wwpLeosTableChgNotifMIBGroups=wwpLeosTableChgNotifMIBGroups, wwpLeosTableChgNotifMIBConformance=wwpLeosTableChgNotifMIBConformance, wwpLeosTableChgNotifOid=wwpLeosTableChgNotifOid, wwpLeosTableChgNotifMIBCompliances=wwpLeosTableChgNotifMIBCompliances, wwpLeosTableTrapNotifTimer=wwpLeosTableTrapNotifTimer, wwpLeosListenerAddr=wwpLeosListenerAddr, wwpLeosTableChgNotifIndexStr=wwpLeosTableChgNotifIndexStr, wwpLeosListenerRefreshTimer=wwpLeosListenerRefreshTimer, wwpLeosTableChgNotifNumChanges=wwpLeosTableChgNotifNumChanges, wwpLeosListenerRefreshCount=wwpLeosListenerRefreshCount, wwpLeosTableChgTrap=wwpLeosTableChgTrap, wwpLeosListenerTable=wwpLeosListenerTable, wwpLeosListenerIndex=wwpLeosListenerIndex, wwpLeosTableChgNotifIndex=wwpLeosTableChgNotifIndex, wwpLeosListenerEntry=wwpLeosListenerEntry, wwpLeosListenerStatus=wwpLeosListenerStatus, PYSNMP_MODULE_ID=wwpLeosTableChgNotifMIB, wwpLeosTableChgNotifMIBNotifications=wwpLeosTableChgNotifMIBNotifications)
