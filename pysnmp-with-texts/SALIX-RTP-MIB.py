#
# PySNMP MIB module SALIX-RTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SALIX-RTP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
platform1, = mibBuilder.importSymbols("SALIX-MIB", "platform1")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Gauge32, IpAddress, Counter32, Counter64, iso, MibIdentifier, ModuleIdentity, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "IpAddress", "Counter32", "Counter64", "iso", "MibIdentifier", "ModuleIdentity", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
salixRtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1))
if mibBuilder.loadTexts: salixRtpMIB.setLastUpdated('9810130000Z')
if mibBuilder.loadTexts: salixRtpMIB.setOrganization('SALIX Technologies')
if mibBuilder.loadTexts: salixRtpMIB.setContactInfo('904 Wind River Lane Suite 101 Gaithersburg, MD 20878 (301)-417-0017')
if mibBuilder.loadTexts: salixRtpMIB.setDescription('The SALIX-RTP-MIB containts objects for describing RTP Sessions.')
salixRtpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1))
salixRtpMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 2))
salixRtpMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 3))
salixRtpMIBTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 2, 0))
salixRtpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1), )
if mibBuilder.loadTexts: salixRtpStatsTable.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsTable.setDescription('Table to hold statistics on RTP sessions. For each active RTP Session, there will be one entry in the table. NOTE: Retrieval of RTP statistics is an expensive operation. Please use with care.')
salixRtpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1), ).setIndexNames((0, "SALIX-RTP-MIB", "salixRtpStatsSrcIpAddress"), (0, "SALIX-RTP-MIB", "salixRtpStatsSrcPort"), (0, "SALIX-RTP-MIB", "salixRtpStatsDestIpAddress"), (0, "SALIX-RTP-MIB", "salixRtpStatsDestPort"))
if mibBuilder.loadTexts: salixRtpStatsEntry.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsEntry.setDescription('This entry lists statistics on a given RTP session. The session is uniqely identified by the source Ip Address and port, along with the destination Ip Address and UDP Port.')
salixRtpStatsSrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: salixRtpStatsSrcIpAddress.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSrcIpAddress.setDescription('The Ip Address for the source side of the RTP session. Along with the source UDP Port, these objects identify the RTP session on the source side. Complete identification of the RTP session also requires a unique identification on the destination side')
salixRtpStatsSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: salixRtpStatsSrcPort.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSrcPort.setDescription('The UDP Port for the source side of the RTP session. Along with the source Ip Address, these objects identify the RTP session on the source side. Complete identification of the RTP session also requires a unique identification on the destination side')
salixRtpStatsDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 3), IpAddress())
if mibBuilder.loadTexts: salixRtpStatsDestIpAddress.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsDestIpAddress.setDescription('The Ip Address for the destination side of the RTP session. Along with the destination UDP Port, these objects identify the RTP session on the destination side. Complete identification of the RTP session also requires a unique identification on the source side')
salixRtpStatsDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: salixRtpStatsDestPort.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsDestPort.setDescription('The UDP Port for the destination side of the RTP session. Along with the destination Ip Address, these objects identify the RTP session on the destination side. Complete identification of the RTP session also requires a unique identification on the source side')
salixRtpStatsPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsPktsSent.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsPktsSent.setDescription('The total number of RTP packets sent during the specified session')
salixRtpStatsPktsRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsPktsRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsPktsRecv.setDescription('The total number of RTP packets recieved during the specified session')
salixRtpStatsPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsPktsDropped.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsPktsDropped.setDescription('The total number of RTP packets dropped during the specified session')
salixRtpStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsBytesSent.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsBytesSent.setDescription('The total number of bytes sent during the specified session')
salixRtpStatsBytesRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsBytesRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsBytesRecv.setDescription('The total number of bytes received during the specified session')
salixRtpStatsBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsBytesDropped.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsBytesDropped.setDescription('The total number of bytes dropped during the specified session')
salixRtpStatsSignalPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsSignalPktsSent.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSignalPktsSent.setDescription('The number of signalling packets sent for the RTP session')
salixRtpStatsSignalPktsRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsSignalPktsRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSignalPktsRecv.setDescription('The number of signalling packets received for the RTP session')
salixRtpStatsSignalPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsSignalPktsDropped.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSignalPktsDropped.setDescription('The number of signalling packets dropped for the RTP session')
salixRtpStatsSignalBytesRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsSignalBytesRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsSignalBytesRecv.setDescription('The number of signalling bytes received for the RTP session')
salixRtpStatsAudioPktsRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsAudioPktsRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsAudioPktsRecv.setDescription('The number of audio packets received for the specified RTP session')
salixRtpStatsAudioBytesRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsAudioBytesRecv.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsAudioBytesRecv.setDescription('The number of audio bytes received for the specified RTP session')
salixRtpStatsEstimatedAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: salixRtpStatsEstimatedAvgLatency.setStatus('current')
if mibBuilder.loadTexts: salixRtpStatsEstimatedAvgLatency.setDescription('The Estimated Average Latency for the RTP session')
salixRtpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 3, 1))
salixRtpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 3, 2))
salixRtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 3, 1, 3)).setObjects(("SALIX-RTP-MIB", "salixRtpStatsPktsSent"), ("SALIX-RTP-MIB", "salixRtpStatsPktsRecv"), ("SALIX-RTP-MIB", "salixRtpStatsPktsDropped"), ("SALIX-RTP-MIB", "salixRtpStatsBytesSent"), ("SALIX-RTP-MIB", "salixRtpStatsBytesRecv"), ("SALIX-RTP-MIB", "salixRtpStatsBytesDropped"), ("SALIX-RTP-MIB", "salixRtpStatsSignalPktsSent"), ("SALIX-RTP-MIB", "salixRtpStatsSignalPktsRecv"), ("SALIX-RTP-MIB", "salixRtpStatsSignalPktsDropped"), ("SALIX-RTP-MIB", "salixRtpStatsSignalBytesRecv"), ("SALIX-RTP-MIB", "salixRtpStatsAudioPktsRecv"), ("SALIX-RTP-MIB", "salixRtpStatsAudioBytesRecv"), ("SALIX-RTP-MIB", "salixRtpStatsEstimatedAvgLatency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixRtpGroup = salixRtpGroup.setStatus('current')
if mibBuilder.loadTexts: salixRtpGroup.setDescription('Stats Statistics for Rtp Sessions')
salixRtpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2158, 5, 1, 1, 3, 2, 1)).setObjects(("SALIX-RTP-MIB", "salixRtpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    salixRtpCompliance = salixRtpCompliance.setStatus('current')
if mibBuilder.loadTexts: salixRtpCompliance.setDescription('The basic implementation requirements for the SALIX-RTP-MIB.')
mibBuilder.exportSymbols("SALIX-RTP-MIB", salixRtpStatsPktsRecv=salixRtpStatsPktsRecv, PYSNMP_MODULE_ID=salixRtpMIB, salixRtpCompliances=salixRtpCompliances, salixRtpStatsBytesSent=salixRtpStatsBytesSent, salixRtpStatsDestIpAddress=salixRtpStatsDestIpAddress, salixRtpStatsSignalPktsDropped=salixRtpStatsSignalPktsDropped, salixRtpStatsBytesDropped=salixRtpStatsBytesDropped, salixRtpGroup=salixRtpGroup, salixRtpStatsBytesRecv=salixRtpStatsBytesRecv, salixRtpStatsPktsDropped=salixRtpStatsPktsDropped, salixRtpMIBObjects=salixRtpMIBObjects, salixRtpStatsTable=salixRtpStatsTable, salixRtpStatsDestPort=salixRtpStatsDestPort, salixRtpStatsSignalPktsRecv=salixRtpStatsSignalPktsRecv, salixRtpMIB=salixRtpMIB, salixRtpMIBTraps=salixRtpMIBTraps, salixRtpStatsAudioPktsRecv=salixRtpStatsAudioPktsRecv, salixRtpStatsEstimatedAvgLatency=salixRtpStatsEstimatedAvgLatency, salixRtpStatsSrcIpAddress=salixRtpStatsSrcIpAddress, salixRtpCompliance=salixRtpCompliance, salixRtpStatsSrcPort=salixRtpStatsSrcPort, salixRtpStatsSignalPktsSent=salixRtpStatsSignalPktsSent, salixRtpMIBCompliance=salixRtpMIBCompliance, salixRtpMIBTrapPrefix=salixRtpMIBTrapPrefix, salixRtpStatsPktsSent=salixRtpStatsPktsSent, salixRtpStatsEntry=salixRtpStatsEntry, salixRtpStatsAudioBytesRecv=salixRtpStatsAudioBytesRecv, salixRtpStatsSignalBytesRecv=salixRtpStatsSignalBytesRecv, salixRtpGroups=salixRtpGroups)
