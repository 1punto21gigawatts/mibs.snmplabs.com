#
# PySNMP MIB module PACKETLOGIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PACKETLOGIC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:36:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, MibIdentifier, Unsigned32, iso, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, NotificationType, Integer32, enterprises, ObjectIdentity, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "MibIdentifier", "Unsigned32", "iso", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "NotificationType", "Integer32", "enterprises", "ObjectIdentity", "IpAddress", "Bits")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
procera = ModuleIdentity((1, 3, 6, 1, 4, 1, 15397))
procera.setRevisions(('2012-09-26 12:48',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: procera.setRevisionsDescriptions((' Latest version at the revision date for version GET VERSION HERE',))
if mibBuilder.loadTexts: procera.setLastUpdated('201209261248Z')
if mibBuilder.loadTexts: procera.setOrganization('Procera Networks, Inc.')
if mibBuilder.loadTexts: procera.setContactInfo('support@proceranetworks.com')
if mibBuilder.loadTexts: procera.setDescription('MIB for PacketLogic2')
packetlogic2 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2))
psm = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 3))
pbs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 4))
sysdiag = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1))
channelstats = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 2))
pl2Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 8))
snoopers = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 10))
dynamiczones = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 20))
packetprocessing = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8))
packetprocessingRx = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 1))
packetprocessingRxVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxVal.setDescription('RX packets')
packetprocessingRxMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxMom.setDescription('RX packets')
packetprocessingRxMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxMax.setDescription('RX packets')
packetprocessingRxDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 2))
packetprocessingRxDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxDropsVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxDropsVal.setDescription('RX drops')
packetprocessingRxDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxDropsMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxDropsMom.setDescription('RX drops')
packetprocessingRxDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingRxDropsMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingRxDropsMax.setDescription('RX drops')
packetprocessingTx = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 6))
packetprocessingTxVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxVal.setDescription('TX packets')
packetprocessingTxMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxMom.setDescription('TX packets')
packetprocessingTxMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxMax.setDescription('TX packets')
packetprocessingTxDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 7))
packetprocessingTxDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxDropsVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxDropsVal.setDescription('TX drops')
packetprocessingTxDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxDropsMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxDropsMom.setDescription('TX drops')
packetprocessingTxDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingTxDropsMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingTxDropsMax.setDescription('TX drops')
packetprocessingPacketPoolSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 10))
packetprocessingPacketPoolSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPacketPoolSizeVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingPacketPoolSizeVal.setDescription('Packets left in pool')
packetprocessingPacketPoolSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPacketPoolSizeMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingPacketPoolSizeMax.setDescription('Packets left in pool')
packetprocessingDmaAllocs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 13))
packetprocessingDmaAllocsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 13, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingDmaAllocsVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingDmaAllocsVal.setDescription('DMA-allocated packets')
packetprocessingDmaAllocsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingDmaAllocsMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingDmaAllocsMax.setDescription('DMA-allocated packets')
packetprocessingOverLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 27))
packetprocessingOverLoadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingOverLoadVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingOverLoadVal.setDescription('Overload mode')
packetprocessingOverLoadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingOverLoadMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingOverLoadMax.setDescription('Overload mode')
packetprocessingLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 15))
packetprocessingLoadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 15, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingLoadVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingLoadVal.setDescription('CPU Load')
packetprocessingLoadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 15, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingLoadMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingLoadMax.setDescription('CPU Load')
packetprocessingUptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 17))
packetprocessingUptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 17, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingUptimeVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingUptimeVal.setDescription('CPU uptime')
packetprocessingHeapfree = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 16))
packetprocessingHeapfreeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingHeapfreeVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingHeapfreeVal.setDescription('Free memory')
packetprocessingHeapfreeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingHeapfreeMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingHeapfreeMax.setDescription('Free memory')
packetprocessingPushbackQueueFull = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 18))
packetprocessingPushbackQueueFullVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullVal.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullVal.setDescription('Push back queue full')
packetprocessingPushbackQueueFullMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullMom.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullMom.setDescription('Push back queue full')
packetprocessingPushbackQueueFullMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullMax.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackQueueFullMax.setDescription('Push back queue full')
packetprocessingPushbackPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 19))
packetprocessingPushbackPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackPacketsVal.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackPacketsVal.setDescription('Push back packets')
packetprocessingPushbackPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackPacketsMom.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackPacketsMom.setDescription('Push back packets')
packetprocessingPushbackPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackPacketsMax.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackPacketsMax.setDescription('Push back packets')
packetprocessingPushbackQueueSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 20))
packetprocessingPushbackQueueSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 20, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackQueueSizeVal.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackQueueSizeVal.setDescription('Push back queue size')
packetprocessingPushbackQueueSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackQueueSizeMax.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackQueueSizeMax.setDescription('Push back queue size')
packetprocessingPushbackRequeues = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 21))
packetprocessingPushbackRequeuesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesVal.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesVal.setDescription('Push back requeues')
packetprocessingPushbackRequeuesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesMom.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesMom.setDescription('Push back requeues')
packetprocessingPushbackRequeuesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesMax.setStatus('obsolete')
if mibBuilder.loadTexts: packetprocessingPushbackRequeuesMax.setDescription('Push back requeues')
packetprocessingBalancerDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 22))
packetprocessingBalancerDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 22, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingBalancerDropsVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingBalancerDropsVal.setDescription('Load balancer drops')
packetprocessingBalancerDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 22, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingBalancerDropsMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingBalancerDropsMom.setDescription('Load balancer drops')
packetprocessingBalancerDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingBalancerDropsMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingBalancerDropsMax.setDescription('Load balancer drops')
packetprocessingNICRXDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 23))
packetprocessingNICRXDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingNICRXDropsVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingNICRXDropsVal.setDescription('NIC RX drops')
packetprocessingNICRXDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingNICRXDropsMom.setStatus('current')
if mibBuilder.loadTexts: packetprocessingNICRXDropsMom.setDescription('NIC RX drops')
packetprocessingNICRXDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingNICRXDropsMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingNICRXDropsMax.setDescription('NIC RX drops')
packetprocessingBalancerQueueLength = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 24))
packetprocessingBalancerQueueLengthVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 24, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingBalancerQueueLengthVal.setStatus('current')
if mibBuilder.loadTexts: packetprocessingBalancerQueueLengthVal.setDescription('Load balancer queue length')
packetprocessingBalancerQueueLengthMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 8, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetprocessingBalancerQueueLengthMax.setStatus('current')
if mibBuilder.loadTexts: packetprocessingBalancerQueueLengthMax.setDescription('Load balancer queue length')
drdl = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24))
drdlWaitingChildren = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 1))
drdlWaitingChildrenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlWaitingChildrenVal.setStatus('current')
if mibBuilder.loadTexts: drdlWaitingChildrenVal.setDescription('Waiting childconnections')
drdlWaitingChildrenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlWaitingChildrenMax.setStatus('current')
if mibBuilder.loadTexts: drdlWaitingChildrenMax.setDescription('Waiting childconnections')
drdlAddedChildren = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 2))
drdlAddedChildrenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAddedChildrenVal.setStatus('current')
if mibBuilder.loadTexts: drdlAddedChildrenVal.setDescription('New childconnections')
drdlAddedChildrenMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAddedChildrenMom.setStatus('current')
if mibBuilder.loadTexts: drdlAddedChildrenMom.setDescription('New childconnections')
drdlAddedChildrenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAddedChildrenMax.setStatus('current')
if mibBuilder.loadTexts: drdlAddedChildrenMax.setDescription('New childconnections')
drdlChildAbuses = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 3))
drdlChildAbusesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildAbusesVal.setStatus('current')
if mibBuilder.loadTexts: drdlChildAbusesVal.setDescription('LRU child allocations')
drdlChildAbusesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildAbusesMom.setStatus('current')
if mibBuilder.loadTexts: drdlChildAbusesMom.setDescription('LRU child allocations')
drdlChildAbusesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildAbusesMax.setStatus('current')
if mibBuilder.loadTexts: drdlChildAbusesMax.setDescription('LRU child allocations')
drdlChildEmpty = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 4))
drdlChildEmptyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildEmptyVal.setStatus('current')
if mibBuilder.loadTexts: drdlChildEmptyVal.setDescription('Child allocation failures')
drdlChildEmptyMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildEmptyMom.setStatus('current')
if mibBuilder.loadTexts: drdlChildEmptyMom.setDescription('Child allocation failures')
drdlChildEmptyMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildEmptyMax.setStatus('current')
if mibBuilder.loadTexts: drdlChildEmptyMax.setDescription('Child allocation failures')
drdlProp32Fail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 5))
drdlProp32FailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp32FailVal.setStatus('current')
if mibBuilder.loadTexts: drdlProp32FailVal.setDescription('Property allocation failures (32)')
drdlProp32FailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp32FailMom.setStatus('current')
if mibBuilder.loadTexts: drdlProp32FailMom.setDescription('Property allocation failures (32)')
drdlProp32FailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp32FailMax.setStatus('current')
if mibBuilder.loadTexts: drdlProp32FailMax.setDescription('Property allocation failures (32)')
drdlProp64Fail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 6))
drdlProp64FailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64FailVal.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64FailVal.setDescription('Unused')
drdlProp64FailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64FailMom.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64FailMom.setDescription('Unused')
drdlProp64FailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64FailMax.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64FailMax.setDescription('Unused')
drdlProp256Fail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 7))
drdlProp256FailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp256FailVal.setStatus('current')
if mibBuilder.loadTexts: drdlProp256FailVal.setDescription('Property allocation failures (256)')
drdlProp256FailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp256FailMom.setStatus('current')
if mibBuilder.loadTexts: drdlProp256FailMom.setDescription('Property allocation failures (256)')
drdlProp256FailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp256FailMax.setStatus('current')
if mibBuilder.loadTexts: drdlProp256FailMax.setDescription('Property allocation failures (256)')
drdlProp32Used = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 8))
drdlProp32UsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp32UsedVal.setStatus('current')
if mibBuilder.loadTexts: drdlProp32UsedVal.setDescription('Properties used (32)')
drdlProp32UsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp32UsedMax.setStatus('current')
if mibBuilder.loadTexts: drdlProp32UsedMax.setDescription('Properties used (32)')
drdlProp64Used = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 9))
drdlProp64UsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64UsedVal.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64UsedVal.setDescription('Unused')
drdlProp64UsedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64UsedMom.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64UsedMom.setDescription('Unused')
drdlProp64UsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp64UsedMax.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp64UsedMax.setDescription('Unused')
drdlProp256Used = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 10))
drdlProp256UsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp256UsedVal.setStatus('current')
if mibBuilder.loadTexts: drdlProp256UsedVal.setDescription('Properties used (256)')
drdlProp256UsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp256UsedMax.setStatus('current')
if mibBuilder.loadTexts: drdlProp256UsedMax.setDescription('Properties used (256)')
drdlAnalyzerChecks = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 11))
drdlAnalyzerChecksVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerChecksVal.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerChecksVal.setDescription('Analyzer packet checks')
drdlAnalyzerChecksMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerChecksMom.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerChecksMom.setDescription('Analyzer packet checks')
drdlAnalyzerChecksMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerChecksMax.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerChecksMax.setDescription('Analyzer packet checks')
drdlAnalyzerCheckedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 12))
drdlAnalyzerCheckedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesVal.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesVal.setDescription('Analyzed bytes')
drdlAnalyzerCheckedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesMom.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesMom.setDescription('Analyzed bytes')
drdlAnalyzerCheckedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesMax.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerCheckedBytesMax.setDescription('Analyzed bytes')
drdlAnalyzerSkippedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 13))
drdlAnalyzerSkippedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesVal.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesVal.setDescription('Skipped bytes')
drdlAnalyzerSkippedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesMom.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesMom.setDescription('Skipped bytes')
drdlAnalyzerSkippedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesMax.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerSkippedBytesMax.setDescription('Skipped bytes')
drdlAnalyzerActions = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 14))
drdlAnalyzerActionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerActionsVal.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerActionsVal.setDescription('Analyzer actions called')
drdlAnalyzerActionsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerActionsMom.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerActionsMom.setDescription('Analyzer actions called')
drdlAnalyzerActionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAnalyzerActionsMax.setStatus('current')
if mibBuilder.loadTexts: drdlAnalyzerActionsMax.setDescription('Analyzer actions called')
drdlPropertySet = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 15))
drdlPropertySetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertySetVal.setStatus('current')
if mibBuilder.loadTexts: drdlPropertySetVal.setDescription('Analyzer properties set')
drdlPropertySetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertySetMom.setStatus('current')
if mibBuilder.loadTexts: drdlPropertySetMom.setDescription('Analyzer properties set')
drdlPropertySetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertySetMax.setStatus('current')
if mibBuilder.loadTexts: drdlPropertySetMax.setDescription('Analyzer properties set')
drdlOrphans = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 18))
drdlOrphansVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlOrphansVal.setStatus('current')
if mibBuilder.loadTexts: drdlOrphansVal.setDescription('Orphaned childconnections')
drdlOrphansMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlOrphansMom.setStatus('current')
if mibBuilder.loadTexts: drdlOrphansMom.setDescription('Orphaned childconnections')
drdlOrphansMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlOrphansMax.setStatus('current')
if mibBuilder.loadTexts: drdlOrphansMax.setDescription('Orphaned childconnections')
drdlAutoAccepts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 21))
drdlAutoAcceptsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAutoAcceptsVal.setStatus('current')
if mibBuilder.loadTexts: drdlAutoAcceptsVal.setDescription('Number of automatic accepts')
drdlAutoAcceptsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAutoAcceptsMom.setStatus('current')
if mibBuilder.loadTexts: drdlAutoAcceptsMom.setDescription('Number of automatic accepts')
drdlAutoAcceptsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlAutoAcceptsMax.setStatus('current')
if mibBuilder.loadTexts: drdlAutoAcceptsMax.setDescription('Number of automatic accepts')
drdlBuffersUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 22))
drdlBuffersUsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 22, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlBuffersUsedVal.setStatus('current')
if mibBuilder.loadTexts: drdlBuffersUsedVal.setDescription('Number of buffers used')
drdlBuffersUsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlBuffersUsedMax.setStatus('current')
if mibBuilder.loadTexts: drdlBuffersUsedMax.setDescription('Number of buffers used')
drdlBufferAllocationFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 23))
drdlBufferAllocationFailuresVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlBufferAllocationFailuresVal.setStatus('current')
if mibBuilder.loadTexts: drdlBufferAllocationFailuresVal.setDescription('Number of buffer allocation failures')
drdlBufferAllocationFailuresMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlBufferAllocationFailuresMom.setStatus('current')
if mibBuilder.loadTexts: drdlBufferAllocationFailuresMom.setDescription('Number of buffer allocation failures')
drdlBufferAllocationFailuresMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlBufferAllocationFailuresMax.setStatus('current')
if mibBuilder.loadTexts: drdlBufferAllocationFailuresMax.setDescription('Number of buffer allocation failures')
drdlFullPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 24))
drdlFullPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlFullPacketsVal.setStatus('current')
if mibBuilder.loadTexts: drdlFullPacketsVal.setDescription('Number of full run packets')
drdlFullPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlFullPacketsMom.setStatus('current')
if mibBuilder.loadTexts: drdlFullPacketsMom.setDescription('Number of full run packets')
drdlFullPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlFullPacketsMax.setStatus('current')
if mibBuilder.loadTexts: drdlFullPacketsMax.setDescription('Number of full run packets')
drdlProp0Fail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 25))
drdlProp0FailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp0FailVal.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp0FailVal.setDescription('Unused')
drdlProp0FailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp0FailMax.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp0FailMax.setDescription('Unused')
drdlProp0Used = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 26))
drdlProp0UsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 26, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp0UsedVal.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp0UsedVal.setDescription('Unused')
drdlProp0UsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlProp0UsedMax.setStatus('obsolete')
if mibBuilder.loadTexts: drdlProp0UsedMax.setDescription('Unused')
drdlSliceStateUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 27))
drdlSliceStateUsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlSliceStateUsedVal.setStatus('current')
if mibBuilder.loadTexts: drdlSliceStateUsedVal.setDescription('Number of slice state structures used')
drdlSliceStateUsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlSliceStateUsedMax.setStatus('current')
if mibBuilder.loadTexts: drdlSliceStateUsedMax.setDescription('Number of slice state structures used')
drdlSliceStateFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 28))
drdlSliceStateFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlSliceStateFailVal.setStatus('current')
if mibBuilder.loadTexts: drdlSliceStateFailVal.setDescription('Number of slice state structure allocation failures')
drdlSliceStateFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlSliceStateFailMom.setStatus('current')
if mibBuilder.loadTexts: drdlSliceStateFailMom.setDescription('Number of slice state structure allocation failures')
drdlSliceStateFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlSliceStateFailMax.setStatus('current')
if mibBuilder.loadTexts: drdlSliceStateFailMax.setDescription('Number of slice state structure allocation failures')
drdlLiteralSet = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 29))
drdlLiteralSetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlLiteralSetVal.setStatus('current')
if mibBuilder.loadTexts: drdlLiteralSetVal.setDescription('Analyzer literals set')
drdlLiteralSetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlLiteralSetMom.setStatus('current')
if mibBuilder.loadTexts: drdlLiteralSetMom.setDescription('Analyzer literals set')
drdlLiteralSetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlLiteralSetMax.setStatus('current')
if mibBuilder.loadTexts: drdlLiteralSetMax.setDescription('Analyzer literals set')
drdlPropertyFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 30))
drdlPropertyFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 30, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertyFailVal.setStatus('current')
if mibBuilder.loadTexts: drdlPropertyFailVal.setDescription('Analyzer properties that could not be set')
drdlPropertyFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 30, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertyFailMom.setStatus('current')
if mibBuilder.loadTexts: drdlPropertyFailMom.setDescription('Analyzer properties that could not be set')
drdlPropertyFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlPropertyFailMax.setStatus('current')
if mibBuilder.loadTexts: drdlPropertyFailMax.setDescription('Analyzer properties that could not be set')
drdlVsRangeTests = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 45))
drdlVsRangeTestsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 45, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeTestsVal.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeTestsVal.setDescription('Virtual services range tests')
drdlVsRangeTestsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 45, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeTestsMom.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeTestsMom.setDescription('Virtual services range tests')
drdlVsRangeTestsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 45, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeTestsMax.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeTestsMax.setDescription('Virtual services range tests')
drdlVsRangeSteps = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 46))
drdlVsRangeStepsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 46, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeStepsVal.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeStepsVal.setDescription('Virtual services range steps')
drdlVsRangeStepsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 46, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeStepsMom.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeStepsMom.setDescription('Virtual services range steps')
drdlVsRangeStepsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 46, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRangeStepsMax.setStatus('current')
if mibBuilder.loadTexts: drdlVsRangeStepsMax.setDescription('Virtual services range steps')
drdlVsRegexTests = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 47))
drdlVsRegexTestsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 47, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexTestsVal.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexTestsVal.setDescription('Virtual services regex tests')
drdlVsRegexTestsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 47, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexTestsMom.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexTestsMom.setDescription('Virtual services regex tests')
drdlVsRegexTestsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 47, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexTestsMax.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexTestsMax.setDescription('Virtual services regex tests')
drdlVsRegexSteps = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 48))
drdlVsRegexStepsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 48, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexStepsVal.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexStepsVal.setDescription('Virtual services regex steps')
drdlVsRegexStepsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 48, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexStepsMom.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexStepsMom.setDescription('Virtual services regex steps')
drdlVsRegexStepsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 48, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlVsRegexStepsMax.setStatus('current')
if mibBuilder.loadTexts: drdlVsRegexStepsMax.setDescription('Virtual services regex steps')
drdlTaintFill = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 49))
drdlTaintFillVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 49, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlTaintFillVal.setStatus('current')
if mibBuilder.loadTexts: drdlTaintFillVal.setDescription('Buckets used in taint store')
drdlTaintFillMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 49, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlTaintFillMax.setStatus('current')
if mibBuilder.loadTexts: drdlTaintFillMax.setDescription('Buckets used in taint store')
drdlChildIterateMax = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 33))
drdlChildIterateMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 33, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildIterateMaxVal.setStatus('current')
if mibBuilder.loadTexts: drdlChildIterateMaxVal.setDescription('Childconnection iterations during search (max)')
drdlChildIterateMaxMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlChildIterateMaxMax.setStatus('current')
if mibBuilder.loadTexts: drdlChildIterateMaxMax.setDescription('Childconnection iterations during search (max)')
drdlTaintFillPercent = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 54))
drdlTaintFillPercentVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 54, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlTaintFillPercentVal.setStatus('current')
if mibBuilder.loadTexts: drdlTaintFillPercentVal.setDescription('Port tainting data structure usage')
drdlTaintFillPercentMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 24, 54, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: drdlTaintFillPercentMax.setStatus('current')
if mibBuilder.loadTexts: drdlTaintFillPercentMax.setDescription('Port tainting data structure usage')
ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28))
ethernetUnicast = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 1))
ethernetUnicastVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetUnicastVal.setStatus('current')
if mibBuilder.loadTexts: ethernetUnicastVal.setDescription('Unicast packets')
ethernetUnicastMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetUnicastMom.setStatus('current')
if mibBuilder.loadTexts: ethernetUnicastMom.setDescription('Unicast packets')
ethernetUnicastMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetUnicastMax.setStatus('current')
if mibBuilder.loadTexts: ethernetUnicastMax.setDescription('Unicast packets')
ethernetBroadcast = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 2))
ethernetBroadcastVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBroadcastVal.setStatus('current')
if mibBuilder.loadTexts: ethernetBroadcastVal.setDescription('Broadcast packets')
ethernetBroadcastMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBroadcastMom.setStatus('current')
if mibBuilder.loadTexts: ethernetBroadcastMom.setDescription('Broadcast packets')
ethernetBroadcastMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetBroadcastMax.setStatus('current')
if mibBuilder.loadTexts: ethernetBroadcastMax.setDescription('Broadcast packets')
ethernetMulticast = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 3))
ethernetMulticastVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMulticastVal.setStatus('current')
if mibBuilder.loadTexts: ethernetMulticastVal.setDescription('Multicast packets')
ethernetMulticastMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMulticastMom.setStatus('current')
if mibBuilder.loadTexts: ethernetMulticastMom.setDescription('Multicast packets')
ethernetMulticastMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMulticastMax.setStatus('current')
if mibBuilder.loadTexts: ethernetMulticastMax.setDescription('Multicast packets')
ethernet8021q = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 4))
ethernet8021qVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernet8021qVal.setStatus('current')
if mibBuilder.loadTexts: ethernet8021qVal.setDescription('802.1q encapsulated packets')
ethernet8021qMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernet8021qMom.setStatus('current')
if mibBuilder.loadTexts: ethernet8021qMom.setDescription('802.1q encapsulated packets')
ethernet8021qMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernet8021qMax.setStatus('current')
if mibBuilder.loadTexts: ethernet8021qMax.setDescription('802.1q encapsulated packets')
ethernetMpls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 5))
ethernetMplsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsVal.setDescription('MPLS over Ethernet frames')
ethernetMplsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsMom.setDescription('MPLS over Ethernet frames')
ethernetMplsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsMax.setDescription('MPLS over Ethernet frames')
ethernetMplsOoh = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 6))
ethernetMplsOohVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsOohVal.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsOohVal.setDescription('Invalid MPLS frames')
ethernetMplsOohMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsOohMom.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsOohMom.setDescription('Invalid MPLS frames')
ethernetMplsOohMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetMplsOohMax.setStatus('current')
if mibBuilder.loadTexts: ethernetMplsOohMax.setDescription('Invalid MPLS frames')
ethernetNonIp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 7))
ethernetNonIpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetNonIpVal.setStatus('current')
if mibBuilder.loadTexts: ethernetNonIpVal.setDescription('Non IP packets')
ethernetNonIpMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetNonIpMom.setStatus('current')
if mibBuilder.loadTexts: ethernetNonIpMom.setDescription('Non IP packets')
ethernetNonIpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetNonIpMax.setStatus('current')
if mibBuilder.loadTexts: ethernetNonIpMax.setDescription('Non IP packets')
ethernetDivert = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 8))
ethernetDivertVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetDivertVal.setStatus('current')
if mibBuilder.loadTexts: ethernetDivertVal.setDescription('Divert packets')
ethernetDivertMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetDivertMom.setStatus('current')
if mibBuilder.loadTexts: ethernetDivertMom.setDescription('Divert packets')
ethernetDivertMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetDivertMax.setStatus('current')
if mibBuilder.loadTexts: ethernetDivertMax.setDescription('Divert packets')
ethernetHBResetDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 21))
ethernetHBResetDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetHBResetDropsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetHBResetDropsVal.setDescription('Dropped packets because of HB Reset')
ethernetHBResetDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetHBResetDropsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetHBResetDropsMom.setDescription('Dropped packets because of HB Reset')
ethernetHBResetDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetHBResetDropsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetHBResetDropsMax.setDescription('Dropped packets because of HB Reset')
ethernetShuntEthertypePackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 22))
ethernetShuntEthertypePacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 22, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsVal.setDescription('Shunted packets (ethertype)')
ethernetShuntEthertypePacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 22, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsMom.setDescription('Shunted packets (ethertype)')
ethernetShuntEthertypePacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypePacketsMax.setDescription('Shunted packets (ethertype)')
ethernetShuntEthertypeBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 23))
ethernetShuntEthertypeBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesVal.setDescription('Shunted bytes (ethertype)')
ethernetShuntEthertypeBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesMom.setDescription('Shunted bytes (ethertype)')
ethernetShuntEthertypeBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEthertypeBytesMax.setDescription('Shunted bytes (ethertype)')
ethernetShuntMplsPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 24))
ethernetShuntMplsPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsPacketsVal.setDescription('Shunted packets (MPLS)')
ethernetShuntMplsPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsPacketsMom.setDescription('Shunted packets (MPLS)')
ethernetShuntMplsPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsPacketsMax.setDescription('Shunted packets (MPLS)')
ethernetShuntMplsBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 25))
ethernetShuntMplsBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsBytesVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsBytesVal.setDescription('Shunted bytes (MPLS)')
ethernetShuntMplsBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsBytesMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsBytesMom.setDescription('Shunted bytes (MPLS)')
ethernetShuntMplsBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntMplsBytesMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntMplsBytesMax.setDescription('Shunted bytes (MPLS)')
ethernetShuntEoMplsPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 26))
ethernetShuntEoMplsPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsVal.setDescription('Shunted packets (EoMPLS)')
ethernetShuntEoMplsPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsMom.setDescription('Shunted packets (EoMPLS)')
ethernetShuntEoMplsPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsPacketsMax.setDescription('Shunted packets (EoMPLS)')
ethernetShuntEoMplsBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 27))
ethernetShuntEoMplsBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 27, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesVal.setDescription('Shunted bytes (EoMPLS)')
ethernetShuntEoMplsBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 27, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesMom.setDescription('Shunted bytes (EoMPLS)')
ethernetShuntEoMplsBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntEoMplsBytesMax.setDescription('Shunted bytes (EoMPLS)')
ethernetShuntDot1qPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 28))
ethernetShuntDot1qPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsVal.setDescription('Shunted packets (Dot1q)')
ethernetShuntDot1qPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsMom.setDescription('Shunted packets (Dot1q)')
ethernetShuntDot1qPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qPacketsMax.setDescription('Shunted packets (Dot1q)')
ethernetShuntDot1qBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 29))
ethernetShuntDot1qBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qBytesVal.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qBytesVal.setDescription('Shunted bytes (Dot1q)')
ethernetShuntDot1qBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qBytesMom.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qBytesMom.setDescription('Shunted bytes (Dot1q)')
ethernetShuntDot1qBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetShuntDot1qBytesMax.setStatus('current')
if mibBuilder.loadTexts: ethernetShuntDot1qBytesMax.setDescription('Shunted bytes (Dot1q)')
ethernetCountBytesIPv4IPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 30))
ethernetCountBytesIPv4IPv6Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 30, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Val.setStatus('current')
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Val.setDescription('Ethernet bytes (IPv4 and IPv6)')
ethernetCountBytesIPv4IPv6Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 30, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Mom.setStatus('current')
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Mom.setDescription('Ethernet bytes (IPv4 and IPv6)')
ethernetCountBytesIPv4IPv6Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 28, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Max.setStatus('current')
if mibBuilder.loadTexts: ethernetCountBytesIPv4IPv6Max.setDescription('Ethernet bytes (IPv4 and IPv6)')
ipv4 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32))
ipv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 1))
ipv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4PacketsVal.setDescription('RX packets')
ipv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv4PacketsMom.setDescription('RX packets')
ipv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4PacketsMax.setDescription('RX packets')
ipv4Bytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 2))
ipv4BytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4BytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv4BytesVal.setDescription('RX data')
ipv4BytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4BytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv4BytesMom.setDescription('RX data')
ipv4BytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4BytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv4BytesMax.setDescription('RX data')
ipv4RefusedShort = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 3))
ipv4RefusedShortVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedShortVal.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedShortVal.setDescription('Refused (packet is too short)')
ipv4RefusedShortMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedShortMom.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedShortMom.setDescription('Refused (packet is too short)')
ipv4RefusedShortMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedShortMax.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedShortMax.setDescription('Refused (packet is too short)')
ipv4RefusedVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 4))
ipv4RefusedVersionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedVersionVal.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedVersionVal.setDescription('Refused (invalid version)')
ipv4RefusedVersionMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedVersionMom.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedVersionMom.setDescription('Refused (invalid version)')
ipv4RefusedVersionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedVersionMax.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedVersionMax.setDescription('Refused (invalid version)')
ipv4RefusedSelf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 5))
ipv4RefusedSelfVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedSelfVal.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedSelfVal.setDescription('Refused (src == dest)')
ipv4RefusedSelfMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedSelfMom.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedSelfMom.setDescription('Refused (src == dest)')
ipv4RefusedSelfMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedSelfMax.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedSelfMax.setDescription('Refused (src == dest)')
ipv4Unfragmented = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 6))
ipv4UnfragmentedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4UnfragmentedVal.setStatus('current')
if mibBuilder.loadTexts: ipv4UnfragmentedVal.setDescription('Unfragmented packets')
ipv4UnfragmentedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4UnfragmentedMom.setStatus('current')
if mibBuilder.loadTexts: ipv4UnfragmentedMom.setDescription('Unfragmented packets')
ipv4UnfragmentedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4UnfragmentedMax.setStatus('current')
if mibBuilder.loadTexts: ipv4UnfragmentedMax.setDescription('Unfragmented packets')
ipv4Fragmented = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 7))
ipv4FragmentedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentedVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentedVal.setDescription('Packet fragments')
ipv4FragmentedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentedMom.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentedMom.setDescription('Packet fragments')
ipv4FragmentedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentedMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentedMax.setDescription('Packet fragments')
ipv4FragmentedIds = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 10))
ipv4FragmentedIdsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentedIdsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentedIdsVal.setDescription('Fragment ids')
ipv4FragmentedIdsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentedIdsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentedIdsMax.setDescription('Fragment ids')
ipv4Fragments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 11))
ipv4FragmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 11, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentsVal.setDescription('Fragments in queue')
ipv4FragmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentsMax.setDescription('Fragments in queue')
ipv4RefusedOof = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 14))
ipv4RefusedOofVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedOofVal.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedOofVal.setDescription('Refused (out of fragments)')
ipv4RefusedOofMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedOofMom.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedOofMom.setDescription('Refused (out of fragments)')
ipv4RefusedOofMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedOofMax.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedOofMax.setDescription('Refused (out of fragments)')
ipv4FragmentAllocationFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 15))
ipv4FragmentAllocationFailuresVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresVal.setDescription('Fragment allocation failures')
ipv4FragmentAllocationFailuresMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresMom.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresMom.setDescription('Fragment allocation failures')
ipv4FragmentAllocationFailuresMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentAllocationFailuresMax.setDescription('Fragment allocation failures')
ipv4FragmentReassFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 16))
ipv4FragmentReassFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentReassFailVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentReassFailVal.setDescription('Fragment reassembly failures')
ipv4FragmentReassFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentReassFailMom.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentReassFailMom.setDescription('Fragment reassembly failures')
ipv4FragmentReassFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentReassFailMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentReassFailMax.setDescription('Fragment reassembly failures')
ipv4RefusedFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 17))
ipv4RefusedFilterVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedFilterVal.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedFilterVal.setDescription('Packets refused by lowlevel filter')
ipv4RefusedFilterMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedFilterMom.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedFilterMom.setDescription('Packets refused by lowlevel filter')
ipv4RefusedFilterMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4RefusedFilterMax.setStatus('current')
if mibBuilder.loadTexts: ipv4RefusedFilterMax.setDescription('Packets refused by lowlevel filter')
ipv4FragmentTooNoisy = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 19))
ipv4FragmentTooNoisyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentTooNoisyVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentTooNoisyVal.setDescription('Packets refused (too many fragments)')
ipv4FragmentTooNoisyMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentTooNoisyMom.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentTooNoisyMom.setDescription('Packets refused (too many fragments)')
ipv4FragmentTooNoisyMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentTooNoisyMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentTooNoisyMax.setDescription('Packets refused (too many fragments)')
ipv4Reassembled = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 20))
ipv4ReassembledVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ReassembledVal.setStatus('current')
if mibBuilder.loadTexts: ipv4ReassembledVal.setDescription('Reassembled packets')
ipv4ReassembledMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ReassembledMom.setStatus('current')
if mibBuilder.loadTexts: ipv4ReassembledMom.setDescription('Reassembled packets')
ipv4ReassembledMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ReassembledMax.setStatus('current')
if mibBuilder.loadTexts: ipv4ReassembledMax.setDescription('Reassembled packets')
ipv4FragmentDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 21))
ipv4FragmentDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentDropsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentDropsVal.setDescription('Dropped fragments (timeout/LRU)')
ipv4FragmentDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentDropsMom.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentDropsMom.setDescription('Dropped fragments (timeout/LRU)')
ipv4FragmentDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4FragmentDropsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4FragmentDropsMax.setDescription('Dropped fragments (timeout/LRU)')
ipv4ShuntAddressPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 35))
ipv4ShuntAddressPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsVal.setDescription('Shunted packets (address)')
ipv4ShuntAddressPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsMom.setDescription('Shunted packets (address)')
ipv4ShuntAddressPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressPacketsMax.setDescription('Shunted packets (address)')
ipv4ShuntAddressBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 36))
ipv4ShuntAddressBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 36, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressBytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressBytesVal.setDescription('Shunted bytes (address)')
ipv4ShuntAddressBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 36, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressBytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressBytesMom.setDescription('Shunted bytes (address)')
ipv4ShuntAddressBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntAddressBytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntAddressBytesMax.setDescription('Shunted bytes (address)')
ipv4ShuntProtoPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 37))
ipv4ShuntProtoPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 37, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsVal.setDescription('Shunted packets (protocol)')
ipv4ShuntProtoPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 37, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsMom.setDescription('Shunted packets (protocol)')
ipv4ShuntProtoPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoPacketsMax.setDescription('Shunted packets (protocol)')
ipv4ShuntProtoBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 38))
ipv4ShuntProtoBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoBytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoBytesVal.setDescription('Shunted bytes (protocol)')
ipv4ShuntProtoBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoBytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoBytesMom.setDescription('Shunted bytes (protocol)')
ipv4ShuntProtoBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4ShuntProtoBytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv4ShuntProtoBytesMax.setDescription('Shunted bytes (protocol)')
ipv4EcnEct0 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 39))
ipv4EcnEct0Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 39, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct0Val.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct0Val.setDescription('ECN Capable Packets ECT(0)')
ipv4EcnEct0Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 39, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct0Mom.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct0Mom.setDescription('ECN Capable Packets ECT(0)')
ipv4EcnEct0Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 39, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct0Max.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct0Max.setDescription('ECN Capable Packets ECT(0)')
ipv4EcnEct1 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 40))
ipv4EcnEct1Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct1Val.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct1Val.setDescription('ECN Capable Packets ECT(1)')
ipv4EcnEct1Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct1Mom.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct1Mom.setDescription('ECN Capable Packets ECT(1)')
ipv4EcnEct1Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnEct1Max.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnEct1Max.setDescription('ECN Capable Packets ECT(1)')
ipv4EcnCn = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 41))
ipv4EcnCnVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnCnVal.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnCnVal.setDescription('ECN Packets Congestion Experienced')
ipv4EcnCnMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnCnMom.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnCnMom.setDescription('ECN Packets Congestion Experienced')
ipv4EcnCnMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 32, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv4EcnCnMax.setStatus('current')
if mibBuilder.loadTexts: ipv4EcnCnMax.setDescription('ECN Packets Congestion Experienced')
ipv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126))
ipv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 1))
ipv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6PacketsVal.setDescription('RX packets')
ipv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv6PacketsMom.setDescription('RX packets')
ipv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6PacketsMax.setDescription('RX packets')
ipv6Bytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 2))
ipv6BytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6BytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv6BytesVal.setDescription('RX data')
ipv6BytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6BytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv6BytesMom.setDescription('RX data')
ipv6BytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6BytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv6BytesMax.setDescription('RX data')
ipv6RefusedShort = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 3))
ipv6RefusedShortVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedShortVal.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedShortVal.setDescription('Refused (packet is too short)')
ipv6RefusedShortMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedShortMom.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedShortMom.setDescription('Refused (packet is too short)')
ipv6RefusedShortMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedShortMax.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedShortMax.setDescription('Refused (packet is too short)')
ipv6RefusedVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 4))
ipv6RefusedVersionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedVersionVal.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedVersionVal.setDescription('Refused (invalid version)')
ipv6RefusedVersionMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedVersionMom.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedVersionMom.setDescription('Refused (invalid version)')
ipv6RefusedVersionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedVersionMax.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedVersionMax.setDescription('Refused (invalid version)')
ipv6RefusedSelf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 5))
ipv6RefusedSelfVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedSelfVal.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedSelfVal.setDescription('Refused (src == dest)')
ipv6RefusedSelfMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedSelfMom.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedSelfMom.setDescription('Refused (src == dest)')
ipv6RefusedSelfMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedSelfMax.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedSelfMax.setDescription('Refused (src == dest)')
ipv6Fragmented = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 7))
ipv6FragmentedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentedVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentedVal.setDescription('Packet fragments')
ipv6FragmentedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentedMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentedMom.setDescription('Packet fragments')
ipv6FragmentedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentedMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentedMax.setDescription('Packet fragments')
ipv6FragmentedIds = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 10))
ipv6FragmentedIdsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentedIdsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentedIdsVal.setDescription('Fragment ids')
ipv6FragmentedIdsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentedIdsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentedIdsMax.setDescription('Fragment ids')
ipv6Fragments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 11))
ipv6FragmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 11, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentsVal.setDescription('Fragments in queue')
ipv6FragmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentsMax.setDescription('Fragments in queue')
ipv6RefusedOof = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 14))
ipv6RefusedOofVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedOofVal.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedOofVal.setDescription('Refused (out of fragments)')
ipv6RefusedOofMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedOofMom.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedOofMom.setDescription('Refused (out of fragments)')
ipv6RefusedOofMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RefusedOofMax.setStatus('current')
if mibBuilder.loadTexts: ipv6RefusedOofMax.setDescription('Refused (out of fragments)')
ipv6FragmentAllocationFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 15))
ipv6FragmentAllocationFailuresVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresVal.setDescription('Fragment allocation failures')
ipv6FragmentAllocationFailuresMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresMom.setDescription('Fragment allocation failures')
ipv6FragmentAllocationFailuresMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentAllocationFailuresMax.setDescription('Fragment allocation failures')
ipv6FragmentReassFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 16))
ipv6FragmentReassFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentReassFailVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentReassFailVal.setDescription('Fragment reassembly failures')
ipv6FragmentReassFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentReassFailMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentReassFailMom.setDescription('Fragment reassembly failures')
ipv6FragmentReassFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentReassFailMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentReassFailMax.setDescription('Fragment reassembly failures')
ipv6FragmentTooNoisy = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 19))
ipv6FragmentTooNoisyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentTooNoisyVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentTooNoisyVal.setDescription('Packets refused (too many fragments)')
ipv6FragmentTooNoisyMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentTooNoisyMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentTooNoisyMom.setDescription('Packets refused (too many fragments)')
ipv6FragmentTooNoisyMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentTooNoisyMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentTooNoisyMax.setDescription('Packets refused (too many fragments)')
ipv6Reassembled = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 20))
ipv6ReassembledVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ReassembledVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ReassembledVal.setDescription('Reassembled packets')
ipv6ReassembledMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ReassembledMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ReassembledMom.setDescription('Reassembled packets')
ipv6ReassembledMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ReassembledMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ReassembledMax.setDescription('Reassembled packets')
ipv6FragmentOverlap = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 21))
ipv6FragmentOverlapVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentOverlapVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentOverlapVal.setDescription('Overlapping Fragments')
ipv6FragmentOverlapMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentOverlapMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentOverlapMom.setDescription('Overlapping Fragments')
ipv6FragmentOverlapMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentOverlapMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentOverlapMax.setDescription('Overlapping Fragments')
ipv6ExtDest = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 22))
ipv6ExtDestVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 22, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtDestVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtDestVal.setDescription('Destination Ext. Headers')
ipv6ExtDestMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 22, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtDestMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtDestMom.setDescription('Destination Ext. Headers')
ipv6ExtDestMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtDestMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtDestMax.setDescription('Destination Ext. Headers')
ipv6ExtHbh = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 23))
ipv6ExtHbhVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtHbhVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtHbhVal.setDescription('Hob-by-hop Ext. Headers')
ipv6ExtHbhMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtHbhMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtHbhMom.setDescription('Hob-by-hop Ext. Headers')
ipv6ExtHbhMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtHbhMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtHbhMax.setDescription('Hob-by-hop Ext. Headers')
ipv6ExtRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 24))
ipv6ExtRouteVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtRouteVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtRouteVal.setDescription('Route Ext, Headers')
ipv6ExtRouteMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtRouteMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtRouteMom.setDescription('Route Ext, Headers')
ipv6ExtRouteMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtRouteMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtRouteMax.setDescription('Route Ext, Headers')
ipv6ExtInvl = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 25))
ipv6ExtInvlVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtInvlVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtInvlVal.setDescription('Invalid Ext. Headers')
ipv6ExtInvlMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtInvlMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtInvlMom.setDescription('Invalid Ext. Headers')
ipv6ExtInvlMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ExtInvlMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ExtInvlMax.setDescription('Invalid Ext. Headers')
ipv6FragnentTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 26))
ipv6FragnentTimeoutVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragnentTimeoutVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragnentTimeoutVal.setDescription('Reassembly Timeout')
ipv6FragnentTimeoutMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragnentTimeoutMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragnentTimeoutMom.setDescription('Reassembly Timeout')
ipv6FragnentTimeoutMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragnentTimeoutMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragnentTimeoutMax.setDescription('Reassembly Timeout')
ipv6FragmentDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 27))
ipv6FragmentDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 27, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentDropsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentDropsVal.setDescription('Dropped fragments (timeout/LRU)')
ipv6FragmentDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 27, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentDropsMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentDropsMom.setDescription('Dropped fragments (timeout/LRU)')
ipv6FragmentDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragmentDropsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragmentDropsMax.setDescription('Dropped fragments (timeout/LRU)')
ipv6ShuntAddressPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 28))
ipv6ShuntAddressPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsVal.setDescription('Shunted packets (address)')
ipv6ShuntAddressPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsMom.setDescription('Shunted packets (address)')
ipv6ShuntAddressPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressPacketsMax.setDescription('Shunted packets (address)')
ipv6ShuntAddressBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 29))
ipv6ShuntAddressBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressBytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressBytesVal.setDescription('Shunted bytes (address)')
ipv6ShuntAddressBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressBytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressBytesMom.setDescription('Shunted bytes (address)')
ipv6ShuntAddressBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntAddressBytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntAddressBytesMax.setDescription('Shunted bytes (address)')
ipv6ShuntProtoPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 30))
ipv6ShuntProtoPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 30, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsVal.setDescription('Shunted packets (protocol)')
ipv6ShuntProtoPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 30, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsMom.setDescription('Shunted packets (protocol)')
ipv6ShuntProtoPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoPacketsMax.setDescription('Shunted packets (protocol)')
ipv6ShuntProtoBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 31))
ipv6ShuntProtoBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 31, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoBytesVal.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoBytesVal.setDescription('Shunted bytes (protocol)')
ipv6ShuntProtoBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 31, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoBytesMom.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoBytesMom.setDescription('Shunted bytes (protocol)')
ipv6ShuntProtoBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 31, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6ShuntProtoBytesMax.setStatus('current')
if mibBuilder.loadTexts: ipv6ShuntProtoBytesMax.setDescription('Shunted bytes (protocol)')
ipv6FragInFrag = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 32))
ipv6FragInFragVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragInFragVal.setStatus('current')
if mibBuilder.loadTexts: ipv6FragInFragVal.setDescription('Fragments in Fragments')
ipv6FragInFragMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragInFragMom.setStatus('current')
if mibBuilder.loadTexts: ipv6FragInFragMom.setDescription('Fragments in Fragments')
ipv6FragInFragMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6FragInFragMax.setStatus('current')
if mibBuilder.loadTexts: ipv6FragInFragMax.setDescription('Fragments in Fragments')
ipv6EcnEct0 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 33))
ipv6EcnEct0Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 33, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct0Val.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct0Val.setDescription('ECN Capable Packets ECT(0)')
ipv6EcnEct0Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 33, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct0Mom.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct0Mom.setDescription('ECN Capable Packets ECT(0)')
ipv6EcnEct0Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct0Max.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct0Max.setDescription('ECN Capable Packets ECT(0)')
ipv6EcnEct1 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 34))
ipv6EcnEct1Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 34, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct1Val.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct1Val.setDescription('ECN Capable Packets ECT(1)')
ipv6EcnEct1Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 34, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct1Mom.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct1Mom.setDescription('ECN Capable Packets ECT(1)')
ipv6EcnEct1Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnEct1Max.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnEct1Max.setDescription('ECN Capable Packets ECT(1)')
ipv6EcnCn = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 35))
ipv6EcnCnVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnCnVal.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnCnVal.setDescription('ECN Packets Congestion Experienced')
ipv6EcnCnMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnCnMom.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnCnMom.setDescription('ECN Packets Congestion Experienced')
ipv6EcnCnMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 126, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6EcnCnMax.setStatus('current')
if mibBuilder.loadTexts: ipv6EcnCnMax.setDescription('ECN Packets Congestion Experienced')
tcpv4 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48))
tcpv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 1))
tcpv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketsVal.setDescription('RX packets')
tcpv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketsMom.setDescription('RX packets')
tcpv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketsMax.setDescription('RX packets')
tcpv4Bytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 2))
tcpv4BytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4BytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4BytesVal.setDescription('RX bytes')
tcpv4BytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4BytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4BytesMom.setDescription('RX bytes')
tcpv4BytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4BytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4BytesMax.setDescription('RX bytes')
tcpv4CreateAttempts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 4))
tcpv4CreateAttemptsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreateAttemptsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreateAttemptsVal.setDescription('Connection create attempts')
tcpv4CreateAttemptsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreateAttemptsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreateAttemptsMom.setDescription('Connection create attempts')
tcpv4CreateAttemptsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreateAttemptsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreateAttemptsMax.setDescription('Connection create attempts')
tcpv4Created = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 5))
tcpv4CreatedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreatedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreatedVal.setDescription('Connections created')
tcpv4CreatedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreatedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreatedMom.setDescription('Connections created')
tcpv4CreatedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CreatedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4CreatedMax.setDescription('Connections created')
tcpv4RefusedRuleset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 6))
tcpv4RefusedRulesetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedRulesetVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedRulesetVal.setDescription('Refused (ruleset)')
tcpv4RefusedRulesetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedRulesetMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedRulesetMom.setDescription('Refused (ruleset)')
tcpv4RefusedRulesetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedRulesetMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedRulesetMax.setDescription('Refused (ruleset)')
tcpv4RefusedShort = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 7))
tcpv4RefusedShortVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedShortVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedShortVal.setDescription('Refused (short)')
tcpv4RefusedShortMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedShortMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedShortMom.setDescription('Refused (short)')
tcpv4RefusedShortMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedShortMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedShortMax.setDescription('Refused (short)')
tcpv4RefusedBroadcast = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 8))
tcpv4RefusedBroadcastVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedBroadcastVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedBroadcastVal.setDescription('Refused (broadcast)')
tcpv4RefusedBroadcastMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedBroadcastMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedBroadcastMom.setDescription('Refused (broadcast)')
tcpv4RefusedBroadcastMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedBroadcastMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedBroadcastMax.setDescription('Refused (broadcast)')
tcpv4RefusedOffset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 9))
tcpv4RefusedOffsetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedOffsetVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedOffsetVal.setDescription('Refused (offset)')
tcpv4RefusedOffsetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedOffsetMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedOffsetMom.setDescription('Refused (offset)')
tcpv4RefusedOffsetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedOffsetMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedOffsetMax.setDescription('Refused (offset)')
tcpv4Rejected = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 10))
tcpv4RejectedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RejectedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RejectedVal.setDescription('Rejected packets')
tcpv4RejectedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RejectedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RejectedMom.setDescription('Rejected packets')
tcpv4RejectedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RejectedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RejectedMax.setDescription('Rejected packets')
tcpv4Lostsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 12))
tcpv4LostsyncVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 12, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4LostsyncVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4LostsyncVal.setDescription('Out-of-sync connections')
tcpv4LostsyncMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4LostsyncMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4LostsyncMax.setDescription('Out-of-sync connections')
tcpv4UntrackedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 13))
tcpv4UntrackedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedPacketsVal.setDescription('Untracked packets')
tcpv4UntrackedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedPacketsMom.setDescription('Untracked packets')
tcpv4UntrackedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedPacketsMax.setDescription('Untracked packets')
tcpv4GoodputPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 14))
tcpv4GoodputPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputPacketsVal.setDescription('Goodput packets')
tcpv4GoodputPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputPacketsMom.setDescription('Goodput packets')
tcpv4GoodputPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputPacketsMax.setDescription('Goodput packets')
tcpv4GoodputBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 15))
tcpv4GoodputBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputBytesVal.setDescription('Goodput bytes')
tcpv4GoodputBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputBytesMom.setDescription('Goodput bytes')
tcpv4GoodputBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4GoodputBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4GoodputBytesMax.setDescription('Goodput bytes')
tcpv4Segments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 16))
tcpv4SegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsVal.setDescription('Saved segments')
tcpv4SegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsMax.setDescription('Saved segments')
tcpv4SegmentsPayload = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 17))
tcpv4SegmentsPayloadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 17, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsPayloadVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsPayloadVal.setDescription('Saved segments with payload')
tcpv4SegmentsPayloadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsPayloadMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsPayloadMax.setDescription('Saved segments with payload')
tcpv4SegmentsDropped = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 18))
tcpv4SegmentsDroppedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsDroppedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsDroppedVal.setDescription('Ignored segments')
tcpv4SegmentsDroppedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsDroppedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsDroppedMom.setDescription('Ignored segments')
tcpv4SegmentsDroppedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentsDroppedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentsDroppedMax.setDescription('Ignored segments')
tcpv4PacketAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 19))
tcpv4PacketAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketAllocFailVal.setDescription('Packet allocation failures')
tcpv4PacketAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketAllocFailMom.setDescription('Packet allocation failures')
tcpv4PacketAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4PacketAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4PacketAllocFailMax.setDescription('Packet allocation failures')
tcpv4UntrackedGoodput = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 23))
tcpv4UntrackedGoodputVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedGoodputVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedGoodputVal.setDescription('Untracked bytes (goodput)')
tcpv4UntrackedGoodputMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedGoodputMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedGoodputMom.setDescription('Untracked bytes (goodput)')
tcpv4UntrackedGoodputMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedGoodputMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedGoodputMax.setDescription('Untracked bytes (goodput)')
tcpv4UntrackedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 24))
tcpv4UntrackedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedBytesVal.setDescription('Untracked bytes')
tcpv4UntrackedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedBytesMom.setDescription('Untracked bytes')
tcpv4UntrackedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4UntrackedBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4UntrackedBytesMax.setDescription('Untracked bytes')
tcpv4CorruptOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 25))
tcpv4CorruptOptionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptOptionsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptOptionsVal.setDescription('Packets with corrupt options')
tcpv4CorruptOptionsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptOptionsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptOptionsMom.setDescription('Packets with corrupt options')
tcpv4CorruptOptionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptOptionsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptOptionsMax.setDescription('Packets with corrupt options')
tcpv4CorruptConn = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 26))
tcpv4CorruptConnVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptConnVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptConnVal.setDescription('Packets with corrupt conn')
tcpv4CorruptConnMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptConnMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptConnMom.setDescription('Packets with corrupt conn')
tcpv4CorruptConnMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CorruptConnMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4CorruptConnMax.setDescription('Packets with corrupt conn')
tcpv4SegmentedConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 27))
tcpv4SegmentedConnectionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentedConnectionsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentedConnectionsVal.setDescription('Connections with segments')
tcpv4SegmentedConnectionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentedConnectionsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentedConnectionsMax.setDescription('Connections with segments')
tcpv4OutOfWindowPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 28))
tcpv4OutOfWindowPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsVal.setDescription('Out of window packets (ignored)')
tcpv4OutOfWindowPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsMom.setDescription('Out of window packets (ignored)')
tcpv4OutOfWindowPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4OutOfWindowPacketsMax.setDescription('Out of window packets (ignored)')
tcpv4RefusedFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 29))
tcpv4RefusedFilterVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedFilterVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedFilterVal.setDescription('Packets refused by lowlevel filter')
tcpv4RefusedFilterMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedFilterMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedFilterMom.setDescription('Packets refused by lowlevel filter')
tcpv4RefusedFilterMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RefusedFilterMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RefusedFilterMax.setDescription('Packets refused by lowlevel filter')
tcpv4SynExisting = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 32))
tcpv4SynExistingVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SynExistingVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SynExistingVal.setDescription('SYN packets for existing connections')
tcpv4SynExistingMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SynExistingMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4SynExistingMom.setDescription('SYN packets for existing connections')
tcpv4SynExistingMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SynExistingMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SynExistingMax.setDescription('SYN packets for existing connections')
tcpv4SegmentAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 33))
tcpv4SegmentAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 33, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentAllocFailVal.setDescription('Segment allocation failures')
tcpv4SegmentAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 33, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentAllocFailMom.setDescription('Segment allocation failures')
tcpv4SegmentAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SegmentAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SegmentAllocFailMax.setDescription('Segment allocation failures')
tcpv4EnqueuedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 34))
tcpv4EnqueuedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 34, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsVal.setDescription('Enqueued segments')
tcpv4EnqueuedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 34, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsMom.setDescription('Enqueued segments')
tcpv4EnqueuedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4EnqueuedSegmentsMax.setDescription('Enqueued segments')
tcpv4DequeuedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 35))
tcpv4DequeuedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsVal.setDescription('Dequeued segments')
tcpv4DequeuedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsMom.setDescription('Dequeued segments')
tcpv4DequeuedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4DequeuedSegmentsMax.setDescription('Dequeued segments')
tcpv4DiscardedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 36))
tcpv4DiscardedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 36, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsVal.setDescription('Discarded segments')
tcpv4DiscardedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 36, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsMom.setDescription('Discarded segments')
tcpv4DiscardedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4DiscardedSegmentsMax.setDescription('Discarded segments')
tcpv4EmptyPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 37))
tcpv4EmptyPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 37, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EmptyPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4EmptyPacketsVal.setDescription('Packets without payload')
tcpv4EmptyPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 37, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EmptyPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4EmptyPacketsMom.setDescription('Packets without payload')
tcpv4EmptyPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EmptyPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4EmptyPacketsMax.setDescription('Packets without payload')
tcpv4OosPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 38))
tcpv4OosPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosPacketsVal.setDescription('Out-of-sync packets')
tcpv4OosPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosPacketsMom.setDescription('Out-of-sync packets')
tcpv4OosPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosPacketsMax.setDescription('Out-of-sync packets')
tcpv4OosBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 39))
tcpv4OosBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 39, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosBytesVal.setDescription('Out-of-sync bytes')
tcpv4OosBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 39, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosBytesMom.setDescription('Out-of-sync bytes')
tcpv4OosBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 39, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4OosBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4OosBytesMax.setDescription('Out-of-sync bytes')
tcpv4Retransmits = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 40))
tcpv4RetransmitsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RetransmitsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4RetransmitsVal.setDescription('Retransmitted packets')
tcpv4RetransmitsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RetransmitsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4RetransmitsMom.setDescription('Retransmitted packets')
tcpv4RetransmitsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4RetransmitsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4RetransmitsMax.setDescription('Retransmitted packets')
tcpv4Cwr = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 41))
tcpv4CwrVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CwrVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4CwrVal.setDescription('Congestion Window Reduced Packets')
tcpv4CwrMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CwrMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4CwrMom.setDescription('Congestion Window Reduced Packets')
tcpv4CwrMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4CwrMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4CwrMax.setDescription('Congestion Window Reduced Packets')
tcpv4Ecne = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 42))
tcpv4EcneVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 42, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EcneVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4EcneVal.setDescription('Explicit Congestion Notification Echo Packets')
tcpv4EcneMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 42, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EcneMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4EcneMom.setDescription('Explicit Congestion Notification Echo Packets')
tcpv4EcneMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 42, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4EcneMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4EcneMax.setDescription('Explicit Congestion Notification Echo Packets')
tcpv4SimOpen = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 43))
tcpv4SimOpenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 43, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SimOpenVal.setStatus('current')
if mibBuilder.loadTexts: tcpv4SimOpenVal.setDescription('Simultaneous Open')
tcpv4SimOpenMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 43, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SimOpenMom.setStatus('current')
if mibBuilder.loadTexts: tcpv4SimOpenMom.setDescription('Simultaneous Open')
tcpv4SimOpenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 48, 43, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv4SimOpenMax.setStatus('current')
if mibBuilder.loadTexts: tcpv4SimOpenMax.setDescription('Simultaneous Open')
tcpv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127))
tcpv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 1))
tcpv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketsVal.setDescription('RX packets')
tcpv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketsMom.setDescription('RX packets')
tcpv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketsMax.setDescription('RX packets')
tcpv6Bytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 2))
tcpv6BytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6BytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6BytesVal.setDescription('RX bytes')
tcpv6BytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6BytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6BytesMom.setDescription('RX bytes')
tcpv6BytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6BytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6BytesMax.setDescription('RX bytes')
tcpv6CreateAttempts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 4))
tcpv6CreateAttemptsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreateAttemptsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreateAttemptsVal.setDescription('Connection create attempts')
tcpv6CreateAttemptsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreateAttemptsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreateAttemptsMom.setDescription('Connection create attempts')
tcpv6CreateAttemptsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreateAttemptsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreateAttemptsMax.setDescription('Connection create attempts')
tcpv6Created = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 5))
tcpv6CreatedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreatedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreatedVal.setDescription('Connections created')
tcpv6CreatedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreatedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreatedMom.setDescription('Connections created')
tcpv6CreatedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CreatedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6CreatedMax.setDescription('Connections created')
tcpv6RefusedRuleset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 6))
tcpv6RefusedRulesetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedRulesetVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedRulesetVal.setDescription('Refused (ruleset)')
tcpv6RefusedRulesetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedRulesetMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedRulesetMom.setDescription('Refused (ruleset)')
tcpv6RefusedRulesetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedRulesetMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedRulesetMax.setDescription('Refused (ruleset)')
tcpv6RefusedShort = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 7))
tcpv6RefusedShortVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedShortVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedShortVal.setDescription('Refused (short)')
tcpv6RefusedShortMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedShortMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedShortMom.setDescription('Refused (short)')
tcpv6RefusedShortMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedShortMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedShortMax.setDescription('Refused (short)')
tcpv6RefusedBroadcast = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 8))
tcpv6RefusedBroadcastVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedBroadcastVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedBroadcastVal.setDescription('Refused (broadcast)')
tcpv6RefusedBroadcastMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedBroadcastMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedBroadcastMom.setDescription('Refused (broadcast)')
tcpv6RefusedBroadcastMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedBroadcastMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedBroadcastMax.setDescription('Refused (broadcast)')
tcpv6RefusedOffset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 9))
tcpv6RefusedOffsetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedOffsetVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedOffsetVal.setDescription('Refused (offset)')
tcpv6RefusedOffsetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedOffsetMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedOffsetMom.setDescription('Refused (offset)')
tcpv6RefusedOffsetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedOffsetMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedOffsetMax.setDescription('Refused (offset)')
tcpv6Rejected = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 10))
tcpv6RejectedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RejectedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RejectedVal.setDescription('Rejected packets')
tcpv6RejectedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RejectedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RejectedMom.setDescription('Rejected packets')
tcpv6RejectedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RejectedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RejectedMax.setDescription('Rejected packets')
tcpv6Lostsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 12))
tcpv6LostsyncVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 12, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6LostsyncVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6LostsyncVal.setDescription('Out-of-sync connections')
tcpv6LostsyncMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6LostsyncMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6LostsyncMax.setDescription('Out-of-sync connections')
tcpv6UntrackedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 13))
tcpv6UntrackedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedPacketsVal.setDescription('Untracked packets')
tcpv6UntrackedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedPacketsMom.setDescription('Untracked packets')
tcpv6UntrackedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedPacketsMax.setDescription('Untracked packets')
tcpv6GoodputPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 14))
tcpv6GoodputPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputPacketsVal.setDescription('Goodput packets')
tcpv6GoodputPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputPacketsMom.setDescription('Goodput packets')
tcpv6GoodputPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputPacketsMax.setDescription('Goodput packets')
tcpv6GoodputBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 15))
tcpv6GoodputBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputBytesVal.setDescription('Goodput bytes')
tcpv6GoodputBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputBytesMom.setDescription('Goodput bytes')
tcpv6GoodputBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6GoodputBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6GoodputBytesMax.setDescription('Goodput bytes')
tcpv6Segments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 16))
tcpv6SegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsVal.setDescription('Saved segments')
tcpv6SegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsMax.setDescription('Saved segments')
tcpv6SegmentsPayload = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 17))
tcpv6SegmentsPayloadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 17, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsPayloadVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsPayloadVal.setDescription('Saved segments with payload')
tcpv6SegmentsPayloadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsPayloadMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsPayloadMax.setDescription('Saved segments with payload')
tcpv6SegmentsDropped = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 18))
tcpv6SegmentsDroppedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsDroppedVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsDroppedVal.setDescription('Ignored segments')
tcpv6SegmentsDroppedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsDroppedMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsDroppedMom.setDescription('Ignored segments')
tcpv6SegmentsDroppedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentsDroppedMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentsDroppedMax.setDescription('Ignored segments')
tcpv6PacketAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 19))
tcpv6PacketAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketAllocFailVal.setDescription('Packet allocation failures')
tcpv6PacketAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketAllocFailMom.setDescription('Packet allocation failures')
tcpv6PacketAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6PacketAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6PacketAllocFailMax.setDescription('Packet allocation failures')
tcpv6UntrackedGoodput = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 23))
tcpv6UntrackedGoodputVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedGoodputVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedGoodputVal.setDescription('Untracked bytes (goodput)')
tcpv6UntrackedGoodputMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedGoodputMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedGoodputMom.setDescription('Untracked bytes (goodput)')
tcpv6UntrackedGoodputMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedGoodputMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedGoodputMax.setDescription('Untracked bytes (goodput)')
tcpv6UntrackedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 24))
tcpv6UntrackedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedBytesVal.setDescription('Untracked bytes')
tcpv6UntrackedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedBytesMom.setDescription('Untracked bytes')
tcpv6UntrackedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6UntrackedBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6UntrackedBytesMax.setDescription('Untracked bytes')
tcpv6CorruptOptions = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 25))
tcpv6CorruptOptionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptOptionsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptOptionsVal.setDescription('Packets with corrupt options')
tcpv6CorruptOptionsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptOptionsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptOptionsMom.setDescription('Packets with corrupt options')
tcpv6CorruptOptionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptOptionsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptOptionsMax.setDescription('Packets with corrupt options')
tcpv6CorruptConn = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 26))
tcpv6CorruptConnVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptConnVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptConnVal.setDescription('Packets with corrupt conn')
tcpv6CorruptConnMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptConnMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptConnMom.setDescription('Packets with corrupt conn')
tcpv6CorruptConnMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CorruptConnMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6CorruptConnMax.setDescription('Packets with corrupt conn')
tcpv6SegmentedConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 27))
tcpv6SegmentedConnectionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentedConnectionsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentedConnectionsVal.setDescription('Connections with segments')
tcpv6SegmentedConnectionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentedConnectionsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentedConnectionsMax.setDescription('Connections with segments')
tcpv6OutOfWindowPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 28))
tcpv6OutOfWindowPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsVal.setDescription('Out of window packets (ignored)')
tcpv6OutOfWindowPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsMom.setDescription('Out of window packets (ignored)')
tcpv6OutOfWindowPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6OutOfWindowPacketsMax.setDescription('Out of window packets (ignored)')
tcpv6RefusedFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 29))
tcpv6RefusedFilterVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedFilterVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedFilterVal.setDescription('Packets refused by lowlevel filter')
tcpv6RefusedFilterMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedFilterMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedFilterMom.setDescription('Packets refused by lowlevel filter')
tcpv6RefusedFilterMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RefusedFilterMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RefusedFilterMax.setDescription('Packets refused by lowlevel filter')
tcpv6SynExisting = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 32))
tcpv6SynExistingVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SynExistingVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SynExistingVal.setDescription('SYN packets for existing connections')
tcpv6SynExistingMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SynExistingMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6SynExistingMom.setDescription('SYN packets for existing connections')
tcpv6SynExistingMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SynExistingMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SynExistingMax.setDescription('SYN packets for existing connections')
tcpv6SegmentAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 33))
tcpv6SegmentAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 33, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentAllocFailVal.setDescription('Segment allocation failures')
tcpv6SegmentAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 33, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentAllocFailMom.setDescription('Segment allocation failures')
tcpv6SegmentAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SegmentAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SegmentAllocFailMax.setDescription('Segment allocation failures')
tcpv6EnqueuedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 34))
tcpv6EnqueuedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 34, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsVal.setDescription('Enqueued segments')
tcpv6EnqueuedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 34, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsMom.setDescription('Enqueued segments')
tcpv6EnqueuedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6EnqueuedSegmentsMax.setDescription('Enqueued segments')
tcpv6DequeuedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 35))
tcpv6DequeuedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsVal.setDescription('Dequeued segments')
tcpv6DequeuedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsMom.setDescription('Dequeued segments')
tcpv6DequeuedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6DequeuedSegmentsMax.setDescription('Dequeued segments')
tcpv6DiscardedSegments = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 36))
tcpv6DiscardedSegmentsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 36, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsVal.setDescription('Discarded segments')
tcpv6DiscardedSegmentsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 36, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsMom.setDescription('Discarded segments')
tcpv6DiscardedSegmentsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6DiscardedSegmentsMax.setDescription('Discarded segments')
tcpv6EmptyPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 37))
tcpv6EmptyPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 37, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EmptyPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6EmptyPacketsVal.setDescription('Packets without payload')
tcpv6EmptyPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 37, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EmptyPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6EmptyPacketsMom.setDescription('Packets without payload')
tcpv6EmptyPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EmptyPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6EmptyPacketsMax.setDescription('Packets without payload')
tcpv6OosPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 38))
tcpv6OosPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosPacketsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosPacketsVal.setDescription('Out-of-sync packets')
tcpv6OosPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosPacketsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosPacketsMom.setDescription('Out-of-sync packets')
tcpv6OosPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosPacketsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosPacketsMax.setDescription('Out-of-sync packets')
tcpv6OosBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 39))
tcpv6OosBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 39, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosBytesVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosBytesVal.setDescription('Out-of-sync bytes')
tcpv6OosBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 39, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosBytesMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosBytesMom.setDescription('Out-of-sync bytes')
tcpv6OosBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 39, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6OosBytesMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6OosBytesMax.setDescription('Out-of-sync bytes')
tcpv6Retransmits = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 40))
tcpv6RetransmitsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RetransmitsVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6RetransmitsVal.setDescription('Retransmitted packets')
tcpv6RetransmitsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RetransmitsMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6RetransmitsMom.setDescription('Retransmitted packets')
tcpv6RetransmitsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6RetransmitsMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6RetransmitsMax.setDescription('Retransmitted packets')
tcpv6Cwr = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 41))
tcpv6CwrVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CwrVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6CwrVal.setDescription('Congestion Window Reduced Packets')
tcpv6CwrMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CwrMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6CwrMom.setDescription('Congestion Window Reduced Packets')
tcpv6CwrMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6CwrMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6CwrMax.setDescription('Congestion Window Reduced Packets')
tcpv6Ecne = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 42))
tcpv6EcneVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 42, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EcneVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6EcneVal.setDescription('Explicit Congestion Notification Echo Packets')
tcpv6EcneMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 42, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EcneMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6EcneMom.setDescription('Explicit Congestion Notification Echo Packets')
tcpv6EcneMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 42, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6EcneMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6EcneMax.setDescription('Explicit Congestion Notification Echo Packets')
tcpv6SimOpen = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 43))
tcpv6SimOpenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 43, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SimOpenVal.setStatus('current')
if mibBuilder.loadTexts: tcpv6SimOpenVal.setDescription('Simultaneous Open')
tcpv6SimOpenMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 43, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SimOpenMom.setStatus('current')
if mibBuilder.loadTexts: tcpv6SimOpenMom.setDescription('Simultaneous Open')
tcpv6SimOpenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 127, 43, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpv6SimOpenMax.setStatus('current')
if mibBuilder.loadTexts: tcpv6SimOpenMax.setDescription('Simultaneous Open')
connection = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56))
connectionCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 1))
connectionCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCountVal.setStatus('current')
if mibBuilder.loadTexts: connectionCountVal.setDescription('Current count')
connectionCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCountMax.setStatus('current')
if mibBuilder.loadTexts: connectionCountMax.setDescription('Current count')
connectionEstCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 2))
connectionEstCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionEstCountVal.setStatus('current')
if mibBuilder.loadTexts: connectionEstCountVal.setDescription('Current established count')
connectionEstCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionEstCountMax.setStatus('current')
if mibBuilder.loadTexts: connectionEstCountMax.setDescription('Current established count')
connectionCreateAttemptsInbound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 3))
connectionCreateAttemptsInboundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsInboundVal.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsInboundVal.setDescription('Create attempts inbound')
connectionCreateAttemptsInboundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsInboundMom.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsInboundMom.setDescription('Create attempts inbound')
connectionCreateAttemptsInboundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsInboundMax.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsInboundMax.setDescription('Create attempts inbound')
connectionCreateAttemptsOutbound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 4))
connectionCreateAttemptsOutboundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundVal.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundVal.setDescription('Create attempts outbound')
connectionCreateAttemptsOutboundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundMom.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundMom.setDescription('Create attempts outbound')
connectionCreateAttemptsOutboundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundMax.setStatus('current')
if mibBuilder.loadTexts: connectionCreateAttemptsOutboundMax.setDescription('Create attempts outbound')
connectionRefusedProt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 5))
connectionRefusedProtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedProtVal.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedProtVal.setDescription('Attempts refused (connprot)')
connectionRefusedProtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedProtMom.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedProtMom.setDescription('Attempts refused (connprot)')
connectionRefusedProtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedProtMax.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedProtMax.setDescription('Attempts refused (connprot)')
connectionRefusedFull = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 6))
connectionRefusedFullVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedFullVal.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedFullVal.setDescription('Attempts refused (resources)')
connectionRefusedFullMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedFullMom.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedFullMom.setDescription('Attempts refused (resources)')
connectionRefusedFullMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedFullMax.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedFullMax.setDescription('Attempts refused (resources)')
connectionCreatedInbound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 7))
connectionCreatedInboundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedInboundVal.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedInboundVal.setDescription('Created inbound')
connectionCreatedInboundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedInboundMom.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedInboundMom.setDescription('Created inbound')
connectionCreatedInboundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedInboundMax.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedInboundMax.setDescription('Created inbound')
connectionCreatedOutbound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 8))
connectionCreatedOutboundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedOutboundVal.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedOutboundVal.setDescription('Created outbound')
connectionCreatedOutboundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedOutboundMom.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedOutboundMom.setDescription('Created outbound')
connectionCreatedOutboundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionCreatedOutboundMax.setStatus('current')
if mibBuilder.loadTexts: connectionCreatedOutboundMax.setDescription('Created outbound')
connectionLruAllocs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 9))
connectionLruAllocsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLruAllocsVal.setStatus('current')
if mibBuilder.loadTexts: connectionLruAllocsVal.setDescription('Connections allocated from LRU')
connectionLruAllocsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLruAllocsMom.setStatus('current')
if mibBuilder.loadTexts: connectionLruAllocsMom.setDescription('Connections allocated from LRU')
connectionLruAllocsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLruAllocsMax.setStatus('current')
if mibBuilder.loadTexts: connectionLruAllocsMax.setDescription('Connections allocated from LRU')
connectionLookups = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 10))
connectionLookupsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLookupsVal.setStatus('current')
if mibBuilder.loadTexts: connectionLookupsVal.setDescription('Lookups')
connectionLookupsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLookupsMom.setStatus('current')
if mibBuilder.loadTexts: connectionLookupsMom.setDescription('Lookups')
connectionLookupsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionLookupsMax.setStatus('current')
if mibBuilder.loadTexts: connectionLookupsMax.setDescription('Lookups')
connectionEstablished = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 11))
connectionEstablishedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionEstablishedVal.setStatus('current')
if mibBuilder.loadTexts: connectionEstablishedVal.setDescription('Made established')
connectionEstablishedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionEstablishedMom.setStatus('current')
if mibBuilder.loadTexts: connectionEstablishedMom.setDescription('Made established')
connectionEstablishedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionEstablishedMax.setStatus('current')
if mibBuilder.loadTexts: connectionEstablishedMax.setDescription('Made established')
connectionUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 12))
connectionUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: connectionUpdatesVal.setDescription('Updates sent')
connectionUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: connectionUpdatesMom.setDescription('Updates sent')
connectionUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: connectionUpdatesMax.setDescription('Updates sent')
connectionTtlTimeouts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 13))
connectionTtlTimeoutsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionTtlTimeoutsVal.setStatus('current')
if mibBuilder.loadTexts: connectionTtlTimeoutsVal.setDescription('TTL timeouts')
connectionTtlTimeoutsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionTtlTimeoutsMom.setStatus('current')
if mibBuilder.loadTexts: connectionTtlTimeoutsMom.setDescription('TTL timeouts')
connectionTtlTimeoutsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionTtlTimeoutsMax.setStatus('current')
if mibBuilder.loadTexts: connectionTtlTimeoutsMax.setDescription('TTL timeouts')
connectionProtEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 14))
connectionProtEnablesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionProtEnablesVal.setStatus('current')
if mibBuilder.loadTexts: connectionProtEnablesVal.setDescription('Protection enabled')
connectionProtEnablesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionProtEnablesMom.setStatus('current')
if mibBuilder.loadTexts: connectionProtEnablesMom.setDescription('Protection enabled')
connectionProtEnablesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionProtEnablesMax.setStatus('current')
if mibBuilder.loadTexts: connectionProtEnablesMax.setDescription('Protection enabled')
connectionNotFound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 15))
connectionNotFoundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionNotFoundVal.setStatus('current')
if mibBuilder.loadTexts: connectionNotFoundVal.setDescription('Failed lookups')
connectionNotFoundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionNotFoundMom.setStatus('current')
if mibBuilder.loadTexts: connectionNotFoundMom.setDescription('Failed lookups')
connectionNotFoundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionNotFoundMax.setStatus('current')
if mibBuilder.loadTexts: connectionNotFoundMax.setDescription('Failed lookups')
connectionRefusedExisting = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 18))
connectionRefusedExistingVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedExistingVal.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedExistingVal.setDescription('Attempts refused (already existed)')
connectionRefusedExistingMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedExistingMom.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedExistingMom.setDescription('Attempts refused (already existed)')
connectionRefusedExistingMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedExistingMax.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedExistingMax.setDescription('Attempts refused (already existed)')
connectionRefusedRuleset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 19))
connectionRefusedRulesetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedRulesetVal.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedRulesetVal.setDescription('Attempts refused (ruleset)')
connectionRefusedRulesetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedRulesetMom.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedRulesetMom.setDescription('Attempts refused (ruleset)')
connectionRefusedRulesetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRefusedRulesetMax.setStatus('current')
if mibBuilder.loadTexts: connectionRefusedRulesetMax.setDescription('Attempts refused (ruleset)')
connectionRedirected = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 20))
connectionRedirectedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 20, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRedirectedVal.setStatus('current')
if mibBuilder.loadTexts: connectionRedirectedVal.setDescription('Redirected')
connectionRedirectedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRedirectedMax.setStatus('current')
if mibBuilder.loadTexts: connectionRedirectedMax.setDescription('Redirected')
connectionRedirectCollisions = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 21))
connectionRedirectCollisionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 21, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRedirectCollisionsVal.setStatus('current')
if mibBuilder.loadTexts: connectionRedirectCollisionsVal.setDescription('Refused redirects (collision)')
connectionRedirectCollisionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionRedirectCollisionsMax.setStatus('current')
if mibBuilder.loadTexts: connectionRedirectCollisionsMax.setDescription('Refused redirects (collision)')
connectionUnestablished = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 24))
connectionUnestablishedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUnestablishedVal.setStatus('current')
if mibBuilder.loadTexts: connectionUnestablishedVal.setDescription('Made unestablished')
connectionUnestablishedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUnestablishedMom.setStatus('current')
if mibBuilder.loadTexts: connectionUnestablishedMom.setDescription('Made unestablished')
connectionUnestablishedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionUnestablishedMax.setStatus('current')
if mibBuilder.loadTexts: connectionUnestablishedMax.setDescription('Made unestablished')
connectionDestroyedEst = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 25))
connectionDestroyedEstVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionDestroyedEstVal.setStatus('current')
if mibBuilder.loadTexts: connectionDestroyedEstVal.setDescription('Destroyed established')
connectionDestroyedEstMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionDestroyedEstMax.setStatus('current')
if mibBuilder.loadTexts: connectionDestroyedEstMax.setDescription('Destroyed established')
connectionInvalidRulesetUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 26))
connectionInvalidRulesetUpdateVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateVal.setStatus('current')
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateVal.setDescription('Updates with invalid ruleset')
connectionInvalidRulesetUpdateMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateMom.setStatus('current')
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateMom.setDescription('Updates with invalid ruleset')
connectionInvalidRulesetUpdateMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateMax.setStatus('current')
if mibBuilder.loadTexts: connectionInvalidRulesetUpdateMax.setDescription('Updates with invalid ruleset')
connectionOrphaned = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 27))
connectionOrphanedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionOrphanedVal.setStatus('current')
if mibBuilder.loadTexts: connectionOrphanedVal.setDescription('Connections without timer')
connectionOrphanedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionOrphanedMax.setStatus('current')
if mibBuilder.loadTexts: connectionOrphanedMax.setDescription('Connections without timer')
connectionFailureShuntPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 40))
connectionFailureShuntPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntPacketsVal.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntPacketsVal.setDescription('Shunted packets (connection create failure)')
connectionFailureShuntPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntPacketsMom.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntPacketsMom.setDescription('Shunted packets (connection create failure)')
connectionFailureShuntPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntPacketsMax.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntPacketsMax.setDescription('Shunted packets (connection create failure)')
connectionFailureShuntBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 41))
connectionFailureShuntBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntBytesVal.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntBytesVal.setDescription('Shunted bytes (connection create failure)')
connectionFailureShuntBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntBytesMom.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntBytesMom.setDescription('Shunted bytes (connection create failure)')
connectionFailureShuntBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 56, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connectionFailureShuntBytesMax.setStatus('current')
if mibBuilder.loadTexts: connectionFailureShuntBytesMax.setDescription('Shunted bytes (connection create failure)')
connsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60))
connsyncSeenSnt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 1))
connsyncSeenSntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenSntVal.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenSntVal.setDescription('Seen sent')
connsyncSeenSntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenSntMom.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenSntMom.setDescription('Seen sent')
connsyncSeenSntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenSntMax.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenSntMax.setDescription('Seen sent')
connsyncSeenRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 2))
connsyncSeenRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenRcvVal.setDescription('Seen received')
connsyncSeenRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenRcvMom.setDescription('Seen received')
connsyncSeenRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenRcvMax.setDescription('Seen received')
connsyncUpdateSnt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 3))
connsyncUpdateSntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateSntVal.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateSntVal.setDescription('Updates Sent')
connsyncUpdateSntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateSntMom.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateSntMom.setDescription('Updates Sent')
connsyncUpdateSntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateSntMax.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateSntMax.setDescription('Updates Sent')
connsyncSeenackRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 4))
connsyncSeenackRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenackRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenackRcvVal.setDescription('First updates received')
connsyncSeenackRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenackRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenackRcvMom.setDescription('First updates received')
connsyncSeenackRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSeenackRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncSeenackRcvMax.setDescription('First updates received')
connsyncUpdateRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 5))
connsyncUpdateRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateRcvVal.setDescription('Updates received')
connsyncUpdateRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateRcvMom.setDescription('Updates received')
connsyncUpdateRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUpdateRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncUpdateRcvMax.setDescription('Updates received')
connsyncUnknownUpdateRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 6))
connsyncUnknownUpdateRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvVal.setDescription('Updates for unknown connections received')
connsyncUnknownUpdateRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvMom.setDescription('Updates for unknown connections received')
connsyncUnknownUpdateRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncUnknownUpdateRcvMax.setDescription('Updates for unknown connections received')
connsyncOutofsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 7))
connsyncOutofsyncVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncVal.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncVal.setDescription('Out of syncs')
connsyncOutofsyncMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncMom.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncMom.setDescription('Out of syncs')
connsyncOutofsyncMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncMax.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncMax.setDescription('Out of syncs')
connsyncSynced = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 8))
connsyncSyncedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSyncedVal.setStatus('current')
if mibBuilder.loadTexts: connsyncSyncedVal.setDescription('Connections actively syncing')
connsyncSyncedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncSyncedMax.setStatus('current')
if mibBuilder.loadTexts: connsyncSyncedMax.setDescription('Connections actively syncing')
connsyncDoubleSeen = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 9))
connsyncDoubleSeenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncDoubleSeenVal.setStatus('current')
if mibBuilder.loadTexts: connsyncDoubleSeenVal.setDescription('Double seen')
connsyncDoubleSeenMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncDoubleSeenMom.setStatus('current')
if mibBuilder.loadTexts: connsyncDoubleSeenMom.setDescription('Double seen')
connsyncDoubleSeenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncDoubleSeenMax.setStatus('current')
if mibBuilder.loadTexts: connsyncDoubleSeenMax.setDescription('Double seen')
connsyncHelloRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 10))
connsyncHelloRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncHelloRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncHelloRcvVal.setDescription('Hello received')
connsyncHelloRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncHelloRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncHelloRcvMom.setDescription('Hello received')
connsyncHelloRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncHelloRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncHelloRcvMax.setDescription('Hello received')
connsyncOutofsyncMissedRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 11))
connsyncOutofsyncMissedRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvVal.setDescription('Out of sync - missed rcv/late collision')
connsyncOutofsyncMissedRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvMom.setDescription('Out of sync - missed rcv/late collision')
connsyncOutofsyncMissedRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncMissedRcvMax.setDescription('Out of sync - missed rcv/late collision')
connsyncOutofsyncCollision = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 12))
connsyncOutofsyncCollisionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncCollisionVal.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncCollisionVal.setDescription('Out of sync - collision')
connsyncOutofsyncCollisionMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncCollisionMom.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncCollisionMom.setDescription('Out of sync - collision')
connsyncOutofsyncCollisionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncOutofsyncCollisionMax.setStatus('current')
if mibBuilder.loadTexts: connsyncOutofsyncCollisionMax.setDescription('Out of sync - collision')
connsyncBadAdler = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 13))
connsyncBadAdlerVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadAdlerVal.setStatus('current')
if mibBuilder.loadTexts: connsyncBadAdlerVal.setDescription('Updates for mismatching ARM')
connsyncBadAdlerMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadAdlerMom.setStatus('current')
if mibBuilder.loadTexts: connsyncBadAdlerMom.setDescription('Updates for mismatching ARM')
connsyncBadAdlerMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadAdlerMax.setStatus('current')
if mibBuilder.loadTexts: connsyncBadAdlerMax.setDescription('Updates for mismatching ARM')
connsyncPktOverflow = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 14))
connsyncPktOverflowVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncPktOverflowVal.setStatus('current')
if mibBuilder.loadTexts: connsyncPktOverflowVal.setDescription('Update packet overflow')
connsyncPktOverflowMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncPktOverflowMom.setStatus('current')
if mibBuilder.loadTexts: connsyncPktOverflowMom.setDescription('Update packet overflow')
connsyncPktOverflowMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncPktOverflowMax.setStatus('current')
if mibBuilder.loadTexts: connsyncPktOverflowMax.setDescription('Update packet overflow')
connsyncCorruptPkt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 15))
connsyncCorruptPktVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncCorruptPktVal.setStatus('current')
if mibBuilder.loadTexts: connsyncCorruptPktVal.setDescription('Corrupt packet received')
connsyncCorruptPktMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncCorruptPktMom.setStatus('current')
if mibBuilder.loadTexts: connsyncCorruptPktMom.setDescription('Corrupt packet received')
connsyncCorruptPktMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncCorruptPktMax.setStatus('current')
if mibBuilder.loadTexts: connsyncCorruptPktMax.setDescription('Corrupt packet received')
connsyncConnNotfound = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 16))
connsyncConnNotfoundVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncConnNotfoundVal.setStatus('current')
if mibBuilder.loadTexts: connsyncConnNotfoundVal.setDescription('Connection not found')
connsyncConnNotfoundMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncConnNotfoundMom.setStatus('current')
if mibBuilder.loadTexts: connsyncConnNotfoundMom.setDescription('Connection not found')
connsyncConnNotfoundMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncConnNotfoundMax.setStatus('current')
if mibBuilder.loadTexts: connsyncConnNotfoundMax.setDescription('Connection not found')
connsyncBadVer = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 17))
connsyncBadVerVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadVerVal.setStatus('current')
if mibBuilder.loadTexts: connsyncBadVerVal.setDescription('Received packets with incompatible version')
connsyncBadVerMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadVerMom.setStatus('current')
if mibBuilder.loadTexts: connsyncBadVerMom.setDescription('Received packets with incompatible version')
connsyncBadVerMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadVerMax.setStatus('current')
if mibBuilder.loadTexts: connsyncBadVerMax.setDescription('Received packets with incompatible version')
connsyncBadType = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 18))
connsyncBadTypeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadTypeVal.setStatus('current')
if mibBuilder.loadTexts: connsyncBadTypeVal.setDescription('Received packets with incorrect ethernet type')
connsyncBadTypeMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadTypeMom.setStatus('current')
if mibBuilder.loadTexts: connsyncBadTypeMom.setDescription('Received packets with incorrect ethernet type')
connsyncBadTypeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadTypeMax.setStatus('current')
if mibBuilder.loadTexts: connsyncBadTypeMax.setDescription('Received packets with incorrect ethernet type')
connsyncBadEngineid = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 19))
connsyncBadEngineidVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadEngineidVal.setStatus('current')
if mibBuilder.loadTexts: connsyncBadEngineidVal.setDescription('Received packets with own engine-id')
connsyncBadEngineidMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadEngineidMom.setStatus('current')
if mibBuilder.loadTexts: connsyncBadEngineidMom.setDescription('Received packets with own engine-id')
connsyncBadEngineidMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncBadEngineidMax.setStatus('current')
if mibBuilder.loadTexts: connsyncBadEngineidMax.setDescription('Received packets with own engine-id')
connsyncUdpSnt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 20))
connsyncUdpSntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpSntVal.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpSntVal.setDescription('UDP sent')
connsyncUdpSntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpSntMom.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpSntMom.setDescription('UDP sent')
connsyncUdpSntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpSntMax.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpSntMax.setDescription('UDP sent')
connsyncUdpRcv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 21))
connsyncUdpRcvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpRcvVal.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpRcvVal.setDescription('UDP received')
connsyncUdpRcvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpRcvMom.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpRcvMom.setDescription('UDP received')
connsyncUdpRcvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 60, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: connsyncUdpRcvMax.setStatus('current')
if mibBuilder.loadTexts: connsyncUdpRcvMax.setDescription('UDP received')
ruleset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64))
rulesetReceived = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 1))
rulesetReceivedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetReceivedVal.setStatus('current')
if mibBuilder.loadTexts: rulesetReceivedVal.setDescription('RX packets')
rulesetReceivedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetReceivedMom.setStatus('current')
if mibBuilder.loadTexts: rulesetReceivedMom.setDescription('RX packets')
rulesetReceivedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetReceivedMax.setStatus('current')
if mibBuilder.loadTexts: rulesetReceivedMax.setDescription('RX packets')
rulesetFwrules = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 5))
rulesetFwrulesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetFwrulesVal.setStatus('current')
if mibBuilder.loadTexts: rulesetFwrulesVal.setDescription('FW rules loaded')
rulesetFwrulesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetFwrulesMax.setStatus('current')
if mibBuilder.loadTexts: rulesetFwrulesMax.setDescription('FW rules loaded')
rulesetShapingrules = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 6))
rulesetShapingrulesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetShapingrulesVal.setStatus('current')
if mibBuilder.loadTexts: rulesetShapingrulesVal.setDescription('Shaping rules loaded')
rulesetShapingrulesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetShapingrulesMax.setStatus('current')
if mibBuilder.loadTexts: rulesetShapingrulesMax.setDescription('Shaping rules loaded')
rulesetClienttreeSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 7))
rulesetClienttreeSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 7, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetClienttreeSizeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetClienttreeSizeVal.setDescription('Nodes in Client IP-tree')
rulesetClienttreeSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetClienttreeSizeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetClienttreeSizeMax.setDescription('Nodes in Client IP-tree')
rulesetServertreeSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 8))
rulesetServertreeSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetServertreeSizeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetServertreeSizeVal.setDescription('Nodes in Server IP-tree')
rulesetServertreeSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetServertreeSizeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetServertreeSizeMax.setDescription('Nodes in Server IP-tree')
rulesetBgpNumpaths = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 9))
rulesetBgpNumpathsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpNumpathsVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpNumpathsVal.setDescription('Number of ASPaths')
rulesetBgpNumpathsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpNumpathsMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpNumpathsMax.setDescription('Number of ASPaths')
rulesetBgpTreesize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 10))
rulesetBgpTreesizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpTreesizeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpTreesizeVal.setDescription('Nodes in BGP-tree')
rulesetBgpTreesizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpTreesizeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpTreesizeMax.setDescription('Nodes in BGP-tree')
rulesetBgpNumLookup = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 12))
rulesetBgpNumLookupVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpNumLookupVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpNumLookupVal.setDescription('BGP path lookups')
rulesetBgpNumLookupMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpNumLookupMom.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpNumLookupMom.setDescription('BGP path lookups')
rulesetBgpNumLookupMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBgpNumLookupMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBgpNumLookupMax.setDescription('BGP path lookups')
rulesetPropChecks = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 13))
rulesetPropChecksVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetPropChecksVal.setStatus('current')
if mibBuilder.loadTexts: rulesetPropChecksVal.setDescription('Property checks')
rulesetPropChecksMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetPropChecksMom.setStatus('current')
if mibBuilder.loadTexts: rulesetPropChecksMom.setDescription('Property checks')
rulesetPropChecksMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetPropChecksMax.setStatus('current')
if mibBuilder.loadTexts: rulesetPropChecksMax.setDescription('Property checks')
rulesetBitmasksAvg = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 15))
rulesetBitmasksAvgVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 15, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBitmasksAvgVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBitmasksAvgVal.setDescription('Bitmask average number of words')
rulesetBitmasksAvgMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBitmasksAvgMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBitmasksAvgMax.setDescription('Bitmask average number of words')
rulesetBitmasksMax = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 16))
rulesetBitmasksMaxVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBitmasksMaxVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBitmasksMaxVal.setDescription('Bitmask max number of words')
rulesetBitmasksMaxMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBitmasksMaxMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBitmasksMaxMax.setDescription('Bitmask max number of words')
rulesetDynipAdd = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 17))
rulesetDynipAddVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAddVal.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAddVal.setDescription('Dynamic ips added')
rulesetDynipAddMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAddMom.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAddMom.setDescription('Dynamic ips added')
rulesetDynipAddMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAddMax.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAddMax.setDescription('Dynamic ips added')
rulesetDynipRemove = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 18))
rulesetDynipRemoveVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipRemoveVal.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipRemoveVal.setDescription('Dynamic ips removed')
rulesetDynipRemoveMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipRemoveMom.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipRemoveMom.setDescription('Dynamic ips removed')
rulesetDynipRemoveMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipRemoveMax.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipRemoveMax.setDescription('Dynamic ips removed')
rulesetLastUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 22))
rulesetLastUpdateVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 22, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetLastUpdateVal.setStatus('current')
if mibBuilder.loadTexts: rulesetLastUpdateVal.setDescription('Last ruleset reload')
rulesetDynipNum = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 23))
rulesetDynipNumVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 23, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipNumVal.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipNumVal.setDescription('Dynamic ips current')
rulesetDynipNumMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipNumMax.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipNumMax.setDescription('Dynamic ips current')
rulesetStatisticsrules = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 24))
rulesetStatisticsrulesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 24, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetStatisticsrulesVal.setStatus('current')
if mibBuilder.loadTexts: rulesetStatisticsrulesVal.setDescription('Statistics rules loaded')
rulesetStatisticsrulesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetStatisticsrulesMax.setStatus('current')
if mibBuilder.loadTexts: rulesetStatisticsrulesMax.setDescription('Statistics rules loaded')
rulesetLocaltreeSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 25))
rulesetLocaltreeSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetLocaltreeSizeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetLocaltreeSizeVal.setDescription('Nodes in Local IP-tree')
rulesetLocaltreeSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetLocaltreeSizeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetLocaltreeSizeMax.setDescription('Nodes in Local IP-tree')
rulesetStatisticsRuleOverflow = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 26))
rulesetStatisticsRuleOverflowVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowVal.setStatus('current')
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowVal.setDescription('Too many matching statistics rules')
rulesetStatisticsRuleOverflowMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowMom.setStatus('current')
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowMom.setDescription('Too many matching statistics rules')
rulesetStatisticsRuleOverflowMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowMax.setStatus('current')
if mibBuilder.loadTexts: rulesetStatisticsRuleOverflowMax.setDescription('Too many matching statistics rules')
rulesetConnStatechange = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 27))
rulesetConnStatechangeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 27, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeVal.setDescription('Flow ruleset statechanges')
rulesetConnStatechangeMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 27, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeMom.setDescription('Flow ruleset statechanges')
rulesetConnStatechangeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeMax.setDescription('Flow ruleset statechanges')
rulesetConnStatechangeProp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 28))
rulesetConnStatechangePropVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangePropVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangePropVal.setDescription('Flow ruleset statechanges (prop)')
rulesetConnStatechangePropMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangePropMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangePropMom.setDescription('Flow ruleset statechanges (prop)')
rulesetConnStatechangePropMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangePropMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangePropMax.setDescription('Flow ruleset statechanges (prop)')
rulesetConnStatechangeService = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 29))
rulesetConnStatechangeServiceVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeServiceVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeServiceVal.setDescription('Flow ruleset statechanges (service)')
rulesetConnStatechangeServiceMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeServiceMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeServiceMom.setDescription('Flow ruleset statechanges (service)')
rulesetConnStatechangeServiceMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeServiceMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeServiceMax.setDescription('Flow ruleset statechanges (service)')
rulesetConnStatechangeFlags = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 30))
rulesetConnStatechangeFlagsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 30, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsVal.setDescription('Flow ruleset statechanges (flags)')
rulesetConnStatechangeFlagsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 30, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsMom.setDescription('Flow ruleset statechanges (flags)')
rulesetConnStatechangeFlagsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeFlagsMax.setDescription('Flow ruleset statechanges (flags)')
rulesetConnStatechangeAspath = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 31))
rulesetConnStatechangeAspathVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 31, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeAspathVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeAspathVal.setDescription('Flow ruleset statechanges (aspath)')
rulesetConnStatechangeAspathMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 31, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeAspathMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeAspathMom.setDescription('Flow ruleset statechanges (aspath)')
rulesetConnStatechangeAspathMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 31, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeAspathMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeAspathMax.setDescription('Flow ruleset statechanges (aspath)')
rulesetRecalcVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 32))
rulesetRecalcVersionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcVersionVal.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcVersionVal.setDescription('Flow ruleset recalcs from version')
rulesetRecalcVersionMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcVersionMom.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcVersionMom.setDescription('Flow ruleset recalcs from version')
rulesetRecalcVersionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcVersionMax.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcVersionMax.setDescription('Flow ruleset recalcs from version')
rulesetRecalcTime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 33))
rulesetRecalcTimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 33, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcTimeVal.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcTimeVal.setDescription('Flow ruleset recalcs from time')
rulesetRecalcTimeMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 33, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcTimeMom.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcTimeMom.setDescription('Flow ruleset recalcs from time')
rulesetRecalcTimeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcTimeMax.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcTimeMax.setDescription('Flow ruleset recalcs from time')
rulesetRecalcBgp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 34))
rulesetRecalcBgpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 34, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcBgpVal.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcBgpVal.setDescription('Flow ruleset recalcs from bgp')
rulesetRecalcBgpMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 34, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcBgpMom.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcBgpMom.setDescription('Flow ruleset recalcs from bgp')
rulesetRecalcBgpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcBgpMax.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcBgpMax.setDescription('Flow ruleset recalcs from bgp')
rulesetRecalcUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 35))
rulesetRecalcUnknownVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcUnknownVal.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcUnknownVal.setDescription('Flow ruleset recalcs from state')
rulesetRecalcUnknownMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcUnknownMom.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcUnknownMom.setDescription('Flow ruleset recalcs from state')
rulesetRecalcUnknownMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetRecalcUnknownMax.setStatus('current')
if mibBuilder.loadTexts: rulesetRecalcUnknownMax.setDescription('Flow ruleset recalcs from state')
rulesetOutdatedService = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 36))
rulesetOutdatedServiceVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 36, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetOutdatedServiceVal.setStatus('current')
if mibBuilder.loadTexts: rulesetOutdatedServiceVal.setDescription('Ruleset recalcs with outdated service ruleset')
rulesetOutdatedServiceMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 36, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetOutdatedServiceMom.setStatus('current')
if mibBuilder.loadTexts: rulesetOutdatedServiceMom.setDescription('Ruleset recalcs with outdated service ruleset')
rulesetOutdatedServiceMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetOutdatedServiceMax.setStatus('current')
if mibBuilder.loadTexts: rulesetOutdatedServiceMax.setDescription('Ruleset recalcs with outdated service ruleset')
rulesetSubscribers = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 37))
rulesetSubscribersVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 37, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetSubscribersVal.setStatus('current')
if mibBuilder.loadTexts: rulesetSubscribersVal.setDescription('Number of added subscribers')
rulesetSubscribersMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetSubscribersMax.setStatus('current')
if mibBuilder.loadTexts: rulesetSubscribersMax.setDescription('Number of added subscribers')
rulesetBadAspath = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 38))
rulesetBadAspathVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBadAspathVal.setStatus('current')
if mibBuilder.loadTexts: rulesetBadAspathVal.setDescription('Old or corrupted AS-path entry')
rulesetBadAspathMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBadAspathMom.setStatus('current')
if mibBuilder.loadTexts: rulesetBadAspathMom.setDescription('Old or corrupted AS-path entry')
rulesetBadAspathMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetBadAspathMax.setStatus('current')
if mibBuilder.loadTexts: rulesetBadAspathMax.setDescription('Old or corrupted AS-path entry')
rulesetConnStatechangeLinklevel = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 39))
rulesetConnStatechangeLinklevelVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 39, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelVal.setDescription('Flow ruleset statechanges (linklevel)')
rulesetConnStatechangeLinklevelMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 39, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelMom.setDescription('Flow ruleset statechanges (linklevel)')
rulesetConnStatechangeLinklevelMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 39, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeLinklevelMax.setDescription('Flow ruleset statechanges (linklevel)')
rulesetSubscriberAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 40))
rulesetSubscriberAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetSubscriberAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: rulesetSubscriberAllocFailVal.setDescription('Subscriber allocation failures')
rulesetSubscriberAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetSubscriberAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: rulesetSubscriberAllocFailMom.setDescription('Subscriber allocation failures')
rulesetSubscriberAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetSubscriberAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: rulesetSubscriberAllocFailMax.setDescription('Subscriber allocation failures')
rulesetDynipAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 41))
rulesetDynipAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAllocFailVal.setDescription('Dynamic ip loading failures (allocation failure)')
rulesetDynipAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAllocFailMom.setDescription('Dynamic ip loading failures (allocation failure)')
rulesetDynipAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipAllocFailMax.setDescription('Dynamic ip loading failures (allocation failure)')
rulesetDynipOversized = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 42))
rulesetDynipOversizedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 42, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipOversizedVal.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipOversizedVal.setDescription('Dynamic ip loading failures (oversized)')
rulesetDynipOversizedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 42, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipOversizedMom.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipOversizedMom.setDescription('Dynamic ip loading failures (oversized)')
rulesetDynipOversizedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 42, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetDynipOversizedMax.setStatus('current')
if mibBuilder.loadTexts: rulesetDynipOversizedMax.setDescription('Dynamic ip loading failures (oversized)')
rulesetNonexistentSubscriber = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 43))
rulesetNonexistentSubscriberVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 43, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetNonexistentSubscriberVal.setStatus('current')
if mibBuilder.loadTexts: rulesetNonexistentSubscriberVal.setDescription('Split on unknown subscriber')
rulesetNonexistentSubscriberMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 43, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetNonexistentSubscriberMom.setStatus('current')
if mibBuilder.loadTexts: rulesetNonexistentSubscriberMom.setDescription('Split on unknown subscriber')
rulesetNonexistentSubscriberMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 43, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetNonexistentSubscriberMax.setStatus('current')
if mibBuilder.loadTexts: rulesetNonexistentSubscriberMax.setDescription('Split on unknown subscriber')
rulesetConnStatechangeTtl = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 44))
rulesetConnStatechangeTtlVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 44, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeTtlVal.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeTtlVal.setDescription('Flow ruleset statechanges (ttl)')
rulesetConnStatechangeTtlMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 44, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeTtlMom.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeTtlMom.setDescription('Flow ruleset statechanges (ttl)')
rulesetConnStatechangeTtlMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 64, 44, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetConnStatechangeTtlMax.setStatus('current')
if mibBuilder.loadTexts: rulesetConnStatechangeTtlMax.setDescription('Flow ruleset statechanges (ttl)')
firewall = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80))
fwAccepts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 1))
fwAcceptsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwAcceptsVal.setStatus('current')
if mibBuilder.loadTexts: fwAcceptsVal.setDescription('Ruleset evaluations giving ACCEPT')
fwAcceptsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwAcceptsMom.setStatus('current')
if mibBuilder.loadTexts: fwAcceptsMom.setDescription('Ruleset evaluations giving ACCEPT')
fwAcceptsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwAcceptsMax.setStatus('current')
if mibBuilder.loadTexts: fwAcceptsMax.setDescription('Ruleset evaluations giving ACCEPT')
fwRejects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 2))
fwRejectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRejectsVal.setStatus('current')
if mibBuilder.loadTexts: fwRejectsVal.setDescription('Ruleset evaluations giving REJECT')
fwRejectsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRejectsMom.setStatus('current')
if mibBuilder.loadTexts: fwRejectsMom.setDescription('Ruleset evaluations giving REJECT')
fwRejectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRejectsMax.setStatus('current')
if mibBuilder.loadTexts: fwRejectsMax.setDescription('Ruleset evaluations giving REJECT')
fwDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 3))
fwDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDropsVal.setStatus('current')
if mibBuilder.loadTexts: fwDropsVal.setDescription('Ruleset evaluations giving DROP')
fwDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDropsMom.setStatus('current')
if mibBuilder.loadTexts: fwDropsMom.setDescription('Ruleset evaluations giving DROP')
fwDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDropsMax.setStatus('current')
if mibBuilder.loadTexts: fwDropsMax.setDescription('Ruleset evaluations giving DROP')
fwRewites = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 4))
fwRewitesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRewitesVal.setStatus('current')
if mibBuilder.loadTexts: fwRewitesVal.setDescription('Ruleset evaluations giving REWRITE')
fwRewitesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRewitesMom.setStatus('current')
if mibBuilder.loadTexts: fwRewitesMom.setDescription('Ruleset evaluations giving REWRITE')
fwRewitesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRewitesMax.setStatus('current')
if mibBuilder.loadTexts: fwRewitesMax.setDescription('Ruleset evaluations giving REWRITE')
fwDiverts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 5))
fwDivertsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDivertsVal.setStatus('current')
if mibBuilder.loadTexts: fwDivertsVal.setDescription('Ruleset evaluations giving DIVERT')
fwDivertsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDivertsMom.setStatus('current')
if mibBuilder.loadTexts: fwDivertsMom.setDescription('Ruleset evaluations giving DIVERT')
fwDivertsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwDivertsMax.setStatus('current')
if mibBuilder.loadTexts: fwDivertsMax.setDescription('Ruleset evaluations giving DIVERT')
fwRuleSets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 6))
fwRuleSetsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRuleSetsVal.setStatus('current')
if mibBuilder.loadTexts: fwRuleSetsVal.setDescription('Ruleset evaluations')
fwRuleSetsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRuleSetsMom.setStatus('current')
if mibBuilder.loadTexts: fwRuleSetsMom.setDescription('Ruleset evaluations')
fwRuleSetsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwRuleSetsMax.setStatus('current')
if mibBuilder.loadTexts: fwRuleSetsMax.setDescription('Ruleset evaluations')
fwLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 7))
fwLogsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwLogsVal.setStatus('current')
if mibBuilder.loadTexts: fwLogsVal.setDescription('Log entries')
fwLogsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwLogsMom.setStatus('current')
if mibBuilder.loadTexts: fwLogsMom.setDescription('Log entries')
fwLogsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwLogsMax.setStatus('current')
if mibBuilder.loadTexts: fwLogsMax.setDescription('Log entries')
fwMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 8))
fwMonitorVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorVal.setStatus('current')
if mibBuilder.loadTexts: fwMonitorVal.setDescription('Monitored packets')
fwMonitorMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorMom.setStatus('current')
if mibBuilder.loadTexts: fwMonitorMom.setDescription('Monitored packets')
fwMonitorMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorMax.setStatus('current')
if mibBuilder.loadTexts: fwMonitorMax.setDescription('Monitored packets')
fwMonitorFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 9))
fwMonitorFailuresVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorFailuresVal.setStatus('current')
if mibBuilder.loadTexts: fwMonitorFailuresVal.setDescription('Failed monitored packets')
fwMonitorFailuresMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorFailuresMom.setStatus('current')
if mibBuilder.loadTexts: fwMonitorFailuresMom.setDescription('Failed monitored packets')
fwMonitorFailuresMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMonitorFailuresMax.setStatus('current')
if mibBuilder.loadTexts: fwMonitorFailuresMax.setDescription('Failed monitored packets')
fwInjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 10))
fwInjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsVal.setStatus('current')
if mibBuilder.loadTexts: fwInjectsVal.setDescription('Ruleset evaluations giving INJECT')
fwInjectsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsMom.setStatus('current')
if mibBuilder.loadTexts: fwInjectsMom.setDescription('Ruleset evaluations giving INJECT')
fwInjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsMax.setStatus('current')
if mibBuilder.loadTexts: fwInjectsMax.setDescription('Ruleset evaluations giving INJECT')
fwInjectsFailures = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 11))
fwInjectsFailuresVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresVal.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresVal.setDescription('Inject data preparation failures')
fwInjectsFailuresMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresMom.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresMom.setDescription('Inject data preparation failures')
fwInjectsFailuresMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresMax.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresMax.setDescription('Inject data preparation failures')
fwInjectsFailuresProp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 12))
fwInjectsFailuresPropVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresPropVal.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresPropVal.setDescription('Inject properties exceeding max length (255)')
fwInjectsFailuresPropMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresPropMom.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresPropMom.setDescription('Inject properties exceeding max length (255)')
fwInjectsFailuresPropMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwInjectsFailuresPropMax.setStatus('current')
if mibBuilder.loadTexts: fwInjectsFailuresPropMax.setDescription('Inject properties exceeding max length (255)')
fwMidconnRewrite = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 13))
fwMidconnRewriteVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMidconnRewriteVal.setStatus('current')
if mibBuilder.loadTexts: fwMidconnRewriteVal.setDescription('Rewrites changed in active connection')
fwMidconnRewriteMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMidconnRewriteMom.setStatus('current')
if mibBuilder.loadTexts: fwMidconnRewriteMom.setDescription('Rewrites changed in active connection')
fwMidconnRewriteMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 80, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fwMidconnRewriteMax.setStatus('current')
if mibBuilder.loadTexts: fwMidconnRewriteMax.setDescription('Rewrites changed in active connection')
shaping = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88))
shapingEnqueued = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 1))
shapingEnqueuedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedVal.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedVal.setDescription('Enqueued packets')
shapingEnqueuedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedMom.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedMom.setDescription('Enqueued packets')
shapingEnqueuedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedMax.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedMax.setDescription('Enqueued packets')
shapingDequeued = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 2))
shapingDequeuedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedVal.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedVal.setDescription('Dequeued packets')
shapingDequeuedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedMom.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedMom.setDescription('Dequeued packets')
shapingDequeuedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedMax.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedMax.setDescription('Dequeued packets')
shapingBrownConnDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 8))
shapingBrownConnDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownConnDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingBrownConnDropsVal.setDescription('BROWN per connection drops')
shapingBrownConnDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownConnDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingBrownConnDropsMom.setDescription('BROWN per connection drops')
shapingBrownConnDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownConnDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingBrownConnDropsMax.setDescription('BROWN per connection drops')
shapingQueueSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 9))
shapingQueueSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueueSizeVal.setStatus('current')
if mibBuilder.loadTexts: shapingQueueSizeVal.setDescription('Queue size')
shapingQueueSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueueSizeMax.setStatus('current')
if mibBuilder.loadTexts: shapingQueueSizeMax.setDescription('Queue size')
shapingRulesSetCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 10))
shapingRulesSetCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRulesSetCountVal.setStatus('current')
if mibBuilder.loadTexts: shapingRulesSetCountVal.setDescription('Rule sets')
shapingRulesSetCountMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRulesSetCountMom.setStatus('current')
if mibBuilder.loadTexts: shapingRulesSetCountMom.setDescription('Rule sets')
shapingRulesSetCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRulesSetCountMax.setStatus('current')
if mibBuilder.loadTexts: shapingRulesSetCountMax.setDescription('Rule sets')
shapingEnqueuedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 11))
shapingEnqueuedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedBytesVal.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedBytesVal.setDescription('Enqueued bytes')
shapingEnqueuedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedBytesMom.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedBytesMom.setDescription('Enqueued bytes')
shapingEnqueuedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEnqueuedBytesMax.setStatus('current')
if mibBuilder.loadTexts: shapingEnqueuedBytesMax.setDescription('Enqueued bytes')
shapingDequeuedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 12))
shapingDequeuedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedBytesVal.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedBytesVal.setDescription('Dequeued bytes')
shapingDequeuedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedBytesMom.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedBytesMom.setDescription('Dequeued bytes')
shapingDequeuedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedBytesMax.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedBytesMax.setDescription('Dequeued bytes')
shapingObjectCopies = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 13))
shapingObjectCopiesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 13, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectCopiesVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectCopiesVal.setDescription('Object copies')
shapingObjectCopiesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectCopiesMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectCopiesMax.setDescription('Object copies')
shapingOutofpacketsDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 15))
shapingOutofpacketsDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutofpacketsDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingOutofpacketsDropsVal.setDescription('Out of packets drops')
shapingOutofpacketsDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutofpacketsDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingOutofpacketsDropsMom.setDescription('Out of packets drops')
shapingOutofpacketsDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutofpacketsDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingOutofpacketsDropsMax.setDescription('Out of packets drops')
shapingReceived = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 16))
shapingReceivedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReceivedVal.setStatus('current')
if mibBuilder.loadTexts: shapingReceivedVal.setDescription('Packets received')
shapingReceivedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReceivedMom.setStatus('current')
if mibBuilder.loadTexts: shapingReceivedMom.setDescription('Packets received')
shapingReceivedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReceivedMax.setStatus('current')
if mibBuilder.loadTexts: shapingReceivedMax.setDescription('Packets received')
shapingObjectChecks = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 17))
shapingObjectChecksVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectChecksVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectChecksVal.setDescription('Object checks')
shapingObjectChecksMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectChecksMom.setStatus('current')
if mibBuilder.loadTexts: shapingObjectChecksMom.setDescription('Object checks')
shapingObjectChecksMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectChecksMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectChecksMax.setDescription('Object checks')
shapingObjectPoolExhausted = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 25))
shapingObjectPoolExhaustedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectPoolExhaustedVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectPoolExhaustedVal.setDescription('Too many dynamic objects')
shapingObjectPoolExhaustedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectPoolExhaustedMom.setStatus('current')
if mibBuilder.loadTexts: shapingObjectPoolExhaustedMom.setDescription('Too many dynamic objects')
shapingObjectPoolExhaustedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectPoolExhaustedMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectPoolExhaustedMax.setDescription('Too many dynamic objects')
shapingOutOfCreditsDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 26))
shapingOutOfCreditsDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutOfCreditsDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingOutOfCreditsDropsVal.setDescription('Out of credits (vbs) drops')
shapingOutOfCreditsDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutOfCreditsDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingOutOfCreditsDropsMom.setDescription('Out of credits (vbs) drops')
shapingOutOfCreditsDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingOutOfCreditsDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingOutOfCreditsDropsMax.setDescription('Out of credits (vbs) drops')
shapingObjectOverflow = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 31))
shapingObjectOverflowVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 31, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectOverflowVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectOverflowVal.setDescription('Too many shaping objects matching a connection')
shapingObjectOverflowMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 31, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectOverflowMom.setStatus('current')
if mibBuilder.loadTexts: shapingObjectOverflowMom.setDescription('Too many shaping objects matching a connection')
shapingObjectOverflowMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 31, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectOverflowMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectOverflowMax.setDescription('Too many shaping objects matching a connection')
shapingRuleOverflow = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 32))
shapingRuleOverflowVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRuleOverflowVal.setStatus('current')
if mibBuilder.loadTexts: shapingRuleOverflowVal.setDescription('Too many matching rules')
shapingRuleOverflowMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRuleOverflowMom.setStatus('current')
if mibBuilder.loadTexts: shapingRuleOverflowMom.setDescription('Too many matching rules')
shapingRuleOverflowMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRuleOverflowMax.setStatus('current')
if mibBuilder.loadTexts: shapingRuleOverflowMax.setDescription('Too many matching rules')
shapingDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 37))
shapingDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 37, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingDropsVal.setDescription('Queuing drops (all types)')
shapingDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 37, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsMom.setDescription('Queuing drops (all types)')
shapingDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingDropsMax.setDescription('Queuing drops (all types)')
shapingObjectFull = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 38))
shapingObjectFullVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectFullVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectFullVal.setDescription('Shaping object queue full')
shapingObjectFullMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectFullMom.setStatus('current')
if mibBuilder.loadTexts: shapingObjectFullMom.setDescription('Shaping object queue full')
shapingObjectFullMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectFullMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectFullMax.setDescription('Shaping object queue full')
shapingUnshaped = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 39))
shapingUnshapedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 39, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedVal.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedVal.setDescription('Unshaped packets')
shapingUnshapedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 39, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedMom.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedMom.setDescription('Unshaped packets')
shapingUnshapedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 39, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedMax.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedMax.setDescription('Unshaped packets')
shapingUnshapedBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 40))
shapingUnshapedBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 40, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedBytesVal.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedBytesVal.setDescription('Unshaped bytes')
shapingUnshapedBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 40, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedBytesMom.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedBytesMom.setDescription('Unshaped bytes')
shapingUnshapedBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 40, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUnshapedBytesMax.setStatus('current')
if mibBuilder.loadTexts: shapingUnshapedBytesMax.setDescription('Unshaped bytes')
shapingDequeueCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 41))
shapingDequeueCallsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeueCallsVal.setStatus('current')
if mibBuilder.loadTexts: shapingDequeueCallsVal.setDescription('Dequeue calls')
shapingDequeueCallsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeueCallsMom.setStatus('current')
if mibBuilder.loadTexts: shapingDequeueCallsMom.setDescription('Dequeue calls')
shapingDequeueCallsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeueCallsMax.setStatus('current')
if mibBuilder.loadTexts: shapingDequeueCallsMax.setDescription('Dequeue calls')
shapingRecycleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 42))
shapingRecycleObjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 42, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRecycleObjectsVal.setStatus('current')
if mibBuilder.loadTexts: shapingRecycleObjectsVal.setDescription('Objects in recycle queue')
shapingRecycleObjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 42, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRecycleObjectsMax.setStatus('current')
if mibBuilder.loadTexts: shapingRecycleObjectsMax.setDescription('Objects in recycle queue')
shapingDirect = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 44))
shapingDirectVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 44, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectVal.setStatus('current')
if mibBuilder.loadTexts: shapingDirectVal.setDescription('Directly sent packets')
shapingDirectMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 44, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectMom.setStatus('current')
if mibBuilder.loadTexts: shapingDirectMom.setDescription('Directly sent packets')
shapingDirectMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 44, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectMax.setStatus('current')
if mibBuilder.loadTexts: shapingDirectMax.setDescription('Directly sent packets')
shapingDirectBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 45))
shapingDirectBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 45, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesVal.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesVal.setDescription('Directly sent bytes')
shapingDirectBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 45, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesMom.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesMom.setDescription('Directly sent bytes')
shapingDirectBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 45, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesMax.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesMax.setDescription('Directly sent bytes')
shapingBorrowDequeues = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 46))
shapingBorrowDequeuesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 46, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBorrowDequeuesVal.setStatus('current')
if mibBuilder.loadTexts: shapingBorrowDequeuesVal.setDescription('Borrowing dequeues')
shapingBorrowDequeuesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 46, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBorrowDequeuesMom.setStatus('current')
if mibBuilder.loadTexts: shapingBorrowDequeuesMom.setDescription('Borrowing dequeues')
shapingBorrowDequeuesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 46, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBorrowDequeuesMax.setStatus('current')
if mibBuilder.loadTexts: shapingBorrowDequeuesMax.setDescription('Borrowing dequeues')
shapingVbsSplitError = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 47))
shapingVbsSplitErrorVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 47, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingVbsSplitErrorVal.setStatus('obsolete')
if mibBuilder.loadTexts: shapingVbsSplitErrorVal.setDescription('VBS split allocation failures')
shapingVbsSplitErrorMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 47, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingVbsSplitErrorMom.setStatus('obsolete')
if mibBuilder.loadTexts: shapingVbsSplitErrorMom.setDescription('VBS split allocation failures')
shapingVbsSplitErrorMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 47, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingVbsSplitErrorMax.setStatus('obsolete')
if mibBuilder.loadTexts: shapingVbsSplitErrorMax.setDescription('VBS split allocation failures')
shapingBrownHostDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 48))
shapingBrownHostDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 48, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownHostDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingBrownHostDropsVal.setDescription('BROWN per host drops')
shapingBrownHostDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 48, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownHostDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingBrownHostDropsMom.setDescription('BROWN per host drops')
shapingBrownHostDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 48, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingBrownHostDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingBrownHostDropsMax.setDescription('BROWN per host drops')
shapingMaxConnDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 49))
shapingMaxConnDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 49, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingMaxConnDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingMaxConnDropsVal.setDescription('Object max connections reached')
shapingMaxConnDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 49, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingMaxConnDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingMaxConnDropsMom.setDescription('Object max connections reached')
shapingMaxConnDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 49, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingMaxConnDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingMaxConnDropsMax.setDescription('Object max connections reached')
shapingScheduledOdirs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 50))
shapingScheduledOdirsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 50, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingScheduledOdirsVal.setStatus('current')
if mibBuilder.loadTexts: shapingScheduledOdirsVal.setDescription('Scheduled odirs')
shapingScheduledOdirsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 50, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingScheduledOdirsMax.setStatus('current')
if mibBuilder.loadTexts: shapingScheduledOdirsMax.setDescription('Scheduled odirs')
shapingQueuePoolExhausted = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 51))
shapingQueuePoolExhaustedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 51, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueuePoolExhaustedVal.setStatus('current')
if mibBuilder.loadTexts: shapingQueuePoolExhaustedVal.setDescription('Queue pool exhausted')
shapingQueuePoolExhaustedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 51, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueuePoolExhaustedMom.setStatus('current')
if mibBuilder.loadTexts: shapingQueuePoolExhaustedMom.setDescription('Queue pool exhausted')
shapingQueuePoolExhaustedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 51, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueuePoolExhaustedMax.setStatus('current')
if mibBuilder.loadTexts: shapingQueuePoolExhaustedMax.setDescription('Queue pool exhausted')
shapingActiveQueues = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 52))
shapingActiveQueuesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 52, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingActiveQueuesVal.setStatus('current')
if mibBuilder.loadTexts: shapingActiveQueuesVal.setDescription('Active queues')
shapingActiveQueuesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 52, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingActiveQueuesMax.setStatus('current')
if mibBuilder.loadTexts: shapingActiveQueuesMax.setDescription('Active queues')
shapingQueueAllocations = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 53))
shapingQueueAllocationsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 53, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueueAllocationsVal.setStatus('current')
if mibBuilder.loadTexts: shapingQueueAllocationsVal.setDescription('Queue allocations')
shapingQueueAllocationsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 53, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueueAllocationsMom.setStatus('current')
if mibBuilder.loadTexts: shapingQueueAllocationsMom.setDescription('Queue allocations')
shapingQueueAllocationsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 53, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingQueueAllocationsMax.setStatus('current')
if mibBuilder.loadTexts: shapingQueueAllocationsMax.setDescription('Queue allocations')
shapingDropsPrio1 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 54))
shapingDropsPrio1Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 54, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio1Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio1Val.setDescription('Queuing drops (prio 1)')
shapingDropsPrio1Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 54, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio1Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio1Mom.setDescription('Queuing drops (prio 1)')
shapingDropsPrio1Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 54, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio1Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio1Max.setDescription('Queuing drops (prio 1)')
shapingDropsPrio2 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 55))
shapingDropsPrio2Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 55, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio2Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio2Val.setDescription('Queuing drops (prio 2)')
shapingDropsPrio2Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 55, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio2Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio2Mom.setDescription('Queuing drops (prio 2)')
shapingDropsPrio2Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 55, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio2Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio2Max.setDescription('Queuing drops (prio 2)')
shapingDropsPrio3 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 56))
shapingDropsPrio3Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 56, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio3Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio3Val.setDescription('Queuing drops (prio 3)')
shapingDropsPrio3Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 56, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio3Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio3Mom.setDescription('Queuing drops (prio 3)')
shapingDropsPrio3Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 56, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio3Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio3Max.setDescription('Queuing drops (prio 3)')
shapingDropsPrio4 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 57))
shapingDropsPrio4Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 57, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio4Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio4Val.setDescription('Queuing drops (prio 4)')
shapingDropsPrio4Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 57, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio4Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio4Mom.setDescription('Queuing drops (prio 4)')
shapingDropsPrio4Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 57, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio4Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio4Max.setDescription('Queuing drops (prio 4)')
shapingDropsPrio5 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 58))
shapingDropsPrio5Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 58, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio5Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio5Val.setDescription('Queuing drops (prio 5)')
shapingDropsPrio5Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 58, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio5Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio5Mom.setDescription('Queuing drops (prio 5)')
shapingDropsPrio5Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 58, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio5Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio5Max.setDescription('Queuing drops (prio 5)')
shapingDropsPrio6 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 59))
shapingDropsPrio6Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 59, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio6Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio6Val.setDescription('Queuing drops (prio 6)')
shapingDropsPrio6Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 59, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio6Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio6Mom.setDescription('Queuing drops (prio 6)')
shapingDropsPrio6Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 59, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio6Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio6Max.setDescription('Queuing drops (prio 6)')
shapingDropsPrio7 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 60))
shapingDropsPrio7Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 60, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio7Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio7Val.setDescription('Queuing drops (prio 7)')
shapingDropsPrio7Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 60, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio7Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio7Mom.setDescription('Queuing drops (prio 7)')
shapingDropsPrio7Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 60, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio7Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio7Max.setDescription('Queuing drops (prio 7)')
shapingDropsPrio8 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 61))
shapingDropsPrio8Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 61, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio8Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio8Val.setDescription('Queuing drops (prio 8)')
shapingDropsPrio8Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 61, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio8Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio8Mom.setDescription('Queuing drops (prio 8)')
shapingDropsPrio8Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 61, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio8Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio8Max.setDescription('Queuing drops (prio 8)')
shapingDropsPrio9 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 62))
shapingDropsPrio9Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 62, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio9Val.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio9Val.setDescription('Queuing drops (prio 9)')
shapingDropsPrio9Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 62, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio9Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio9Mom.setDescription('Queuing drops (prio 9)')
shapingDropsPrio9Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 62, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrio9Max.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrio9Max.setDescription('Queuing drops (prio 9)')
shapingDropsPrioOther = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 63))
shapingDropsPrioOtherVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 63, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrioOtherVal.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrioOtherVal.setDescription('Queuing drops (other prio)')
shapingDropsPrioOtherMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 63, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrioOtherMom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrioOtherMom.setDescription('Queuing drops (other prio)')
shapingDropsPrioOtherMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 63, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsPrioOtherMax.setStatus('current')
if mibBuilder.loadTexts: shapingDropsPrioOtherMax.setDescription('Queuing drops (other prio)')
shapingDropsCps = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 64))
shapingDropsCpsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 64, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsCpsVal.setStatus('current')
if mibBuilder.loadTexts: shapingDropsCpsVal.setDescription('CPS limit drops')
shapingDropsCpsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 64, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsCpsMom.setStatus('current')
if mibBuilder.loadTexts: shapingDropsCpsMom.setDescription('CPS limit drops')
shapingDropsCpsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 64, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDropsCpsMax.setStatus('current')
if mibBuilder.loadTexts: shapingDropsCpsMax.setDescription('CPS limit drops')
shapingFailedFairnessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 65))
shapingFailedFairnessObjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 65, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingFailedFairnessObjectsVal.setStatus('current')
if mibBuilder.loadTexts: shapingFailedFairnessObjectsVal.setDescription('Host fairness data allocation failures')
shapingFailedFairnessObjectsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 65, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingFailedFairnessObjectsMom.setStatus('current')
if mibBuilder.loadTexts: shapingFailedFairnessObjectsMom.setDescription('Host fairness data allocation failures')
shapingFailedFairnessObjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 65, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingFailedFairnessObjectsMax.setStatus('current')
if mibBuilder.loadTexts: shapingFailedFairnessObjectsMax.setDescription('Host fairness data allocation failures')
shapingUsedFairnessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 66))
shapingUsedFairnessObjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 66, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUsedFairnessObjectsVal.setStatus('current')
if mibBuilder.loadTexts: shapingUsedFairnessObjectsVal.setDescription('Host fairness data used')
shapingUsedFairnessObjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 66, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingUsedFairnessObjectsMax.setStatus('current')
if mibBuilder.loadTexts: shapingUsedFairnessObjectsMax.setDescription('Host fairness data used')
shapingReloadDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 67))
shapingReloadDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 67, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReloadDropsVal.setStatus('current')
if mibBuilder.loadTexts: shapingReloadDropsVal.setDescription('Drops caused by ruleset reload')
shapingReloadDropsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 67, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReloadDropsMom.setStatus('current')
if mibBuilder.loadTexts: shapingReloadDropsMom.setDescription('Drops caused by ruleset reload')
shapingReloadDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 67, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingReloadDropsMax.setStatus('current')
if mibBuilder.loadTexts: shapingReloadDropsMax.setDescription('Drops caused by ruleset reload')
shapingRequeueQueueUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 68))
shapingRequeueQueueUsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 68, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRequeueQueueUsedVal.setStatus('current')
if mibBuilder.loadTexts: shapingRequeueQueueUsedVal.setDescription('Packets in requeue queue')
shapingRequeueQueueUsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 68, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingRequeueQueueUsedMax.setStatus('current')
if mibBuilder.loadTexts: shapingRequeueQueueUsedMax.setDescription('Packets in requeue queue')
shapingDirectBytesPrio0 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 69))
shapingDirectBytesPrio0Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 69, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesPrio0Val.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesPrio0Val.setDescription('Directly sent bytes (prio 0)')
shapingDirectBytesPrio0Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 69, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesPrio0Mom.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesPrio0Mom.setDescription('Directly sent bytes (prio 0)')
shapingDirectBytesPrio0Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 69, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDirectBytesPrio0Max.setStatus('current')
if mibBuilder.loadTexts: shapingDirectBytesPrio0Max.setDescription('Directly sent bytes (prio 0)')
shapingDequeuedOdirs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 70))
shapingDequeuedOdirsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 70, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedOdirsVal.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedOdirsVal.setDescription('Dequeued Odirs')
shapingDequeuedOdirsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 70, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedOdirsMom.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedOdirsMom.setDescription('Dequeued Odirs')
shapingDequeuedOdirsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 70, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingDequeuedOdirsMax.setStatus('current')
if mibBuilder.loadTexts: shapingDequeuedOdirsMax.setDescription('Dequeued Odirs')
shapingSkippedQsyncUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 71))
shapingSkippedQsyncUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 71, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesVal.setDescription('Skipped qsync updates (no xfer)')
shapingSkippedQsyncUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 71, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesMom.setDescription('Skipped qsync updates (no xfer)')
shapingSkippedQsyncUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 71, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: shapingSkippedQsyncUpdatesMax.setDescription('Skipped qsync updates (no xfer)')
shapingObjectCopiesCreated = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 72))
shapingObjectCopiesCreatedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 72, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectCopiesCreatedVal.setStatus('current')
if mibBuilder.loadTexts: shapingObjectCopiesCreatedVal.setDescription('Object copies created')
shapingObjectCopiesCreatedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 72, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectCopiesCreatedMom.setStatus('current')
if mibBuilder.loadTexts: shapingObjectCopiesCreatedMom.setDescription('Object copies created')
shapingObjectCopiesCreatedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 72, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingObjectCopiesCreatedMax.setStatus('current')
if mibBuilder.loadTexts: shapingObjectCopiesCreatedMax.setDescription('Object copies created')
shapingEcnMarks = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 73))
shapingEcnMarksVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 73, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEcnMarksVal.setStatus('current')
if mibBuilder.loadTexts: shapingEcnMarksVal.setDescription('ECN Marked Packets')
shapingEcnMarksMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 73, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEcnMarksMom.setStatus('current')
if mibBuilder.loadTexts: shapingEcnMarksMom.setDescription('ECN Marked Packets')
shapingEcnMarksMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 88, 73, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingEcnMarksMax.setStatus('current')
if mibBuilder.loadTexts: shapingEcnMarksMax.setDescription('ECN Marked Packets')
pppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96))
pppoeShortPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 1))
pppoeShortPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeShortPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeShortPacketsVal.setDescription('Short Packets dropped')
pppoeShortPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeShortPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeShortPacketsMom.setDescription('Short Packets dropped')
pppoeShortPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeShortPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeShortPacketsMax.setDescription('Short Packets dropped')
pppoeBadversionPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 2))
pppoeBadversionPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeBadversionPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeBadversionPacketsVal.setDescription('Packets with unknown version')
pppoeBadversionPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeBadversionPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeBadversionPacketsMom.setDescription('Packets with unknown version')
pppoeBadversionPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeBadversionPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeBadversionPacketsMax.setDescription('Packets with unknown version')
pppoeControlPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 3))
pppoeControlPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeControlPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeControlPacketsVal.setDescription('Control packets')
pppoeControlPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeControlPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeControlPacketsMom.setDescription('Control packets')
pppoeControlPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeControlPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeControlPacketsMax.setDescription('Control packets')
pppoeTruncatedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 4))
pppoeTruncatedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeTruncatedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeTruncatedPacketsVal.setDescription('Truncated packets dropped')
pppoeTruncatedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeTruncatedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeTruncatedPacketsMom.setDescription('Truncated packets dropped')
pppoeTruncatedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeTruncatedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeTruncatedPacketsMax.setDescription('Truncated packets dropped')
pppoePaddedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 5))
pppoePaddedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoePaddedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoePaddedPacketsVal.setDescription('Padded packets')
pppoePaddedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoePaddedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoePaddedPacketsMom.setDescription('Padded packets')
pppoePaddedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoePaddedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoePaddedPacketsMax.setDescription('Padded packets')
pppoeIpv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 6))
pppoeIpv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv4PacketsVal.setDescription('IPv4 packets')
pppoeIpv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv4PacketsMom.setDescription('IPv4 packets')
pppoeIpv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv4PacketsMax.setDescription('IPv4 packets')
pppoeNonIpPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 7))
pppoeNonIpPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeNonIpPacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeNonIpPacketsVal.setDescription('Non IP packets')
pppoeNonIpPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeNonIpPacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeNonIpPacketsMom.setDescription('Non IP packets')
pppoeNonIpPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeNonIpPacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeNonIpPacketsMax.setDescription('Non IP packets')
pppoeIpv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 8))
pppoeIpv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv6PacketsVal.setDescription('IPv6 packets')
pppoeIpv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv6PacketsMom.setDescription('IPv6 packets')
pppoeIpv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 96, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppoeIpv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: pppoeIpv6PacketsMax.setDescription('IPv6 packets')
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120))
interfaceBytesToEngine = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 8))
interfaceBytesToEngineVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesToEngineVal.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesToEngineVal.setDescription('Sent to engine')
interfaceBytesToEngineMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesToEngineMom.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesToEngineMom.setDescription('Sent to engine')
interfaceBytesToEngineMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesToEngineMax.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesToEngineMax.setDescription('Sent to engine')
interfaceBytesFromEngine = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 9))
interfaceBytesFromEngineVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesFromEngineVal.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesFromEngineVal.setDescription('Received from engine')
interfaceBytesFromEngineMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesFromEngineMom.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesFromEngineMom.setDescription('Received from engine')
interfaceBytesFromEngineMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceBytesFromEngineMax.setStatus('current')
if mibBuilder.loadTexts: interfaceBytesFromEngineMax.setDescription('Received from engine')
interfaceFlowNewMissed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 10))
interfaceFlowNewMissedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewMissedVal.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewMissedVal.setDescription('New flows missed')
interfaceFlowNewMissedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewMissedMom.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewMissedMom.setDescription('New flows missed')
interfaceFlowNewMissedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewMissedMax.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewMissedMax.setDescription('New flows missed')
interfaceFlowUpdMissed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 11))
interfaceFlowUpdMissedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdMissedVal.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdMissedVal.setDescription('Flow updates missed')
interfaceFlowUpdMissedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdMissedMom.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdMissedMom.setDescription('Flow updates missed')
interfaceFlowUpdMissedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdMissedMax.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdMissedMax.setDescription('Flow updates missed')
interfaceFlowNew = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 12))
interfaceFlowNewVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewVal.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewVal.setDescription('New flows')
interfaceFlowNewMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewMom.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewMom.setDescription('New flows')
interfaceFlowNewMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowNewMax.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowNewMax.setDescription('New flows')
interfaceFlowHostnameAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 13))
interfaceFlowHostnameAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailVal.setDescription('Hostname allocation failures')
interfaceFlowHostnameAllocFailMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailMom.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailMom.setDescription('Hostname allocation failures')
interfaceFlowHostnameAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowHostnameAllocFailMax.setDescription('Hostname allocation failures')
interfaceFlowUpdReordered = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 14))
interfaceFlowUpdReorderedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdReorderedVal.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdReorderedVal.setDescription('Reordered flow updates')
interfaceFlowUpdReorderedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdReorderedMom.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdReorderedMom.setDescription('Reordered flow updates')
interfaceFlowUpdReorderedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 120, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: interfaceFlowUpdReorderedMax.setStatus('current')
if mibBuilder.loadTexts: interfaceFlowUpdReorderedMax.setDescription('Reordered flow updates')
dynnetobjs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121))
dynamicnetobjectFailedInserts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 1))
dynamicnetobjectFailedInsertsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsVal.setDescription('Failed inserts (too many dynamic items)')
dynamicnetobjectFailedInsertsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsMom.setDescription('Failed inserts (too many dynamic items)')
dynamicnetobjectFailedInsertsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectFailedInsertsMax.setDescription('Failed inserts (too many dynamic items)')
dynamicnetobjectListItems = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 2))
dynamicnetobjectListItemsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListItemsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListItemsVal.setDescription('Items returned from last PLDB query')
dynamicnetobjectListItemsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListItemsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListItemsMax.setDescription('Items returned from last PLDB query')
dynamicnetobjectRemoveSucceeded = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 3))
dynamicnetobjectRemoveSucceededVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededVal.setDescription('Remove calls succeeded')
dynamicnetobjectRemoveSucceededMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededMom.setDescription('Remove calls succeeded')
dynamicnetobjectRemoveSucceededMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveSucceededMax.setDescription('Remove calls succeeded')
dynamicnetobjectRemoveFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 4))
dynamicnetobjectRemoveFailedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedVal.setDescription('Remove calls failed')
dynamicnetobjectRemoveFailedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedMom.setDescription('Remove calls failed')
dynamicnetobjectRemoveFailedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveFailedMax.setDescription('Remove calls failed')
dynamicnetobjectCurrentIpCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 5))
dynamicnetobjectCurrentIpCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectCurrentIpCountVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectCurrentIpCountVal.setDescription('IPs in table')
dynamicnetobjectCurrentIpCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectCurrentIpCountMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectCurrentIpCountMax.setDescription('IPs in table')
dynamicnetobjectCurrentCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 6))
dynamicnetobjectCurrentCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectCurrentCountVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectCurrentCountVal.setDescription('Items in table')
dynamicnetobjectCurrentCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectCurrentCountMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectCurrentCountMax.setDescription('Items in table')
dynamicnetobjectAddSucceeded = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 8))
dynamicnetobjectAddSucceededVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededVal.setDescription('Add calls succeeded')
dynamicnetobjectAddSucceededMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededMom.setDescription('Add calls succeeded')
dynamicnetobjectAddSucceededMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddSucceededMax.setDescription('Add calls succeeded')
dynamicnetobjectAddFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 9))
dynamicnetobjectAddFailedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddFailedVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddFailedVal.setDescription('Add calls failed')
dynamicnetobjectAddFailedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddFailedMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddFailedMom.setDescription('Add calls failed')
dynamicnetobjectAddFailedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddFailedMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddFailedMax.setDescription('Add calls failed')
dynamicnetobjectInsertPldbFailed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 10))
dynamicnetobjectInsertPldbFailedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedVal.setDescription('Add calls failed in PLDB')
dynamicnetobjectInsertPldbFailedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedMom.setDescription('Add calls failed in PLDB')
dynamicnetobjectInsertPldbFailedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectInsertPldbFailedMax.setDescription('Add calls failed in PLDB')
dynamicnetobjectAddCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 11))
dynamicnetobjectAddCallsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddCallsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddCallsVal.setDescription('Add calls attempted')
dynamicnetobjectAddCallsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddCallsMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddCallsMom.setDescription('Add calls attempted')
dynamicnetobjectAddCallsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectAddCallsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectAddCallsMax.setDescription('Add calls attempted')
dynamicnetobjectRemoveCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 12))
dynamicnetobjectRemoveCallsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsVal.setDescription('Remove calls attempted')
dynamicnetobjectRemoveCallsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsMom.setDescription('Remove calls attempted')
dynamicnetobjectRemoveCallsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectRemoveCallsMax.setDescription('Remove calls attempted')
dynamicnetobjectListCalls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 15))
dynamicnetobjectListCallsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListCallsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListCallsVal.setDescription('List calls attempted')
dynamicnetobjectListCallsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListCallsMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListCallsMom.setDescription('List calls attempted')
dynamicnetobjectListCallsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListCallsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListCallsMax.setDescription('List calls attempted')
dynamicnetobjectListItemsReturned = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 16))
dynamicnetobjectListItemsReturnedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedVal.setDescription('Items returned from list calls')
dynamicnetobjectListItemsReturnedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedMom.setDescription('Items returned from list calls')
dynamicnetobjectListItemsReturnedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectListItemsReturnedMax.setDescription('Items returned from list calls')
dynamicnetobjectSubscriberConflicts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 17))
dynamicnetobjectSubscriberConflictsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsVal.setDescription('Conflicting subscriber names')
dynamicnetobjectSubscriberConflictsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsMom.setDescription('Conflicting subscriber names')
dynamicnetobjectSubscriberConflictsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberConflictsMax.setDescription('Conflicting subscriber names')
dynamicnetobjectSubscriberCount = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 18))
dynamicnetobjectSubscriberCountVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 18, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberCountVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberCountVal.setDescription('Number of unique subscriber names')
dynamicnetobjectSubscriberCountMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberCountMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberCountMax.setDescription('Number of unique subscriber names')
dynamicnetobjectSubscriberTooMany = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 19))
dynamicnetobjectSubscriberTooManyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyVal.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyVal.setDescription('Too many unique subscriber names failures')
dynamicnetobjectSubscriberTooManyMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyMom.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyMom.setDescription('Too many unique subscriber names failures')
dynamicnetobjectSubscriberTooManyMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyMax.setStatus('current')
if mibBuilder.loadTexts: dynamicnetobjectSubscriberTooManyMax.setDescription('Too many unique subscriber names failures')
dynamicnetobjectSqliteMemoryUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 20))
dynamicnetobjectSqliteMemoryUsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 20, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSqliteMemoryUsedVal.setStatus('obsolete')
if mibBuilder.loadTexts: dynamicnetobjectSqliteMemoryUsedVal.setDescription('Add requests in queue')
dynamicnetobjectSqliteMemoryUsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectSqliteMemoryUsedMax.setStatus('obsolete')
if mibBuilder.loadTexts: dynamicnetobjectSqliteMemoryUsedMax.setDescription('Add requests in queue')
dynamicnetobjectPendingAdds = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 21))
dynamicnetobjectPendingAddsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 21, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectPendingAddsVal.setStatus('obsolete')
if mibBuilder.loadTexts: dynamicnetobjectPendingAddsVal.setDescription('Memory used by the dynitems sqlite thread')
dynamicnetobjectPendingAddsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 121, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dynamicnetobjectPendingAddsMax.setStatus('obsolete')
if mibBuilder.loadTexts: dynamicnetobjectPendingAddsMax.setDescription('Memory used by the dynitems sqlite thread')
bgp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122))
bgpUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 1))
bgpUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: bgpUpdatesVal.setDescription('Updates received')
bgpUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: bgpUpdatesMax.setDescription('Updates received')
bgpPrefixes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 2))
bgpPrefixesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrefixesVal.setStatus('current')
if mibBuilder.loadTexts: bgpPrefixesVal.setDescription('Number of prefixes')
bgpPrefixesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPrefixesMax.setStatus('current')
if mibBuilder.loadTexts: bgpPrefixesMax.setDescription('Number of prefixes')
bgpPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 3))
bgpPathsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathsVal.setStatus('current')
if mibBuilder.loadTexts: bgpPathsVal.setDescription('Number of unique paths')
bgpPathsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpPathsMax.setStatus('current')
if mibBuilder.loadTexts: bgpPathsMax.setDescription('Number of unique paths')
bgpUptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 4))
bgpUptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 4, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpUptimeVal.setStatus('current')
if mibBuilder.loadTexts: bgpUptimeVal.setDescription('Connection uptime')
bgpConvresionTime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 5))
bgpConvresionTimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpConvresionTimeVal.setStatus('current')
if mibBuilder.loadTexts: bgpConvresionTimeVal.setDescription('Time to convert lookup tree')
bgpConvresionTimeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpConvresionTimeMax.setStatus('current')
if mibBuilder.loadTexts: bgpConvresionTimeMax.setDescription('Time to convert lookup tree')
bgpSendTime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 6))
bgpSendTimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpSendTimeVal.setStatus('current')
if mibBuilder.loadTexts: bgpSendTimeVal.setDescription('Time to update lookup tree')
bgpSendTimeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpSendTimeMax.setStatus('current')
if mibBuilder.loadTexts: bgpSendTimeMax.setDescription('Time to update lookup tree')
bgpReplaces = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 7))
bgpReplacesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 7, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpReplacesVal.setStatus('current')
if mibBuilder.loadTexts: bgpReplacesVal.setDescription('Total count of announces without withdraw')
bgpReplacesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpReplacesMax.setStatus('current')
if mibBuilder.loadTexts: bgpReplacesMax.setDescription('Total count of announces without withdraw')
bgpWithdraws = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 8))
bgpWithdrawsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpWithdrawsVal.setStatus('current')
if mibBuilder.loadTexts: bgpWithdrawsVal.setDescription('Total count of withdrawn routes')
bgpWithdrawsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpWithdrawsMax.setStatus('current')
if mibBuilder.loadTexts: bgpWithdrawsMax.setDescription('Total count of withdrawn routes')
bgpAnnounces = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 9))
bgpAnnouncesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAnnouncesVal.setStatus('current')
if mibBuilder.loadTexts: bgpAnnouncesVal.setDescription('Total count of announced routes')
bgpAnnouncesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpAnnouncesMax.setStatus('current')
if mibBuilder.loadTexts: bgpAnnouncesMax.setDescription('Total count of announced routes')
bgpReconnects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 10))
bgpReconnectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpReconnectsVal.setStatus('current')
if mibBuilder.loadTexts: bgpReconnectsVal.setDescription('Total number of reconnects')
bgpReconnectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpReconnectsMax.setStatus('current')
if mibBuilder.loadTexts: bgpReconnectsMax.setDescription('Total number of reconnects')
bgpRecyclePaths = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 12))
bgpRecyclePathsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 12, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRecyclePathsVal.setStatus('current')
if mibBuilder.loadTexts: bgpRecyclePathsVal.setDescription('Number of paths waiting for garbage collection')
bgpRecyclePathsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpRecyclePathsMax.setStatus('current')
if mibBuilder.loadTexts: bgpRecyclePathsMax.setDescription('Number of paths waiting for garbage collection')
bgpFreelistPaths = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 13))
bgpFreelistPathsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 13, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFreelistPathsVal.setStatus('current')
if mibBuilder.loadTexts: bgpFreelistPathsVal.setDescription('Number of paths in freelist')
bgpFreelistPathsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpFreelistPathsMax.setStatus('current')
if mibBuilder.loadTexts: bgpFreelistPathsMax.setDescription('Number of paths in freelist')
bgpBalanceTime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 14))
bgpBalanceTimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 14, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpBalanceTimeVal.setStatus('current')
if mibBuilder.loadTexts: bgpBalanceTimeVal.setDescription('Time to rebalance tree')
bgpBalanceTimeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpBalanceTimeMax.setStatus('current')
if mibBuilder.loadTexts: bgpBalanceTimeMax.setDescription('Time to rebalance tree')
bgpCommunityTooSmall = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 24))
bgpCommunityTooSmallVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 24, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpCommunityTooSmallVal.setStatus('current')
if mibBuilder.loadTexts: bgpCommunityTooSmallVal.setDescription('Number of community updates received that exceed PL_CONFIG_BGP_MAX_COMMUNITIES')
bgpCommunityTooSmallMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpCommunityTooSmallMax.setStatus('current')
if mibBuilder.loadTexts: bgpCommunityTooSmallMax.setDescription('Number of community updates received that exceed PL_CONFIG_BGP_MAX_COMMUNITIES')
bgpCommunityMaxSeen = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 25))
bgpCommunityMaxSeenVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpCommunityMaxSeenVal.setStatus('current')
if mibBuilder.loadTexts: bgpCommunityMaxSeenVal.setDescription('Maximum number of communities we have seen in a BGP update')
bgpCommunityMaxSeenMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 122, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bgpCommunityMaxSeenMax.setStatus('current')
if mibBuilder.loadTexts: bgpCommunityMaxSeenMax.setDescription('Maximum number of communities we have seen in a BGP update')
qsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123))
qsyncIUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 1))
qsyncIUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesVal.setDescription('Updates received from reapers')
qsyncIUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesMom.setDescription('Updates received from reapers')
qsyncIUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesMax.setDescription('Updates received from reapers')
qsyncIUpdatesOldRuleset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 2))
qsyncIUpdatesOldRulesetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetVal.setDescription('Updates received from reapers with old ruleset')
qsyncIUpdatesOldRulesetMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetMom.setDescription('Updates received from reapers with old ruleset')
qsyncIUpdatesOldRulesetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesOldRulesetMax.setDescription('Updates received from reapers with old ruleset')
qsyncIUpdatesUnknownObject = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 3))
qsyncIUpdatesUnknownObjectVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectVal.setDescription('Updates received for unknown object')
qsyncIUpdatesUnknownObjectMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectMom.setDescription('Updates received for unknown object')
qsyncIUpdatesUnknownObjectMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIUpdatesUnknownObjectMax.setDescription('Updates received for unknown object')
qsyncIReaperSplitsCreated = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 4))
qsyncIReaperSplitsCreatedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedVal.setDescription('Split entries created (reaper)')
qsyncIReaperSplitsCreatedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedMom.setDescription('Split entries created (reaper)')
qsyncIReaperSplitsCreatedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIReaperSplitsCreatedMax.setDescription('Split entries created (reaper)')
qsyncIReaperSplitsActive = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 5))
qsyncIReaperSplitsActiveVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIReaperSplitsActiveVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIReaperSplitsActiveVal.setDescription('Split entries active (reaper)')
qsyncIReaperSplitsActiveMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIReaperSplitsActiveMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIReaperSplitsActiveMax.setDescription('Split entries active (reaper)')
qsyncISumFreelistSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 6))
qsyncISumFreelistSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncISumFreelistSizeVal.setStatus('current')
if mibBuilder.loadTexts: qsyncISumFreelistSizeVal.setDescription('Split entries on free list (sum)')
qsyncISumFreelistSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncISumFreelistSizeMax.setStatus('current')
if mibBuilder.loadTexts: qsyncISumFreelistSizeMax.setDescription('Split entries on free list (sum)')
qsyncISumSplitsActive = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 7))
qsyncISumSplitsActiveVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 7, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncISumSplitsActiveVal.setStatus('current')
if mibBuilder.loadTexts: qsyncISumSplitsActiveVal.setDescription('Split entries active (sum)')
qsyncISumSplitsActiveMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncISumSplitsActiveMax.setStatus('current')
if mibBuilder.loadTexts: qsyncISumSplitsActiveMax.setDescription('Split entries active (sum)')
qsyncIAdjustmentsSent = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 8))
qsyncIAdjustmentsSentVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIAdjustmentsSentVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIAdjustmentsSentVal.setDescription('Object adjustments sent')
qsyncIAdjustmentsSentMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIAdjustmentsSentMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIAdjustmentsSentMom.setDescription('Object adjustments sent')
qsyncIAdjustmentsSentMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIAdjustmentsSentMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIAdjustmentsSentMax.setDescription('Object adjustments sent')
qsyncENumPeers = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 9))
qsyncENumPeersVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncENumPeersVal.setStatus('current')
if mibBuilder.loadTexts: qsyncENumPeersVal.setDescription('(ext) Number of peers')
qsyncENumPeersMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncENumPeersMax.setStatus('current')
if mibBuilder.loadTexts: qsyncENumPeersMax.setDescription('(ext) Number of peers')
qsyncEUpdatesMismatch = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 10))
qsyncEUpdatesMismatchVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatesMismatchVal.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatesMismatchVal.setDescription('(ext) Updates with mismatching ruleset')
qsyncEUpdatesMismatchMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatesMismatchMom.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatesMismatchMom.setDescription('(ext) Updates with mismatching ruleset')
qsyncEUpdatesMismatchMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatesMismatchMax.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatesMismatchMax.setDescription('(ext) Updates with mismatching ruleset')
qsyncEUpdatePackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 11))
qsyncEUpdatePacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatePacketsVal.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatePacketsVal.setDescription('(ext) Update packets')
qsyncEUpdatePacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatePacketsMom.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatePacketsMom.setDescription('(ext) Update packets')
qsyncEUpdatePacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncEUpdatePacketsMax.setStatus('current')
if mibBuilder.loadTexts: qsyncEUpdatePacketsMax.setDescription('(ext) Update packets')
qsyncESplitTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 12))
qsyncESplitTimeoutVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESplitTimeoutVal.setStatus('current')
if mibBuilder.loadTexts: qsyncESplitTimeoutVal.setDescription('(ext) Split object age timeout')
qsyncESplitTimeoutMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESplitTimeoutMom.setStatus('current')
if mibBuilder.loadTexts: qsyncESplitTimeoutMom.setDescription('(ext) Split object age timeout')
qsyncESplitTimeoutMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESplitTimeoutMax.setStatus('current')
if mibBuilder.loadTexts: qsyncESplitTimeoutMax.setDescription('(ext) Split object age timeout')
qsyncERecvUpdateEntries = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 13))
qsyncERecvUpdateEntriesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesVal.setStatus('current')
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesVal.setDescription('(ext) Received update entries')
qsyncERecvUpdateEntriesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesMom.setStatus('current')
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesMom.setDescription('(ext) Received update entries')
qsyncERecvUpdateEntriesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesMax.setStatus('current')
if mibBuilder.loadTexts: qsyncERecvUpdateEntriesMax.setDescription('(ext) Received update entries')
qsyncESendUpdateEntries = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 14))
qsyncESendUpdateEntriesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdateEntriesVal.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdateEntriesVal.setDescription('(ext) Sent update entries')
qsyncESendUpdateEntriesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdateEntriesMom.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdateEntriesMom.setDescription('(ext) Sent update entries')
qsyncESendUpdateEntriesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdateEntriesMax.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdateEntriesMax.setDescription('(ext) Sent update entries')
qsyncESendUpdatePackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 15))
qsyncESendUpdatePacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdatePacketsVal.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdatePacketsVal.setDescription('(ext) Sent update packets')
qsyncESendUpdatePacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdatePacketsMom.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdatePacketsMom.setDescription('(ext) Sent update packets')
qsyncESendUpdatePacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendUpdatePacketsMax.setStatus('current')
if mibBuilder.loadTexts: qsyncESendUpdatePacketsMax.setDescription('(ext) Sent update packets')
qsyncIUnsync = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 16))
qsyncIUnsyncVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUnsyncVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIUnsyncVal.setDescription('Qsync not run because unsynced objects')
qsyncIUnsyncMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUnsyncMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIUnsyncMom.setDescription('Qsync not run because unsynced objects')
qsyncIUnsyncMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIUnsyncMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIUnsyncMax.setDescription('Qsync not run because unsynced objects')
qsyncESendbufFull = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 17))
qsyncESendbufFullVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendbufFullVal.setStatus('current')
if mibBuilder.loadTexts: qsyncESendbufFullVal.setDescription('(ext) Entries dropped due to full sendbuffer')
qsyncESendbufFullMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendbufFullMom.setStatus('current')
if mibBuilder.loadTexts: qsyncESendbufFullMom.setDescription('(ext) Entries dropped due to full sendbuffer')
qsyncESendbufFullMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendbufFullMax.setStatus('current')
if mibBuilder.loadTexts: qsyncESendbufFullMax.setDescription('(ext) Entries dropped due to full sendbuffer')
qsyncESendbufUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 18))
qsyncESendbufUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 18, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendbufUsageVal.setStatus('current')
if mibBuilder.loadTexts: qsyncESendbufUsageVal.setDescription('(ext) Sendbuffer usage')
qsyncESendbufUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncESendbufUsageMax.setStatus('current')
if mibBuilder.loadTexts: qsyncESendbufUsageMax.setDescription('(ext) Sendbuffer usage')
qsyncIIgnoredOOO = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 19))
qsyncIIgnoredOOOVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredOOOVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredOOOVal.setDescription('Ignored out of order updates')
qsyncIIgnoredOOOMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredOOOMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredOOOMom.setDescription('Ignored out of order updates')
qsyncIIgnoredOOOMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredOOOMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredOOOMax.setDescription('Ignored out of order updates')
qsyncIIgnoredGenWrap = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 20))
qsyncIIgnoredGenWrapVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapVal.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapVal.setDescription('Ignored updates (generation wrap)')
qsyncIIgnoredGenWrapMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapMom.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapMom.setDescription('Ignored updates (generation wrap)')
qsyncIIgnoredGenWrapMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 123, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapMax.setStatus('current')
if mibBuilder.loadTexts: qsyncIIgnoredGenWrapMax.setDescription('Ignored updates (generation wrap)')
shapingcounter = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124))
shapingcounterUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 1))
shapingcounterUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesVal.setDescription('Updates received')
shapingcounterUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesMom.setDescription('Updates received')
shapingcounterUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesMax.setDescription('Updates received')
shapingcounterActive = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 2))
shapingcounterActiveVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterActiveVal.setStatus('current')
if mibBuilder.loadTexts: shapingcounterActiveVal.setDescription('Active counters')
shapingcounterActiveMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterActiveMax.setStatus('current')
if mibBuilder.loadTexts: shapingcounterActiveMax.setDescription('Active counters')
shapingcounterClients = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 3))
shapingcounterClientsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterClientsVal.setStatus('current')
if mibBuilder.loadTexts: shapingcounterClientsVal.setDescription('Active clients')
shapingcounterClientsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterClientsMax.setStatus('current')
if mibBuilder.loadTexts: shapingcounterClientsMax.setDescription('Active clients')
shapingcounterRecycle = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 4))
shapingcounterRecycleVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterRecycleVal.setStatus('current')
if mibBuilder.loadTexts: shapingcounterRecycleVal.setDescription('Recycles')
shapingcounterRecycleMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterRecycleMom.setStatus('current')
if mibBuilder.loadTexts: shapingcounterRecycleMom.setDescription('Recycles')
shapingcounterRecycleMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterRecycleMax.setStatus('current')
if mibBuilder.loadTexts: shapingcounterRecycleMax.setDescription('Recycles')
shapingcounterUpdatesInteresting = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 5))
shapingcounterUpdatesInterestingVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingVal.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingVal.setDescription('Updates crossing granularity boundary received')
shapingcounterUpdatesInterestingMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingMom.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingMom.setDescription('Updates crossing granularity boundary received')
shapingcounterUpdatesInterestingMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 124, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingMax.setStatus('current')
if mibBuilder.loadTexts: shapingcounterUpdatesInterestingMax.setDescription('Updates crossing granularity boundary received')
divert = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125))
divertOutOfHosts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 2))
divertOutOfHostsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOutOfHostsVal.setStatus('current')
if mibBuilder.loadTexts: divertOutOfHostsVal.setDescription('Out of hosts')
divertOutOfHostsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOutOfHostsMom.setStatus('current')
if mibBuilder.loadTexts: divertOutOfHostsMom.setDescription('Out of hosts')
divertOutOfHostsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOutOfHostsMax.setStatus('current')
if mibBuilder.loadTexts: divertOutOfHostsMax.setDescription('Out of hosts')
divertOversizeL2 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 3))
divertOversizeL2Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOversizeL2Val.setStatus('current')
if mibBuilder.loadTexts: divertOversizeL2Val.setDescription('Too large L2-headers')
divertOversizeL2Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOversizeL2Mom.setStatus('current')
if mibBuilder.loadTexts: divertOversizeL2Mom.setDescription('Too large L2-headers')
divertOversizeL2Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertOversizeL2Max.setStatus('current')
if mibBuilder.loadTexts: divertOversizeL2Max.setDescription('Too large L2-headers')
divertEgressPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 4))
divertEgressPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressPacketsVal.setStatus('current')
if mibBuilder.loadTexts: divertEgressPacketsVal.setDescription('Egress packets')
divertEgressPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressPacketsMom.setStatus('current')
if mibBuilder.loadTexts: divertEgressPacketsMom.setDescription('Egress packets')
divertEgressPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressPacketsMax.setStatus('current')
if mibBuilder.loadTexts: divertEgressPacketsMax.setDescription('Egress packets')
divertEgressBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 5))
divertEgressBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressBytesVal.setStatus('current')
if mibBuilder.loadTexts: divertEgressBytesVal.setDescription('Egress bytes')
divertEgressBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressBytesMom.setStatus('current')
if mibBuilder.loadTexts: divertEgressBytesMom.setDescription('Egress bytes')
divertEgressBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertEgressBytesMax.setStatus('current')
if mibBuilder.loadTexts: divertEgressBytesMax.setDescription('Egress bytes')
divertIngressPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 6))
divertIngressPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsVal.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsVal.setDescription('Ingress packets')
divertIngressPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsMom.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsMom.setDescription('Ingress packets')
divertIngressPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsMax.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsMax.setDescription('Ingress packets')
divertIngressBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 7))
divertIngressBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressBytesVal.setStatus('current')
if mibBuilder.loadTexts: divertIngressBytesVal.setDescription('Ingress bytes')
divertIngressBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressBytesMom.setStatus('current')
if mibBuilder.loadTexts: divertIngressBytesMom.setDescription('Ingress bytes')
divertIngressBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressBytesMax.setStatus('current')
if mibBuilder.loadTexts: divertIngressBytesMax.setDescription('Ingress bytes')
divertIngressPacketsNohost = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 8))
divertIngressPacketsNohostVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNohostVal.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNohostVal.setDescription('Ingress packets with missing host')
divertIngressPacketsNohostMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNohostMom.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNohostMom.setDescription('Ingress packets with missing host')
divertIngressPacketsNohostMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNohostMax.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNohostMax.setDescription('Ingress packets with missing host')
divertIngressPacketsNol2 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 9))
divertIngressPacketsNol2Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNol2Val.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNol2Val.setDescription('Ingress packets with host missing L2-header')
divertIngressPacketsNol2Mom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNol2Mom.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNol2Mom.setDescription('Ingress packets with host missing L2-header')
divertIngressPacketsNol2Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertIngressPacketsNol2Max.setStatus('current')
if mibBuilder.loadTexts: divertIngressPacketsNol2Max.setDescription('Ingress packets with host missing L2-header')
divertHostsUse = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 10))
divertHostsUseVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHostsUseVal.setStatus('current')
if mibBuilder.loadTexts: divertHostsUseVal.setDescription('Hosts')
divertHostsUseMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHostsUseMax.setStatus('current')
if mibBuilder.loadTexts: divertHostsUseMax.setDescription('Hosts')
divertConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 11))
divertConnectionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 11, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertConnectionsVal.setStatus('current')
if mibBuilder.loadTexts: divertConnectionsVal.setDescription('Connections')
divertConnectionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertConnectionsMax.setStatus('current')
if mibBuilder.loadTexts: divertConnectionsMax.setDescription('Connections')
divertHbReqSent = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 12))
divertHbReqSentVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqSentVal.setStatus('current')
if mibBuilder.loadTexts: divertHbReqSentVal.setDescription('Heartbeat requests sent')
divertHbReqSentMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqSentMom.setStatus('current')
if mibBuilder.loadTexts: divertHbReqSentMom.setDescription('Heartbeat requests sent')
divertHbReqSentMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqSentMax.setStatus('current')
if mibBuilder.loadTexts: divertHbReqSentMax.setDescription('Heartbeat requests sent')
divertHbReqRecv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 13))
divertHbReqRecvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqRecvVal.setStatus('current')
if mibBuilder.loadTexts: divertHbReqRecvVal.setDescription('Heartbeat requests received')
divertHbReqRecvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqRecvMom.setStatus('current')
if mibBuilder.loadTexts: divertHbReqRecvMom.setDescription('Heartbeat requests received')
divertHbReqRecvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbReqRecvMax.setStatus('current')
if mibBuilder.loadTexts: divertHbReqRecvMax.setDescription('Heartbeat requests received')
divertHbRepSent = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 14))
divertHbRepSentVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepSentVal.setStatus('current')
if mibBuilder.loadTexts: divertHbRepSentVal.setDescription('Heartbeat replies sent')
divertHbRepSentMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepSentMom.setStatus('current')
if mibBuilder.loadTexts: divertHbRepSentMom.setDescription('Heartbeat replies sent')
divertHbRepSentMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepSentMax.setStatus('current')
if mibBuilder.loadTexts: divertHbRepSentMax.setDescription('Heartbeat replies sent')
divertHbRepRecv = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 15))
divertHbRepRecvVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepRecvVal.setStatus('current')
if mibBuilder.loadTexts: divertHbRepRecvVal.setDescription('Heartbeat replies received')
divertHbRepRecvMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepRecvMom.setStatus('current')
if mibBuilder.loadTexts: divertHbRepRecvMom.setDescription('Heartbeat replies received')
divertHbRepRecvMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbRepRecvMax.setStatus('current')
if mibBuilder.loadTexts: divertHbRepRecvMax.setDescription('Heartbeat replies received')
divertHbLost = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 16))
divertHbLostVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbLostVal.setStatus('current')
if mibBuilder.loadTexts: divertHbLostVal.setDescription('Heartbeats lost')
divertHbLostMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbLostMom.setStatus('current')
if mibBuilder.loadTexts: divertHbLostMom.setDescription('Heartbeats lost')
divertHbLostMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertHbLostMax.setStatus('current')
if mibBuilder.loadTexts: divertHbLostMax.setDescription('Heartbeats lost')
divertBypassPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 17))
divertBypassPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertBypassPacketsVal.setStatus('current')
if mibBuilder.loadTexts: divertBypassPacketsVal.setDescription('Bypassed packets')
divertBypassPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertBypassPacketsMom.setStatus('current')
if mibBuilder.loadTexts: divertBypassPacketsMom.setDescription('Bypassed packets')
divertBypassPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertBypassPacketsMax.setStatus('current')
if mibBuilder.loadTexts: divertBypassPacketsMax.setDescription('Bypassed packets')
divertDroppedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 18))
divertDroppedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertDroppedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: divertDroppedPacketsVal.setDescription('Dropped packets')
divertDroppedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertDroppedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: divertDroppedPacketsMom.setDescription('Dropped packets')
divertDroppedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 125, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: divertDroppedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: divertDroppedPacketsMax.setDescription('Dropped packets')
teredo = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128))
teredoPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 2))
teredoPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoPacketsVal.setStatus('current')
if mibBuilder.loadTexts: teredoPacketsVal.setDescription('RX packets')
teredoPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoPacketsMom.setStatus('current')
if mibBuilder.loadTexts: teredoPacketsMom.setDescription('RX packets')
teredoPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoPacketsMax.setStatus('current')
if mibBuilder.loadTexts: teredoPacketsMax.setDescription('RX packets')
teredoBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 3))
teredoBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoBytesVal.setStatus('current')
if mibBuilder.loadTexts: teredoBytesVal.setDescription('RX data')
teredoBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoBytesMom.setStatus('current')
if mibBuilder.loadTexts: teredoBytesMom.setDescription('RX data')
teredoBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoBytesMax.setStatus('current')
if mibBuilder.loadTexts: teredoBytesMax.setDescription('RX data')
teredoOrgHeaders = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 4))
teredoOrgHeadersVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoOrgHeadersVal.setStatus('current')
if mibBuilder.loadTexts: teredoOrgHeadersVal.setDescription('Origin indication headers')
teredoOrgHeadersMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoOrgHeadersMom.setStatus('current')
if mibBuilder.loadTexts: teredoOrgHeadersMom.setDescription('Origin indication headers')
teredoOrgHeadersMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoOrgHeadersMax.setStatus('current')
if mibBuilder.loadTexts: teredoOrgHeadersMax.setDescription('Origin indication headers')
teredoAuthHeaders = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 5))
teredoAuthHeadersVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoAuthHeadersVal.setStatus('current')
if mibBuilder.loadTexts: teredoAuthHeadersVal.setDescription('Authentication headers')
teredoAuthHeadersMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoAuthHeadersMom.setStatus('current')
if mibBuilder.loadTexts: teredoAuthHeadersMom.setDescription('Authentication headers')
teredoAuthHeadersMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoAuthHeadersMax.setStatus('current')
if mibBuilder.loadTexts: teredoAuthHeadersMax.setDescription('Authentication headers')
teredoFrags = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 6))
teredoFragsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoFragsVal.setStatus('current')
if mibBuilder.loadTexts: teredoFragsVal.setDescription('Teredo packets inside fragments')
teredoFragsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoFragsMom.setStatus('current')
if mibBuilder.loadTexts: teredoFragsMom.setDescription('Teredo packets inside fragments')
teredoFragsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 128, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: teredoFragsMax.setStatus('current')
if mibBuilder.loadTexts: teredoFragsMax.setDescription('Teredo packets inside fragments')
gtp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129))
gtpPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 2))
gtpPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpPacketsVal.setStatus('current')
if mibBuilder.loadTexts: gtpPacketsVal.setDescription('RX packets')
gtpPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpPacketsMom.setStatus('current')
if mibBuilder.loadTexts: gtpPacketsMom.setDescription('RX packets')
gtpPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpPacketsMax.setStatus('current')
if mibBuilder.loadTexts: gtpPacketsMax.setDescription('RX packets')
gtpBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 3))
gtpBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpBytesVal.setStatus('current')
if mibBuilder.loadTexts: gtpBytesVal.setDescription('RX data')
gtpBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpBytesMom.setStatus('current')
if mibBuilder.loadTexts: gtpBytesMom.setDescription('RX data')
gtpBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpBytesMax.setStatus('current')
if mibBuilder.loadTexts: gtpBytesMax.setDescription('RX data')
gtpGpdus = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 4))
gtpGpdusVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpGpdusVal.setStatus('current')
if mibBuilder.loadTexts: gtpGpdusVal.setDescription('G-PDU Packets')
gtpGpdusMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpGpdusMom.setStatus('current')
if mibBuilder.loadTexts: gtpGpdusMom.setDescription('G-PDU Packets')
gtpGpdusMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpGpdusMax.setStatus('current')
if mibBuilder.loadTexts: gtpGpdusMax.setDescription('G-PDU Packets')
gtpCreatePdpReq = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 5))
gtpCreatePdpReqVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpReqVal.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpReqVal.setDescription('Create PDP Context Request Packets')
gtpCreatePdpReqMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpReqMom.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpReqMom.setDescription('Create PDP Context Request Packets')
gtpCreatePdpReqMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpReqMax.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpReqMax.setDescription('Create PDP Context Request Packets')
gtpCreatePdpRsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 6))
gtpCreatePdpRspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpRspVal.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpRspVal.setDescription('Create PDP Context Response Packets')
gtpCreatePdpRspMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpRspMom.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpRspMom.setDescription('Create PDP Context Response Packets')
gtpCreatePdpRspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpCreatePdpRspMax.setStatus('current')
if mibBuilder.loadTexts: gtpCreatePdpRspMax.setDescription('Create PDP Context Response Packets')
gtpDeletePdpReq = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 7))
gtpDeletePdpReqVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpReqVal.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpReqVal.setDescription('Delete PDP Context Request Packets')
gtpDeletePdpReqMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpReqMom.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpReqMom.setDescription('Delete PDP Context Request Packets')
gtpDeletePdpReqMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpReqMax.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpReqMax.setDescription('Delete PDP Context Request Packets')
gtpDeletePdpRsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 8))
gtpDeletePdpRspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpRspVal.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpRspVal.setDescription('Delete PDP Context Response Packets')
gtpDeletePdpRspMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpRspMom.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpRspMom.setDescription('Delete PDP Context Response Packets')
gtpDeletePdpRspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpDeletePdpRspMax.setStatus('current')
if mibBuilder.loadTexts: gtpDeletePdpRspMax.setDescription('Delete PDP Context Response Packets')
gtpErrorInd = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 9))
gtpErrorIndVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpErrorIndVal.setStatus('current')
if mibBuilder.loadTexts: gtpErrorIndVal.setDescription('Error Indication')
gtpErrorIndMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpErrorIndMom.setStatus('current')
if mibBuilder.loadTexts: gtpErrorIndMom.setDescription('Error Indication')
gtpErrorIndMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpErrorIndMax.setStatus('current')
if mibBuilder.loadTexts: gtpErrorIndMax.setDescription('Error Indication')
gtpUnknown = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 10))
gtpUnknownVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUnknownVal.setStatus('current')
if mibBuilder.loadTexts: gtpUnknownVal.setDescription('Unkown GTP Type')
gtpUnknownMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUnknownMom.setStatus('current')
if mibBuilder.loadTexts: gtpUnknownMom.setDescription('Unkown GTP Type')
gtpUnknownMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUnknownMax.setStatus('current')
if mibBuilder.loadTexts: gtpUnknownMax.setDescription('Unkown GTP Type')
gtpUpdatePdpReq = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 11))
gtpUpdatePdpReqVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpReqVal.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpReqVal.setDescription('Update PDP Context Request Packets')
gtpUpdatePdpReqMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpReqMom.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpReqMom.setDescription('Update PDP Context Request Packets')
gtpUpdatePdpReqMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpReqMax.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpReqMax.setDescription('Update PDP Context Request Packets')
gtpUpdatePdpRsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 12))
gtpUpdatePdpRspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpRspVal.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpRspVal.setDescription('Update PDP Context Response Packets')
gtpUpdatePdpRspMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpRspMom.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpRspMom.setDescription('Update PDP Context Response Packets')
gtpUpdatePdpRspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpUpdatePdpRspMax.setStatus('current')
if mibBuilder.loadTexts: gtpUpdatePdpRspMax.setDescription('Update PDP Context Response Packets')
gtpEchoPdpReq = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 13))
gtpEchoPdpReqVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpReqVal.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpReqVal.setDescription('Echo Request Packets')
gtpEchoPdpReqMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpReqMom.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpReqMom.setDescription('Echo Request Packets')
gtpEchoPdpReqMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpReqMax.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpReqMax.setDescription('Echo Request Packets')
gtpEchoPdpRsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 14))
gtpEchoPdpRspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpRspVal.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpRspVal.setDescription('Echo Response Packets')
gtpEchoPdpRspMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpRspMom.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpRspMom.setDescription('Echo Response Packets')
gtpEchoPdpRspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpEchoPdpRspMax.setStatus('current')
if mibBuilder.loadTexts: gtpEchoPdpRspMax.setDescription('Echo Response Packets')
gtpSgsnReq = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 15))
gtpSgsnReqVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnReqVal.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnReqVal.setDescription('SGSN Context Request')
gtpSgsnReqMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnReqMom.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnReqMom.setDescription('SGSN Context Request')
gtpSgsnReqMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnReqMax.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnReqMax.setDescription('SGSN Context Request')
gtpSgsnRsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 16))
gtpSgsnRspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnRspVal.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnRspVal.setDescription('SGSN Context Response')
gtpSgsnRspMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnRspMom.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnRspMom.setDescription('SGSN Context Response')
gtpSgsnRspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 129, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gtpSgsnRspMax.setStatus('current')
if mibBuilder.loadTexts: gtpSgsnRspMax.setDescription('SGSN Context Response')
tunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130))
tunnelGtp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 2))
tunnelGtpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGtpVal.setStatus('current')
if mibBuilder.loadTexts: tunnelGtpVal.setDescription('GTP Tunnel Contexts')
tunnelGtpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGtpMax.setStatus('current')
if mibBuilder.loadTexts: tunnelGtpMax.setDescription('GTP Tunnel Contexts')
tunnelEsp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 3))
tunnelEspVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelEspVal.setStatus('current')
if mibBuilder.loadTexts: tunnelEspVal.setDescription('ESP Tunnel Contexts')
tunnelEspMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelEspMax.setStatus('current')
if mibBuilder.loadTexts: tunnelEspMax.setDescription('ESP Tunnel Contexts')
tunnelTeredo = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 4))
tunnelTeredoVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 4, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelTeredoVal.setStatus('current')
if mibBuilder.loadTexts: tunnelTeredoVal.setDescription('Teredo Tunnel Contexts')
tunnelTeredoMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelTeredoMax.setStatus('current')
if mibBuilder.loadTexts: tunnelTeredoMax.setDescription('Teredo Tunnel Contexts')
tunnelGre = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 5))
tunnelGreVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGreVal.setStatus('current')
if mibBuilder.loadTexts: tunnelGreVal.setDescription('GRE Tunnel Contexts')
tunnelGreMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGreMax.setStatus('current')
if mibBuilder.loadTexts: tunnelGreMax.setDescription('GRE Tunnel Contexts')
tunnelUnknownPkts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 6))
tunnelUnknownPktsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelUnknownPktsVal.setStatus('current')
if mibBuilder.loadTexts: tunnelUnknownPktsVal.setDescription('Packets For Unknown Tunnels')
tunnelUnknownPktsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelUnknownPktsMom.setStatus('current')
if mibBuilder.loadTexts: tunnelUnknownPktsMom.setDescription('Packets For Unknown Tunnels')
tunnelUnknownPktsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelUnknownPktsMax.setStatus('current')
if mibBuilder.loadTexts: tunnelUnknownPktsMax.setDescription('Packets For Unknown Tunnels')
tunnelDuplicates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 7))
tunnelDuplicatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelDuplicatesVal.setStatus('current')
if mibBuilder.loadTexts: tunnelDuplicatesVal.setDescription('Tunnels With Duplicate Keys')
tunnelDuplicatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelDuplicatesMom.setStatus('current')
if mibBuilder.loadTexts: tunnelDuplicatesMom.setDescription('Tunnels With Duplicate Keys')
tunnelDuplicatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelDuplicatesMax.setStatus('current')
if mibBuilder.loadTexts: tunnelDuplicatesMax.setDescription('Tunnels With Duplicate Keys')
tunnelGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 8))
tunnelGenericVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGenericVal.setStatus('current')
if mibBuilder.loadTexts: tunnelGenericVal.setDescription('Generic Tunnel Contexts')
tunnelGenericMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelGenericMax.setStatus('current')
if mibBuilder.loadTexts: tunnelGenericMax.setDescription('Generic Tunnel Contexts')
tunnelKnownPkts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 9))
tunnelKnownPktsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelKnownPktsVal.setStatus('current')
if mibBuilder.loadTexts: tunnelKnownPktsVal.setDescription('Packets For Known Tunnels')
tunnelKnownPktsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelKnownPktsMom.setStatus('current')
if mibBuilder.loadTexts: tunnelKnownPktsMom.setDescription('Packets For Known Tunnels')
tunnelKnownPktsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelKnownPktsMax.setStatus('current')
if mibBuilder.loadTexts: tunnelKnownPktsMax.setDescription('Packets For Known Tunnels')
tunnelL2tp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 10))
tunnelL2tpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelL2tpVal.setStatus('current')
if mibBuilder.loadTexts: tunnelL2tpVal.setDescription('L2TP Tunnel Contexts')
tunnelL2tpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 130, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelL2tpMax.setStatus('current')
if mibBuilder.loadTexts: tunnelL2tpMax.setDescription('L2TP Tunnel Contexts')
gre = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131))
grePackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 2))
grePacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePacketsVal.setStatus('current')
if mibBuilder.loadTexts: grePacketsVal.setDescription('RX packets')
grePacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePacketsMom.setStatus('current')
if mibBuilder.loadTexts: grePacketsMom.setDescription('RX packets')
grePacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePacketsMax.setStatus('current')
if mibBuilder.loadTexts: grePacketsMax.setDescription('RX packets')
greBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 3))
greBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greBytesVal.setStatus('current')
if mibBuilder.loadTexts: greBytesVal.setDescription('RX data')
greBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greBytesMom.setStatus('current')
if mibBuilder.loadTexts: greBytesMom.setDescription('RX data')
greBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greBytesMax.setStatus('current')
if mibBuilder.loadTexts: greBytesMax.setDescription('RX data')
greUnknownVersion = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 4))
greUnknownVersionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownVersionVal.setStatus('current')
if mibBuilder.loadTexts: greUnknownVersionVal.setDescription('GRE Packets with unknown version')
greUnknownVersionMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownVersionMom.setStatus('current')
if mibBuilder.loadTexts: greUnknownVersionMom.setDescription('GRE Packets with unknown version')
greUnknownVersionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownVersionMax.setStatus('current')
if mibBuilder.loadTexts: greUnknownVersionMax.setDescription('GRE Packets with unknown version')
greShortPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 5))
greShortPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greShortPacketsVal.setStatus('current')
if mibBuilder.loadTexts: greShortPacketsVal.setDescription('Too Short GRE Packets')
greShortPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greShortPacketsMom.setStatus('current')
if mibBuilder.loadTexts: greShortPacketsMom.setDescription('Too Short GRE Packets')
greShortPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greShortPacketsMax.setStatus('current')
if mibBuilder.loadTexts: greShortPacketsMax.setDescription('Too Short GRE Packets')
greUnknownType = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 6))
greUnknownTypeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownTypeVal.setStatus('current')
if mibBuilder.loadTexts: greUnknownTypeVal.setDescription('GRE packets with unkown type')
greUnknownTypeMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownTypeMom.setStatus('current')
if mibBuilder.loadTexts: greUnknownTypeMom.setDescription('GRE packets with unkown type')
greUnknownTypeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greUnknownTypeMax.setStatus('current')
if mibBuilder.loadTexts: greUnknownTypeMax.setDescription('GRE packets with unkown type')
greRouteFlag = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 7))
greRouteFlagVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greRouteFlagVal.setStatus('current')
if mibBuilder.loadTexts: greRouteFlagVal.setDescription('GRE packets with depricated route flag')
greRouteFlagMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greRouteFlagMom.setStatus('current')
if mibBuilder.loadTexts: greRouteFlagMom.setDescription('GRE packets with depricated route flag')
greRouteFlagMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greRouteFlagMax.setStatus('current')
if mibBuilder.loadTexts: greRouteFlagMax.setDescription('GRE packets with depricated route flag')
greIpv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 8))
greIpv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: greIpv4PacketsVal.setDescription('IPv4 Type packets')
greIpv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: greIpv4PacketsMom.setDescription('IPv4 Type packets')
greIpv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: greIpv4PacketsMax.setDescription('IPv4 Type packets')
greIpv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 9))
greIpv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: greIpv6PacketsVal.setDescription('IPv6 Type packets')
greIpv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: greIpv6PacketsMom.setDescription('IPv6 Type packets')
greIpv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greIpv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: greIpv6PacketsMax.setDescription('IPv6 Type packets')
greFfffPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 10))
greFfffPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greFfffPacketsVal.setStatus('current')
if mibBuilder.loadTexts: greFfffPacketsVal.setDescription('0xffff Type packets')
greFfffPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greFfffPacketsMom.setStatus('current')
if mibBuilder.loadTexts: greFfffPacketsMom.setDescription('0xffff Type packets')
greFfffPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: greFfffPacketsMax.setStatus('current')
if mibBuilder.loadTexts: greFfffPacketsMax.setDescription('0xffff Type packets')
grePptpPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 11))
grePptpPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePptpPacketsVal.setStatus('current')
if mibBuilder.loadTexts: grePptpPacketsVal.setDescription('PPTP Packets')
grePptpPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePptpPacketsMom.setStatus('current')
if mibBuilder.loadTexts: grePptpPacketsMom.setDescription('PPTP Packets')
grePptpPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePptpPacketsMax.setStatus('current')
if mibBuilder.loadTexts: grePptpPacketsMax.setDescription('PPTP Packets')
grePppPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 12))
grePppPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppPacketsVal.setStatus('current')
if mibBuilder.loadTexts: grePppPacketsVal.setDescription('PPP Type Packets')
grePppPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppPacketsMom.setStatus('current')
if mibBuilder.loadTexts: grePppPacketsMom.setDescription('PPP Type Packets')
grePppPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppPacketsMax.setStatus('current')
if mibBuilder.loadTexts: grePppPacketsMax.setDescription('PPP Type Packets')
grePppUnknownPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 13))
grePppUnknownPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppUnknownPacketsVal.setStatus('current')
if mibBuilder.loadTexts: grePppUnknownPacketsVal.setDescription('PPP Type Packets with Unknown Protocol')
grePppUnknownPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppUnknownPacketsMom.setStatus('current')
if mibBuilder.loadTexts: grePppUnknownPacketsMom.setDescription('PPP Type Packets with Unknown Protocol')
grePppUnknownPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 131, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: grePppUnknownPacketsMax.setStatus('current')
if mibBuilder.loadTexts: grePppUnknownPacketsMax.setDescription('PPP Type Packets with Unknown Protocol')
l2tp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132))
l2tpPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 2))
l2tpPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpPacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpPacketsVal.setDescription('RX packets')
l2tpPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpPacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpPacketsMom.setDescription('RX packets')
l2tpPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpPacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpPacketsMax.setDescription('RX packets')
l2tpBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 3))
l2tpBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpBytesVal.setStatus('current')
if mibBuilder.loadTexts: l2tpBytesVal.setDescription('RX data')
l2tpBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpBytesMom.setStatus('current')
if mibBuilder.loadTexts: l2tpBytesMom.setDescription('RX data')
l2tpBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpBytesMax.setStatus('current')
if mibBuilder.loadTexts: l2tpBytesMax.setDescription('RX data')
l2tpIpv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 4))
l2tpIpv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv4PacketsVal.setDescription('PPP IPv4 RX packets')
l2tpIpv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv4PacketsMom.setDescription('PPP IPv4 RX packets')
l2tpIpv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv4PacketsMax.setDescription('PPP IPv4 RX packets')
l2tpIpv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 5))
l2tpIpv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv6PacketsVal.setDescription('PPP IPv6 RX packets')
l2tpIpv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv6PacketsMom.setDescription('PPP IPv6 RX packets')
l2tpIpv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpIpv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpIpv6PacketsMax.setDescription('PPP IPv6 RX packets')
l2tplcpPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 6))
l2tplcpPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tplcpPacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tplcpPacketsVal.setDescription('PPP LCP RX packets')
l2tplcpPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tplcpPacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tplcpPacketsMom.setDescription('PPP LCP RX packets')
l2tplcpPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tplcpPacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tplcpPacketsMax.setDescription('PPP LCP RX packets')
l2tpcipv4Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 7))
l2tpcipv4PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv4PacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv4PacketsVal.setDescription('PPP CIPv4 RX packets')
l2tpcipv4PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv4PacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv4PacketsMom.setDescription('PPP CIPv4 RX packets')
l2tpcipv4PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv4PacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv4PacketsMax.setDescription('PPP CIPv4 RX packets')
l2tpcipv6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 8))
l2tpcipv6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv6PacketsVal.setDescription('PPP CIPv6 RX packets')
l2tpcipv6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv6PacketsMom.setDescription('PPP CIPv6 RX packets')
l2tpcipv6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpcipv6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpcipv6PacketsMax.setDescription('PPP CIPv6 RX packets')
l2tpchap6Packets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 9))
l2tpchap6PacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpchap6PacketsVal.setStatus('current')
if mibBuilder.loadTexts: l2tpchap6PacketsVal.setDescription('PPP CHAP RX packets')
l2tpchap6PacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpchap6PacketsMom.setStatus('current')
if mibBuilder.loadTexts: l2tpchap6PacketsMom.setDescription('PPP CHAP RX packets')
l2tpchap6PacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 132, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l2tpchap6PacketsMax.setStatus('current')
if mibBuilder.loadTexts: l2tpchap6PacketsMax.setDescription('PPP CHAP RX packets')
system = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133))
systemCPULoad = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 1))
systemCPULoadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCPULoadVal.setStatus('current')
if mibBuilder.loadTexts: systemCPULoadVal.setDescription('CPU load')
systemCPULoadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemCPULoadMax.setStatus('current')
if mibBuilder.loadTexts: systemCPULoadMax.setDescription('CPU load')
systemMemTotal = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 2))
systemMemTotalVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMemTotalVal.setStatus('current')
if mibBuilder.loadTexts: systemMemTotalVal.setDescription('Total RAM')
systemMemTotalMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMemTotalMax.setStatus('current')
if mibBuilder.loadTexts: systemMemTotalMax.setDescription('Total RAM')
systemMemFree = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 3))
systemMemFreeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMemFreeVal.setStatus('current')
if mibBuilder.loadTexts: systemMemFreeVal.setDescription('Free RAM')
systemMemFreeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemMemFreeMax.setStatus('current')
if mibBuilder.loadTexts: systemMemFreeMax.setDescription('Free RAM')
systemSwapTotal = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 4))
systemSwapTotalVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 4, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSwapTotalVal.setStatus('current')
if mibBuilder.loadTexts: systemSwapTotalVal.setDescription('Total swap')
systemSwapTotalMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSwapTotalMax.setStatus('current')
if mibBuilder.loadTexts: systemSwapTotalMax.setDescription('Total swap')
systemSwapFree = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 5))
systemSwapFreeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSwapFreeVal.setStatus('current')
if mibBuilder.loadTexts: systemSwapFreeVal.setDescription('Free swap')
systemSwapFreeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSwapFreeMax.setStatus('current')
if mibBuilder.loadTexts: systemSwapFreeMax.setDescription('Free swap')
systemUptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 6))
systemUptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 6, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemUptimeVal.setStatus('current')
if mibBuilder.loadTexts: systemUptimeVal.setDescription('Uptime')
systemHdUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 7))
systemHdUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHdUsageVal.setStatus('current')
if mibBuilder.loadTexts: systemHdUsageVal.setDescription('System disk usage')
systemHdUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 7, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHdUsageMax.setStatus('current')
if mibBuilder.loadTexts: systemHdUsageMax.setDescription('System disk usage')
systemHdSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 8))
systemHdSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHdSizeVal.setStatus('current')
if mibBuilder.loadTexts: systemHdSizeVal.setDescription('System disk size')
systemHdSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 133, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemHdSizeMax.setStatus('current')
if mibBuilder.loadTexts: systemHdSizeMax.setDescription('System disk size')
liveview = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134))
liveviewUptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 1))
liveviewUptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUptimeVal.setStatus('current')
if mibBuilder.loadTexts: liveviewUptimeVal.setDescription('Uptime')
liveviewClients = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 2))
liveviewClientsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewClientsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewClientsVal.setDescription('Connected clients')
liveviewClientsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewClientsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewClientsMax.setDescription('Connected clients')
liveviewPLSDClients = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 3))
liveviewPLSDClientsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPLSDClientsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewPLSDClientsVal.setDescription('Connected PLSD clients')
liveviewPLSDClientsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPLSDClientsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewPLSDClientsMax.setDescription('Connected PLSD clients')
liveviewHosts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 4))
liveviewHostsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 4, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewHostsVal.setDescription('Hosts')
liveviewHostsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewHostsMax.setDescription('Hosts')
liveviewVNOs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 5))
liveviewVNOsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewVNOsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewVNOsVal.setDescription('Visible NetObjects')
liveviewVNOsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewVNOsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewVNOsMax.setDescription('Visible NetObjects')
liveviewActiveVNOs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 6))
liveviewActiveVNOsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewActiveVNOsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewActiveVNOsVal.setDescription('Active visible NetObjects')
liveviewActiveVNOsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewActiveVNOsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewActiveVNOsMax.setDescription('Active visible NetObjects')
liveviewDrdlRevision = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 7))
liveviewDrdlRevisionVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 7, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewDrdlRevisionVal.setStatus('current')
if mibBuilder.loadTexts: liveviewDrdlRevisionVal.setDescription('DRDL revision')
liveviewDrdlRevisionMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewDrdlRevisionMax.setStatus('current')
if mibBuilder.loadTexts: liveviewDrdlRevisionMax.setDescription('DRDL revision')
liveviewFailedNetobjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 8))
liveviewFailedNetobjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedNetobjectsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedNetobjectsVal.setDescription('Visible netobject pool exhausted')
liveviewFailedNetobjectsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedNetobjectsMom.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedNetobjectsMom.setDescription('Visible netobject pool exhausted')
liveviewFailedNetobjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedNetobjectsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedNetobjectsMax.setDescription('Visible netobject pool exhausted')
liveviewFailedFullNetobjects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 9))
liveviewFailedFullNetobjectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsVal.setDescription('Active visible netobject pool exhausted')
liveviewFailedFullNetobjectsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsMom.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsMom.setDescription('Active visible netobject pool exhausted')
liveviewFailedFullNetobjectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewFailedFullNetobjectsMax.setDescription('Active visible netobject pool exhausted')
liveviewStringCacheUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 10))
liveviewStringCacheUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewStringCacheUsageVal.setStatus('current')
if mibBuilder.loadTexts: liveviewStringCacheUsageVal.setDescription('String cache usage')
liveviewStringCacheUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewStringCacheUsageMax.setStatus('current')
if mibBuilder.loadTexts: liveviewStringCacheUsageMax.setDescription('String cache usage')
liveviewUnaccountedPlsdIn = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 11))
liveviewUnaccountedPlsdInVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInVal.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInVal.setDescription('Bytes in not accounted in plsd')
liveviewUnaccountedPlsdInMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInMom.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInMom.setDescription('Bytes in not accounted in plsd')
liveviewUnaccountedPlsdInMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInMax.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdInMax.setDescription('Bytes in not accounted in plsd')
liveviewUnaccountedPlsdOut = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 12))
liveviewUnaccountedPlsdOutVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutVal.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutVal.setDescription('Bytes out not accounted in plsd')
liveviewUnaccountedPlsdOutMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutMom.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutMom.setDescription('Bytes out not accounted in plsd')
liveviewUnaccountedPlsdOutMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutMax.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdOutMax.setDescription('Bytes out not accounted in plsd')
liveviewUnaccountedPlsdFlows = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 13))
liveviewUnaccountedPlsdFlowsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsVal.setDescription('Flow updates not sent to plsd')
liveviewUnaccountedPlsdFlowsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsMom.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsMom.setDescription('Flow updates not sent to plsd')
liveviewUnaccountedPlsdFlowsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewUnaccountedPlsdFlowsMax.setDescription('Flow updates not sent to plsd')
liveviewHostCacheExhausted = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 14))
liveviewHostCacheExhaustedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostCacheExhaustedVal.setStatus('current')
if mibBuilder.loadTexts: liveviewHostCacheExhaustedVal.setDescription('Hosts not created due to exhausted cache')
liveviewHostCacheExhaustedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostCacheExhaustedMom.setStatus('current')
if mibBuilder.loadTexts: liveviewHostCacheExhaustedMom.setDescription('Hosts not created due to exhausted cache')
liveviewHostCacheExhaustedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostCacheExhaustedMax.setStatus('current')
if mibBuilder.loadTexts: liveviewHostCacheExhaustedMax.setDescription('Hosts not created due to exhausted cache')
liveviewPropEntryUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 15))
liveviewPropEntryUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 15, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropEntryUsageVal.setStatus('current')
if mibBuilder.loadTexts: liveviewPropEntryUsageVal.setDescription('Property entries used')
liveviewPropEntryUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropEntryUsageMax.setStatus('current')
if mibBuilder.loadTexts: liveviewPropEntryUsageMax.setDescription('Property entries used')
liveviewPropArrayUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 16))
liveviewPropArrayUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropArrayUsageVal.setStatus('current')
if mibBuilder.loadTexts: liveviewPropArrayUsageVal.setDescription('Property arrays used')
liveviewPropArrayUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropArrayUsageMax.setStatus('current')
if mibBuilder.loadTexts: liveviewPropArrayUsageMax.setDescription('Property arrays used')
liveviewPropUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 17))
liveviewPropUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 17, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropUsageVal.setStatus('current')
if mibBuilder.loadTexts: liveviewPropUsageVal.setDescription('Properties stored')
liveviewPropUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPropUsageMax.setStatus('current')
if mibBuilder.loadTexts: liveviewPropUsageMax.setDescription('Properties stored')
liveviewTooManyNetobjectsOnHost = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 18))
liveviewTooManyNetobjectsOnHostVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 18, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewTooManyNetobjectsOnHostVal.setStatus('current')
if mibBuilder.loadTexts: liveviewTooManyNetobjectsOnHostVal.setDescription('Too many netobjects on a single host')
liveviewTooManyNetobjectsOnHostMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewTooManyNetobjectsOnHostMax.setStatus('current')
if mibBuilder.loadTexts: liveviewTooManyNetobjectsOnHostMax.setDescription('Too many netobjects on a single host')
liveviewHostnameAllocs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 19))
liveviewHostnameAllocsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 19, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostnameAllocsVal.setStatus('current')
if mibBuilder.loadTexts: liveviewHostnameAllocsVal.setDescription('Hostname allocations')
liveviewHostnameAllocsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostnameAllocsMax.setStatus('current')
if mibBuilder.loadTexts: liveviewHostnameAllocsMax.setDescription('Hostname allocations')
liveviewHostnameAllocFail = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 20))
liveviewHostnameAllocFailVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 20, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostnameAllocFailVal.setStatus('current')
if mibBuilder.loadTexts: liveviewHostnameAllocFailVal.setDescription('Hostname allocation failures')
liveviewHostnameAllocFailMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewHostnameAllocFailMax.setStatus('current')
if mibBuilder.loadTexts: liveviewHostnameAllocFailMax.setDescription('Hostname allocation failures')
liveviewReaperRecvBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 21))
liveviewReaperRecvBufVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 21, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewReaperRecvBufVal.setStatus('current')
if mibBuilder.loadTexts: liveviewReaperRecvBufVal.setDescription('Reaper receive buffer usage')
liveviewReaperRecvBufMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewReaperRecvBufMax.setStatus('current')
if mibBuilder.loadTexts: liveviewReaperRecvBufMax.setDescription('Reaper receive buffer usage')
liveviewReaperSendBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 22))
liveviewReaperSendBufVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 22, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewReaperSendBufVal.setStatus('current')
if mibBuilder.loadTexts: liveviewReaperSendBufVal.setDescription('Reaper send buffer usage')
liveviewReaperSendBufMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewReaperSendBufMax.setStatus('current')
if mibBuilder.loadTexts: liveviewReaperSendBufMax.setDescription('Reaper send buffer usage')
liveviewPLSDBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 23))
liveviewPLSDBufVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 23, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPLSDBufVal.setStatus('current')
if mibBuilder.loadTexts: liveviewPLSDBufVal.setDescription('PLSD buffer usage')
liveviewPLSDBufMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 134, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: liveviewPLSDBufMax.setStatus('current')
if mibBuilder.loadTexts: liveviewPLSDBufMax.setDescription('PLSD buffer usage')
lb = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135))
lbNumFp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 1))
lbNumFpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbNumFpVal.setStatus('current')
if mibBuilder.loadTexts: lbNumFpVal.setDescription('Number of flow processors')
lbNumFpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbNumFpMax.setStatus('current')
if mibBuilder.loadTexts: lbNumFpMax.setDescription('Number of flow processors')
lbActiveFp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 2))
lbActiveFpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbActiveFpVal.setStatus('current')
if mibBuilder.loadTexts: lbActiveFpVal.setDescription('Logical flow processors')
lbActiveFpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbActiveFpMax.setStatus('current')
if mibBuilder.loadTexts: lbActiveFpMax.setDescription('Logical flow processors')
lbRunningFp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 3))
lbRunningFpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRunningFpVal.setStatus('current')
if mibBuilder.loadTexts: lbRunningFpVal.setDescription('Online flow processors')
lbRunningFpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRunningFpMax.setStatus('current')
if mibBuilder.loadTexts: lbRunningFpMax.setDescription('Online flow processors')
lbRxPktsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 4))
lbRxPktsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsIntVal.setDescription('RX packets internal')
lbRxPktsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsIntMom.setDescription('RX packets internal')
lbRxPktsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsIntMax.setDescription('RX packets internal')
lbRxPktsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 5))
lbRxPktsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsExtVal.setDescription('RX packets external')
lbRxPktsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsExtMom.setDescription('RX packets external')
lbRxPktsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxPktsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbRxPktsExtMax.setDescription('RX packets external')
lbRxBytesInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 6))
lbRxBytesIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesIntVal.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesIntVal.setDescription('RX bytes internal')
lbRxBytesIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesIntMom.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesIntMom.setDescription('RX bytes internal')
lbRxBytesIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesIntMax.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesIntMax.setDescription('RX bytes internal')
lbRxBytesExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 7))
lbRxBytesExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesExtVal.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesExtVal.setDescription('RX bytes external')
lbRxBytesExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesExtMom.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesExtMom.setDescription('RX bytes external')
lbRxBytesExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxBytesExtMax.setStatus('current')
if mibBuilder.loadTexts: lbRxBytesExtMax.setDescription('RX bytes external')
lbRxErrorsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 8))
lbRxErrorsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 8, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsIntVal.setDescription('RX errors internal')
lbRxErrorsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 8, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsIntMom.setDescription('RX errors internal')
lbRxErrorsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsIntMax.setDescription('RX errors internal')
lbRxErrorsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 9))
lbRxErrorsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 9, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsExtVal.setDescription('RX errors external')
lbRxErrorsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 9, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsExtMom.setDescription('RX errors external')
lbRxErrorsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxErrorsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbRxErrorsExtMax.setDescription('RX errors external')
lbTxDirectInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 10))
lbTxDirectIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectIntVal.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectIntVal.setDescription('TX direct internal')
lbTxDirectIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectIntMom.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectIntMom.setDescription('TX direct internal')
lbTxDirectIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectIntMax.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectIntMax.setDescription('TX direct internal')
lbTxDirectExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 11))
lbTxDirectExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectExtVal.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectExtVal.setDescription('TX direct external')
lbTxDirectExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectExtMom.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectExtMom.setDescription('TX direct external')
lbTxDirectExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDirectExtMax.setStatus('current')
if mibBuilder.loadTexts: lbTxDirectExtMax.setDescription('TX direct external')
lbTxDropsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 12))
lbTxDropsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsIntVal.setDescription('TX drops internal')
lbTxDropsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsIntMom.setDescription('TX drops internal')
lbTxDropsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsIntMax.setDescription('TX drops internal')
lbTxDropsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 13))
lbTxDropsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsExtVal.setDescription('TX drops external')
lbTxDropsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsExtMom.setDescription('TX drops external')
lbTxDropsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxDropsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbTxDropsExtMax.setDescription('TX drops external')
lbRxFsInvalidVer = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 14))
lbRxFsInvalidVerVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxFsInvalidVerVal.setStatus('current')
if mibBuilder.loadTexts: lbRxFsInvalidVerVal.setDescription('Incompatible flowsync packets')
lbRxFsInvalidVerMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxFsInvalidVerMom.setStatus('current')
if mibBuilder.loadTexts: lbRxFsInvalidVerMom.setDescription('Incompatible flowsync packets')
lbRxFsInvalidVerMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbRxFsInvalidVerMax.setStatus('current')
if mibBuilder.loadTexts: lbRxFsInvalidVerMax.setDescription('Incompatible flowsync packets')
lbShuntPktIpv4AddrInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 15))
lbShuntPktIpv4AddrIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 15, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntVal.setDescription('Shunt packets internal (IPv4 address)')
lbShuntPktIpv4AddrIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 15, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntMom.setDescription('Shunt packets internal (IPv4 address)')
lbShuntPktIpv4AddrIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrIntMax.setDescription('Shunt packets internal (IPv4 address)')
lbShuntPktIpv4AddrExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 16))
lbShuntPktIpv4AddrExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 16, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtVal.setDescription('Shunt packets external (IPv4 address)')
lbShuntPktIpv4AddrExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 16, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtMom.setDescription('Shunt packets external (IPv4 address)')
lbShuntPktIpv4AddrExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4AddrExtMax.setDescription('Shunt packets external (IPv4 address)')
lbShuntByteIpv4AddrInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 17))
lbShuntByteIpv4AddrIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntVal.setDescription('Shunt bytes internal (IPv4 address)')
lbShuntByteIpv4AddrIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntMom.setDescription('Shunt bytes internal (IPv4 address)')
lbShuntByteIpv4AddrIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrIntMax.setDescription('Shunt bytes internal (IPv4 address)')
lbShuntByteIpv4AddrExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 18))
lbShuntByteIpv4AddrExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtVal.setDescription('Shunt bytes external (IPv4 address)')
lbShuntByteIpv4AddrExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtMom.setDescription('Shunt bytes external (IPv4 address)')
lbShuntByteIpv4AddrExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4AddrExtMax.setDescription('Shunt bytes external (IPv4 address)')
lbShuntPktIpv4ProtoInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 19))
lbShuntPktIpv4ProtoIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntVal.setDescription('Shunt packets internal (IPv4 protocol)')
lbShuntPktIpv4ProtoIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntMom.setDescription('Shunt packets internal (IPv4 protocol)')
lbShuntPktIpv4ProtoIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoIntMax.setDescription('Shunt packets internal (IPv4 protocol)')
lbShuntPktIpv4ProtoExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 20))
lbShuntPktIpv4ProtoExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtVal.setDescription('Shunt packets external (IPv4 protocol)')
lbShuntPktIpv4ProtoExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtMom.setDescription('Shunt packets external (IPv4 protocol)')
lbShuntPktIpv4ProtoExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv4ProtoExtMax.setDescription('Shunt packets external (IPv4 protocol)')
lbShuntByteIpv4ProtoInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 21))
lbShuntByteIpv4ProtoIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntVal.setDescription('Shunt bytes internal (IPv4 protocol)')
lbShuntByteIpv4ProtoIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntMom.setDescription('Shunt bytes internal (IPv4 protocol)')
lbShuntByteIpv4ProtoIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoIntMax.setDescription('Shunt bytes internal (IPv4 protocol)')
lbShuntByteIpv4ProtoExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 22))
lbShuntByteIpv4ProtoExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 22, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtVal.setDescription('Shunt bytes external (IPv4 protocol)')
lbShuntByteIpv4ProtoExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 22, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtMom.setDescription('Shunt bytes external (IPv4 protocol)')
lbShuntByteIpv4ProtoExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv4ProtoExtMax.setDescription('Shunt bytes external (IPv4 protocol)')
lbShuntPktEthertypeInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 23))
lbShuntPktEthertypeIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeIntVal.setDescription('Shunt packets internal (ethertype)')
lbShuntPktEthertypeIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeIntMom.setDescription('Shunt packets internal (ethertype)')
lbShuntPktEthertypeIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeIntMax.setDescription('Shunt packets internal (ethertype)')
lbShuntPktEthertypeExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 24))
lbShuntPktEthertypeExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 24, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeExtVal.setDescription('Shunt packets external (ethertype)')
lbShuntPktEthertypeExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 24, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeExtMom.setDescription('Shunt packets external (ethertype)')
lbShuntPktEthertypeExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 24, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEthertypeExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEthertypeExtMax.setDescription('Shunt packets external (ethertype)')
lbShuntByteEthertypeInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 25))
lbShuntByteEthertypeIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 25, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeIntVal.setDescription('Shunt bytes internal (ethertype)')
lbShuntByteEthertypeIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 25, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeIntMom.setDescription('Shunt bytes internal (ethertype)')
lbShuntByteEthertypeIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeIntMax.setDescription('Shunt bytes internal (ethertype)')
lbShuntByteEthertypeExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 26))
lbShuntByteEthertypeExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 26, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeExtVal.setDescription('Shunt bytes external (ethertype)')
lbShuntByteEthertypeExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 26, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeExtMom.setDescription('Shunt bytes external (ethertype)')
lbShuntByteEthertypeExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 26, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEthertypeExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEthertypeExtMax.setDescription('Shunt bytes external (ethertype)')
lbShuntPktDot1qInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 27))
lbShuntPktDot1qIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 27, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qIntVal.setDescription('Shunt packets internal (dot1q)')
lbShuntPktDot1qIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 27, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qIntMom.setDescription('Shunt packets internal (dot1q)')
lbShuntPktDot1qIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qIntMax.setDescription('Shunt packets internal (dot1q)')
lbShuntPktDot1qExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 28))
lbShuntPktDot1qExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 28, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qExtVal.setDescription('Shunt packets external (dot1q)')
lbShuntPktDot1qExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 28, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qExtMom.setDescription('Shunt packets external (dot1q)')
lbShuntPktDot1qExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktDot1qExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktDot1qExtMax.setDescription('Shunt packets external (dot1q)')
lbShuntByteDot1qInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 29))
lbShuntByteDot1qIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 29, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qIntVal.setDescription('Shunt bytes internal (dot1q)')
lbShuntByteDot1qIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 29, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qIntMom.setDescription('Shunt bytes internal (dot1q)')
lbShuntByteDot1qIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qIntMax.setDescription('Shunt bytes internal (dot1q)')
lbShuntByteDot1qExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 30))
lbShuntByteDot1qExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 30, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qExtVal.setDescription('Shunt bytes external (dot1q)')
lbShuntByteDot1qExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 30, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qExtMom.setDescription('Shunt bytes external (dot1q)')
lbShuntByteDot1qExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteDot1qExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteDot1qExtMax.setDescription('Shunt bytes external (dot1q)')
lbShuntPktMplsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 31))
lbShuntPktMplsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 31, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsIntVal.setDescription('Shunt packets internal (MPLS)')
lbShuntPktMplsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 31, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsIntMom.setDescription('Shunt packets internal (MPLS)')
lbShuntPktMplsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 31, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsIntMax.setDescription('Shunt packets internal (MPLS)')
lbShuntPktMplsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 32))
lbShuntPktMplsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 32, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsExtVal.setDescription('Shunt packets external (MPLS)')
lbShuntPktMplsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 32, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsExtMom.setDescription('Shunt packets external (MPLS)')
lbShuntPktMplsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 32, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktMplsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktMplsExtMax.setDescription('Shunt packets external (MPLS)')
lbShuntByteMplsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 33))
lbShuntByteMplsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 33, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsIntVal.setDescription('Shunt bytes internal (MPLS)')
lbShuntByteMplsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 33, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsIntMom.setDescription('Shunt bytes internal (MPLS)')
lbShuntByteMplsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsIntMax.setDescription('Shunt bytes internal (MPLS)')
lbShuntByteMplsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 34))
lbShuntByteMplsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 34, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsExtVal.setDescription('Shunt bytes external (MPLS)')
lbShuntByteMplsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 34, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsExtMom.setDescription('Shunt bytes external (MPLS)')
lbShuntByteMplsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteMplsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteMplsExtMax.setDescription('Shunt bytes external (MPLS)')
lbShuntPktEomplsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 35))
lbShuntPktEomplsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 35, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsIntVal.setDescription('Shunt packets internal (EoMPLS)')
lbShuntPktEomplsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 35, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsIntMom.setDescription('Shunt packets internal (EoMPLS)')
lbShuntPktEomplsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsIntMax.setDescription('Shunt packets internal (EoMPLS)')
lbShuntPktEomplsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 36))
lbShuntPktEomplsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 36, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsExtVal.setDescription('Shunt packets external (EoMPLS)')
lbShuntPktEomplsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 36, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsExtMom.setDescription('Shunt packets external (EoMPLS)')
lbShuntPktEomplsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktEomplsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktEomplsExtMax.setDescription('Shunt packets external (EoMPLS)')
lbShuntByteEomplsInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 37))
lbShuntByteEomplsIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 37, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsIntVal.setDescription('Shunt bytes internal (EoMPLS)')
lbShuntByteEomplsIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 37, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsIntMom.setDescription('Shunt bytes internal (EoMPLS)')
lbShuntByteEomplsIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsIntMax.setDescription('Shunt bytes internal (EoMPLS)')
lbShuntByteEomplsExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 38))
lbShuntByteEomplsExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 38, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsExtVal.setDescription('Shunt bytes external (EoMPLS)')
lbShuntByteEomplsExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 38, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsExtMom.setDescription('Shunt bytes external (EoMPLS)')
lbShuntByteEomplsExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteEomplsExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteEomplsExtMax.setDescription('Shunt bytes external (EoMPLS)')
lbLbUptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 39))
lbLbUptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 39, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbLbUptimeVal.setStatus('current')
if mibBuilder.loadTexts: lbLbUptimeVal.setDescription('CPU uptime')
lbCpuLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 40))
lbCpuLoadVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 40, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbCpuLoadVal.setStatus('current')
if mibBuilder.loadTexts: lbCpuLoadVal.setDescription('CPU load')
lbCpuLoadMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 40, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbCpuLoadMax.setStatus('current')
if mibBuilder.loadTexts: lbCpuLoadMax.setDescription('CPU load')
lbShuntPktIpv6AddrInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 41))
lbShuntPktIpv6AddrIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 41, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntVal.setDescription('Shunt packets internal (IPv6 address)')
lbShuntPktIpv6AddrIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 41, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntMom.setDescription('Shunt packets internal (IPv6 address)')
lbShuntPktIpv6AddrIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 41, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrIntMax.setDescription('Shunt packets internal (IPv6 address)')
lbShuntPktIpv6AddrExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 42))
lbShuntPktIpv6AddrExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 42, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtVal.setDescription('Shunt packets external (IPv6 address)')
lbShuntPktIpv6AddrExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 42, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtMom.setDescription('Shunt packets external (IPv6 address)')
lbShuntPktIpv6AddrExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 42, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntPktIpv6AddrExtMax.setDescription('Shunt packets external (IPv6 address)')
lbShuntByteIpv6AddrInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 43))
lbShuntByteIpv6AddrIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 43, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntVal.setDescription('Shunt bytes internal (IPv6 address)')
lbShuntByteIpv6AddrIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 43, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntMom.setDescription('Shunt bytes internal (IPv6 address)')
lbShuntByteIpv6AddrIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 43, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrIntMax.setDescription('Shunt bytes internal (IPv6 address)')
lbShuntByteIpv6AddrExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 44))
lbShuntByteIpv6AddrExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 44, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtVal.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtVal.setDescription('Shunt bytes external (IPv6 address)')
lbShuntByteIpv6AddrExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 44, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtMom.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtMom.setDescription('Shunt bytes external (IPv6 address)')
lbShuntByteIpv6AddrExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 44, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtMax.setStatus('current')
if mibBuilder.loadTexts: lbShuntByteIpv6AddrExtMax.setDescription('Shunt bytes external (IPv6 address)')
lbLogicalFp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 45))
lbLogicalFpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 45, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbLogicalFpVal.setStatus('current')
if mibBuilder.loadTexts: lbLogicalFpVal.setDescription('Logical ID')
lbLogicalFpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 45, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbLogicalFpMax.setStatus('current')
if mibBuilder.loadTexts: lbLogicalFpMax.setDescription('Logical ID')
lbTxFs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 46))
lbTxFsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 46, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFsVal.setStatus('current')
if mibBuilder.loadTexts: lbTxFsVal.setDescription('TX flowsync packets')
lbTxFsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 46, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFsMom.setStatus('current')
if mibBuilder.loadTexts: lbTxFsMom.setDescription('TX flowsync packets')
lbTxFsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 46, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFsMax.setStatus('current')
if mibBuilder.loadTexts: lbTxFsMax.setDescription('TX flowsync packets')
lbTxFpInt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 47))
lbTxFpIntVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 47, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpIntVal.setStatus('current')
if mibBuilder.loadTexts: lbTxFpIntVal.setDescription('TX packets internal')
lbTxFpIntMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 47, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpIntMom.setStatus('current')
if mibBuilder.loadTexts: lbTxFpIntMom.setDescription('TX packets internal')
lbTxFpIntMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 47, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpIntMax.setStatus('current')
if mibBuilder.loadTexts: lbTxFpIntMax.setDescription('TX packets internal')
lbTxFpExt = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 48))
lbTxFpExtVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 48, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpExtVal.setStatus('current')
if mibBuilder.loadTexts: lbTxFpExtVal.setDescription('TX packets external')
lbTxFpExtMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 48, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpExtMom.setStatus('current')
if mibBuilder.loadTexts: lbTxFpExtMom.setDescription('TX packets external')
lbTxFpExtMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 48, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbTxFpExtMax.setStatus('current')
if mibBuilder.loadTexts: lbTxFpExtMax.setDescription('TX packets external')
lbHbLost = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 49))
lbHbLostVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 49, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbHbLostVal.setStatus('current')
if mibBuilder.loadTexts: lbHbLostVal.setDescription('Heartbeat packets lost')
lbHbLostMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 49, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbHbLostMom.setStatus('current')
if mibBuilder.loadTexts: lbHbLostMom.setDescription('Heartbeat packets lost')
lbHbLostMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 49, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbHbLostMax.setStatus('current')
if mibBuilder.loadTexts: lbHbLostMax.setDescription('Heartbeat packets lost')
lbBucketMoves = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 50))
lbBucketMovesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 50, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBucketMovesVal.setStatus('current')
if mibBuilder.loadTexts: lbBucketMovesVal.setDescription('Moved buckets')
lbBucketMovesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 50, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBucketMovesMom.setStatus('current')
if mibBuilder.loadTexts: lbBucketMovesMom.setDescription('Moved buckets')
lbBucketMovesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 50, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBucketMovesMax.setStatus('current')
if mibBuilder.loadTexts: lbBucketMovesMax.setDescription('Moved buckets')
lbBlacklistedBuckets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 51))
lbBlacklistedBucketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 51, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBlacklistedBucketsVal.setStatus('current')
if mibBuilder.loadTexts: lbBlacklistedBucketsVal.setDescription('Blacklisted buckets')
lbBlacklistedBucketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 51, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBlacklistedBucketsMax.setStatus('current')
if mibBuilder.loadTexts: lbBlacklistedBucketsMax.setDescription('Blacklisted buckets')
lbBlacklistedPackets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 52))
lbBlacklistedPacketsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 52, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBlacklistedPacketsVal.setStatus('current')
if mibBuilder.loadTexts: lbBlacklistedPacketsVal.setDescription('Blacklisted packets')
lbBlacklistedPacketsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 52, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBlacklistedPacketsMom.setStatus('current')
if mibBuilder.loadTexts: lbBlacklistedPacketsMom.setDescription('Blacklisted packets')
lbBlacklistedPacketsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 135, 52, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lbBlacklistedPacketsMax.setStatus('current')
if mibBuilder.loadTexts: lbBlacklistedPacketsMax.setDescription('Blacklisted packets')
plsd = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136))
plsdDumptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 1))
plsdDumptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdDumptimeVal.setStatus('current')
if mibBuilder.loadTexts: plsdDumptimeVal.setDescription('Dump time')
plsdValuesDataset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 2))
plsdValuesDatasetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesDatasetVal.setStatus('current')
if mibBuilder.loadTexts: plsdValuesDatasetVal.setDescription('Values in dataset')
plsdValuesDatasetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesDatasetMax.setStatus('current')
if mibBuilder.loadTexts: plsdValuesDatasetMax.setDescription('Values in dataset')
plsdValuesDelayedExpand = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 3))
plsdValuesDelayedExpandVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesDelayedExpandVal.setStatus('current')
if mibBuilder.loadTexts: plsdValuesDelayedExpandVal.setDescription('Values in dataset (delayed expand)')
plsdValuesDelayedExpandMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesDelayedExpandMax.setStatus('current')
if mibBuilder.loadTexts: plsdValuesDelayedExpandMax.setDescription('Values in dataset (delayed expand)')
plsdLinksDataset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 4))
plsdLinksDatasetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 4, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdLinksDatasetVal.setStatus('current')
if mibBuilder.loadTexts: plsdLinksDatasetVal.setDescription('Links in dataset')
plsdLinksDatasetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdLinksDatasetMax.setStatus('current')
if mibBuilder.loadTexts: plsdLinksDatasetMax.setDescription('Links in dataset')
plsdValuesAggrDataset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 5))
plsdValuesAggrDatasetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesAggrDatasetVal.setStatus('current')
if mibBuilder.loadTexts: plsdValuesAggrDatasetVal.setDescription('Values in dataset(Aggregation)')
plsdValuesAggrDatasetMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesAggrDatasetMax.setStatus('current')
if mibBuilder.loadTexts: plsdValuesAggrDatasetMax.setDescription('Values in dataset(Aggregation)')
plsdValueReject = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 6))
plsdValueRejectVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectVal.setDescription('Values not created, Cache exhausted')
plsdValueRejectMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectMom.setDescription('Values not created, Cache exhausted')
plsdValueRejectMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectMax.setDescription('Values not created, Cache exhausted')
plsdValueRejectPrior = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 7))
plsdValueRejectPriorVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectPriorVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectPriorVal.setDescription('Values not created, Priority Threshold')
plsdValueRejectPriorMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectPriorMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectPriorMom.setDescription('Values not created, Priority Threshold')
plsdValueRejectPriorMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueRejectPriorMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueRejectPriorMax.setDescription('Values not created, Priority Threshold')
plsdValuesFiltered = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 8))
plsdValuesFilteredVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesFilteredVal.setStatus('current')
if mibBuilder.loadTexts: plsdValuesFilteredVal.setDescription('Values filtered')
plsdValuesFilteredMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesFilteredMax.setStatus('current')
if mibBuilder.loadTexts: plsdValuesFilteredMax.setDescription('Values filtered')
plsdValuesSent = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 9))
plsdValuesSentVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesSentVal.setStatus('current')
if mibBuilder.loadTexts: plsdValuesSentVal.setDescription('Values sent to Statwriter')
plsdValuesSentMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValuesSentMax.setStatus('current')
if mibBuilder.loadTexts: plsdValuesSentMax.setDescription('Values sent to Statwriter')
plsdValueLookups = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 10))
plsdValueLookupsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 10, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueLookupsVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueLookupsVal.setDescription('Value lookups')
plsdValueLookupsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 10, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueLookupsMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueLookupsMom.setDescription('Value lookups')
plsdValueLookupsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueLookupsMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueLookupsMax.setDescription('Value lookups')
plsdValueUpdatesBytes = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 11))
plsdValueUpdatesBytesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 11, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesVal.setDescription('Value updates(Bytes)')
plsdValueUpdatesBytesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 11, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesMom.setDescription('Value updates(Bytes)')
plsdValueUpdatesBytesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesMax.setDescription('Value updates(Bytes)')
plsdValueUpdatesBytesHp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 12))
plsdValueUpdatesBytesHpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 12, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpVal.setDescription('Value updates, High Priority (Bytes)')
plsdValueUpdatesBytesHpMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 12, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpMom.setDescription('Value updates, High Priority (Bytes)')
plsdValueUpdatesBytesHpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesBytesHpMax.setDescription('Value updates, High Priority (Bytes)')
plsdValueUpdatesConns = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 13))
plsdValueUpdatesConnsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 13, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsVal.setDescription('Value updates(Conns)')
plsdValueUpdatesConnsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 13, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsMom.setDescription('Value updates(Conns)')
plsdValueUpdatesConnsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsMax.setDescription('Value updates(Conns)')
plsdValueUpdatesConnsHp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 14))
plsdValueUpdatesConnsHpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 14, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpVal.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpVal.setDescription('Value updates, High Priority (Conns)')
plsdValueUpdatesConnsHpMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 14, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpMom.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpMom.setDescription('Value updates, High Priority (Conns)')
plsdValueUpdatesConnsHpMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 14, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpMax.setStatus('current')
if mibBuilder.loadTexts: plsdValueUpdatesConnsHpMax.setDescription('Value updates, High Priority (Conns)')
plsdConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 15))
plsdConnectionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 15, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnectionsVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnectionsVal.setDescription('Connection table size')
plsdConnectionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 15, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnectionsMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnectionsMax.setDescription('Connection table size')
plsdHosts = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 16))
plsdHostsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 16, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdHostsVal.setStatus('current')
if mibBuilder.loadTexts: plsdHostsVal.setDescription('Hosts')
plsdHostsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 16, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdHostsMax.setStatus('current')
if mibBuilder.loadTexts: plsdHostsMax.setDescription('Hosts')
plsdConnUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 17))
plsdConnUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 17, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesVal.setDescription('Connection updates')
plsdConnUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 17, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesMom.setDescription('Connection updates')
plsdConnUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 17, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesMax.setDescription('Connection updates')
plsdConnUpdatesFull = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 18))
plsdConnUpdatesFullVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 18, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFullVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFullVal.setDescription('Connection updates (Full)')
plsdConnUpdatesFullMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 18, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFullMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFullMom.setDescription('Connection updates (Full)')
plsdConnUpdatesFullMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 18, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFullMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFullMax.setDescription('Connection updates (Full)')
plsdConnUpdatesNew = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 19))
plsdConnUpdatesNewVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 19, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesNewVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesNewVal.setDescription('Connection updates (New)')
plsdConnUpdatesNewMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 19, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesNewMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesNewMom.setDescription('Connection updates (New)')
plsdConnUpdatesNewMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesNewMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesNewMax.setDescription('Connection updates (New)')
plsdConnUpdatesFiltered = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 20))
plsdConnUpdatesFilteredVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 20, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFilteredVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFilteredVal.setDescription('Connection updates (Threshold Filtered)')
plsdConnUpdatesFilteredMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 20, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFilteredMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFilteredMom.setDescription('Connection updates (Threshold Filtered)')
plsdConnUpdatesFilteredMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnUpdatesFilteredMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnUpdatesFilteredMax.setDescription('Connection updates (Threshold Filtered)')
plsdConnsDropped = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 21))
plsdConnsDroppedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 21, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnsDroppedVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnsDroppedVal.setDescription('Connections dropped (Cache Exhausted)')
plsdConnsDroppedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 21, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnsDroppedMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnsDroppedMom.setDescription('Connections dropped (Cache Exhausted)')
plsdConnsDroppedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnsDroppedMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnsDroppedMax.setDescription('Connections dropped (Cache Exhausted)')
plsdConnlogConns = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 22))
plsdConnlogConnsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 22, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsVal.setDescription('Connlog connections stored')
plsdConnlogConnsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsMax.setDescription('Connlog connections stored')
plsdConnlogConnsAdded = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 23))
plsdConnlogConnsAddedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 23, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsAddedVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsAddedVal.setDescription('Connlog connections added')
plsdConnlogConnsAddedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 23, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsAddedMom.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsAddedMom.setDescription('Connlog connections added')
plsdConnlogConnsAddedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsAddedMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsAddedMax.setDescription('Connlog connections added')
plsdConnlogDumptimeRemaining = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 24))
plsdConnlogDumptimeRemainingVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 24, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogDumptimeRemainingVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogDumptimeRemainingVal.setDescription('Connlog time remaining')
plsdConnlogConnsDumped = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 25))
plsdConnlogConnsDumpedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsDumpedVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsDumpedVal.setDescription('Connlog connections dumped')
plsdConnlogConnsDumpedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogConnsDumpedMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogConnsDumpedMax.setDescription('Connlog connections dumped')
plsdConnlogDumptime = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 26))
plsdConnlogDumptimeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 26, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogDumptimeVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogDumptimeVal.setDescription('Connlog dumptime')
plsdLastdump = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 27))
plsdLastdumpVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 27, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdLastdumpVal.setStatus('current')
if mibBuilder.loadTexts: plsdLastdumpVal.setDescription('Time of last dump')
plsdRingbufUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 28))
plsdRingbufUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 28, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdRingbufUsageVal.setStatus('current')
if mibBuilder.loadTexts: plsdRingbufUsageVal.setDescription('Recv Ringbuf usage (Collector)')
plsdRingbufUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdRingbufUsageMax.setStatus('current')
if mibBuilder.loadTexts: plsdRingbufUsageMax.setDescription('Recv Ringbuf usage (Collector)')
plsdConnlogDrops = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 30))
plsdConnlogDropsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 30, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogDropsVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogDropsVal.setDescription('Connlog entries dropped')
plsdConnlogDropsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 30, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogDropsMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogDropsMax.setDescription('Connlog entries dropped')
plsdBwUsed = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 31))
plsdBwUsedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 31, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdBwUsedVal.setStatus('current')
if mibBuilder.loadTexts: plsdBwUsedVal.setDescription('Bandwidth used')
plsdBwUsedMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 31, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdBwUsedMom.setStatus('current')
if mibBuilder.loadTexts: plsdBwUsedMom.setDescription('Bandwidth used')
plsdBwUsedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 31, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdBwUsedMax.setStatus('current')
if mibBuilder.loadTexts: plsdBwUsedMax.setDescription('Bandwidth used')
plsdTimeConnected = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 32))
plsdTimeConnectedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 32, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdTimeConnectedVal.setStatus('current')
if mibBuilder.loadTexts: plsdTimeConnectedVal.setDescription('Time connected')
plsdConnects = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 33))
plsdConnectsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 33, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnectsVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnectsVal.setDescription('Connects')
plsdConnectsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 33, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnectsMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnectsMax.setDescription('Connects')
plsdVmsize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 34))
plsdVmsizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 34, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdVmsizeVal.setStatus('current')
if mibBuilder.loadTexts: plsdVmsizeVal.setDescription('Memory usage (Virtual)')
plsdVmsizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 34, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdVmsizeMax.setStatus('current')
if mibBuilder.loadTexts: plsdVmsizeMax.setDescription('Memory usage (Virtual)')
plsdVmrss = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 35))
plsdVmrssVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 35, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdVmrssVal.setStatus('current')
if mibBuilder.loadTexts: plsdVmrssVal.setDescription('Memory usage (RAM)')
plsdVmrssMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 35, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdVmrssMax.setStatus('current')
if mibBuilder.loadTexts: plsdVmrssMax.setDescription('Memory usage (RAM)')
plsdConnlogIncomplete = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 36))
plsdConnlogIncompleteVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 36, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogIncompleteVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogIncompleteVal.setDescription('Connlog entries incomplete')
plsdConnlogIncompleteMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 36, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnlogIncompleteMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnlogIncompleteMax.setDescription('Connlog entries incomplete')
plsdConnProp = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 37))
plsdConnPropVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 37, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnPropVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnPropVal.setDescription('Connection Properties count')
plsdConnPropMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 37, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnPropMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnPropMax.setDescription('Connection Properties count')
plsdConnPropHash = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 38))
plsdConnPropHashVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 38, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnPropHashVal.setStatus('current')
if mibBuilder.loadTexts: plsdConnPropHashVal.setDescription('Connection Properties Hashtables')
plsdConnPropHashMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 136, 38, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plsdConnPropHashMax.setStatus('current')
if mibBuilder.loadTexts: plsdConnPropHashMax.setDescription('Connection Properties Hashtables')
plsw = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137))
plswDatasetStart = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 1))
plswDatasetStartVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswDatasetStartVal.setStatus('current')
if mibBuilder.loadTexts: plswDatasetStartVal.setDescription('Dataset, Begin')
plswDatasetEnd = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 2))
plswDatasetEndVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 2, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswDatasetEndVal.setStatus('current')
if mibBuilder.loadTexts: plswDatasetEndVal.setDescription('Dataset, End')
plswSessions = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 3))
plswSessionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 3, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSessionsVal.setStatus('current')
if mibBuilder.loadTexts: plswSessionsVal.setDescription('Dataset, Sessions')
plswSessionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSessionsMax.setStatus('current')
if mibBuilder.loadTexts: plswSessionsMax.setDescription('Dataset, Sessions')
plswValues = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 4))
plswValuesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 4, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesVal.setStatus('current')
if mibBuilder.loadTexts: plswValuesVal.setDescription('Dataset Values')
plswValuesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesMax.setStatus('current')
if mibBuilder.loadTexts: plswValuesMax.setDescription('Dataset Values')
plswValuesDropped1 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 5))
plswValuesDropped1Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 5, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped1Val.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped1Val.setDescription('Dataset Values Dropped (cache exhausted)')
plswValuesDropped1Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped1Max.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped1Max.setDescription('Dataset Values Dropped (cache exhausted)')
plswValuesDropped2 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 6))
plswValuesDropped2Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 6, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped2Val.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped2Val.setDescription('Dataset Values Dropped (malformed name)')
plswValuesDropped2Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped2Max.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped2Max.setDescription('Dataset Values Dropped (malformed name)')
plswValuesDropped3 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 7))
plswValuesDropped3Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 7, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped3Val.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped3Val.setDescription('Dataset Values Dropped (Global Index exhausted)')
plswValuesDropped3Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped3Max.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped3Max.setDescription('Dataset Values Dropped (Global Index exhausted)')
plswValuesDropped4 = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 8))
plswValuesDropped4Val = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 8, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped4Val.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped4Val.setDescription('Dataset Values Dropped (Symlink target not found)')
plswValuesDropped4Max = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 8, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswValuesDropped4Max.setStatus('current')
if mibBuilder.loadTexts: plswValuesDropped4Max.setDescription('Dataset Values Dropped (Symlink target not found)')
plswNewglobal = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 9))
plswNewglobalVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 9, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewglobalVal.setStatus('current')
if mibBuilder.loadTexts: plswNewglobalVal.setDescription('Dataset values, New Global Indexes')
plswNewglobalMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 9, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewglobalMax.setStatus('current')
if mibBuilder.loadTexts: plswNewglobalMax.setDescription('Dataset values, New Global Indexes')
plswNewcoll = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 10))
plswNewcollVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 10, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewcollVal.setStatus('current')
if mibBuilder.loadTexts: plswNewcollVal.setDescription('Dataset values, New Global collisions')
plswNewcollMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 10, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewcollMax.setStatus('current')
if mibBuilder.loadTexts: plswNewcollMax.setDescription('Dataset values, New Global collisions')
plswNewdaily = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 11))
plswNewdailyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 11, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewdailyVal.setStatus('current')
if mibBuilder.loadTexts: plswNewdailyVal.setDescription('Dataset values, New Daily Indexes')
plswNewdailyMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 11, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswNewdailyMax.setStatus('current')
if mibBuilder.loadTexts: plswNewdailyMax.setDescription('Dataset values, New Daily Indexes')
plswTupdate = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 12))
plswTupdateVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 12, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTupdateVal.setStatus('current')
if mibBuilder.loadTexts: plswTupdateVal.setDescription('Dataset values, Updates (Totals)')
plswTupdateMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 12, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTupdateMax.setStatus('current')
if mibBuilder.loadTexts: plswTupdateMax.setDescription('Dataset values, Updates (Totals)')
plswGupdate = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 13))
plswGupdateVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 13, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGupdateVal.setStatus('current')
if mibBuilder.loadTexts: plswGupdateVal.setDescription('Dataset values, Updates (Graphs)')
plswGupdateMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 13, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGupdateMax.setStatus('current')
if mibBuilder.loadTexts: plswGupdateMax.setDescription('Dataset values, Updates (Graphs)')
plswTimeDataset = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 14))
plswTimeDatasetVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 14, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTimeDatasetVal.setStatus('current')
if mibBuilder.loadTexts: plswTimeDatasetVal.setDescription('Dataset, Total Write time')
plswTimeGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 15))
plswTimeGlobalVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 15, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTimeGlobalVal.setStatus('current')
if mibBuilder.loadTexts: plswTimeGlobalVal.setDescription('Dataset, Time for Globals file I/O')
plswTimeDaily = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 16))
plswTimeDailyVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 16, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTimeDailyVal.setStatus('current')
if mibBuilder.loadTexts: plswTimeDailyVal.setDescription('Dataset, Time for Daily Index file I/O')
plswTimeTotal = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 17))
plswTimeTotalVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 17, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTimeTotalVal.setStatus('current')
if mibBuilder.loadTexts: plswTimeTotalVal.setDescription('Dataset, Time for Totals file I/O')
plswTimeGraph = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 18))
plswTimeGraphVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 18, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswTimeGraphVal.setStatus('current')
if mibBuilder.loadTexts: plswTimeGraphVal.setDescription('Dataset, Time for Graph file I/O')
plswGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 19))
plswGlobalsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 19, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGlobalsVal.setStatus('current')
if mibBuilder.loadTexts: plswGlobalsVal.setDescription('Statisticsfs, Values (Global Indexes)')
plswGlobalsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 19, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGlobalsMax.setStatus('current')
if mibBuilder.loadTexts: plswGlobalsMax.setDescription('Statisticsfs, Values (Global Indexes)')
plswColls = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 20))
plswCollsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 20, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswCollsVal.setStatus('current')
if mibBuilder.loadTexts: plswCollsVal.setDescription('Statisticsfs, Values (Global Collisions)')
plswCollsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 20, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswCollsMax.setStatus('current')
if mibBuilder.loadTexts: plswCollsMax.setDescription('Statisticsfs, Values (Global Collisions)')
plswDailys = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 21))
plswDailysVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 21, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswDailysVal.setStatus('current')
if mibBuilder.loadTexts: plswDailysVal.setDescription('Statisticsfs, Values (Daily Indexes)')
plswDailysMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 21, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswDailysMax.setStatus('current')
if mibBuilder.loadTexts: plswDailysMax.setDescription('Statisticsfs, Values (Daily Indexes)')
plswBlocks = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 22))
plswBlocksVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 22, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswBlocksVal.setStatus('current')
if mibBuilder.loadTexts: plswBlocksVal.setDescription('Statisticsfs, Daily Totals file blocks')
plswBlocksMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 22, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswBlocksMax.setStatus('current')
if mibBuilder.loadTexts: plswBlocksMax.setDescription('Statisticsfs, Daily Totals file blocks')
plswGraphs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 23))
plswGraphsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 23, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGraphsVal.setStatus('current')
if mibBuilder.loadTexts: plswGraphsVal.setDescription('Statisticsfs, Daily Graph data usage (Bytes)')
plswGraphsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 23, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswGraphsMax.setStatus('current')
if mibBuilder.loadTexts: plswGraphsMax.setDescription('Statisticsfs, Daily Graph data usage (Bytes)')
plswSysdiagHdUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 24))
plswSysdiagHdUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 24, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagHdUsageVal.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagHdUsageVal.setDescription('Statisticsfs, Disk Usage')
plswSysdiagHdUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 24, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagHdUsageMax.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagHdUsageMax.setDescription('Statisticsfs, Disk Usage')
plswSysdiagHdSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 25))
plswSysdiagHdSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 25, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagHdSizeVal.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagHdSizeVal.setDescription('Statisticsfs, Disk Size')
plswSysdiagHdSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 25, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagHdSizeMax.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagHdSizeMax.setDescription('Statisticsfs, Disk Size')
plswSystemHdUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 26))
plswSystemHdUsageVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 26, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSystemHdUsageVal.setStatus('current')
if mibBuilder.loadTexts: plswSystemHdUsageVal.setDescription('System, Disk Usage')
plswSystemHdUsageMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 26, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSystemHdUsageMax.setStatus('current')
if mibBuilder.loadTexts: plswSystemHdUsageMax.setDescription('System, Disk Usage')
plswSystemHdSize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 27))
plswSystemHdSizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 27, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSystemHdSizeVal.setStatus('current')
if mibBuilder.loadTexts: plswSystemHdSizeVal.setDescription('System, Disk Size')
plswSystemHdSizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 27, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSystemHdSizeMax.setStatus('current')
if mibBuilder.loadTexts: plswSystemHdSizeMax.setDescription('System, Disk Size')
plswSysdiagDaySize = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 28))
plswSysdiagDaySizeVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 28, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagDaySizeVal.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagDaySizeVal.setDescription('Statisticsfs, Disk Usage Per Day')
plswSysdiagDaySizeMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 28, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswSysdiagDaySizeMax.setStatus('current')
if mibBuilder.loadTexts: plswSysdiagDaySizeMax.setDescription('Statisticsfs, Disk Usage Per Day')
plswMemused = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 29))
plswMemusedVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 29, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswMemusedVal.setStatus('current')
if mibBuilder.loadTexts: plswMemusedVal.setDescription('Statwriter, Peak memory usage')
plswMemusedMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 137, 29, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: plswMemusedMax.setStatus('current')
if mibBuilder.loadTexts: plswMemusedMax.setDescription('Statwriter, Peak memory usage')
rulesetCompiler = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138))
rulesetCompilerReaperRecvBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 1))
rulesetCompilerReaperRecvBufVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetCompilerReaperRecvBufVal.setStatus('current')
if mibBuilder.loadTexts: rulesetCompilerReaperRecvBufVal.setDescription('Reaper receive buffer usage')
rulesetCompilerReaperRecvBufMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetCompilerReaperRecvBufMax.setStatus('current')
if mibBuilder.loadTexts: rulesetCompilerReaperRecvBufMax.setDescription('Reaper receive buffer usage')
rulesetCompilerReaperSendBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 2))
rulesetCompilerReaperSendBufVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 2, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetCompilerReaperSendBufVal.setStatus('current')
if mibBuilder.loadTexts: rulesetCompilerReaperSendBufVal.setDescription('Reaper send buffer usage')
rulesetCompilerReaperSendBufMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 138, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rulesetCompilerReaperSendBufMax.setStatus('current')
if mibBuilder.loadTexts: rulesetCompilerReaperSendBufMax.setDescription('Reaper send buffer usage')
ipfix = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139))
ipfixConnections = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 1))
ipfixConnectionsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixConnectionsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixConnectionsVal.setDescription('Connection table size')
ipfixConnectionsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixConnectionsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixConnectionsMax.setDescription('Connection table size')
ipfixConnUpdates = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 2))
ipfixConnUpdatesVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixConnUpdatesVal.setStatus('current')
if mibBuilder.loadTexts: ipfixConnUpdatesVal.setDescription('Connection updates')
ipfixConnUpdatesMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 2, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixConnUpdatesMom.setStatus('current')
if mibBuilder.loadTexts: ipfixConnUpdatesMom.setDescription('Connection updates')
ipfixConnUpdatesMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 2, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixConnUpdatesMax.setStatus('current')
if mibBuilder.loadTexts: ipfixConnUpdatesMax.setDescription('Connection updates')
ipfixExportedIpv4Records = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 3))
ipfixExportedIpv4RecordsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsVal.setDescription('Exported Records IPv4')
ipfixExportedIpv4RecordsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 3, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsMom.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsMom.setDescription('Exported Records IPv4')
ipfixExportedIpv4RecordsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 3, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4RecordsMax.setDescription('Exported Records IPv4')
ipfixExportedIpv6Records = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 4))
ipfixExportedIpv6RecordsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsVal.setDescription('Exported Records IPv6')
ipfixExportedIpv6RecordsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 4, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsMom.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsMom.setDescription('Exported Records IPv6')
ipfixExportedIpv6RecordsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 4, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6RecordsMax.setDescription('Exported Records IPv6')
ipfixExportedIpv4Sets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 5))
ipfixExportedIpv4SetsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4SetsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4SetsVal.setDescription('Exported Sets IPv4')
ipfixExportedIpv4SetsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 5, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4SetsMom.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4SetsMom.setDescription('Exported Sets IPv4')
ipfixExportedIpv4SetsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 5, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv4SetsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv4SetsMax.setDescription('Exported Sets IPv4')
ipfixExportedIpv6Sets = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 6))
ipfixExportedIpv6SetsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 6, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6SetsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6SetsVal.setDescription('Exported Sets IPv6')
ipfixExportedIpv6SetsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 6, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6SetsMom.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6SetsMom.setDescription('Exported Sets IPv6')
ipfixExportedIpv6SetsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 6, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedIpv6SetsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedIpv6SetsMax.setDescription('Exported Sets IPv6')
ipfixExportedMsgs = MibIdentifier((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 7))
ipfixExportedMsgsVal = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 7, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedMsgsVal.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedMsgsVal.setDescription('Exported Ipfix Messages')
ipfixExportedMsgsMom = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 7, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedMsgsMom.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedMsgsMom.setDescription('Exported Ipfix Messages')
ipfixExportedMsgsMax = MibScalar((1, 3, 6, 1, 4, 1, 15397, 2, 1, 139, 7, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipfixExportedMsgsMax.setStatus('current')
if mibBuilder.loadTexts: ipfixExportedMsgsMax.setDescription('Exported Ipfix Messages')
mibBuilder.exportSymbols("PACKETLOGIC-MIB", systemHdUsage=systemHdUsage, drdlChildAbusesMax=drdlChildAbusesMax, gtpCreatePdpRspMom=gtpCreatePdpRspMom, qsyncIIgnoredOOOVal=qsyncIIgnoredOOOVal, ipv4BytesVal=ipv4BytesVal, ipv6FragmentedVal=ipv6FragmentedVal, bgpFreelistPaths=bgpFreelistPaths, bgpCommunityMaxSeenMax=bgpCommunityMaxSeenMax, shapingEnqueuedBytesMax=shapingEnqueuedBytesMax, ethernetShuntDot1qBytes=ethernetShuntDot1qBytes, tcpv4EcneMax=tcpv4EcneMax, drdlSliceStateFailMax=drdlSliceStateFailMax, tcpv6SegmentsDroppedMom=tcpv6SegmentsDroppedMom, lbShuntPktIpv4ProtoIntMom=lbShuntPktIpv4ProtoIntMom, pppoeControlPackets=pppoeControlPackets, drdl=drdl, tcpv4RefusedFilterMom=tcpv4RefusedFilterMom, tunnelL2tpMax=tunnelL2tpMax, plswSystemHdSizeMax=plswSystemHdSizeMax, tcpv6OosBytesMax=tcpv6OosBytesMax, rulesetSubscriberAllocFailMax=rulesetSubscriberAllocFailMax, ethernetUnicastMax=ethernetUnicastMax, qsyncERecvUpdateEntriesMax=qsyncERecvUpdateEntriesMax, packetprocessingRxDropsMax=packetprocessingRxDropsMax, ipv6FragmentsMax=ipv6FragmentsMax, plsdConnUpdatesFullMax=plsdConnUpdatesFullMax, systemMemFreeMax=systemMemFreeMax, liveviewHostnameAllocs=liveviewHostnameAllocs, plsdConnUpdatesFiltered=plsdConnUpdatesFiltered, plsdValuesDelayedExpandMax=plsdValuesDelayedExpandMax, shapingBrownConnDropsMom=shapingBrownConnDropsMom, tcpv6RefusedOffset=tcpv6RefusedOffset, tcpv4GoodputPacketsMax=tcpv4GoodputPacketsMax, ipv6ShuntProtoBytesMax=ipv6ShuntProtoBytesMax, ipv6FragmentAllocationFailuresVal=ipv6FragmentAllocationFailuresVal, packetprocessingDmaAllocsMax=packetprocessingDmaAllocsMax, ipv6RefusedOof=ipv6RefusedOof, l2tpcipv6Packets=l2tpcipv6Packets, lbShuntByteEomplsIntMax=lbShuntByteEomplsIntMax, tcpv4DiscardedSegmentsMom=tcpv4DiscardedSegmentsMom, psm=psm, connsyncUdpRcv=connsyncUdpRcv, teredoPacketsMom=teredoPacketsMom, lbRxBytesExtMom=lbRxBytesExtMom, greIpv6PacketsMom=greIpv6PacketsMom, tcpv4GoodputBytesMom=tcpv4GoodputBytesMom, tunnelGreMax=tunnelGreMax, pppoeNonIpPackets=pppoeNonIpPackets, gtpCreatePdpRsp=gtpCreatePdpRsp, shapingcounterUpdatesMom=shapingcounterUpdatesMom, l2tpcipv4PacketsMax=l2tpcipv4PacketsMax, tcpv6UntrackedPacketsVal=tcpv6UntrackedPacketsVal, shapingUnshapedBytesMom=shapingUnshapedBytesMom, rulesetRecalcBgpVal=rulesetRecalcBgpVal, lbTxFpExt=lbTxFpExt, ipv6Reassembled=ipv6Reassembled, ipfixExportedIpv6SetsMom=ipfixExportedIpv6SetsMom, packetprocessingOverLoadVal=packetprocessingOverLoadVal, packetprocessingPushbackRequeues=packetprocessingPushbackRequeues, dynamicnetobjectSubscriberConflictsMom=dynamicnetobjectSubscriberConflictsMom, connsyncPktOverflowMax=connsyncPktOverflowMax, plsdValueUpdatesBytesHpVal=plsdValueUpdatesBytesHpVal, ipfixExportedIpv6SetsVal=ipfixExportedIpv6SetsVal, shapingReceivedMax=shapingReceivedMax, gtpDeletePdpRspMax=gtpDeletePdpRspMax, shapingReceived=shapingReceived, greRouteFlagMom=greRouteFlagMom, shapingDropsPrio4Val=shapingDropsPrio4Val, connsyncPktOverflowVal=connsyncPktOverflowVal, gtpPacketsMom=gtpPacketsMom, lbShuntPktIpv4ProtoInt=lbShuntPktIpv4ProtoInt, ethernetUnicastVal=ethernetUnicastVal, rulesetDynipOversizedVal=rulesetDynipOversizedVal, plswNewdailyVal=plswNewdailyVal, bgpPathsVal=bgpPathsVal, tcpv6GoodputBytesMax=tcpv6GoodputBytesMax, grePacketsMom=grePacketsMom, shapingBorrowDequeuesMax=shapingBorrowDequeuesMax, liveviewTooManyNetobjectsOnHostMax=liveviewTooManyNetobjectsOnHostMax, tunnelGre=tunnelGre, connsyncCorruptPktMax=connsyncCorruptPktMax, qsyncEUpdatePacketsVal=qsyncEUpdatePacketsVal, drdlAutoAccepts=drdlAutoAccepts, lbShuntPktDot1qIntVal=lbShuntPktDot1qIntVal, rulesetConnStatechangeFlagsMax=rulesetConnStatechangeFlagsMax, qsyncIReaperSplitsActiveMax=qsyncIReaperSplitsActiveMax, greUnknownTypeVal=greUnknownTypeVal, plsdConnUpdatesMom=plsdConnUpdatesMom, fwAcceptsMom=fwAcceptsMom, tunnelTeredo=tunnelTeredo, l2tpIpv6Packets=l2tpIpv6Packets, ipv6Fragmented=ipv6Fragmented, shapingReloadDropsMom=shapingReloadDropsMom, connectionCountMax=connectionCountMax, fwInjects=fwInjects, tcpv6CorruptOptionsMom=tcpv6CorruptOptionsMom, tcpv6SimOpenMax=tcpv6SimOpenMax, divertBypassPacketsMax=divertBypassPacketsMax, shapingDequeuedMax=shapingDequeuedMax, dynamicnetobjectCurrentCountVal=dynamicnetobjectCurrentCountVal, liveviewPLSDBufMax=liveviewPLSDBufMax, connectionCreateAttemptsOutboundMax=connectionCreateAttemptsOutboundMax, qsyncIUpdatesUnknownObject=qsyncIUpdatesUnknownObject, shapingDropsPrio3Max=shapingDropsPrio3Max, gtpEchoPdpReq=gtpEchoPdpReq, lbCpuLoadMax=lbCpuLoadMax, shapingObjectFull=shapingObjectFull, tcpv4UntrackedBytes=tcpv4UntrackedBytes, lbShuntByteDot1qInt=lbShuntByteDot1qInt, tcpv4UntrackedGoodput=tcpv4UntrackedGoodput, ipv4RefusedShortMom=ipv4RefusedShortMom, drdlVsRangeTestsMax=drdlVsRangeTestsMax, connsyncConnNotfoundMax=connsyncConnNotfoundMax, tcpv6EnqueuedSegmentsMax=tcpv6EnqueuedSegmentsMax, ipv6FragmentTooNoisyMom=ipv6FragmentTooNoisyMom, tcpv6SegmentsDropped=tcpv6SegmentsDropped, connectionTtlTimeoutsMax=connectionTtlTimeoutsMax, dynamicnetobjectRemoveFailedVal=dynamicnetobjectRemoveFailedVal, qsyncIAdjustmentsSentVal=qsyncIAdjustmentsSentVal, interfaceFlowNewMax=interfaceFlowNewMax, ipv6PacketsMom=ipv6PacketsMom, rulesetConnStatechangeServiceMax=rulesetConnStatechangeServiceMax, plswCollsMax=plswCollsMax, liveviewDrdlRevision=liveviewDrdlRevision, tcpv6DiscardedSegmentsVal=tcpv6DiscardedSegmentsVal, ethernetBroadcastMom=ethernetBroadcastMom, tcpv4SegmentsPayloadMax=tcpv4SegmentsPayloadMax, tcpv6CwrMom=tcpv6CwrMom, plsdConnUpdatesMax=plsdConnUpdatesMax, tcpv4PacketAllocFailMax=tcpv4PacketAllocFailMax, greBytesVal=greBytesVal, plswSysdiagDaySizeVal=plswSysdiagDaySizeVal, rulesetClienttreeSizeVal=rulesetClienttreeSizeVal, bgpConvresionTime=bgpConvresionTime, tcpv6EcneMax=tcpv6EcneMax, teredoPackets=teredoPackets, divertIngressPacketsNohostVal=divertIngressPacketsNohostVal, connsyncBadEngineidVal=connsyncBadEngineidVal, plsdConnPropVal=plsdConnPropVal, shapingBrownHostDropsMax=shapingBrownHostDropsMax, plswGraphs=plswGraphs, connectionEstCountVal=connectionEstCountVal, shapingUnshapedMax=shapingUnshapedMax, lbShuntPktMplsIntVal=lbShuntPktMplsIntVal, l2tpBytesMom=l2tpBytesMom, ethernetShuntEoMplsPacketsVal=ethernetShuntEoMplsPacketsVal, shapingDirectMom=shapingDirectMom, gtpEchoPdpReqMax=gtpEchoPdpReqMax, rulesetCompiler=rulesetCompiler, tcpv6RefusedRulesetVal=tcpv6RefusedRulesetVal, plsdValueRejectMax=plsdValueRejectMax, drdlOrphansMom=drdlOrphansMom, shapingUnshapedBytesVal=shapingUnshapedBytesVal, qsyncIUnsyncVal=qsyncIUnsyncVal, divert=divert, drdlChildEmptyMax=drdlChildEmptyMax, fwMidconnRewriteVal=fwMidconnRewriteVal, gtpSgsnRspMom=gtpSgsnRspMom, drdlVsRangeTestsMom=drdlVsRangeTestsMom, lbShuntPktEthertypeIntVal=lbShuntPktEthertypeIntVal, drdlAnalyzerActionsMax=drdlAnalyzerActionsMax, shapingDropsPrio4Max=shapingDropsPrio4Max, connsyncSeenackRcv=connsyncSeenackRcv, dynamicnetobjectSqliteMemoryUsed=dynamicnetobjectSqliteMemoryUsed, plsdConnlogDumptimeRemaining=plsdConnlogDumptimeRemaining, tcpv6LostsyncVal=tcpv6LostsyncVal, plswNewcoll=plswNewcoll, ipv6FragmentDropsMom=ipv6FragmentDropsMom, tcpv6RefusedShortMax=tcpv6RefusedShortMax, pppoeTruncatedPacketsMax=pppoeTruncatedPacketsMax, plswSystemHdUsageVal=plswSystemHdUsageVal, shapingMaxConnDropsMom=shapingMaxConnDropsMom, dynamicnetobjectRemoveSucceededVal=dynamicnetobjectRemoveSucceededVal, ipv4=ipv4, greIpv4PacketsMom=greIpv4PacketsMom, l2tpBytesMax=l2tpBytesMax, l2tpIpv6PacketsMax=l2tpIpv6PacketsMax, lbBucketMovesMom=lbBucketMovesMom, shapingcounterUpdatesInterestingVal=shapingcounterUpdatesInterestingVal, ipv6ExtHbhMax=ipv6ExtHbhMax, tcpv6SegmentsPayload=tcpv6SegmentsPayload, plswValuesDropped4Max=plswValuesDropped4Max, liveviewFailedFullNetobjectsVal=liveviewFailedFullNetobjectsVal, rulesetDynipOversized=rulesetDynipOversized, ipfixExportedIpv4RecordsVal=ipfixExportedIpv4RecordsVal, packetprocessingPushbackQueueSize=packetprocessingPushbackQueueSize, fwDiverts=fwDiverts, shapingUnshapedMom=shapingUnshapedMom, drdlProp32FailVal=drdlProp32FailVal, shapingDropsPrio7Mom=shapingDropsPrio7Mom, tcpv6SegmentedConnectionsVal=tcpv6SegmentedConnectionsVal, shapingObjectOverflowMax=shapingObjectOverflowMax, bgpWithdrawsMax=bgpWithdrawsMax, lbShuntByteIpv4AddrInt=lbShuntByteIpv4AddrInt, liveviewReaperSendBuf=liveviewReaperSendBuf, lbShuntPktEthertypeExtMom=lbShuntPktEthertypeExtMom, plsdConnsDroppedMom=plsdConnsDroppedMom, shapingOutOfCreditsDropsMax=shapingOutOfCreditsDropsMax, plswTimeGraphVal=plswTimeGraphVal, tcpv4UntrackedPacketsVal=tcpv4UntrackedPacketsVal, tcpv4OutOfWindowPackets=tcpv4OutOfWindowPackets, tcpv4OosPacketsVal=tcpv4OosPacketsVal, connectionRefusedExistingMom=connectionRefusedExistingMom, dynamicnetobjectInsertPldbFailedMax=dynamicnetobjectInsertPldbFailedMax, ethernetMulticast=ethernetMulticast, ipv6FragmentOverlapMax=ipv6FragmentOverlapMax, plsdConnPropMax=plsdConnPropMax, bgpRecyclePathsMax=bgpRecyclePathsMax, connectionRefusedRuleset=connectionRefusedRuleset, ethernetShuntMplsBytesVal=ethernetShuntMplsBytesVal, ipv6EcnEct0=ipv6EcnEct0, plswNewglobalVal=plswNewglobalVal, divertEgressPacketsMom=divertEgressPacketsMom, connsyncOutofsyncCollisionVal=connsyncOutofsyncCollisionVal, liveviewHostsMax=liveviewHostsMax, plsdConnUpdatesNew=plsdConnUpdatesNew, plswMemusedMax=plswMemusedMax, tcpv6UntrackedBytesMom=tcpv6UntrackedBytesMom, liveviewFailedNetobjectsMom=liveviewFailedNetobjectsMom, tcpv6RefusedFilterVal=tcpv6RefusedFilterVal, lbRxErrorsIntVal=lbRxErrorsIntVal, shapingDropsPrio4Mom=shapingDropsPrio4Mom, lbTxFsMom=lbTxFsMom, ipv6ShuntAddressBytes=ipv6ShuntAddressBytes, gtpCreatePdpReqVal=gtpCreatePdpReqVal, fwMidconnRewrite=fwMidconnRewrite, liveviewUnaccountedPlsdFlowsMax=liveviewUnaccountedPlsdFlowsMax, shapingReceivedMom=shapingReceivedMom, grePppUnknownPackets=grePppUnknownPackets, ipv6FragInFragMom=ipv6FragInFragMom, shapingMaxConnDropsMax=shapingMaxConnDropsMax, packetprocessingBalancerQueueLength=packetprocessingBalancerQueueLength, ethernetMulticastVal=ethernetMulticastVal, dynamicnetobjectRemoveFailedMax=dynamicnetobjectRemoveFailedMax, rulesetStatisticsrulesVal=rulesetStatisticsrulesVal, lbShuntPktIpv4ProtoExtMax=lbShuntPktIpv4ProtoExtMax, tcpv4RefusedBroadcastVal=tcpv4RefusedBroadcastVal, gtpSgsnReqMax=gtpSgsnReqMax, liveviewClients=liveviewClients, drdlBuffersUsedMax=drdlBuffersUsedMax, tcpv4OutOfWindowPacketsVal=tcpv4OutOfWindowPacketsVal, tcpv6OosBytesVal=tcpv6OosBytesVal, dynamicnetobjectSubscriberTooManyMom=dynamicnetobjectSubscriberTooManyMom, shapingUsedFairnessObjects=shapingUsedFairnessObjects, drdlProp32UsedVal=drdlProp32UsedVal, packetprocessingHeapfreeVal=packetprocessingHeapfreeVal, dynamicnetobjectRemoveCallsMom=dynamicnetobjectRemoveCallsMom, rulesetBgpNumpathsMax=rulesetBgpNumpathsMax, interfaceFlowNewMissed=interfaceFlowNewMissed, packetprocessingPushbackQueueSizeMax=packetprocessingPushbackQueueSizeMax, dynamicnetobjectSubscriberCountMax=dynamicnetobjectSubscriberCountMax, qsyncEUpdatePacketsMom=qsyncEUpdatePacketsMom, system=system, plsdConnectionsMax=plsdConnectionsMax)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", tunnelUnknownPktsMom=tunnelUnknownPktsMom, ipv4FragmentReassFailMax=ipv4FragmentReassFailMax, lbTxFpIntMom=lbTxFpIntMom, shapingOutofpacketsDropsVal=shapingOutofpacketsDropsVal, connectionEstCount=connectionEstCount, fwMonitorFailuresMom=fwMonitorFailuresMom, ipv4PacketsVal=ipv4PacketsVal, plswTupdate=plswTupdate, tcpv6RetransmitsMax=tcpv6RetransmitsMax, rulesetSubscriberAllocFail=rulesetSubscriberAllocFail, dynamicnetobjectCurrentCountMax=dynamicnetobjectCurrentCountMax, lbShuntPktMplsIntMom=lbShuntPktMplsIntMom, plswValuesMax=plswValuesMax, rulesetConnStatechangeAspathMax=rulesetConnStatechangeAspathMax, ipv6ExtHbhMom=ipv6ExtHbhMom, connsyncOutofsyncMissedRcvMom=connsyncOutofsyncMissedRcvMom, tcpv6RefusedBroadcastMax=tcpv6RefusedBroadcastMax, rulesetFwrulesMax=rulesetFwrulesMax, tcpv6SegmentsDroppedMax=tcpv6SegmentsDroppedMax, qsyncIUnsync=qsyncIUnsync, drdlVsRegexStepsMom=drdlVsRegexStepsMom, tcpv4SegmentsPayloadVal=tcpv4SegmentsPayloadVal, tcpv6CreatedMax=tcpv6CreatedMax, shapingSkippedQsyncUpdatesMax=shapingSkippedQsyncUpdatesMax, systemMemFree=systemMemFree, rulesetDynipNumMax=rulesetDynipNumMax, ipv6ShuntAddressPackets=ipv6ShuntAddressPackets, connsyncOutofsyncVal=connsyncOutofsyncVal, packetprocessingBalancerQueueLengthMax=packetprocessingBalancerQueueLengthMax, ipv4EcnEct0Mom=ipv4EcnEct0Mom, plsdValueLookupsMax=plsdValueLookupsMax, pppoeBadversionPacketsMax=pppoeBadversionPacketsMax, plswSysdiagDaySizeMax=plswSysdiagDaySizeMax, tcpv6SegmentedConnections=tcpv6SegmentedConnections, rulesetConnStatechangeAspathVal=rulesetConnStatechangeAspathVal, liveviewVNOsMax=liveviewVNOsMax, drdlAnalyzerChecksMom=drdlAnalyzerChecksMom, shapingQueuePoolExhaustedMom=shapingQueuePoolExhaustedMom, lbShuntPktIpv4ProtoExt=lbShuntPktIpv4ProtoExt, plsdValuesDelayedExpandVal=plsdValuesDelayedExpandVal, divertIngressPacketsNol2=divertIngressPacketsNol2, drdlProp0FailMax=drdlProp0FailMax, systemMemTotal=systemMemTotal, shapingUnshapedVal=shapingUnshapedVal, packetprocessingRxDropsMom=packetprocessingRxDropsMom, shapingDropsPrioOtherMax=shapingDropsPrioOtherMax, lbShuntPktIpv4AddrIntVal=lbShuntPktIpv4AddrIntVal, lbShuntPktDot1qIntMom=lbShuntPktDot1qIntMom, gtp=gtp, tcpv6OosBytesMom=tcpv6OosBytesMom, rulesetNonexistentSubscriberMax=rulesetNonexistentSubscriberMax, ipv4FragmentsVal=ipv4FragmentsVal, ipv6EcnEct0Max=ipv6EcnEct0Max, ipv4EcnCnMax=ipv4EcnCnMax, lbRxBytesExtMax=lbRxBytesExtMax, lbHbLostMom=lbHbLostMom, lbShuntByteIpv6AddrExtMom=lbShuntByteIpv6AddrExtMom, fwInjectsMax=fwInjectsMax, drdlVsRegexTestsMom=drdlVsRegexTestsMom, tcpv4GoodputPacketsMom=tcpv4GoodputPacketsMom, drdlAddedChildrenVal=drdlAddedChildrenVal, connsyncCorruptPkt=connsyncCorruptPkt, ipv4FragmentAllocationFailures=ipv4FragmentAllocationFailures, drdlVsRegexTestsVal=drdlVsRegexTestsVal, l2tpBytesVal=l2tpBytesVal, ethernet8021q=ethernet8021q, connectionEstablishedVal=connectionEstablishedVal, tcpv4SegmentAllocFailMom=tcpv4SegmentAllocFailMom, connectionUpdatesVal=connectionUpdatesVal, divertHostsUse=divertHostsUse, grePppPacketsMom=grePppPacketsMom, qsyncESplitTimeoutVal=qsyncESplitTimeoutVal, connectionProtEnablesVal=connectionProtEnablesVal, tcpv6GoodputPacketsVal=tcpv6GoodputPacketsVal, qsyncEUpdatesMismatchVal=qsyncEUpdatesMismatchVal, divertHbLost=divertHbLost, tcpv4CorruptConnVal=tcpv4CorruptConnVal, connectionRefusedProtMom=connectionRefusedProtMom, plsdConnectionsVal=plsdConnectionsVal, drdlVsRangeStepsMom=drdlVsRangeStepsMom, qsyncESplitTimeout=qsyncESplitTimeout, plswBlocksMax=plswBlocksMax, tcpv4Ecne=tcpv4Ecne, ipv4RefusedSelf=ipv4RefusedSelf, ipv6FragmentedMom=ipv6FragmentedMom, plswValuesDropped1Max=plswValuesDropped1Max, l2tpIpv4PacketsMax=l2tpIpv4PacketsMax, fwMonitorFailuresVal=fwMonitorFailuresVal, ipv4Packets=ipv4Packets, lbShuntByteEomplsExt=lbShuntByteEomplsExt, drdlAnalyzerActionsMom=drdlAnalyzerActionsMom, rulesetPropChecksVal=rulesetPropChecksVal, divertConnections=divertConnections, qsyncENumPeers=qsyncENumPeers, divertIngressBytesVal=divertIngressBytesVal, divertBypassPacketsMom=divertBypassPacketsMom, plsdVmrss=plsdVmrss, shapingcounterUpdates=shapingcounterUpdates, ipv6FragnentTimeoutMax=ipv6FragnentTimeoutMax, shapingcounterUpdatesInterestingMom=shapingcounterUpdatesInterestingMom, tunnelUnknownPktsMax=tunnelUnknownPktsMax, plsdConnlogConnsMax=plsdConnlogConnsMax, plswSysdiagHdUsage=plswSysdiagHdUsage, shapingObjectCopies=shapingObjectCopies, shapingRuleOverflowMom=shapingRuleOverflowMom, ipv6EcnEct1Max=ipv6EcnEct1Max, bgpSendTimeMax=bgpSendTimeMax, lbShuntByteMplsExtMax=lbShuntByteMplsExtMax, drdlAnalyzerChecks=drdlAnalyzerChecks, drdlOrphansVal=drdlOrphansVal, shapingQueuePoolExhaustedMax=shapingQueuePoolExhaustedMax, shapingQueueAllocations=shapingQueueAllocations, connsyncSeenSnt=connsyncSeenSnt, connsyncCorruptPktVal=connsyncCorruptPktVal, bgpAnnouncesVal=bgpAnnouncesVal, drdlAnalyzerSkippedBytesVal=drdlAnalyzerSkippedBytesVal, connectionInvalidRulesetUpdateMax=connectionInvalidRulesetUpdateMax, plsdValueRejectPriorVal=plsdValueRejectPriorVal, systemHdSizeMax=systemHdSizeMax, tcpv4SegmentAllocFail=tcpv4SegmentAllocFail, lbShuntByteEomplsIntVal=lbShuntByteEomplsIntVal, ipv6ExtHbhVal=ipv6ExtHbhVal, tcpv6PacketsMax=tcpv6PacketsMax, shapingFailedFairnessObjectsMax=shapingFailedFairnessObjectsMax, ipv4FragmentAllocationFailuresMax=ipv4FragmentAllocationFailuresMax, gtpEchoPdpRspMom=gtpEchoPdpRspMom, ipv6FragmentAllocationFailuresMom=ipv6FragmentAllocationFailuresMom, connectionRefusedFullMom=connectionRefusedFullMom, connectionFailureShuntPacketsMom=connectionFailureShuntPacketsMom, shapingRuleOverflowVal=shapingRuleOverflowVal, ipfixConnUpdatesMax=ipfixConnUpdatesMax, interfaceFlowNew=interfaceFlowNew, ethernetHBResetDropsMom=ethernetHBResetDropsMom, rulesetNonexistentSubscriberMom=rulesetNonexistentSubscriberMom, ethernet8021qVal=ethernet8021qVal, pppoeBadversionPacketsVal=pppoeBadversionPacketsVal, grePacketsVal=grePacketsVal, plswTimeTotal=plswTimeTotal, greUnknownVersionVal=greUnknownVersionVal, tcpv6RefusedBroadcast=tcpv6RefusedBroadcast, tcpv6EnqueuedSegments=tcpv6EnqueuedSegments, rulesetRecalcUnknownMax=rulesetRecalcUnknownMax, dynamicnetobjectAddCallsVal=dynamicnetobjectAddCallsVal, plswValuesDropped4=plswValuesDropped4, ipv6EcnEct0Val=ipv6EcnEct0Val, rulesetCompilerReaperSendBuf=rulesetCompilerReaperSendBuf, lbShuntPktEthertypeInt=lbShuntPktEthertypeInt, rulesetPropChecksMom=rulesetPropChecksMom, tcpv6RejectedVal=tcpv6RejectedVal, tcpv4SegmentsVal=tcpv4SegmentsVal, tcpv6OosBytes=tcpv6OosBytes, qsyncIUpdatesUnknownObjectMax=qsyncIUpdatesUnknownObjectMax, dynamicnetobjectListItems=dynamicnetobjectListItems, liveviewActiveVNOs=liveviewActiveVNOs, lbShuntByteIpv6AddrIntVal=lbShuntByteIpv6AddrIntVal, interfaceFlowNewVal=interfaceFlowNewVal, connectionProtEnablesMom=connectionProtEnablesMom, bgpPrefixes=bgpPrefixes, qsyncIIgnoredGenWrapMom=qsyncIIgnoredGenWrapMom, l2tpIpv4Packets=l2tpIpv4Packets, connsyncUdpRcvVal=connsyncUdpRcvVal, plswSessionsMax=plswSessionsMax, fwDivertsVal=fwDivertsVal, liveview=liveview, gtpDeletePdpReqVal=gtpDeletePdpReqVal, shapingDropsPrio8Val=shapingDropsPrio8Val, gtpEchoPdpRspMax=gtpEchoPdpRspMax, tcpv6SynExistingVal=tcpv6SynExistingVal, plsdValuesFiltered=plsdValuesFiltered, lbShuntPktEomplsIntVal=lbShuntPktEomplsIntVal, tcpv6CorruptConn=tcpv6CorruptConn, connectionDestroyedEstMax=connectionDestroyedEstMax, lbTxDirectInt=lbTxDirectInt, drdlChildAbusesMom=drdlChildAbusesMom, l2tpIpv4PacketsMom=l2tpIpv4PacketsMom, ipv4FragmentTooNoisyVal=ipv4FragmentTooNoisyVal, lbShuntPktDot1qExtMom=lbShuntPktDot1qExtMom, tcpv4UntrackedBytesMom=tcpv4UntrackedBytesMom, plsdValueUpdatesBytesHpMom=plsdValueUpdatesBytesHpMom, interfaceBytesToEngineMax=interfaceBytesToEngineMax, shapingFailedFairnessObjects=shapingFailedFairnessObjects, shapingActiveQueues=shapingActiveQueues, pppoeNonIpPacketsMax=pppoeNonIpPacketsMax, tcpv6BytesMom=tcpv6BytesMom, dynamicnetobjectListCallsVal=dynamicnetobjectListCallsVal, plsdValueRejectPrior=plsdValueRejectPrior, ethernetShuntEthertypePacketsMax=ethernetShuntEthertypePacketsMax, rulesetReceivedMom=rulesetReceivedMom, lbShuntPktMplsExt=lbShuntPktMplsExt, ipv4FragmentsMax=ipv4FragmentsMax, tcpv6DiscardedSegmentsMom=tcpv6DiscardedSegmentsMom, lbShuntPktDot1qExtMax=lbShuntPktDot1qExtMax, tcpv6CorruptConnMom=tcpv6CorruptConnMom, dynamicnetobjectAddFailedMom=dynamicnetobjectAddFailedMom, rulesetRecalcVersionMom=rulesetRecalcVersionMom, liveviewStringCacheUsage=liveviewStringCacheUsage, rulesetReceivedVal=rulesetReceivedVal, shapingcounterActiveVal=shapingcounterActiveVal, interfaceBytesFromEngineMax=interfaceBytesFromEngineMax, pppoePaddedPacketsVal=pppoePaddedPacketsVal, connectionNotFoundMom=connectionNotFoundMom, lbRxFsInvalidVer=lbRxFsInvalidVer, rulesetBgpNumLookup=rulesetBgpNumLookup, rulesetDynipAdd=rulesetDynipAdd, greRouteFlag=greRouteFlag, shapingMaxConnDrops=shapingMaxConnDrops, drdlPropertyFailMax=drdlPropertyFailMax, lbShuntPktIpv6AddrInt=lbShuntPktIpv6AddrInt, drdlAnalyzerActions=drdlAnalyzerActions, liveviewPropEntryUsage=liveviewPropEntryUsage, shapingRuleOverflow=shapingRuleOverflow, lbTxDirectExt=lbTxDirectExt, qsyncISumFreelistSize=qsyncISumFreelistSize, lbTxDropsExtVal=lbTxDropsExtVal, plsdConnPropHashVal=plsdConnPropHashVal, shapingObjectOverflowVal=shapingObjectOverflowVal, dynamicnetobjectListItemsVal=dynamicnetobjectListItemsVal, liveviewFailedNetobjects=liveviewFailedNetobjects, tcpv4GoodputPacketsVal=tcpv4GoodputPacketsVal, drdlVsRangeStepsVal=drdlVsRangeStepsVal, ipv4ShuntAddressBytesVal=ipv4ShuntAddressBytesVal, tcpv6SimOpen=tcpv6SimOpen, connectionCreatedInboundMax=connectionCreatedInboundMax, plsdConnects=plsdConnects, rulesetRecalcTimeVal=rulesetRecalcTimeVal, l2tpchap6PacketsVal=l2tpchap6PacketsVal, plswSystemHdUsage=plswSystemHdUsage, pppoeIpv6PacketsMax=pppoeIpv6PacketsMax, rulesetBadAspathMom=rulesetBadAspathMom, qsyncESendUpdatePacketsMax=qsyncESendUpdatePacketsMax, l2tpPacketsMax=l2tpPacketsMax, qsyncESendbufUsageMax=qsyncESendbufUsageMax, tcpv4RefusedShortMax=tcpv4RefusedShortMax, liveviewPropUsageMax=liveviewPropUsageMax, divertHbRepRecvMax=divertHbRepRecvMax, grePppUnknownPacketsMom=grePppUnknownPacketsMom, lbShuntByteIpv4AddrIntVal=lbShuntByteIpv4AddrIntVal, plsdValuesFilteredMax=plsdValuesFilteredMax, drdlVsRegexTests=drdlVsRegexTests, plswValuesDropped3Val=plswValuesDropped3Val, connectionNotFoundVal=connectionNotFoundVal, gtpPacketsVal=gtpPacketsVal, tunnelDuplicatesVal=tunnelDuplicatesVal, tcpv6EnqueuedSegmentsVal=tcpv6EnqueuedSegmentsVal, systemUptime=systemUptime, drdlChildIterateMax=drdlChildIterateMax, tcpv6RefusedFilter=tcpv6RefusedFilter, ipv6FragInFragVal=ipv6FragInFragVal, fwRejects=fwRejects, shapingDequeuedBytes=shapingDequeuedBytes, pppoeShortPacketsMom=pppoeShortPacketsMom, fwInjectsVal=fwInjectsVal, shapingDropsPrio7Val=shapingDropsPrio7Val, connectionRefusedRulesetMax=connectionRefusedRulesetMax)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", drdlTaintFillMax=drdlTaintFillMax, ipv4RefusedShortVal=ipv4RefusedShortVal, shapingObjectChecksMom=shapingObjectChecksMom, gtpEchoPdpReqVal=gtpEchoPdpReqVal, plsdConnlogIncompleteMax=plsdConnlogIncompleteMax, connectionRefusedProtMax=connectionRefusedProtMax, tcpv6UntrackedGoodput=tcpv6UntrackedGoodput, rulesetRecalcVersion=rulesetRecalcVersion, rulesetDynipNumVal=rulesetDynipNumVal, rulesetLocaltreeSizeMax=rulesetLocaltreeSizeMax, plsd=plsd, connectionTtlTimeouts=connectionTtlTimeouts, liveviewPropArrayUsageMax=liveviewPropArrayUsageMax, ipv4RefusedSelfVal=ipv4RefusedSelfVal, qsyncESendUpdatePacketsVal=qsyncESendUpdatePacketsVal, dynamicnetobjectAddSucceeded=dynamicnetobjectAddSucceeded, tcpv4CwrVal=tcpv4CwrVal, ipv6FragmentedIds=ipv6FragmentedIds, connectionCreatedInbound=connectionCreatedInbound, shapingEcnMarksVal=shapingEcnMarksVal, ethernetHBResetDropsMax=ethernetHBResetDropsMax, tcpv4EmptyPacketsVal=tcpv4EmptyPacketsVal, connectionOrphaned=connectionOrphaned, liveviewPropEntryUsageVal=liveviewPropEntryUsageVal, tcpv6OutOfWindowPacketsMax=tcpv6OutOfWindowPacketsMax, ipv4BytesMax=ipv4BytesMax, tcpv4CreatedMom=tcpv4CreatedMom, liveviewPLSDClientsVal=liveviewPLSDClientsVal, tcpv6RejectedMax=tcpv6RejectedMax, lbShuntByteIpv4ProtoIntVal=lbShuntByteIpv4ProtoIntVal, ethernetBroadcastVal=ethernetBroadcastVal, tcpv6CorruptOptions=tcpv6CorruptOptions, ethernetCountBytesIPv4IPv6Mom=ethernetCountBytesIPv4IPv6Mom, tcpv6RefusedOffsetVal=tcpv6RefusedOffsetVal, tcpv6UntrackedPacketsMax=tcpv6UntrackedPacketsMax, lbBlacklistedBuckets=lbBlacklistedBuckets, bgpSendTimeVal=bgpSendTimeVal, rulesetConnStatechangePropMax=rulesetConnStatechangePropMax, plswTimeTotalVal=plswTimeTotalVal, lbShuntPktEthertypeExt=lbShuntPktEthertypeExt, teredoFragsMom=teredoFragsMom, tcpv6DequeuedSegments=tcpv6DequeuedSegments, shapingEcnMarksMax=shapingEcnMarksMax, rulesetStatisticsrules=rulesetStatisticsrules, bgpFreelistPathsVal=bgpFreelistPathsVal, grePptpPacketsMom=grePptpPacketsMom, drdlBufferAllocationFailuresMax=drdlBufferAllocationFailuresMax, drdlProp256FailVal=drdlProp256FailVal, tcpv4CorruptOptions=tcpv4CorruptOptions, connectionRedirectedVal=connectionRedirectedVal, shapingDirectBytesMom=shapingDirectBytesMom, tcpv6CreateAttemptsMax=tcpv6CreateAttemptsMax, drdlWaitingChildren=drdlWaitingChildren, connectionOrphanedVal=connectionOrphanedVal, shapingDirectBytes=shapingDirectBytes, connectionEstablishedMax=connectionEstablishedMax, qsyncEUpdatePacketsMax=qsyncEUpdatePacketsMax, shapingObjectFullMom=shapingObjectFullMom, tcpv4RefusedRulesetMom=tcpv4RefusedRulesetMom, drdlOrphans=drdlOrphans, plswDatasetStart=plswDatasetStart, qsyncIReaperSplitsCreatedVal=qsyncIReaperSplitsCreatedVal, plsdValueRejectMom=plsdValueRejectMom, teredoAuthHeaders=teredoAuthHeaders, drdlProp64FailMom=drdlProp64FailMom, shapingcounterUpdatesMax=shapingcounterUpdatesMax, connsyncHelloRcv=connsyncHelloRcv, qsyncIUpdatesUnknownObjectMom=qsyncIUpdatesUnknownObjectMom, ipv6ExtDestMax=ipv6ExtDestMax, lbBlacklistedBucketsVal=lbBlacklistedBucketsVal, shapingObjectOverflow=shapingObjectOverflow, ipv4ShuntProtoBytesMom=ipv4ShuntProtoBytesMom, shapingDropsPrio5Mom=shapingDropsPrio5Mom, lbShuntPktDot1qExt=lbShuntPktDot1qExt, liveviewUnaccountedPlsdOut=liveviewUnaccountedPlsdOut, liveviewHostnameAllocFailVal=liveviewHostnameAllocFailVal, connsyncUdpSntMax=connsyncUdpSntMax, rulesetBgpNumpaths=rulesetBgpNumpaths, shapingOutOfCreditsDropsMom=shapingOutOfCreditsDropsMom, lbBlacklistedPacketsVal=lbBlacklistedPacketsVal, connsyncBadVer=connsyncBadVer, liveviewUptimeVal=liveviewUptimeVal, greBytesMax=greBytesMax, rulesetCompilerReaperRecvBufVal=rulesetCompilerReaperRecvBufVal, drdlSliceStateUsed=drdlSliceStateUsed, ethernetShuntEoMplsPacketsMax=ethernetShuntEoMplsPacketsMax, plsw=plsw, packetprocessingTx=packetprocessingTx, connectionUnestablishedMax=connectionUnestablishedMax, gtpCreatePdpReqMom=gtpCreatePdpReqMom, liveviewReaperRecvBufMax=liveviewReaperRecvBufMax, gtpCreatePdpRspVal=gtpCreatePdpRspVal, ethernet8021qMom=ethernet8021qMom, plsdValuesAggrDatasetMax=plsdValuesAggrDatasetMax, rulesetBadAspath=rulesetBadAspath, qsyncESendbufFullMax=qsyncESendbufFullMax, plsdConnectsMax=plsdConnectsMax, gtpErrorIndMom=gtpErrorIndMom, shapingcounterClients=shapingcounterClients, bgpRecyclePathsVal=bgpRecyclePathsVal, tcpv6EcneVal=tcpv6EcneVal, lbShuntByteIpv6AddrInt=lbShuntByteIpv6AddrInt, gtpUnknownMom=gtpUnknownMom, tcpv6CreateAttemptsMom=tcpv6CreateAttemptsMom, lbRxPktsIntVal=lbRxPktsIntVal, interfaceBytesToEngineVal=interfaceBytesToEngineVal, tcpv4OosBytesMom=tcpv4OosBytesMom, plswSysdiagHdUsageVal=plswSysdiagHdUsageVal, drdlLiteralSetMax=drdlLiteralSetMax, connsyncBadTypeMax=connsyncBadTypeMax, qsyncERecvUpdateEntriesVal=qsyncERecvUpdateEntriesVal, lbLogicalFpMax=lbLogicalFpMax, connectionRedirected=connectionRedirected, qsyncERecvUpdateEntries=qsyncERecvUpdateEntries, gtpDeletePdpReq=gtpDeletePdpReq, plswNewcollVal=plswNewcollVal, ipv6RefusedOofVal=ipv6RefusedOofVal, dynamicnetobjectSubscriberTooManyMax=dynamicnetobjectSubscriberTooManyMax, connsyncOutofsyncMissedRcv=connsyncOutofsyncMissedRcv, shapingDropsPrio1Val=shapingDropsPrio1Val, dynamicnetobjectFailedInserts=dynamicnetobjectFailedInserts, tcpv4SegmentsDroppedMom=tcpv4SegmentsDroppedMom, tcpv6Created=tcpv6Created, tcpv6RetransmitsMom=tcpv6RetransmitsMom, shapingBrownConnDropsMax=shapingBrownConnDropsMax, connectionLruAllocs=connectionLruAllocs, shapingReloadDropsMax=shapingReloadDropsMax, rulesetRecalcTimeMax=rulesetRecalcTimeMax, tcpv4DequeuedSegmentsVal=tcpv4DequeuedSegmentsVal, shapingBrownHostDrops=shapingBrownHostDrops, teredoAuthHeadersMom=teredoAuthHeadersMom, qsyncISumSplitsActiveMax=qsyncISumSplitsActiveMax, plswSysdiagHdSize=plswSysdiagHdSize, gtpBytesMom=gtpBytesMom, ipv4ShuntProtoBytes=ipv4ShuntProtoBytes, fwMonitorFailures=fwMonitorFailures, lbTxFpExtVal=lbTxFpExtVal, ethernetDivert=ethernetDivert, tcpv4UntrackedPacketsMax=tcpv4UntrackedPacketsMax, ipv6BytesMom=ipv6BytesMom, tcpv6EnqueuedSegmentsMom=tcpv6EnqueuedSegmentsMom, ethernetHBResetDrops=ethernetHBResetDrops, dynamiczones=dynamiczones, liveviewHostnameAllocFailMax=liveviewHostnameAllocFailMax, lbShuntByteIpv4AddrIntMax=lbShuntByteIpv4AddrIntMax, lbShuntPktEomplsInt=lbShuntPktEomplsInt, fwMonitorFailuresMax=fwMonitorFailuresMax, plswMemused=plswMemused, dynamicnetobjectSubscriberConflicts=dynamicnetobjectSubscriberConflicts, teredoBytesVal=teredoBytesVal, drdlChildEmptyVal=drdlChildEmptyVal, connsyncUpdateSnt=connsyncUpdateSnt, ipv4ReassembledMom=ipv4ReassembledMom, ipv6ShuntAddressPacketsVal=ipv6ShuntAddressPacketsVal, pppoeIpv4PacketsVal=pppoeIpv4PacketsVal, plsdLinksDatasetVal=plsdLinksDatasetVal, plsdConnProp=plsdConnProp, lbShuntByteIpv4AddrExtVal=lbShuntByteIpv4AddrExtVal, tcpv6EcneMom=tcpv6EcneMom, ipv6ExtRoute=ipv6ExtRoute, liveviewPLSDClientsMax=liveviewPLSDClientsMax, greUnknownVersionMax=greUnknownVersionMax, lbShuntPktIpv6AddrIntMax=lbShuntPktIpv6AddrIntMax, shapingFailedFairnessObjectsMom=shapingFailedFairnessObjectsMom, ipfixExportedIpv4Sets=ipfixExportedIpv4Sets, gtpDeletePdpRspMom=gtpDeletePdpRspMom, pppoeIpv6Packets=pppoeIpv6Packets, fwRewitesVal=fwRewitesVal, plswGlobals=plswGlobals, l2tpPackets=l2tpPackets, rulesetBgpTreesize=rulesetBgpTreesize, lbShuntPktDot1qIntMax=lbShuntPktDot1qIntMax, tcpv4CreatedVal=tcpv4CreatedVal, ethernetMplsOohVal=ethernetMplsOohVal, bgpReplacesMax=bgpReplacesMax, tcpv4BytesMom=tcpv4BytesMom, connectionCreatedOutbound=connectionCreatedOutbound, ethernetMplsOohMax=ethernetMplsOohMax, ipv6ExtHbh=ipv6ExtHbh, plsdConnlogDropsMax=plsdConnlogDropsMax, ipv4FragmentedIdsVal=ipv4FragmentedIdsVal, tunnelKnownPktsVal=tunnelKnownPktsVal, lbShuntByteEomplsInt=lbShuntByteEomplsInt, tcpv6GoodputBytesVal=tcpv6GoodputBytesVal, gtpErrorIndVal=gtpErrorIndVal, lbTxFpIntMax=lbTxFpIntMax, dynamicnetobjectInsertPldbFailed=dynamicnetobjectInsertPldbFailed, shapingDequeuedVal=shapingDequeuedVal, plsdValueUpdatesConns=plsdValueUpdatesConns, fwRuleSets=fwRuleSets, dynamicnetobjectRemoveSucceededMom=dynamicnetobjectRemoveSucceededMom, fwLogsMom=fwLogsMom, dynamicnetobjectInsertPldbFailedMom=dynamicnetobjectInsertPldbFailedMom, pppoeShortPacketsMax=pppoeShortPacketsMax, plsdConnections=plsdConnections, plsdRingbufUsageVal=plsdRingbufUsageVal, ethernetShuntDot1qPacketsVal=ethernetShuntDot1qPacketsVal, ipv4EcnCnMom=ipv4EcnCnMom, connsyncSeenRcvMom=connsyncSeenRcvMom, tcpv6DiscardedSegmentsMax=tcpv6DiscardedSegmentsMax, teredoFragsMax=teredoFragsMax, tcpv6Lostsync=tcpv6Lostsync, plsdConnectsVal=plsdConnectsVal, plsdConnlogConnsAddedMom=plsdConnlogConnsAddedMom, liveviewTooManyNetobjectsOnHost=liveviewTooManyNetobjectsOnHost, plswGupdateMax=plswGupdateMax, divertHbReqSentVal=divertHbReqSentVal, connectionInvalidRulesetUpdate=connectionInvalidRulesetUpdate, shapingActiveQueuesMax=shapingActiveQueuesMax, shapingDropsPrio1Mom=shapingDropsPrio1Mom, tcpv6SimOpenMom=tcpv6SimOpenMom, ipv4EcnCnVal=ipv4EcnCnVal, tcpv4SynExisting=tcpv4SynExisting, connectionProtEnablesMax=connectionProtEnablesMax, connectionRedirectCollisionsMax=connectionRedirectCollisionsMax, ethernetShuntEthertypePacketsMom=ethernetShuntEthertypePacketsMom, ipv4EcnEct1Max=ipv4EcnEct1Max, ipv6EcnCnMax=ipv6EcnCnMax, packetprocessingLoad=packetprocessingLoad, connectionCount=connectionCount, lbLbUptimeVal=lbLbUptimeVal, tcpv4SimOpen=tcpv4SimOpen, l2tplcpPacketsVal=l2tplcpPacketsVal, ipv4ReassembledVal=ipv4ReassembledVal, bgp=bgp, divertIngressPacketsNol2Max=divertIngressPacketsNol2Max, packetprocessingRxVal=packetprocessingRxVal, tcpv4EmptyPackets=tcpv4EmptyPackets, tcpv4EnqueuedSegments=tcpv4EnqueuedSegments, rulesetNonexistentSubscriber=rulesetNonexistentSubscriber, lbShuntPktIpv6AddrIntMom=lbShuntPktIpv6AddrIntMom, dynamicnetobjectListItemsReturnedMom=dynamicnetobjectListItemsReturnedMom, ipv4RefusedFilterMax=ipv4RefusedFilterMax, divertDroppedPacketsMom=divertDroppedPacketsMom, ethernetShuntMplsPackets=ethernetShuntMplsPackets, ipv6RefusedSelf=ipv6RefusedSelf, grePppPacketsMax=grePppPacketsMax, tcpv4DiscardedSegmentsVal=tcpv4DiscardedSegmentsVal, rulesetDynipRemoveMax=rulesetDynipRemoveMax, interfaceBytesFromEngine=interfaceBytesFromEngine, rulesetDynipAllocFailVal=rulesetDynipAllocFailVal, tcpv6Packets=tcpv6Packets, lbRunningFpMax=lbRunningFpMax, tcpv6CreatedVal=tcpv6CreatedVal, shapingcounterRecycleMom=shapingcounterRecycleMom, divertIngressPacketsNohostMom=divertIngressPacketsNohostMom, teredoOrgHeadersVal=teredoOrgHeadersVal, tcpv6CreatedMom=tcpv6CreatedMom, ipv6RefusedSelfVal=ipv6RefusedSelfVal, connsyncBadAdlerMax=connsyncBadAdlerMax, plsdConnUpdatesFilteredMax=plsdConnUpdatesFilteredMax, connsyncUdpSntMom=connsyncUdpSntMom, connsyncDoubleSeen=connsyncDoubleSeen, gtpSgsnReqMom=gtpSgsnReqMom)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", rulesetBitmasksMaxMax=rulesetBitmasksMaxMax, connectionLookups=connectionLookups, interfaceFlowUpdReorderedMax=interfaceFlowUpdReorderedMax, rulesetBitmasksAvgVal=rulesetBitmasksAvgVal, dynamicnetobjectCurrentCount=dynamicnetobjectCurrentCount, tcpv4EnqueuedSegmentsVal=tcpv4EnqueuedSegmentsVal, lbRxPktsExtVal=lbRxPktsExtVal, tcpv6Ecne=tcpv6Ecne, tcpv4UntrackedGoodputMax=tcpv4UntrackedGoodputMax, drdlLiteralSet=drdlLiteralSet, plsdValueUpdatesConnsMom=plsdValueUpdatesConnsMom, tcpv6SynExistingMom=tcpv6SynExistingMom, ipv6ExtInvlVal=ipv6ExtInvlVal, tcpv4=tcpv4, ipv4RefusedOofVal=ipv4RefusedOofVal, drdlAutoAcceptsVal=drdlAutoAcceptsVal, rulesetStatisticsrulesMax=rulesetStatisticsrulesMax, drdlFullPacketsMax=drdlFullPacketsMax, shapingVbsSplitErrorMom=shapingVbsSplitErrorMom, greRouteFlagMax=greRouteFlagMax, drdlAnalyzerActionsVal=drdlAnalyzerActionsVal, gtpBytesMax=gtpBytesMax, fwLogsMax=fwLogsMax, plsdConnlogDropsVal=plsdConnlogDropsVal, qsyncIReaperSplitsCreated=qsyncIReaperSplitsCreated, shapingObjectCopiesCreatedMax=shapingObjectCopiesCreatedMax, ipv6EcnEct1Val=ipv6EcnEct1Val, drdlProp256UsedMax=drdlProp256UsedMax, drdlVsRegexTestsMax=drdlVsRegexTestsMax, l2tpcipv4PacketsVal=l2tpcipv4PacketsVal, shapingcounterActiveMax=shapingcounterActiveMax, ethernetShuntMplsBytesMax=ethernetShuntMplsBytesMax, plsdValuesDelayedExpand=plsdValuesDelayedExpand, teredoAuthHeadersMax=teredoAuthHeadersMax, tcpv6SegmentsDroppedVal=tcpv6SegmentsDroppedVal, plsdValueUpdatesConnsVal=plsdValueUpdatesConnsVal, sysdiag=sysdiag, qsyncIAdjustmentsSent=qsyncIAdjustmentsSent, shapingBrownConnDropsVal=shapingBrownConnDropsVal, greIpv6PacketsMax=greIpv6PacketsMax, drdlAutoAcceptsMom=drdlAutoAcceptsMom, ipv6BytesVal=ipv6BytesVal, connectionRedirectCollisionsVal=connectionRedirectCollisionsVal, lbBlacklistedPackets=lbBlacklistedPackets, tcpv6DequeuedSegmentsMax=tcpv6DequeuedSegmentsMax, systemHdUsageVal=systemHdUsageVal, plsdConnUpdatesNewVal=plsdConnUpdatesNewVal, divertEgressBytesMom=divertEgressBytesMom, fwDivertsMom=fwDivertsMom, fwDivertsMax=fwDivertsMax, ipv6RefusedShort=ipv6RefusedShort, ethernetShuntDot1qBytesMax=ethernetShuntDot1qBytesMax, rulesetConnStatechangeLinklevel=rulesetConnStatechangeLinklevel, divertHostsUseVal=divertHostsUseVal, lbShuntPktEomplsExtMax=lbShuntPktEomplsExtMax, ipv6RefusedVersionVal=ipv6RefusedVersionVal, tcpv6CwrVal=tcpv6CwrVal, ipv4FragmentAllocationFailuresVal=ipv4FragmentAllocationFailuresVal, ethernetShuntMplsPacketsVal=ethernetShuntMplsPacketsVal, shapingDrops=shapingDrops, connectionRedirectCollisions=connectionRedirectCollisions, connectionDestroyedEst=connectionDestroyedEst, tcpv6SegmentAllocFailMax=tcpv6SegmentAllocFailMax, tcpv6PacketsVal=tcpv6PacketsVal, ipv6EcnEct1=ipv6EcnEct1, ipv4RefusedVersionVal=ipv4RefusedVersionVal, liveviewStringCacheUsageMax=liveviewStringCacheUsageMax, packetprocessingRxMax=packetprocessingRxMax, lbTxDirectIntVal=lbTxDirectIntVal, connsyncBadEngineidMom=connsyncBadEngineidMom, ipv6RefusedVersion=ipv6RefusedVersion, pppoeIpv4Packets=pppoeIpv4Packets, lbShuntPktIpv6AddrExtMom=lbShuntPktIpv6AddrExtMom, tunnelL2tp=tunnelL2tp, lbShuntByteEthertypeInt=lbShuntByteEthertypeInt, ipv6EcnEct0Mom=ipv6EcnEct0Mom, shapingObjectPoolExhaustedMax=shapingObjectPoolExhaustedMax, gre=gre, shapingRulesSetCountVal=shapingRulesSetCountVal, lbShuntPktIpv4ProtoIntVal=lbShuntPktIpv4ProtoIntVal, lbShuntByteEomplsIntMom=lbShuntByteEomplsIntMom, lbLbUptime=lbLbUptime, drdlPropertyFailVal=drdlPropertyFailVal, qsyncERecvUpdateEntriesMom=qsyncERecvUpdateEntriesMom, drdlAnalyzerCheckedBytesMax=drdlAnalyzerCheckedBytesMax, drdlAnalyzerCheckedBytes=drdlAnalyzerCheckedBytes, ipv6=ipv6, shapingRecycleObjects=shapingRecycleObjects, interfaceFlowHostnameAllocFailVal=interfaceFlowHostnameAllocFailVal, connectionLookupsMax=connectionLookupsMax, drdlAnalyzerSkippedBytesMom=drdlAnalyzerSkippedBytesMom, rulesetLocaltreeSize=rulesetLocaltreeSize, tcpv4RefusedShortMom=tcpv4RefusedShortMom, rulesetSubscriberAllocFailVal=rulesetSubscriberAllocFailVal, tcpv4CorruptConnMom=tcpv4CorruptConnMom, lbTxDirectExtMom=lbTxDirectExtMom, plswTimeGlobal=plswTimeGlobal, connectionTtlTimeoutsMom=connectionTtlTimeoutsMom, packetprocessingPushbackRequeuesMax=packetprocessingPushbackRequeuesMax, drdlProp64UsedMax=drdlProp64UsedMax, connsyncCorruptPktMom=connsyncCorruptPktMom, bgpRecyclePaths=bgpRecyclePaths, drdlTaintFillVal=drdlTaintFillVal, shapingQueueAllocationsMax=shapingQueueAllocationsMax, shapingcounterUpdatesInterestingMax=shapingcounterUpdatesInterestingMax, liveviewReaperRecvBufVal=liveviewReaperRecvBufVal, divertDroppedPacketsMax=divertDroppedPacketsMax, packetprocessingTxDropsVal=packetprocessingTxDropsVal, drdlAnalyzerSkippedBytes=drdlAnalyzerSkippedBytes, tcpv4SegmentsDropped=tcpv4SegmentsDropped, drdlTaintFill=drdlTaintFill, rulesetDynipRemove=rulesetDynipRemove, lbShuntByteIpv4AddrExtMom=lbShuntByteIpv4AddrExtMom, ipv6ExtRouteMax=ipv6ExtRouteMax, qsyncIUpdatesVal=qsyncIUpdatesVal, liveviewHostsVal=liveviewHostsVal, lbCpuLoadVal=lbCpuLoadVal, ipv4FragmentDropsMom=ipv4FragmentDropsMom, snoopers=snoopers, connection=connection, plsdRingbufUsageMax=plsdRingbufUsageMax, tcpv6Retransmits=tcpv6Retransmits, tunnelGtpMax=tunnelGtpMax, connsyncHelloRcvMax=connsyncHelloRcvMax, rulesetStatisticsRuleOverflow=rulesetStatisticsRuleOverflow, plsdValuesAggrDatasetVal=plsdValuesAggrDatasetVal, ethernetShuntEoMplsBytesVal=ethernetShuntEoMplsBytesVal, tcpv4RefusedFilter=tcpv4RefusedFilter, rulesetServertreeSize=rulesetServertreeSize, dynamicnetobjectAddFailed=dynamicnetobjectAddFailed, ipv4RefusedVersionMax=ipv4RefusedVersionMax, drdlBuffersUsedVal=drdlBuffersUsedVal, plsdValueUpdatesConnsHp=plsdValueUpdatesConnsHp, shapingScheduledOdirs=shapingScheduledOdirs, plsdConnUpdatesNewMax=plsdConnUpdatesNewMax, ethernetDivertVal=ethernetDivertVal, rulesetConnStatechangeMax=rulesetConnStatechangeMax, bgpReplacesVal=bgpReplacesVal, qsyncESendUpdatePacketsMom=qsyncESendUpdatePacketsMom, grePppPacketsVal=grePppPacketsVal, ipv6FragmentedIdsMax=ipv6FragmentedIdsMax, rulesetDynipRemoveMom=rulesetDynipRemoveMom, connsyncOutofsyncMom=connsyncOutofsyncMom, ipv6ShuntProtoPackets=ipv6ShuntProtoPackets, fwInjectsFailures=fwInjectsFailures, ipv4RefusedShortMax=ipv4RefusedShortMax, liveviewPropUsage=liveviewPropUsage, tcpv6SimOpenVal=tcpv6SimOpenVal, drdlLiteralSetVal=drdlLiteralSetVal, greUnknownType=greUnknownType, systemCPULoad=systemCPULoad, ipv6RefusedSelfMax=ipv6RefusedSelfMax, lbRxPktsInt=lbRxPktsInt, liveviewVNOsVal=liveviewVNOsVal, tcpv4CorruptOptionsMom=tcpv4CorruptOptionsMom, ipv4BytesMom=ipv4BytesMom, plswTimeDatasetVal=plswTimeDatasetVal, lbTxDirectIntMax=lbTxDirectIntMax, tcpv6UntrackedPacketsMom=tcpv6UntrackedPacketsMom, bgpCommunityTooSmallVal=bgpCommunityTooSmallVal, lbShuntPktIpv4AddrExtVal=lbShuntPktIpv4AddrExtVal, dynamicnetobjectCurrentIpCountMax=dynamicnetobjectCurrentIpCountMax, rulesetCompilerReaperRecvBuf=rulesetCompilerReaperRecvBuf, lbTxFpExtMom=lbTxFpExtMom, packetprocessingNICRXDropsMax=packetprocessingNICRXDropsMax, rulesetConnStatechangeAspath=rulesetConnStatechangeAspath, connsyncUnknownUpdateRcv=connsyncUnknownUpdateRcv, ipfixConnUpdatesMom=ipfixConnUpdatesMom, plswSystemHdSize=plswSystemHdSize, interfaceFlowUpdMissedMax=interfaceFlowUpdMissedMax, tcpv4SegmentedConnections=tcpv4SegmentedConnections, dynamicnetobjectSubscriberTooMany=dynamicnetobjectSubscriberTooMany, drdlVsRegexStepsVal=drdlVsRegexStepsVal, rulesetBgpNumLookupMax=rulesetBgpNumLookupMax, connsyncSeenRcvMax=connsyncSeenRcvMax, lbShuntPktEthertypeExtMax=lbShuntPktEthertypeExtMax, bgpFreelistPathsMax=bgpFreelistPathsMax, gtpDeletePdpReqMax=gtpDeletePdpReqMax, plsdConnlogConns=plsdConnlogConns, packetprocessingPushbackQueueFullMom=packetprocessingPushbackQueueFullMom, lbRxPktsIntMom=lbRxPktsIntMom, plswSessionsVal=plswSessionsVal, connectionFailureShuntBytesMom=connectionFailureShuntBytesMom, drdlPropertyFail=drdlPropertyFail, lbShuntByteIpv4ProtoExtMom=lbShuntByteIpv4ProtoExtMom, lbShuntByteIpv6AddrExtVal=lbShuntByteIpv6AddrExtVal, shapingDirectBytesPrio0Val=shapingDirectBytesPrio0Val, ipv6Packets=ipv6Packets, tcpv4CreateAttemptsMom=tcpv4CreateAttemptsMom, liveviewVNOs=liveviewVNOs, tcpv4OosBytes=tcpv4OosBytes, shapingDequeuedBytesVal=shapingDequeuedBytesVal, divertHbRepRecv=divertHbRepRecv, tcpv4SegmentsPayload=tcpv4SegmentsPayload, interfaceFlowUpdMissedVal=interfaceFlowUpdMissedVal, divertIngressPacketsNol2Val=divertIngressPacketsNol2Val, ipv4FragmentTooNoisyMom=ipv4FragmentTooNoisyMom, shapingDequeuedOdirsVal=shapingDequeuedOdirsVal, gtpGpdusMom=gtpGpdusMom, connectionRefusedExisting=connectionRefusedExisting, tcpv6DiscardedSegments=tcpv6DiscardedSegments, divertHbRepSentMom=divertHbRepSentMom, tcpv4CreateAttempts=tcpv4CreateAttempts, shapingScheduledOdirsMax=shapingScheduledOdirsMax, lbShuntByteIpv4ProtoInt=lbShuntByteIpv4ProtoInt, pppoeIpv4PacketsMax=pppoeIpv4PacketsMax, tunnelGtp=tunnelGtp, shapingDropsCps=shapingDropsCps, teredo=teredo, lbTxDirectIntMom=lbTxDirectIntMom, dynamicnetobjectListItemsReturnedVal=dynamicnetobjectListItemsReturnedVal, gtpSgsnRspVal=gtpSgsnRspVal, divertConnectionsMax=divertConnectionsMax, tcpv4DiscardedSegmentsMax=tcpv4DiscardedSegmentsMax, tcpv6UntrackedGoodputVal=tcpv6UntrackedGoodputVal, lbTxDropsIntVal=lbTxDropsIntVal, connectionInvalidRulesetUpdateMom=connectionInvalidRulesetUpdateMom, plsdValueUpdatesBytesHp=plsdValueUpdatesBytesHp, connsyncUnknownUpdateRcvMom=connsyncUnknownUpdateRcvMom, dynamicnetobjectListCallsMax=dynamicnetobjectListCallsMax, lbRxPktsExtMom=lbRxPktsExtMom, lbRxBytesIntMom=lbRxBytesIntMom, ipv4UnfragmentedVal=ipv4UnfragmentedVal, connsyncUpdateSntMax=connsyncUpdateSntMax, ipv4ShuntProtoBytesVal=ipv4ShuntProtoBytesVal, tcpv6SegmentsVal=tcpv6SegmentsVal, shapingObjectPoolExhaustedVal=shapingObjectPoolExhaustedVal, grePppPackets=grePppPackets, drdlSliceStateFailMom=drdlSliceStateFailMom, bgpReplaces=bgpReplaces, lbShuntPktMplsInt=lbShuntPktMplsInt, lbShuntByteIpv6AddrIntMax=lbShuntByteIpv6AddrIntMax, shapingDropsVal=shapingDropsVal, shapingDropsPrio5Max=shapingDropsPrio5Max, shapingVbsSplitErrorVal=shapingVbsSplitErrorVal, lbRxPktsExtMax=lbRxPktsExtMax, dynamicnetobjectSubscriberConflictsMax=dynamicnetobjectSubscriberConflictsMax, shapingObjectFullVal=shapingObjectFullVal, plsdHosts=plsdHosts, rulesetConnStatechangeProp=rulesetConnStatechangeProp, connsyncSeenRcv=connsyncSeenRcv, teredoBytes=teredoBytes, dynamicnetobjectCurrentIpCountVal=dynamicnetobjectCurrentIpCountVal, gtpUnknownVal=gtpUnknownVal, drdlBufferAllocationFailuresVal=drdlBufferAllocationFailuresVal, plsdValueLookups=plsdValueLookups, drdlSliceStateFailVal=drdlSliceStateFailVal, lbRxPktsIntMax=lbRxPktsIntMax, ipv6ExtRouteMom=ipv6ExtRouteMom, tunnelGreVal=tunnelGreVal, ipv6RefusedShortVal=ipv6RefusedShortVal, rulesetConnStatechangePropVal=rulesetConnStatechangePropVal, divertIngressPacketsNohostMax=divertIngressPacketsNohostMax, rulesetConnStatechangeAspathMom=rulesetConnStatechangeAspathMom)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", tcpv4SimOpenMax=tcpv4SimOpenMax, liveviewFailedNetobjectsMax=liveviewFailedNetobjectsMax, packetprocessingRxMom=packetprocessingRxMom, liveviewReaperSendBufMax=liveviewReaperSendBufMax, rulesetRecalcVersionMax=rulesetRecalcVersionMax, connectionFailureShuntBytesVal=connectionFailureShuntBytesVal, shapingDropsPrio4=shapingDropsPrio4, ethernetShuntEthertypeBytesMom=ethernetShuntEthertypeBytesMom, connectionRefusedRulesetVal=connectionRefusedRulesetVal, drdlProp64FailMax=drdlProp64FailMax, interfaceBytesToEngine=interfaceBytesToEngine, liveviewTooManyNetobjectsOnHostVal=liveviewTooManyNetobjectsOnHostVal, ethernetShuntMplsBytes=ethernetShuntMplsBytes, ipv6FragmentReassFailMom=ipv6FragmentReassFailMom, l2tpcipv4Packets=l2tpcipv4Packets, qsyncISumSplitsActive=qsyncISumSplitsActive, tcpv4RetransmitsVal=tcpv4RetransmitsVal, bgpBalanceTimeVal=bgpBalanceTimeVal, qsyncISumFreelistSizeVal=qsyncISumFreelistSizeVal, dynamicnetobjectListItemsReturnedMax=dynamicnetobjectListItemsReturnedMax, ipv4EcnEct0Val=ipv4EcnEct0Val, shapingDequeued=shapingDequeued, ipv4Unfragmented=ipv4Unfragmented, tcpv6SegmentAllocFailVal=tcpv6SegmentAllocFailVal, ethernetMulticastMax=ethernetMulticastMax, tunnelDuplicatesMax=tunnelDuplicatesMax, rulesetPropChecksMax=rulesetPropChecksMax, tcpv4Segments=tcpv4Segments, plsdConnlogConnsDumped=plsdConnlogConnsDumped, fwRewitesMax=fwRewitesMax, tcpv4GoodputBytes=tcpv4GoodputBytes, divertEgressPacketsVal=divertEgressPacketsVal, ethernetDivertMom=ethernetDivertMom, ipv6FragmentTooNoisy=ipv6FragmentTooNoisy, greShortPacketsVal=greShortPacketsVal, connsync=connsync, connsyncBadVerVal=connsyncBadVerVal, tcpv4RefusedShort=tcpv4RefusedShort, qsyncIUnsyncMom=qsyncIUnsyncMom, plswDatasetStartVal=plswDatasetStartVal, ipv4ShuntAddressBytes=ipv4ShuntAddressBytes, lbShuntByteDot1qExtVal=lbShuntByteDot1qExtVal, connectionRefusedProt=connectionRefusedProt, rulesetLastUpdateVal=rulesetLastUpdateVal, packetprocessingNICRXDropsMom=packetprocessingNICRXDropsMom, ethernetNonIpVal=ethernetNonIpVal, ipv6ShuntProtoBytesMom=ipv6ShuntProtoBytesMom, l2tpPacketsMom=l2tpPacketsMom, ipv6ExtInvlMax=ipv6ExtInvlMax, tcpv4DequeuedSegmentsMom=tcpv4DequeuedSegmentsMom, lbShuntPktIpv4AddrExtMax=lbShuntPktIpv4AddrExtMax, rulesetRecalcBgpMax=rulesetRecalcBgpMax, shapingDropsPrio2=shapingDropsPrio2, shapingDropsPrioOtherVal=shapingDropsPrioOtherVal, gtpUpdatePdpReqVal=gtpUpdatePdpReqVal, ipv6EcnCnMom=ipv6EcnCnMom, shapingDequeueCallsMax=shapingDequeueCallsMax, shapingDropsPrio7Max=shapingDropsPrio7Max, tcpv6UntrackedBytesVal=tcpv6UntrackedBytesVal, divertHbLostVal=divertHbLostVal, tcpv4SegmentsDroppedMax=tcpv4SegmentsDroppedMax, plswMemusedVal=plswMemusedVal, lbTxDropsExt=lbTxDropsExt, ipv4RefusedFilterVal=ipv4RefusedFilterVal, divertHostsUseMax=divertHostsUseMax, drdlAnalyzerCheckedBytesVal=drdlAnalyzerCheckedBytesVal, packetprocessingBalancerDrops=packetprocessingBalancerDrops, rulesetSubscribersMax=rulesetSubscribersMax, connsyncSeenSntMax=connsyncSeenSntMax, interfaceFlowUpdReorderedMom=interfaceFlowUpdReorderedMom, lbShuntByteMplsIntMom=lbShuntByteMplsIntMom, tcpv4SegmentedConnectionsVal=tcpv4SegmentedConnectionsVal, drdlFullPacketsVal=drdlFullPacketsVal, ipv6RefusedOofMax=ipv6RefusedOofMax, shapingObjectCopiesCreated=shapingObjectCopiesCreated, shapingDirectBytesVal=shapingDirectBytesVal, lbHbLostMax=lbHbLostMax, ipv4RefusedFilter=ipv4RefusedFilter, tcpv6GoodputPackets=tcpv6GoodputPackets, plsdDumptime=plsdDumptime, tcpv4GoodputPackets=tcpv4GoodputPackets, gtpUpdatePdpReqMax=gtpUpdatePdpReqMax, tcpv4PacketsMax=tcpv4PacketsMax, ipv6ShuntAddressPacketsMax=ipv6ShuntAddressPacketsMax, ipv6ReassembledMom=ipv6ReassembledMom, packetprocessingRxDropsVal=packetprocessingRxDropsVal, tcpv6RefusedBroadcastMom=tcpv6RefusedBroadcastMom, tcpv6RetransmitsVal=tcpv6RetransmitsVal, divertEgressPackets=divertEgressPackets, qsyncENumPeersVal=qsyncENumPeersVal, plswBlocksVal=plswBlocksVal, lbShuntByteIpv4ProtoExt=lbShuntByteIpv4ProtoExt, connsyncSeenackRcvMax=connsyncSeenackRcvMax, ipv6FragmentDropsMax=ipv6FragmentDropsMax, gtpSgsnReqVal=gtpSgsnReqVal, systemSwapFree=systemSwapFree, rulesetConnStatechangeService=rulesetConnStatechangeService, connsyncSeenackRcvMom=connsyncSeenackRcvMom, ethernetShuntMplsPacketsMom=ethernetShuntMplsPacketsMom, drdlVsRangeTests=drdlVsRangeTests, greShortPackets=greShortPackets, plswGupdateVal=plswGupdateVal, tcpv4RefusedFilterVal=tcpv4RefusedFilterVal, ipv4ShuntAddressPacketsMax=ipv4ShuntAddressPacketsMax, plswGraphsVal=plswGraphsVal, shapingcounterRecycleMax=shapingcounterRecycleMax, shapingQueueSizeVal=shapingQueueSizeVal, connsyncUpdateRcvVal=connsyncUpdateRcvVal, rulesetRecalcBgp=rulesetRecalcBgp, divertIngressPacketsMax=divertIngressPacketsMax, plsdValueUpdatesConnsHpMom=plsdValueUpdatesConnsHpMom, drdlOrphansMax=drdlOrphansMax, ipv4FragmentedVal=ipv4FragmentedVal, gtpUpdatePdpRsp=gtpUpdatePdpRsp, lbShuntPktEthertypeExtVal=lbShuntPktEthertypeExtVal, dynamicnetobjectAddCalls=dynamicnetobjectAddCalls, dynamicnetobjectAddFailedVal=dynamicnetobjectAddFailedVal, tcpv6DequeuedSegmentsVal=tcpv6DequeuedSegmentsVal, tcpv4Retransmits=tcpv4Retransmits, lbActiveFpVal=lbActiveFpVal, ipfixExportedMsgsMom=ipfixExportedMsgsMom, gtpDeletePdpRspVal=gtpDeletePdpRspVal, plsdValuesDatasetMax=plsdValuesDatasetMax, greFfffPacketsMom=greFfffPacketsMom, plsdValueRejectVal=plsdValueRejectVal, connsyncDoubleSeenVal=connsyncDoubleSeenVal, shapingOutOfCreditsDropsVal=shapingOutOfCreditsDropsVal, shapingObjectCopiesCreatedMom=shapingObjectCopiesCreatedMom, fwDropsMax=fwDropsMax, tcpv4UntrackedBytesVal=tcpv4UntrackedBytesVal, rulesetLocaltreeSizeVal=rulesetLocaltreeSizeVal, connectionEstCountMax=connectionEstCountMax, shapingRequeueQueueUsedMax=shapingRequeueQueueUsedMax, lbTxDropsExtMom=lbTxDropsExtMom, fwMonitorVal=fwMonitorVal, qsyncIIgnoredGenWrapVal=qsyncIIgnoredGenWrapVal, shapingDropsPrio6=shapingDropsPrio6, shapingObjectChecks=shapingObjectChecks, connsyncOutofsyncCollisionMom=connsyncOutofsyncCollisionMom, ipv6FragmentReassFailMax=ipv6FragmentReassFailMax, plswValuesDropped2Max=plswValuesDropped2Max, plsdConnlogIncomplete=plsdConnlogIncomplete, packetprocessingPacketPoolSizeMax=packetprocessingPacketPoolSizeMax, rulesetConnStatechangeVal=rulesetConnStatechangeVal, ipv4ShuntProtoPacketsMom=ipv4ShuntProtoPacketsMom, ipfixExportedIpv6RecordsMax=ipfixExportedIpv6RecordsMax, tunnelKnownPkts=tunnelKnownPkts, shapingUnshaped=shapingUnshaped, connectionCreatedInboundVal=connectionCreatedInboundVal, ipv6FragmentsVal=ipv6FragmentsVal, tunnelGenericVal=tunnelGenericVal, drdlProp64Used=drdlProp64Used, drdlFullPackets=drdlFullPackets, ethernetCountBytesIPv4IPv6Max=ethernetCountBytesIPv4IPv6Max, lbHbLostVal=lbHbLostVal, ethernetShuntDot1qBytesVal=ethernetShuntDot1qBytesVal, ethernetShuntEthertypeBytesMax=ethernetShuntEthertypeBytesMax, ipv6FragmentReassFail=ipv6FragmentReassFail, plsdLastdump=plsdLastdump, tcpv6RefusedRulesetMom=tcpv6RefusedRulesetMom, plswDailys=plswDailys, drdlPropertySetMax=drdlPropertySetMax, tunnelEsp=tunnelEsp, ipv4Fragmented=ipv4Fragmented, lbShuntByteMplsInt=lbShuntByteMplsInt, drdlProp32Fail=drdlProp32Fail, ipv6EcnEct1Mom=ipv6EcnEct1Mom, bgpCommunityTooSmall=bgpCommunityTooSmall, tcpv6OosPacketsMom=tcpv6OosPacketsMom, tcpv6EmptyPacketsMax=tcpv6EmptyPacketsMax, qsyncIUpdatesOldRuleset=qsyncIUpdatesOldRuleset, packetprocessingTxMom=packetprocessingTxMom, shapingQueueSize=shapingQueueSize, tcpv6UntrackedGoodputMax=tcpv6UntrackedGoodputMax, connectionRefusedRulesetMom=connectionRefusedRulesetMom, ipfixConnUpdates=ipfixConnUpdates, dynamicnetobjectCurrentIpCount=dynamicnetobjectCurrentIpCount, lbShuntByteEthertypeExt=lbShuntByteEthertypeExt, lbBucketMovesMax=lbBucketMovesMax, packetprocessingUptime=packetprocessingUptime, tcpv4SegmentsDroppedVal=tcpv4SegmentsDroppedVal, rulesetDynipAllocFailMax=rulesetDynipAllocFailMax, plsdVmsizeMax=plsdVmsizeMax, lbRxErrorsIntMax=lbRxErrorsIntMax, liveviewFailedNetobjectsVal=liveviewFailedNetobjectsVal, tcpv4CreateAttemptsVal=tcpv4CreateAttemptsVal, tcpv6PacketAllocFailMax=tcpv6PacketAllocFailMax, connectionRedirectedMax=connectionRedirectedMax, divertHbReqRecvMax=divertHbReqRecvMax, plsdValueUpdatesBytes=plsdValueUpdatesBytes, shapingDropsMom=shapingDropsMom, divertHbReqRecvMom=divertHbReqRecvMom, rulesetFwrulesVal=rulesetFwrulesVal, ipv4RefusedShort=ipv4RefusedShort, bgpAnnouncesMax=bgpAnnouncesMax, ethernetNonIpMom=ethernetNonIpMom, pppoe=pppoe, rulesetClienttreeSize=rulesetClienttreeSize, tcpv4UntrackedPacketsMom=tcpv4UntrackedPacketsMom, connsyncUpdateSntMom=connsyncUpdateSntMom, shapingDropsPrio9Val=shapingDropsPrio9Val, lbShuntByteDot1qExtMom=lbShuntByteDot1qExtMom, connectionCreateAttemptsInbound=connectionCreateAttemptsInbound, fwMonitor=fwMonitor, lbShuntByteDot1qIntMax=lbShuntByteDot1qIntMax, plsdTimeConnected=plsdTimeConnected, tcpv6=tcpv6, qsyncIReaperSplitsCreatedMom=qsyncIReaperSplitsCreatedMom, qsyncEUpdatesMismatch=qsyncEUpdatesMismatch, shapingRecycleObjectsVal=shapingRecycleObjectsVal, drdlVsRangeTestsVal=drdlVsRangeTestsVal, plswSessions=plswSessions, plsdValueUpdatesBytesVal=plsdValueUpdatesBytesVal, qsyncESendUpdateEntriesMom=qsyncESendUpdateEntriesMom, tcpv6PacketAllocFail=tcpv6PacketAllocFail, drdlBufferAllocationFailures=drdlBufferAllocationFailures, pppoePaddedPacketsMax=pppoePaddedPacketsMax, lbRxBytesExt=lbRxBytesExt, plsdConnUpdatesFilteredMom=plsdConnUpdatesFilteredMom, rulesetConnStatechange=rulesetConnStatechange, bgpWithdrawsVal=bgpWithdrawsVal, plswValuesDropped4Val=plswValuesDropped4Val, lbRxPktsExt=lbRxPktsExt, ipv4EcnCn=ipv4EcnCn, ipv6FragmentedIdsVal=ipv6FragmentedIdsVal, plsdValuesSentVal=plsdValuesSentVal, ipv6RefusedShortMom=ipv6RefusedShortMom, pppoeTruncatedPackets=pppoeTruncatedPackets, plswTimeDailyVal=plswTimeDailyVal, drdlLiteralSetMom=drdlLiteralSetMom, shapingEcnMarks=shapingEcnMarks, dynamicnetobjectFailedInsertsMom=dynamicnetobjectFailedInsertsMom, lbShuntByteIpv4ProtoExtMax=lbShuntByteIpv4ProtoExtMax, plsdBwUsedMax=plsdBwUsedMax, dynamicnetobjectAddFailedMax=dynamicnetobjectAddFailedMax, lbTxDropsIntMom=lbTxDropsIntMom, ipv6ShuntProtoPacketsVal=ipv6ShuntProtoPacketsVal, shapingEnqueuedBytesMom=shapingEnqueuedBytesMom, l2tpBytes=l2tpBytes, qsyncIIgnoredOOOMom=qsyncIIgnoredOOOMom, connsyncBadVerMom=connsyncBadVerMom, divertIngressPackets=divertIngressPackets, shapingUsedFairnessObjectsVal=shapingUsedFairnessObjectsVal, rulesetServertreeSizeMax=rulesetServertreeSizeMax, ipv6ShuntProtoBytes=ipv6ShuntProtoBytes, lbShuntPktIpv4AddrIntMom=lbShuntPktIpv4AddrIntMom, divertEgressBytesMax=divertEgressBytesMax, lbShuntPktIpv4ProtoIntMax=lbShuntPktIpv4ProtoIntMax, drdlProp256Used=drdlProp256Used, ipv4FragmentTooNoisyMax=ipv4FragmentTooNoisyMax, lbRxErrorsIntMom=lbRxErrorsIntMom, lbShuntByteIpv4AddrIntMom=lbShuntByteIpv4AddrIntMom, gtpGpdus=gtpGpdus, tcpv4SimOpenVal=tcpv4SimOpenVal)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", drdlTaintFillPercent=drdlTaintFillPercent, plswTimeDaily=plswTimeDaily, tcpv4EnqueuedSegmentsMax=tcpv4EnqueuedSegmentsMax, ethernetMulticastMom=ethernetMulticastMom, ipv4FragmentAllocationFailuresMom=ipv4FragmentAllocationFailuresMom, shapingDequeueCallsMom=shapingDequeueCallsMom, drdlChildEmptyMom=drdlChildEmptyMom, ipv6FragmentDrops=ipv6FragmentDrops, shapingQueuePoolExhausted=shapingQueuePoolExhausted, rulesetBgpNumLookupMom=rulesetBgpNumLookupMom, drdlAddedChildrenMax=drdlAddedChildrenMax, tcpv4GoodputBytesVal=tcpv4GoodputBytesVal, tcpv4RefusedFilterMax=tcpv4RefusedFilterMax, tcpv4RefusedOffsetMom=tcpv4RefusedOffsetMom, dynamicnetobjectAddSucceededVal=dynamicnetobjectAddSucceededVal, tunnelKnownPktsMom=tunnelKnownPktsMom, ipv6PacketsMax=ipv6PacketsMax, qsyncESendbufFullMom=qsyncESendbufFullMom, tcpv6CwrMax=tcpv6CwrMax, greShortPacketsMax=greShortPacketsMax, ethernetUnicastMom=ethernetUnicastMom, plswGupdate=plswGupdate, tcpv4UntrackedGoodputMom=tcpv4UntrackedGoodputMom, plsdVmsize=plsdVmsize, tcpv6RefusedShortMom=tcpv6RefusedShortMom, lbRxErrorsExtMax=lbRxErrorsExtMax, pppoeShortPacketsVal=pppoeShortPacketsVal, plsdConnsDropped=plsdConnsDropped, tcpv4RejectedVal=tcpv4RejectedVal, connsyncDoubleSeenMax=connsyncDoubleSeenMax, ipv6FragmentOverlapMom=ipv6FragmentOverlapMom, ipv6FragmentReassFailVal=ipv6FragmentReassFailVal, drdlAnalyzerSkippedBytesMax=drdlAnalyzerSkippedBytesMax, shapingEnqueuedMom=shapingEnqueuedMom, greIpv4Packets=greIpv4Packets, fwAcceptsVal=fwAcceptsVal, connectionNotFound=connectionNotFound, packetprocessingDmaAllocsVal=packetprocessingDmaAllocsVal, fwMonitorMax=fwMonitorMax, systemUptimeVal=systemUptimeVal, connsyncUnknownUpdateRcvMax=connsyncUnknownUpdateRcvMax, divertBypassPacketsVal=divertBypassPacketsVal, liveviewUnaccountedPlsdOutMax=liveviewUnaccountedPlsdOutMax, drdlProp64UsedVal=drdlProp64UsedVal, pppoeTruncatedPacketsVal=pppoeTruncatedPacketsVal, rulesetBgpTreesizeMax=rulesetBgpTreesizeMax, ethernetNonIp=ethernetNonIp, fwMonitorMom=fwMonitorMom, shapingUnshapedBytesMax=shapingUnshapedBytesMax, packetprocessingPushbackQueueSizeVal=packetprocessingPushbackQueueSizeVal, teredoAuthHeadersVal=teredoAuthHeadersVal, ipfixConnections=ipfixConnections, liveviewUptime=liveviewUptime, divertOversizeL2=divertOversizeL2, divertIngressBytesMax=divertIngressBytesMax, plsdValuesAggrDataset=plsdValuesAggrDataset, shapingMaxConnDropsVal=shapingMaxConnDropsVal, liveviewPropArrayUsage=liveviewPropArrayUsage, ipv4RefusedOofMom=ipv4RefusedOofMom, ethernetMpls=ethernetMpls, plsdConnUpdatesVal=plsdConnUpdatesVal, ipv4ShuntAddressBytesMom=ipv4ShuntAddressBytesMom, liveviewUnaccountedPlsdIn=liveviewUnaccountedPlsdIn, drdlProp0Used=drdlProp0Used, lbShuntByteEomplsExtMax=lbShuntByteEomplsExtMax, plswBlocks=plswBlocks, tcpv6CorruptOptionsVal=tcpv6CorruptOptionsVal, liveviewFailedFullNetobjectsMax=liveviewFailedFullNetobjectsMax, pppoeNonIpPacketsVal=pppoeNonIpPacketsVal, shapingEnqueuedMax=shapingEnqueuedMax, divertOutOfHostsMom=divertOutOfHostsMom, tcpv6CreateAttempts=tcpv6CreateAttempts, shapingEnqueuedVal=shapingEnqueuedVal, teredoFrags=teredoFrags, plswNewglobal=plswNewglobal, dynamicnetobjectListItemsMax=dynamicnetobjectListItemsMax, lbNumFpMax=lbNumFpMax, lbShuntPktIpv6AddrExtMax=lbShuntPktIpv6AddrExtMax, qsyncIReaperSplitsActiveVal=qsyncIReaperSplitsActiveVal, rulesetConnStatechangeTtlMax=rulesetConnStatechangeTtlMax, tcpv4PacketAllocFail=tcpv4PacketAllocFail, tcpv6RefusedFilterMom=tcpv6RefusedFilterMom, ethernetMplsVal=ethernetMplsVal, tcpv4EcneMom=tcpv4EcneMom, fwInjectsFailuresMom=fwInjectsFailuresMom, lbShuntPktEomplsExtMom=lbShuntPktEomplsExtMom, tcpv6OutOfWindowPacketsMom=tcpv6OutOfWindowPacketsMom, packetprocessingOverLoad=packetprocessingOverLoad, plsdConnlogConnsAdded=plsdConnlogConnsAdded, shapingDropsPrio9Mom=shapingDropsPrio9Mom, dynamicnetobjectPendingAddsMax=dynamicnetobjectPendingAddsMax, pppoePaddedPacketsMom=pppoePaddedPacketsMom, packetprocessing=packetprocessing, shapingSkippedQsyncUpdatesVal=shapingSkippedQsyncUpdatesVal, connsyncBadEngineidMax=connsyncBadEngineidMax, rulesetRecalcUnknown=rulesetRecalcUnknown, drdlProp0Fail=drdlProp0Fail, gtpCreatePdpReq=gtpCreatePdpReq, ipfixConnectionsMax=ipfixConnectionsMax, qsyncIReaperSplitsActive=qsyncIReaperSplitsActive, plsdConnPropHash=plsdConnPropHash, lbShuntByteIpv6AddrIntMom=lbShuntByteIpv6AddrIntMom, ipfixExportedIpv4RecordsMom=ipfixExportedIpv4RecordsMom, ipfix=ipfix, lbRxFsInvalidVerMom=lbRxFsInvalidVerMom, drdlChildAbuses=drdlChildAbuses, connectionRefusedExistingMax=connectionRefusedExistingMax, systemSwapFreeMax=systemSwapFreeMax, tcpv4DiscardedSegments=tcpv4DiscardedSegments, packetprocessingHeapfree=packetprocessingHeapfree, ipv4FragmentReassFailVal=ipv4FragmentReassFailVal, shapingDequeuedOdirsMom=shapingDequeuedOdirsMom, shapingcounterRecycle=shapingcounterRecycle, qsyncEUpdatePackets=qsyncEUpdatePackets, ipfixExportedIpv6Sets=ipfixExportedIpv6Sets, connsyncBadType=connsyncBadType, connsyncSeenackRcvVal=connsyncSeenackRcvVal, dynamicnetobjectSubscriberTooManyVal=dynamicnetobjectSubscriberTooManyVal, plsdHostsVal=plsdHostsVal, tcpv6EmptyPacketsMom=tcpv6EmptyPacketsMom, packetprocessingPushbackQueueFull=packetprocessingPushbackQueueFull, liveviewReaperSendBufVal=liveviewReaperSendBufVal, bgpReconnectsMax=bgpReconnectsMax, qsyncIIgnoredGenWrapMax=qsyncIIgnoredGenWrapMax, interfaceFlowNewMom=interfaceFlowNewMom, ipv4Bytes=ipv4Bytes, ipv4ShuntProtoBytesMax=ipv4ShuntProtoBytesMax, l2tplcpPackets=l2tplcpPackets, connectionRefusedProtVal=connectionRefusedProtVal, shapingDropsCpsMax=shapingDropsCpsMax, shapingDropsPrio6Val=shapingDropsPrio6Val, lbTxFpIntVal=lbTxFpIntVal, divertOversizeL2Val=divertOversizeL2Val, rulesetRecalcTimeMom=rulesetRecalcTimeMom, ipfixExportedIpv4SetsVal=ipfixExportedIpv4SetsVal, lbShuntPktEomplsIntMom=lbShuntPktEomplsIntMom, gtpUpdatePdpRspVal=gtpUpdatePdpRspVal, rulesetDynipAllocFail=rulesetDynipAllocFail, interfaceFlowUpdReorderedVal=interfaceFlowUpdReorderedVal, packetprocessingPushbackQueueFullMax=packetprocessingPushbackQueueFullMax, ipv6FragnentTimeoutMom=ipv6FragnentTimeoutMom, bgpCommunityMaxSeenVal=bgpCommunityMaxSeenVal, greFfffPacketsMax=greFfffPacketsMax, tcpv4LostsyncVal=tcpv4LostsyncVal, tcpv6LostsyncMax=tcpv6LostsyncMax, lbRxBytesExtVal=lbRxBytesExtVal, shapingDropsPrio8Max=shapingDropsPrio8Max, packetprocessingLoadVal=packetprocessingLoadVal, divertHbRepSent=divertHbRepSent, shapingDequeueCalls=shapingDequeueCalls, plswDailysVal=plswDailysVal, shapingObjectOverflowMom=shapingObjectOverflowMom, tunnelEspVal=tunnelEspVal, shapingReceivedVal=shapingReceivedVal, shapingDropsPrioOtherMom=shapingDropsPrioOtherMom, drdlVsRangeSteps=drdlVsRangeSteps, l2tpIpv6PacketsMom=l2tpIpv6PacketsMom, plsdLastdumpVal=plsdLastdumpVal, connsyncUdpSntVal=connsyncUdpSntVal, qsyncESendbufUsageVal=qsyncESendbufUsageVal, dynamicnetobjectListCallsMom=dynamicnetobjectListCallsMom, tcpv6GoodputBytesMom=tcpv6GoodputBytesMom, tcpv4Created=tcpv4Created, tcpv4RefusedOffsetMax=tcpv4RefusedOffsetMax, plsdValueUpdatesBytesMax=plsdValueUpdatesBytesMax, plsdDumptimeVal=plsdDumptimeVal, tcpv6EmptyPackets=tcpv6EmptyPackets, connectionDestroyedEstVal=connectionDestroyedEstVal, l2tpchap6Packets=l2tpchap6Packets, divertDroppedPackets=divertDroppedPackets, packetprocessingTxMax=packetprocessingTxMax, fwMidconnRewriteMom=fwMidconnRewriteMom, qsyncIIgnoredOOOMax=qsyncIIgnoredOOOMax, bgpAnnounces=bgpAnnounces, tcpv6UntrackedBytes=tcpv6UntrackedBytes, plswValuesDropped1Val=plswValuesDropped1Val, divertOutOfHosts=divertOutOfHosts, shapingDropsPrio5Val=shapingDropsPrio5Val, qsync=qsync, bgpConvresionTimeVal=bgpConvresionTimeVal, lbShuntPktIpv4ProtoExtVal=lbShuntPktIpv4ProtoExtVal, tcpv6EmptyPacketsVal=tcpv6EmptyPacketsVal, ipv4FragmentTooNoisy=ipv4FragmentTooNoisy, lbShuntByteEomplsExtVal=lbShuntByteEomplsExtVal, ethernetShuntEthertypeBytesVal=ethernetShuntEthertypeBytesVal, ethernetShuntEoMplsBytesMom=ethernetShuntEoMplsBytesMom, fwDrops=fwDrops, ipv4FragmentReassFail=ipv4FragmentReassFail, liveviewStringCacheUsageVal=liveviewStringCacheUsageVal, drdlAnalyzerChecksVal=drdlAnalyzerChecksVal, ipv6FragmentAllocationFailures=ipv6FragmentAllocationFailures, connectionLookupsMom=connectionLookupsMom, drdlAddedChildren=drdlAddedChildren, ipv4ShuntProtoPacketsVal=ipv4ShuntProtoPacketsVal, interfaceBytesFromEngineVal=interfaceBytesFromEngineVal, shapingDropsCpsMom=shapingDropsCpsMom, bgpWithdraws=bgpWithdraws, ipfixExportedIpv6SetsMax=ipfixExportedIpv6SetsMax, tcpv6SegmentAllocFail=tcpv6SegmentAllocFail, plsdConnPropHashMax=plsdConnPropHashMax, pppoeShortPackets=pppoeShortPackets, connectionUpdatesMax=connectionUpdatesMax, interfaceFlowHostnameAllocFailMom=interfaceFlowHostnameAllocFailMom, shapingDirectMax=shapingDirectMax, plsdBwUsedMom=plsdBwUsedMom, drdlPropertyFailMom=drdlPropertyFailMom, tunnelTeredoVal=tunnelTeredoVal, ipv6FragmentDropsVal=ipv6FragmentDropsVal, shapingDequeueCallsVal=shapingDequeueCallsVal, ipv6ShuntAddressBytesMax=ipv6ShuntAddressBytesMax, drdlVsRegexSteps=drdlVsRegexSteps, ipv6FragnentTimeout=ipv6FragnentTimeout, connectionRefusedFull=connectionRefusedFull, procera=procera, liveviewHostCacheExhaustedVal=liveviewHostCacheExhaustedVal, ipv4FragmentDropsVal=ipv4FragmentDropsVal, dynamicnetobjectRemoveCallsMax=dynamicnetobjectRemoveCallsMax, tcpv4SynExistingVal=tcpv4SynExistingVal, connsyncConnNotfoundVal=connsyncConnNotfoundVal, ipv6FragmentAllocationFailuresMax=ipv6FragmentAllocationFailuresMax, drdlAddedChildrenMom=drdlAddedChildrenMom, ipv4FragmentedMax=ipv4FragmentedMax, lbLogicalFp=lbLogicalFp, tcpv6UntrackedGoodputMom=tcpv6UntrackedGoodputMom, rulesetDynipRemoveVal=rulesetDynipRemoveVal, channelstats=channelstats, rulesetDynipAllocFailMom=rulesetDynipAllocFailMom, shapingEnqueuedBytesVal=shapingEnqueuedBytesVal, lbShuntByteIpv4ProtoIntMom=lbShuntByteIpv4ProtoIntMom, connectionCreatedOutboundVal=connectionCreatedOutboundVal, shapingDropsPrio9=shapingDropsPrio9, tcpv4UntrackedBytesMax=tcpv4UntrackedBytesMax, lbShuntByteEthertypeExtMax=lbShuntByteEthertypeExtMax, connectionUnestablished=connectionUnestablished, plsdConnlogConnsDumpedVal=plsdConnlogConnsDumpedVal, rulesetDynipOversizedMax=rulesetDynipOversizedMax, ipv4EcnEct0=ipv4EcnEct0, tcpv6OosPacketsMax=tcpv6OosPacketsMax, plswDatasetEnd=plswDatasetEnd, interfaceFlowNewMissedMom=interfaceFlowNewMissedMom, lbTxFs=lbTxFs, connsyncOutofsyncMax=connsyncOutofsyncMax, ipv6RefusedVersionMom=ipv6RefusedVersionMom, tcpv4RefusedBroadcast=tcpv4RefusedBroadcast, ipv6RefusedVersionMax=ipv6RefusedVersionMax, plsdValueReject=plsdValueReject, connsyncSeenSntVal=connsyncSeenSntVal, plswValuesDropped3=plswValuesDropped3, rulesetStatisticsRuleOverflowMax=rulesetStatisticsRuleOverflowMax, shapingDropsPrio2Mom=shapingDropsPrio2Mom, connsyncUdpRcvMax=connsyncUdpRcvMax, liveviewUnaccountedPlsdFlowsMom=liveviewUnaccountedPlsdFlowsMom, tcpv6SegmentsPayloadVal=tcpv6SegmentsPayloadVal, qsyncIAdjustmentsSentMom=qsyncIAdjustmentsSentMom)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", drdlAutoAcceptsMax=drdlAutoAcceptsMax, qsyncESplitTimeoutMax=qsyncESplitTimeoutMax, tunnelDuplicates=tunnelDuplicates, dynamicnetobjectSubscriberConflictsVal=dynamicnetobjectSubscriberConflictsVal, drdlProp64UsedMom=drdlProp64UsedMom, ipv6ShuntProtoPacketsMax=ipv6ShuntProtoPacketsMax, connectionEstablishedMom=connectionEstablishedMom, teredoFragsVal=teredoFragsVal, tcpv6OosPackets=tcpv6OosPackets, tcpv4EcneVal=tcpv4EcneVal, lbNumFpVal=lbNumFpVal, shapingUsedFairnessObjectsMax=shapingUsedFairnessObjectsMax, fwRejectsVal=fwRejectsVal, connsyncHelloRcvVal=connsyncHelloRcvVal, bgpReconnectsVal=bgpReconnectsVal, ethernetShuntEoMplsBytesMax=ethernetShuntEoMplsBytesMax, rulesetDynipAddMom=rulesetDynipAddMom, dynamicnetobjectSubscriberCountVal=dynamicnetobjectSubscriberCountVal, tcpv4RetransmitsMax=tcpv4RetransmitsMax, ethernetMplsOohMom=ethernetMplsOohMom, systemSwapTotalMax=systemSwapTotalMax, drdlPropertySet=drdlPropertySet, pppoeBadversionPackets=pppoeBadversionPackets, lbRxBytesIntMax=lbRxBytesIntMax, lbShuntByteIpv4AddrExt=lbShuntByteIpv4AddrExt, ipfixExportedIpv4SetsMom=ipfixExportedIpv4SetsMom, drdlAnalyzerCheckedBytesMom=drdlAnalyzerCheckedBytesMom, lbShuntByteIpv6AddrExt=lbShuntByteIpv6AddrExt, lbRxErrorsExtMom=lbRxErrorsExtMom, bgpUptimeVal=bgpUptimeVal, rulesetConnStatechangeLinklevelMax=rulesetConnStatechangeLinklevelMax, fwRejectsMom=fwRejectsMom, rulesetConnStatechangeServiceVal=rulesetConnStatechangeServiceVal, shapingcounterRecycleVal=shapingcounterRecycleVal, tcpv4PacketsMom=tcpv4PacketsMom, drdlChildEmpty=drdlChildEmpty, ethernet=ethernet, packetprocessingPushbackPacketsVal=packetprocessingPushbackPacketsVal, liveviewHostCacheExhaustedMom=liveviewHostCacheExhaustedMom, tcpv4RefusedRulesetVal=tcpv4RefusedRulesetVal, rulesetCompilerReaperSendBufVal=rulesetCompilerReaperSendBufVal, lbShuntPktDot1qInt=lbShuntPktDot1qInt, packetprocessingPushbackPackets=packetprocessingPushbackPackets, ipv4RefusedOofMax=ipv4RefusedOofMax, ipv4EcnEct1Mom=ipv4EcnEct1Mom, rulesetBadAspathVal=rulesetBadAspathVal, tcpv4EnqueuedSegmentsMom=tcpv4EnqueuedSegmentsMom, rulesetFwrules=rulesetFwrules, plswNewdaily=plswNewdaily, tcpv4SegmentsMax=tcpv4SegmentsMax, ipv4UnfragmentedMax=ipv4UnfragmentedMax, shapingBorrowDequeuesMom=shapingBorrowDequeuesMom, ipfixConnectionsVal=ipfixConnectionsVal, shapingDropsPrio8=shapingDropsPrio8, divertDroppedPacketsVal=divertDroppedPacketsVal, connectionOrphanedMax=connectionOrphanedMax, liveviewClientsVal=liveviewClientsVal, ethernetBroadcastMax=ethernetBroadcastMax, lbActiveFp=lbActiveFp, ipv4Reassembled=ipv4Reassembled, shapingEnqueued=shapingEnqueued, rulesetShapingrulesMax=rulesetShapingrulesMax, systemMemTotalVal=systemMemTotalVal, fwDropsMom=fwDropsMom, packetprocessingBalancerDropsMax=packetprocessingBalancerDropsMax, plsdValueRejectPriorMax=plsdValueRejectPriorMax, ethernetNonIpMax=ethernetNonIpMax, lbShuntByteEthertypeIntMax=lbShuntByteEthertypeIntMax, liveviewPropUsageVal=liveviewPropUsageVal, qsyncIUpdatesOldRulesetMom=qsyncIUpdatesOldRulesetMom, lbShuntByteDot1qExtMax=lbShuntByteDot1qExtMax, rulesetCompilerReaperSendBufMax=rulesetCompilerReaperSendBufMax, connectionRefusedExistingVal=connectionRefusedExistingVal, shapingSkippedQsyncUpdatesMom=shapingSkippedQsyncUpdatesMom, l2tpcipv6PacketsMom=l2tpcipv6PacketsMom, liveviewFailedFullNetobjectsMom=liveviewFailedFullNetobjectsMom, pbs=pbs, tcpv4CreateAttemptsMax=tcpv4CreateAttemptsMax, divertHbLostMax=divertHbLostMax, drdlTaintFillPercentVal=drdlTaintFillPercentVal, grePackets=grePackets, tcpv6PacketsMom=tcpv6PacketsMom, tcpv6SynExisting=tcpv6SynExisting, qsyncESplitTimeoutMom=qsyncESplitTimeoutMom, grePptpPackets=grePptpPackets, dynamicnetobjectRemoveFailedMom=dynamicnetobjectRemoveFailedMom, gtpErrorInd=gtpErrorInd, shapingRulesSetCountMom=shapingRulesSetCountMom, ethernet8021qMax=ethernet8021qMax, plsdValueUpdatesConnsHpVal=plsdValueUpdatesConnsHpVal, lbShuntByteEthertypeExtMom=lbShuntByteEthertypeExtMom, divertOutOfHostsVal=divertOutOfHostsVal, drdlSliceStateUsedMax=drdlSliceStateUsedMax, tcpv4CorruptOptionsVal=tcpv4CorruptOptionsVal, shapingSkippedQsyncUpdates=shapingSkippedQsyncUpdates, lbBucketMoves=lbBucketMoves, lbShuntPktIpv4AddrIntMax=lbShuntPktIpv4AddrIntMax, fwRewitesMom=fwRewitesMom, lbRxBytesIntVal=lbRxBytesIntVal, shapingDropsPrio1=shapingDropsPrio1, lbRxFsInvalidVerVal=lbRxFsInvalidVerVal, connectionNotFoundMax=connectionNotFoundMax, plsdValuesFilteredVal=plsdValuesFilteredVal, tcpv4GoodputBytesMax=tcpv4GoodputBytesMax, rulesetSubscribers=rulesetSubscribers, l2tpIpv6PacketsVal=l2tpIpv6PacketsVal, gtpGpdusVal=gtpGpdusVal, plswValuesDropped2=plswValuesDropped2, bgpConvresionTimeMax=bgpConvresionTimeMax, interfaceBytesFromEngineMom=interfaceBytesFromEngineMom, rulesetShapingrules=rulesetShapingrules, drdlProp32Used=drdlProp32Used, shapingDropsPrio2Val=shapingDropsPrio2Val, connectionCreateAttemptsInboundMax=connectionCreateAttemptsInboundMax, pppoeControlPacketsVal=pppoeControlPacketsVal, fwInjectsMom=fwInjectsMom, ethernetShuntEthertypePackets=ethernetShuntEthertypePackets, tcpv4Bytes=tcpv4Bytes, ipv6ExtDest=ipv6ExtDest, lbShuntByteMplsExtMom=lbShuntByteMplsExtMom, rulesetBgpTreesizeVal=rulesetBgpTreesizeVal, connsyncSeenSntMom=connsyncSeenSntMom, connectionCreatedInboundMom=connectionCreatedInboundMom, ipv6EcnCn=ipv6EcnCn, shapingObjectChecksMax=shapingObjectChecksMax, shapingBorrowDequeuesVal=shapingBorrowDequeuesVal, qsyncIUpdatesOldRulesetMax=qsyncIUpdatesOldRulesetMax, plswValuesDropped2Val=plswValuesDropped2Val, greUnknownTypeMax=greUnknownTypeMax, divertOversizeL2Mom=divertOversizeL2Mom, tcpv4UntrackedPackets=tcpv4UntrackedPackets, tcpv6SegmentAllocFailMom=tcpv6SegmentAllocFailMom, systemHdSize=systemHdSize, tcpv4EmptyPacketsMax=tcpv4EmptyPacketsMax, lbShuntByteMplsIntVal=lbShuntByteMplsIntVal, fwAcceptsMax=fwAcceptsMax, gtpPackets=gtpPackets, rulesetConnStatechangeFlags=rulesetConnStatechangeFlags, lbShuntPktEomplsExtVal=lbShuntPktEomplsExtVal, tcpv4Rejected=tcpv4Rejected, shapingcounterClientsVal=shapingcounterClientsVal, divertHbRepRecvVal=divertHbRepRecvVal, lbShuntPktMplsExtMom=lbShuntPktMplsExtMom, ipv4ShuntAddressPacketsVal=ipv4ShuntAddressPacketsVal, ipv4RefusedSelfMax=ipv4RefusedSelfMax, plswSysdiagHdSizeMax=plswSysdiagHdSizeMax, tcpv6SegmentedConnectionsMax=tcpv6SegmentedConnectionsMax, plsdConnlogDrops=plsdConnlogDrops, pppoeControlPacketsMax=pppoeControlPacketsMax, shapingcounterActive=shapingcounterActive, tcpv4RefusedOffset=tcpv4RefusedOffset, qsyncESendbufUsage=qsyncESendbufUsage, lbShuntPktMplsExtVal=lbShuntPktMplsExtVal, drdlAnalyzerChecksMax=drdlAnalyzerChecksMax, shapingReloadDropsVal=shapingReloadDropsVal, shapingOutofpacketsDrops=shapingOutofpacketsDrops, pppoeIpv6PacketsVal=pppoeIpv6PacketsVal, interfaceBytesToEngineMom=interfaceBytesToEngineMom, tcpv4OosPacketsMom=tcpv4OosPacketsMom, shapingObjectPoolExhausted=shapingObjectPoolExhausted, plswSystemHdSizeVal=plswSystemHdSizeVal, dynamicnetobjectListItemsReturned=dynamicnetobjectListItemsReturned, divertOversizeL2Max=divertOversizeL2Max, ipv6ShuntAddressPacketsMom=ipv6ShuntAddressPacketsMom, systemCPULoadMax=systemCPULoadMax, shaping=shaping, dynamicnetobjectRemoveSucceededMax=dynamicnetobjectRemoveSucceededMax, greUnknownVersionMom=greUnknownVersionMom, lbHbLost=lbHbLost, rulesetConnStatechangeLinklevelMom=rulesetConnStatechangeLinklevelMom, tunnelTeredoMax=tunnelTeredoMax, ipv6PacketsVal=ipv6PacketsVal, connsyncBadAdlerVal=connsyncBadAdlerVal, lbShuntPktDot1qExtVal=lbShuntPktDot1qExtVal, plswNewcollMax=plswNewcollMax, lbRxFsInvalidVerMax=lbRxFsInvalidVerMax, gtpSgsnRspMax=gtpSgsnRspMax, lbTxFpInt=lbTxFpInt, drdlPropertySetMom=drdlPropertySetMom, lbBlacklistedBucketsMax=lbBlacklistedBucketsMax, shapingDropsCpsVal=shapingDropsCpsVal, teredoPacketsVal=teredoPacketsVal, ethernetMplsMom=ethernetMplsMom, plsdLinksDatasetMax=plsdLinksDatasetMax, plsdValueUpdatesConnsHpMax=plsdValueUpdatesConnsHpMax, lbTxDirectExtMax=lbTxDirectExtMax, shapingObjectFullMax=shapingObjectFullMax, l2tpcipv4PacketsMom=l2tpcipv4PacketsMom, plswGlobalsVal=plswGlobalsVal, tcpv4OutOfWindowPacketsMax=tcpv4OutOfWindowPacketsMax, lbTxFsVal=lbTxFsVal, liveviewUnaccountedPlsdInMom=liveviewUnaccountedPlsdInMom, divertIngressPacketsMom=divertIngressPacketsMom, qsyncIUpdatesMax=qsyncIUpdatesMax, tcpv6Cwr=tcpv6Cwr, systemCPULoadVal=systemCPULoadVal, plsdConnlogDumptime=plsdConnlogDumptime, fwRuleSetsMom=fwRuleSetsMom, tcpv6SegmentsPayloadMax=tcpv6SegmentsPayloadMax, lbShuntByteMplsIntMax=lbShuntByteMplsIntMax, lbShuntByteMplsExt=lbShuntByteMplsExt, rulesetConnStatechangeTtlMom=rulesetConnStatechangeTtlMom, liveviewClientsMax=liveviewClientsMax, ethernetShuntEthertypeBytes=ethernetShuntEthertypeBytes, shapingDropsPrio8Mom=shapingDropsPrio8Mom, ethernetShuntEoMplsPacketsMom=ethernetShuntEoMplsPacketsMom, tcpv4SegmentAllocFailVal=tcpv4SegmentAllocFailVal, qsyncIUpdatesMom=qsyncIUpdatesMom, tunnelUnknownPktsVal=tunnelUnknownPktsVal, packetprocessingPushbackQueueFullVal=packetprocessingPushbackQueueFullVal, packetprocessingPushbackPacketsMax=packetprocessingPushbackPacketsMax, connectionCountVal=connectionCountVal, teredoBytesMax=teredoBytesMax, ethernetDivertMax=ethernetDivertMax, plsdConnsDroppedMax=plsdConnsDroppedMax, qsyncIUpdatesOldRulesetVal=qsyncIUpdatesOldRulesetVal, liveviewUnaccountedPlsdFlows=liveviewUnaccountedPlsdFlows, pppoeControlPacketsMom=pppoeControlPacketsMom, rulesetBgpNumLookupVal=rulesetBgpNumLookupVal, greIpv6PacketsVal=greIpv6PacketsVal, l2tplcpPacketsMom=l2tplcpPacketsMom, bgpCommunityMaxSeen=bgpCommunityMaxSeen, ipv6Bytes=ipv6Bytes, ipv6ShuntProtoPacketsMom=ipv6ShuntProtoPacketsMom, rulesetConnStatechangeLinklevelVal=rulesetConnStatechangeLinklevelVal, connectionCreatedOutboundMax=connectionCreatedOutboundMax, fwInjectsFailuresPropMom=fwInjectsFailuresPropMom, tcpv6RefusedBroadcastVal=tcpv6RefusedBroadcastVal, fwRewites=fwRewites, qsyncEUpdatesMismatchMax=qsyncEUpdatesMismatchMax, ipfixExportedMsgsVal=ipfixExportedMsgsVal, lbCpuLoad=lbCpuLoad, dynamicnetobjectListCalls=dynamicnetobjectListCalls, ethernetShuntMplsPacketsMax=ethernetShuntMplsPacketsMax, connectionCreateAttemptsOutboundMom=connectionCreateAttemptsOutboundMom, connsyncUpdateRcvMom=connsyncUpdateRcvMom, tcpv6RefusedRulesetMax=tcpv6RefusedRulesetMax, drdlBufferAllocationFailuresMom=drdlBufferAllocationFailuresMom, divertHbReqSent=divertHbReqSent, ethernetCountBytesIPv4IPv6Val=ethernetCountBytesIPv4IPv6Val, shapingOutofpacketsDropsMom=shapingOutofpacketsDropsMom, dynamicnetobjectAddSucceededMom=dynamicnetobjectAddSucceededMom, shapingDirectBytesMax=shapingDirectBytesMax, connectionUpdatesMom=connectionUpdatesMom, connsyncOutofsyncMissedRcvVal=connsyncOutofsyncMissedRcvVal, gtpUpdatePdpRspMax=gtpUpdatePdpRspMax, dynamicnetobjectFailedInsertsMax=dynamicnetobjectFailedInsertsMax, dynamicnetobjectAddCallsMom=dynamicnetobjectAddCallsMom, divertIngressPacketsNol2Mom=divertIngressPacketsNol2Mom, greFfffPacketsVal=greFfffPacketsVal, rulesetConnStatechangeFlagsMom=rulesetConnStatechangeFlagsMom, gtpEchoPdpRsp=gtpEchoPdpRsp, plsdValuesDatasetVal=plsdValuesDatasetVal, plsdVmrssVal=plsdVmrssVal)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", lbBucketMovesVal=lbBucketMovesVal, plsdVmrssMax=plsdVmrssMax, lbShuntPktIpv4AddrExtMom=lbShuntPktIpv4AddrExtMom, qsyncEUpdatesMismatchMom=qsyncEUpdatesMismatchMom, gtpUpdatePdpRspMom=gtpUpdatePdpRspMom, fwRejectsMax=fwRejectsMax, qsyncIUnsyncMax=qsyncIUnsyncMax, divertHbReqRecv=divertHbReqRecv, bgpUptime=bgpUptime, shapingDropsPrio3Val=shapingDropsPrio3Val, ipv6FragmentedMax=ipv6FragmentedMax, shapingBrownHostDropsVal=shapingBrownHostDropsVal, ethernetShuntEoMplsBytes=ethernetShuntEoMplsBytes, ipv4ReassembledMax=ipv4ReassembledMax, plswTupdateMax=plswTupdateMax, qsyncISumFreelistSizeMax=qsyncISumFreelistSizeMax, lbRxErrorsExtVal=lbRxErrorsExtVal, tcpv4DequeuedSegments=tcpv4DequeuedSegments, packetprocessingPushbackRequeuesVal=packetprocessingPushbackRequeuesVal, lbShuntByteDot1qIntMom=lbShuntByteDot1qIntMom, divertEgressBytes=divertEgressBytes, lbTxFsMax=lbTxFsMax, connectionProtEnables=connectionProtEnables, tcpv6CorruptConnMax=tcpv6CorruptConnMax, ipv4RefusedSelfMom=ipv4RefusedSelfMom, tcpv6BytesMax=tcpv6BytesMax, plsdConnlogConnsAddedMax=plsdConnlogConnsAddedMax, liveviewFailedFullNetobjects=liveviewFailedFullNetobjects, shapingDropsPrio3Mom=shapingDropsPrio3Mom, liveviewHostCacheExhausted=liveviewHostCacheExhausted, packetprocessingHeapfreeMax=packetprocessingHeapfreeMax, tunnelGenericMax=tunnelGenericMax, connectionFailureShuntPacketsMax=connectionFailureShuntPacketsMax, grePptpPacketsMax=grePptpPacketsMax, tcpv4BytesVal=tcpv4BytesVal, connsyncOutofsyncMissedRcvMax=connsyncOutofsyncMissedRcvMax, connsyncHelloRcvMom=connsyncHelloRcvMom, shapingObjectChecksVal=shapingObjectChecksVal, gtpSgsnRsp=gtpSgsnRsp, lbShuntPktIpv6AddrIntVal=lbShuntPktIpv6AddrIntVal, tcpv4BytesMax=tcpv4BytesMax, tcpv4SegmentedConnectionsMax=tcpv4SegmentedConnectionsMax, drdlProp32UsedMax=drdlProp32UsedMax, connectionFailureShuntBytes=connectionFailureShuntBytes, drdlProp0FailVal=drdlProp0FailVal, lbLogicalFpVal=lbLogicalFpVal, connectionInvalidRulesetUpdateVal=connectionInvalidRulesetUpdateVal, fwInjectsFailuresVal=fwInjectsFailuresVal, lbShuntByteDot1qIntVal=lbShuntByteDot1qIntVal, systemSwapTotal=systemSwapTotal, fwInjectsFailuresProp=fwInjectsFailuresProp, ipv4PacketsMax=ipv4PacketsMax, dynamicnetobjectPendingAdds=dynamicnetobjectPendingAdds, interfaceFlowHostnameAllocFail=interfaceFlowHostnameAllocFail, rulesetStatisticsRuleOverflowVal=rulesetStatisticsRuleOverflowVal, lbRxErrorsInt=lbRxErrorsInt, shapingDirectVal=shapingDirectVal, liveviewActiveVNOsVal=liveviewActiveVNOsVal, teredoOrgHeaders=teredoOrgHeaders, qsyncESendUpdatePackets=qsyncESendUpdatePackets, tcpv4RefusedBroadcastMom=tcpv4RefusedBroadcastMom, lbShuntPktEomplsExt=lbShuntPktEomplsExt, gtpGpdusMax=gtpGpdusMax, plsdConnlogConnsVal=plsdConnlogConnsVal, shapingRequeueQueueUsedVal=shapingRequeueQueueUsedVal, shapingDropsPrio1Max=shapingDropsPrio1Max, shapingObjectPoolExhaustedMom=shapingObjectPoolExhaustedMom, grePacketsMax=grePacketsMax, plsdLinksDataset=plsdLinksDataset, ipv6FragmentTooNoisyMax=ipv6FragmentTooNoisyMax, plsdRingbufUsage=plsdRingbufUsage, ethernetShuntMplsBytesMom=ethernetShuntMplsBytesMom, tcpv4OosBytesVal=tcpv4OosBytesVal, lbTxDropsIntMax=lbTxDropsIntMax, lbTxDropsExtMax=lbTxDropsExtMax, plswValuesDropped3Max=plswValuesDropped3Max, shapingDropsPrioOther=shapingDropsPrioOther, tunnelGeneric=tunnelGeneric, shapingFailedFairnessObjectsVal=shapingFailedFairnessObjectsVal, packetprocessingTxVal=packetprocessingTxVal, rulesetBitmasksMaxVal=rulesetBitmasksMaxVal, ipv4EcnEct1Val=ipv4EcnEct1Val, bgpPrefixesVal=bgpPrefixesVal, plsdHostsMax=plsdHostsMax, connsyncUpdateRcvMax=connsyncUpdateRcvMax, tcpv6Segments=tcpv6Segments, plswValuesDropped1=plswValuesDropped1, ethernetShuntDot1qPackets=ethernetShuntDot1qPackets, plsdValuesDataset=plsdValuesDataset, gtpBytesVal=gtpBytesVal, drdlProp256Fail=drdlProp256Fail, ipv4FragmentDropsMax=ipv4FragmentDropsMax, grePppUnknownPacketsMax=grePppUnknownPacketsMax, liveviewHostnameAllocsMax=liveviewHostnameAllocsMax, packetprocessingBalancerQueueLengthVal=packetprocessingBalancerQueueLengthVal, ipv4FragmentDrops=ipv4FragmentDrops, shapingDirectBytesPrio0Mom=shapingDirectBytesPrio0Mom, tcpv4CorruptConn=tcpv4CorruptConn, shapingDropsPrio6Max=shapingDropsPrio6Max, tunnelL2tpVal=tunnelL2tpVal, drdlChildAbusesVal=drdlChildAbusesVal, plsdValueLookupsVal=plsdValueLookupsVal, ipfixExportedIpv6RecordsMom=ipfixExportedIpv6RecordsMom, packetprocessingNICRXDropsVal=packetprocessingNICRXDropsVal, rulesetConnStatechangeTtlVal=rulesetConnStatechangeTtlVal, drdlProp32FailMax=drdlProp32FailMax, drdlProp64Fail=drdlProp64Fail, ipv6EcnCnVal=ipv6EcnCnVal, shapingObjectCopiesCreatedVal=shapingObjectCopiesCreatedVal, drdlProp256FailMom=drdlProp256FailMom, plsdValuesSentMax=plsdValuesSentMax, fwRuleSetsMax=fwRuleSetsMax, interfaceFlowNewMissedVal=interfaceFlowNewMissedVal, liveviewActiveVNOsMax=liveviewActiveVNOsMax, plsdValuesSent=plsdValuesSent, divertHbRepRecvMom=divertHbRepRecvMom, tcpv4RejectedMax=tcpv4RejectedMax, gtpUnknown=gtpUnknown, liveviewDrdlRevisionVal=liveviewDrdlRevisionVal, ipv4RefusedVersion=ipv4RefusedVersion, qsyncESendbufFullVal=qsyncESendbufFullVal, tunnelUnknownPkts=tunnelUnknownPkts, rulesetBitmasksAvg=rulesetBitmasksAvg, rulesetDynipAddMax=rulesetDynipAddMax, divertHbReqSentMom=divertHbReqSentMom, shapingScheduledOdirsVal=shapingScheduledOdirsVal, divertEgressBytesVal=divertEgressBytesVal, connectionLruAllocsVal=connectionLruAllocsVal, tcpv6DequeuedSegmentsMom=tcpv6DequeuedSegmentsMom, ethernetShuntDot1qBytesMom=ethernetShuntDot1qBytesMom, plswCollsVal=plswCollsVal, tcpv4RejectedMom=tcpv4RejectedMom, rulesetOutdatedServiceVal=rulesetOutdatedServiceVal, divertHbReqSentMax=divertHbReqSentMax, tcpv4CreatedMax=tcpv4CreatedMax, plswNewdailyMax=plswNewdailyMax, plsdConnUpdatesFullVal=plsdConnUpdatesFullVal, liveviewUnaccountedPlsdOutMom=liveviewUnaccountedPlsdOutMom, packetprocessingRx=packetprocessingRx, rulesetRecalcUnknownVal=rulesetRecalcUnknownVal, lbShuntByteDot1qExt=lbShuntByteDot1qExt, plsdValueUpdatesBytesHpMax=plsdValueUpdatesBytesHpMax, plsdValueLookupsMom=plsdValueLookupsMom, ruleset=ruleset, drdlProp256FailMax=drdlProp256FailMax, tcpv6CorruptOptionsMax=tcpv6CorruptOptionsMax, shapingRequeueQueueUsed=shapingRequeueQueueUsed, shapingOutOfCreditsDrops=shapingOutOfCreditsDrops, qsyncESendbufFull=qsyncESendbufFull, ipv6RefusedOofMom=ipv6RefusedOofMom, connsyncSeenRcvVal=connsyncSeenRcvVal, lbShuntPktMplsIntMax=lbShuntPktMplsIntMax, ipv4ShuntProtoPackets=ipv4ShuntProtoPackets, liveviewHosts=liveviewHosts, connsyncPktOverflowMom=connsyncPktOverflowMom, fwAccepts=fwAccepts, lbShuntPktMplsExtMax=lbShuntPktMplsExtMax, plswNewglobalMax=plswNewglobalMax, packetprocessingPushbackRequeuesMom=packetprocessingPushbackRequeuesMom, drdlPropertySetVal=drdlPropertySetVal, plswGraphsMax=plswGraphsMax, teredoPacketsMax=teredoPacketsMax, plsdConnUpdatesFullMom=plsdConnUpdatesFullMom, lbShuntPktEthertypeIntMom=lbShuntPktEthertypeIntMom, bgpPathsMax=bgpPathsMax, ipv4ShuntAddressPacketsMom=ipv4ShuntAddressPacketsMom, divertIngressPacketsVal=divertIngressPacketsVal, ipv6ExtDestVal=ipv6ExtDestVal, tcpv4RefusedShortVal=tcpv4RefusedShortVal, plsdConnlogConnsAddedVal=plsdConnlogConnsAddedVal, drdlChildIterateMaxVal=drdlChildIterateMaxVal, plswSysdiagHdUsageMax=plswSysdiagHdUsageMax, ethernetCountBytesIPv4IPv6=ethernetCountBytesIPv4IPv6, fwInjectsFailuresMax=fwInjectsFailuresMax, tcpv6OutOfWindowPackets=tcpv6OutOfWindowPackets, divertIngressPacketsNohost=divertIngressPacketsNohost, shapingVbsSplitErrorMax=shapingVbsSplitErrorMax, drdlProp0UsedMax=drdlProp0UsedMax, tcpv6CreateAttemptsVal=tcpv6CreateAttemptsVal, shapingQueuePoolExhaustedVal=shapingQueuePoolExhaustedVal, drdlFullPacketsMom=drdlFullPacketsMom, gtpEchoPdpReqMom=gtpEchoPdpReqMom, lbRxErrorsExt=lbRxErrorsExt, rulesetBgpNumpathsVal=rulesetBgpNumpathsVal, connsyncConnNotfoundMom=connsyncConnNotfoundMom, ethernetBroadcast=ethernetBroadcast, drdlWaitingChildrenMax=drdlWaitingChildrenMax, shapingVbsSplitError=shapingVbsSplitError, tcpv6RefusedOffsetMom=tcpv6RefusedOffsetMom, plswSysdiagDaySize=plswSysdiagDaySize, tcpv4UntrackedGoodputVal=tcpv4UntrackedGoodputVal, liveviewPropEntryUsageMax=liveviewPropEntryUsageMax, l2tplcpPacketsMax=l2tplcpPacketsMax, connsyncUnknownUpdateRcvVal=connsyncUnknownUpdateRcvVal, shapingRulesSetCount=shapingRulesSetCount, rulesetReceived=rulesetReceived, liveviewReaperRecvBuf=liveviewReaperRecvBuf, shapingDirectBytesPrio0=shapingDirectBytesPrio0, connsyncUpdateSntVal=connsyncUpdateSntVal, ipv6RefusedSelfMom=ipv6RefusedSelfMom, tcpv4SynExistingMom=tcpv4SynExistingMom, gtpPacketsMax=gtpPacketsMax, ipv4RefusedVersionMom=ipv4RefusedVersionMom, lbShuntByteMplsExtVal=lbShuntByteMplsExtVal, rulesetConnStatechangePropMom=rulesetConnStatechangePropMom, ipv6ExtInvl=ipv6ExtInvl, ipv4FragmentedIds=ipv4FragmentedIds, plswValuesVal=plswValuesVal, drdlProp32FailMom=drdlProp32FailMom, fwInjectsFailuresPropVal=fwInjectsFailuresPropVal, plswTimeDataset=plswTimeDataset, ipv6ShuntAddressBytesMom=ipv6ShuntAddressBytesMom, teredoOrgHeadersMax=teredoOrgHeadersMax, dynamicnetobjectSubscriberCount=dynamicnetobjectSubscriberCount, packetprocessingTxDropsMax=packetprocessingTxDropsMax, gtpErrorIndMax=gtpErrorIndMax, interfaceFlowUpdReordered=interfaceFlowUpdReordered, liveviewUnaccountedPlsdFlowsVal=liveviewUnaccountedPlsdFlowsVal, plsdConnsDroppedVal=plsdConnsDroppedVal, pppoeNonIpPacketsMom=pppoeNonIpPacketsMom, tcpv4RefusedRuleset=tcpv4RefusedRuleset, lbShuntPktIpv4AddrInt=lbShuntPktIpv4AddrInt, l2tpcipv6PacketsVal=l2tpcipv6PacketsVal, ethernetShuntDot1qPacketsMom=ethernetShuntDot1qPacketsMom, drdlProp256UsedVal=drdlProp256UsedVal, packetprocessingPacketPoolSize=packetprocessingPacketPoolSize, plsdConnlogConnsDumpedMax=plsdConnlogConnsDumpedMax, connectionCreateAttemptsOutbound=connectionCreateAttemptsOutbound, shapingDequeuedOdirsMax=shapingDequeuedOdirsMax, connsyncUpdateRcv=connsyncUpdateRcv, bgpCommunityTooSmallMax=bgpCommunityTooSmallMax, ethernetShuntEoMplsPackets=ethernetShuntEoMplsPackets, divertIngressBytesMom=divertIngressBytesMom, connectionTtlTimeoutsVal=connectionTtlTimeoutsVal, ethernetMplsMax=ethernetMplsMax, divertConnectionsVal=divertConnectionsVal, tcpv6RefusedShort=tcpv6RefusedShort, pppoeIpv6PacketsMom=pppoeIpv6PacketsMom, plsdConnUpdatesNewMom=plsdConnUpdatesNewMom, qsyncISumSplitsActiveVal=qsyncISumSplitsActiveVal, shapingObjectCopiesMax=shapingObjectCopiesMax, connsyncPktOverflow=connsyncPktOverflow, connsyncConnNotfound=connsyncConnNotfound, shapingDropsPrio2Max=shapingDropsPrio2Max, bgpBalanceTime=bgpBalanceTime, plswGlobalsMax=plswGlobalsMax, fwRuleSetsVal=fwRuleSetsVal, tcpv4CorruptOptionsMax=tcpv4CorruptOptionsMax, connsyncBadEngineid=connsyncBadEngineid, lbBlacklistedPacketsMom=lbBlacklistedPacketsMom, shapingUnshapedBytes=shapingUnshapedBytes, tcpv6SegmentsMax=tcpv6SegmentsMax, connsyncBadTypeVal=connsyncBadTypeVal, rulesetOutdatedService=rulesetOutdatedService)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", drdlProp0UsedVal=drdlProp0UsedVal, gtpUpdatePdpReqMom=gtpUpdatePdpReqMom, fwInjectsFailuresPropMax=fwInjectsFailuresPropMax, bgpReconnects=bgpReconnects, gtpSgsnReq=gtpSgsnReq, lbShuntByteIpv4AddrExtMax=lbShuntByteIpv4AddrExtMax, tcpv6RefusedOffsetMax=tcpv6RefusedOffsetMax, rulesetConnStatechangeMom=rulesetConnStatechangeMom, ethernetMplsOoh=ethernetMplsOoh, connsyncOutofsyncCollisionMax=connsyncOutofsyncCollisionMax, l2tpPacketsVal=l2tpPacketsVal, drdlWaitingChildrenVal=drdlWaitingChildrenVal, ipv6ExtInvlMom=ipv6ExtInvlMom, packetprocessingBalancerDropsMom=packetprocessingBalancerDropsMom, ipfixExportedIpv4RecordsMax=ipfixExportedIpv4RecordsMax, pl2Trap=pl2Trap, ipv6Fragments=ipv6Fragments, tcpv6GoodputBytes=tcpv6GoodputBytes, rulesetSubscribersVal=rulesetSubscribersVal, lbShuntByteEthertypeIntVal=lbShuntByteEthertypeIntVal, bgpUpdatesVal=bgpUpdatesVal, drdlProp64FailVal=drdlProp64FailVal, l2tpcipv6PacketsMax=l2tpcipv6PacketsMax, tcpv6UntrackedPackets=tcpv6UntrackedPackets, shapingQueueAllocationsVal=shapingQueueAllocationsVal, tunnelDuplicatesMom=tunnelDuplicatesMom, interfaceFlowUpdMissed=interfaceFlowUpdMissed, gtpBytes=gtpBytes, systemMemFreeVal=systemMemFreeVal, ipv6ShuntProtoBytesVal=ipv6ShuntProtoBytesVal, shapingBorrowDequeues=shapingBorrowDequeues, rulesetDynipOversizedMom=rulesetDynipOversizedMom, packetprocessingLoadMax=packetprocessingLoadMax, lbNumFp=lbNumFp, tcpv4Cwr=tcpv4Cwr, shapingQueueAllocationsMom=shapingQueueAllocationsMom, ethernetUnicast=ethernetUnicast, l2tpchap6PacketsMax=l2tpchap6PacketsMax, connectionLruAllocsMom=connectionLruAllocsMom, shapingDequeuedOdirs=shapingDequeuedOdirs, liveviewPropArrayUsageVal=liveviewPropArrayUsageVal, pppoeTruncatedPacketsMom=pppoeTruncatedPacketsMom, shapingReloadDrops=shapingReloadDrops, packetprocessingPacketPoolSizeVal=packetprocessingPacketPoolSizeVal, tcpv6GoodputPacketsMax=tcpv6GoodputPacketsMax, lbTxDirectExtVal=lbTxDirectExtVal, teredoOrgHeadersMom=teredoOrgHeadersMom, liveviewHostnameAllocsVal=liveviewHostnameAllocsVal, grePptpPacketsVal=grePptpPacketsVal, shapingDropsMax=shapingDropsMax, ipv6ShuntAddressBytesVal=ipv6ShuntAddressBytesVal, rulesetRecalcTime=rulesetRecalcTime, tcpv4CwrMom=tcpv4CwrMom, tcpv4PacketAllocFailMom=tcpv4PacketAllocFailMom, rulesetDynipAddVal=rulesetDynipAddVal, bgpUpdatesMax=bgpUpdatesMax, ipv4FragmentReassFailMom=ipv4FragmentReassFailMom, bgpBalanceTimeMax=bgpBalanceTimeMax, greUnknownVersion=greUnknownVersion, connectionCreatedOutboundMom=connectionCreatedOutboundMom, gtpEchoPdpRspVal=gtpEchoPdpRspVal, divertHbRepSentMax=divertHbRepSentMax, lb=lb, lbBlacklistedPacketsMax=lbBlacklistedPacketsMax, tunnelKnownPktsMax=tunnelKnownPktsMax, tcpv6OosPacketsVal=tcpv6OosPacketsVal, PYSNMP_MODULE_ID=procera, rulesetPropChecks=rulesetPropChecks, plsdConnUpdates=plsdConnUpdates, rulesetConnStatechangeFlagsVal=rulesetConnStatechangeFlagsVal, plsdValueUpdatesConnsMax=plsdValueUpdatesConnsMax, ipfixExportedIpv6RecordsVal=ipfixExportedIpv6RecordsVal, connectionRefusedFullVal=connectionRefusedFullVal, dynamicnetobjectSqliteMemoryUsedMax=dynamicnetobjectSqliteMemoryUsedMax, ipv4FragmentedMom=ipv4FragmentedMom, lbShuntByteIpv4ProtoExtVal=lbShuntByteIpv4ProtoExtVal, rulesetCompilerReaperRecvBufMax=rulesetCompilerReaperRecvBufMax, ipv6ReassembledMax=ipv6ReassembledMax, liveviewPLSDBuf=liveviewPLSDBuf, lbShuntByteEthertypeExtVal=lbShuntByteEthertypeExtVal, connectionLruAllocsMax=connectionLruAllocsMax, tcpv4PacketAllocFailVal=tcpv4PacketAllocFailVal, liveviewPLSDBufVal=liveviewPLSDBufVal, dynamicnetobjectRemoveSucceeded=dynamicnetobjectRemoveSucceeded, ipfixExportedMsgsMax=ipfixExportedMsgsMax, pppoePaddedPackets=pppoePaddedPackets, ipv4PacketsMom=ipv4PacketsMom, ipv4EcnEct1=ipv4EcnEct1, pppoeBadversionPacketsMom=pppoeBadversionPacketsMom, lbShuntPktIpv6AddrExt=lbShuntPktIpv6AddrExt, rulesetNonexistentSubscriberVal=rulesetNonexistentSubscriberVal, dynamicnetobjectInsertPldbFailedVal=dynamicnetobjectInsertPldbFailedVal, lbShuntByteEomplsExtMom=lbShuntByteEomplsExtMom, dynnetobjs=dynnetobjs, pppoeIpv4PacketsMom=pppoeIpv4PacketsMom, fwDropsVal=fwDropsVal, systemHdSizeVal=systemHdSizeVal, drdlSliceStateFail=drdlSliceStateFail, interface=interface, ipfixExportedMsgs=ipfixExportedMsgs, plsdValueUpdatesBytesMom=plsdValueUpdatesBytesMom, plsdValueRejectPriorMom=plsdValueRejectPriorMom, tcpv4RetransmitsMom=tcpv4RetransmitsMom, connsyncBadAdler=connsyncBadAdler, rulesetConnStatechangeServiceMom=rulesetConnStatechangeServiceMom, tcpv6PacketAllocFailVal=tcpv6PacketAllocFailVal, packetprocessingUptimeVal=packetprocessingUptimeVal, connsyncDoubleSeenMom=connsyncDoubleSeenMom, tcpv6RejectedMom=tcpv6RejectedMom, tcpv6RefusedRuleset=tcpv6RefusedRuleset, ipv4ShuntAddressBytesMax=ipv4ShuntAddressBytesMax, connsyncSyncedVal=connsyncSyncedVal, rulesetShapingrulesVal=rulesetShapingrulesVal, rulesetRecalcVersionVal=rulesetRecalcVersionVal, tcpv6RefusedFilterMax=tcpv6RefusedFilterMax, ipv6FragmentOverlap=ipv6FragmentOverlap, connectionUnestablishedVal=connectionUnestablishedVal, rulesetRecalcBgpMom=rulesetRecalcBgpMom, interfaceFlowHostnameAllocFailMax=interfaceFlowHostnameAllocFailMax, divertHbLostMom=divertHbLostMom, greBytesMom=greBytesMom, ethernetShuntDot1qPacketsMax=ethernetShuntDot1qPacketsMax, rulesetBitmasksAvgMax=rulesetBitmasksAvgMax, bgpUpdates=bgpUpdates, shapingcounter=shapingcounter, tcpv4Packets=tcpv4Packets, dynamicnetobjectSqliteMemoryUsedVal=dynamicnetobjectSqliteMemoryUsedVal, greIpv6Packets=greIpv6Packets, tcpv4RefusedRulesetMax=tcpv4RefusedRulesetMax, dynamicnetobjectRemoveCalls=dynamicnetobjectRemoveCalls, lbShuntByteIpv6AddrExtMax=lbShuntByteIpv6AddrExtMax, shapingObjectCopiesVal=shapingObjectCopiesVal, tunnelGtpVal=tunnelGtpVal, shapingRecycleObjectsMax=shapingRecycleObjectsMax, dynamicnetobjectAddCallsMax=dynamicnetobjectAddCallsMax, shapingBrownHostDropsMom=shapingBrownHostDropsMom, connsyncUdpSnt=connsyncUdpSnt, packetprocessingBalancerDropsVal=packetprocessingBalancerDropsVal, lbShuntByteIpv4ProtoIntMax=lbShuntByteIpv4ProtoIntMax, greShortPacketsMom=greShortPacketsMom, l2tpchap6PacketsMom=l2tpchap6PacketsMom, liveviewHostnameAllocFail=liveviewHostnameAllocFail, ipv6FragnentTimeoutVal=ipv6FragnentTimeoutVal, rulesetBitmasksMax=rulesetBitmasksMax, plswTupdateVal=plswTupdateVal, systemSwapTotalVal=systemSwapTotalVal, connectionFailureShuntPackets=connectionFailureShuntPackets, shapingEnqueuedBytes=shapingEnqueuedBytes, tcpv4CorruptConnMax=tcpv4CorruptConnMax, divertHbRepSentVal=divertHbRepSentVal, plswSysdiagHdSizeVal=plswSysdiagHdSizeVal, plsdBwUsedVal=plsdBwUsedVal, shapingDequeuedBytesMom=shapingDequeuedBytesMom, tcpv6Rejected=tcpv6Rejected, tcpv4RefusedBroadcastMax=tcpv4RefusedBroadcastMax, plsdConnUpdatesFilteredVal=plsdConnUpdatesFilteredVal, packetprocessingDmaAllocs=packetprocessingDmaAllocs, shapingEcnMarksMom=shapingEcnMarksMom, ipv6ReassembledVal=ipv6ReassembledVal, tcpv4PacketsVal=tcpv4PacketsVal, interfaceFlowUpdMissedMom=interfaceFlowUpdMissedMom, packetprocessingNICRXDrops=packetprocessingNICRXDrops, ethernetShuntEthertypePacketsVal=ethernetShuntEthertypePacketsVal, ipv4EcnEct0Max=ipv4EcnEct0Max, ipv6RefusedShortMax=ipv6RefusedShortMax, bgpPrefixesMax=bgpPrefixesMax, liveviewHostCacheExhaustedMax=liveviewHostCacheExhaustedMax, greRouteFlagVal=greRouteFlagVal, qsyncIUpdates=qsyncIUpdates, connectionCreateAttemptsInboundVal=connectionCreateAttemptsInboundVal, dynamicnetobjectRemoveFailed=dynamicnetobjectRemoveFailed, tcpv4EmptyPacketsMom=tcpv4EmptyPacketsMom, dynamicnetobjectFailedInsertsVal=dynamicnetobjectFailedInsertsVal, packetprocessingTxDropsMom=packetprocessingTxDropsMom, drdlChildIterateMaxMax=drdlChildIterateMaxMax, drdlTaintFillPercentMax=drdlTaintFillPercentMax, tcpv6PacketAllocFailMom=tcpv6PacketAllocFailMom, tcpv6OutOfWindowPacketsVal=tcpv6OutOfWindowPacketsVal, connectionUnestablishedMom=connectionUnestablishedMom, shapingOutofpacketsDropsMax=shapingOutofpacketsDropsMax, tcpv4SimOpenMom=tcpv4SimOpenMom, systemMemTotalMax=systemMemTotalMax, shapingDropsPrio3=shapingDropsPrio3, divertOutOfHostsMax=divertOutOfHostsMax, lbShuntPktIpv6AddrExtVal=lbShuntPktIpv6AddrExtVal, drdlBuffersUsed=drdlBuffersUsed, drdlVsRangeStepsMax=drdlVsRangeStepsMax, rulesetReceivedMax=rulesetReceivedMax, drdlSliceStateUsedVal=drdlSliceStateUsedVal, shapingDropsPrio7=shapingDropsPrio7, rulesetServertreeSizeVal=rulesetServertreeSizeVal, tcpv6SynExistingMax=tcpv6SynExistingMax, plswDailysMax=plswDailysMax, shapingBrownConnDrops=shapingBrownConnDrops, ipfixExportedIpv4Records=ipfixExportedIpv4Records, plsdConnUpdatesFull=plsdConnUpdatesFull, dynamicnetobjectRemoveCallsVal=dynamicnetobjectRemoveCallsVal, tcpv4SegmentAllocFailMax=tcpv4SegmentAllocFailMax, connectionCreateAttemptsInboundMom=connectionCreateAttemptsInboundMom, gtpDeletePdpReqMom=gtpDeletePdpReqMom, systemSwapFreeVal=systemSwapFreeVal, lbRunningFpVal=lbRunningFpVal, shapingRulesSetCountMax=shapingRulesSetCountMax, greIpv4PacketsMax=greIpv4PacketsMax, liveviewUnaccountedPlsdInVal=liveviewUnaccountedPlsdInVal, liveviewUnaccountedPlsdOutVal=liveviewUnaccountedPlsdOutVal, qsyncESendUpdateEntriesVal=qsyncESendUpdateEntriesVal, qsyncIUpdatesUnknownObjectVal=qsyncIUpdatesUnknownObjectVal, fwLogs=fwLogs, rulesetConnStatechangeTtl=rulesetConnStatechangeTtl, ipv6FragmentTooNoisyVal=ipv6FragmentTooNoisyVal, connsyncOutofsyncCollision=connsyncOutofsyncCollision, ipfixExportedIpv6Records=ipfixExportedIpv6Records, dynamicnetobjectPendingAddsVal=dynamicnetobjectPendingAddsVal, greIpv4PacketsVal=greIpv4PacketsVal, lbRxBytesInt=lbRxBytesInt, ipfixExportedIpv4SetsMax=ipfixExportedIpv4SetsMax, firewall=firewall, ipv4Fragments=ipv4Fragments, connectionFailureShuntPacketsVal=connectionFailureShuntPacketsVal, lbShuntPktEomplsIntMax=lbShuntPktEomplsIntMax, packetprocessingTxDrops=packetprocessingTxDrops, lbRunningFp=lbRunningFp, tcpv4DequeuedSegmentsMax=tcpv4DequeuedSegmentsMax, ipv4ShuntAddressPackets=ipv4ShuntAddressPackets, connectionRefusedFullMax=connectionRefusedFullMax, greUnknownTypeMom=greUnknownTypeMom, shapingActiveQueuesVal=shapingActiveQueuesVal, ipv6BytesMax=ipv6BytesMax, teredoBytesMom=teredoBytesMom, connsyncBadAdlerMom=connsyncBadAdlerMom, shapingQueueSizeMax=shapingQueueSizeMax, tcpv4OosPackets=tcpv4OosPackets, gtpUpdatePdpReq=gtpUpdatePdpReq, lbTxFpExtMax=lbTxFpExtMax, tcpv6UntrackedBytesMax=tcpv6UntrackedBytesMax, connectionUpdates=connectionUpdates, ipfixConnUpdatesVal=ipfixConnUpdatesVal, drdlVsRegexStepsMax=drdlVsRegexStepsMax, qsyncENumPeersMax=qsyncENumPeersMax, ipv4UnfragmentedMom=ipv4UnfragmentedMom, tcpv4LostsyncMax=tcpv4LostsyncMax, fwLogsVal=fwLogsVal, rulesetOutdatedServiceMom=rulesetOutdatedServiceMom, ipv6FragInFragMax=ipv6FragInFragMax, connsyncSyncedMax=connsyncSyncedMax, liveviewPLSDClients=liveviewPLSDClients, lbShuntByteEthertypeIntMom=lbShuntByteEthertypeIntMom, plswTimeGraph=plswTimeGraph, rulesetBadAspathMax=rulesetBadAspathMax, qsyncIIgnoredOOO=qsyncIIgnoredOOO, l2tp=l2tp, bgpPaths=bgpPaths, tcpv4Lostsync=tcpv4Lostsync)
mibBuilder.exportSymbols("PACKETLOGIC-MIB", tcpv4OosPacketsMax=tcpv4OosPacketsMax, lbShuntPktIpv4ProtoExtMom=lbShuntPktIpv4ProtoExtMom, tcpv6Bytes=tcpv6Bytes, connsyncBadTypeMom=connsyncBadTypeMom, shapingDirect=shapingDirect, rulesetSubscriberAllocFailMom=rulesetSubscriberAllocFailMom, tunnel=tunnel, shapingDropsPrio9Max=shapingDropsPrio9Max, plsdVmsizeVal=plsdVmsizeVal, lbActiveFpMax=lbActiveFpMax, ipv6ExtRouteVal=ipv6ExtRouteVal, rulesetStatisticsRuleOverflowMom=rulesetStatisticsRuleOverflowMom, shapingcounterClientsMax=shapingcounterClientsMax, shapingDequeuedBytesMax=shapingDequeuedBytesMax, ipv6FragmentOverlapVal=ipv6FragmentOverlapVal, tcpv6CorruptConnVal=tcpv6CorruptConnVal, tcpv6RefusedShortVal=tcpv6RefusedShortVal, ipv6ExtDestMom=ipv6ExtDestMom, systemHdUsageMax=systemHdUsageMax, tunnelEspMax=tunnelEspMax, tcpv4OosBytesMax=tcpv4OosBytesMax, greFfffPackets=greFfffPackets, lbShuntPktEthertypeIntMax=lbShuntPktEthertypeIntMax, rulesetRecalcUnknownMom=rulesetRecalcUnknownMom, connectionCreateAttemptsOutboundVal=connectionCreateAttemptsOutboundVal, bgpSendTime=bgpSendTime, packetprocessingOverLoadMax=packetprocessingOverLoadMax, gtpCreatePdpRspMax=gtpCreatePdpRspMax, packetprocessingRxDrops=packetprocessingRxDrops, shapingcounterUpdatesInteresting=shapingcounterUpdatesInteresting, fwMidconnRewriteMax=fwMidconnRewriteMax, shapingcounterUpdatesVal=shapingcounterUpdatesVal, qsyncESendUpdateEntries=qsyncESendUpdateEntries, divertBypassPackets=divertBypassPackets, plswSystemHdUsageMax=plswSystemHdUsageMax, ipv4RefusedFilterMom=ipv4RefusedFilterMom, plsdBwUsed=plsdBwUsed, plsdConnlogDumptimeRemainingVal=plsdConnlogDumptimeRemainingVal, tcpv4SynExistingMax=tcpv4SynExistingMax, qsyncIReaperSplitsCreatedMax=qsyncIReaperSplitsCreatedMax, plswValues=plswValues, packetprocessingPushbackPacketsMom=packetprocessingPushbackPacketsMom, divertHbReqRecvVal=divertHbReqRecvVal, shapingDropsPrio6Mom=shapingDropsPrio6Mom, rulesetLastUpdate=rulesetLastUpdate, tcpv4RefusedOffsetVal=tcpv4RefusedOffsetVal, qsyncIAdjustmentsSentMax=qsyncIAdjustmentsSentMax, lbShuntPktIpv4AddrExt=lbShuntPktIpv4AddrExt, rulesetClienttreeSizeMax=rulesetClienttreeSizeMax, divertEgressPacketsMax=divertEgressPacketsMax, grePppUnknownPacketsVal=grePppUnknownPacketsVal, ipv4ShuntProtoPacketsMax=ipv4ShuntProtoPacketsMax, connsyncOutofsync=connsyncOutofsync, tcpv4OutOfWindowPacketsMom=tcpv4OutOfWindowPacketsMom, gtpUnknownMax=gtpUnknownMax, shapingDropsPrio5=shapingDropsPrio5, tcpv4CwrMax=tcpv4CwrMax, shapingDequeuedMom=shapingDequeuedMom, liveviewUnaccountedPlsdInMax=liveviewUnaccountedPlsdInMax, connectionFailureShuntBytesMax=connectionFailureShuntBytesMax, l2tpIpv4PacketsVal=l2tpIpv4PacketsVal, gtpCreatePdpReqMax=gtpCreatePdpReqMax, tcpv6GoodputPacketsMom=tcpv6GoodputPacketsMom, plsdConnlogDumptimeVal=plsdConnlogDumptimeVal, shapingDirectBytesPrio0Max=shapingDirectBytesPrio0Max, liveviewDrdlRevisionMax=liveviewDrdlRevisionMax, dynamicnetobjectAddSucceededMax=dynamicnetobjectAddSucceededMax, gtpDeletePdpRsp=gtpDeletePdpRsp, connsyncUdpRcvMom=connsyncUdpRcvMom, connectionEstablished=connectionEstablished, qsyncIIgnoredGenWrap=qsyncIIgnoredGenWrap, rulesetDynipNum=rulesetDynipNum, plswDatasetEndVal=plswDatasetEndVal, plsdTimeConnectedVal=plsdTimeConnectedVal, lbTxDropsInt=lbTxDropsInt, ethernetHBResetDropsVal=ethernetHBResetDropsVal, shapingRuleOverflowMax=shapingRuleOverflowMax, greBytes=greBytes, ipv4RefusedOof=ipv4RefusedOof, connsyncBadVerMax=connsyncBadVerMax, plswColls=plswColls, packetlogic2=packetlogic2, tcpv6BytesVal=tcpv6BytesVal, plswTimeGlobalVal=plswTimeGlobalVal, interfaceFlowNewMissedMax=interfaceFlowNewMissedMax, plsdConnlogIncompleteVal=plsdConnlogIncompleteVal, divertIngressBytes=divertIngressBytes, ipv4FragmentedIdsMax=ipv4FragmentedIdsMax, rulesetOutdatedServiceMax=rulesetOutdatedServiceMax, qsyncESendUpdateEntriesMax=qsyncESendUpdateEntriesMax, connsyncSynced=connsyncSynced, connectionLookupsVal=connectionLookupsVal, ipv6FragInFrag=ipv6FragInFrag)
