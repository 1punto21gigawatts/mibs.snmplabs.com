#
# PySNMP MIB module NETBOTZ-PRD-CRL-MIB2TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETBOTZ-PRD-CRL-MIB2TRAP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
netBotz_ismetric, = mibBuilder.importSymbols("NETBOTZ-DEVICE-MIB", "netBotz-ismetric")
netBotz_prd_crl_mib2if_opstatus, netBotz_prd_crl_mib2_uptime, netBotz_prd_crl_mib2_ping, netBotz_prd_crl_mib2_snmpstatus = mibBuilder.importSymbols("NETBOTZ-PRD-CRL-MIB2-MIB", "netBotz-prd-crl-mib2if-opstatus", "netBotz-prd-crl-mib2-uptime", "netBotz-prd-crl-mib2-ping", "netBotz-prd-crl-mib2-snmpstatus")
netBotz_prd_crltrap, = mibBuilder.importSymbols("NETBOTZ-PRODUCTS-MIB", "netBotz-prd-crltrap")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, iso, TimeTicks, NotificationType, Integer32, ModuleIdentity, MibIdentifier, Unsigned32, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "iso", "TimeTicks", "NotificationType", "Integer32", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netBotz_prd_crl_trap_index = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 20), Integer32()).setLabel("netBotz-prd-crl-trap-index").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_index.setReference('NetBotz Last Trap ID')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_index.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_index.setDescription('The ID of the crawler which sent the last trap.')
netBotz_prd_crl_trap_address = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 21), IpAddress()).setLabel("netBotz-prd-crl-trap-address").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_address.setReference('NetBotz Last Trap Address')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_address.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_address.setDescription('The IP address of the last trap.')
netBotz_prd_crl_trap_oid = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 22), ObjectIdentifier()).setLabel("netBotz-prd-crl-trap-oid").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_oid.setReference('NetBotz Target Trap Attribute OID')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_oid.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_oid.setDescription('The object id of the attribute on the target device which is the concern of the last trap.')
netBotz_prd_crl_trap_botoid = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 23), ObjectIdentifier()).setLabel("netBotz-prd-crl-trap-botoid").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_botoid.setReference('NetBotz Botz Trap Attribute OID')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_botoid.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_botoid.setDescription('The object id of the attribute on the NetBotz device which is the concern of the last trap.')
netBotz_prd_crl_trap_value = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 24), Integer32()).setLabel("netBotz-prd-crl-trap-value").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_value.setReference('NetBotz Trap Attribute Value')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_value.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_value.setDescription('The value of the attribute associated with the last trap.')
netBotz_prd_crl_trap_date = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 25), Integer32()).setLabel("netBotz-prd-crl-trap-date").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_date.setReference('NetBotz Trap Date')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_date.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_date.setDescription('The date and time of a specific trap. This field contains the number of seconds elapsed since midnight (00:00:00), January 1, 1970')
netBotz_prd_crl_trap_attrib = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 26), Integer32()).setLabel("netBotz-prd-crl-trap-attrib").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_attrib.setReference('NetBotz Trap Attribute ID Number')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_attrib.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_attrib.setDescription('The identification number of the attribute in error')
netBotz_prd_crl_trap_desc = MibScalar((1, 3, 6, 1, 4, 1, 5528, 30, 21, 27), DisplayString()).setLabel("netBotz-prd-crl-trap-desc").setMaxAccess("readonly")
if mibBuilder.loadTexts: netBotz_prd_crl_trap_desc.setReference('NetBotz Trap Attribute Description')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_desc.setStatus('mandatory')
if mibBuilder.loadTexts: netBotz_prd_crl_trap_desc.setDescription('Description or name of the attribute in error')
netBotz_prd_crl_ping_offline_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 1, 3) + (0,4)).setLabel("netBotz-prd-crl-ping-offline-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_ping_offline_trap.setDescription('Netbotz Ping Trap. This trap indicates that replies to a set of pings were not received from a monitored IP address.')
if mibBuilder.loadTexts: netBotz_prd_crl_ping_offline_trap.setReference('NetBotz Ping Offline Trap')
netBotz_prd_crl_ping_online_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 1, 3) + (0,5)).setLabel("netBotz-prd-crl-ping-online-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_ping_online_trap.setDescription('Netbotz Ping Trap. This trap indicates that replies to a set of pings were received from a monitored IP address after a period when no replies had been received.')
if mibBuilder.loadTexts: netBotz_prd_crl_ping_online_trap.setReference('NetBotz Ping Online Trap')
netBotz_prd_crl_snmp_offline_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 1, 9) + (0,4)).setLabel("netBotz-prd-crl-snmp-offline-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_snmp_offline_trap.setDescription('Netbotz SNMP Offline Trap. This trap indicates that an SNMP request was not possible on an IP address.')
if mibBuilder.loadTexts: netBotz_prd_crl_snmp_offline_trap.setReference('NetBotz SNMP Offline Trap')
netBotz_prd_crl_snmp_online_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 1, 9) + (0,5)).setLabel("netBotz-prd-crl-snmp-online-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_snmp_online_trap.setDescription('Netbotz SNMP Online Trap. This trap indicates that an SNMP request succeeded on an IP address where it had previously failed.')
if mibBuilder.loadTexts: netBotz_prd_crl_snmp_online_trap.setReference('NetBotz SNMP Online Trap')
netBotz_prd_crl_uptime_online_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 1, 8) + (0,5)).setLabel("netBotz-prd-crl-uptime-online-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_uptime_online_trap.setDescription('Netbotz Uptime Trap. This trap indicates that a device restart has been detected due to the uptime of the device being reported as less than the previously reported reading.')
if mibBuilder.loadTexts: netBotz_prd_crl_uptime_online_trap.setReference('NetBotz Ping Uptime Trap')
netBotz_prd_crl_opstatus_offline_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 2, 6) + (0,4)).setLabel("netBotz-prd-crl-opstatus-offline-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_offline_trap.setDescription('Netbotz Interface Offline Trap. This trap indicates that an interface on a device did not respond to an SNMP query on the ifAdminStatus or ifOperStatus objects.')
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_offline_trap.setReference('NetBotz Opstatus Offline Trap')
netBotz_prd_crl_opstatus_mismatch_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 2, 6) + (0,1)).setLabel("netBotz-prd-crl-opstatus-mismatch-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_mismatch_trap.setDescription('Netbotz Interface Status Mismatch Trap. This trap indicates that the operational status of a device interface does not match the administrative status.')
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_mismatch_trap.setReference('NetBotz Interface Mismatch Trap')
netBotz_prd_crl_opstatus_match_trap = NotificationType((1, 3, 6, 1, 4, 1, 5528, 30, 20, 5528, 2, 6) + (0,2)).setLabel("netBotz-prd-crl-opstatus-match-trap").setObjects(("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_index"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_address"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_oid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_botoid"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_value"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_date"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_attrib"), ("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", "netBotz_prd_crl_trap_desc"), ("NETBOTZ-DEVICE-MIB", "netBotz_ismetric"))
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_match_trap.setDescription('Netbotz Interface Status Match Trap. This trap indicates that the operational status of a device interface now matches the administrative status. This trap indicates a transition from a state in which the administrative and operational status did not match.')
if mibBuilder.loadTexts: netBotz_prd_crl_opstatus_match_trap.setReference('NetBotz Interface Match Trap')
mibBuilder.exportSymbols("NETBOTZ-PRD-CRL-MIB2TRAP-MIB", netBotz_prd_crl_trap_index=netBotz_prd_crl_trap_index, netBotz_prd_crl_trap_address=netBotz_prd_crl_trap_address, netBotz_prd_crl_opstatus_offline_trap=netBotz_prd_crl_opstatus_offline_trap, netBotz_prd_crl_uptime_online_trap=netBotz_prd_crl_uptime_online_trap, netBotz_prd_crl_trap_oid=netBotz_prd_crl_trap_oid, netBotz_prd_crl_ping_online_trap=netBotz_prd_crl_ping_online_trap, netBotz_prd_crl_trap_desc=netBotz_prd_crl_trap_desc, netBotz_prd_crl_trap_value=netBotz_prd_crl_trap_value, netBotz_prd_crl_opstatus_mismatch_trap=netBotz_prd_crl_opstatus_mismatch_trap, netBotz_prd_crl_opstatus_match_trap=netBotz_prd_crl_opstatus_match_trap, netBotz_prd_crl_trap_attrib=netBotz_prd_crl_trap_attrib, netBotz_prd_crl_trap_botoid=netBotz_prd_crl_trap_botoid, netBotz_prd_crl_ping_offline_trap=netBotz_prd_crl_ping_offline_trap, netBotz_prd_crl_snmp_online_trap=netBotz_prd_crl_snmp_online_trap, netBotz_prd_crl_trap_date=netBotz_prd_crl_trap_date, netBotz_prd_crl_snmp_offline_trap=netBotz_prd_crl_snmp_offline_trap)
