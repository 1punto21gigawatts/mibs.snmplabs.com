#
# PySNMP MIB module Omnis-Management-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Omnis-Management-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:35:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Integer32, Gauge32, ObjectIdentity, iso, Unsigned32, ModuleIdentity, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, enterprises, MibIdentifier, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "Gauge32", "ObjectIdentity", "iso", "Unsigned32", "ModuleIdentity", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "enterprises", "MibIdentifier", "NotificationType", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniOmnis = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31))
sniOmnisGlobalData = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 1))
sniOmnisSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 2))
sniOmnisParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 3))
sniOmnisTerminals = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 4))
sniOmnisTerminalInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 5))
sniOmnisPartners = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 6))
sniOmnisPartnerInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 7))
sniOmnisGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 8))
sniOmnisHardCopy = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 9))
sniOmnisHardCopyPIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 10))
sniOmnisHardCopyTIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 11))
sniOmnisHardCopyCreate = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 12))
sniOmnisOmnis = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 13))
sniOmnisMux = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 14))
sniOmnisExits = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 15))
sniOmnisExitPIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 16))
sniOmnisExitTIDs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 17))
sniOmnisExitCreate = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 18))
sniOmnisTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 19))
sniOmnisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 20))
sniOmnisUserdefinedTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 21))
omnisGlobalDataSubagentVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGlobalDataSubagentVersion.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataSubagentVersion.setDescription('Version of OMNIS-Subagent')
omnisGlobalDataTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGlobalDataTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataTabNum.setDescription('The total number of OMNISes')
omnisGlobalDataActID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisGlobalDataActID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataActID.setDescription('The ID of the current OMNIS')
omnisGlobalDataActName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisGlobalDataActName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataActName.setDescription('The name of the current OMNIS')
omnisGlobalDataTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7), )
if mibBuilder.loadTexts: omnisGlobalDataTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataTable.setDescription('The OMNIS GlobalData-Table')
omnisGlobalDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisGlobalDataOmnID"))
if mibBuilder.loadTexts: omnisGlobalDataEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataEntry.setDescription('An entry in the table')
omnisGlobalDataOmnID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGlobalDataOmnID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataOmnID.setDescription('OMNIS ID')
omnisGlobalDataVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGlobalDataVersion.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataVersion.setDescription('OMNIS version')
omnisGlobalDataOmnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGlobalDataOmnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataOmnName.setDescription('OMNIS name')
omnisGlobalDataState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("close", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisGlobalDataState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGlobalDataState.setDescription('OMNIS state')
omnisSettingsAppName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisSettingsAppName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsAppName.setDescription('The NEA name of the OMNIS application')
omnisSettingsAppNameISO = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisSettingsAppNameISO.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsAppNameISO.setDescription('The ISO name of the OMNIS application')
omnisSettingsNumPartners = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisSettingsNumPartners.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsNumPartners.setDescription('The actual number of partners ')
omnisSettingsNumTerminals = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisSettingsNumTerminals.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsNumTerminals.setDescription('The actual number of terminals')
omnisSettingsDSTMax = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsDSTMax.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsDSTMax.setDescription('The maximal number of DSTs ')
omnisSettingsPTNMax = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsPTNMax.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsPTNMax.setDescription('The maximal number of partners')
omnisSettingsPACMax = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsPACMax.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsPACMax.setDescription('The maximal number of partners for one DST')
omnisSettingsState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("open", 1), ("close", 2), ("end", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisSettingsState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsState.setDescription('Subagent connected ')
omnisSettingsAPASS = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsAPASS.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsAPASS.setDescription('Administrator password ')
omnisSettingsHOLD = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("auto", 4), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsHOLD.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsHOLD.setDescription('Hold the connection')
omnisSettingsHcyForm = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsHcyForm.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsHcyForm.setDescription('formular of printer')
omnisSettingsHCopy = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsHCopy.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsHCopy.setDescription('Route the output to a printer')
omnisSettingsLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsLogging.setDescription('Protocoling in logging file')
omnisSettingsChangeLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99))).clone(namedValues=NamedValues(("change", 1), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsChangeLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsChangeLogging.setDescription('Switch to a new logging file')
omnisSettingsACK = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsACK.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsACK.setDescription('Acknowlegement required')
omnisSettingsMTAB = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsMTAB.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsMTAB.setDescription('The report table')
omnisSettingsEXIT = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsEXIT.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsEXIT.setDescription('The address code of EXIT')
omnisSettingsOpncon = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("std", 1), ("free", 2), ("dcl", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsOpncon.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsOpncon.setDescription('The connect permission')
omnisSettingsBreakKey = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 98), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsBreakKey.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsBreakKey.setDescription('The K-key to produce a break on a $DIALOG-Parnter')
omnisSettingsCallKey = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 98), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsCallKey.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsCallKey.setDescription('The K-key for calling')
omnisSettingsCallInf = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsCallInf.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsCallInf.setDescription('Notify the call-state-information')
omnisSettingsPac = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("line", 1), ("prefix", 2), ("no", 3), ("std", 4), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsPac.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsPac.setDescription('The address code of the partner')
omnisSettingsInputLog = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("rec", 1), ("send", 2), ("both", 3), ("std", 4), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsInputLog.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsInputLog.setDescription('The protocol for the terminal input')
omnisSettingsOutputLog = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("rec", 1), ("send", 2), ("both", 3), ("std", 4), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsOutputLog.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsOutputLog.setDescription('The protocol for the terminal output')
omnisSettingsLine25 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("omnis", 4), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsLine25.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsLine25.setDescription('Use the 25. display-line')
omnisSettingsDisMod = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("system", 1), ("omnis", 2), ("mixed", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsDisMod.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsDisMod.setDescription('The display mode')
omnisSettingsKPAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 98), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsKPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsKPAC.setDescription('K-key to switch in command mode/to change the partner')
omnisSettingsExitPri = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("par-opt-set", 1), ("set-par-opt", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsExitPri.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsExitPri.setDescription('The priority for SET,PARAMETER and OPTION by EXIT')
omnisSettingsReply = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("restricted", 1), ("all", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsReply.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsReply.setDescription(' Route Data to UCON-application')
omnisSettingsExitAuth = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("all", 1), ("adm", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsExitAuth.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsExitAuth.setDescription('The authorization for Exit-command')
omnisSettingsLoggPri = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("par-opt-set", 1), ("set-par-opt", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsLoggPri.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsLoggPri.setDescription('The priority for SET,PARAMETER and OPTION by Logging')
omnisSettingsAudit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsAudit.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsAudit.setDescription('OMNIS-Audit')
omnisSettingsMDefAuth = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("all", 1), ("adm", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsMDefAuth.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsMDefAuth.setDescription('The authorization for MDEF-command')
omnisSettingsHoldPri = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("set-opt", 1), ("opt-set", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsHoldPri.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsHoldPri.setDescription('The priority for SET and OPTION by HOLD')
omnisSettingsInsave = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("f1", 21), ("f2", 22), ("f3", 23), ("f4", 24), ("f5", 25), ("f6", 26), ("f7", 27), ("f8", 28), ("f9", 29), ("f10", 30), ("f11", 31), ("f12", 32), ("f13", 33), ("f14", 34), ("f15", 35), ("f16", 36), ("f17", 37), ("f18", 38), ("f19", 39), ("f20", 40), ("f21", 41), ("f22", 42), ("f23", 43), ("f24", 44), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsInsave.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsInsave.setDescription('The saved key')
omnisSettingsOpnStart = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsOpnStart.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsOpnStart.setDescription('Start-sequence permited')
omnisSettingsExclPartner = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsExclPartner.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsExclPartner.setDescription('The exclusive partner')
omnisSettingsSave = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("pkey", 1), ("screen", 2), ("all", 3), ("no", 4), ("std", 5), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsSave.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsSave.setDescription('Saved after disconnect')
omnisSettingsMessageALL = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsMessageALL.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsMessageALL.setDescription('Message to all OMNIS users')
omnisSettingsMessageADM = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsMessageADM.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsMessageADM.setDescription('Message to OMNIS administrator')
omnisSettingsEnd = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99))).clone(namedValues=NamedValues(("end", 1), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsEnd.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsEnd.setDescription('End OMNIS-Session')
omnisSettingsEndPassw = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 2, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisSettingsEndPassw.setStatus('mandatory')
if mibBuilder.loadTexts: omnisSettingsEndPassw.setDescription('OMNIS-Password for END Command')
omnisParametersAppName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersAppName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersAppName.setDescription('The name of the OMNIS application')
omnisParametersAppNameISO = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersAppNameISO.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersAppNameISO.setDescription('The ISO name of the OMNIS application')
omnisParametersPrefix = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersPrefix.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersPrefix.setDescription('Prefix of standby application ')
omnisParametersProName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersProName.setDescription('Processor name')
omnisParametersVirtProName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersVirtProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersVirtProName.setDescription('The virtual processor name')
omnisParametersLoggingFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersLoggingFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersLoggingFile.setDescription('The name of logging file ')
omnisParametersStartupFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersStartupFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersStartupFile.setDescription('The name of startup file ')
omnisParametersConfigFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersConfigFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersConfigFile.setDescription('The name of configuration file ')
omnisParametersConfUpdate = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("start", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersConfUpdate.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersConfUpdate.setDescription('The object for CONFUPDATE command ( write only )')
omnisParametersModulFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersModulFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersModulFile.setDescription('The name of module file')
omnisParametersBulletinFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersBulletinFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersBulletinFile.setDescription('The name of bulletin file')
omnisParametersTextFile = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersTextFile.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersTextFile.setDescription('The name of text file ')
omnisParametersPagePool = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersPagePool.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersPagePool.setDescription('The name of PagePool File ')
omnisParametersIOAreaLength = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersIOAreaLength.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersIOAreaLength.setDescription('Length of IO Area ')
omnisParametersTWorkLength = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersTWorkLength.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersTWorkLength.setDescription('Length of Terminal Work Area ')
omnisParametersPWorkLength = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersPWorkLength.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersPWorkLength.setDescription('Length of Partner Work Area ')
omnisParametersTextKeyLength = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersTextKeyLength.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersTextKeyLength.setDescription('Length of textkey ')
omnisParametersSecurityLevel = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("high", 1), ("medium", 2), ("low", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersSecurityLevel.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersSecurityLevel.setDescription('The security level')
omnisParametersDCAMIntVers = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersDCAMIntVers.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersDCAMIntVers.setDescription('The version of DCAM Interface')
omnisParametersVTSUBVers = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersVTSUBVers.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersVTSUBVers.setDescription('The version of local vtsu-b')
omnisParametersVTSUCBVers = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisParametersVTSUCBVers.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersVTSUCBVers.setDescription('The version of local vtsucb ')
omnisParametersCMD = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersCMD.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersCMD.setDescription('BS2000 command for OMNIS task ')
omnisParametersDump = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99))).clone(namedValues=NamedValues(("start", 1), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersDump.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersDump.setDescription('/DUMP command ')
omnisParametersDumpMsgNr = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersDumpMsgNr.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersDumpMsgNr.setDescription('OMNIS message number ')
omnisParametersDumpInsert = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersDumpInsert.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersDumpInsert.setDescription('/DUMP command ')
omnisParametersDumpInsertNr = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 3, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisParametersDumpInsertNr.setStatus('mandatory')
if mibBuilder.loadTexts: omnisParametersDumpInsertNr.setDescription('Number of Insert ')
omnisTerminalsStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("activ", 2), ("hold", 3), ("inactiv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTerminalsStatus.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsStatus.setDescription('State-Flag for restriction in Show Table')
omnisTerminalsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsTabNum.setDescription('The number of entries in the table omnisTerminalsTable')
omnisTerminalsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3), )
if mibBuilder.loadTexts: omnisTerminalsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsTable.setDescription('The OMNIS terminals table')
omnisTerminalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisTerminalsTID"))
if mibBuilder.loadTexts: omnisTerminalsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsEntry.setDescription('An entry in the table')
omnisTerminalsTID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTerminalsTID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsTID.setDescription('Terminal ID ')
omnisTerminalsPtnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsPtnName.setDescription('Partner name')
omnisTerminalsProName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsProName.setDescription('Processor name')
omnisTerminalsTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("term", 1), ("appl", 2), ("skp", 3), ("cons", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsTyp.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsTyp.setDescription('Terminal type')
omnisTerminalsState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 99))).clone(namedValues=NamedValues(("decl", 1), ("opn", 2), ("act", 3), ("los", 4), ("cls", 5), ("hold", 6), ("inact", 7), ("cancel", 8), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTerminalsState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsState.setDescription('Terminal state / value cancel only for write ')
omnisTerminalsRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("ind", 1), ("dir", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsRoute.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsRoute.setDescription('Route')
omnisTerminalsKPAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsKPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsKPAC.setDescription('K-key to switch in command mode/to change the partner')
omnisTerminalsUser = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalsUser.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsUser.setDescription('User')
omnisTerminalsMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 4, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTerminalsMessage.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalsMessage.setDescription('Message to one TID (only for write)')
omnisTerminalInfoTID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTerminalInfoTID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoTID.setDescription('Terminal ID')
omnisTerminalInfoPtnName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoPtnName.setDescription('Partner name')
omnisTerminalInfoProName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoProName.setDescription('Processor Name')
omnisTerminalInfoTyp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("term", 1), ("appl", 2), ("skp", 3), ("cons", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoTyp.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoTyp.setDescription('Terminal type')
omnisTerminalInfoState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("decl", 1), ("opn", 2), ("act", 3), ("los", 4), ("cls", 5), ("hold", 6), ("inact", 7), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoState.setDescription('Terminal state')
omnisTerminalInfoRoute = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("ind", 1), ("dir", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoRoute.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoRoute.setDescription('Route')
omnisTerminalInfoKPAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoKPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoKPAC.setDescription('K-key to switch in command mode/to change the partner')
omnisTerminalInfoUser = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoUser.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoUser.setDescription('User')
omnisTerminalInfoPAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("no", 1), ("line", 2), ("prefix", 3), ("std", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoPAC.setDescription('The type of display output for PAC')
omnisTerminalInfoADM = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoADM.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoADM.setDescription('Administration permited')
omnisTerminalInfoOPass = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoOPass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoOPass.setDescription('The password for OCCUPY command')
omnisTerminalInfoMTAB = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoMTAB.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoMTAB.setDescription('The repoprt table')
omnisTerminalInfoExit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoExit.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoExit.setDescription('The address code of EXIT')
omnisTerminalInfoHold = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("auto", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoHold.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoHold.setDescription('Hold the connection')
omnisTerminalInfoChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoChange.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoChange.setDescription('CHANGELOG permited')
omnisTerminalInfoHcopy = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoHcopy.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoHcopy.setDescription('The hardcopy printer')
omnisTerminalInfoAck = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoAck.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoAck.setDescription('Acknowlegement required')
omnisTerminalInfoListening = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoListening.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoListening.setDescription('Another listening terminal')
omnisTerminalInfoColour = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("blue", 1), ("cyan", 2), ("green", 3), ("yellow", 4), ("magenta", 5), ("red", 6), ("white", 7), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoColour.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoColour.setDescription('The display colour')
omnisTerminalInfoLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoLogging.setDescription('Protocoling in logging file')
omnisTerminalInfoBerID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoBerID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoBerID.setDescription(' Password/permission in SKP generated')
omnisTerminalInfoDeclared = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoDeclared.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoDeclared.setDescription('Declared')
omnisTerminalInfoBreakKey = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoBreakKey.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoBreakKey.setDescription('The K-key to produce a break on a $DIALOG-Parnter')
omnisTerminalInfoCallKey = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoCallKey.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoCallKey.setDescription('The K-key for calling')
omnisTerminalInfoCallInf = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoCallInf.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoCallInf.setDescription('Notify the call-state-information')
omnisTerminalInfoDisMod = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("std", 1), ("system", 2), ("omnis", 3), ("mixed", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoDisMod.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoDisMod.setDescription('Display mode')
omnisTerminalInfoConnect = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("logon", 1), ("start", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoConnect.setDescription('The state of connection')
omnisTerminalInfoOpncon = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("std", 1), ("free", 2), ("dcl", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoOpncon.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoOpncon.setDescription('The connect permission')
omnisTerminalInfoPacAnz = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoPacAnz.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoPacAnz.setDescription('Number of activ partners ')
omnisTerminalInfoInputLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("std", 1), ("both", 2), ("rec", 3), ("send", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoInputLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoInputLogging.setDescription('The protocol for the terminal input')
omnisTerminalInfoOutputLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("std", 1), ("both", 2), ("rec", 3), ("send", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoOutputLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoOutputLogging.setDescription('The protocol for the terminal output')
omnisTerminalInfoAutoLogoff = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("std", 1), ("yes", 2), ("no", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoAutoLogoff.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoAutoLogoff.setDescription('Automatic logoff')
omnisTerminalInfoLine25 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("omnis", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoLine25.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoLine25.setDescription('Use the 25. display-line')
omnisTerminalExclPartner = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalExclPartner.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalExclPartner.setDescription('The exclusive partner')
omnisTerminalInfoSave = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("std", 1), ("screen", 2), ("pkey", 3), ("all", 4), ("no", 5), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoSave.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoSave.setDescription('Saved after disconnect')
omnisTerminalInfoReply = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("restricted", 1), ("all", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoReply.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoReply.setDescription(' Route Data to UCON-application')
omnisTerminalInfoUserProt = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("no", 1), ("omnis", 2), ("vtsucb", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoUserProt.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoUserProt.setDescription('The user protocol')
omnisTerminalInfoTestmode = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoTestmode.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoTestmode.setDescription('The test mode')
omnisTerminalInfoInsave = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("f1", 21), ("f2", 22), ("f3", 23), ("f4", 24), ("f5", 25), ("f6", 26), ("f7", 27), ("f8", 28), ("f9", 29), ("f10", 30), ("f11", 31), ("f12", 32), ("f13", 33), ("f14", 34), ("f15", 35), ("f16", 36), ("f17", 37), ("f18", 38), ("f19", 39), ("f20", 40), ("f21", 41), ("f22", 42), ("f23", 43), ("f24", 44), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoInsave.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoInsave.setDescription('The saved key')
omnisTerminalInfoSNMP = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoSNMP.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoSNMP.setDescription('SNMP-terminal controlling')
omnisTerminalInfoTransProt = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoTransProt.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoTransProt.setDescription('The transport protocol ')
omnisTerminalInfoHcyForm = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 5, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTerminalInfoHcyForm.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTerminalInfoHcyForm.setDescription('formular of printer')
omnisPartnerStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("activ", 2), ("hold", 3), ("inactiv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisPartnerStatus.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerStatus.setDescription('State-Flag for restriction in Show Table')
omnisPartnerTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerTabNum.setDescription('The number of entries in the table omnisPartnerTable')
omnisPartnerSelectTID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisPartnerSelectTID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerSelectTID.setDescription('The Terminal ID the following table is reduced to')
omnisPartnerTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4), )
if mibBuilder.loadTexts: omnisPartnerTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerTable.setDescription('The OMNIS partner table')
omnisPartnerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisPartnerPID"))
if mibBuilder.loadTexts: omnisPartnerEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerEntry.setDescription('An entry in the table')
omnisPartnerPID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisPartnerPID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerPID.setDescription('Partner ID ')
omnisPartnerPAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerPAC.setDescription('Partner address code')
omnisPartnerPtnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerPtnName.setDescription('Partner name')
omnisPartnerProName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerProName.setDescription('Processor name')
omnisPartnerTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 99))).clone(namedValues=NamedValues(("tiam", 1), ("dcam", 2), ("ucon", 3), ("utm", 4), ("svp", 5), ("skp", 6), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerTyp.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerTyp.setDescription('Terminal type')
omnisPartnerState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6, 7, 8, 99))).clone(namedValues=NamedValues(("opn", 1), ("act", 2), ("los", 4), ("cls", 5), ("hold", 6), ("inact", 7), ("cancel", 8), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisPartnerState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerState.setDescription('Partner state ')
omnisPartnerRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("ind", 1), ("dir", 2), ("mux", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerRoute.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerRoute.setDescription('Route')
omnisPartnerKPAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerKPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerKPAC.setDescription('K-key to change the partner')
omnisPartnerTid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 6, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerTid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerTid.setDescription('Terminal ID')
omnisPartnerInfoPID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisPartnerInfoPID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoPID.setDescription('Partner ID')
omnisPartnerInfoPAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoPAC.setDescription('Partner address code')
omnisPartnerInfoPtnName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoPtnName.setDescription('Partner name')
omnisPartnerInfoProName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoProName.setDescription('Processor name')
omnisPartnerInfoTyp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 99))).clone(namedValues=NamedValues(("tiam", 1), ("dcam", 2), ("ucon", 3), ("utm", 4), ("svp", 5), ("skp", 6), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoTyp.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoTyp.setDescription('Partner type')
omnisPartnerInfoState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 99))).clone(namedValues=NamedValues(("opn", 1), ("act", 2), ("los", 3), ("cls", 4), ("hold", 5), ("inact", 6), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoState.setDescription('Partner state')
omnisPartnerInfoRoute = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("ind", 1), ("dir", 2), ("mux", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoRoute.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoRoute.setDescription('Route')
omnisPartnerInfoKPAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 97, 98, 99))).clone(namedValues=NamedValues(("k1", 1), ("k2", 2), ("k3", 3), ("k4", 4), ("k5", 5), ("k6", 6), ("k7", 7), ("k8", 8), ("k9", 9), ("k10", 10), ("k11", 11), ("k12", 12), ("k13", 13), ("k14", 14), ("no", 97), ("std", 98), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoKPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoKPAC.setDescription('K-key to change the partner')
omnisPartnerInfoRepAppName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoRepAppName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoRepAppName.setDescription('The name of the representative application')
omnisPartnerInfoOPass = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoOPass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoOPass.setDescription('The password for OCCUPY command')
omnisPartnerInfoMTAB = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoMTAB.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoMTAB.setDescription('The repoprt table')
omnisPartnerInfoExit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoExit.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoExit.setDescription('The address code of EXIT')
omnisPartnerInfoHold = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoHold.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoHold.setDescription('Hold the connection')
omnisPartnerInfoChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoChange.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoChange.setDescription('CHANGELOG permited')
omnisPartnerInfoHcopy = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoHcopy.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoHcopy.setDescription('The hardcopy printer')
omnisPartnerInfoClass = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("sav", 1), ("out", 2), ("del", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoClass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoClass.setDescription('The message class for the partner')
omnisPartnerInfoColour = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("blue", 1), ("cyan", 2), ("green", 3), ("yellow", 4), ("magenta", 5), ("red", 6), ("white", 7), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoColour.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoColour.setDescription('The display colour')
omnisPartnerInfoProtocol = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("dssim", 1), ("omnis", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoProtocol.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoProtocol.setDescription('the protocol type for a DCAM-connection')
omnisPartnerInfoLogging = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoLogging.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoLogging.setDescription('Protocoling in logging file')
omnisPartnerInfoLPass = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoLPass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoLPass.setDescription('Connection password required')
omnisPartnerInfoDeclared = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoDeclared.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoDeclared.setDescription('Declared')
omnisPartnerInfoAutoLogoff = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("std", 1), ("yes", 2), ("no", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoAutoLogoff.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoAutoLogoff.setDescription('Automatic logoff')
omnisPartnerInfoLine25 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("std", 3), ("omnis", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoLine25.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoLine25.setDescription('Use the 25. display-line')
omnisPartnerStartSequ = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerStartSequ.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerStartSequ.setDescription('Number of the startsequence')
omnisPartnerInfoCMsg = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoCMsg.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoCMsg.setDescription('Connection message')
omnisPartnerInfoLCase = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoLCase.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoLCase.setDescription('Lower-case character to partner permited')
omnisPartnerInfoSave = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 99))).clone(namedValues=NamedValues(("std", 1), ("screen", 2), ("pkey", 3), ("all", 4), ("no", 5), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoSave.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoSave.setDescription('Saved after disconnect')
omnisPartnerInfoTid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoTid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoTid.setDescription('Terminal ID')
omnisPartnerInfoSNMP = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoSNMP.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoSNMP.setDescription('SNMP-terminal controlling')
omnisPartnerInfoPACPrefix = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 99))).clone(namedValues=NamedValues(("no", 1), ("std", 2), ("line", 3), ("prefix", 4), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoPACPrefix.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoPACPrefix.setDescription('The type of display output for PAC')
omnisPartnerInfoBerid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("no", 1), ("yes", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoBerid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoBerid.setDescription('Password/permission in SKP generated')
omnisPartnerInfoConnect = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 7, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("opncon", 1), ("logon", 2), ("start", 3), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisPartnerInfoConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisPartnerInfoConnect.setDescription('The state of connection')
omnisGroupsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGroupsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsTabNum.setDescription('The number of entries in the table omnisGroupsTable')
omnisGroupsSelectTID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisGroupsSelectTID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsSelectTID.setDescription('The terminal ID the following table is reduced to')
omnisGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 3), )
if mibBuilder.loadTexts: omnisGroupsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsTable.setDescription('The OMNIS Groups table')
omnisGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisGroupsGAC"), (0, "Omnis-Management-MIB", "omnisGroupsPAC"))
if mibBuilder.loadTexts: omnisGroupsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsEntry.setDescription('An entry in the table')
omnisGroupsGAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGroupsGAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsGAC.setDescription('The address code of the Group')
omnisGroupsPAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGroupsPAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsPAC.setDescription('The address code of the partner')
omnisGroupsTid = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 8, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisGroupsTid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisGroupsTid.setDescription('The terminal ID')
omnisHardCopyStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("all", 1), ("activ", 2), ("inactiv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyStatus.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyStatus.setDescription('State-Flag for restriction in Show Table')
omnisHardCopyTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTabNum.setDescription('The number of entries in the table omnisHardCopyTable')
omnisHardCopyTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3), )
if mibBuilder.loadTexts: omnisHardCopyTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTable.setDescription('The OMNIS HardCopy table')
omnisHardCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisHardCopyHID"))
if mibBuilder.loadTexts: omnisHardCopyEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyEntry.setDescription('An entry in the table')
omnisHardCopyHAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyHAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyHAC.setDescription('The address code of the Printer')
omnisHardCopyHID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyHID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyHID.setDescription('The ID of the Printer ')
omnisHardCopyPtnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPtnName.setDescription('Partner name')
omnisHardCopyProName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyProName.setDescription('Processor name')
omnisHardCopyState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("cls-p", 1), ("opn", 2), ("act", 3), ("los", 4), ("cls", 5), ("inact", 6), ("cancel", 7), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyState.setDescription('The state of the printer')
omnisHardCopyINOP = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyINOP.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyINOP.setDescription('The address code of the substituting printer')
omnisHardCopyConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("s", 1), ("u", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyConnect.setDescription('The start time for the connection to a printer')
omnisHardCopyRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 9, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99))).clone(namedValues=NamedValues(("start", 1), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyRestart.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyRestart.setDescription('Restart hardcopy connection ')
omnisHardCopyPIDsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyPIDsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsTabNum.setDescription('The number of entries in the omnisHardCopyTable')
omnisHardCopyPIDsSelectHid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyPIDsSelectHid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsSelectHid.setDescription('The Hid in omnisHardCopyTable the following table is reduced to ')
omnisHardCopyPIDsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 3), )
if mibBuilder.loadTexts: omnisHardCopyPIDsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsTable.setDescription('The OMNIS HardCopy table')
omnisHardCopyPIDsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisHardCopyPIDsHID"), (0, "Omnis-Management-MIB", "omnisHardCopyPIDsID"))
if mibBuilder.loadTexts: omnisHardCopyPIDsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsEntry.setDescription('An entry in the table')
omnisHardCopyPIDsHID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyPIDsHID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsHID.setDescription('Identifier of printer (HID)')
omnisHardCopyPIDsID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 10, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyPIDsID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyPIDsID.setDescription('Identifier of partner (PID)')
omnisHardCopyTIDsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyTIDsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsTabNum.setDescription('The number of entries in the omnisHardCopyTable')
omnisHardCopyTIDsSelectHid = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyTIDsSelectHid.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsSelectHid.setDescription('The Hid in omnisHardCopyTable the following table is reduced to')
omnisHardCopyTIDsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 3), )
if mibBuilder.loadTexts: omnisHardCopyTIDsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsTable.setDescription('The OMNIS HardCopy table')
omnisHardCopyTIDsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisHardCopyTIDsHID"), (0, "Omnis-Management-MIB", "omnisHardCopyTIDsID"))
if mibBuilder.loadTexts: omnisHardCopyTIDsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsEntry.setDescription('An entry in the table')
omnisHardCopyTIDsHID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyTIDsHID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsHID.setDescription('Identifier of printer (HID)')
omnisHardCopyTIDsHAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyTIDsHAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsHAC.setDescription('The address code of printer (HAC)')
omnisHardCopyTIDsID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 11, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyTIDsID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyTIDsID.setDescription('Identifier of terminal (TID)')
omnisHardCopyCreateHAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyCreateHAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreateHAC.setDescription('The address code for a new printer')
omnisHardCopyCreateHID = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisHardCopyCreateHID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreateHID.setDescription('The ID for a created printer')
omnisHardCopyCreatePtnName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyCreatePtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreatePtnName.setDescription('The terminal name for a new Printer')
omnisHardCopyCreateProName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyCreateProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreateProName.setDescription('The processor name for a new Printer')
omnisHardCopyCreateInop = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyCreateInop.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreateInop.setDescription('The address code of the substituting printer')
omnisHardCopyCreateConnect = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("s", 1), ("u", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisHardCopyCreateConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisHardCopyCreateConnect.setDescription('The start time for the connection to a new printer')
omnisOmnisStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("all", 1), ("activ", 2), ("inactiv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisOmnisStatus.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisStatus.setDescription('State-Flag for restriction in Show Table')
omnisOmnisTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisTabNum.setDescription('The number of entries in the omnisOmnisTable')
omnisOmnisTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3), )
if mibBuilder.loadTexts: omnisOmnisTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisTable.setDescription('The OMNIS Omnis table')
omnisOmnisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisOmnisID"))
if mibBuilder.loadTexts: omnisOmnisEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisEntry.setDescription('An entry in the table')
omnisOmnisOAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisOmnisOAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisOAC.setDescription('Omnis address code ')
omnisOmnisID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisID.setDescription('Identifier of OMNIS')
omnisOmnisPtnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisPtnName.setDescription('Partner name')
omnisOmnisProName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisProName.setDescription('Processor name')
omnisOmnisState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("cls-p", 1), ("opn", 2), ("act", 3), ("los", 4), ("cls", 5), ("inact", 6), ("cancel", 7), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisOmnisState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisState.setDescription('The OMNIS state')
omnisOmnisConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("start", 1), ("opncon", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisConnect.setDescription('The state of connection')
omnisOmnisTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisTime.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisTime.setDescription(' The connect duration')
omnisOmnisLPass = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisLPass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisLPass.setDescription('The connection password')
omnisOmnisOpncon = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("dcl", 1), ("free", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisOmnisOpncon.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisOpncon.setDescription('The connect permission')
omnisOmnisRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 13, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 99))).clone(namedValues=NamedValues(("start", 1), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisOmnisRestart.setStatus('mandatory')
if mibBuilder.loadTexts: omnisOmnisRestart.setDescription('Restart Omnis-Omnis Connection (write-only) ')
omnisMuxStatus = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("all", 1), ("activ", 2), ("inactiv", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisMuxStatus.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxStatus.setDescription('State-Flag for restriction in Show Table')
omnisMuxTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxTabNum.setDescription('The number of entries in the omnisMuxTable')
omnisMuxTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3), )
if mibBuilder.loadTexts: omnisMuxTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxTable.setDescription('The OMNIS Mux table')
omnisMuxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisMuxID"))
if mibBuilder.loadTexts: omnisMuxEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxEntry.setDescription('An entry in the table')
omnisMuxID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxID.setDescription('Identifier of MUX')
omnisMuxPtnName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxPtnName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxPtnName.setDescription('Partner name')
omnisMuxProName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxProName.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxProName.setDescription('Processor name')
omnisMuxState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 99))).clone(namedValues=NamedValues(("cls-p", 1), ("opn", 2), ("act", 3), ("los", 4), ("cls", 5), ("inact", 6), ("cancel", 7), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisMuxState.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxState.setDescription('The state of the MUX')
omnisMuxConnect = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("start", 1), ("opncon", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxConnect.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxConnect.setDescription('The state of connection')
omnisMuxLPass = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxLPass.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxLPass.setDescription('The connection password')
omnisMuxSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxSessions.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxSessions.setDescription('number of actual sessions')
omnisMuxAvailability = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 14, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisMuxAvailability.setStatus('mandatory')
if mibBuilder.loadTexts: omnisMuxAvailability.setDescription('The availability')
omnisExitTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTabNum.setDescription('The number of entries in the omnisExitTable')
omnisExitTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 2), )
if mibBuilder.loadTexts: omnisExitTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTable.setDescription('The OMNIS Exit table')
omnisExitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 2, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisExitID"), (0, "Omnis-Management-MIB", "omnisExitModul"))
if mibBuilder.loadTexts: omnisExitEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitEntry.setDescription('An entry in the table')
omnisExitEAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitEAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitEAC.setDescription('The address code of EXIT')
omnisExitID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitID.setDescription('Identifier of Exit')
omnisExitModul = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 15, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitModul.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitModul.setDescription('The EXIT module')
omnisExitTIDsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitTIDsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsTabNum.setDescription('The number of entries in the omnisExitTable')
omnisExitTIDsSelectEac = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitTIDsSelectEac.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsSelectEac.setDescription('The Exit Adress Code the following table is reduced to ')
omnisExitTIDsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 3), )
if mibBuilder.loadTexts: omnisExitTIDsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsTable.setDescription('The OMNIS Exit table')
omnisExitTIDsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisExitTIDsEAC"), (0, "Omnis-Management-MIB", "omnisExitTIDsID"))
if mibBuilder.loadTexts: omnisExitTIDsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsEntry.setDescription('An entry in the table')
omnisExitTIDsEAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitTIDsEAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsEAC.setDescription('The address code of EXIT')
omnisExitTIDsID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 17, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitTIDsID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitTIDsID.setDescription('Identifier of Terminal (TID)')
omnisExitPIDsTabNum = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitPIDsTabNum.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsTabNum.setDescription('The number of entries in the omnisExitTable')
omnisExitPIDsSelectEac = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitPIDsSelectEac.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsSelectEac.setDescription('The Exit Adress Code the following table is reduced to ')
omnisExitPIDsTable = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 3), )
if mibBuilder.loadTexts: omnisExitPIDsTable.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsTable.setDescription('The OMNIS Exit table')
omnisExitPIDsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 3, 1), ).setIndexNames((0, "Omnis-Management-MIB", "omnisExitPIDsEAC"), (0, "Omnis-Management-MIB", "omnisExitPIDsID"))
if mibBuilder.loadTexts: omnisExitPIDsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsEntry.setDescription('An entry in the table')
omnisExitPIDsEAC = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitPIDsEAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsEAC.setDescription('The address code of EXIT')
omnisExitPIDsID = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 31, 16, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisExitPIDsID.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitPIDsID.setDescription('Identifier of Partner (PID)')
omnisExitCreateEAC = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateEAC.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateEAC.setDescription('The address code for an new EXIT')
omnisExitCreateModul1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul1.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul1.setDescription('The 1. modul for an new EXIT')
omnisExitCreateModul2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul2.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul2.setDescription('The 2. modul for an new EXIT')
omnisExitCreateModul3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul3.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul3.setDescription('The 3. modul for an new EXIT')
omnisExitCreateModul4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul4.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul4.setDescription('The 4. modul for an new EXIT')
omnisExitCreateModul5 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul5.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul5.setDescription('The 5. modul for an new EXIT')
omnisExitCreateModul6 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul6.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul6.setDescription('The 6. modul for an new EXIT')
omnisExitCreateModul7 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul7.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul7.setDescription('The 7. modul for an new EXIT')
omnisExitCreateModul8 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul8.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul8.setDescription('The 8. modul for an new EXIT')
omnisExitCreateModul9 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul9.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul9.setDescription('The 9. modul for an new EXIT')
omnisExitCreateModul10 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul10.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul10.setDescription('The 10. modul for an new EXIT')
omnisExitCreateModul11 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul11.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul11.setDescription('The 11. modul for an new EXIT')
omnisExitCreateModul12 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul12.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul12.setDescription('The 12. modul for an new EXIT')
omnisExitCreateModul13 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul13.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul13.setDescription('The 13. modul for an new EXIT')
omnisExitCreateModul14 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateModul14.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateModul14.setDescription('The 14. modul for an new EXIT')
omnisExitCreateOption = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 18, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisExitCreateOption.setStatus('mandatory')
if mibBuilder.loadTexts: omnisExitCreateOption.setDescription(' Defines the operation to be done ')
omnisTraceConnection = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceConnection.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceConnection.setDescription('DCAM-connection trace')
omnisTraceExit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceExit.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceExit.setDescription('EXIT trace')
omnisTraceTransport = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("select", 3), ("unknown", 99)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceTransport.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceTransport.setDescription('DCAM-transport trace')
omnisTraceTransportTrm = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceTransportTrm.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceTransportTrm.setDescription('DCAM-transport trace for a selected terminal')
omnisTraceTransporthcy = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceTransporthcy.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceTransporthcy.setDescription('DCAM-transport trace for a selected printer')
omnisTraceTransportmux = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceTransportmux.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceTransportmux.setDescription('DCAM-transport trace for a selected MUX')
omnisTraceTransportoms = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 19, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omnisTraceTransportoms.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTraceTransportoms.setDescription('DCAM-transport trace for a selected OMNIS')
omnisStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,301)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisStopTrap.setDescription('Sending a TRAP, if an OMNIS has been terminated ')
omnisStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,302)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisStartTrap.setDescription('Sending a TRAP, if an OMNIS has been activated ')
omnisConnStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,303)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisPartnerInfoPtnName"), ("Omnis-Management-MIB", "omnisPartnerInfoProName"), ("Omnis-Management-MIB", "omnisPartnerInfoPAC"))
if mibBuilder.loadTexts: omnisConnStopTrap.setDescription('Sending a TRAP, if a critical Connection has been deactivated ')
omnisDstConnStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,304)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisTerminalInfoPtnName"), ("Omnis-Management-MIB", "omnisTerminalInfoProName"), ("Omnis-Management-MIB", "omnisTerminalInfoTID"))
if mibBuilder.loadTexts: omnisDstConnStopTrap.setDescription('Sending a TRAP, if an OMNIS Session has been normally terminated')
omnisEventTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,305)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisPartnerInfoPtnName"), ("Omnis-Management-MIB", "omnisPartnerInfoProName"), ("Omnis-Management-MIB", "omnisPartnerInfoPAC"))
if mibBuilder.loadTexts: omnisEventTrap.setDescription('Sending a TRAP, if a critical Omnis message arrived ')
omnisDstLevelTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,306)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisDstLevelTrap.setDescription('Sending a TRAP, if DSTMAX has been reached ')
omnisPacLevelTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,307)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisPacLevelTrap.setDescription('Sending a TRAP, if PACMAX has been reached ')
omnisPtnLevelTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,308)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisPtnLevelTrap.setDescription('Sending a TRAP, if PTNMAX has been reached ')
omnisMuxConnStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,309)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisPartnerInfoPtnName"), ("Omnis-Management-MIB", "omnisPartnerInfoProName"), ("Omnis-Management-MIB", "omnisPartnerInfoPAC"))
if mibBuilder.loadTexts: omnisMuxConnStopTrap.setDescription('Sending a TRAP, if a critical MUX Connection has been deactivated ')
omnisOmnConnStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,310)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisPartnerInfoPtnName"), ("Omnis-Management-MIB", "omnisPartnerInfoProName"), ("Omnis-Management-MIB", "omnisPartnerInfoPAC"))
if mibBuilder.loadTexts: omnisOmnConnStopTrap.setDescription('Sending a TRAP, if a critical OMNIS-OMNIS Connection has been deactivated')
omnisHcConnStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,311)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisPartnerInfoPtnName"), ("Omnis-Management-MIB", "omnisPartnerInfoProName"), ("Omnis-Management-MIB", "omnisPartnerInfoPAC"))
if mibBuilder.loadTexts: omnisHcConnStopTrap.setDescription('Sending a TRAP, if a critical Hardcopy Connection has been deactivated')
omnisDumpWriteTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,312)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisDumpWriteTrap.setDescription('Sending a TRAP, if OMNIS has started writing a Dump')
omnisDumpEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,313)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisDumpEndTrap.setDescription('Sending a TRAP, if OMNIS has finished writing a Dump')
omnisEndTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 20) + (0,314)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"))
if mibBuilder.loadTexts: omnisEndTrap.setDescription('Sending a TRAP,if OMNIS has been normally terminated ')
omnisUserdefinedTrapData = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 21, 1))
omnisTrapMsgText = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 31, 21, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: omnisTrapMsgText.setStatus('mandatory')
if mibBuilder.loadTexts: omnisTrapMsgText.setDescription('OMNIS Message-Text generating a Trap')
omnisUserdefinedTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 31, 21, 10))
omnisGeneralTrap = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 31, 21, 10) + (0,320)).setObjects(("Omnis-Management-MIB", "omnisSettingsAppName"), ("Omnis-Management-MIB", "omnisTrapMsgText"))
if mibBuilder.loadTexts: omnisGeneralTrap.setDescription('Sending a TRAP, in all user-defined cases')
mibBuilder.exportSymbols("Omnis-Management-MIB", omnisPartnerInfoState=omnisPartnerInfoState, omnisPartnerTable=omnisPartnerTable, omnisExitTIDsEntry=omnisExitTIDsEntry, omnisSettingsMessageADM=omnisSettingsMessageADM, omnisGroupsPAC=omnisGroupsPAC, sniOmnisOmnis=sniOmnisOmnis, omnisParametersProName=omnisParametersProName, omnisHardCopyTIDsHID=omnisHardCopyTIDsHID, omnisParametersIOAreaLength=omnisParametersIOAreaLength, omnisPartnerInfoPtnName=omnisPartnerInfoPtnName, sniOmnisSettings=sniOmnisSettings, omnisExitModul=omnisExitModul, omnisPartnerRoute=omnisPartnerRoute, omnisTerminalInfoTID=omnisTerminalInfoTID, omnisPartnerInfoAutoLogoff=omnisPartnerInfoAutoLogoff, omnisParametersConfigFile=omnisParametersConfigFile, omnisGlobalDataTable=omnisGlobalDataTable, omnisPtnLevelTrap=omnisPtnLevelTrap, sniOmnisMux=sniOmnisMux, omnisParametersSecurityLevel=omnisParametersSecurityLevel, omnisSettingsEXIT=omnisSettingsEXIT, omnisTerminalInfoColour=omnisTerminalInfoColour, omnisTerminalInfoDisMod=omnisTerminalInfoDisMod, omnisSettingsInsave=omnisSettingsInsave, omnisParametersPWorkLength=omnisParametersPWorkLength, sni=sni, omnisTerminalsStatus=omnisTerminalsStatus, omnisDstLevelTrap=omnisDstLevelTrap, omnisGlobalDataEntry=omnisGlobalDataEntry, sniOmnisExitPIDs=sniOmnisExitPIDs, omnisGlobalDataSubagentVersion=omnisGlobalDataSubagentVersion, omnisGlobalDataOmnID=omnisGlobalDataOmnID, omnisGroupsGAC=omnisGroupsGAC, omnisOmnisID=omnisOmnisID, omnisHardCopyHID=omnisHardCopyHID, omnisParametersTextKeyLength=omnisParametersTextKeyLength, omnisExitTIDsSelectEac=omnisExitTIDsSelectEac, omnisSettingsHoldPri=omnisSettingsHoldPri, sniOmnisTerminals=sniOmnisTerminals, omnisGeneralTrap=omnisGeneralTrap, omnisPartnerInfoPACPrefix=omnisPartnerInfoPACPrefix, omnisParametersAppName=omnisParametersAppName, omnisExitCreateModul14=omnisExitCreateModul14, omnisHardCopyPIDsHID=omnisHardCopyPIDsHID, omnisGroupsSelectTID=omnisGroupsSelectTID, omnisHardCopyTIDsHAC=omnisHardCopyTIDsHAC, omnisExitTIDsTabNum=omnisExitTIDsTabNum, omnisTerminalInfoTyp=omnisTerminalInfoTyp, omnisTraceConnection=omnisTraceConnection, omnisHardCopyPtnName=omnisHardCopyPtnName, omnisGlobalDataActID=omnisGlobalDataActID, omnisHardCopyCreateHID=omnisHardCopyCreateHID, omnisParametersVTSUCBVers=omnisParametersVTSUCBVers, omnisHardCopyPIDsTabNum=omnisHardCopyPIDsTabNum, omnisSettingsAppName=omnisSettingsAppName, omnisMuxID=omnisMuxID, omnisTerminalsProName=omnisTerminalsProName, omnisTerminalsTable=omnisTerminalsTable, omnisPartnerInfoLCase=omnisPartnerInfoLCase, omnisPartnerKPAC=omnisPartnerKPAC, omnisOmnisRestart=omnisOmnisRestart, omnisExitCreateModul9=omnisExitCreateModul9, omnisExitCreateModul7=omnisExitCreateModul7, omnisPartnerInfoSave=omnisPartnerInfoSave, omnisHardCopyTabNum=omnisHardCopyTabNum, omnisParametersLoggingFile=omnisParametersLoggingFile, omnisMuxState=omnisMuxState, omnisTerminalInfoReply=omnisTerminalInfoReply, omnisMuxTabNum=omnisMuxTabNum, omnisConnStopTrap=omnisConnStopTrap, omnisSettingsPac=omnisSettingsPac, omnisExitTIDsTable=omnisExitTIDsTable, omnisSettingsExclPartner=omnisSettingsExclPartner, omnisHardCopyPIDsTable=omnisHardCopyPIDsTable, omnisSettingsExitPri=omnisSettingsExitPri, omnisParametersTWorkLength=omnisParametersTWorkLength, omnisPartnerInfoExit=omnisPartnerInfoExit, omnisPartnerInfoHcopy=omnisPartnerInfoHcopy, omnisDumpWriteTrap=omnisDumpWriteTrap, omnisSettingsOutputLog=omnisSettingsOutputLog, omnisOmnisConnect=omnisOmnisConnect, sniOmnisTraps=sniOmnisTraps, omnisOmnisOAC=omnisOmnisOAC, omnisTraceTransportmux=omnisTraceTransportmux, omnisGroupsTabNum=omnisGroupsTabNum, sniOmnisHardCopy=sniOmnisHardCopy, omnisPartnerInfoTyp=omnisPartnerInfoTyp, omnisHardCopyState=omnisHardCopyState, omnisTerminalsTyp=omnisTerminalsTyp, omnisPartnerState=omnisPartnerState, omnisExitPIDsTabNum=omnisExitPIDsTabNum, omnisTerminalsTabNum=omnisTerminalsTabNum, omnisPartnerInfoPAC=omnisPartnerInfoPAC, omnisTraceTransportoms=omnisTraceTransportoms, omnisPartnerPtnName=omnisPartnerPtnName, omnisStartTrap=omnisStartTrap, omnisTerminalInfoExit=omnisTerminalInfoExit, omnisExitCreateModul3=omnisExitCreateModul3, omnisTerminalInfoRoute=omnisTerminalInfoRoute, omnisExitTIDsEAC=omnisExitTIDsEAC, omnisEventTrap=omnisEventTrap, omnisPartnerInfoDeclared=omnisPartnerInfoDeclared, omnisSettingsPTNMax=omnisSettingsPTNMax, omnisParametersVTSUBVers=omnisParametersVTSUBVers, omnisGroupsTid=omnisGroupsTid, omnisExitCreateModul10=omnisExitCreateModul10, omnisPartnerInfoRoute=omnisPartnerInfoRoute, omnisHardCopyRestart=omnisHardCopyRestart, omnisParametersPagePool=omnisParametersPagePool, omnisTerminalInfoCallKey=omnisTerminalInfoCallKey, omnisPartnerPAC=omnisPartnerPAC, omnisHardCopyProName=omnisHardCopyProName, omnisParametersBulletinFile=omnisParametersBulletinFile, omnisStopTrap=omnisStopTrap, omnisGlobalDataVersion=omnisGlobalDataVersion, omnisPartnerInfoKPAC=omnisPartnerInfoKPAC, omnisTerminalInfoAutoLogoff=omnisTerminalInfoAutoLogoff, omnisTerminalInfoBerID=omnisTerminalInfoBerID, omnisOmnisProName=omnisOmnisProName, omnisTerminalInfoADM=omnisTerminalInfoADM, omnisExitCreateOption=omnisExitCreateOption, omnisPartnerInfoProtocol=omnisPartnerInfoProtocol, omnisTerminalExclPartner=omnisTerminalExclPartner, sniOmnisExitCreate=sniOmnisExitCreate, omnisExitCreateModul2=omnisExitCreateModul2, sniOmnisExitTIDs=sniOmnisExitTIDs, omnisTerminalInfoHcopy=omnisTerminalInfoHcopy, omnisExitCreateModul8=omnisExitCreateModul8, omnisDstConnStopTrap=omnisDstConnStopTrap, omnisSettingsHCopy=omnisSettingsHCopy, omnisTraceTransport=omnisTraceTransport, omnisTerminalInfoChange=omnisTerminalInfoChange, omnisTerminalsEntry=omnisTerminalsEntry, omnisGlobalDataState=omnisGlobalDataState, omnisMuxLPass=omnisMuxLPass, omnisExitCreateModul4=omnisExitCreateModul4, omnisHcConnStopTrap=omnisHcConnStopTrap, omnisHardCopyTIDsID=omnisHardCopyTIDsID, omnisTerminalInfoOPass=omnisTerminalInfoOPass, omnisSettingsHOLD=omnisSettingsHOLD, omnisTerminalsState=omnisTerminalsState, omnisExitTable=omnisExitTable, omnisSettingsChangeLogging=omnisSettingsChangeLogging, sniOmnisParameters=sniOmnisParameters, omnisTerminalInfoHold=omnisTerminalInfoHold, omnisGlobalDataTabNum=omnisGlobalDataTabNum, omnisExitPIDsEAC=omnisExitPIDsEAC, omnisParametersConfUpdate=omnisParametersConfUpdate, omnisOmnisPtnName=omnisOmnisPtnName, omnisParametersPrefix=omnisParametersPrefix, omnisPartnerInfoOPass=omnisPartnerInfoOPass, omnisPartnerInfoHold=omnisPartnerInfoHold, omnisPartnerInfoLine25=omnisPartnerInfoLine25, omnisExitTabNum=omnisExitTabNum, omnisExitPIDsID=omnisExitPIDsID, sniOmnis=sniOmnis, omnisOmnisOpncon=omnisOmnisOpncon, omnisHardCopyConnect=omnisHardCopyConnect, sniOmnisTrace=sniOmnisTrace, omnisHardCopyHAC=omnisHardCopyHAC, omnisExitPIDsSelectEac=omnisExitPIDsSelectEac, omnisParametersTextFile=omnisParametersTextFile, omnisPartnerInfoLogging=omnisPartnerInfoLogging, omnisMuxPtnName=omnisMuxPtnName, omnisSettingsACK=omnisSettingsACK, sniOmnisUserdefinedTraps=sniOmnisUserdefinedTraps, omnisSettingsHcyForm=omnisSettingsHcyForm, omnisParametersModulFile=omnisParametersModulFile, omnisTerminalInfoInputLogging=omnisTerminalInfoInputLogging, omnisTerminalsTID=omnisTerminalsTID, omnisHardCopyStatus=omnisHardCopyStatus, sniOmnisExits=sniOmnisExits, omnisMuxConnStopTrap=omnisMuxConnStopTrap, omnisTerminalInfoBreakKey=omnisTerminalInfoBreakKey, omnisExitID=omnisExitID, omnisExitPIDsTable=omnisExitPIDsTable, omnisPartnerEntry=omnisPartnerEntry, omnisTerminalInfoHcyForm=omnisTerminalInfoHcyForm, omnisParametersVirtProName=omnisParametersVirtProName, omnisPartnerInfoColour=omnisPartnerInfoColour, sniOmnisHardCopyCreate=sniOmnisHardCopyCreate, sniOmnisHardCopyPIDs=sniOmnisHardCopyPIDs, omnisSettingsLoggPri=omnisSettingsLoggPri, omnisTerminalInfoDeclared=omnisTerminalInfoDeclared, omnisExitEAC=omnisExitEAC, omnisSettingsOpncon=omnisSettingsOpncon, sniOmnisTerminalInfo=sniOmnisTerminalInfo, omnisGlobalDataActName=omnisGlobalDataActName, omnisSettingsDisMod=omnisSettingsDisMod, omnisSettingsBreakKey=omnisSettingsBreakKey, omnisSettingsAPASS=omnisSettingsAPASS, omnisPartnerStatus=omnisPartnerStatus, omnisParametersStartupFile=omnisParametersStartupFile, omnisPartnerPID=omnisPartnerPID, omnisTerminalInfoLine25=omnisTerminalInfoLine25, omnisOmnisStatus=omnisOmnisStatus, omnisExitPIDsEntry=omnisExitPIDsEntry, omnisHardCopyTable=omnisHardCopyTable, omnisMuxProName=omnisMuxProName, omnisMuxSessions=omnisMuxSessions, omnisParametersDump=omnisParametersDump, omnisOmnisTime=omnisOmnisTime, omnisTerminalInfoPacAnz=omnisTerminalInfoPacAnz, omnisPartnerInfoClass=omnisPartnerInfoClass, omnisPartnerProName=omnisPartnerProName, omnisTerminalInfoMTAB=omnisTerminalInfoMTAB, omnisPartnerInfoChange=omnisPartnerInfoChange, omnisPartnerInfoTid=omnisPartnerInfoTid, omnisOmnConnStopTrap=omnisOmnConnStopTrap, omnisTerminalInfoOpncon=omnisTerminalInfoOpncon, omnisHardCopyCreateProName=omnisHardCopyCreateProName, omnisSettingsMessageALL=omnisSettingsMessageALL, omnisPartnerStartSequ=omnisPartnerStartSequ, omnisTerminalInfoProName=omnisTerminalInfoProName, omnisMuxStatus=omnisMuxStatus, omnisOmnisTabNum=omnisOmnisTabNum, omnisSettingsKPAC=omnisSettingsKPAC, omnisSettingsCallKey=omnisSettingsCallKey, omnisTerminalsKPAC=omnisTerminalsKPAC, omnisPartnerInfoConnect=omnisPartnerInfoConnect, omnisPartnerTid=omnisPartnerTid, omnisTerminalInfoTestmode=omnisTerminalInfoTestmode, omnisDumpEndTrap=omnisDumpEndTrap, omnisTerminalInfoPtnName=omnisTerminalInfoPtnName, omnisExitCreateModul6=omnisExitCreateModul6, omnisPartnerInfoLPass=omnisPartnerInfoLPass, omnisSettingsReply=omnisSettingsReply, omnisTerminalInfoConnect=omnisTerminalInfoConnect, omnisTerminalInfoLogging=omnisTerminalInfoLogging, omnisTerminalInfoPAC=omnisTerminalInfoPAC, omnisParametersDCAMIntVers=omnisParametersDCAMIntVers, omnisGroupsEntry=omnisGroupsEntry, omnisSettingsPACMax=omnisSettingsPACMax, omnisMuxAvailability=omnisMuxAvailability, omnisTerminalInfoState=omnisTerminalInfoState, omnisTerminalInfoAck=omnisTerminalInfoAck, sniOmnisHardCopyTIDs=sniOmnisHardCopyTIDs, omnisTerminalInfoSNMP=omnisTerminalInfoSNMP, omnisExitTIDsID=omnisExitTIDsID, omnisTerminalsPtnName=omnisTerminalsPtnName, omnisTerminalInfoUserProt=omnisTerminalInfoUserProt, omnisPartnerSelectTID=omnisPartnerSelectTID, omnisOmnisEntry=omnisOmnisEntry, omnisUserdefinedTrap=omnisUserdefinedTrap, omnisHardCopyPIDsID=omnisHardCopyPIDsID, omnisPartnerTabNum=omnisPartnerTabNum, omnisExitEntry=omnisExitEntry, omnisSettingsSave=omnisSettingsSave, omnisExitCreateModul13=omnisExitCreateModul13, omnisSettingsLogging=omnisSettingsLogging, omnisMuxConnect=omnisMuxConnect, omnisEndTrap=omnisEndTrap, omnisHardCopyEntry=omnisHardCopyEntry, omnisSettingsEndPassw=omnisSettingsEndPassw)
mibBuilder.exportSymbols("Omnis-Management-MIB", omnisTerminalInfoListening=omnisTerminalInfoListening, omnisPartnerInfoPID=omnisPartnerInfoPID, omnisSettingsDSTMax=omnisSettingsDSTMax, omnisExitCreateModul5=omnisExitCreateModul5, omnisTerminalInfoOutputLogging=omnisTerminalInfoOutputLogging, omnisTerminalInfoInsave=omnisTerminalInfoInsave, sniProductMibs=sniProductMibs, omnisHardCopyTIDsTabNum=omnisHardCopyTIDsTabNum, omnisSettingsInputLog=omnisSettingsInputLog, omnisTraceTransportTrm=omnisTraceTransportTrm, omnisTerminalInfoSave=omnisTerminalInfoSave, omnisHardCopyPIDsSelectHid=omnisHardCopyPIDsSelectHid, omnisSettingsExitAuth=omnisSettingsExitAuth, sniOmnisPartnerInfo=sniOmnisPartnerInfo, omnisPartnerInfoProName=omnisPartnerInfoProName, omnisParametersAppNameISO=omnisParametersAppNameISO, omnisGroupsTable=omnisGroupsTable, omnisTrapMsgText=omnisTrapMsgText, omnisSettingsLine25=omnisSettingsLine25, omnisOmnisTable=omnisOmnisTable, omnisHardCopyCreateConnect=omnisHardCopyCreateConnect, omnisHardCopyTIDsSelectHid=omnisHardCopyTIDsSelectHid, omnisUserdefinedTrapData=omnisUserdefinedTrapData, omnisSettingsAudit=omnisSettingsAudit, omnisPartnerInfoCMsg=omnisPartnerInfoCMsg, omnisMuxEntry=omnisMuxEntry, omnisParametersDumpMsgNr=omnisParametersDumpMsgNr, omnisTerminalsMessage=omnisTerminalsMessage, sniOmnisGroups=sniOmnisGroups, omnisExitCreateEAC=omnisExitCreateEAC, omnisHardCopyTIDsTable=omnisHardCopyTIDsTable, omnisHardCopyCreateInop=omnisHardCopyCreateInop, omnisPartnerInfoRepAppName=omnisPartnerInfoRepAppName, omnisPacLevelTrap=omnisPacLevelTrap, omnisTerminalsRoute=omnisTerminalsRoute, omnisHardCopyCreatePtnName=omnisHardCopyCreatePtnName, omnisHardCopyCreateHAC=omnisHardCopyCreateHAC, omnisPartnerInfoBerid=omnisPartnerInfoBerid, omnisSettingsMTAB=omnisSettingsMTAB, omnisMuxTable=omnisMuxTable, omnisHardCopyINOP=omnisHardCopyINOP, omnisSettingsEnd=omnisSettingsEnd, omnisTerminalInfoUser=omnisTerminalInfoUser, omnisExitCreateModul12=omnisExitCreateModul12, omnisTraceTransporthcy=omnisTraceTransporthcy, omnisSettingsAppNameISO=omnisSettingsAppNameISO, sniOmnisPartners=sniOmnisPartners, omnisSettingsOpnStart=omnisSettingsOpnStart, omnisGlobalDataOmnName=omnisGlobalDataOmnName, omnisOmnisState=omnisOmnisState, omnisTerminalInfoTransProt=omnisTerminalInfoTransProt, omnisSettingsCallInf=omnisSettingsCallInf, sniOmnisGlobalData=sniOmnisGlobalData, omnisTraceExit=omnisTraceExit, omnisTerminalInfoCallInf=omnisTerminalInfoCallInf, omnisSettingsState=omnisSettingsState, omnisParametersCMD=omnisParametersCMD, omnisParametersDumpInsert=omnisParametersDumpInsert, omnisHardCopyPIDsEntry=omnisHardCopyPIDsEntry, omnisTerminalsUser=omnisTerminalsUser, omnisSettingsNumTerminals=omnisSettingsNumTerminals, omnisPartnerTyp=omnisPartnerTyp, omnisParametersDumpInsertNr=omnisParametersDumpInsertNr, omnisSettingsNumPartners=omnisSettingsNumPartners, omnisHardCopyTIDsEntry=omnisHardCopyTIDsEntry, omnisExitCreateModul1=omnisExitCreateModul1, omnisTerminalInfoKPAC=omnisTerminalInfoKPAC, omnisExitCreateModul11=omnisExitCreateModul11, omnisSettingsMDefAuth=omnisSettingsMDefAuth, omnisOmnisLPass=omnisOmnisLPass, omnisPartnerInfoMTAB=omnisPartnerInfoMTAB, omnisPartnerInfoSNMP=omnisPartnerInfoSNMP)
