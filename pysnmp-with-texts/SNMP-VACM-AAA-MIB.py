#
# PySNMP MIB module SNMP-VACM-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNMP-VACM-AAA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:08:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
SnmpAdminString, SnmpSecurityModel = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString", "SnmpSecurityModel")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ObjectIdentity, Bits, iso, Counter32, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, ModuleIdentity, Counter64, NotificationType, mib_2, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "iso", "Counter32", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "ModuleIdentity", "Counter64", "NotificationType", "mib-2", "IpAddress", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vacmAaaMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 199))
vacmAaaMIB.setRevisions(('2010-12-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: vacmAaaMIB.setRevisionsDescriptions(('Initial version, published as RFC 6065.',))
if mibBuilder.loadTexts: vacmAaaMIB.setLastUpdated('201012090000Z')
if mibBuilder.loadTexts: vacmAaaMIB.setOrganization('ISMS Working Group')
if mibBuilder.loadTexts: vacmAaaMIB.setContactInfo('WG-email: isms@ietf.org')
if mibBuilder.loadTexts: vacmAaaMIB.setDescription("The management and local datastore information definitions for the AAA-Enabled View-based Access Control Model for SNMP. Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this MIB module is part of RFC 6065; see the RFC itself for full legal notices.")
vacmAaaMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 199, 1))
vacmAaaMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 199, 2))
vacmAaaSecurityToGroupTable = MibTable((1, 3, 6, 1, 2, 1, 199, 1, 1), )
if mibBuilder.loadTexts: vacmAaaSecurityToGroupTable.setReference('RFC 3411, Section 3.2.2, defines securityName.')
if mibBuilder.loadTexts: vacmAaaSecurityToGroupTable.setStatus('current')
if mibBuilder.loadTexts: vacmAaaSecurityToGroupTable.setDescription('This table provides a listing of all currently active sessions for which a mapping of the combination of SnmpSecurityModel and securityName into the name of a VACM group has been provided by an AAA service. The group name (in VACM) in turn identifies an access control policy to be used for the corresponding principals.')
vacmAaaSecurityToGroupEntry = MibTableRow((1, 3, 6, 1, 2, 1, 199, 1, 1, 1), ).setIndexNames((0, "SNMP-VACM-AAA-MIB", "vacmAaaSecurityModel"), (0, "SNMP-VACM-AAA-MIB", "vacmAaaSecurityName"), (0, "SNMP-VACM-AAA-MIB", "vacmAaaSessionID"))
if mibBuilder.loadTexts: vacmAaaSecurityToGroupEntry.setReference('RFC 3411, Section 3.2.2, defines securityName.')
if mibBuilder.loadTexts: vacmAaaSecurityToGroupEntry.setStatus('current')
if mibBuilder.loadTexts: vacmAaaSecurityToGroupEntry.setDescription('An entry in this table maps the combination of a SnmpSecurityModel and securityName into the name of a VACM group defining the access control policy that is to govern a particular session. Each entry corresponds to a session. Entries do not persist across reboots. An entry is created whenever an indication occurs that a new session has been established that would not have the same index values as an existing entry. When a session is torn down, disconnected, timed out (e.g., following the RADIUS Session-Timeout Attribute), or otherwise terminated for any reason, the corresponding vacmAaaSecurityToGroupEntry is deleted.')
vacmAaaSecurityModel = MibTableColumn((1, 3, 6, 1, 2, 1, 199, 1, 1, 1, 1), SnmpSecurityModel().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vacmAaaSecurityModel.setStatus('current')
if mibBuilder.loadTexts: vacmAaaSecurityModel.setDescription("The security model associated with the AAA binding represented by this entry. This object cannot take the 'any' (0) value.")
vacmAaaSecurityName = MibTableColumn((1, 3, 6, 1, 2, 1, 199, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: vacmAaaSecurityName.setReference('RFC 3411, Section 3.2.2, defines securityName, and RFC 2865, Section 5.1, defines User-Name.')
if mibBuilder.loadTexts: vacmAaaSecurityName.setStatus('current')
if mibBuilder.loadTexts: vacmAaaSecurityName.setDescription('The securityName of the principal associated with the AAA binding represented by this entry. In RADIUS environments, this corresponds to the User-Name Attribute.')
vacmAaaSessionID = MibTableColumn((1, 3, 6, 1, 2, 1, 199, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: vacmAaaSessionID.setReference('The Abstract Service Interface parameter tmSessionID is defined in RFC 5590, Section 5.2.4.')
if mibBuilder.loadTexts: vacmAaaSessionID.setStatus('current')
if mibBuilder.loadTexts: vacmAaaSessionID.setDescription("An implementation-dependent identifier of the session. This value MUST be unique among all currently open sessions of all of this SNMP engine's transport models. The value has no particular significance other than to distinguish sessions. Implementations in which tmSessionID has a compatible syntax and is unique across all transport models MAY use that value.")
vacmAaaGroupName = MibTableColumn((1, 3, 6, 1, 2, 1, 199, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vacmAaaGroupName.setReference('RFC 3415')
if mibBuilder.loadTexts: vacmAaaGroupName.setStatus('current')
if mibBuilder.loadTexts: vacmAaaGroupName.setDescription('The name of the group to which this entry is to belong. In RADIUS environments, this comes from the RADIUS Management-Policy-Id Attribute. When the appropriate conditions are met, the value of this object is applied the vacmGroupName in the corresponding vacmSecurityToGroupEntry.')
vacmAaaMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 199, 2, 1))
vacmAaaMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 199, 2, 2))
vacmAaaMIBBasicCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 199, 2, 1, 1)).setObjects(("SNMP-VACM-AAA-MIB", "vacmAaaGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vacmAaaMIBBasicCompliance = vacmAaaMIBBasicCompliance.setStatus('current')
if mibBuilder.loadTexts: vacmAaaMIBBasicCompliance.setDescription('The compliance statement for SNMP engines implementing the AAA-Enabled View-based Access Control Model for SNMP.')
vacmAaaGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 199, 2, 2, 1)).setObjects(("SNMP-VACM-AAA-MIB", "vacmAaaGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vacmAaaGroup = vacmAaaGroup.setStatus('current')
if mibBuilder.loadTexts: vacmAaaGroup.setDescription('A collection of objects for supporting the use of AAA services to provide user-to-group mappings for VACM.')
mibBuilder.exportSymbols("SNMP-VACM-AAA-MIB", vacmAaaMIBObjects=vacmAaaMIBObjects, vacmAaaMIBBasicCompliance=vacmAaaMIBBasicCompliance, vacmAaaMIBConformance=vacmAaaMIBConformance, vacmAaaMIB=vacmAaaMIB, vacmAaaSecurityToGroupEntry=vacmAaaSecurityToGroupEntry, vacmAaaSecurityName=vacmAaaSecurityName, vacmAaaMIBCompliances=vacmAaaMIBCompliances, vacmAaaSessionID=vacmAaaSessionID, vacmAaaSecurityModel=vacmAaaSecurityModel, vacmAaaGroup=vacmAaaGroup, vacmAaaGroupName=vacmAaaGroupName, vacmAaaSecurityToGroupTable=vacmAaaSecurityToGroupTable, PYSNMP_MODULE_ID=vacmAaaMIB, vacmAaaMIBGroups=vacmAaaMIBGroups)
