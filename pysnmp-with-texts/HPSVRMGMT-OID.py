#
# PySNMP MIB module HPSVRMGMT-OID (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPSVRMGMT-OID
# Produced by pysmi-0.3.4 at Wed May  1 13:42:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Integer32, TimeTicks, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, NotificationType, IpAddress, Unsigned32, Gauge32, iso, enterprises, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "TimeTicks", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "NotificationType", "IpAddress", "Unsigned32", "Gauge32", "iso", "enterprises", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
hpSysMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5))
hpEmbeddedServerMgt = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7))
hpEmbeddedServerMgt.setRevisions(('2007-07-09 00:00', '2010-04-15 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpEmbeddedServerMgt.setRevisionsDescriptions(('Updated for iLO 3 and Virtual Connect', 'Updated for hpVC10G24PortFlexFabricCmdr',))
if mibBuilder.loadTexts: hpEmbeddedServerMgt.setLastUpdated('200707090000Z')
if mibBuilder.loadTexts: hpEmbeddedServerMgt.setOrganization('Hewlett Packard Company, General Systems Technology Lab')
if mibBuilder.loadTexts: hpEmbeddedServerMgt.setContactInfo('Steve Lyle Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747 Tel: 916 748-2388 Email: steve.lyle@hp.com')
if mibBuilder.loadTexts: hpEmbeddedServerMgt.setDescription('This MIB module describes embedded management devices in the HP server product line. ')
hpChassisMgmtProc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5, 7, 1))
hpBladeMgmtProc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5, 7, 2))
hpServerMgmtProc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5, 7, 3))
hpPartitionSvrMgmtProc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5, 7, 4))
hpModuleMgmtProc = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 5, 7, 5))
hpBladeMgmtCard = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 1, 1))
if mibBuilder.loadTexts: hpBladeMgmtCard.setStatus('current')
if mibBuilder.loadTexts: hpBladeMgmtCard.setDescription('HP Bladed System, Server Management Card')
hpOnboardAdministrator = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 1, 2))
if mibBuilder.loadTexts: hpOnboardAdministrator.setStatus('current')
if mibBuilder.loadTexts: hpOnboardAdministrator.setDescription('HP Onboard Administrator for ProLiant BladeSystem Enclosure.')
hpBHMgmtProc = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 2, 1))
if mibBuilder.loadTexts: hpBHMgmtProc.setStatus('current')
if mibBuilder.loadTexts: hpBHMgmtProc.setDescription('HP Bladed System, Blade management processor')
hpServerGSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 3, 1))
if mibBuilder.loadTexts: hpServerGSP.setStatus('current')
if mibBuilder.loadTexts: hpServerGSP.setDescription('HP Single Partition Server, management processor')
hpServerMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 3, 2))
if mibBuilder.loadTexts: hpServerMP.setStatus('current')
if mibBuilder.loadTexts: hpServerMP.setDescription('HP Single Partition Server, management processor')
hpServeriLO3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 3, 3))
if mibBuilder.loadTexts: hpServeriLO3.setStatus('current')
if mibBuilder.loadTexts: hpServeriLO3.setDescription('Integrated Lights Out 3 for Integrity')
hpHiMPartGSP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 4, 1))
if mibBuilder.loadTexts: hpHiMPartGSP.setStatus('current')
if mibBuilder.loadTexts: hpHiMPartGSP.setDescription('HP multi-partition server, Management Processor')
hpMidMPartMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 4, 2))
if mibBuilder.loadTexts: hpMidMPartMP.setStatus('current')
if mibBuilder.loadTexts: hpMidMPartMP.setDescription('HP multi-partition server, Management Processor')
hpHiMPartArchMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 4, 3))
if mibBuilder.loadTexts: hpHiMPartArchMP.setStatus('current')
if mibBuilder.loadTexts: hpHiMPartArchMP.setDescription('HP multi-partition server, Management Processor')
hpMidMPartArchMP = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 4, 4))
if mibBuilder.loadTexts: hpMidMPartArchMP.setStatus('current')
if mibBuilder.loadTexts: hpMidMPartArchMP.setDescription('HP multi-partition server, Management Processor')
hpVCEthernetModule = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 5, 1))
if mibBuilder.loadTexts: hpVCEthernetModule.setStatus('current')
if mibBuilder.loadTexts: hpVCEthernetModule.setDescription('HP Virtual Connect Ethernet module')
hpVC10G24PortFlexFabricCmdr = ObjectIdentity((1, 3, 6, 1, 4, 1, 11, 5, 7, 5, 3))
if mibBuilder.loadTexts: hpVC10G24PortFlexFabricCmdr.setStatus('current')
if mibBuilder.loadTexts: hpVC10G24PortFlexFabricCmdr.setDescription('HP VC FlexFabric 10Gb/24-port Commander')
mibBuilder.exportSymbols("HPSVRMGMT-OID", hpChassisMgmtProc=hpChassisMgmtProc, hpServerGSP=hpServerGSP, hpMidMPartMP=hpMidMPartMP, hp=hp, hpBladeMgmtProc=hpBladeMgmtProc, hpVC10G24PortFlexFabricCmdr=hpVC10G24PortFlexFabricCmdr, hpServerMP=hpServerMP, hpHiMPartArchMP=hpHiMPartArchMP, hpVCEthernetModule=hpVCEthernetModule, hpSysMgt=hpSysMgt, PYSNMP_MODULE_ID=hpEmbeddedServerMgt, hpMidMPartArchMP=hpMidMPartArchMP, hpBladeMgmtCard=hpBladeMgmtCard, hpEmbeddedServerMgt=hpEmbeddedServerMgt, hpServerMgmtProc=hpServerMgmtProc, hpHiMPartGSP=hpHiMPartGSP, hpOnboardAdministrator=hpOnboardAdministrator, hpPartitionSvrMgmtProc=hpPartitionSvrMgmtProc, hpServeriLO3=hpServeriLO3, hpBHMgmtProc=hpBHMgmtProc, hpModuleMgmtProc=hpModuleMgmtProc)
