#
# PySNMP MIB module ALVARION-DEVICE-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-DEVICE-IF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:22:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
coDevDisIndex, = mibBuilder.importSymbols("ALVARION-DEVICE-MIB", "coDevDisIndex")
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, TimeTicks, Counter32, NotificationType, Counter64, Integer32, Bits, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Gauge32, IpAddress, ObjectIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Counter32", "NotificationType", "Counter64", "Integer32", "Bits", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Gauge32", "IpAddress", "ObjectIdentity", "iso")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
alvarionDeviceIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24))
if mibBuilder.loadTexts: alvarionDeviceIfMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionDeviceIfMIB.setOrganization('Alvarion Ltd.')
if mibBuilder.loadTexts: alvarionDeviceIfMIB.setContactInfo('Alvarion Ltd. Postal: 21a HaBarzel St. P.O. Box 13139 Tel-Aviv 69710 Israel Phone: +972 3 645 6262')
if mibBuilder.loadTexts: alvarionDeviceIfMIB.setDescription('Alvarion Device Interface MIB.')
alvarionDeviceIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1))
coDeviceIfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1))
coDeviceIfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2))
coDeviceIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1), )
if mibBuilder.loadTexts: coDeviceIfStatusTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatusTable.setDescription('Device interface status attributes.')
coDeviceIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1), ).setIndexNames((0, "ALVARION-DEVICE-MIB", "coDevDisIndex"), (0, "ALVARION-DEVICE-IF-MIB", "coDevIfStaIfIndex"))
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatusEntry.setDescription('An entry in the coDeviceIfStatusTable. coDevDisIndex - Uniquely identifies a device ion the MultiService Controller. coDevIfStaIfIndex - Uniquely identifies an interface on the device.')
coDevIfStaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: coDevIfStaIfIndex.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaIfIndex.setDescription('Specifies the index of an interface on the device.')
coDevIfStaFriendlyInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaFriendlyInterfaceName.setDescription('The friendly name associated with the interface.')
coDevIfStaType = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("ethernet", 2), ("l2vlan", 3), ("bridge", 4), ("ieee80211", 5), ("ieee80211Wds", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaType.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaType.setDescription('The current state of the interface.')
coDevIfStaVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaVLAN.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaVLAN.setDescription('Specifies the VLAN associated with the interface. The value 0 is used when coDevIfStaType is not set to l2vlan.')
coDevIfStaIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaIpAddress.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaIpAddress.setDescription('The IP address assigned to the interface.')
coDevIfStaNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaNetworkMask.setDescription('The network mask assigned to the interface.')
coDevIfStaMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaMACAddress.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaMACAddress.setDescription('The MAC address assigned to the interface.')
coDevIfStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStaState.setStatus('current')
if mibBuilder.loadTexts: coDevIfStaState.setDescription('The current state of the interface.')
coDeviceIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1), )
if mibBuilder.loadTexts: coDeviceIfStatsTable.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatsTable.setDescription('Device interface statistic attributes.')
coDeviceIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1), )
coDeviceIfStatusEntry.registerAugmentions(("ALVARION-DEVICE-IF-MIB", "coDeviceIfStatsEntry"))
coDeviceIfStatsEntry.setIndexNames(*coDeviceIfStatusEntry.getIndexNames())
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setStatus('current')
if mibBuilder.loadTexts: coDeviceIfStatsEntry.setDescription('An entry in the coDeviceIfStatsTable. coDevDisIndex - Uniquely identify a device in the MultiService Controller. coDevIfStaIfIndex - Uniquely identify an interface on the device.')
coDevIfStsRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxBytes.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxBytes.setDescription('The total number of octets received on the interface.')
coDevIfStsRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxPackets.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxPackets.setDescription('The number of packets delivered by this sub-layer to a higher (sub-)layer.')
coDevIfStsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsRxErrors.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsRxErrors.setDescription('The number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.')
coDevIfStsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxBytes.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxBytes.setDescription('The total number of octets transmitted by the interface.')
coDevIfStsTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxPackets.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxPackets.setDescription('The total number of packets that higher-level protocols requested to be transmitted.')
coDevIfStsTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coDevIfStsTxErrors.setStatus('current')
if mibBuilder.loadTexts: coDevIfStsTxErrors.setDescription('The number of outbound packets that could not be transmitted because of errors.')
alvarionDeviceIfMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 2))
alvarionDeviceIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 2, 0))
alvarionDeviceIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3))
alvarionDeviceIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3, 1))
alvarionDeviceIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3, 2))
alvarionDeviceIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3, 1, 1)).setObjects(("ALVARION-DEVICE-IF-MIB", "alvarionDeviceIfStatusMIBGroup"), ("ALVARION-DEVICE-IF-MIB", "alvarionDeviceIfStatsMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceIfMIBCompliance = alvarionDeviceIfMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceIfMIBCompliance.setDescription('The compliance statement for the device Interface MIB.')
alvarionDeviceIfStatusMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3, 2, 1)).setObjects(("ALVARION-DEVICE-IF-MIB", "coDevIfStaFriendlyInterfaceName"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaType"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaVLAN"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaIpAddress"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaNetworkMask"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaMACAddress"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStaState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceIfStatusMIBGroup = alvarionDeviceIfStatusMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceIfStatusMIBGroup.setDescription('A collection of objects for the device Interface Status group.')
alvarionDeviceIfStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 24, 3, 2, 2)).setObjects(("ALVARION-DEVICE-IF-MIB", "coDevIfStsRxBytes"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStsRxPackets"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStsRxErrors"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStsTxBytes"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStsTxPackets"), ("ALVARION-DEVICE-IF-MIB", "coDevIfStsTxErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionDeviceIfStatsMIBGroup = alvarionDeviceIfStatsMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alvarionDeviceIfStatsMIBGroup.setDescription('A collection of objects for the device Interface Stats group.')
mibBuilder.exportSymbols("ALVARION-DEVICE-IF-MIB", coDevIfStaIpAddress=coDevIfStaIpAddress, alvarionDeviceIfStatusMIBGroup=alvarionDeviceIfStatusMIBGroup, coDevIfStaVLAN=coDevIfStaVLAN, coDeviceIfStatusTable=coDeviceIfStatusTable, coDevIfStaNetworkMask=coDevIfStaNetworkMask, alvarionDeviceIfMIBCompliances=alvarionDeviceIfMIBCompliances, PYSNMP_MODULE_ID=alvarionDeviceIfMIB, alvarionDeviceIfMIBGroups=alvarionDeviceIfMIBGroups, coDeviceIfStatsGroup=coDeviceIfStatsGroup, coDeviceIfStatsTable=coDeviceIfStatsTable, coDeviceIfStatsEntry=coDeviceIfStatsEntry, coDevIfStaIfIndex=coDevIfStaIfIndex, alvarionDeviceIfMIBNotificationPrefix=alvarionDeviceIfMIBNotificationPrefix, coDevIfStsTxErrors=coDevIfStsTxErrors, coDevIfStaFriendlyInterfaceName=coDevIfStaFriendlyInterfaceName, coDevIfStsRxPackets=coDevIfStsRxPackets, coDeviceIfStatusGroup=coDeviceIfStatusGroup, alvarionDeviceIfStatsMIBGroup=alvarionDeviceIfStatsMIBGroup, alvarionDeviceIfMIBConformance=alvarionDeviceIfMIBConformance, coDevIfStsRxBytes=coDevIfStsRxBytes, coDeviceIfStatusEntry=coDeviceIfStatusEntry, alvarionDeviceIfMIBObjects=alvarionDeviceIfMIBObjects, alvarionDeviceIfMIBNotifications=alvarionDeviceIfMIBNotifications, coDevIfStsTxBytes=coDevIfStsTxBytes, coDevIfStaState=coDevIfStaState, coDevIfStsRxErrors=coDevIfStsRxErrors, coDevIfStaType=coDevIfStaType, coDevIfStsTxPackets=coDevIfStsTxPackets, coDevIfStaMACAddress=coDevIfStaMACAddress, alvarionDeviceIfMIBCompliance=alvarionDeviceIfMIBCompliance, alvarionDeviceIfMIB=alvarionDeviceIfMIB)
