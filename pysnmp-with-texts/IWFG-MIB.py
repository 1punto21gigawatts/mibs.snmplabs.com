#
# PySNMP MIB module IWFG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IWFG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:58:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Bits, Integer32, TimeTicks, Gauge32, enterprises, iso, NotificationType, ModuleIdentity, ObjectIdentity, Counter32, Unsigned32, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Integer32", "TimeTicks", "Gauge32", "enterprises", "iso", "NotificationType", "ModuleIdentity", "ObjectIdentity", "Counter32", "Unsigned32", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
iwfGWY = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25))
iwfCfgFrRly = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 1))
iwfCfgFrRlyTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1), )
if mibBuilder.loadTexts: iwfCfgFrRlyTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyTable.setDescription('Table containing objects for configuring Frame Relay Local management Interface parameters for the Gateway Cards in the chassis.')
iwfCfgFrRlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgFrRlyIndex"))
if mibBuilder.loadTexts: iwfCfgFrRlyEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgFrRlyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgFrRlyIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyIndex.setDescription('A unique index identifying the Gateway Card to which the Frame Relay LMI configuration table objects pertain')
iwfCfgFrRlyT391StatusEnqryTimr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgFrRlyT391StatusEnqryTimr.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyT391StatusEnqryTimr.setDescription('This object configures the T391 Status Enquiry Timer. ')
iwfCfgFrRlyT392StatusTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgFrRlyT392StatusTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyT392StatusTimer.setDescription('This object configure the T392 status timer.')
iwfCfgFrRlyN391StatusEnqrySent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgFrRlyN391StatusEnqrySent.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgFrRlyN391StatusEnqrySent.setDescription('This object configure the N391 number of status enquiry sent.')
iwfCfgQ921 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 2))
iwfCfgQ921Table = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1), )
if mibBuilder.loadTexts: iwfCfgQ921Table.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921Table.setDescription('Table containing objects for Q.921 parameter Configuration for wireless Gateway Cards in the chassis.')
iwfCfgQ921Entry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgQ921Index"))
if mibBuilder.loadTexts: iwfCfgQ921Entry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921Entry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgQ921Index = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgQ921Index.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921Index.setDescription('A unique index identifying the Gateway Card to which the Q.921 Frame Relay Call Control configure Table objects pertain.')
iwfCfgQ921KmaxOutStandPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921KmaxOutStandPkt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921KmaxOutStandPkt.setDescription('This object configure K-Max # of outstanding packets. ')
iwfCfgQ921T200IframeAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921T200IframeAckTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921T200IframeAckTimer.setDescription('This object configures the T200 I-frame Ack Timer. ')
iwfCfgQ921T203MaxTimeNoIframe = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921T203MaxTimeNoIframe.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921T203MaxTimeNoIframe.setDescription('This object configures the T203 max time with no I-frame Exchange. ')
iwfCfgQ921N200MaxFrameRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921N200MaxFrameRetrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921N200MaxFrameRetrans.setDescription('This object configures the N200 max number of retransmissions of frame. ')
iwfCfgQ921N201RxMaxOctetInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921N201RxMaxOctetInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921N201RxMaxOctetInfo.setDescription('This object configures the N200 Received Max number of Octets in info field. ')
iwfCfgQ921N201TxMaxOctetInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 2, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ921N201TxMaxOctetInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ921N201TxMaxOctetInfo.setDescription('This object configures the N200 Transmitted Max number of Octets in info field. ')
iwfCfgQ933 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 3))
iwfCfgQ933Table = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1), )
if mibBuilder.loadTexts: iwfCfgQ933Table.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933Table.setDescription('Table containing objects for configuring Q.933 parameter for IWF Gateway Cards in the chassis.')
iwfCfgQ933Entry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgQ933Index"))
if mibBuilder.loadTexts: iwfCfgQ933Entry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933Entry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgQ933Index = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgQ933Index.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933Index.setDescription('A unique index identifying the Gateway Card to which the Q.933 table objects pertain')
iwfCfgQ933T303SetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T303SetupTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T303SetupTimer.setDescription('This object configures T303- setup timer. ')
iwfCfgQ933T305DisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T305DisconnectTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T305DisconnectTimer.setDescription('This object configures T305- Desconnect. ')
iwfCfgQ933T308ReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T308ReleaseTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T308ReleaseTimer.setDescription('This object configures T308- Release Timer. ')
iwfCfgQ933T309DataLinkDiscTimr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T309DataLinkDiscTimr.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T309DataLinkDiscTimr.setDescription('This object configures T309- Data Link Disconnection Timer.')
iwfCfgQ933T310CallProceedTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T310CallProceedTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T310CallProceedTimer.setDescription('This object configures T310- Call proceeding timer. ')
iwfCfgQ933T313ConnectSentTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQ933T313ConnectSentTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQ933T313ConnectSentTimer.setDescription('This object configures T313- Connect sent timer. ')
iwfCfgCallStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 4))
iwfCfgCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1), )
if mibBuilder.loadTexts: iwfCfgCallStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCallStatsTable.setDescription('Table containing objects for configuring Call Statistics parameter for IWF Gateway Cards in the chassis.')
iwfCfgCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgCsIndex"))
if mibBuilder.loadTexts: iwfCfgCallStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCallStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgCsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsIndex.setDescription('A unique index identifying the Gateway Card to which the Call Statistics configuration table objects pertain')
iwfCfgCsMobOrigAdStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsMobOrigAdStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsMobOrigAdStats.setDescription('This object allows to enable/disable the collection of All Mobile Originated AD Statistics.')
iwfCfgCsMobOrigFaxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsMobOrigFaxStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsMobOrigFaxStats.setDescription('This object allows to enable/disable the collection of All Mobile Originated FAX Statistics.')
iwfCfgCsMobTermAdStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsMobTermAdStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsMobTermAdStats.setDescription('This object allows to enable/disable the collection of All Mobile Terminated AD Statistics.')
iwfCfgCsMobTermFaxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsMobTermFaxStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsMobTermFaxStats.setDescription('This object allows to enable/disable the collection of All Mobile Terminated FAX Statistics.')
iwfCfgCsLogStartTrapEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableAll", 2), ("enableLogs", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsLogStartTrapEna.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsLogStartTrapEna.setDescription('This is to enable the call log start stats trap and radius.')
iwfCfgCsLogTermTrapEna = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTraps", 1), ("disableAll", 2), ("enableLogs", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgCsLogTermTrapEna.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCsLogTermTrapEna.setDescription('This is to enable the call log termination stats trap and radius.')
iwfCfgPppParam = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 5))
iwfCfgPppParamTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1), )
if mibBuilder.loadTexts: iwfCfgPppParamTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppParamTable.setDescription('Table containing objects for configuring PPP parameter for IWF Gateway Cards in the chassis.')
iwfCfgPppParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgPppIndex"))
if mibBuilder.loadTexts: iwfCfgPppParamEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppParamEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgPppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgPppIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppIndex.setDescription('A unique index identifying the Gateway Card to which the PPP configuration table objects pertain')
iwfCfgPppForceEncryptData = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppForceEncryptData.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppForceEncryptData.setDescription('This object is used to control sending of encrypted data.')
iwfCfgPppForceEncryptpassword = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppForceEncryptpassword.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppForceEncryptpassword.setDescription('This object is used to control PPP Authentication.')
iwfCfgPppMaxNumbConfigRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppMaxNumbConfigRequests.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppMaxNumbConfigRequests.setDescription('This object configures the max number of Config Requests allowed without receiving a valid configure-Ack.')
iwfCfgPppMaxNumbConfigNAK = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppMaxNumbConfigNAK.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppMaxNumbConfigNAK.setDescription('This object is for Max number of configure-Nak without sending a configure-Ack.')
iwfCfgPppMaxNumbRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppMaxNumbRejects.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppMaxNumbRejects.setDescription('This object is Max number of configure-rejects before assuming PPP negotiation failed.')
iwfCfgPppMaxNumbTermRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppMaxNumbTermRequests.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppMaxNumbTermRequests.setDescription('This object is Max number of Terminate-Request without receiving a Terminate-Ack.')
iwfCfgPppNegotiateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppNegotiateTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppNegotiateTime.setDescription('This object is Max Time allowed for PPP negotiation.')
iwfCfgPppRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppRestartTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppRestartTime.setDescription('This object is Max Time allowed for PPP Restart.')
iwfCfgPppIpAddressPoolMax = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppIpAddressPoolMax.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppIpAddressPoolMax.setDescription('This object is to define the Max range of the Ip addresses used by PPP to dynamically allocate IP addresses.')
iwfCfgPppIpAddressPoolMin = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 5, 1, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgPppIpAddressPoolMin.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppIpAddressPoolMin.setDescription('This object is to define the Min range of the Ip addresses used by PPP to dynamically allocate IP addresses.')
iwfCfgTcpIp = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 6))
iwfCfgTcpIpTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1), )
if mibBuilder.loadTexts: iwfCfgTcpIpTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTcpIpTable.setDescription('Table containing objects for configuring TCP/IP parameter for IWF Gateway Cards in the chassis.')
iwfCfgTcpIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgTiIndex"))
if mibBuilder.loadTexts: iwfCfgTcpIpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTcpIpEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCfgTiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgTiIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiIndex.setDescription('A unique index identifying the Gateway Card to which the TCP/IP configuration table objects pertain')
iwfCfgTiDefaultServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiDefaultServiceType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiDefaultServiceType.setDescription('This object is for Default Service type it is defined in RFC 791.')
iwfCfgTiDefaultTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiDefaultTimeToLive.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiDefaultTimeToLive.setDescription('This object is the Max time an IP packet can live in the network without reaching its destination.')
iwfCfgTiMtuDiscovery = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiMtuDiscovery.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiMtuDiscovery.setDescription('This object allows discovery of the Maximum Transmission Unit over path to remote destination.')
iwfCfgTiKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiKeepAliveInterval.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiKeepAliveInterval.setDescription('This object is the Interval separating Keep Alive Retransmissions.')
iwfCfgTiKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiKeepAliveTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiKeepAliveTime.setDescription('This object is how often TCP verifies that an idle connection is still intact.')
iwfCfgTiMaxMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiMaxMtuSize.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiMaxMtuSize.setDescription('This object overrides the default MTU for a network interface.')
iwfCfgTiMaxConnectReTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiMaxConnectReTrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiMaxConnectReTrans.setDescription('This object is the number of times TCP retransmits a Connect Request (SYN) before aborting the attempt.')
iwfCfgTiMaxDataRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiMaxDataRetrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiMaxDataRetrans.setDescription('This object is the number of times TCP retransmits an individual data segment before aborting the attempt.')
iwfCfgTiMaxNumberConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiMaxNumberConnections.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiMaxNumberConnections.setDescription('This object configures the Max number of open TCP connection.')
iwfCfgTiWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiWindowSize.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiWindowSize.setDescription('This object configures the receive window size.')
iwfCfgTiLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiLocalIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiLocalIpAddress.setDescription('This object is the IP address of the EdgeServer.')
iwfCfgTiSubnetIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiSubnetIpMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiSubnetIpMask.setDescription('This object Subnet Mask of the EdgeServer.')
iwfCfgTiDefualtGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 6, 1, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgTiDefualtGatewayIp.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTiDefualtGatewayIp.setDescription('This object is the IP address of Gateway Router.')
iwfEthernetNicStat = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 7))
iwfEthernetNicStatTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1), )
if mibBuilder.loadTexts: iwfEthernetNicStatTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEthernetNicStatTable.setDescription('Table containing objects for Ethernet Nic statistics for IWF Gateway Cards in the chassis.')
iwfEthernetNicStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfEnsIndex"))
if mibBuilder.loadTexts: iwfEthernetNicStatEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEthernetNicStatEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfEnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsIndex.setDescription('A unique index identifying the Gateway Card to which the Ethernet Nic Statistics objects pertain')
iwfEnsPacketsRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsRxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsRxPerSec.setDescription('This object is the packets received per second.')
iwfEnsPacketsTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsTxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsTxPerSec.setDescription('This object is the packets sent per second.')
iwfEnsBytesRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsBytesRxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsBytesRxPerSec.setDescription('This object is the bytes received per second.')
iwfEnsBytesTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsBytesTxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsBytesTxPerSec.setDescription('This object is the bytes sent per second.')
iwfEnsPacketsRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsRxErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsRxErrors.setDescription('This object is the Packets received Errors.')
iwfEnsPacketsRxUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsRxUnknown.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsRxUnknown.setDescription('This object is the Packets received Unknown.')
iwfEnsPacketsOutBoundDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsOutBoundDiscarded.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsOutBoundDiscarded.setDescription('This object is the Packets out-bound discarded.')
iwfEnsPacketsOutBoundErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsPacketsOutBoundErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsPacketsOutBoundErrors.setDescription('This object is the Packets out-bound Errors.')
iwfEnsOutputQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 7, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfEnsOutputQueueLength.setStatus('mandatory')
if mibBuilder.loadTexts: iwfEnsOutputQueueLength.setDescription('This object is the Output Queue Length.')
iwfIpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 8))
iwfIpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1), )
if mibBuilder.loadTexts: iwfIpStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIpStatsTable.setDescription('Table containing objects for IP statistics for IWF Gateway Cards in the chassis.')
iwfIpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfIsIndex"))
if mibBuilder.loadTexts: iwfIpStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIpStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfIsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsIndex.setDescription('A unique index identifying the Gateway Card to which the IP Statistics objects pertain')
iwfIsPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsPacketsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsPacketsRx.setDescription('This object is the packets received counter.')
iwfIsRxHeaderErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsRxHeaderErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsRxHeaderErrors.setDescription('This Object is the reived header errors counter.')
iwfIsIpReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsIpReceived.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsIpReceived.setDescription('This Object is the IP received counter.')
iwfIsDatagramsForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsDatagramsForwarded.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsDatagramsForwarded.setDescription('This Object is the datagrams forwarded counter.')
iwfIsUnknownProtocolRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsUnknownProtocolRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsUnknownProtocolRx.setDescription('This Object is the unknown protocol received counter.')
iwfIsRxPacketsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsRxPacketsDiscarded.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsRxPacketsDiscarded.setDescription('This Object is the received packets discarded counter.')
iwfIsRxPacketsDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsRxPacketsDelivered.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsRxPacketsDelivered.setDescription('This Object is the received packets delivered counter.')
iwfIsOutputRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsOutputRequests.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsOutputRequests.setDescription('This Object is the output requests counter.')
iwfIsRoutingDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsRoutingDiscarded.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsRoutingDiscarded.setDescription('This Object is the routing discards counter.')
iwfIsDiscardedOutputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsDiscardedOutputPackets.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsDiscardedOutputPackets.setDescription('This Object is the discarded output packeets counter.')
iwfIsOutputPacketsNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsOutputPacketsNoRoute.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsOutputPacketsNoRoute.setDescription('This Object is the output no route counter.')
iwfIsReAssemblyRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsReAssemblyRequired.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsReAssemblyRequired.setDescription('This Object is the re-assembly required counter.')
iwfIsReAssemblySuccessful = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsReAssemblySuccessful.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsReAssemblySuccessful.setDescription('This Object is the re-assembly successful counter.')
iwfIsReAssmeblyFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsReAssmeblyFailures.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsReAssmeblyFailures.setDescription('This Object is the re-assembly failures counter.')
iwfIsDatagramsSuccessFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsDatagramsSuccessFragment.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsDatagramsSuccessFragment.setDescription('This Object is the datagrams successfully fragmented counter.')
iwfIsDatagramsFailFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsDatagramsFailFragment.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsDatagramsFailFragment.setDescription('This Object is the datagrams failing fragmentation counter.')
iwfIsFragmentCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 8, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIsFragmentCreated.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIsFragmentCreated.setDescription('This Object is the framents created counter.')
iwfIcmpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 9))
iwfIcmpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1), )
if mibBuilder.loadTexts: iwfIcmpStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStatsTable.setDescription('Table containing objects for ICMP statistics for IWF Gateway Cards in the chassis.')
iwfIcmpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfIcmpStIndex"))
if mibBuilder.loadTexts: iwfIcmpStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfIcmpStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStIndex.setDescription('A unique index identifying the Gateway Card to which the ICMP Statistics objects pertain')
iwfIcmpStMessagesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStMessagesRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStMessagesRx.setDescription('This object is the ICMP messages received.')
iwfIcmpStMessagesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStMessagesTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStMessagesTx.setDescription('This object is the ICMP messages sent.')
iwfIcmpStErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStErrorsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStErrorsRx.setDescription('This object is the ICMP errors received.')
iwfIcmpStErrorsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStErrorsTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStErrorsTx.setDescription('This object is the ICMP errors sent.')
iwfIcmpStDestUnreachableTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStDestUnreachableTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStDestUnreachableTx.setDescription('This object is the ICMP destination unreachable sent.')
iwfIcmpStDestUnreachableRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStDestUnreachableRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStDestUnreachableRx.setDescription('This object is the ICMP destination unreachable received.')
iwfIcmpStTimeExceededTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStTimeExceededTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStTimeExceededTx.setDescription('This object is the ICMP time exceeded Sent.')
iwfIcmpStTimeExceededRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStTimeExceededRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStTimeExceededRx.setDescription('This object is the ICMP time exceeded received.')
iwfIcmpStParameterProblemsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStParameterProblemsTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStParameterProblemsTx.setDescription('This object is the ICMP parameter problems sent.')
iwfIcmpStParameterProblemsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStParameterProblemsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStParameterProblemsRx.setDescription('This object is the ICMP parameter problems received.')
iwfIcmpStSourceQuenchsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStSourceQuenchsTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStSourceQuenchsTx.setDescription('This object is the ICMP source quenchd sent.')
iwfIcmpStSourceQuenchsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStSourceQuenchsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStSourceQuenchsRx.setDescription('This object is the ICMP source quenchd received.')
iwfIcmpStRedirectsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStRedirectsTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStRedirectsTx.setDescription('This object is the ICMP redirects sent.')
iwfIcmpStRedirectsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStRedirectsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStRedirectsRx.setDescription('This object is the ICMP redirects received.')
iwfIcmpStEchosTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStEchosTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStEchosTx.setDescription('This object is the ICMP echos sent.')
iwfIcmpStEchosRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStEchosRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStEchosRx.setDescription('This object is the ICMP echos received.')
iwfIcmpStEchosRepliesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStEchosRepliesTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStEchosRepliesTx.setDescription('This object is the ICMP echos replies sent.')
iwfIcmpStEchosRepliesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStEchosRepliesRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStEchosRepliesRx.setDescription('This object is the ICMP echos replies received.')
iwfIcmpStTimeStampsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStTimeStampsTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStTimeStampsTx.setDescription('This object is the ICMP time-stamps sent.')
iwfIcmpStTimeStampsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStTimeStampsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStTimeStampsRx.setDescription('This object is the ICMP time-stamps received.')
iwfIcmpStAddressMasksTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStAddressMasksTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStAddressMasksTx.setDescription('This object is the ICMP address masks sent.')
iwfIcmpStAddressMasksRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRx.setDescription('This object is the ICMP address masks received.')
iwfIcmpStAddressMasksRepliesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRepliesTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRepliesTx.setDescription('This object is the ICMP address masks replies sent.')
iwfIcmpStAddressMasksRepliesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 9, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRepliesRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfIcmpStAddressMasksRepliesRx.setDescription('This object is the ICMP address masks replies received.')
iwfTcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 10))
iwfTcpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1), )
if mibBuilder.loadTexts: iwfTcpStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStatsTable.setDescription('Table containing objects for TCP statistics for IWF Gateway Cards in the chassis.')
iwfTcpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfTcpStIndex"))
if mibBuilder.loadTexts: iwfTcpStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfTcpStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStIndex.setDescription('A unique index identifying the Gateway Card to which the TCP Statistics objects pertain')
iwfTcpStActiveOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStActiveOpens.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStActiveOpens.setDescription('This object is the TCP active opens.')
iwfTcpStPassiveOpens = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStPassiveOpens.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStPassiveOpens.setDescription('This object is the TCP passive opens.')
iwfTcpStFailedConnectAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStFailedConnectAttempts.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStFailedConnectAttempts.setDescription('This object is the TCP failed connection attempts.')
iwfTcpStResetConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStResetConnections.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStResetConnections.setDescription('This object is the TCP reset connections.')
iwfTcpStCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStCurrentConnections.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStCurrentConnections.setDescription('This object is the TCP current connections.')
iwfTcpStSegmentRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStSegmentRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStSegmentRx.setDescription('This object is the TCP segments received.')
iwfTcpStSegmentTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStSegmentTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStSegmentTx.setDescription('This object is the TCP segments sent.')
iwfTcpStSegmentRetransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 10, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpStSegmentRetransmitted.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpStSegmentRetransmitted.setDescription('This object is the TCP segments retransmitted.')
iwfUdpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 11))
iwfUdpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1), )
if mibBuilder.loadTexts: iwfUdpStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStatsTable.setDescription('Table containing objects for UDP statistics for IWF Gateway Cards in the chassis.')
iwfUdpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfUdpStIndex"))
if mibBuilder.loadTexts: iwfUdpStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfUdpStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfUdpStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStIndex.setDescription('A unique index identifying the Gateway Card to which the UDP Statistics objects pertain')
iwfUdpStDatagramRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfUdpStDatagramRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStDatagramRx.setDescription('This objet is the UDP datagram received counter.')
iwfUdpStDatagramNoPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfUdpStDatagramNoPorts.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStDatagramNoPorts.setDescription('This objet is the UDP datagram No ports counter.')
iwfUdpStErrorsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfUdpStErrorsRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStErrorsRx.setDescription('This objet is the UDP errors received counter.')
iwfUdpStDatagramtx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 11, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfUdpStDatagramtx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfUdpStDatagramtx.setDescription('This objet is the UDP datagram sent counter.')
iwfPppStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 12))
iwfPppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1), )
if mibBuilder.loadTexts: iwfPppStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStatsTable.setDescription('Table containing objects for PPP statistics for IWF Gateway Cards in the chassis.')
iwfPppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPppStIndex"))
if mibBuilder.loadTexts: iwfPppStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfPppStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStIndex.setDescription('A unique index identifying the Gateway Card to which the PPP Statistics objects pertain')
iwfPppStBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStBytesTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStBytesTx.setDescription('This object is the PPP bytes transmitted.')
iwfPppStBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStBytesRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStBytesRx.setDescription('This object is the PPP bytes received.')
iwfPppStFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStFramesTx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStFramesTx.setDescription('This object is the PPP frames transmitted.')
iwfPppStFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStFramesRx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStFramesRx.setDescription('This object is the PPP frames received.')
iwfPppStPercentCompressionOut = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStPercentCompressionOut.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStPercentCompressionOut.setDescription('This object is the PPP percent compressio out.')
iwfPppStPercentCompressionIn = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStPercentCompressionIn.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStPercentCompressionIn.setDescription('This object is the PPP percent compressio in.')
iwfPppStCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStCrcErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStCrcErrors.setDescription('This object is the PPP CRC errors.')
iwfPppStAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStAlignmentErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStAlignmentErrors.setDescription('This object is the PPP alignment errors.')
iwfPppStTimeOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStTimeOutErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStTimeOutErrors.setDescription('This object is the PPP time-out errors.')
iwfPppStTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStTotalErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStTotalErrors.setDescription('This object is the PPP total errors.')
iwfPppStBytesTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStBytesTxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStBytesTxPerSec.setDescription('This object is the PPP bytes transmitted per seconds.')
iwfPppStBytesRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStBytesRxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStBytesRxPerSec.setDescription('This object is the PPP bytes received per seconds.')
iwfPppStFramesTxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStFramesTxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStFramesTxPerSec.setDescription('This object is the PPP frames transmitted per seconds.')
iwfPppStFramesRxPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStFramesRxPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStFramesRxPerSec.setDescription('This object is the PPP frames received per seconds.')
iwfPppStTotalErrorPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStTotalErrorPerSec.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStTotalErrorPerSec.setDescription('This object is the PPP total errors per seconds.')
iwfPppStTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 12, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppStTotalConnections.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppStTotalConnections.setDescription('This object is the PPP total connections.')
iwfTdmStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 13))
iwfTdmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1), )
if mibBuilder.loadTexts: iwfTdmStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStatsTable.setDescription('Table containing objects for TDM statistics for IWF Gateway Cards in the chassis.')
iwfTdmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfTdmStIndex"))
if mibBuilder.loadTexts: iwfTdmStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfTdmStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStIndex.setDescription('A unique index identifying the Gateway Card to which the TDM Statistics objects pertain')
iwfTdmStFramesOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStFramesOverruns.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStFramesOverruns.setDescription('This object is the TDM Bus frame overruns counter.')
iwfTdmStAbortFramesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStAbortFramesrx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStAbortFramesrx.setDescription('This object is the TDM Bus abort frames received counter.')
iwfTdmStCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStCrcErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStCrcErrors.setDescription('This object is the TDM Bus CRC errors counter.')
iwfTdmStClockLossis = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStClockLossis.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStClockLossis.setDescription('This object is the TDM Bus clock losses counter.')
iwfTdmStAccumSubsystemErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStAccumSubsystemErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStAccumSubsystemErrors.setDescription('This object is the TDM Bus accumulated number of subsystem errors counter.')
iwfTdmStClkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clockUp", 1), ("clockDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmStClkStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmStClkStatus.setDescription('This object is the TDM Bus Clock Up/Down status.')
iwfPbStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 14))
iwfPbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1), )
if mibBuilder.loadTexts: iwfPbStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStatsTable.setDescription('Table containing objects for Packet Bus statistics for IWF Gateway Cards in the chassis.')
iwfPbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPbStIndex"))
if mibBuilder.loadTexts: iwfPbStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfPbStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStIndex.setDescription('A unique index identifying the Gateway Card to which the Packet Bus Statistics objects pertain')
iwfPbStFramesOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStFramesOverruns.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStFramesOverruns.setDescription('This object is the Packet Bus frame overruns counter.')
iwfPbStAbortFramesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStAbortFramesrx.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStAbortFramesrx.setDescription('This object is the Packet Bus abort frames received counter.')
iwfPbStCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStCrcErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStCrcErrors.setDescription('This object is the Packet Bus CRC errors counter.')
iwfPbStClockLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStClockLosses.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStClockLosses.setDescription('This object is the Packet Bus clock losses counter.')
iwfPbStAccumSubsystemErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStAccumSubsystemErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStAccumSubsystemErrors.setDescription('This object is the Packet Bus accumulated number of subsystem errors counter.')
iwfPbStClkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clockUp", 1), ("clockDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStClkStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStClkStatus.setDescription('This object is the Packet Bus Clock up/down status.')
iwfPbStLinkLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 14, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbStLinkLosses.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbStLinkLosses.setDescription('This object is the Packet Bus link losses counter.')
iwfQ921Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 15))
iwfQ921StatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 15, 1), )
if mibBuilder.loadTexts: iwfQ921StatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ921StatsTable.setDescription('Table containing objects for Q921 Call Control statistics for IWF Gateway Cards in the chassis.')
iwfQ921StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 15, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfQ921StIndex"))
if mibBuilder.loadTexts: iwfQ921StatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ921StatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfQ921StIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ921StIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ921StIndex.setDescription('A unique index identifying the Gateway Card to which the Q921 Call Control Statistics objects pertain')
iwfQ921StAccumLinkLosses = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 15, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ921StAccumLinkLosses.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ921StAccumLinkLosses.setDescription('This object is the Frame Relay accumulated number of link losses for Q921 call control.')
iwfQ921StAccumFrsvcSusSysError = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 15, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ921StAccumFrsvcSusSysError.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ921StAccumFrsvcSusSysError.setDescription('This object is accumulated number of frame relay service subsystem errors for Q921 call control.')
iwfQ933Stats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 16))
iwfQ933StatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 16, 1), )
if mibBuilder.loadTexts: iwfQ933StatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ933StatsTable.setDescription('Table containing objects for Q933 Call Control statistics for IWF Gateway Cards in the chassis.')
iwfQ933StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 16, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfQ933StIndex"))
if mibBuilder.loadTexts: iwfQ933StatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ933StatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfQ933StIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ933StIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ933StIndex.setDescription('A unique index identifying the Gateway Card to which the Q933 Call Control Statistics objects pertain')
iwfQ933StAccumUknownIframes = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 16, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ933StAccumUknownIframes.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ933StAccumUknownIframes.setDescription('This object is the Q933 accumulated number of unknown I-frames.')
iwfQ933StAccumOutOfSeqIframes = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 16, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQ933StAccumOutOfSeqIframes.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQ933StAccumOutOfSeqIframes.setDescription('This object is the Q933 accumulated number of out of sequence I frames.')
iwfMdmStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 17))
iwfMdmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 17, 1), )
if mibBuilder.loadTexts: iwfMdmStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfMdmStatsTable.setDescription('Table containing objects for Modem commands statistics for IWF Gateway Cards in the chassis.')
iwfMdmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 17, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfMdmStIndex"))
if mibBuilder.loadTexts: iwfMdmStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfMdmStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfMdmStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfMdmStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfMdmStIndex.setDescription('A unique index identifying the Gateway Card to which the Modem commands Statistics objects pertain')
iwfMdmStAccumInvalidAtCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfMdmStAccumInvalidAtCmd.setStatus('mandatory')
if mibBuilder.loadTexts: iwfMdmStAccumInvalidAtCmd.setDescription('This object is the accumulated number of invalid AT commands to the modem.')
iwfCmpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 18))
iwfCmpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 18, 1), )
if mibBuilder.loadTexts: iwfCmpStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCmpStatsTable.setDescription('Table containing objects for Compression statistics for IWF Gateway Cards in the chassis.')
iwfCmpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 18, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCmpStIndex"))
if mibBuilder.loadTexts: iwfCmpStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCmpStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCmpStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCmpStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCmpStIndex.setDescription('A unique index identifying the Gateway Card to which the Compression Statistics objects pertain')
iwfCmpStAccumSubsysErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 18, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCmpStAccumSubsysErrors.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCmpStAccumSubsysErrors.setDescription('This object is the accumulated number of compression subsystem errors.')
iwfCallStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 19))
iwfCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1), )
if mibBuilder.loadTexts: iwfCallStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStatsTable.setDescription('Table containing objects for Call statistics for IWF Gateway Cards in the chassis.')
iwfCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCallStIndex"))
if mibBuilder.loadTexts: iwfCallStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfCallStIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStIndex.setDescription('A unique index identifying the Gateway Card to which the Call Statistics objects pertain')
iwfCallStTotConnAd9600MobOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnAd9600MobOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnAd9600MobOrg.setDescription('This object is the accumulated number of Connected AD 9600 Mobile Originated Calls counter.')
iwfCallStTotConnAd14400MobOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnAd14400MobOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnAd14400MobOrg.setDescription('This object is the accumulated number of Connected AD 14400 Mobile Originated Calls counter.')
iwfCallStTotConnFax9600MobOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnFax9600MobOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnFax9600MobOrg.setDescription('This object is the accumulated number of Connected FAX 9600 Mobile Originated Calls counter.')
iwfCallStTotConnFax14400MobOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnFax14400MobOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnFax14400MobOrg.setDescription('This object is the accumulated number of Connected FAX 14400 Mobile Originated Calls counter.')
iwfCallStTotConnAd9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnAd9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnAd9600MoTerm.setDescription('This object is the accumulated number of Connected AD 9600 Mobile Terminated Calls counter.')
iwfCallStTotConnAd14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnAd14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnAd14400MoTerm.setDescription('This object is the accumulated number of Connected AD 14400 Mobile Terminated Calls counter.')
iwfCallStTotConnFax9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnFax9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnFax9600MoTerm.setDescription('This object is the accumulated number of Connected FAX 9600 Mobile Terminated Calls counter.')
iwfCallStTotConnFax14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotConnFax14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotConnFax14400MoTerm.setDescription('This object is the accumulated number of Connected FAX 14400 Mobile Terminated Calls counter.')
iwfCallStTotTermAd9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermAd9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermAd9600MoOrg.setDescription('This object is the accumulated number of Terminated AD 9600 Mobile Originated Calls counter.')
iwfCallStTotTermAd14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermAd14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermAd14400MoOrg.setDescription('This object is the accumulated number of Terminated AD 14400 Mobile Originated Calls counter.')
iwfCallStTotTermFax9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermFax9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermFax9600MoOrg.setDescription('This object is the accumulated number of Terminated FAX 9600 Mobile Originated Calls counter.')
iwfCallStTotTermFax14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermFax14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermFax14400MoOrg.setDescription('This object is the accumulated number of Terminated FAX 14400 Mobile Originated Calls counter.')
iwfCallStTotTermAd9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermAd9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermAd9600MoTerm.setDescription('This object is the accumulated number of Terminated AD 9600 Mobile Terminated Calls counter.')
iwfCallStTotTermAd14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermAd14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermAd14400MoTerm.setDescription('This object is the accumulated number of Terminated AD 14400 Mobile Terminated Calls counter.')
iwfCallStTotTermFax9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermFax9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermFax9600MoTerm.setDescription('This object is the accumulated number of Terminated FAX 9600 Mobile Terminated Calls counter.')
iwfCallStTotTermFax14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotTermFax14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotTermFax14400MoTerm.setDescription('This object is the accumulated number of Terminated FAX 14400 Mobile Terminated Calls counter.')
iwfCallStTotCntgAd9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgAd9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgAd9600MoOrg.setDescription('This object is the accumulated number of Connecting AD 9600 Mobile Originated Calls counter.')
iwfCallStTotCntgAd14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgAd14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgAd14400MoOrg.setDescription('This object is the accumulated number of Connecting AD 14400 Mobile Originated Calls counter.')
iwfCallStTotCntgFax9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgFax9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgFax9600MoOrg.setDescription('This object is the accumulated number of Connecting FAX 9600 Mobile Originated Calls counter.')
iwfCallStTotCntgFax14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgFax14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgFax14400MoOrg.setDescription('This object is the accumulated number of Connecting FAX 14400 Mobile Originated Calls counter.')
iwfCallStTotCntgAd9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgAd9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgAd9600MoTerm.setDescription('This object is the accumulated number of Connecting AD 9600 Mobile Terminated Calls counter.')
iwfCallStTotCntgAd14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgAd14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgAd14400MoTerm.setDescription('This object is the accumulated number of Connecting AD 14400 Mobile Terminated Calls counter.')
iwfCallStTotCntgFax9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgFax9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgFax9600MoTerm.setDescription('This object is the accumulated number of Connecting FAX 9600 Mobile Terminated Calls counter.')
iwfCallStTotCntgFax14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCntgFax14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCntgFax14400MoTerm.setDescription('This object is the accumulated number of Connecting FAX 14400 Mobile Terminated Calls counter.')
iwfCallStTotDiscAd9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscAd9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscAd9600MoOrg.setDescription('This object is the accumulated number of Disconnecting AD 9600 Mobile Originated Calls counter.')
iwfCallStTotDiscAd14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscAd14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscAd14400MoOrg.setDescription('This object is the accumulated number of Disconnecting AD 14400 Mobile Originated Calls counter.')
iwfCallStTotDiscFax9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscFax9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscFax9600MoOrg.setDescription('This object is the accumulated number of Disconnecting FAX 9600 Mobile Originated Calls counter.')
iwfCallStTotDiscFax14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscFax14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscFax14400MoOrg.setDescription('This object is the accumulated number of Disconnecting FAX 14400 Mobile Originated Calls counter.')
iwfCallStTotDiscAd9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscAd9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscAd9600MoTerm.setDescription('This object is the accumulated number of Disconnecting AD 9600 Mobile Terminated Calls counter.')
iwfCallStTotDiscAd14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscAd14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscAd14400MoTerm.setDescription('This object is the accumulated number of Disconnecting AD 14400 Mobile Terminated Calls counter.')
iwfCallStTotDiscFax9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscFax9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscFax9600MoTerm.setDescription('This object is the accumulated number of Disconnecting FAX 9600 Mobile Terminated Calls counter.')
iwfCallStTotDiscFax14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotDiscFax14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotDiscFax14400MoTerm.setDescription('This object is the accumulated number of Disconnecting FAX 14400 Mobile Terminated Calls counter.')
iwfCallStTotCompv42MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCompv42MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCompv42MoOrg.setDescription('This object is the accumulated number of Compressed V.42bis Mobile Originated Calls counter.')
iwfCallStTotCompMmrMoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCompMmrMoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCompMmrMoOrg.setDescription('This object is the accumulated number of Compressed MMR Mobile Originated Calls counter.')
iwfCallStTotCompv42MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCompv42MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCompv42MoTerm.setDescription('This object is the accumulated number of Compressed V.42bis Mobile Terminated Calls counter.')
iwfCallStTotCompMmrMoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotCompMmrMoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotCompMmrMoTerm.setDescription('This object is the accumulated number of Compressed MMR Mobile Terminated Calls counter.')
iwfCallStTotFailAd9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailAd9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailAd9600MoOrg.setDescription('This object is the accumulated number of Failed AD 9600 Mobile Originated Calls counter.')
iwfCallStTotFailAd14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailAd14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailAd14400MoOrg.setDescription('This object is the accumulated number of Failed AD 14400 Mobile Originated Calls counter.')
iwfCallStTotFailFax9600MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailFax9600MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailFax9600MoOrg.setDescription('This object is the accumulated number of Failed FAX 9600 Mobile Originated Calls counter.')
iwfCallStTotFailFax14400MoOrg = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailFax14400MoOrg.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailFax14400MoOrg.setDescription('This object is the accumulated number of Failed FAX 14400 Mobile Originated Calls counter.')
iwfCallStTotFailAd9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailAd9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailAd9600MoTerm.setDescription('This object is the accumulated number of Failed AD 9600 Mobile Terminated Calls counter.')
iwfCallStTotFailAd14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailAd14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailAd14400MoTerm.setDescription('This object is the accumulated number of Failed AD 14400 Mobile Terminated Calls counter.')
iwfCallStTotFailFax9600MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailFax9600MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailFax9600MoTerm.setDescription('This object is the accumulated number of Failed FAX 9600 Mobile Terminated Calls counter.')
iwfCallStTotFailFax14400MoTerm = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStTotFailFax14400MoTerm.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStTotFailFax14400MoTerm.setDescription('This object is the accumulated number of Failed FAX 14400 Mobile Terminated Calls counter.')
iwfCallStCurrentNumConnCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStCurrentNumConnCalls.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStCurrentNumConnCalls.setDescription('This object is the current number of connected Calls counter.')
iwfCallStCurrentNumCompCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStCurrentNumCompCalls.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStCurrentNumCompCalls.setDescription('This object is the current number of compressed Calls counter.')
iwfCallStQncConnectedSs9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedSs9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedSs9600.setDescription('Accumulated # of connected 9600 QNC single stack calls.')
iwfCallStQncConnectedL2tp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedL2tp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedL2tp9600.setDescription('Accumulated # of connected 9600 QNC L2TP calls.')
iwfCallStQncConnectedPptp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedPptp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedPptp9600.setDescription('Accumulated # of connected 9600 QNC PPTP calls.')
iwfCallStQncConnectedPpp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedPpp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedPpp9600.setDescription('Accumulated # of connected 9600 QNC single stack calls.')
iwfCallStQncTerminatedSs9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedSs9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedSs9600.setDescription('Accumulated # of terminated 9600 QNC single stack calls.')
iwfCallStQncTerminatedL2tp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedL2tp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedL2tp9600.setDescription('Accumulated # of terminated 9600 QNC L2TP calls.')
iwfCallStQncTerminatedPptp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedPptp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedPptp9600.setDescription('Accumulated # of terminated 9600 QNC PPTP calls.')
iwfCallStQncTerminatedPpp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedPpp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedPpp9600.setDescription('Accumulated # of terminated 9600 QNC PPP calls.')
iwfCallStQncConnectingSs9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingSs9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingSs9600.setDescription('Accumulated # of connecting 9600 QNC single stack calls.')
iwfCallStQncConnectingL2tp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingL2tp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingL2tp9600.setDescription('Accumulated # of connecting 9600 QNC L2TP calls.')
iwfCallStQncConnectingPptp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingPptp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingPptp9600.setDescription('Accumulated # of connecting 9600 QNC PPTP calls.')
iwfCallStQncConnectingPpp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingPpp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingPpp9600.setDescription('Accumulated # of connecting 9600 QNC PPP calls.')
iwfCallStQncDisconnectingSs9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDisconnectingSs9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDisconnectingSs9600.setDescription('Accumulated # of disconnecting 9600 QNC single stack calls.')
iwfCallStQncDisconnectingL2tp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDisconnectingL2tp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDisconnectingL2tp9600.setDescription('Accumulated # of disconnecting 9600 QNC L2TP calls.')
iwfCallStQncDisconnectingPptp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDisconnectingPptp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDisconnectingPptp9600.setDescription('Accumulated # of disconnecting 9600 QNC PPTP calls.')
iwfCallStQncDisconnectingPpp9600 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDisconnectingPpp9600.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDisconnectingPpp9600.setDescription('Accumulated # of disconnecting 9600 QNC PPP calls.')
iwfCallStQncConnectedSs14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedSs14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedSs14400.setDescription('Accumulated # of connected 14400 QNC single stack calls.')
iwfCallStQncConnectedL2tp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedL2tp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedL2tp14400.setDescription('Accumulated # of connected 14400 QNC L2TP calls.')
iwfCallStQncConnectedPptp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedPptp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedPptp14400.setDescription('Accumulated # of connected 14400 QNC PPTP calls.')
iwfCallStQncConnectedPpp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectedPpp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectedPpp14400.setDescription('Accumulated # of connected 14400 QNC PPP calls.')
iwfCallStQncTerminatedSs14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedSs14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedSs14400.setDescription('Accumulated # of terminated 14400 QNC single stack calls.')
iwfCallStQncTerminatedL2tp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedL2tp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedL2tp14400.setDescription('Accumulated # of terminated 14400 QNC L2TP calls.')
iwfCallStQncTerminatedPptp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedPptp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedPptp14400.setDescription('Accumulated # of terminated 14400 QNC PPTP calls.')
iwfCallStQncTerminatedPpp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncTerminatedPpp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncTerminatedPpp14400.setDescription('Accumulated # of terminated 14400 QNC PPP calls.')
iwfCallStQncConnectingSs14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingSs14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingSs14400.setDescription('Accumulated # of connecting 14400 QNC single stack calls.')
iwfCallStQncConnectingL2tp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingL2tp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingL2tp14400.setDescription('Accumulated # of connecting 14400 QNC L2TP calls.')
iwfCallStQncConnectingPptp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingPptp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingPptp14400.setDescription('Accumulated # of connecting 14400 QNC PPTP calls.')
iwfCallStQncConnectingPpp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncConnectingPpp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncConnectingPpp14400.setDescription('Accumulated # of connecting 14400 QNC PPP calls.')
iwfCallStQncDiscconnectingSs14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingSs14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingSs14400.setDescription('Accumulated # of disconnecting 14400 QNC single stack calls.')
iwfCallStQncDiscconnectingL2tp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingL2tp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingL2tp14400.setDescription('Accumulated # of disconnecting 14400 QNC L2TP calls.')
iwfCallStQncDiscconnectingPptp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingPptp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingPptp14400.setDescription('Accumulated # of disconnecting 14400 QNC PPTP calls.')
iwfCallStQncDiscconnectingPpp14400 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 19, 1, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingPpp14400.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCallStQncDiscconnectingPpp14400.setDescription('Accumulated # of disconnecting 14400 QNC PPP calls.')
iwfCfgTdmTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 20))
iwfCfgTdmTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1), )
if mibBuilder.loadTexts: iwfCfgTdmTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmTrapTable.setDescription('Table containing objects for TDM Trap for the IWF Gateway Cards in the chassis.')
iwfCfgTdmTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfTdmTrIndex"))
if mibBuilder.loadTexts: iwfCfgTdmTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfTdmTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrIndex.setDescription('A unique index identifying the Gateway Card to which the TDM Trap objects pertain')
iwfTdmTrChanMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperStatus.setDescription('This object is the operatinal TDM channel status marginally operational trap.')
iwfTdmTrChanNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanNonOperStatus.setDescription('This object is the operatinal TDM channel status non operational trap.')
iwfTdmTrChanClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanClearStatus.setDescription('This object is the operatinal TDM channel status clear trap.')
iwfTdmTrChanMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperBitMask.setDescription('This object is the TDM channel Marginaly Operational Trap Bit Mask.')
iwfTdmTrChanMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperThreshCnt.setDescription('This object is the operatinal TDM channel status marginally operational trap threshold count.')
iwfTdmTrChanNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanNonOperThreshCnt.setDescription('This object is the operatinal TDM channel status Non operational trap threshold count.')
iwfTdmTrChanClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanClearThreshCnt.setDescription('This object is the operatinal TDM channel status Clear trap threshold count.')
iwfTdmTrChanMrgOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanMrgOperThreshTime.setDescription('This object is the operatinal TDM channel status marginally operational trap threshold time.')
iwfTdmTrChanNonOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanNonOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanNonOperThreshTime.setDescription('This object is the operational TDM channel status Non operational trap threshold time.')
iwfTdmTrChanClearThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmTrChanClearThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChanClearThreshTime.setDescription('This object is the operational TDM channel status Clear trap threshold time.')
iwfTdmTrChCrcErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrChCrcErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChCrcErrCnt.setDescription('This object is the TDM channel CRC ERROR Counter.')
iwfTdmTrChAbortErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrChAbortErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChAbortErrCnt.setDescription('This object is the TDM channel ABORT ERROR Counter.')
iwfTdmTrChFrameOverflowCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrChFrameOverflowCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrChFrameOverflowCnt.setDescription('This object is the TDM channel Frame Overflow Counter.')
iwfTdmTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrStatus.setDescription('This object is the TDM channel Trap Status.')
iwfTdmTrTdmChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrTdmChannel.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrTdmChannel.setDescription('This object is used for event reporting purposes to represent the TDM Channel.')
iwfTdmTrMunichChip = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrMunichChip.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrMunichChip.setDescription('This object is used for event reporting purposes to represent the Munich Chip.')
iwfTdmTrMunichChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 20, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmTrMunichChannel.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmTrMunichChannel.setDescription('This object is used for event reporting purposes to represent the Munich Channel.')
iwfCfgTdmSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 21))
iwfCfgTdmSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1), )
if mibBuilder.loadTexts: iwfCfgTdmSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmSsTrapTable.setDescription('Table containing objects for TDM Sub system Trap for IWF Gateway Cards in the chassis.')
iwfCfgTdmSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgTdmSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgTdmSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmSsTrapEntry.setDescription('There is one Operatinal row for each Gateway Card in the NAS chassis.')
iwfCfgTdmSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgTdmSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the TDM Sub system Trap objects pertain')
iwfTdmSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperStatus.setDescription('This object is the operational TDM channel Sub System status marginally operational trap.')
iwfTdmSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrNonOperStatus.setDescription('This object is the operatinal TDM channel Sub System status Non operational trap.')
iwfTdmSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrClearStatus.setDescription('This object is the operatinal TDM channel Sub System status Clear trap. ')
iwfTdmSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperThreshCnt.setDescription('This object is the operatinal TDM channel sub system status marginally operational trap threshold count.')
iwfTdmSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrNonOperThreshCnt.setDescription('This object is the operatinal TDM channel sub system status non operational trap threshold count.')
iwfTdmSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrClearThreshCnt.setDescription('This object is the operational TDM channel sub system status clear operational trap threshold count.')
iwfTdmSsTrMrgOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrMrgOperThreshTime.setDescription('This object is the marginally operational TDM channel sub system status clear operational trap threshold timer in seconds.')
iwfTdmSsTrNonOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrNonOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrNonOperThreshTime.setDescription('This object is the non-operational TDM channel sub system status clear operational trap threshold timer in seconds.')
iwfTdmSsTrClearThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmSsTrClearThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrClearThreshTime.setDescription('This object is the operational TDM channel sub system status clear operational trap threshold timer in seconds.')
iwfTdmSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 21, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmSsTrStatus.setDescription('This object is the TDM channel sub system status.')
iwfCfgPbTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 22))
iwfCfgPbTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1), )
if mibBuilder.loadTexts: iwfCfgPbTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbTrapTable.setDescription('Table containing objects for Packet Bus Trap for IWF Gateway Cards in the chassis.')
iwfCfgPbTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPbTrIndex"))
if mibBuilder.loadTexts: iwfCfgPbTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfPbTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrIndex.setDescription('A unique index identifying the Gateway Card to which the Packet Bus Trap objects pertain')
iwfPbTrChanMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanMrgOperStatus.setDescription('This object is the operational the Packet Bus status marginally operational trap.')
iwfPbTrChanNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanNonOperStatus.setDescription('This object is the operational Packet Bus status non operational trap.')
iwfPbTrChanClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanClearStatus.setDescription('This object is the operational Packet Bus status clear trap.')
iwfPbTrChanMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanMrgOperBitMask.setDescription('This object is the Packet Bus Marginaly Operational Trap Bit Mask.')
iwfPbTrChanMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanMrgOperThreshCnt.setDescription('This object is the operational Packet Bus status marginally operational trap threshold count.')
iwfPbTrChanNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanNonOperThreshCnt.setDescription('This object is the operational Packet Bus status Non operational trap threshold count.')
iwfPbTrChanClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanClearThreshCnt.setDescription('This object is the operational Packet Bus status Clear trap threshold count.')
iwfPbTrChanMrgOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanMrgOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanMrgOperThreshTime.setDescription('This object is the operational Packet Bus status marginally operational trap threshold time.')
iwfPbTrChanNonOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanNonOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanNonOperThreshTime.setDescription('This object is the operational Packet Bus status Non operational trap threshold time.')
iwfPbTrChanClearThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbTrChanClearThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChanClearThreshTime.setDescription('This object is the operational Packet Bus status Clear trap threshold time.')
iwfPbTrChCrcErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrChCrcErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChCrcErrCnt.setDescription('This object is the Packet Bus CRC ERROR Counter.')
iwfPbTrChAbortErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrChAbortErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChAbortErrCnt.setDescription('This object is the Packet Bus ABORT ERROR Counter.')
iwfPbTrChFrameOverflowCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrChFrameOverflowCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChFrameOverflowCnt.setDescription('This object is the Packet Bus Frame Overflow Counter.')
iwfPbTrChStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrChStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrChStatus.setDescription('This object is the Packet Bus Link Status.')
iwfPbTrModemSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrModemSlot.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrModemSlot.setDescription('This object is used for event reporting purposes to represent the modem slot.')
iwfPbTrModemChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 22, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbTrModemChannel.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbTrModemChannel.setDescription('This object is used for event reporting purposes to represent the Modem Channel.')
iwfCfgPbSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 23))
iwfCfgPbSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1), )
if mibBuilder.loadTexts: iwfCfgPbSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbSsTrapTable.setDescription('Table containing objects for Packet Bus Sub system Trap for IWF Gateway Cards in the chassis.')
iwfCfgPbSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPbSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgPbSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbSsTrapEntry.setDescription('There is one operational row for each Gateway Card in the NAS chassis.')
iwfPbSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the Packet Bus Sub system Trap objects pertain')
iwfPbSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrMrgOperStatus.setDescription('This object is the operational Packet Bus Sub System status marginally operational trap.')
iwfPbSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrNonOperStatus.setDescription('This object is the operational Packet Bus Sub System status Non operational trap.')
iwfPbSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrClearStatus.setDescription('This object is the operational Packet Bus Sub System status Clear trap. ')
iwfPbSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrMrgOperThreshCnt.setDescription('This object is to configure the Packet Bus sub system status marginally operational trap threshold count.')
iwfPbSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrNonOperThreshCnt.setDescription('This object is to configure the Packet Bus sub system status non operational trap threshold count.')
iwfPbSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrClearThreshCnt.setDescription('This object is to configure the Packet Bus sub system status clear operational trap threshold count.')
iwfPbSsTrMrgOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrMrgOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrMrgOperThreshTime.setDescription('This object is to configure the Packet Bus sub system status clear marginally operational trap threshold time in seconds.')
iwfPbSsTrNonOperThreshTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrNonOperThreshTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrNonOperThreshTime.setDescription('This object is to configure the Packet Bus sub system status clear non-operational trap threshold time in seconds.')
iwfPbSsTrClearThreshtime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbSsTrClearThreshtime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrClearThreshtime.setDescription('This object is to configure the Packet Bus sub system status clear operational trap threshold time in seconds.')
iwfPbSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 23, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbSsTrStatus.setDescription('This object is the Packet Bus sub system status.')
iwfCfgPbClkTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 24))
iwfCfgPbClkTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1), )
if mibBuilder.loadTexts: iwfCfgPbClkTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbClkTrapTable.setDescription('Table containing objects for Packet Bus Clock Trap for IWF Gateway Cards in the chassis.')
iwfCfgPbClkTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPbClkTrIndex"))
if mibBuilder.loadTexts: iwfCfgPbClkTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPbClkTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfPbClkTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPbClkTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbClkTrIndex.setDescription('A unique index identifying the Gateway Card to which the Packet Bus Clock Trap objects pertain')
iwfPbClkTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbClkTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbClkTrNonOperStatus.setDescription('This object is the operational Packet Bus Clock status Non operational trap.')
iwfPbClkTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbClkTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbClkTrClearStatus.setDescription('This object is the operational Packet Bus Clock status Clear trap. ')
iwfPbClkTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 24, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPbClkTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPbClkTrNonOperThreshTimer.setDescription('This object is the operational Packet Bus Clock status clear operational trap threshold Count.')
iwfCfgTdmClkTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 25))
iwfCfgTdmClkTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1), )
if mibBuilder.loadTexts: iwfCfgTdmClkTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmClkTrapTable.setDescription('Table containing objects for TDM Clock Trap for IWF Gateway Cards in the chassis.')
iwfCfgTdmClkTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfTdmClkTrIndex"))
if mibBuilder.loadTexts: iwfCfgTdmClkTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTdmClkTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfTdmClkTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTdmClkTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmClkTrIndex.setDescription('A unique index identifying the Gateway Card to which the TDM Clock Trap objects pertain')
iwfTdmClkTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmClkTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmClkTrNonOperStatus.setDescription('This object is the operational TDM Clock status Non operational trap.')
iwfTdmClkTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmClkTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmClkTrClearStatus.setDescription('This object is the operational TDM Clock status Clear trap. ')
iwfTdmClkTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 25, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTdmClkTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTdmClkTrNonOperThreshTimer.setDescription('This object is the operational TDM clock status clear operational trap threshold Count.')
iwfCfgCcSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 26))
iwfCfgCcSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1), )
if mibBuilder.loadTexts: iwfCfgCcSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCcSsTrapTable.setDescription('Table containing objects for Call Control Trap setting for IWF Gateway Cards in the chassis.')
iwfCfgCcSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCcSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgCcSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCcSsTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfCcSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the Call Control Trap objects pertain')
iwfCcSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrMrgOperStatus.setDescription('This object is the current setting of the Call Control status Marginally operational trap.')
iwfCcSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrNonOperStatus.setDescription('This object is the current setting of the Call Control status Non operational trap.')
iwfCcSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrClearStatus.setDescription('This object is the current setting of the Call Control status Clear trap.')
iwfCcSsTrMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrMrgOperBitMask.setDescription('This object is the Call Control Marginally Operational Trap Bit Mask.')
iwfCcSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrMrgOperThreshCnt.setDescription('This object is the Call Control Marginally Operational Trap Threshold Count.')
iwfCcSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrNonOperThreshCnt.setDescription('This object is the Call Control Non Operational Trap Threshold Count.')
iwfCcSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrClearThreshCnt.setDescription('This object is the Call Control Clear Trap Threshold Count.')
iwfCcSsTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrMrgOperThreshTimer.setDescription('This object is the Call Control Marginally Operational Trap Threshold Time.')
iwfCcSsTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrNonOperThreshTimer.setDescription('This object is the Call Control Non Operational Trap Threshold Time.')
iwfCcSsTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCcSsTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrClearThreshTimer.setDescription('This object is the Call Control Clear Trap Threshold Time.')
iwfCcSsTrAd9600NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd9600NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd9600NoSysResCnt.setDescription('This object is the Call Control System resources Exhausted count for AD9600 Calls .')
iwfCcSsTrAd14400NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd14400NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd14400NoSysResCnt.setDescription('This object is the Call Control System resources Exhausted count for AD14400 Calls .')
iwfCcSsTrFax9600NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax9600NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax9600NoSysResCnt.setDescription('This object is the Call Control System resources Exhausted count for FAX9600 Calls .')
iwfCcSsTrFax14400NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax14400NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax14400NoSysResCnt.setDescription('This object is the Call Control System resources Exhausted count for FAX14400 Calls .')
iwfCcSsTrAd9600SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd9600SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd9600SktErrCnt.setDescription('This object is the Call Control Socket Error count for AD9600 Calls .')
iwfCcSsTrAd14400SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd14400SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd14400SktErrCnt.setDescription('This object is the Call Control Socket Error count for AD14400 Calls .')
iwfCcSsTrFax9600SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax9600SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax9600SktErrCnt.setDescription('This object is the Call Control Socket Error count for FAX9600 Calls .')
iwfCcSsTrFax14400SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax14400SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax14400SktErrCnt.setDescription('This object is the Call Control Socket Error count for FAX14400 Calls .')
iwfCcSsTrAd9600PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd9600PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd9600PrtErrCnt.setDescription('This object is the Call Control Protocol Violation Error count for AD9600 Calls .')
iwfCcSsTrAd14400PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd14400PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd14400PrtErrCnt.setDescription('This object is the Call Control Protocol Violation Error count for AD14400 Calls .')
iwfCcSsTrFax9600PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax9600PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax9600PrtErrCnt.setDescription('This object is the Call Control Protocol Violation Error count for FAX9600 Calls .')
iwfCcSsTrFax14400PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax14400PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax14400PrtErrCnt.setDescription('This object is the Call Control Protocol Violation Error count for FAX14400 Calls .')
iwfCcSsTrAd9600NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd9600NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd9600NoMdmResCnt.setDescription('This object is the Call Control No Modem Resources Error count for AD9600 Calls .')
iwfCcSsTrAd14400NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrAd14400NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrAd14400NoMdmResCnt.setDescription('This object is the Call Control No Modem Resources Error count for AD14400 Calls .')
iwfCcSsTrFax9600NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax9600NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax9600NoMdmResCnt.setDescription('This object is the Call Control No Modem Resources Error count for FAX9600 Calls .')
iwfCcSsTrFax14400NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrFax14400NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrFax14400NoMdmResCnt.setDescription('This object is the Call Control No Modem Resources Error count for FAX14400 Calls .')
iwfCcSsTrNoResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrNoResponse.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrNoResponse.setDescription('This object is the Call Control Not Responding Error count.')
iwfCcSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 26, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCcSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCcSsTrStatus.setDescription('This object is the Call Control Status.')
iwfCfgDxSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 27))
iwfCfgDxSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1), )
if mibBuilder.loadTexts: iwfCfgDxSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgDxSsTrapTable.setDescription('Table containing objects for Data Transfer Subsystem Trap for IWF Gateway Cards in the chassis.')
iwfCfgDxSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfDxSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgDxSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgDxSsTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfDxSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the Data Transfer Subsystem Trap objects pertain')
iwfDxSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrMrgOperStatus.setDescription('This object is to see the current operation of the Data Transfer status Marginally operational trap enable/disable.')
iwfDxSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrNonOperStatus.setDescription('This object is to see the current operational setting of the Data Transfer status Non operational trap enable/disable.')
iwfDxSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrClearStatus.setDescription('This object is to see the current operatinal setting of the Data Transfer status Clear trap enable/disable.')
iwfDxSsTrMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrMrgOperBitMask.setDescription('This object is the Data Transfer Marginally Operational Trap Bit Mask.')
iwfDxSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrMrgOperThreshCnt.setDescription('This object is the Data Transfer Marginally Operational Trap Threshold Count.')
iwfDxSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrNonOperThreshCnt.setDescription('This object is the Data Transfer Non Operational Trap Threshold Count.')
iwfDxSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrClearThreshCnt.setDescription('This object is the Data Transfer Clear Trap Threshold Count.')
iwfDxSsTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrMrgOperThreshTimer.setDescription('This object is the Data Transfer Marginally Operational Trap Threshold Time.')
iwfDxSsTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrNonOperThreshTimer.setDescription('This object is the Data Transfer Non Operational Trap Threshold Time.')
iwfDxSsTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfDxSsTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrClearThreshTimer.setDescription('This object is the Data Transfer Clear Trap Threshold Time.')
iwfDxSsTrAd9600NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd9600NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd9600NoSysResCnt.setDescription('This object is the Data Transfer System Resources Exhausted count for AD9600 dropped Calls .')
iwfDxSsTrAd14400NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd14400NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd14400NoSysResCnt.setDescription('This object is the Data Transfer System Resources Exhausted count for AD14400 dropped Calls .')
iwfDxSsTrFax9600NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax9600NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax9600NoSysResCnt.setDescription('This object is the Data Transfer System Resources Exhausted count for FAX9600 dropped Calls .')
iwfDxSsTrFax14400NoSysResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax14400NoSysResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax14400NoSysResCnt.setDescription('This object is the Data Transfer System Resources Exhausted count for FAX14400 dropped Calls .')
iwfDxSsTrAd9600SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd9600SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd9600SktErrCnt.setDescription('This object is the Data Transfer Socket Error count for AD9600 dropped Calls .')
iwfDxSsTrAd14400SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd14400SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd14400SktErrCnt.setDescription('This object is the Data Transfer Socket Error count for AD14400 dropped Calls .')
iwfDxSsTrFax9600SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax9600SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax9600SktErrCnt.setDescription('This object is the Data Transfer Socket Error count for FAX9600 dropped Calls .')
iwfDxSsTrFax14400SktErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax14400SktErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax14400SktErrCnt.setDescription('This object is the Data Transfer Socket Error count for FAX14400 dropped Calls .')
iwfDxSsTrAd9600PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd9600PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd9600PrtErrCnt.setDescription('This object is the Data Transfer Protocol Violation Error count for AD9600 dropped Calls .')
iwfDxSsTrAd14400PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd14400PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd14400PrtErrCnt.setDescription('This object is the Data Transfer Protocol Violation Error count for AD14400 dropped Calls .')
iwfDxSsTrFax9600PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax9600PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax9600PrtErrCnt.setDescription('This object is the Data Transfer Protocol Violation Error count for FAX9600 dropped Calls .')
iwfDxSsTrFax14400PrtErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax14400PrtErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax14400PrtErrCnt.setDescription('This object is the Data Transfer Protocol Violation Error count for FAX14400 dropped Calls .')
iwfDxSsTrAd9600NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd9600NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd9600NoMdmResCnt.setDescription('This object is the Data Transfer No Modem Resources Error count for AD9600 dropped Calls .')
iwfDxSsTrAd14400NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrAd14400NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrAd14400NoMdmResCnt.setDescription('This object is the Data Transfer No Modem Resources Error count for AD14400 dropped Calls .')
iwfDxSsTrFax9600NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax9600NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax9600NoMdmResCnt.setDescription('This object is the Data Transfer No Modem Resources Error count for FAX9600 dropped Calls .')
iwfDxSsTrFax14400NoMdmResCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrFax14400NoMdmResCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrFax14400NoMdmResCnt.setDescription('This object is the Data Transfer No Modem Resources Error count for FAX14400 dropped Calls .')
iwfDxSsTrNoRespCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrNoRespCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrNoRespCnt.setDescription('This object is the Data Transfer No Response from subsystem error cnt.')
iwfDxSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 27, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfDxSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfDxSsTrStatus.setDescription('This object is the Data Transfer Status.')
iwfCfgCoSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 28))
iwfCfgCoSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1), )
if mibBuilder.loadTexts: iwfCfgCoSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCoSsTrapTable.setDescription('Table containing objects for Compression Subsystem Trap Configuration for IWF Gateway Cards in the chassis.')
iwfCfgCoSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCoSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgCoSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgCoSsTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfCoSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCoSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the Compression Subsystem Trap objects pertain')
iwfCoSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrMrgOperStatus.setDescription('This object is to enable the Compression Subsystem status Marginally operational trap.')
iwfCoSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrNonOperStatus.setDescription('This object is to enable the Compression Subsystem status Non operational trap.')
iwfCoSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrClearStatus.setDescription('This object is to enable the Compression Subsytem status Clear trap.')
iwfCoSsTrMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrMrgOperBitMask.setDescription('This object is the Compression Subsystem Marginally Operational Trap Bit Mask.')
iwfCoSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrMrgOperThreshCnt.setDescription('This object is the Compression Subsystem Marginally Operational Trap Threshold Count.')
iwfCoSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrNonOperThreshCnt.setDescription('This object is the Compressino subsystem Non Operational Trap Threshold Count.')
iwfCoSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrClearThreshCnt.setDescription('This object is the Compression Subsystem Clear Trap Threshold Count.')
iwfCoSsTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrMrgOperThreshTimer.setDescription('This object is the Compression Subsystem Marginally Operational Trap Threshold Time.')
iwfCoSsTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrNonOperThreshTimer.setDescription('This object is the Compression subsystem Non Operational Trap Threshold Time.')
iwfCoSsTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCoSsTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrClearThreshTimer.setDescription('This object is the Compression Subsystem Clear Trap Threshold Time.')
iwfCoSsTrSysNoRespErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCoSsTrSysNoRespErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrSysNoRespErrCnt.setDescription('This object is the Compression Subsystem Not responding error Count.')
iwfCoSsTrDictOutOfSyncCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCoSsTrDictOutOfSyncCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrDictOutOfSyncCnt.setDescription('This object is the Compression Subsystem Dictionary Out of Sync Error Count.')
iwfCoSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 28, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCoSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCoSsTrStatus.setDescription('This object is the Compression Subsystem Status.')
iwfCfgPppSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 29))
iwfCfgPppSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1), )
if mibBuilder.loadTexts: iwfCfgPppSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppSsTrapTable.setDescription('Table containing objects for PPP Subsystem Trap for IWF Gateway Cards in the chassis.')
iwfCfgPppSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfPppSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgPppSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgPppSsTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfPppSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the PPP Subsystem Trap objects pertain')
iwfPppSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrMrgOperStatus.setDescription('This object is the operatinal PPP Subsystem status Marginally operational trap enable/disable.')
iwfPppSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrNonOperStatus.setDescription('This object is the operational PPP Subsystem status Non operational trap enable/disable.')
iwfPppSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrClearStatus.setDescription('This object is the operational PPP Subsytem status Clear trap enable/disable.')
iwfPppSsTrMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrMrgOperBitMask.setDescription('This object is the PPP Subsystem Marginally Operational Trap Bit Mask.')
iwfPppSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrMrgOperThreshCnt.setDescription('This object is the PPP Subsystem Marginally Operational Trap Threshold Count.')
iwfPppSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrNonOperThreshCnt.setDescription('This object is the PPP subsystem Non Operational Trap Threshold Count.')
iwfPppSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrClearThreshCnt.setDescription('This object is the PPP Subsystem Clear Trap Threshold Count.')
iwfPppSsTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrMrgOperThreshTimer.setDescription('This object is the PPP Subsystem Marginally Operational Trap Threshold Time.')
iwfPppSsTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrNonOperThreshTimer.setDescription('This object is the PPP subsystem Non Operational Trap Threshold Time.')
iwfPppSsTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfPppSsTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrClearThreshTimer.setDescription('This object is the PPP Subsystem Clear Trap Threshold Time.')
iwfPppSsTrSysNoRespErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppSsTrSysNoRespErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrSysNoRespErrCnt.setDescription('This object is the PPP Subsystem Not responding error Count.')
iwfPppSsTrCrcErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppSsTrCrcErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrCrcErrCnt.setDescription('This object is the PPP Subsystem Crc Error Count.')
iwfPppSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 29, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfPppSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfPppSsTrStatus.setDescription('This object is the PPP Subsystem Status.')
iwfCfgTcpSsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 30))
iwfCfgTcpSsTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1), )
if mibBuilder.loadTexts: iwfCfgTcpSsTrapTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTcpSsTrapTable.setDescription('Table containing objects for TCP/IP Subsystem Trap for IWF Gateway Cards in the chassis.')
iwfCfgTcpSsTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfTcpSsTrIndex"))
if mibBuilder.loadTexts: iwfCfgTcpSsTrapEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgTcpSsTrapEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfTcpSsTrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpSsTrIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrIndex.setDescription('A unique index identifying the Gateway Card to which the TCP/IP Subsystem Trap objects pertain')
iwfTcpSsTrMrgOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperStatus.setDescription('This object is the operational TCP/IP Subsystem status Marginally operational trap enable/disable.')
iwfTcpSsTrNonOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrNonOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrNonOperStatus.setDescription('This object is the operational TCP/IP Subsystem status Non operational trap enable/disable.')
iwfTcpSsTrClearStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableTrap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrClearStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrClearStatus.setDescription('This object is the operational TCP/IP Subsytem status Clear trap enable/disable.')
iwfTcpSsTrMrgOperBitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperBitMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperBitMask.setDescription('This object is the TCP/IP Subsystem Marginally Operational Trap Bit Mask.')
iwfTcpSsTrMrgOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperThreshCnt.setDescription('This object is the TCP/IP Subsystem Marginally Operational Trap Threshold Count.')
iwfTcpSsTrNonOperThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrNonOperThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrNonOperThreshCnt.setDescription('This object is the TCP/IP subsystem Non Operational Trap Threshold Count.')
iwfTcpSsTrClearThreshCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrClearThreshCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrClearThreshCnt.setDescription('This object is the TCP/IP Subsystem Clear Trap Threshold Count.')
iwfTcpSsTrMrgOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrMrgOperThreshTimer.setDescription('This object is the TCP/IP Subsystem Marginally Operational Trap Threshold Time.')
iwfTcpSsTrNonOperThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrNonOperThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrNonOperThreshTimer.setDescription('This object is the TCP/IP subsystem Non Operational Trap Threshold Time.')
iwfTcpSsTrClearThreshTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfTcpSsTrClearThreshTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrClearThreshTimer.setDescription('This object is the TCP/IP Subsystem Clear Trap Threshold Time.')
iwfTcpSsTrSysNoRespErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpSsTrSysNoRespErrCnt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrSysNoRespErrCnt.setDescription('This object is the TCP/IP Subsystem Not responding error Count.')
iwfTcpSsTrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 30, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("marginallyOperational", 2), ("nonOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfTcpSsTrStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iwfTcpSsTrStatus.setDescription('This object is the TCP/IP Subsystem Status.')
iwfOprFrRly = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 31))
iwfOprFrRlyTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1), )
if mibBuilder.loadTexts: iwfOprFrRlyTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyTable.setDescription('Table containing objects for Operational Frame Relay Local management Interface parameters for the Gateway Cards in the chassis.')
iwfOprFrRlyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprFrRlyIndex"))
if mibBuilder.loadTexts: iwfOprFrRlyEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfOprFrRlyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprFrRlyIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyIndex.setDescription('A unique index identifying the Gateway Card to which the Frame Relay LMI operational table objects pertain')
iwfOprFrRlyT391StatusEnqryTimr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprFrRlyT391StatusEnqryTimr.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyT391StatusEnqryTimr.setDescription('This object is the operational T391 Status Enquiry Timer. ')
iwfOprFrRlyT392StatusTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprFrRlyT392StatusTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyT392StatusTimer.setDescription('This object is the operational T392 status timer.')
iwfOprFrRlyN391StatusEnqrySent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 31, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprFrRlyN391StatusEnqrySent.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprFrRlyN391StatusEnqrySent.setDescription('This object is the operational N391 number of status enquiry sent.')
iwfOprQ921 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 32))
iwfOprQ921Table = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1), )
if mibBuilder.loadTexts: iwfOprQ921Table.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921Table.setDescription('Table containing objects for Q.921 parameter operational for wireless Gateway Cards in the chassis.')
iwfOprQ921Entry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprQ921Index"))
if mibBuilder.loadTexts: iwfOprQ921Entry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921Entry.setDescription('There is one operational row for each Gateway Card in the NAS chassis.')
iwfOprQ921Index = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921Index.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921Index.setDescription('A unique index identifying the Gateway Card to which the Q.921 Frame Relay Call Control operational Table objects pertain.')
iwfOprQ921KmaxOutStandPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921KmaxOutStandPkt.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921KmaxOutStandPkt.setDescription('This object is the operational K-Max # of outstanding packets. ')
iwfOprQ921T200IframeAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921T200IframeAckTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921T200IframeAckTimer.setDescription('This object is the operational T200 I-frame Ack Timer. ')
iwfOprQ921T203MaxTimeNoIframe = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921T203MaxTimeNoIframe.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921T203MaxTimeNoIframe.setDescription('This object is the operational T203 max time with no I-frame Exchange. ')
iwfOprQ921N200MaxFrameRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921N200MaxFrameRetrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921N200MaxFrameRetrans.setDescription('This object is the operational N200 max number of retransmissions of frame. ')
iwfOprQ921N201RxMaxOctetInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921N201RxMaxOctetInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921N201RxMaxOctetInfo.setDescription('This object is the operational N200 Received Max number of Octets in info field. ')
iwfOprQ921N201TxMaxOctetInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 32, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ921N201TxMaxOctetInfo.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ921N201TxMaxOctetInfo.setDescription('This object is the operational N200 Transmitted Max number of Octets in info field. ')
iwfOprQ933 = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 33))
iwfOprQ933Table = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1), )
if mibBuilder.loadTexts: iwfOprQ933Table.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933Table.setDescription('Table containing objects for operational Q.933 parameter for IWF Gateway Cards in the chassis.')
iwfOprQ933Entry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprQ933Index"))
if mibBuilder.loadTexts: iwfOprQ933Entry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933Entry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfOprQ933Index = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933Index.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933Index.setDescription('A unique index identifying the Gateway Card to which the Q.933 table objects pertain')
iwfOprQ933T303SetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T303SetupTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T303SetupTimer.setDescription('This object is the operatinal T303- setup timer. ')
iwfOprQ933T305DisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T305DisconnectTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T305DisconnectTimer.setDescription('This object is the operational T305- Desconnect. ')
iwfOprQ933T308ReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T308ReleaseTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T308ReleaseTimer.setDescription('This object is the operational T308- Release Timer. ')
iwfOprQ933T309DataLinkDiscTimr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T309DataLinkDiscTimr.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T309DataLinkDiscTimr.setDescription('This object is the operational T309- Data Link Disconnection Timer. ')
iwfOprQ933T310CallProceedTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T310CallProceedTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T310CallProceedTimer.setDescription('This object is the operational T310- Call proceeding timer. ')
iwfOprQ933T313ConnectSentTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 33, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprQ933T313ConnectSentTimer.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQ933T313ConnectSentTimer.setDescription('This object is the operational T313- Connect sent timer. ')
iwfOprCallStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 34))
iwfOprCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1), )
if mibBuilder.loadTexts: iwfOprCallStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCallStatsTable.setDescription('Table containing objects for Operational Call Statistics parameter for IWF Gateway Cards in the chassis.')
iwfOprCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprCsIndex"))
if mibBuilder.loadTexts: iwfOprCallStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCallStatsEntry.setDescription('There is one Configuration row for each Gateway Card in the NAS chassis.')
iwfOprCsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprCsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCsIndex.setDescription('A unique index identifying the Gateway Card to which the Call Statistics Operational table objects pertain')
iwfOprCsMobOrigAdStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprCsMobOrigAdStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCsMobOrigAdStats.setDescription('This object shows the current setting for the collection of All Mobile Originated AD Statistics.')
iwfOprCsMobOrigFaxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprCsMobOrigFaxStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCsMobOrigFaxStats.setDescription('This object shows the current setting for the collection of All Mobile Originated FAX Statistics.')
iwfOprCsMobTermAdStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprCsMobTermAdStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCsMobTermAdStats.setDescription('This object shows the current setting for the collection of All Mobile Terminated AD Statistics.')
iwfOprCsMobTermFaxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 34, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprCsMobTermFaxStats.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprCsMobTermFaxStats.setDescription('This object show the current setting for the collection of All Mobile Terminated FAX Statistics.')
iwfOprPppParam = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 35))
iwfOprPppParamTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1), )
if mibBuilder.loadTexts: iwfOprPppParamTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppParamTable.setDescription('Table containing objects for operational PPP parameter for IWF Gateway Cards in the chassis.')
iwfOprPppParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprPppIndex"))
if mibBuilder.loadTexts: iwfOprPppParamEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppParamEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfOprPppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppIndex.setDescription('A unique index identifying the Gateway Card to which the PPP operational table objects pertain')
iwfOprPppForceEncryptData = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppForceEncryptData.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppForceEncryptData.setDescription('This object is the operational control of sending encrypted data.')
iwfOprPppForceEncryptpassword = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppForceEncryptpassword.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppForceEncryptpassword.setDescription('This object is the operationl control of PPP Authentication.')
iwfOprMaxNumbConfigRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprMaxNumbConfigRequests.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprMaxNumbConfigRequests.setDescription('This object is the operational max number of Config Requests allowed without receiving a valid configure-Ack.')
iwfOprMaxNumbConfigNAK = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprMaxNumbConfigNAK.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprMaxNumbConfigNAK.setDescription('This object is for Max number of configure-Nak without sending a configure-Ack.')
iwfOprPppMaxNumbRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppMaxNumbRejects.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppMaxNumbRejects.setDescription('This object is Max number of configure-rejects before assuming PPP negotiation failed.')
iwfOprPppMaxNumbTermRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppMaxNumbTermRequests.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppMaxNumbTermRequests.setDescription('This object is Max number of Terminate-Request without receiving a Terminate-Ack.')
iwfOprPppNegotiateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppNegotiateTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppNegotiateTime.setDescription('This object is Max Time allowed for PPP negotiation.')
iwfOprPppRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppRestartTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppRestartTime.setDescription('This object is Max Time allowed for PPP Restart.')
iwfOprPppIpAddressPoolMax = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppIpAddressPoolMax.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppIpAddressPoolMax.setDescription('This object is the operational Mask which defines the range of the Ip addresses used by PPP to dynamically allocate IP addresses.')
iwfOprPppIpAddressPoolMin = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 35, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprPppIpAddressPoolMin.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprPppIpAddressPoolMin.setDescription('This object is the operational base address which defines the range of the Ip addresses used by PPP to dynamically allocate IP addresses.')
iwfOprTcpIp = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 36))
iwfOprTcpIpTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1), )
if mibBuilder.loadTexts: iwfOprTcpIpTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTcpIpTable.setDescription('Table containing objects for operatinal TCP/IP parameter for IWF Gateway Cards in the chassis.')
iwfOprTcpIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfOprTiIndex"))
if mibBuilder.loadTexts: iwfOprTcpIpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTcpIpEntry.setDescription('There is one Operational row for each Gateway Card in the NAS chassis.')
iwfOprTiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiIndex.setDescription('A unique index identifying the Gateway Card to which the TCP/IP operational table objects pertain')
iwfOprTiDefaultServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiDefaultServiceType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiDefaultServiceType.setDescription('This object is for Default Service type it is defined in RFC 791.')
iwfOprTiDefaultTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiDefaultTimeToLive.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiDefaultTimeToLive.setDescription('This object is the Max time an IP packet can live in the network without reaching its destination.')
iwfOprTiMtuDiscovery = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiMtuDiscovery.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiMtuDiscovery.setDescription('This object allows discovery of the Maximum Transmission Unit over path to remote destination.')
iwfOprTiKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiKeepAliveInterval.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiKeepAliveInterval.setDescription('This object is the Interval separating Keep Alive Retransmissions.')
iwfOprTiKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiKeepAliveTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiKeepAliveTime.setDescription('This object is how often TCP verifies that an idle connection is still intact.')
iwfOprTiMaxMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiMaxMtuSize.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiMaxMtuSize.setDescription('This object overrides the default MTU for a network interface.')
iwfOprTiMaxConnectReTrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiMaxConnectReTrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiMaxConnectReTrans.setDescription('This object is the number of times TCP retransmits a Connect Request (SYN) before aborting the attempt.')
iwfOprTiMaxDataRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiMaxDataRetrans.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiMaxDataRetrans.setDescription('This object is the number of times TCP retransmits an individual data segment before aborting the attempt.')
iwfOprTiMaxNumberConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiMaxNumberConnections.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiMaxNumberConnections.setDescription('This object is the operational Max number of open TCP connection.')
iwfOprTiWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiWindowSize.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiWindowSize.setDescription('This object is the operational receive window size.')
iwfOprTiLocalIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiLocalIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiLocalIpAddress.setDescription('This object is the IP address of the EdgeServer.')
iwfOprTiSubnetIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiSubnetIpMask.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiSubnetIpMask.setDescription('This object Subnet Mask of the EdgeServer.')
iwfOprTiDefualtGatewayIp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 36, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfOprTiDefualtGatewayIp.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprTiDefualtGatewayIp.setDescription('This object is the IP address of Gateway Router.')
iwfLogStats = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 37))
iwfLogStatsTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1), )
if mibBuilder.loadTexts: iwfLogStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogStatsTable.setDescription('Table containing objects for Call log statistics for IWF Gateway Cards in the chassis.')
iwfLogStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfLogStsIndex"), (0, "IWFG-MIB", "iwfLogStsIndex2"))
if mibBuilder.loadTexts: iwfLogStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogStatsEntry.setDescription('')
iwfLogStsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogStsIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogStsIndex.setDescription('A unique index identifying the Gateway Card to which the Call Log Statistics objects pertain')
iwfLogStsIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogStsIndex2.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogStsIndex2.setDescription('A unique index identifying the call index to which the Call Log Statistics objects pertain')
iwfLogCallRefNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallRefNum.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallRefNum.setDescription('Call Reference Number for the Call.')
iwfLogMobileIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogMobileIpAddr.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogMobileIpAddr.setDescription('Mobile IP Address.')
iwfLogCallingPartyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallingPartyNum.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallingPartyNum.setDescription('Calling Party Number')
iwfLogCalledPartyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCalledPartyNum.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCalledPartyNum.setDescription('Called Party Number')
iwfLogCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("mobileOriginate", 1), ("mobileTerminate", 2), ("rEQINFORMOFDORMANTLL", 3), ("iNFORMCHGPKTMOBILITY", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallType.setDescription('Call Type')
iwfLogESN = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogESN.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogESN.setDescription('Electronic Serial Number')
iwfLogCallId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("pSTNCALL", 1), ("iwfQncSingleStackCall", 2), ("qncPptpCall", 3), ("mobileIpCall", 4), ("qncL2tpCall", 5), ("qncPppCall", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallId.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallId.setDescription('IWF Call Identifier')
iwfLogIMSI = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogIMSI.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogIMSI.setDescription('Mobile Subsriber Identification')
iwfLogServiceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("basicVoiceService", 1), ("mobileLoopBack", 2), ("enhancedRateCode", 3), ("asyncDataServie9dot6kbs", 4), ("group3faxService9dot6kbs", 5), ("shortMessageService", 6), ("asyncDataService14dot4Kbs", 7), ("group3faxService14dot4Kbs", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogServiceOption.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogServiceOption.setDescription('Service Option')
iwfLogDisconnectCause = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogDisconnectCause.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogDisconnectCause.setDescription('Disconnect Cause Indicator')
iwfLogMobileNumBytesTxed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogMobileNumBytesTxed.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogMobileNumBytesTxed.setDescription('Mobile number of bytes xmitted.')
iwfLogMobileNumBytesRxed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogMobileNumBytesRxed.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogMobileNumBytesRxed.setDescription('Mobile number of bytes received.')
iwfLogNumFaxPagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogNumFaxPagesProcessed.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogNumFaxPagesProcessed.setDescription('Number of Fax pages processed.')
iwfLogCompType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oFF", 1), ("oN", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCompType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCompType.setDescription('Compression Type.')
iwfLogCallErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallErrorCode.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallErrorCode.setDescription('Call Error Code.')
iwfLogModemSetupTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogModemSetupTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogModemSetupTime.setDescription('Modem Setup Time')
iwfLogCallConnectingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogCallConnectingTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogCallConnectingTime.setDescription('Call Connecting Time')
iwfLogTotConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 37, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfLogTotConnectTime.setStatus('mandatory')
if mibBuilder.loadTexts: iwfLogTotConnectTime.setDescription('Total Connect Time')
iwfCfgQncSrv = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 38))
iwfCfgQncSrvTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1), )
if mibBuilder.loadTexts: iwfCfgQncSrvTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncSrvTable.setDescription('Table containing objects for QNC (QUICK NETWORK CONNECTION) for IWF Gateway Cards in the chassis.')
iwfCfgQncSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfCfgQncSrvIndex"), (0, "IWFG-MIB", "iwfCfgQncSrvIndex2"))
if mibBuilder.loadTexts: iwfCfgQncSrvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncSrvEntry.setDescription('')
iwfCfgQncSrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgQncSrvIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncSrvIndex.setDescription('A unique index identifying the Gateway Card to which the QNC objects pertain')
iwfCfgQncSrvIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfCfgQncSrvIndex2.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncSrvIndex2.setDescription('A unique index identifying the call index to which the QNC objects pertain')
iwfCfgQncDialedNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQncDialedNumber.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncDialedNumber.setDescription('This object represents the Telephone Number dialed for the QNC.')
iwfCfgQncServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("twoStackQncTunneling", 2), ("twoStackQncL2tpTunneling", 3), ("twoStackQncPptpTunneling", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQncServiceType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncServiceType.setDescription('This object represents the Type of tunneling.')
iwfCfgQncPrimaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQncPrimaryIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncPrimaryIpAddress.setDescription('This object represents the Primary HiperArc Server IP')
iwfCfgQncSecondaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 38, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iwfCfgQncSecondaryIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfCfgQncSecondaryIpAddress.setDescription('This object represents the Secondary HiperArc Server IP')
iwfOprQncSrv = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 25, 39))
iwfOprQncSrvTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1), )
if mibBuilder.loadTexts: iwfOprQncSrvTable.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQncSrvTable.setDescription('Table containing operational objects for QNC (QUICK NETWORK CONNECTION) for IWF Gateway Cards in the chassis.')
iwfOprQncSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1), ).setIndexNames((0, "IWFG-MIB", "iwfQncSrvIndex"), (0, "IWFG-MIB", "iwfQncSrvIndex2"))
if mibBuilder.loadTexts: iwfOprQncSrvEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iwfOprQncSrvEntry.setDescription('')
iwfQncSrvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncSrvIndex.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncSrvIndex.setDescription('A unique index identifying the Gateway Card to which the QNC objects pertain')
iwfQncSrvIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncSrvIndex2.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncSrvIndex2.setDescription('A unique index identifying the call index to which the QNC objects pertain')
iwfQncDialedNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncDialedNumber.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncDialedNumber.setDescription('This object represents the Telephone Number dialed for the QNC.')
iwfQncServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("twoStackQncTunneling", 2), ("twoStackQncL2tpTunneling", 3), ("twoStackQncPptpTunneling", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncServiceType.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncServiceType.setDescription('This object represents the Type of tunneling.')
iwfQncPrimaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncPrimaryIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncPrimaryIpAddress.setDescription('This object represents the Primary HiperArc Server IP')
iwfQncSecondaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 25, 39, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iwfQncSecondaryIpAddress.setStatus('mandatory')
if mibBuilder.loadTexts: iwfQncSecondaryIpAddress.setDescription('This object represents the Secondary HiperArc Server IP')
mibBuilder.exportSymbols("IWFG-MIB", iwfPppStPercentCompressionOut=iwfPppStPercentCompressionOut, iwfMdmStats=iwfMdmStats, iwfCmpStAccumSubsysErrors=iwfCmpStAccumSubsysErrors, iwfCallStQncConnectedSs9600=iwfCallStQncConnectedSs9600, iwfLogCallErrorCode=iwfLogCallErrorCode, iwfTdmStFramesOverruns=iwfTdmStFramesOverruns, iwfPppStCrcErrors=iwfPppStCrcErrors, iwfTcpSsTrNonOperThreshCnt=iwfTcpSsTrNonOperThreshCnt, iwfTdmStClockLossis=iwfTdmStClockLossis, iwfCallStatsTable=iwfCallStatsTable, iwfCallStTotTermFax9600MoTerm=iwfCallStTotTermFax9600MoTerm, iwfCfgPppForceEncryptpassword=iwfCfgPppForceEncryptpassword, iwfTdmTrChAbortErrCnt=iwfTdmTrChAbortErrCnt, iwfCfgPppNegotiateTime=iwfCfgPppNegotiateTime, iwfDxSsTrMrgOperThreshTimer=iwfDxSsTrMrgOperThreshTimer, iwfCfgQ933T313ConnectSentTimer=iwfCfgQ933T313ConnectSentTimer, iwfOprQ933T308ReleaseTimer=iwfOprQ933T308ReleaseTimer, iwfCfgFrRlyTable=iwfCfgFrRlyTable, iwfUdpStErrorsRx=iwfUdpStErrorsRx, iwfPbStCrcErrors=iwfPbStCrcErrors, iwfOprTiDefaultServiceType=iwfOprTiDefaultServiceType, iwfCallStatsEntry=iwfCallStatsEntry, iwfPbClkTrNonOperStatus=iwfPbClkTrNonOperStatus, iwfTdmSsTrNonOperThreshTime=iwfTdmSsTrNonOperThreshTime, iwfCallStTotCompMmrMoTerm=iwfCallStTotCompMmrMoTerm, iwfCfgQncSrv=iwfCfgQncSrv, iwfCallStQncDiscconnectingPptp14400=iwfCallStQncDiscconnectingPptp14400, iwfCallStTotFailAd14400MoTerm=iwfCallStTotFailAd14400MoTerm, iwfOprQ921KmaxOutStandPkt=iwfOprQ921KmaxOutStandPkt, iwfIsRxHeaderErrors=iwfIsRxHeaderErrors, iwfCallStQncTerminatedPpp9600=iwfCallStQncTerminatedPpp9600, iwfEnsPacketsRxErrors=iwfEnsPacketsRxErrors, iwfCallStTotTermAd14400MoOrg=iwfCallStTotTermAd14400MoOrg, iwfOprQ921Index=iwfOprQ921Index, iwfTdmClkTrNonOperStatus=iwfTdmClkTrNonOperStatus, iwfCallStQncDiscconnectingPpp14400=iwfCallStQncDiscconnectingPpp14400, iwfUdpStIndex=iwfUdpStIndex, iwfIcmpStSourceQuenchsTx=iwfIcmpStSourceQuenchsTx, iwfDxSsTrAd9600PrtErrCnt=iwfDxSsTrAd9600PrtErrCnt, iwfCallStTotCntgFax9600MoOrg=iwfCallStTotCntgFax9600MoOrg, iwfCallStTotCntgAd14400MoOrg=iwfCallStTotCntgAd14400MoOrg, iwfCfgTiMaxNumberConnections=iwfCfgTiMaxNumberConnections, iwfIsDatagramsFailFragment=iwfIsDatagramsFailFragment, iwfUdpStatsEntry=iwfUdpStatsEntry, iwfCfgPbClkTrapTable=iwfCfgPbClkTrapTable, iwfPbSsTrClearThreshCnt=iwfPbSsTrClearThreshCnt, iwfCfgFrRlyEntry=iwfCfgFrRlyEntry, iwfCcSsTrClearThreshCnt=iwfCcSsTrClearThreshCnt, iwfTdmStIndex=iwfTdmStIndex, iwfIcmpStAddressMasksRx=iwfIcmpStAddressMasksRx, iwfIcmpStEchosRx=iwfIcmpStEchosRx, iwfOprMaxNumbConfigNAK=iwfOprMaxNumbConfigNAK, iwfPppSsTrNonOperStatus=iwfPppSsTrNonOperStatus, iwfIsReAssemblyRequired=iwfIsReAssemblyRequired, iwfTdmTrChanMrgOperStatus=iwfTdmTrChanMrgOperStatus, iwfTdmTrChCrcErrCnt=iwfTdmTrChCrcErrCnt, iwfPbTrChCrcErrCnt=iwfPbTrChCrcErrCnt, iwfDxSsTrAd14400PrtErrCnt=iwfDxSsTrAd14400PrtErrCnt, iwfPbClkTrClearStatus=iwfPbClkTrClearStatus, iwfPbStatsTable=iwfPbStatsTable, iwfCcSsTrAd14400PrtErrCnt=iwfCcSsTrAd14400PrtErrCnt, iwfOprQ921Entry=iwfOprQ921Entry, iwfCcSsTrAd14400NoMdmResCnt=iwfCcSsTrAd14400NoMdmResCnt, iwfPppSsTrClearThreshTimer=iwfPppSsTrClearThreshTimer, iwfCallStIndex=iwfCallStIndex, iwfPppSsTrClearThreshCnt=iwfPppSsTrClearThreshCnt, iwfCcSsTrFax14400NoSysResCnt=iwfCcSsTrFax14400NoSysResCnt, iwfTcpSsTrStatus=iwfTcpSsTrStatus, iwfOprCallStats=iwfOprCallStats, iwfQ921StatsTable=iwfQ921StatsTable, iwfDxSsTrNonOperThreshTimer=iwfDxSsTrNonOperThreshTimer, iwfTcpSsTrNonOperStatus=iwfTcpSsTrNonOperStatus, iwfCmpStIndex=iwfCmpStIndex, iwfOprQ921=iwfOprQ921, iwfCfgQncSecondaryIpAddress=iwfCfgQncSecondaryIpAddress, iwfLogCallId=iwfLogCallId, iwfOprFrRlyT392StatusTimer=iwfOprFrRlyT392StatusTimer, iwfCallStTotCompMmrMoOrg=iwfCallStTotCompMmrMoOrg, iwfDxSsTrAd14400NoMdmResCnt=iwfDxSsTrAd14400NoMdmResCnt, iwfPppSsTrNonOperThreshCnt=iwfPppSsTrNonOperThreshCnt, iwfCfgTiSubnetIpMask=iwfCfgTiSubnetIpMask, iwfCfgPbTrapEntry=iwfCfgPbTrapEntry, iwfDxSsTrNonOperThreshCnt=iwfDxSsTrNonOperThreshCnt, iwfCcSsTrFax9600NoMdmResCnt=iwfCcSsTrFax9600NoMdmResCnt, iwfDxSsTrMrgOperThreshCnt=iwfDxSsTrMrgOperThreshCnt, iwfLogMobileIpAddr=iwfLogMobileIpAddr, iwfCcSsTrClearStatus=iwfCcSsTrClearStatus, iwfTdmSsTrNonOperStatus=iwfTdmSsTrNonOperStatus, iwfPppStTotalConnections=iwfPppStTotalConnections, iwfCfgCallStatsEntry=iwfCfgCallStatsEntry, iwfPbTrChanClearThreshCnt=iwfPbTrChanClearThreshCnt, iwfTdmTrMunichChannel=iwfTdmTrMunichChannel, iwfCfgTdmTrapTable=iwfCfgTdmTrapTable, iwfTdmTrChanNonOperStatus=iwfTdmTrChanNonOperStatus, iwfLogStsIndex2=iwfLogStsIndex2, iwfCfgCcSsTrapTable=iwfCfgCcSsTrapTable, iwfIsDatagramsSuccessFragment=iwfIsDatagramsSuccessFragment, iwfDxSsTrFax9600NoMdmResCnt=iwfDxSsTrFax9600NoMdmResCnt, iwfCoSsTrNonOperStatus=iwfCoSsTrNonOperStatus, iwfPppStBytesTxPerSec=iwfPppStBytesTxPerSec, iwfIcmpStSourceQuenchsRx=iwfIcmpStSourceQuenchsRx, iwfCallStTotCompv42MoTerm=iwfCallStTotCompv42MoTerm, iwfOprPppForceEncryptData=iwfOprPppForceEncryptData, iwfOprQ933T313ConnectSentTimer=iwfOprQ933T313ConnectSentTimer, iwfQ933Stats=iwfQ933Stats, iwfCcSsTrNoResponse=iwfCcSsTrNoResponse, iwfCoSsTrClearStatus=iwfCoSsTrClearStatus, iwfCallStTotDiscAd9600MoTerm=iwfCallStTotDiscAd9600MoTerm, iwfQ933StatsEntry=iwfQ933StatsEntry, iwfPbTrChanMrgOperThreshCnt=iwfPbTrChanMrgOperThreshCnt, iwfPbClkTrIndex=iwfPbClkTrIndex, iwfIsFragmentCreated=iwfIsFragmentCreated, iwfPbStats=iwfPbStats, iwfDxSsTrAd14400NoSysResCnt=iwfDxSsTrAd14400NoSysResCnt, iwfQncSrvIndex=iwfQncSrvIndex, iwfLogESN=iwfLogESN, iwfPppStFramesRx=iwfPppStFramesRx, iwfCallStQncConnectedSs14400=iwfCallStQncConnectedSs14400, iwfCfgTiMtuDiscovery=iwfCfgTiMtuDiscovery, iwfPbSsTrMrgOperThreshTime=iwfPbSsTrMrgOperThreshTime, iwfCallStQncConnectedPptp14400=iwfCallStQncConnectedPptp14400, iwfIcmpStRedirectsRx=iwfIcmpStRedirectsRx, iwfTdmTrChanMrgOperThreshTime=iwfTdmTrChanMrgOperThreshTime, iwfCcSsTrAd9600NoSysResCnt=iwfCcSsTrAd9600NoSysResCnt, iwfPppSsTrIndex=iwfPppSsTrIndex, iwfOprPppMaxNumbTermRequests=iwfOprPppMaxNumbTermRequests, iwfCoSsTrStatus=iwfCoSsTrStatus, iwfIcmpStTimeStampsRx=iwfIcmpStTimeStampsRx, iwfCallStQncTerminatedPptp9600=iwfCallStQncTerminatedPptp9600, iwfCfgTdmClkTrapEntry=iwfCfgTdmClkTrapEntry, iwfPbTrChanNonOperStatus=iwfPbTrChanNonOperStatus, iwfOprCsIndex=iwfOprCsIndex, iwfCallStTotDiscAd14400MoOrg=iwfCallStTotDiscAd14400MoOrg, iwfTdmSsTrMrgOperThreshCnt=iwfTdmSsTrMrgOperThreshCnt, iwfIcmpStTimeStampsTx=iwfIcmpStTimeStampsTx, iwfCallStQncConnectedL2tp14400=iwfCallStQncConnectedL2tp14400, iwfTcpStFailedConnectAttempts=iwfTcpStFailedConnectAttempts, iwfTcpSsTrClearStatus=iwfTcpSsTrClearStatus, iwfDxSsTrMrgOperStatus=iwfDxSsTrMrgOperStatus, iwfOprTcpIpTable=iwfOprTcpIpTable, iwfLogCallRefNum=iwfLogCallRefNum, iwfPbTrModemChannel=iwfPbTrModemChannel, iwfMdmStatsTable=iwfMdmStatsTable, iwfTcpSsTrClearThreshTimer=iwfTcpSsTrClearThreshTimer, iwfCfgQ921Table=iwfCfgQ921Table, iwfIcmpStEchosRepliesTx=iwfIcmpStEchosRepliesTx, iwfCfgQ921T203MaxTimeNoIframe=iwfCfgQ921T203MaxTimeNoIframe, iwfMdmStIndex=iwfMdmStIndex, iwfPbSsTrNonOperThreshCnt=iwfPbSsTrNonOperThreshCnt, iwfCfgTdmSsTrapTable=iwfCfgTdmSsTrapTable, iwfQncSrvIndex2=iwfQncSrvIndex2, iwfPppSsTrMrgOperThreshCnt=iwfPppSsTrMrgOperThreshCnt, iwfTcpStPassiveOpens=iwfTcpStPassiveOpens, iwfIsUnknownProtocolRx=iwfIsUnknownProtocolRx, iwfCallStCurrentNumCompCalls=iwfCallStCurrentNumCompCalls, iwfCfgPbSsTrap=iwfCfgPbSsTrap, iwfTcpSsTrMrgOperThreshTimer=iwfTcpSsTrMrgOperThreshTimer, iwfPppStTotalErrorPerSec=iwfPppStTotalErrorPerSec, iwfCcSsTrFax14400PrtErrCnt=iwfCcSsTrFax14400PrtErrCnt, iwfIcmpStatsEntry=iwfIcmpStatsEntry, iwfEnsPacketsTxPerSec=iwfEnsPacketsTxPerSec, iwfCfgPppRestartTime=iwfCfgPppRestartTime, iwfDxSsTrClearThreshCnt=iwfDxSsTrClearThreshCnt, iwfCcSsTrNonOperThreshTimer=iwfCcSsTrNonOperThreshTimer, iwfCallStTotCntgAd9600MoOrg=iwfCallStTotCntgAd9600MoOrg, iwfCallStTotFailFax14400MoTerm=iwfCallStTotFailFax14400MoTerm, iwfTcpStatsTable=iwfTcpStatsTable, iwfCallStTotCntgAd9600MoTerm=iwfCallStTotCntgAd9600MoTerm, iwfTcpStats=iwfTcpStats, iwfOprTiMtuDiscovery=iwfOprTiMtuDiscovery, iwfQncDialedNumber=iwfQncDialedNumber, iwfCfgPbTrapTable=iwfCfgPbTrapTable, iwfOprQ933T303SetupTimer=iwfOprQ933T303SetupTimer, iwfOprTcpIp=iwfOprTcpIp, iwfCoSsTrMrgOperBitMask=iwfCoSsTrMrgOperBitMask, iwfCfgFrRlyIndex=iwfCfgFrRlyIndex, iwfCallStQncDisconnectingPpp9600=iwfCallStQncDisconnectingPpp9600, iwfCcSsTrAd14400NoSysResCnt=iwfCcSsTrAd14400NoSysResCnt, nas=nas, iwfCcSsTrFax9600SktErrCnt=iwfCcSsTrFax9600SktErrCnt, iwfTdmClkTrNonOperThreshTimer=iwfTdmClkTrNonOperThreshTimer, iwfTdmSsTrClearThreshTime=iwfTdmSsTrClearThreshTime, iwfCoSsTrDictOutOfSyncCnt=iwfCoSsTrDictOutOfSyncCnt, iwfTdmTrChanMrgOperBitMask=iwfTdmTrChanMrgOperBitMask, iwfPbTrChanNonOperThreshCnt=iwfPbTrChanNonOperThreshCnt, iwfTdmStAccumSubsystemErrors=iwfTdmStAccumSubsystemErrors, iwfCfgQ933Entry=iwfCfgQ933Entry, iwfTdmTrChanClearStatus=iwfTdmTrChanClearStatus, iwfDxSsTrMrgOperBitMask=iwfDxSsTrMrgOperBitMask, iwfOprPppIndex=iwfOprPppIndex, iwfIcmpStEchosTx=iwfIcmpStEchosTx, iwfTcpSsTrClearThreshCnt=iwfTcpSsTrClearThreshCnt, iwfTdmTrMunichChip=iwfTdmTrMunichChip, iwfPbTrIndex=iwfPbTrIndex, iwfCallStQncConnectingPptp9600=iwfCallStQncConnectingPptp9600, iwfIcmpStParameterProblemsRx=iwfIcmpStParameterProblemsRx, iwfPppStFramesRxPerSec=iwfPppStFramesRxPerSec, iwfPbSsTrMrgOperThreshCnt=iwfPbSsTrMrgOperThreshCnt, iwfCfgCoSsTrapEntry=iwfCfgCoSsTrapEntry, iwfUdpStatsTable=iwfUdpStatsTable, iwfOprCallStatsTable=iwfOprCallStatsTable, iwfOprCsMobOrigAdStats=iwfOprCsMobOrigAdStats, iwfCfgQ921N201TxMaxOctetInfo=iwfCfgQ921N201TxMaxOctetInfo, iwfCfgTiKeepAliveTime=iwfCfgTiKeepAliveTime, iwfCallStTotConnAd14400MobOrg=iwfCallStTotConnAd14400MobOrg, iwfPbTrChanMrgOperStatus=iwfPbTrChanMrgOperStatus, iwfOprTiMaxNumberConnections=iwfOprTiMaxNumberConnections, iwfOprPppMaxNumbRejects=iwfOprPppMaxNumbRejects, iwfCfgQncSrvTable=iwfCfgQncSrvTable, iwfDxSsTrFax14400NoSysResCnt=iwfDxSsTrFax14400NoSysResCnt, iwfIcmpStDestUnreachableTx=iwfIcmpStDestUnreachableTx, iwfIsReAssmeblyFailures=iwfIsReAssmeblyFailures, iwfPbStAccumSubsystemErrors=iwfPbStAccumSubsystemErrors, iwfOprFrRlyN391StatusEnqrySent=iwfOprFrRlyN391StatusEnqrySent, iwfPbStatsEntry=iwfPbStatsEntry, iwfLogDisconnectCause=iwfLogDisconnectCause, iwfMdmStAccumInvalidAtCmd=iwfMdmStAccumInvalidAtCmd, iwfIcmpStatsTable=iwfIcmpStatsTable, iwfOprQ933T310CallProceedTimer=iwfOprQ933T310CallProceedTimer, iwfCallStTotConnFax9600MobOrg=iwfCallStTotConnFax9600MobOrg, iwfQ921StIndex=iwfQ921StIndex, iwfCfgPppMaxNumbConfigNAK=iwfCfgPppMaxNumbConfigNAK, iwfGWY=iwfGWY, iwfUdpStats=iwfUdpStats, iwfCfgQ933T305DisconnectTimer=iwfCfgQ933T305DisconnectTimer, iwfCallStTotConnAd9600MoTerm=iwfCallStTotConnAd9600MoTerm, iwfCfgPppMaxNumbRejects=iwfCfgPppMaxNumbRejects, iwfPppSsTrSysNoRespErrCnt=iwfPppSsTrSysNoRespErrCnt, iwfCfgQ933Table=iwfCfgQ933Table, iwfCfgTiMaxDataRetrans=iwfCfgTiMaxDataRetrans, iwfCfgTcpSsTrap=iwfCfgTcpSsTrap, iwfCfgFrRly=iwfCfgFrRly, iwfIcmpStRedirectsTx=iwfIcmpStRedirectsTx, iwfCfgTcpSsTrapEntry=iwfCfgTcpSsTrapEntry, iwfDxSsTrNoRespCnt=iwfDxSsTrNoRespCnt, iwfCallStQncConnectingPptp14400=iwfCallStQncConnectingPptp14400, iwfQ921StAccumLinkLosses=iwfQ921StAccumLinkLosses, iwfCfgPppForceEncryptData=iwfCfgPppForceEncryptData, iwfCoSsTrClearThreshCnt=iwfCoSsTrClearThreshCnt, iwfTcpSsTrSysNoRespErrCnt=iwfTcpSsTrSysNoRespErrCnt, iwfCfgQncPrimaryIpAddress=iwfCfgQncPrimaryIpAddress, iwfTcpSsTrMrgOperStatus=iwfTcpSsTrMrgOperStatus, iwfDxSsTrFax9600PrtErrCnt=iwfDxSsTrFax9600PrtErrCnt, iwfCfgTiWindowSize=iwfCfgTiWindowSize, iwfCcSsTrAd9600SktErrCnt=iwfCcSsTrAd9600SktErrCnt, iwfCallStQncConnectingPpp9600=iwfCallStQncConnectingPpp9600, iwfPppStatsEntry=iwfPppStatsEntry, iwfCfgPppParam=iwfCfgPppParam, iwfCfgFrRlyN391StatusEnqrySent=iwfCfgFrRlyN391StatusEnqrySent, iwfCfgQ921N201RxMaxOctetInfo=iwfCfgQ921N201RxMaxOctetInfo, iwfOprTiWindowSize=iwfOprTiWindowSize, iwfCfgCsMobTermFaxStats=iwfCfgCsMobTermFaxStats, iwfCfgQncServiceType=iwfCfgQncServiceType, iwfPppStPercentCompressionIn=iwfPppStPercentCompressionIn)
mibBuilder.exportSymbols("IWFG-MIB", iwfOprTiSubnetIpMask=iwfOprTiSubnetIpMask, iwfCfgPppIndex=iwfCfgPppIndex, iwfCallStTotCntgFax9600MoTerm=iwfCallStTotCntgFax9600MoTerm, iwfDxSsTrAd9600NoMdmResCnt=iwfDxSsTrAd9600NoMdmResCnt, iwfOprFrRly=iwfOprFrRly, iwfTcpStSegmentRetransmitted=iwfTcpStSegmentRetransmitted, iwfIsReAssemblySuccessful=iwfIsReAssemblySuccessful, iwfTdmClkTrClearStatus=iwfTdmClkTrClearStatus, iwfCfgTiLocalIpAddress=iwfCfgTiLocalIpAddress, iwfPbTrChanClearThreshTime=iwfPbTrChanClearThreshTime, iwfIcmpStDestUnreachableRx=iwfIcmpStDestUnreachableRx, iwfPppStBytesTx=iwfPppStBytesTx, iwfOprTcpIpEntry=iwfOprTcpIpEntry, iwfIcmpStAddressMasksRepliesTx=iwfIcmpStAddressMasksRepliesTx, iwfPbStAbortFramesrx=iwfPbStAbortFramesrx, iwfCallStTotDiscAd14400MoTerm=iwfCallStTotDiscAd14400MoTerm, iwfPppStFramesTx=iwfPppStFramesTx, iwfOprTiMaxDataRetrans=iwfOprTiMaxDataRetrans, iwfCfgPbTrap=iwfCfgPbTrap, iwfOprTiDefualtGatewayIp=iwfOprTiDefualtGatewayIp, iwfCfgPppMaxNumbTermRequests=iwfCfgPppMaxNumbTermRequests, iwfCallStQncTerminatedSs9600=iwfCallStQncTerminatedSs9600, iwfCfgQ921N200MaxFrameRetrans=iwfCfgQ921N200MaxFrameRetrans, iwfIsDatagramsForwarded=iwfIsDatagramsForwarded, iwfCfgCcSsTrapEntry=iwfCfgCcSsTrapEntry, iwfCoSsTrIndex=iwfCoSsTrIndex, iwfOprTiIndex=iwfOprTiIndex, iwfPppSsTrMrgOperStatus=iwfPppSsTrMrgOperStatus, iwfCfgTdmSsTrap=iwfCfgTdmSsTrap, iwfCallStQncConnectingSs14400=iwfCallStQncConnectingSs14400, iwfCcSsTrAd9600NoMdmResCnt=iwfCcSsTrAd9600NoMdmResCnt, iwfOprQ921N201TxMaxOctetInfo=iwfOprQ921N201TxMaxOctetInfo, iwfOprCallStatsEntry=iwfOprCallStatsEntry, iwfQncSecondaryIpAddress=iwfQncSecondaryIpAddress, iwfCfgPbClkTrap=iwfCfgPbClkTrap, iwfCoSsTrSysNoRespErrCnt=iwfCoSsTrSysNoRespErrCnt, iwfCfgCsMobOrigAdStats=iwfCfgCsMobOrigAdStats, iwfUdpStDatagramNoPorts=iwfUdpStDatagramNoPorts, iwfCallStQncConnectingSs9600=iwfCallStQncConnectingSs9600, iwfCallStQncDisconnectingSs9600=iwfCallStQncDisconnectingSs9600, iwfCfgQncDialedNumber=iwfCfgQncDialedNumber, iwfEthernetNicStatEntry=iwfEthernetNicStatEntry, iwfTdmStAbortFramesrx=iwfTdmStAbortFramesrx, iwfPbStClockLosses=iwfPbStClockLosses, iwfCallStQncTerminatedL2tp9600=iwfCallStQncTerminatedL2tp9600, iwfCfgTcpIpTable=iwfCfgTcpIpTable, iwfPppStatsTable=iwfPppStatsTable, iwfCfgTdmTrapEntry=iwfCfgTdmTrapEntry, iwfCallStTotDiscFax14400MoOrg=iwfCallStTotDiscFax14400MoOrg, iwfOprQ933Index=iwfOprQ933Index, iwfTdmTrChanNonOperThreshTime=iwfTdmTrChanNonOperThreshTime, iwfIsOutputPacketsNoRoute=iwfIsOutputPacketsNoRoute, iwfPbSsTrStatus=iwfPbSsTrStatus, iwfCfgQ933Index=iwfCfgQ933Index, iwfMdmStatsEntry=iwfMdmStatsEntry, iwfOprPppNegotiateTime=iwfOprPppNegotiateTime, iwfPppStAlignmentErrors=iwfPppStAlignmentErrors, iwfCfgCsLogTermTrapEna=iwfCfgCsLogTermTrapEna, iwfCcSsTrMrgOperThreshCnt=iwfCcSsTrMrgOperThreshCnt, iwfTdmTrChFrameOverflowCnt=iwfTdmTrChFrameOverflowCnt, iwfCallStTotDiscFax14400MoTerm=iwfCallStTotDiscFax14400MoTerm, iwfCfgQ921=iwfCfgQ921, iwfTcpSsTrIndex=iwfTcpSsTrIndex, iwfCfgTcpIpEntry=iwfCfgTcpIpEntry, iwfTdmStats=iwfTdmStats, iwfIsPacketsRx=iwfIsPacketsRx, iwfDxSsTrIndex=iwfDxSsTrIndex, iwfPbSsTrClearStatus=iwfPbSsTrClearStatus, iwfCcSsTrFax9600NoSysResCnt=iwfCcSsTrFax9600NoSysResCnt, iwfCfgQ933T309DataLinkDiscTimr=iwfCfgQ933T309DataLinkDiscTimr, iwfCfgCcSsTrap=iwfCfgCcSsTrap, iwfCcSsTrAd9600PrtErrCnt=iwfCcSsTrAd9600PrtErrCnt, iwfEnsPacketsRxPerSec=iwfEnsPacketsRxPerSec, iwfCallStTotFailFax14400MoOrg=iwfCallStTotFailFax14400MoOrg, iwfLogStats=iwfLogStats, iwfLogCallingPartyNum=iwfLogCallingPartyNum, iwfCmpStats=iwfCmpStats, iwfCallStTotFailFax9600MoTerm=iwfCallStTotFailFax9600MoTerm, iwfDxSsTrClearThreshTimer=iwfDxSsTrClearThreshTimer, iwfCallStQncConnectingL2tp14400=iwfCallStQncConnectingL2tp14400, iwfDxSsTrAd14400SktErrCnt=iwfDxSsTrAd14400SktErrCnt, iwfOprQncSrvTable=iwfOprQncSrvTable, iwfTdmTrChanNonOperThreshCnt=iwfTdmTrChanNonOperThreshCnt, iwfLogNumFaxPagesProcessed=iwfLogNumFaxPagesProcessed, iwfLogStatsTable=iwfLogStatsTable, iwfCallStTotFailAd14400MoOrg=iwfCallStTotFailAd14400MoOrg, iwfCfgQncSrvIndex=iwfCfgQncSrvIndex, iwfLogStatsEntry=iwfLogStatsEntry, iwfOprTiLocalIpAddress=iwfOprTiLocalIpAddress, iwfOprQ921T200IframeAckTimer=iwfOprQ921T200IframeAckTimer, iwfIcmpStErrorsTx=iwfIcmpStErrorsTx, iwfCfgCsIndex=iwfCfgCsIndex, iwfCallStQncConnectedPpp9600=iwfCallStQncConnectedPpp9600, iwfDxSsTrFax14400PrtErrCnt=iwfDxSsTrFax14400PrtErrCnt, iwfPbStIndex=iwfPbStIndex, iwfPbTrChFrameOverflowCnt=iwfPbTrChFrameOverflowCnt, iwfPppSsTrMrgOperBitMask=iwfPppSsTrMrgOperBitMask, iwfOprQ933T305DisconnectTimer=iwfOprQ933T305DisconnectTimer, iwfEnsBytesRxPerSec=iwfEnsBytesRxPerSec, iwfTcpStIndex=iwfTcpStIndex, iwfCfgTdmTrap=iwfCfgTdmTrap, iwfDxSsTrClearStatus=iwfDxSsTrClearStatus, iwfLogMobileNumBytesRxed=iwfLogMobileNumBytesRxed, iwfOprCsMobOrigFaxStats=iwfOprCsMobOrigFaxStats, iwfOprQ933T309DataLinkDiscTimr=iwfOprQ933T309DataLinkDiscTimr, iwfCfgTiDefualtGatewayIp=iwfCfgTiDefualtGatewayIp, iwfQ921Stats=iwfQ921Stats, iwfLogCallConnectingTime=iwfLogCallConnectingTime, iwfCallStTotDiscFax9600MoOrg=iwfCallStTotDiscFax9600MoOrg, iwfLogCompType=iwfLogCompType, usr=usr, iwfQ933StAccumOutOfSeqIframes=iwfQ933StAccumOutOfSeqIframes, iwfIcmpStErrorsRx=iwfIcmpStErrorsRx, iwfPppStBytesRx=iwfPppStBytesRx, iwfIcmpStTimeExceededTx=iwfIcmpStTimeExceededTx, iwfCallStQncTerminatedSs14400=iwfCallStQncTerminatedSs14400, iwfPbStFramesOverruns=iwfPbStFramesOverruns, iwfIsRxPacketsDiscarded=iwfIsRxPacketsDiscarded, iwfPppSsTrCrcErrCnt=iwfPppSsTrCrcErrCnt, iwfCallStats=iwfCallStats, iwfCmpStatsTable=iwfCmpStatsTable, iwfCoSsTrClearThreshTimer=iwfCoSsTrClearThreshTimer, iwfEnsPacketsOutBoundErrors=iwfEnsPacketsOutBoundErrors, iwfCoSsTrMrgOperThreshCnt=iwfCoSsTrMrgOperThreshCnt, iwfCfgPppMaxNumbConfigRequests=iwfCfgPppMaxNumbConfigRequests, iwfTdmSsTrClearStatus=iwfTdmSsTrClearStatus, iwfPppStTotalErrors=iwfPppStTotalErrors, iwfTdmStClkStatus=iwfTdmStClkStatus, iwfCfgTcpSsTrapTable=iwfCfgTcpSsTrapTable, iwfEthernetNicStat=iwfEthernetNicStat, iwfPbClkTrNonOperThreshTimer=iwfPbClkTrNonOperThreshTimer, iwfCfgTiMaxMtuSize=iwfCfgTiMaxMtuSize, iwfCfgPbClkTrapEntry=iwfCfgPbClkTrapEntry, iwfCfgQ921KmaxOutStandPkt=iwfCfgQ921KmaxOutStandPkt, iwfCcSsTrFax9600PrtErrCnt=iwfCcSsTrFax9600PrtErrCnt, iwfCallStTotTermFax14400MoTerm=iwfCallStTotTermFax14400MoTerm, iwfOprFrRlyTable=iwfOprFrRlyTable, iwfCcSsTrMrgOperBitMask=iwfCcSsTrMrgOperBitMask, iwfOprCsMobTermAdStats=iwfOprCsMobTermAdStats, iwfEnsPacketsRxUnknown=iwfEnsPacketsRxUnknown, iwfCallStTotCntgAd14400MoTerm=iwfCallStTotCntgAd14400MoTerm, iwfCfgQ933T310CallProceedTimer=iwfCfgQ933T310CallProceedTimer, iwfIsRxPacketsDelivered=iwfIsRxPacketsDelivered, iwfLogCallType=iwfLogCallType, iwfOprQncSrv=iwfOprQncSrv, iwfOprTiDefaultTimeToLive=iwfOprTiDefaultTimeToLive, iwfCcSsTrIndex=iwfCcSsTrIndex, iwfIcmpStIndex=iwfIcmpStIndex, iwfCallStTotConnAd9600MobOrg=iwfCallStTotConnAd9600MobOrg, iwfPppStTimeOutErrors=iwfPppStTimeOutErrors, iwfTdmSsTrMrgOperThreshTime=iwfTdmSsTrMrgOperThreshTime, iwfCfgQ933T303SetupTimer=iwfCfgQ933T303SetupTimer, iwfEnsBytesTxPerSec=iwfEnsBytesTxPerSec, iwfIcmpStEchosRepliesRx=iwfIcmpStEchosRepliesRx, iwfTcpStSegmentTx=iwfTcpStSegmentTx, iwfPbTrChAbortErrCnt=iwfPbTrChAbortErrCnt, iwfCfgTiIndex=iwfCfgTiIndex, iwfIcmpStMessagesTx=iwfIcmpStMessagesTx, iwfIpStatsEntry=iwfIpStatsEntry, iwfIcmpStMessagesRx=iwfIcmpStMessagesRx, iwfTdmTrTdmChannel=iwfTdmTrTdmChannel, iwfCfgTdmClkTrapTable=iwfCfgTdmClkTrapTable, iwfCfgCoSsTrap=iwfCfgCoSsTrap, iwfOprQncSrvEntry=iwfOprQncSrvEntry, iwfCallStTotConnAd14400MoTerm=iwfCallStTotConnAd14400MoTerm, iwfOprCsMobTermFaxStats=iwfOprCsMobTermFaxStats, iwfOprPppParamEntry=iwfOprPppParamEntry, iwfLogServiceOption=iwfLogServiceOption, iwfIcmpStats=iwfIcmpStats, iwfPppStIndex=iwfPppStIndex, iwfPbTrChanNonOperThreshTime=iwfPbTrChanNonOperThreshTime, iwfCallStQncDiscconnectingL2tp14400=iwfCallStQncDiscconnectingL2tp14400, iwfCfgCallStats=iwfCfgCallStats, iwfTcpStResetConnections=iwfTcpStResetConnections, iwfOprTiMaxMtuSize=iwfOprTiMaxMtuSize, iwfPppStats=iwfPppStats, iwfCcSsTrNonOperThreshCnt=iwfCcSsTrNonOperThreshCnt, iwfDxSsTrFax9600NoSysResCnt=iwfDxSsTrFax9600NoSysResCnt, iwfCallStTotTermAd9600MoTerm=iwfCallStTotTermAd9600MoTerm, iwfTdmClkTrIndex=iwfTdmClkTrIndex, iwfCallStQncConnectingL2tp9600=iwfCallStQncConnectingL2tp9600, iwfCfgCoSsTrapTable=iwfCfgCoSsTrapTable, iwfOprQ921N200MaxFrameRetrans=iwfOprQ921N200MaxFrameRetrans, iwfCallStQncTerminatedPpp14400=iwfCallStQncTerminatedPpp14400, iwfPbSsTrClearThreshtime=iwfPbSsTrClearThreshtime, iwfCfgQ933T308ReleaseTimer=iwfCfgQ933T308ReleaseTimer, iwfEnsIndex=iwfEnsIndex, iwfCallStTotTermFax14400MoOrg=iwfCallStTotTermFax14400MoOrg, iwfIpStatsTable=iwfIpStatsTable, iwfCfgQ921Index=iwfCfgQ921Index, iwfQ933StIndex=iwfQ933StIndex, iwfCfgTdmSsTrIndex=iwfCfgTdmSsTrIndex, iwfQncServiceType=iwfQncServiceType, iwfPbTrChanClearStatus=iwfPbTrChanClearStatus, iwfLogTotConnectTime=iwfLogTotConnectTime, iwfCfgCsMobOrigFaxStats=iwfCfgCsMobOrigFaxStats, iwfOprPppRestartTime=iwfOprPppRestartTime, iwfCcSsTrAd14400SktErrCnt=iwfCcSsTrAd14400SktErrCnt, iwfIsIndex=iwfIsIndex, iwfCfgQncSrvIndex2=iwfCfgQncSrvIndex2, iwfEnsOutputQueueLength=iwfEnsOutputQueueLength, iwfTcpSsTrMrgOperThreshCnt=iwfTcpSsTrMrgOperThreshCnt, iwfCcSsTrFax14400NoMdmResCnt=iwfCcSsTrFax14400NoMdmResCnt, iwfIsOutputRequests=iwfIsOutputRequests, iwfCfgFrRlyT391StatusEnqryTimr=iwfCfgFrRlyT391StatusEnqryTimr, iwfCallStQncConnectedPptp9600=iwfCallStQncConnectedPptp9600, iwfTcpSsTrMrgOperBitMask=iwfTcpSsTrMrgOperBitMask, iwfTdmSsTrNonOperThreshCnt=iwfTdmSsTrNonOperThreshCnt, iwfOprPppIpAddressPoolMax=iwfOprPppIpAddressPoolMax, iwfCallStTotTermAd9600MoOrg=iwfCallStTotTermAd9600MoOrg, iwfTdmStCrcErrors=iwfTdmStCrcErrors, iwfCoSsTrNonOperThreshTimer=iwfCoSsTrNonOperThreshTimer, iwfTdmTrStatus=iwfTdmTrStatus, iwfTdmTrChanClearThreshCnt=iwfTdmTrChanClearThreshCnt, iwfIsDiscardedOutputPackets=iwfIsDiscardedOutputPackets, iwfPppSsTrMrgOperThreshTimer=iwfPppSsTrMrgOperThreshTimer, iwfCallStTotDiscFax9600MoTerm=iwfCallStTotDiscFax9600MoTerm, iwfOprQ933=iwfOprQ933, iwfCfgCsLogStartTrapEna=iwfCfgCsLogStartTrapEna, iwfOprFrRlyEntry=iwfOprFrRlyEntry, iwfUdpStDatagramtx=iwfUdpStDatagramtx, iwfPbSsTrIndex=iwfPbSsTrIndex, iwfCallStTotTermFax9600MoOrg=iwfCallStTotTermFax9600MoOrg, iwfDxSsTrNonOperStatus=iwfDxSsTrNonOperStatus, iwfOprFrRlyIndex=iwfOprFrRlyIndex, iwfCcSsTrMrgOperStatus=iwfCcSsTrMrgOperStatus, iwfCfgPppParamEntry=iwfCfgPppParamEntry, iwfCallStTotCntgFax14400MoOrg=iwfCallStTotCntgFax14400MoOrg, iwfCfgPppSsTrapEntry=iwfCfgPppSsTrapEntry, iwfTdmStatsTable=iwfTdmStatsTable, iwfDxSsTrAd9600SktErrCnt=iwfDxSsTrAd9600SktErrCnt, iwfCfgPppSsTrapTable=iwfCfgPppSsTrapTable, iwfCoSsTrMrgOperStatus=iwfCoSsTrMrgOperStatus, iwfOprTiKeepAliveInterval=iwfOprTiKeepAliveInterval, iwfLogIMSI=iwfLogIMSI, iwfIsIpReceived=iwfIsIpReceived, iwfTcpStCurrentConnections=iwfTcpStCurrentConnections, iwfTcpStSegmentRx=iwfTcpStSegmentRx, iwfPbTrChStatus=iwfPbTrChStatus, iwfCallStTotDiscAd9600MoOrg=iwfCallStTotDiscAd9600MoOrg, iwfCoSsTrMrgOperThreshTimer=iwfCoSsTrMrgOperThreshTimer, iwfIcmpStTimeExceededRx=iwfIcmpStTimeExceededRx, iwfDxSsTrAd9600NoSysResCnt=iwfDxSsTrAd9600NoSysResCnt, iwfOprMaxNumbConfigRequests=iwfOprMaxNumbConfigRequests, iwfCfgTcpIp=iwfCfgTcpIp, iwfTcpStatsEntry=iwfTcpStatsEntry, iwfCallStQncConnectedPpp14400=iwfCallStQncConnectedPpp14400, iwfDxSsTrFax14400SktErrCnt=iwfDxSsTrFax14400SktErrCnt, iwfPbSsTrNonOperStatus=iwfPbSsTrNonOperStatus, iwfCcSsTrNonOperStatus=iwfCcSsTrNonOperStatus, iwfCcSsTrClearThreshTimer=iwfCcSsTrClearThreshTimer, iwfCfgPbSsTrapEntry=iwfCfgPbSsTrapEntry, iwfCallStQncDisconnectingPptp9600=iwfCallStQncDisconnectingPptp9600, iwfIcmpStAddressMasksTx=iwfIcmpStAddressMasksTx)
mibBuilder.exportSymbols("IWFG-MIB", iwfIcmpStParameterProblemsTx=iwfIcmpStParameterProblemsTx, iwfCfgTiDefaultTimeToLive=iwfCfgTiDefaultTimeToLive, iwfTdmTrChanMrgOperThreshCnt=iwfTdmTrChanMrgOperThreshCnt, iwfTdmSsTrClearThreshCnt=iwfTdmSsTrClearThreshCnt, iwfPbSsTrNonOperThreshTime=iwfPbSsTrNonOperThreshTime, iwfIpStats=iwfIpStats, iwfCallStQncTerminatedL2tp14400=iwfCallStQncTerminatedL2tp14400, iwfOprPppParamTable=iwfOprPppParamTable, iwfCfgTdmClkTrap=iwfCfgTdmClkTrap, iwfOprQ933Table=iwfOprQ933Table, iwfCfgTiDefaultServiceType=iwfCfgTiDefaultServiceType, iwfPppStBytesRxPerSec=iwfPppStBytesRxPerSec, iwfTdmSsTrMrgOperStatus=iwfTdmSsTrMrgOperStatus, iwfCallStTotCompv42MoOrg=iwfCallStTotCompv42MoOrg, iwfPbTrChanMrgOperThreshTime=iwfPbTrChanMrgOperThreshTime, iwfCallStTotConnFax14400MobOrg=iwfCallStTotConnFax14400MobOrg, iwfOprQ921Table=iwfOprQ921Table, iwfQ933StatsTable=iwfQ933StatsTable, iwfCfgTiMaxConnectReTrans=iwfCfgTiMaxConnectReTrans, iwfDxSsTrFax9600SktErrCnt=iwfDxSsTrFax9600SktErrCnt, iwfCfgFrRlyT392StatusTimer=iwfCfgFrRlyT392StatusTimer, iwfPppSsTrNonOperThreshTimer=iwfPppSsTrNonOperThreshTimer, iwfCallStTotTermAd14400MoTerm=iwfCallStTotTermAd14400MoTerm, iwfCfgPppParamTable=iwfCfgPppParamTable, iwfOprTiMaxConnectReTrans=iwfOprTiMaxConnectReTrans, iwfLogCalledPartyNum=iwfLogCalledPartyNum, iwfCallStTotCntgFax14400MoTerm=iwfCallStTotCntgFax14400MoTerm, iwfIcmpStAddressMasksRepliesRx=iwfIcmpStAddressMasksRepliesRx, iwfEnsPacketsOutBoundDiscarded=iwfEnsPacketsOutBoundDiscarded, iwfPppStFramesTxPerSec=iwfPppStFramesTxPerSec, iwfQ933StAccumUknownIframes=iwfQ933StAccumUknownIframes, iwfCallStQncConnectedL2tp9600=iwfCallStQncConnectedL2tp9600, iwfCallStCurrentNumConnCalls=iwfCallStCurrentNumConnCalls, iwfOprPppIpAddressPoolMin=iwfOprPppIpAddressPoolMin, iwfCallStTotFailFax9600MoOrg=iwfCallStTotFailFax9600MoOrg, iwfPbTrChanMrgOperBitMask=iwfPbTrChanMrgOperBitMask, iwfCfgPppIpAddressPoolMax=iwfCfgPppIpAddressPoolMax, iwfCfgDxSsTrapTable=iwfCfgDxSsTrapTable, iwfPbStLinkLosses=iwfPbStLinkLosses, iwfCallStQncConnectingPpp14400=iwfCallStQncConnectingPpp14400, iwfOprPppParam=iwfOprPppParam, iwfTdmStatsEntry=iwfTdmStatsEntry, iwfCallStQncTerminatedPptp14400=iwfCallStQncTerminatedPptp14400, iwfCallStTotConnFax9600MoTerm=iwfCallStTotConnFax9600MoTerm, iwfIsRoutingDiscarded=iwfIsRoutingDiscarded, iwfTcpSsTrNonOperThreshTimer=iwfTcpSsTrNonOperThreshTimer, iwfDxSsTrStatus=iwfDxSsTrStatus, iwfPppSsTrStatus=iwfPppSsTrStatus, iwfPppSsTrClearStatus=iwfPppSsTrClearStatus, iwfCallStQncDiscconnectingSs14400=iwfCallStQncDiscconnectingSs14400, iwfUdpStDatagramRx=iwfUdpStDatagramRx, iwfCcSsTrStatus=iwfCcSsTrStatus, iwfLogStsIndex=iwfLogStsIndex, iwfCfgCallStatsTable=iwfCfgCallStatsTable, iwfCfgQ921Entry=iwfCfgQ921Entry, iwfCoSsTrNonOperThreshCnt=iwfCoSsTrNonOperThreshCnt, iwfCfgDxSsTrapEntry=iwfCfgDxSsTrapEntry, iwfOprQ921N201RxMaxOctetInfo=iwfOprQ921N201RxMaxOctetInfo, iwfLogMobileNumBytesTxed=iwfLogMobileNumBytesTxed, iwfCallStTotFailAd9600MoTerm=iwfCallStTotFailAd9600MoTerm, iwfPbTrModemSlot=iwfPbTrModemSlot, iwfEthernetNicStatTable=iwfEthernetNicStatTable, iwfTcpStActiveOpens=iwfTcpStActiveOpens, iwfQ921StatsEntry=iwfQ921StatsEntry, iwfQ921StAccumFrsvcSusSysError=iwfQ921StAccumFrsvcSusSysError, iwfTdmTrIndex=iwfTdmTrIndex, iwfOprTiKeepAliveTime=iwfOprTiKeepAliveTime, iwfOprPppForceEncryptpassword=iwfOprPppForceEncryptpassword, iwfCfgQ933=iwfCfgQ933, iwfCfgTiKeepAliveInterval=iwfCfgTiKeepAliveInterval, iwfPbSsTrMrgOperStatus=iwfPbSsTrMrgOperStatus, iwfTdmTrChanClearThreshTime=iwfTdmTrChanClearThreshTime, iwfQncPrimaryIpAddress=iwfQncPrimaryIpAddress, iwfCallStTotFailAd9600MoOrg=iwfCallStTotFailAd9600MoOrg, iwfCmpStatsEntry=iwfCmpStatsEntry, iwfLogModemSetupTime=iwfLogModemSetupTime, iwfCcSsTrMrgOperThreshTimer=iwfCcSsTrMrgOperThreshTimer, iwfCfgCsMobTermAdStats=iwfCfgCsMobTermAdStats, iwfCfgTdmSsTrapEntry=iwfCfgTdmSsTrapEntry, iwfOprQ921T203MaxTimeNoIframe=iwfOprQ921T203MaxTimeNoIframe, iwfDxSsTrFax14400NoMdmResCnt=iwfDxSsTrFax14400NoMdmResCnt, iwfCcSsTrFax14400SktErrCnt=iwfCcSsTrFax14400SktErrCnt, iwfCfgPppIpAddressPoolMin=iwfCfgPppIpAddressPoolMin, iwfPbStClkStatus=iwfPbStClkStatus, iwfCallStTotConnFax14400MoTerm=iwfCallStTotConnFax14400MoTerm, iwfCfgDxSsTrap=iwfCfgDxSsTrap, iwfCfgQ921T200IframeAckTimer=iwfCfgQ921T200IframeAckTimer, iwfOprQ933Entry=iwfOprQ933Entry, iwfOprFrRlyT391StatusEnqryTimr=iwfOprFrRlyT391StatusEnqryTimr, iwfCfgPbSsTrapTable=iwfCfgPbSsTrapTable, iwfCallStQncDisconnectingL2tp9600=iwfCallStQncDisconnectingL2tp9600, iwfTdmSsTrStatus=iwfTdmSsTrStatus, iwfCfgQncSrvEntry=iwfCfgQncSrvEntry, iwfCfgPppSsTrap=iwfCfgPppSsTrap)
