#
# PySNMP MIB module TAGEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TAGEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:15:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
tagExt, = mibBuilder.importSymbols("APENT-MIB", "tagExt")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, TimeTicks, NotificationType, Gauge32, iso, Bits, IpAddress, ObjectIdentity, ModuleIdentity, MibIdentifier, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "TimeTicks", "NotificationType", "Gauge32", "iso", "Bits", "IpAddress", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
apTagExtMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 53, 1))
if mibBuilder.loadTexts: apTagExtMib.setLastUpdated('9012092000Z')
if mibBuilder.loadTexts: apTagExtMib.setOrganization('ArrowPoint Communications Inc.')
if mibBuilder.loadTexts: apTagExtMib.setContactInfo(' Postal: ArrowPoint Communications Inc. 50 Nagog Park Acton, Massachusetts 01886 Tel: +1 978 206 3077 E-Mail: mibsupport@arrowpoint.com')
if mibBuilder.loadTexts: apTagExtMib.setDescription('The MIB module used to describe the ArrowPoint Communications Content Tag Lists')
apTagListTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 53, 2), )
if mibBuilder.loadTexts: apTagListTable.setStatus('current')
if mibBuilder.loadTexts: apTagListTable.setDescription('A list of content tag lists')
apTagListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 53, 2, 1), ).setIndexNames((0, "TAGEXT-MIB", "apTagListName"))
if mibBuilder.loadTexts: apTagListEntry.setStatus('current')
if mibBuilder.loadTexts: apTagListEntry.setDescription('A group of information uniquely identifying a tag list')
apTagListName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagListName.setStatus('current')
if mibBuilder.loadTexts: apTagListName.setDescription('The name of the Tag List')
apTagListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagListDescription.setStatus('current')
if mibBuilder.loadTexts: apTagListDescription.setDescription('An Tag List description')
apTagListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagListStatus.setStatus('current')
if mibBuilder.loadTexts: apTagListStatus.setDescription('Status entry for this row ')
apTagInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3), )
if mibBuilder.loadTexts: apTagInfoTable.setStatus('current')
if mibBuilder.loadTexts: apTagInfoTable.setDescription('A list of tag info blocks associated with a tag list')
apTagInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1), ).setIndexNames((0, "TAGEXT-MIB", "apTagListName"), (0, "TAGEXT-MIB", "apTagName"))
if mibBuilder.loadTexts: apTagInfoEntry.setStatus('current')
if mibBuilder.loadTexts: apTagInfoEntry.setDescription('Information uniquely identifying a tag within a tag list')
apTagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagIndex.setStatus('current')
if mibBuilder.loadTexts: apTagIndex.setDescription("The tag's index")
apTagType = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("request-line", 0), ("user-agent", 1), ("language", 2), ("host", 3), ("pragma", 4), ("cache-control", 5), ("cookies", 6), ("connection", 7), ("charset", 8), ("encoding", 9), ("accept", 10), ("referer", 11)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagType.setStatus('current')
if mibBuilder.loadTexts: apTagType.setDescription('The type of the content tag to be processed')
apTagName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagName.setStatus('current')
if mibBuilder.loadTexts: apTagName.setDescription('A unique name to identify the tag info entry.')
apTagDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagDescription.setStatus('current')
if mibBuilder.loadTexts: apTagDescription.setDescription('A description of this tag entry')
apTagOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("contain", 1), ("not-contain", 2), ("equal", 3), ("not-equal", 4), ("exist", 5), ("not-exist", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagOperator.setStatus('current')
if mibBuilder.loadTexts: apTagOperator.setDescription('The operation used by the tag')
apTagKeyword = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagKeyword.setStatus('current')
if mibBuilder.loadTexts: apTagKeyword.setDescription('The keyword used for the tag operation')
apTagKeywordLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagKeywordLen.setStatus('current')
if mibBuilder.loadTexts: apTagKeywordLen.setDescription('The length of the keyword being used')
apTagKqlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagKqlName.setStatus('current')
if mibBuilder.loadTexts: apTagKqlName.setDescription('The name of the associated keyword list')
apTagSearchLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagSearchLen.setStatus('current')
if mibBuilder.loadTexts: apTagSearchLen.setDescription('The optional length used to search the tag')
apTagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apTagStatus.setStatus('current')
if mibBuilder.loadTexts: apTagStatus.setDescription('Status entry for this row ')
apKqlTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 53, 4), )
if mibBuilder.loadTexts: apKqlTable.setStatus('current')
if mibBuilder.loadTexts: apKqlTable.setDescription('A list of keyword qualifier lists')
apKqlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 53, 4, 1), ).setIndexNames((0, "TAGEXT-MIB", "apKqlName"))
if mibBuilder.loadTexts: apKqlEntry.setStatus('current')
if mibBuilder.loadTexts: apKqlEntry.setDescription('A group of information uniquely identifying an KQL. One entry exists for each KQL')
apKqlName = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKqlName.setStatus('current')
if mibBuilder.loadTexts: apKqlName.setDescription('The name of the KQL')
apKqlDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKqlDescription.setStatus('current')
if mibBuilder.loadTexts: apKqlDescription.setDescription('An KQL description')
apKqlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKqlStatus.setStatus('current')
if mibBuilder.loadTexts: apKqlStatus.setDescription('Status entry for this row ')
apKeywordTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 53, 5), )
if mibBuilder.loadTexts: apKeywordTable.setStatus('current')
if mibBuilder.loadTexts: apKeywordTable.setDescription('A list of keywords associated with an KQL')
apKeywordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 53, 5, 1), ).setIndexNames((0, "TAGEXT-MIB", "apKqlName"), (0, "TAGEXT-MIB", "apKeywordStr"))
if mibBuilder.loadTexts: apKeywordEntry.setStatus('current')
if mibBuilder.loadTexts: apKeywordEntry.setDescription('Information uniquely identifying an extension within a KQL')
apKeywordStr = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKeywordStr.setStatus('current')
if mibBuilder.loadTexts: apKeywordStr.setDescription('The keyword character string')
apKeywordStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 53, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apKeywordStatus.setStatus('current')
if mibBuilder.loadTexts: apKeywordStatus.setDescription('Status entry for this row ')
mibBuilder.exportSymbols("TAGEXT-MIB", apTagListName=apTagListName, apTagInfoEntry=apTagInfoEntry, apKqlName=apKqlName, apTagKeywordLen=apTagKeywordLen, apTagKqlName=apTagKqlName, apKqlDescription=apKqlDescription, apTagInfoTable=apTagInfoTable, apTagType=apTagType, apTagDescription=apTagDescription, apTagStatus=apTagStatus, apKqlEntry=apKqlEntry, apKeywordEntry=apKeywordEntry, apTagExtMib=apTagExtMib, apKqlTable=apKqlTable, apKeywordTable=apKeywordTable, apTagListTable=apTagListTable, PYSNMP_MODULE_ID=apTagExtMib, apTagKeyword=apTagKeyword, apTagOperator=apTagOperator, apKqlStatus=apKqlStatus, apTagListDescription=apTagListDescription, apKeywordStr=apKeywordStr, apTagListEntry=apTagListEntry, apTagSearchLen=apTagSearchLen, apTagIndex=apTagIndex, apTagName=apTagName, apKeywordStatus=apKeywordStatus, apTagListStatus=apTagListStatus)
