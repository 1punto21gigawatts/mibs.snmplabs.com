#
# PySNMP MIB module H3C-UI-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-UI-MAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:24:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, NotificationType, Gauge32, ModuleIdentity, Integer32, Counter32, Counter64, iso, Unsigned32, MibIdentifier, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Gauge32", "ModuleIdentity", "Integer32", "Counter32", "Counter64", "iso", "Unsigned32", "MibIdentifier", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
h3cUIMgt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2))
if mibBuilder.loadTexts: h3cUIMgt.setLastUpdated('200404081405Z')
if mibBuilder.loadTexts: h3cUIMgt.setOrganization('huawei-3com Technologies Co., Ltd.')
if mibBuilder.loadTexts: h3cUIMgt.setContactInfo('Comware Team Huawei-3com Technologies co.,Ltd. Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei-3com.com Zip:100085')
if mibBuilder.loadTexts: h3cUIMgt.setDescription('User interfaces management MIB')
h3cUIMgtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1))
h3cUIBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1))
h3cUIScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 1))
h3cUITrapBindObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 2))
h3cTerminalUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cTerminalUserName.setStatus('current')
if mibBuilder.loadTexts: h3cTerminalUserName.setDescription(' It represents the name of the logging user when login with authentication, otherwise login mode, such as Console, AUX, TTY, VTY etc. ')
h3cTerminalSource = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cTerminalSource.setStatus('current')
if mibBuilder.loadTexts: h3cTerminalSource.setDescription(' Login mode, such as Console, AUX, TTY, VTY etc. ')
h3cTerminalUserAuthFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("exceedRetries", 1), ("authTimeout", 2), ("otherReason", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cTerminalUserAuthFailureReason.setStatus('current')
if mibBuilder.loadTexts: h3cTerminalUserAuthFailureReason.setDescription('The reason why a user failed to log in.')
h3cUINotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 3))
h3cUINotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 3, 0))
h3cLogIn = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 3, 0, 1)).setObjects(("H3C-UI-MAN-MIB", "h3cTerminalUserName"), ("H3C-UI-MAN-MIB", "h3cTerminalSource"))
if mibBuilder.loadTexts: h3cLogIn.setStatus('current')
if mibBuilder.loadTexts: h3cLogIn.setDescription(' This notification is generated when a user logs in. ')
h3cLogOut = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 3, 0, 2)).setObjects(("H3C-UI-MAN-MIB", "h3cTerminalUserName"), ("H3C-UI-MAN-MIB", "h3cTerminalSource"))
if mibBuilder.loadTexts: h3cLogOut.setStatus('current')
if mibBuilder.loadTexts: h3cLogOut.setDescription(' This notification is generated when a user logs out. ')
h3cLogInAuthenFailure = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 1, 3, 0, 3)).setObjects(("H3C-UI-MAN-MIB", "h3cTerminalUserName"), ("H3C-UI-MAN-MIB", "h3cTerminalSource"), ("H3C-UI-MAN-MIB", "h3cTerminalUserAuthFailureReason"))
if mibBuilder.loadTexts: h3cLogInAuthenFailure.setStatus('current')
if mibBuilder.loadTexts: h3cLogInAuthenFailure.setDescription(' This notification is generated when a user fails to log in because of authentication. ')
h3cVtyMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2))
h3cVtyAccTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1), )
if mibBuilder.loadTexts: h3cVtyAccTable.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccTable.setDescription('Description.')
h3cVtyAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1, 1), ).setIndexNames((0, "H3C-UI-MAN-MIB", "h3cVtyAccUserIndex"), (0, "H3C-UI-MAN-MIB", "h3cVtyAccConnway"))
if mibBuilder.loadTexts: h3cVtyAccEntry.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccEntry.setDescription('Description.')
h3cVtyAccUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: h3cVtyAccUserIndex.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccUserIndex.setDescription(' The relative index of the user interface of vty. ')
h3cVtyAccConnway = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 12))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("linkinbound", 3), ("acl6inbound", 11), ("acl6outbound", 12))))
if mibBuilder.loadTexts: h3cVtyAccConnway.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccConnway.setDescription(' inbound(1):Filter login connections from current UI with ipv4 layer acl. outbound(2):Filter logout connections from current UI with ipv4 layer acl. linkinbound(3):Filter login connections from current UI with link layer acl. acl6inbound(11):Filter login connections from current UI with ipv6 layer acl. acl6outbound(12):Filter logout connections from current UI with ipv6 layer acl. ')
h3cVtyAccAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVtyAccAclNum.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccAclNum.setDescription(' The filter rule number of ACL. ')
h3cVtyAccEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cVtyAccEntryRowStatus.setStatus('current')
if mibBuilder.loadTexts: h3cVtyAccEntryRowStatus.setDescription(' The status of this conceptual row. Now only support CreateAndGo and Destroy and Active. ')
h3cConStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 3))
h3cConStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 3, 1), )
if mibBuilder.loadTexts: h3cConStatusTable.setStatus('current')
if mibBuilder.loadTexts: h3cConStatusTable.setDescription(' The current status of CONSOLE user interface. A group of attributes are used to describe the current status. ')
h3cConStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 3, 1, 1), ).setIndexNames((0, "H3C-UI-MAN-MIB", "h3cConUserIndex"))
if mibBuilder.loadTexts: h3cConStatusEntry.setStatus('current')
if mibBuilder.loadTexts: h3cConStatusEntry.setDescription(' An entry of h3cConStatusTable. ')
h3cConUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cConUserIndex.setStatus('current')
if mibBuilder.loadTexts: h3cConUserIndex.setDescription(" The index of the user interface of CONSOLE. It's equal to current UserID. ")
h3cConReAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cConReAuth.setStatus('current')
if mibBuilder.loadTexts: h3cConReAuth.setDescription(' The re-authentication attribute of current user interface. After disconnection of current user interface, connection is rebuilt, at the moment disable(1): re-authentication is not need. enable(2): re-authentication is need. ')
h3cUIMgtMIBConformance18 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2))
h3cUIMgtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2, 1))
h3cUIMgtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2, 1, 1)).setObjects(("H3C-UI-MAN-MIB", "h3cUIMgtBasicGroup"), ("H3C-UI-MAN-MIB", "h3cConStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cUIMgtMIBCompliance = h3cUIMgtMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: h3cUIMgtMIBCompliance.setDescription('The compliance statement')
h3cUIMgtManMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2, 2))
h3cUIMgtBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2, 2, 1)).setObjects(("H3C-UI-MAN-MIB", "h3cVtyAccAclNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cUIMgtBasicGroup = h3cUIMgtBasicGroup.setStatus('current')
if mibBuilder.loadTexts: h3cUIMgtBasicGroup.setDescription('A collection of objects for a basic implement.')
h3cConStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 10, 2, 2, 2, 2, 2)).setObjects(("H3C-UI-MAN-MIB", "h3cConReAuth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h3cConStatusGroup = h3cConStatusGroup.setStatus('current')
if mibBuilder.loadTexts: h3cConStatusGroup.setDescription('A collection of current user interface status.')
mibBuilder.exportSymbols("H3C-UI-MAN-MIB", h3cVtyAccUserIndex=h3cVtyAccUserIndex, h3cUIMgtMIBConformance18=h3cUIMgtMIBConformance18, h3cUIMgtObjects=h3cUIMgtObjects, h3cConStatusTable=h3cConStatusTable, h3cConUserIndex=h3cConUserIndex, PYSNMP_MODULE_ID=h3cUIMgt, h3cUIMgtMIBCompliance=h3cUIMgtMIBCompliance, h3cTerminalUserAuthFailureReason=h3cTerminalUserAuthFailureReason, h3cUIMgtMIBCompliances=h3cUIMgtMIBCompliances, h3cUIMgtBasicGroup=h3cUIMgtBasicGroup, h3cUIBasicInfo=h3cUIBasicInfo, h3cUINotificationsPrefix=h3cUINotificationsPrefix, h3cLogOut=h3cLogOut, h3cVtyAccTable=h3cVtyAccTable, h3cVtyAccAclNum=h3cVtyAccAclNum, h3cVtyAccConnway=h3cVtyAccConnway, h3cVtyAccEntry=h3cVtyAccEntry, h3cUIScalarObjects=h3cUIScalarObjects, h3cUITrapBindObjects=h3cUITrapBindObjects, h3cConStatusEntry=h3cConStatusEntry, h3cConStatus=h3cConStatus, h3cUINotifications=h3cUINotifications, h3cVtyMan=h3cVtyMan, h3cConReAuth=h3cConReAuth, h3cVtyAccEntryRowStatus=h3cVtyAccEntryRowStatus, h3cTerminalSource=h3cTerminalSource, h3cTerminalUserName=h3cTerminalUserName, h3cLogIn=h3cLogIn, h3cLogInAuthenFailure=h3cLogInAuthenFailure, h3cConStatusGroup=h3cConStatusGroup, h3cUIMgt=h3cUIMgt, h3cUIMgtManMIBGroups=h3cUIMgtManMIBGroups)
