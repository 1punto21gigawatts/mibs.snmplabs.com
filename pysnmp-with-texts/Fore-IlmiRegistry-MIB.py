#
# PySNMP MIB module Fore-IlmiRegistry-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-IlmiRegistry-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:17:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ilmiRegistry, AtmAddress = mibBuilder.importSymbols("Fore-Common-MIB", "ilmiRegistry", "AtmAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, TimeTicks, Counter64, Bits, iso, Unsigned32, NotificationType, Gauge32, MibIdentifier, ObjectIdentity, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "TimeTicks", "Counter64", "Bits", "iso", "Unsigned32", "NotificationType", "Gauge32", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
ilmiRegistryModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 14, 2))
if mibBuilder.loadTexts: ilmiRegistryModule.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: ilmiRegistryModule.setOrganization('FORE')
if mibBuilder.loadTexts: ilmiRegistryModule.setContactInfo(' Postal: FORE Systems Inc. 1000 FORE Drive Warrendale, PA 15086-7502 Tel: +1 724 742 6900 Email: nm_mibs@fore.com Web: http://www.fore.com')
if mibBuilder.loadTexts: ilmiRegistryModule.setDescription('Fore ILMI Registry Module.')
adminIlmiRegTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 14, 1), )
if mibBuilder.loadTexts: adminIlmiRegTable.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegTable.setDescription('The table implemented by the IME on the network side of the ATM UNI port contains all of the services that are available to the user-side IME indexed by service identifier.')
adminIlmiRegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1), ).setIndexNames((0, "Fore-IlmiRegistry-MIB", "adminIlmiRegPort"), (0, "Fore-IlmiRegistry-MIB", "adminIlmiRegServiceID"), (0, "Fore-IlmiRegistry-MIB", "adminIlmiRegAddressIndex"))
if mibBuilder.loadTexts: adminIlmiRegEntry.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegEntry.setDescription('Information about a single service provider that is available to the user-side IME.')
adminIlmiRegPort = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: adminIlmiRegPort.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegPort.setDescription('The value of 0 which has the special meaning of identifying the ATM Interface over which this message was received.')
adminIlmiRegServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: adminIlmiRegServiceID.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegServiceID.setDescription('This is the service identifier which uniquely identifies the type of service at the address provided in the table.')
adminIlmiRegATMAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 3), AtmAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminIlmiRegATMAddress.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegATMAddress.setDescription('This is the full address of the service. The user-side IME may use this address to establish a connection with the service.')
adminIlmiRegAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: adminIlmiRegAddressIndex.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegAddressIndex.setDescription('An arbitrary integer to differentiate multiple rows containing different ATM addresses for the same service on the same port.')
adminIlmiRegParm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adminIlmiRegParm1.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegParm1.setDescription('An octet string whose size and meaning is determined by the value of adminIlmiRegServiceID.')
adminIlmiRegRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 14, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adminIlmiRegRowStatus.setStatus('current')
if mibBuilder.loadTexts: adminIlmiRegRowStatus.setDescription(' ')
mibBuilder.exportSymbols("Fore-IlmiRegistry-MIB", PYSNMP_MODULE_ID=ilmiRegistryModule, adminIlmiRegTable=adminIlmiRegTable, adminIlmiRegEntry=adminIlmiRegEntry, adminIlmiRegATMAddress=adminIlmiRegATMAddress, ilmiRegistryModule=ilmiRegistryModule, adminIlmiRegParm1=adminIlmiRegParm1, adminIlmiRegAddressIndex=adminIlmiRegAddressIndex, adminIlmiRegServiceID=adminIlmiRegServiceID, adminIlmiRegPort=adminIlmiRegPort, adminIlmiRegRowStatus=adminIlmiRegRowStatus)
