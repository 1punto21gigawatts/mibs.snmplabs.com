#
# PySNMP MIB module CISCO-DMN-DSG-DIAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-DIAG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, ObjectIdentity, iso, Counter64, IpAddress, Counter32, Unsigned32, Integer32, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "iso", "Counter64", "IpAddress", "Counter32", "Unsigned32", "Integer32", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGDiag = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18))
ciscoDSGDiag.setRevisions(('2012-03-20 08:00', '2010-10-13 08:00', '2010-08-03 10:00', '2010-04-12 09:00', '2010-02-12 12:00', '2009-12-07 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGDiag.setRevisionsDescriptions(('V01.00.05 2012-03-20 Updated for D9854 R4 Release.', 'V01.00.04 2010-10-13 Type of diagFanRPMValue is changed to DisplayString.', 'V01.00.03 2010-08-03 Health Monitor Table and Fan RPM Table are added.', 'V01.00.02 2010-04-12 powerOnFactoryResetCount and powerOnCurrentDateTime MIB objects are added.', 'V01.00.01 2010-02-12 The Syntax of read-only objects is updated to DisplayString.', 'V01.00.00 2009-12-07 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGDiag.setLastUpdated('201203200800Z')
if mibBuilder.loadTexts: ciscoDSGDiag.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGDiag.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGDiag.setDescription('Cisco Detailed Diagnostics MIB.')
powerOn = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1))
diagTable = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2))
powerOnCreationDate = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnCreationDate.setStatus('current')
if mibBuilder.loadTexts: powerOnCreationDate.setDescription('Build Date of Product.')
powerOnDate = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnDate.setStatus('current')
if mibBuilder.loadTexts: powerOnDate.setDescription('Last Power-On Date.')
powerOnTotalHours = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnTotalHours.setStatus('current')
if mibBuilder.loadTexts: powerOnTotalHours.setDescription('Total Hours Running.The range is from 0 to 4294967295 hrs in steps of 1 hr.')
powerOnHrsSinceLastPowerOff = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnHrsSinceLastPowerOff.setStatus('current')
if mibBuilder.loadTexts: powerOnHrsSinceLastPowerOff.setDescription('Hours Since Last Power Reset.The range is from 0 to 4294967295 hrs in steps of 1 hr.')
powerOnTotResetCount = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnTotResetCount.setStatus('current')
if mibBuilder.loadTexts: powerOnTotResetCount.setDescription('Total Reset Counter.The range is from 0 to 4294967295.')
powerOnClrableResetCount = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnClrableResetCount.setStatus('current')
if mibBuilder.loadTexts: powerOnClrableResetCount.setDescription('User Clearable Reset Counter.The range is from 0 to 4294967295.')
powerOnReasonLastReset = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnReasonLastReset.setStatus('current')
if mibBuilder.loadTexts: powerOnReasonLastReset.setDescription('Reason for the Last Reset.')
powerOnClearResetCounter = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("writeOnly", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: powerOnClearResetCounter.setStatus('current')
if mibBuilder.loadTexts: powerOnClearResetCounter.setDescription('Set this object to yes(2) to clear Power On Reset counter.')
powerOnFactoryResetCount = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnFactoryResetCount.setStatus('current')
if mibBuilder.loadTexts: powerOnFactoryResetCount.setDescription('Total Factory Resets.')
powerOnCurrentDateTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerOnCurrentDateTime.setStatus('current')
if mibBuilder.loadTexts: powerOnCurrentDateTime.setDescription('Displays the Current date and time.')
diagHealthMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 1), )
if mibBuilder.loadTexts: diagHealthMonitorTable.setStatus('current')
if mibBuilder.loadTexts: diagHealthMonitorTable.setDescription('Health Monitor Table.')
diagHealthMonitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 1, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DIAG-MIB", "diagHealthMonitorIndex"))
if mibBuilder.loadTexts: diagHealthMonitorEntry.setStatus('current')
if mibBuilder.loadTexts: diagHealthMonitorEntry.setDescription('Entry for Health Monitor table.')
diagHealthMonitorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)))
if mibBuilder.loadTexts: diagHealthMonitorIndex.setStatus('current')
if mibBuilder.loadTexts: diagHealthMonitorIndex.setDescription(' Health Monitor index.')
diagHealthMonitorName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagHealthMonitorName.setStatus('current')
if mibBuilder.loadTexts: diagHealthMonitorName.setDescription('Health Monitor Item Name - Gives Board Current temperature if monitor index is CURTEMP Gives Board Maximum tempearture if monitor index is MAXTEMP Gives Board Average temperature if monitor index is AVGTEMP Gives Board Temperature at intake 1/intake 2 if monitor index is IN1VAL/INVAL2 Gives Board FPGA Vicinity if monitor index is FPGAVIC Gives Board FPGA Value if monitor index is FPGAVAL.')
diagHealthMonitorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagHealthMonitorValue.setStatus('current')
if mibBuilder.loadTexts: diagHealthMonitorValue.setDescription('Health monitor Item Value.')
diagFanRPMTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 2), )
if mibBuilder.loadTexts: diagFanRPMTable.setStatus('current')
if mibBuilder.loadTexts: diagFanRPMTable.setDescription('Fan RPM Table.')
diagFanRPMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 2, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DIAG-MIB", "diagFanRPMIndex"))
if mibBuilder.loadTexts: diagFanRPMEntry.setStatus('current')
if mibBuilder.loadTexts: diagFanRPMEntry.setDescription('Entry for Fan RPM table.')
diagFanRPMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: diagFanRPMIndex.setStatus('current')
if mibBuilder.loadTexts: diagFanRPMIndex.setDescription(' Fan RPM index.')
diagFanRPMName = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagFanRPMName.setStatus('current')
if mibBuilder.loadTexts: diagFanRPMName.setDescription('Fan RPM Item Name : Gives Fan 1 speed in rpm if Fan RPM index is FAN1 Gives Fan 2 speed in rpm if Fan RPM index is FAN2 Gives Fan 3 speed in rpm if Fan RPM index is FAN3 Gives Fan 4 speed in rpm if Fan RPM index is FAN4 Gives Fan 5 speed in rpm if Fan RPM index is FAN5 Gives Fan 6 speed in rpm if Fan RPM index is FAN6 Gives Fan 7 speed in rpm if Fan RPM index is FAN7.')
diagFanRPMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagFanRPMValue.setStatus('current')
if mibBuilder.loadTexts: diagFanRPMValue.setDescription(' Health monitor Item Value.')
diagECCReadingsTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3), )
if mibBuilder.loadTexts: diagECCReadingsTable.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsTable.setDescription('ECC Readings Table.')
diagECCReadingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DIAG-MIB", "diagECCReadingsIndex"))
if mibBuilder.loadTexts: diagECCReadingsEntry.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsEntry.setDescription('Entry for ECC Readings table.')
diagECCReadingsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagECCReadingsIndex.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsIndex.setDescription('ECC Readings index.')
diagECCReadingsLocat = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagECCReadingsLocat.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsLocat.setDescription('ECC Reading Location.')
diagECCReadingsType = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagECCReadingsType.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsType.setDescription('ECC Reading Type.')
diagECCReadingsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagECCReadingsVal.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsVal.setDescription('ECC Reading Value.')
diagECCReadingsApplicability = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagECCReadingsApplicability.setStatus('current')
if mibBuilder.loadTexts: diagECCReadingsApplicability.setDescription('ECC Reading Applicibility for this device.')
diagCtrlHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 4), )
if mibBuilder.loadTexts: diagCtrlHistoryTable.setStatus('current')
if mibBuilder.loadTexts: diagCtrlHistoryTable.setDescription('Control History Table.')
diagCtrlHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 4, 1), ).setIndexNames((0, "CISCO-DMN-DSG-DIAG-MIB", "diagCtrlHistoryIndex"))
if mibBuilder.loadTexts: diagCtrlHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: diagCtrlHistoryEntry.setDescription('Entry for Control History table.')
diagCtrlHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagCtrlHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: diagCtrlHistoryIndex.setDescription('Control History Table Index.')
diagCtrlHistoryHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagCtrlHistoryHistory.setStatus('current')
if mibBuilder.loadTexts: diagCtrlHistoryHistory.setDescription('Control History Text.')
diagCtrlHistoryDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 18, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diagCtrlHistoryDateTime.setStatus('current')
if mibBuilder.loadTexts: diagCtrlHistoryDateTime.setDescription('Control History Date and Time.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-DIAG-MIB", powerOnHrsSinceLastPowerOff=powerOnHrsSinceLastPowerOff, diagHealthMonitorValue=diagHealthMonitorValue, powerOnClearResetCounter=powerOnClearResetCounter, diagFanRPMEntry=diagFanRPMEntry, diagTable=diagTable, diagCtrlHistoryEntry=diagCtrlHistoryEntry, diagCtrlHistoryHistory=diagCtrlHistoryHistory, diagECCReadingsEntry=diagECCReadingsEntry, powerOn=powerOn, diagHealthMonitorTable=diagHealthMonitorTable, ciscoDSGDiag=ciscoDSGDiag, diagECCReadingsIndex=diagECCReadingsIndex, diagFanRPMValue=diagFanRPMValue, diagHealthMonitorIndex=diagHealthMonitorIndex, diagECCReadingsApplicability=diagECCReadingsApplicability, diagCtrlHistoryDateTime=diagCtrlHistoryDateTime, powerOnCurrentDateTime=powerOnCurrentDateTime, diagECCReadingsVal=diagECCReadingsVal, diagHealthMonitorName=diagHealthMonitorName, diagFanRPMName=diagFanRPMName, diagCtrlHistoryIndex=diagCtrlHistoryIndex, powerOnClrableResetCount=powerOnClrableResetCount, powerOnDate=powerOnDate, diagFanRPMIndex=diagFanRPMIndex, PYSNMP_MODULE_ID=ciscoDSGDiag, powerOnCreationDate=powerOnCreationDate, diagHealthMonitorEntry=diagHealthMonitorEntry, diagFanRPMTable=diagFanRPMTable, powerOnTotalHours=powerOnTotalHours, diagECCReadingsType=diagECCReadingsType, diagECCReadingsLocat=diagECCReadingsLocat, diagECCReadingsTable=diagECCReadingsTable, diagCtrlHistoryTable=diagCtrlHistoryTable, powerOnTotResetCount=powerOnTotResetCount, powerOnReasonLastReset=powerOnReasonLastReset, powerOnFactoryResetCount=powerOnFactoryResetCount)
