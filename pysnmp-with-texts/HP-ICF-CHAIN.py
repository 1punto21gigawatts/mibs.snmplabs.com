#
# PySNMP MIB module HP-ICF-CHAIN (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-CHAIN
# Produced by pysmi-0.3.4 at Wed May  1 13:33:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
hpicfCommonTrapsPrefix, hpicfCommon, hpicfObjectModules = mibBuilder.importSymbols("HP-ICF-OID", "hpicfCommonTrapsPrefix", "hpicfCommon", "hpicfObjectModules")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, MibIdentifier, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, Unsigned32, NotificationType, ModuleIdentity, iso, ObjectIdentity, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibIdentifier", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "Unsigned32", "NotificationType", "ModuleIdentity", "iso", "ObjectIdentity", "Counter32", "TimeTicks")
DisplayString, TimeStamp, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TimeStamp", "TextualConvention", "TruthValue")
hpicfChainMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2))
hpicfChainMib.setRevisions(('2000-11-03 22:16', '1997-03-06 03:33', '1996-09-10 02:08', '1994-02-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpicfChainMib.setRevisionsDescriptions(('Updated division name.', 'Added NOTIFICATION-GROUP information.', 'Split this MIB module from the former monolithic hp-icf MIB.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: hpicfChainMib.setLastUpdated('200011032216Z')
if mibBuilder.loadTexts: hpicfChainMib.setOrganization('HP Networking')
if mibBuilder.loadTexts: hpicfChainMib.setContactInfo('Hewlett Packard Company 8000 Foothills Blvd. Roseville, CA 95747')
if mibBuilder.loadTexts: hpicfChainMib.setDescription('This MIB module describes management of the Distributed Management Chain for devices in the HP AdvanceStack product line.')
hpicfChain = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1))
hpicfChainMaxMembers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainMaxMembers.setStatus('current')
if mibBuilder.loadTexts: hpicfChainMaxMembers.setDescription('The maximum number of devices that can be supported on the Distributed Management Chain from this agent.')
hpicfChainCurMembers = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainCurMembers.setStatus('current')
if mibBuilder.loadTexts: hpicfChainCurMembers.setDescription('The number of devices currently on the Distributed Management Chain connected to this agent.')
hpicfChainLastChange = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainLastChange.setStatus('current')
if mibBuilder.loadTexts: hpicfChainLastChange.setDescription('The value of sysUpTime on this agent the last time a device was added to or removed from the Distributed Management Chain connected to this agent.')
hpicfChainChanges = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainChanges.setStatus('current')
if mibBuilder.loadTexts: hpicfChainChanges.setDescription('A count of the number of times devices have been added to or removed from the Distributed Management Chain connected to this agent.')
hpicfChainTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5), )
if mibBuilder.loadTexts: hpicfChainTable.setStatus('current')
if mibBuilder.loadTexts: hpicfChainTable.setDescription('A table of boxes currently connected to the same Distributed Management Chain as this agent.')
hpicfChainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1), ).setIndexNames((0, "HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfChainEntry.setDescription('An entry in the table describing a single box on the Distributed Management Chain connected to this device.')
hpicfChainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainId.setStatus('current')
if mibBuilder.loadTexts: hpicfChainId.setDescription('An identifier which uniquely identifies this particular box. In practice, this will be a box serial number or MAC address.')
hpicfChainObjectId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainObjectId.setStatus('current')
if mibBuilder.loadTexts: hpicfChainObjectId.setDescription('The authoritative identification of the box which provides an easy and unambiguous means for determining the type of box.')
hpicfChainTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainTimestamp.setStatus('current')
if mibBuilder.loadTexts: hpicfChainTimestamp.setDescription("The value of the agent's sysUpTime at which this box was last initialized. If the box has not been initialized since the last reinitialization of the agent, then this object has a zero value.")
hpicfChainHasAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainHasAgent.setStatus('current')
if mibBuilder.loadTexts: hpicfChainHasAgent.setDescription("This object will contain the value 'true' if this box contains at least one network management agent capable of responding to SNMP requests, and will contain the value 'false' otherwise.")
hpicfChainThisBox = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainThisBox.setStatus('current')
if mibBuilder.loadTexts: hpicfChainThisBox.setDescription("This object will contain the value 'true' if this entry in the chain table corresponds to the box which contains the agent which is responding to this SNMP request, and will contain the value 'false' otherwise.")
hpicfChainLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfChainLocation.setStatus('current')
if mibBuilder.loadTexts: hpicfChainLocation.setDescription('This byte is settable by a management station and is not interpreted by the agent. The intent is that a management station can use it to assign an ordering to boxes on the chain that can later be used when displaying the chain.')
hpicfChainViewTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6), )
if mibBuilder.loadTexts: hpicfChainViewTable.setStatus('current')
if mibBuilder.loadTexts: hpicfChainViewTable.setDescription('This table contains one entry for each box on the Distributed Management Chain for which this agent is able to act as a proxy.')
hpicfChainViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1), ).setIndexNames((0, "HP-ICF-CHAIN", "hpicfChainViewId"))
if mibBuilder.loadTexts: hpicfChainViewEntry.setStatus('current')
if mibBuilder.loadTexts: hpicfChainViewEntry.setDescription('An entry in the hpicfChainViewTable containing information about how to proxy to a single box.')
hpicfChainViewId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainViewId.setStatus('current')
if mibBuilder.loadTexts: hpicfChainViewId.setDescription('An identifier which uniquely identifies this particular box. In practice, this will be a box serial number or MAC address.')
hpicfChainViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfChainViewName.setStatus('current')
if mibBuilder.loadTexts: hpicfChainViewName.setDescription("The local name of this box. This is used by the proxy agent for the box to determine which box on the Distributed Management Chain is being addressed. If an agent does not use this method to distinguish proxy destinations, it should return a zero length octet string for this object. For SNMPv1, the destination box is specified by appending this name to the proxy agent's community name. For example, if this agent has a community with a community name of 'public', and the value of this object is 'repeater1', the community 'public/repeater1' will specify that the agent should proxy to the public community of the 'repeater1' box. The default value for this object for box-level repeaters is an ASCII hex representation of the low-order three bytes of the device MAC address.")
hpicfChainAddition = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1, 0, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainAddition.setStatus('deprecated')
if mibBuilder.loadTexts: hpicfChainAddition.setDescription('********* THIS NOTIFICATION IS DEPRECATED ********* An hpicfChainAddition trap indicates that a new node has been added to the Distributed Management Chain connected to this agent. The hpicfChainId returned is the identifier for the new node. Replaced by Cold Start')
hpicfChainRemoval = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 12, 1, 0, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainId"))
if mibBuilder.loadTexts: hpicfChainRemoval.setStatus('current')
if mibBuilder.loadTexts: hpicfChainRemoval.setDescription('An hpicfChainRemoval trap indicates that a node has been removed from the Distributed Management Chain connected to this agent. The hpicfChainId returned is the identifier for the node that was removed.')
hpicfChainConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1))
hpicfChainCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1))
hpicfChainGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2))
hpicfChainingCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainingGroup"), ("HP-ICF-CHAIN", "hpicfChainTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingCompliance = hpicfChainingCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: hpicfChainingCompliance.setDescription('The compliance statement for HP ICF devices with a Distributed Management Chain connection.')
hpicfChainingCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 1, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainingGroup"), ("HP-ICF-CHAIN", "hpicfChainNotifyGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingCompliance2 = hpicfChainingCompliance2.setStatus('current')
if mibBuilder.loadTexts: hpicfChainingCompliance2.setDescription('The compliance statement for HP ICF devices with a Distributed Management Chain connection.')
hpicfChainingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 1)).setObjects(("HP-ICF-CHAIN", "hpicfChainMaxMembers"), ("HP-ICF-CHAIN", "hpicfChainCurMembers"), ("HP-ICF-CHAIN", "hpicfChainLastChange"), ("HP-ICF-CHAIN", "hpicfChainChanges"), ("HP-ICF-CHAIN", "hpicfChainId"), ("HP-ICF-CHAIN", "hpicfChainObjectId"), ("HP-ICF-CHAIN", "hpicfChainTimestamp"), ("HP-ICF-CHAIN", "hpicfChainHasAgent"), ("HP-ICF-CHAIN", "hpicfChainThisBox"), ("HP-ICF-CHAIN", "hpicfChainLocation"), ("HP-ICF-CHAIN", "hpicfChainViewId"), ("HP-ICF-CHAIN", "hpicfChainViewName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainingGroup = hpicfChainingGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfChainingGroup.setDescription('A collection of objects for managing devices on the HP Distributed Management Bus.')
hpicfChainTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 2)).setObjects(("HP-ICF-CHAIN", "hpicfChainAddition"), ("HP-ICF-CHAIN", "hpicfChainRemoval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainTrapGroup = hpicfChainTrapGroup.setStatus('obsolete')
if mibBuilder.loadTexts: hpicfChainTrapGroup.setDescription('********* THIS GROUP IS OBSOLETE ********* A collection of notifications used to indicate a changes in membership on a Distributed Management Chain.')
hpicfChainNotifyGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 2, 1, 2, 3)).setObjects(("HP-ICF-CHAIN", "hpicfChainRemoval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfChainNotifyGroup = hpicfChainNotifyGroup.setStatus('current')
if mibBuilder.loadTexts: hpicfChainNotifyGroup.setDescription('A collection of notifications used to indicate a changes in membership on a Distributed Management Chain.')
mibBuilder.exportSymbols("HP-ICF-CHAIN", hpicfChainHasAgent=hpicfChainHasAgent, PYSNMP_MODULE_ID=hpicfChainMib, hpicfChainingCompliance2=hpicfChainingCompliance2, hpicfChainViewId=hpicfChainViewId, hpicfChainingGroup=hpicfChainingGroup, hpicfChainMaxMembers=hpicfChainMaxMembers, hpicfChainNotifyGroup=hpicfChainNotifyGroup, hpicfChainTable=hpicfChainTable, hpicfChainEntry=hpicfChainEntry, hpicfChainCompliances=hpicfChainCompliances, hpicfChainCurMembers=hpicfChainCurMembers, hpicfChain=hpicfChain, hpicfChainGroups=hpicfChainGroups, hpicfChainThisBox=hpicfChainThisBox, hpicfChainRemoval=hpicfChainRemoval, hpicfChainViewEntry=hpicfChainViewEntry, hpicfChainConformance=hpicfChainConformance, hpicfChainId=hpicfChainId, hpicfChainAddition=hpicfChainAddition, hpicfChainLastChange=hpicfChainLastChange, hpicfChainTrapGroup=hpicfChainTrapGroup, hpicfChainChanges=hpicfChainChanges, hpicfChainMib=hpicfChainMib, hpicfChainLocation=hpicfChainLocation, hpicfChainViewName=hpicfChainViewName, hpicfChainTimestamp=hpicfChainTimestamp, hpicfChainObjectId=hpicfChainObjectId, hpicfChainingCompliance=hpicfChainingCompliance, hpicfChainViewTable=hpicfChainViewTable)
