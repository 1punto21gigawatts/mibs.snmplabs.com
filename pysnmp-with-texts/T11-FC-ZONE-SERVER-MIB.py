#
# PySNMP MIB module T11-FC-ZONE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/T11-FC-ZONE-SERVER-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:27:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
fcmInstanceIndex, fcmSwitchIndex, FcNameIdOrZero, FcDomainIdOrZero = mibBuilder.importSymbols("FC-MGMT-MIB", "fcmInstanceIndex", "fcmSwitchIndex", "FcNameIdOrZero", "FcDomainIdOrZero")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, IpAddress, TimeTicks, ModuleIdentity, mib_2, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, NotificationType, Unsigned32, Bits, Counter32, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "TimeTicks", "ModuleIdentity", "mib-2", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "NotificationType", "Unsigned32", "Bits", "Counter32", "ObjectIdentity", "Integer32")
RowStatus, DisplayString, TruthValue, TextualConvention, StorageType, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention", "StorageType", "TimeStamp")
t11FamLocalSwitchWwn, = mibBuilder.importSymbols("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn")
T11NsGs4RejectReasonCode, = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11ZoneServerMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 160))
t11ZoneServerMIB.setRevisions(('2007-06-27 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11ZoneServerMIB.setRevisionsDescriptions(('Initial version of this MIB module, published as RFC 4936.',))
if mibBuilder.loadTexts: t11ZoneServerMIB.setLastUpdated('200706270000Z')
if mibBuilder.loadTexts: t11ZoneServerMIB.setOrganization("For the initial versions, T11. For later versions, the IETF's IMSS Working Group.")
if mibBuilder.loadTexts: t11ZoneServerMIB.setContactInfo(' Claudio DeSanti Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA EMail: cds@cisco.com Keith McCloghrie Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA EMail: kzm@cisco.com')
if mibBuilder.loadTexts: t11ZoneServerMIB.setDescription("The MIB module for the management of Fibre Channel Zoning Servers, both for Basic Zoning Management and for Enhanced Zoning Management, as defined in the FC-GS-5 specification. FC-GS-5 defines (in-band) management operations for manipulating the Zone Set Database, some for use in Basic mode (e.g., 'Add Zone Set (AZS)', etc.), and some for use in Enhanced mode (e.g., Create Zone Set (CZS)', etc.). When Enhanced Zoning Management is in use, FC-GS-5 requires that these in-band management operations be rejected unless they are issued within the context of a GS-5 server session. The use of a server session ensures serialized access to the Zoning Database since the Fabric lock for the Zone Server must be obtained as a part of establishing the server session to the Zone Server. Thus, if and when this MIB is used for Enhanced Zoning Management, SNMP SetRequests that request the modification of zoning definitions must be serialized with respect to the GS-5 requests to modify the Zoning Database. This is achieved by requiring that an SNMP management application must first obtain the Fabric lock for the Zone Server before attempting to modify any zoning definitions. The companion T11-FC-FABRIC-LOCK-MIB module is defined as a means of obtaining the Fabric lock for the Zone Server (or any other server). In Enhanced Zoning Management, a Zone Server keeps track of changes requested in the zoning definitions, but does not update its Zone Set Database unless there is (and until there is) a 'commit' operation. To model this behavior, this MIB module assumes that a Zone Server (in Enhanced mode) takes a snapshot of its Zone Set Database as and when the Fabric lock (for the Zone Server application) is obtained; this snapshot is used to create what is herein called the 'copy' database. It is this 'copy' database that is then updated by SNMP SetRequests (while the Fabric is locked). If and when a 'commit' operation is requested (while the Fabric is still locked), the 'copy' database is then used to overwrite the previously committed contents of the Zone Set Database, and the new Zone Set Database is distributed to all other switches in the Fabric. When the lock is released, any changes made that were not 'committed' are discarded. When this MIB is used for Basic Zoning Management, the same set of MIB objects as used for Enhanced mode are used to make changes to the Database of a Zone Server on a particular switch, but the changes take immediate effect at that switch without an explicit commit. The distribution of those changes to Zone Servers on other switches in the Fabric is subsequently requested through the use of a separate set of MIB objects. The management information specified in this MIB module includes the Zoning Database for each of one or more Fibre Channel Fabrics. A Zoning Database is a combination of the Fabric's Zone Set Database and its Active Zone Set. The Active Zone Set is the Zone Set currently enforced by the Fabric; a Zone Set Database is a database of the Zone Sets available to be activated within a Fabric. All the MIB objects representing a Zone Set Database are modifiable at any time (irrespective of the value of any RowStatus object), whereas all objects representing the Active Zone Set are always read-only (except to deactivate it and/or activate a different one). Copyright (C) The IETF Trust (2007). This version of this MIB module is part of RFC 4936; see the RFC itself for full legal notices.")
t11ZsMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 1))
t11ZsMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 2))
t11ZsMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 0))
t11ZsConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 1, 1))
t11ZsStatistics = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 1, 2))
class T11ZsZoneMemberType(TextualConvention, Unsigned32):
    reference = 'Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.3.6.'
    description = 'Represents the addressing mechanism by which a member is identified: 01 - N_Port_Name 02 - Domain_ID and physical port 03 - N_Port_ID 04 - Node_Name 05 - Alias Name 06 - F_Port_Name E0-FF (hex) - Vendor Specific. '
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class T11ZsRejectReasonExplanation(TextualConvention, Integer32):
    reference = 'Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.9.'
    description = "The reason code explanation when rejecting a Zone Server request: 'other' - e.g., a reason code assigned too recently to be included in this version of this MIB 'noAdditionalExplanation' - there is no additional explanation 'zonesNotSupported' - Zones are not supported 'zoneSetNameUnknown' - Zone Set name is not known 'noZoneSetActive' - no Zone Set is currently active 'zoneNameUnknown' - Zone name is unknown 'zoneStateUnknown' - state of the Zone is not known 'incorrectPayloadLen' - payload length is not correct 'tooLargeZoneSet' - Zone Set is larger than permitted size 'deactivateZoneSetFailed' - deactivation of Zone Set failed 'reqNotSupported' - request is not supported 'capabilityNotSupported' - capability is not supported 'zoneMemberIDTypeNotSupp' - Zone Member Identifier Type is not supported 'invalidZoneSetDefinition' - Zone Set definition is invalid 'enhancedZoningCmdsNotSupported' - Enhanced Zoning commands are not supported 'zoneSetExists' - Zone Set already exists 'zoneExists' - Zone already exists 'aliasExists' - Zone Alias already exists 'zoneSetUnknown' - Zone Set unknown 'zoneUnknown' - Zone unknown 'aliasUnknown' - Zone Alias unknown 'zoneAliasTypeUnknown' - unknown Zone attribute type 'unableEnhancedMode' - Fabric unable to work in Enhanced Mode 'basicZoningCmdsNotSupported' - Basic Zoning commands are not supported 'zoneAttribObjectExists' - Zone attribute object already exists 'zoneAttribObjectUnknown' - Zone attribute object unknown 'requestInProcess' - request in process 'cmitInProcess' - CMIT in process 'hardEnforcementFailed' - hard enforcement failed 'unresolvedReferences' - unresolved references in the Zone Set Database 'consistencyChecksFailed' - consistency checks failed."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))
    namedValues = NamedValues(("other", 1), ("noAdditionalExplanation", 2), ("zonesNotSupported", 3), ("zoneSetNameUnknown", 4), ("noZoneSetActive", 5), ("zoneNameUnknown", 6), ("zoneStateUnknown", 7), ("incorrectPayloadLen", 8), ("tooLargeZoneSet", 9), ("deactivateZoneSetFailed", 10), ("reqNotSupported", 11), ("capabilityNotSupported", 12), ("zoneMemberIDTypeNotSupp", 13), ("invalidZoneSetDefinition", 14), ("enhancedZoningCmdsNotSupported", 15), ("zoneSetExists", 16), ("zoneExists", 17), ("aliasExists", 18), ("zoneSetUnknown", 19), ("zoneUnknown", 20), ("aliasUnknown", 21), ("zoneAliasTypeUnknown", 22), ("unableEnhancedMode", 23), ("basicZoningCmdsNotSupported", 24), ("zoneAttribObjectExists", 25), ("zoneAttribObjectUnknown", 26), ("requestInProcess", 27), ("cmitInProcess", 28), ("hardEnforcementFailed", 29), ("unresolvedReferences", 30), ("consistencyChecksFailed", 31))

class T11ZoningName(TextualConvention, OctetString):
    reference = 'Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.1.'
    description = 'This datatype is a refinement of an SnmpAdminString, and is used to represent a name stored in a Fibre Channel Zoning Data Structure. The value begins with an ASCII letter (upper or lower case) followed by zero or more characters from the set: lower case letters, upper case letters, numbers, and the symbols ($-^_). The value does not include fill bytes.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

t11ZsServerTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 1), )
if mibBuilder.loadTexts: t11ZsServerTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerTable.setDescription('A table containing information about the Zone Servers on each Fabric in one or more switches, and providing the capability to perform operations on their Zone Server databases.')
t11ZsServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsServerEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerEntry.setDescription('Each entry contains information specific to a Zone Server for a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). The persistence across reboots of writable values in a row of this table is given by the instance of t11ZsServerDatabaseStorageType in that row.')
t11ZsServerFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11ZsServerFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerFabricIndex.setDescription('A unique index value that uniquely identifies a particular Fabric.')
t11ZsServerCapabilityObject = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 2), Bits().clone(namedValues=NamedValues(("enhancedMode", 0), ("zoneSetDb", 1), ("activateDirect", 2), ("hardZoning", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, section 6.1.23.4.4')
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setDescription("This bitmap represents the capability of the switch on this Fabric: 'enhancedMode' - able to support enhanced Zoning mode of operation. 'zoneSetDb' - able to support maintaining of a Zone Set Database. 'activateDirect' - able to support the Activate Direct command. 'hardZoning' - able to support Hard Zoning.")
t11ZsServerDatabaseStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDatabaseStorageType.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDatabaseStorageType.setDescription("This object specifies the memory realization, on a particular switch, of the Zone Set database for a particular Fabric. Specifically, each row in the following tables: t11ZsSetTable t11ZsZoneTable t11ZsSetZoneTable t11ZsAliasTable t11ZsZoneMemberTable t11ZsAttribBlockTable t11ZsAttribTable has a StorageType as specified by the instance of this object that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex. The value of this object is also used to indicate the persistence across reboots of writable values in its row of the t11ZsServerTable, as well as the corresponding row in the t11ZsNotifyControlTable. If an instance of this object has the value 'permanent(4)', the Zone Set database for the given Fabric on the given switch is not required to be writeable.")
t11ZsServerDistribute = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("zoneSetDb", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDistribute.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, section 6.1.19.1.')
if mibBuilder.loadTexts: t11ZsServerDistribute.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDistribute.setDescription("This object can be set only in Basic mode. When set to the value 'zoneSetDb', it requests that the Zone Set database of a particular switch for a particular Fabric be distributed to every other switch in that Fabric, e.g., by using Stage Fabric Configuration Update (SFC) and Update Fabric Configuration (UFC) requests. Setting this object to 'noop' has no effect. When read, the value of this object is always 'noop'. When the corresponding instance of t11ZsServerOperationMode has the value 'enhanced', or when the corresponding instance of t11ZsZoneSetResult has the value 'inProgress', it is inconsistent to try to set the value of this object.")
t11ZsServerCommit = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("commitZoneChanges", 1), ("noop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerCommit.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.10.2.')
if mibBuilder.loadTexts: t11ZsServerCommit.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerCommit.setDescription("This object is only used in Enhanced mode. In Enhanced mode, it can only be modified when the Fabric lock for the Zone Server on the particular Fabric has been obtained for use by SNMP SetRequests, and even then, only by the SNMP entity identified by the value of corresponding instance of t11FLockInitiator. Setting the object requests an action: commitZoneChanges - requests that the changes made within this session to the Zone Set Database be committed. noop - requests nothing. When read, the value is always 'noop'.")
t11ZsServerResult = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("success", 3), ("rejectFailure", 4), ("otherFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerResult.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.10.2.3.')
if mibBuilder.loadTexts: t11ZsServerResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerResult.setDescription("In Basic mode, this object indicates the status/result of the last distribution of the Zone Set database that was invoked via the corresponding instance of t11ZsZoneSetDistribute, e.g., the status/result of Stage Fabric Configuration Update (SFC) request(s) used to implement the setting of t11ZsZoneSetDistribute. In Enhanced mode, this object indicates the status/result of the last commit of changes to the Zone Set database that was invoked via the corresponding instance of t11ZsServerCommit. 'none' - no distribution/commit invoked via the corresponding instance of t11ZsZoneSetDistribute (Basic mode) or t11ZsServerCommit (Enhanced mode). 'inProgress' - distribution/commit is still in progress. 'success' - distribution/commit completed successfully. 'rejectFailure' - distribution/commit failed due to an SW_RJT. 'otherFailure' - distribution/commit failed for some other reason. When the value is 'rejectFailure', the corresponding instances of t11ZsServerReasonCode, t11ZsServerReasonCodeExp and t11ZsServerReasonVendorCode contain the reason codes. ")
t11ZsServerReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 7), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerReasonCode.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, section 6.1.3 and tables 4, 5, and 6.')
if mibBuilder.loadTexts: t11ZsServerReasonCode.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerReasonCode.setDescription("When the corresponding instance of t11ZsZoneSetResult has the value 'rejectFailure', this object contains the rejection's reason code. When the corresponding instance of t11ZsServerResult has a value other than 'rejectFailure', this object should contain the value 'none'.")
t11ZsServerReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerReasonCodeExp.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, section 6.1.3 and tables 4, 5, and 6.')
if mibBuilder.loadTexts: t11ZsServerReasonCodeExp.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerReasonCodeExp.setDescription("When the corresponding instance of t11ZsZoneSetResult has the value 'rejectFailure', this object contains the rejection's reason code explanation. When the corresponding instance of t11ZsServerResult has a value other than 'rejectFailure', this object should contain the zero-length string.")
t11ZsServerReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerReasonVendorCode.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, section 6.1.3 and tables 4, 5, and 6.')
if mibBuilder.loadTexts: t11ZsServerReasonVendorCode.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerReasonVendorCode.setDescription("When the corresponding instance of t11ZsZoneSetResult has the value 'rejectFailure', this object contains the rejection's reason vendor-specific code. When the corresponding instance of t11ZsServerResult has a value other than 'rejectFailure', this object should contain the zero-length string.")
t11ZsServerLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerLastChange.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerLastChange.setDescription('The value of sysUpTime at the time of the last change (creation, modification, or deletion) to the Zone Set database for the Zone Server for a particular Fabric. If said Zone Set database has not changed since the last re-initialization of the local network management system, then this object will contain a zero value.')
t11ZsServerHardZoning = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerHardZoning.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.10.3.2.')
if mibBuilder.loadTexts: t11ZsServerHardZoning.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerHardZoning.setDescription('This object indicates whether this switch, if and when it is in Basic mode, enforces Hard Zoning on this Fabric.')
t11ZsServerReadFromDatabase = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("committedDB", 1), ("copyDB", 2))).clone('committedDB')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerReadFromDatabase.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerReadFromDatabase.setDescription("In Enhanced mode, this object specifies whether subsequent SNMP Responses (generated by the local SNMP agent) to operations that read the configuration of Zone Sets, Zones, Members, Aliases and Attributes will reflect the values stored in the current (committed) Zone Set database, or those stored in the 'copy' database. In Basic mode, the value of this object is always 'committedDB' (since there is no 'copy' database in Basic mode). In SNMP agents that don't support write access to the Zone Set database, this object is always 'committedDB' (since the copy database, if it were to exist, would be identical).")
t11ZsServerOperationMode = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2))).clone('basic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerOperationMode.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, sections 6.4.10.1.1 and 6.4.10.1.2.')
if mibBuilder.loadTexts: t11ZsServerOperationMode.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerOperationMode.setDescription("The operational mode of the Zone Server. Setting this object to 'enhanced' is a request that the mode of operation of the Zone Server be Enhanced mode, which is only possible if all devices in the Fibre Channel Fabric are capable of working in Enhanced mode. If not, the request will fail and the corresponding value of t11ZsServerChangeModeResult will so indicate. Setting this object to 'basic' is a request that the mode of operation of the Zone Server be Basic mode. However, such a set may fail while operating in Enhanced mode, since FC-GS-5 makes no provision for changing (back) to Basic mode. Note that setting this object does not cause or require that the Fabric lock for the Zone Server be obtained. However, when this object has the value 'enhanced', any SNMP SetRequests that attempt to modify the copy database cannot be successful if the Fabric lock has not been obtained or has since been released.")
t11ZsServerChangeModeResult = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("success", 1), ("failure", 2), ("inProgress", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerChangeModeResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerChangeModeResult.setDescription("When this object has the value of 'success' or 'failure', the value indicates the outcome of the most recent request, invoked via t11ZsServerOperationMode, to change the mode of operation of the Zone Server. When such a request is in progress, this object has the value 'inProgress'. Prior to the first such request, the value of this object is 'none'.")
t11ZsServerDefaultZoneSetting = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.10.1.1.')
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setDescription("This object controls the Enhanced Zoning flag that governs the behavior of the Default Zone on this Fabric. If this object is set to 'permit', then the members of the Default Zone on this Fabric can communicate with each other. If this object is set to 'deny', then the members of the Default Zone on this Fabric cannot communicate with each other.")
t11ZsServerMergeControlSetting = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("restrict", 2))).clone('allow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.10.1.1.')
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setDescription("This object controls the Enhanced Zoning flag that indicates the Merge Control Setting for this Fabric: 'allow' - a switch may join the Fabric only if its Zoning Database is able to merge with the Fabric's Zoning Database. 'restrict' - a switch may join the Fabric only if its Zoning Database is equal to the Fabric's Zoning Database.")
t11ZsServerDefZoneBroadcast = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 1, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.7.2.2.')
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setDescription("This object controls an Enhanced Zoning capability: it indicates whether Broadcast Zoning is enabled on the Default Zone on this Fabric. If this object is set to 'true', then it is enabled. If this object is set to 'false', then it is disabled. If broadcast Zoning is enabled on a Default Zone, then broadcast frames generated by a member in that Default Zone will be restricted to members in that Default Zone.")
t11ZsSetTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 2), )
if mibBuilder.loadTexts: t11ZsSetTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetTable.setDescription("A table containing information on every Zone Set in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsSetEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsSetIndex"))
if mibBuilder.loadTexts: t11ZsSetEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetEntry.setDescription('Each entry contains information about a Zone Set in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). A Zone Set can be created in an existing Zone Set database, and can contain zero or more existing Zones. As and when new Zones are created (as rows in the t11ZsZoneTable), they can be added to a Zone Set by creating an entry for each in the t11ZsSetZoneTable. Deleting a row from this table deletes the Zone Set from the Zone Set database maintained by the Zone Server, but does not otherwise affect the Zone Server. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.')
t11ZsSetIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsSetIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetIndex.setDescription('The index of a Zone Set. This object uniquely identifies a Zone Set in the Zone Set database for a particular Fabric on a particular switch.')
t11ZsSetName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 2, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetName.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetName.setDescription('The name of this Zone Set. The t11ZsSetName should be unique within a Fabric. The Zone Set can be renamed at any time (i.e., even when the row in an active state) by setting this object to a new value.')
t11ZsSetRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetRowStatus.setDescription("The status of this conceptual row. This object cannot be set to 'active' unless the corresponding value of t11ZsSetName is unique within the Fabric's Zone Server database on this switch.")
t11ZsZoneTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 3), )
if mibBuilder.loadTexts: t11ZsZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneTable.setDescription("This table gives information on all the Zones in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 3, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsZoneIndex"))
if mibBuilder.loadTexts: t11ZsZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneEntry.setDescription('Each entry contains information about a Zone in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). A Zone can be created in an existing Zone Set database, by first creating an entry in this table, and then adding members to it by creating entries in the t11ZsZoneMemberTable. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.')
t11ZsZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneIndex.setDescription("An index value that uniquely identifies this Zone within a particular Fabric's Zone Set database on a particular switch.")
t11ZsZoneName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 3, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneName.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneName.setDescription('The name of this Zone. The t11ZsZoneName should be unique within a Fabric. The Zone can be renamed by setting this object to a new value.')
t11ZsZoneAttribBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneAttribBlock.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneAttribBlock.setDescription('This object specifies the index value of the Zone Attribute Block that contains the Attributes of this Zone. In Enhanced mode, a value of zero indicates this Zone has no Zone Attributes. In Basic mode, this object always has the value of zero.')
t11ZsZoneRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneRowStatus.setDescription("The status of this conceptual row. This object cannot be set to 'active' unless the corresponding value of t11ZsZoneName is unique within the Fabric's Zone Server database on this switch.")
t11ZsSetZoneTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 4), )
if mibBuilder.loadTexts: t11ZsSetZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneTable.setDescription('This table specifies which Zones belong to which Zone Sets in the Zone Set database of the Zone Servers on each Fabric in one or more switches.')
t11ZsSetZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsSetIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsZoneIndex"))
if mibBuilder.loadTexts: t11ZsSetZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneEntry.setDescription("Each entry specifies that a particular Zone (identified by the value of t11ZsZoneIndex) is one of the Zones that form a particular Zone Set (identified by the value of t11ZsSetIndex) in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). When a row in this table exists, it references one row in the t11ZsSetTable and one row in the t11ZsZoneTable. The agent must ensure that both such rows when referenced by an active row in this table, do exist and have a status of 'active', either by refusing to create new rows in this table, or by automatically deleting rows in this table. An 'active' row in this table references one row in the t11ZsSetTable and one in the t11ZsZoneTable. The agent must ensure that all such referenced rows exist with a status of 'active', either by refusing to create new active rows in this table, or by automatically deleting any rows in this table that reference a deleted row. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.")
t11ZsSetZoneRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetZoneRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneRowStatus.setDescription('The status of this conceptual row.')
t11ZsAliasTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 5), )
if mibBuilder.loadTexts: t11ZsAliasTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasTable.setDescription("This table contains information about the Zone Aliases in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsAliasEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 5, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsAliasIndex"))
if mibBuilder.loadTexts: t11ZsAliasEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasEntry.setDescription("Each entry contains information about a Zone Alias in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). A Zone Member is added to a Zone Alias by creating an entry in the t11ZsZoneMemberTable pointing to a row of this table via t11ZsAliasIndex, i.e.,: - t11ZsZoneMemberParentType = 'alias', - t11ZsZoneMemberParentIndex = Alias's t11ZsAliasIndex, - t11ZsZoneMemberFormat != '05 - Alias Name', and - t11ZsZoneMemberID = Member's identifier. A Zone Alias is added to a Zone by creating an entry in the t11ZsZoneMemberTable pointing to a row of this table via t11ZsAliasName, i.e.,: - t11ZsZoneMemberParentType = 'zone', and - t11ZsZoneMemberParentIndex = Zone's t11ZsZoneIndex, - t11ZsZoneMemberFormat = '05 - Alias Name', - t11ZsZoneMemberID = Alias's t11ZsAliasName. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.")
t11ZsAliasIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAliasIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasIndex.setDescription('An index value which uniquely identifies this Zone Alias within the Zone Set database of a particular Fabric on a particular switch.')
t11ZsAliasName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 5, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAliasName.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasName.setDescription('The name of this Zone Alias. The name of the Zone Alias should be unique within a Fabric. The Zone Alias can be renamed by setting this object to a new value if and when it is not in a Zone, i.e., if and only if the current name is not the value of any t11ZsZoneMemberID in the same Zone Set database.')
t11ZsAliasRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAliasRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasRowStatus.setDescription("The status of this conceptual row. This object cannot be set to 'active' unless the corresponding value of t11ZsAliasName is unique within the Fabric's Zone Server database on this switch.")
t11ZsZoneMemberTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 6), )
if mibBuilder.loadTexts: t11ZsZoneMemberTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberTable.setDescription("This table contains all members of a Zone/Zone Alias and information about those members in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsZoneMemberEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberParentType"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberParentIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberIndex"))
if mibBuilder.loadTexts: t11ZsZoneMemberEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberEntry.setDescription("Each entry represents the relationship between a member and (one of) its 'parent(s)', i.e., a Zone or Zone Alias to which the member belongs, within a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). A Zone member (other than an alias) is added to a Zone by creating an entry in this table having: - t11ZsZoneMemberParentType = 'zone', and - t11ZsZoneMemberParentIndex = Zone's t11ZsZoneIndex, - t11ZsZoneMemberFormat != '05 - Alias Name', - t11ZsZoneMemberID = Member's identifier. An 'active' row in this table references rows in other tables. The agent must ensure that all such referenced rows exist with a status of 'active', either by refusing to create new active rows in this table, or by automatically deleting any rows in this table that reference a deleted row. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.")
t11ZsZoneMemberParentType = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zone", 1), ("alias", 2))))
if mibBuilder.loadTexts: t11ZsZoneMemberParentType.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberParentType.setDescription('This object determines whether this member belongs to a Zone or Zone Alias.')
t11ZsZoneMemberParentIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneMemberParentIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberParentIndex.setDescription("This object contains the index value of the Zone or Zone Alias to which this member belongs. If the value of the corresponding instance of t11ZsZoneMemberParentType is 'zone', then this object will contain the value of the t11ZsZoneIndex object of the Zone to which this member belongs. If the value of the corresponding instance of t11ZsZoneMemberParentType is 'alias', then this object will contain the value of the t11ZsAliasIndex object of the Zone Alias to which this member belongs.")
t11ZsZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneMemberIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberIndex.setDescription('An index value that uniquely identifies this Zone Member amongst all Zone Members in the Zone Set database of a particular Fabric on a particular switch.')
t11ZsZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 4), T11ZsZoneMemberType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberFormat.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberFormat.setDescription("This object identifies the format of the Zone/Zone Alias member's identifier contained in t11ZsZoneMemberID. This object cannot be modified while the corresponding value of t11ZsZoneMemberRowStatus object is 'active'.")
t11ZsZoneMemberID = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberID.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberID.setDescription("This object contains the Member Identifier of the Zone or Alias. The interpretation of this object depends on the value of the corresponding instance of t11ZsZoneMemberFormat: - if t11ZsZoneMemberFormat is 'N_Port_Name', then this object contains an N_Port_Name. - if t11ZsZoneMemberFormat is 'Domain_ID and physical port', then this object contains a 4-octet value in network byte order. The first octet is zero, the second octet contains the Domain_ID, and the last 2 octets contain the physical port number. - if t11ZsZoneMemberFormat is 'N_Port_ID', then this object contains the 3-octet Nx_Port FC_ID. - if t11ZsZoneMemberFormat is 'Alias Name', then this object contains the value of t11ZsAliasName for some Alias in the same Zone Set database. - if t11ZsZoneMemberFormat is 'Node_Name', then this object contains an 8-octet Node_Name. - if t11ZsZoneMemberFormat is 'F_Port_Name', then this object contains an 8-octet F_Port_Name. - if t11ZsZoneMemberFormat is one of the 'Vendor Specific' values, then this object contains a value of 1 to 255 octets in a format defined by the relevant vendor. This object cannot be modified while the corresponding value of t11ZsZoneMemberRowStatus object is 'active'.")
t11ZsZoneMemberRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberRowStatus.setDescription("The status of this conceptual row. The corresponding instances of t11ZsZoneMemberID and t11ZsZoneMemberFormat objects must be set before or concurrently with setting this object to 'active'.")
t11ZsAttribBlockTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 7), )
if mibBuilder.loadTexts: t11ZsAttribBlockTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockTable.setDescription("This table gives information on all the Zone Attributes in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsAttribBlockEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 7, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsAttribBlockIndex"))
if mibBuilder.loadTexts: t11ZsAttribBlockEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockEntry.setDescription("Each entry contains information about a Zone Attribute Block (of Zone Attributes) in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). An 'active' row in this table references a row in the t11ZsAttribBlockTable. The agent must ensure that the referenced rows exists with a status of 'active', either by refusing to create new active rows in this table, or by automatically deleting any rows in this table that reference a deleted row. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.")
t11ZsAttribBlockIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAttribBlockIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockIndex.setDescription('An index value that uniquely identifies this Zone Attribute within the Zone Set database of a particular Fabric on a particular switch.')
t11ZsAttribBlockName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 7, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribBlockName.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockName.setDescription('The name of this Zone Attribute Block, which should be unique within the Fabric.')
t11ZsAttribBlockRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribBlockRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockRowStatus.setDescription('The status of this conceptual row.')
t11ZsAttribTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 8), )
if mibBuilder.loadTexts: t11ZsAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribTable.setDescription("This table gives information on the Zone Attributes within the Zone Attribute Blocks in the Zone Set database of the Zone Servers on each Fabric in one or more switches. In Enhanced mode, changes to a database made via this table are always made to the 'copy' database, but values read from this table reflect the contents of either the 'copy' database or the current (committed) database as indicated by the corresponding value of t11ZsServerReadFromDatabase.")
t11ZsAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 8, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsAttribBlockIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsAttribIndex"))
if mibBuilder.loadTexts: t11ZsAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribEntry.setDescription('Each entry contains information about a Zone Attribute in a Zone Attribute Block (identified by t11ZsAttribBlockIndex) in the Zone Set database of a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). An entry in this table cannot be created prior to its associated entry in the t11ZsAttribBlockTable. The StorageType of a row in this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.')
t11ZsAttribIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAttribIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribIndex.setDescription('An index value that uniquely identifies this Zone Attribute within its Zone Attribute Block in the Zone Set database of a particular Fabric on a particular switch.')
t11ZsAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribType.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.3.8, Table 249.')
if mibBuilder.loadTexts: t11ZsAttribType.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribType.setDescription('The type of attribute: 0001 - Protocol 0002 - Broadcast Zone 0003 - Hard Zone 00E0 (hex) - Vendor Specific.')
t11ZsAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 252))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribValue.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.3.8.')
if mibBuilder.loadTexts: t11ZsAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribValue.setDescription('The value of the attribute, formatted as specified in FC-GS-5 for the type given by the corresponding instance of t11ZsAttribType. Note that FC-GS-5 requires that the length of this value is a multiple of 4 bytes.')
t11ZsAttribRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribRowStatus.setDescription('The status of this conceptual row.')
t11ZsActivateTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 9), )
if mibBuilder.loadTexts: t11ZsActivateTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateTable.setDescription('This table provides a mechanism to allow a Zone Set to be activated on a Fabric.')
t11ZsActivateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsActivateEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateEntry.setDescription('Each entry reflects the state of the activation of a Zone Set by a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex) on a particular Fabric (identified by the value of t11ZsServerFabricIndex).')
t11ZsActivateRequest = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsActivateRequest.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateRequest.setDescription('Setting this object to a value is a request for a Zone Set to be activated on the Fabric that is represented by this row. The Zone Set to be activated is the one for which t11ZsSetIndex has the same value. If a Zone Set is already active on a Fabric when a request is made to activate a different one on that Fabric, then the existing Zone Set is automatically deactivated and the specified Zone Set is activated in its place. The value of this object when read is always 0.')
t11ZsActivateDeactivate = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deactivate", 1), ("noop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsActivateDeactivate.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateDeactivate.setDescription("Setting this object to 'deactivate' is a request to deactivate the currently active Zone Set on a Fabric. Note that the deactivation of the active Zone Set allows all ports to communicate or no ports to communicate, depending on the current Default Zone behavior. No action is taken if this object is set to 'noop'. When read, the value of this object is always 'noop'.")
t11ZsActivateResult = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("activateSuccess", 1), ("activateFailure", 2), ("deactivateSuccess", 3), ("deactivateFailure", 4), ("inProgress", 5), ("none", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateResult.setDescription("This object indicates the outcome of the most recent activation/deactivation using this entry. When the value of this object is 'inProgress', the values of the corresponding instances of t11ZsActivateRequest and t11ZsActivateDeactivate cannot be modified. The value 'none' indicates activation/deactivation has not been attempted since the last restart of the management system.")
t11ZsActivateFailCause = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateFailCause.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateFailCause.setDescription("A textual message indicating the reason for the most recent failure of a Zone Set activation or deactivation, or the zero-length string if no information is available (e.g., because the corresponding instance of t11ZsActivateResult has the value 'none'). When the corresponding instance of t11ZsActivateResult is either 'activateFailure' or 'deactivateFailure', the value of this object indicates the reason for that failure.")
t11ZsActivateFailDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 9, 1, 5), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateFailDomainId.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateFailDomainId.setDescription('If the failure cause (as indicated by t11ZsSetFailCause) was specific to a particular device, this object contains the Domain_ID of that device. Otherwise, this object contains zero.')
t11ZsActiveTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 10), )
if mibBuilder.loadTexts: t11ZsActiveTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveTable.setDescription('A table containing information on the currently enforced/active Zone Set on each Fabric. An active Zone Set cannot be modified. This table will be empty when no Zone Set is activated.')
t11ZsActiveEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 10, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsActiveEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveEntry.setDescription('Each entry represents an active Zone Set of a particular Fabric (identified by the value of t11ZsServerFabricIndex), according to a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsActiveZoneSetName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 10, 1, 1), T11ZoningName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneSetName.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneSetName.setDescription('The name of this Zone Set on this Fabric.')
t11ZsActiveActivateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 10, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveActivateTime.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveActivateTime.setDescription('The value of sysUpTime at which this entry was most recently activated. If this row was activated prior to the last re-initialization of the local network management system, then this object will contain a zero value.')
t11ZsActiveZoneTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 11), )
if mibBuilder.loadTexts: t11ZsActiveZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneTable.setDescription('This table contains all the Zones that are present in the active Zone Sets on all Fabrics.')
t11ZsActiveZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 11, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"))
if mibBuilder.loadTexts: t11ZsActiveZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneEntry.setDescription('Each entry represents a Zone in the active Zone Set of a particular Fabric (identified by the value of t11ZsServerFabricIndex), according to a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsActiveZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveZoneIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneIndex.setDescription('An index value that uniquely identifies this Zone within the active Zone Set on a particular Fabric.')
t11ZsActiveZoneName = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 11, 1, 2), T11ZoningName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneName.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneName.setDescription('The name of this Zone.')
t11ZsActiveZoneBroadcastZoning = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneBroadcastZoning.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneBroadcastZoning.setDescription('This object indicates whether broadcast Zoning is enabled on this Zone. If broadcast Zoning is enabled, then broadcast frames generated by a member in this Zone will be restricted to members in this Zone. This object is only instantiated in Enhanced mode.')
t11ZsActiveZoneHardZoning = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 11, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneHardZoning.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneHardZoning.setDescription('This object indicates whether hard Zoning is enabled on this Zone. This object is only instantiated in Enhanced mode.')
t11ZsActiveZoneMemberTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 12), )
if mibBuilder.loadTexts: t11ZsActiveZoneMemberTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberTable.setDescription('This table contains all members of all Zones within the active Zone Set on any Fabric.')
t11ZsActiveZoneMemberEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 12, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberIndex"))
if mibBuilder.loadTexts: t11ZsActiveZoneMemberEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberEntry.setDescription('Each entry represents a member of a Zone in the active Zone Set of a particular Fabric (identified by the value t11ZsServerFabricIndex), according to a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsActiveZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveZoneMemberIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberIndex.setDescription('An index value that uniquely identifies this member amongst the members of a particular Zone in the active Zone Set on a particular Fabric.')
t11ZsActiveZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 12, 1, 2), T11ZsZoneMemberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneMemberFormat.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberFormat.setDescription('This object identifies the identifier format of the corresponding instance of t11ZsActiveZoneMemberID.')
t11ZsActiveZoneMemberID = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneMemberID.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberID.setDescription('This value of this object identifies the member using the format specified in the corresponding instance of t11ZsActiveZoneMemberFormat.')
t11ZsActiveAttribTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 13), )
if mibBuilder.loadTexts: t11ZsActiveAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribTable.setDescription('This table contains information about some of the Attributes of the Zones within the active Zone Set on each Fabric. This table contains all the types of attributes that might apply zero, one, or more times to a Zone. Attributes that apply once and only to a Zone are specified in the t11ZsActiveZoneTable. This table will always be empty in Basic mode. It will also be empty if there are no Zones in any active Zone Set having any of the applicable types of attributes.')
t11ZsActiveAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 13, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsActiveAttribIndex"))
if mibBuilder.loadTexts: t11ZsActiveAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribEntry.setDescription('Each entry contains an Attribute of a particular Zone in the active Zone Set of a particular Fabric (identified by the value of t11ZsServerFabricIndex), according to a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsActiveAttribIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveAttribIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribIndex.setDescription('An index value that uniquely identifies this attribute amongst the other attributes for a particular Zone in the active Zone Set on a particular Fabric.')
t11ZsActiveAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveAttribType.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.3.8, Table 249.')
if mibBuilder.loadTexts: t11ZsActiveAttribType.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribType.setDescription('The type of attribute: 0001 - Protocol 00E0 (hex) - Vendor Specific Note that type 2 (Hard) and type 3 (Broadcast) do not need to be represented here, because they are represented by t11ZsActiveZoneBroadcastZoning and t11ZsActiveZoneHardZoning.')
t11ZsActiveAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setReference('Fibre Channel - Generic Services-5 (FC-GS-5), ANSI INCITS 427-2007, section 6.4.8.3.8.')
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setDescription('The value of the attribute, formatted according to its type as indicated by the corresponding instance of t11ZsActiveAttribType. As specified in FC-GS-5, the length of an attribute value is at least 4 bytes, and if necessary, the value is appended with zero bytes so that the length is a multiple of 4. For a Vendor-Specific attribute value, the first 8 bytes contain the T10 Vendor ID as described in FC-GS-5.')
t11ZsStatsTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 2, 1), )
if mibBuilder.loadTexts: t11ZsStatsTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatsTable.setDescription('A table of statistics maintained by Zone Servers.')
t11ZsStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsStatsEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatsEntry.setDescription('A set of statistics for a Zone Server on a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsOutMergeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsOutMergeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsOutMergeRequests.setDescription('The number of Merge Request Frames sent by this Zone Server to other Zone Servers in the same Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsInMergeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsInMergeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsInMergeAccepts.setDescription('The number of Merge Accept Frames received by this Zone Server from other Zone Servers in the same Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsInMergeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsInMergeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsInMergeRequests.setDescription('The number of Merge Request Frames received by this Zone Server from other Zone Servers in the same Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsOutMergeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsOutMergeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsOutMergeAccepts.setDescription('The number of Merge Accept Frames sent by this Zone Server to other Zone Servers in the same Fabric. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsOutChangeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsOutChangeRequests.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, sections 10.6 and 13.')
if mibBuilder.loadTexts: t11ZsOutChangeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsOutChangeRequests.setDescription('The number of change requests sent (via the Fabric Management Session Protocol) by this Zone Server to other Zone Servers in the same Fabric. This includes Acquire Change Authorization requests, Stage Fabric Config Update requests, Update Fabric Config requests and Release Change Authorization requests. It also includes the corresponding types of requests defined by the Enhanced Commit Service. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsInChangeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsInChangeAccepts.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, sections 10.6 and 13.')
if mibBuilder.loadTexts: t11ZsInChangeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsInChangeAccepts.setDescription('The number of SW_ACC messages received from other Zone Servers in the same Fabric (according to the Fabric Management Session Protocol) in response to change requests by this Zone Server. This includes SW_ACC messages received in response to Acquire Change Authorization requests, to Stage Fabric Config Update requests, to Update Fabric Config requests, and to Release Change Authorization requests. It also includes responses to the corresponding types of requests defined for the Enhanced Commit Service. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsInChangeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsInChangeRequests.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, sections 10.6 and 13.')
if mibBuilder.loadTexts: t11ZsInChangeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsInChangeRequests.setDescription('The number of change requests received (via the Fabric Management Session Protocol) by this Zone Server from other Zone Servers in the same Fabric. This includes Acquire Change Authorization requests, Stage Fabric Config Update requests, Update Fabric Config requests and Release Change Authorization requests. It also includes the corresponding types of requests defined by the Enhanced Commit Service. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsOutChangeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsOutChangeAccepts.setReference('Fibre Channel - Switch Fabric-4 (FC-SW-4), ANSI INCITS 418-2006, April 2006, sections 10.6 and 13.')
if mibBuilder.loadTexts: t11ZsOutChangeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsOutChangeAccepts.setDescription('The number of SW_ACC messages sent by this Zone Server (according to the Fabric Management Session Protocol) in response to change requests from other Zone Servers in the same Fabric. This includes SW_ACC messages sent in response to Acquire Change Authorization requests, to Stage Fabric Config Update requests, to Update Fabric Config requests and to Release Change Authorization requests. It also includes responses to the corresponding types of requests defined for the Enhanced Commit Service. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsInZsRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsInZsRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsInZsRequests.setDescription('The number of Zone Server requests received by this Zone Server on this Fabric, both those received in Basic mode and in Enhanced mode. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsOutZsRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsOutZsRejects.setStatus('current')
if mibBuilder.loadTexts: t11ZsOutZsRejects.setDescription('The number of Zone Server requests rejected by this Zone Server on this Fabric, both those rejected in Basic mode and in Enhanced mode. This counter has no discontinuities other than those that all Counter32s have when sysUpTime=0.')
t11ZsNotifyControlTable = MibTable((1, 3, 6, 1, 2, 1, 160, 1, 1, 14), )
if mibBuilder.loadTexts: t11ZsNotifyControlTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyControlTable.setDescription('A table of control information for notifications generated due to Zone Server events.')
t11ZsNotifyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsNotifyControlEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyControlEntry.setDescription('Each entry contains notification control information specific to a Zone Server for a particular Fabric (identified by the value of t11ZsServerFabricIndex) on a particular switch (identified by values of fcmInstanceIndex and fcmSwitchIndex). The persistence across reboots of writable values in a row of this table is specified by the instance of t11ZsServerDatabaseStorageType that is INDEXed by the same values of fcmInstanceIndex, fcmSwitchIndex, and t11ZsServerFabricIndex.')
t11ZsNotifyRequestRejectEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyRequestRejectEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyRequestRejectEnable.setDescription('This object specifies whether t11ZsRequestRejectNotify notifications should be generated by the Zone Server for this Fabric.')
t11ZsNotifyMergeFailureEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyMergeFailureEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyMergeFailureEnable.setDescription('This object specifies whether t11ZsMergeFailureNotify notifications should be generated by the Zone Server for this Fabric.')
t11ZsNotifyMergeSuccessEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyMergeSuccessEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyMergeSuccessEnable.setDescription('This object specifies whether t11ZsMergeSuccessNotify notifications should be generated by the Zone Server for this Fabric.')
t11ZsNotifyDefZoneChangeEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyDefZoneChangeEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyDefZoneChangeEnable.setDescription('This object specifies whether t11ZsDefZoneChangeNotify notifications should be generated by the Zone Server for this Fabric.')
t11ZsNotifyActivateEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyActivateEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyActivateEnable.setDescription('This object specifies whether t11ZsActivateNotify notifications should be generated by the Zone Server for this Fabric.')
t11ZsRejectCtCommandString = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectCtCommandString.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectCtCommandString.setDescription("The binary content of the Zone Server request, formatted as an octet string (in network byte order) containing the Common Transport Information Unit (CT_IU), as described in Table 2 of FC-GS-5 (including the preamble), which was most recently rejected by the Fabric Configuration Server for this Fabric. This object contains the zero-length string if and when the CT-IU's content is unavailable. When the length of this object is 255 octets, it contains the first 255 octets of the CT-IU (in network byte order).")
t11ZsRejectRequestSource = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 7), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectRequestSource.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectRequestSource.setDescription('The WWN that was the source of the CT_IU contained in the corresponding instance of t11ZsRejectCtCommandString.')
t11ZsRejectReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 8), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectReasonCode.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectReasonCode.setDescription('The reason code corresponding to the most recent rejection of a request by the Zone Server for this Fabric.')
t11ZsRejectReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 9), T11ZsRejectReasonExplanation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectReasonCodeExp.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectReasonCodeExp.setDescription("When the value of t11ZsRejectReasonCode is 'Unable to perform command request', this object contains the corresponding reason code explanation.")
t11ZsRejectReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 160, 1, 1, 14, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectReasonVendorCode.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectReasonVendorCode.setDescription("When the value of t11ZsRejectReasonCode is 'Vendor Specific Error', this object contains the corresponding vendor-specific reason code.")
t11ZsFabricIndex = MibScalar((1, 3, 6, 1, 2, 1, 160, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11ZsFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsFabricIndex.setDescription('This object contains either a value of T11FabricIndex to identify the Fabric on which some occurrence has caused a notification to be generated, or it has the value 4096 to indicate all applicable Fabrics.')
t11ZsRequestRejectNotify = NotificationType((1, 3, 6, 1, 2, 1, 160, 0, 1)).setObjects(("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectRequestSource"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectCtCommandString"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonCode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonCodeExp"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonVendorCode"))
if mibBuilder.loadTexts: t11ZsRequestRejectNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsRequestRejectNotify.setDescription('This notification is generated whenever a Zone Server (indicated by the value of t11FamLocalSwitchWwn) rejects a request. The value of t11ZsRejectCtCommandString indicates the rejected request, and the values of t11ZsRejectReasonCode, t11ZsRejectReasonCodeExp and t11ZsRejectReasonVendorCode indicate the reason for the rejection. The value of t11ZsRequestClient indicates the source of the request.')
t11ZsMergeFailureNotify = NotificationType((1, 3, 6, 1, 2, 1, 160, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if mibBuilder.loadTexts: t11ZsMergeFailureNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsMergeFailureNotify.setDescription('This notification indicates that a Zone merge failure has occurred on the Fabric indicated by the value of t11ZsFabricIndex, on the interface indicated by the value of ifIndex. If multiple Virtual Fabrics are configured on an interface, and all have a Zone merge failure at the same time, then just one notification is generated and t11ZsFabricIndex has the value 4096.')
t11ZsMergeSuccessNotify = NotificationType((1, 3, 6, 1, 2, 1, 160, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if mibBuilder.loadTexts: t11ZsMergeSuccessNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsMergeSuccessNotify.setDescription('This notification indicates that a successful Zone merge has occurred on the Fabric indicated by the value of t11ZsFabricIndex, on the interface indicated by the value of ifIndex. If multiple Virtual Fabrics are configured on an interface, and all have a successful Zone Merge at the same time, then just one notification is generated and t11ZsFabricIndex has the value 4096.')
t11ZsDefZoneChangeNotify = NotificationType((1, 3, 6, 1, 2, 1, 160, 0, 4)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsServerDefaultZoneSetting"))
if mibBuilder.loadTexts: t11ZsDefZoneChangeNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsDefZoneChangeNotify.setDescription('This notification indicates that the value of a Default Zone Setting has changed. The value of t11ZsServerDefaultZoneSetting contains the value after the change.')
t11ZsActivateNotify = NotificationType((1, 3, 6, 1, 2, 1, 160, 0, 5)).setObjects(("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateResult"))
if mibBuilder.loadTexts: t11ZsActivateNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateNotify.setDescription('This notification is generated whenever a switch (indicated by the value of t11FamLocalSwitchWwn) activates/deactivates a Zone Set on a Fabric. The t11ZsActivateResult object denotes the outcome of the activation/deactivation.')
t11ZsMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 2, 1))
t11ZsMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 160, 2, 2))
t11ZsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 160, 2, 1, 1)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsBasicGroup"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotificationControlGroup"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotificationGroup"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsEnhancedModeGroup"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateGroup"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsMIBCompliance = t11ZsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11ZsMIBCompliance.setDescription('The compliance statement for entities that implement the Zone Server.')
t11ZsBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 1)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsServerCapabilityObject"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerDatabaseStorageType"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerDistribute"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerResult"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerReasonCode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerReasonCodeExp"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerReasonVendorCode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerLastChange"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerHardZoning"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerReadFromDatabase"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerOperationMode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsSetName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsSetRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneAttribBlock"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsSetZoneRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberFormat"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberID"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsZoneMemberRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneSetName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveActivateTime"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberFormat"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsBasicGroup = t11ZsBasicGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsBasicGroup.setDescription('A collection of objects for displaying and updating the Zone configuration of a Zone Server capable of operating in Basic mode.')
t11ZsEnhancedModeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 2)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsServerCommit"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerChangeModeResult"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerDefaultZoneSetting"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerMergeControlSetting"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsServerDefZoneBroadcast"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAliasName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAliasRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAttribBlockName"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAttribBlockRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAttribType"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAttribValue"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsAttribRowStatus"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneBroadcastZoning"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveZoneHardZoning"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveAttribType"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActiveAttribValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsEnhancedModeGroup = t11ZsEnhancedModeGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsEnhancedModeGroup.setDescription('A collection of additional objects for displaying and updating the Zone configuration of a Zone Server capable of operating in Enhanced mode.')
t11ZsStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 3)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsOutMergeRequests"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsInMergeAccepts"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsInMergeRequests"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsOutMergeAccepts"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsOutChangeRequests"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsInChangeAccepts"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsInChangeRequests"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsOutChangeAccepts"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsInZsRequests"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsOutZsRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsStatisticsGroup = t11ZsStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatisticsGroup.setDescription('A collection of objects for collecting Zone Server statistics information.')
t11ZsNotificationControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 4)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsNotifyRequestRejectEnable"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotifyMergeFailureEnable"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotifyMergeSuccessEnable"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotifyDefZoneChangeEnable"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsNotifyActivateEnable"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectCtCommandString"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectRequestSource"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonCode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonCodeExp"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsRejectReasonVendorCode"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsNotificationControlGroup = t11ZsNotificationControlGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotificationControlGroup.setDescription('A collection of notification control and notification information objects for monitoring Zone Server request rejection and Zone merge failures.')
t11ZsActivateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 5)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateRequest"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateDeactivate"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateResult"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateFailCause"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateFailDomainId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsActivateGroup = t11ZsActivateGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateGroup.setDescription('A collection of objects that allow a Zone Set to be activated via SNMP SetRequests and provide the status and result of such an activation.')
t11ZsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 160, 2, 2, 6)).setObjects(("T11-FC-ZONE-SERVER-MIB", "t11ZsRequestRejectNotify"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsMergeFailureNotify"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsMergeSuccessNotify"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsDefZoneChangeNotify"), ("T11-FC-ZONE-SERVER-MIB", "t11ZsActivateNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsNotificationGroup = t11ZsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotificationGroup.setDescription('A collection of notification(s) for monitoring Zone Server request rejection, Zone merge failures and successes, and Default Zoning behavioral changes.')
mibBuilder.exportSymbols("T11-FC-ZONE-SERVER-MIB", t11ZsConfiguration=t11ZsConfiguration, t11ZsMIBCompliance=t11ZsMIBCompliance, t11ZsMergeFailureNotify=t11ZsMergeFailureNotify, t11ZsServerDatabaseStorageType=t11ZsServerDatabaseStorageType, t11ZsAliasIndex=t11ZsAliasIndex, t11ZsZoneMemberIndex=t11ZsZoneMemberIndex, t11ZsZoneMemberID=t11ZsZoneMemberID, t11ZsActiveAttribIndex=t11ZsActiveAttribIndex, t11ZsActiveZoneName=t11ZsActiveZoneName, t11ZsOutChangeAccepts=t11ZsOutChangeAccepts, t11ZsServerHardZoning=t11ZsServerHardZoning, t11ZsAttribRowStatus=t11ZsAttribRowStatus, t11ZsAliasEntry=t11ZsAliasEntry, t11ZsMIBConformance=t11ZsMIBConformance, t11ZsActiveZoneMemberIndex=t11ZsActiveZoneMemberIndex, t11ZsSetIndex=t11ZsSetIndex, t11ZsMergeSuccessNotify=t11ZsMergeSuccessNotify, t11ZsAttribIndex=t11ZsAttribIndex, t11ZsMIBCompliances=t11ZsMIBCompliances, t11ZsDefZoneChangeNotify=t11ZsDefZoneChangeNotify, t11ZsActivateFailCause=t11ZsActivateFailCause, t11ZsActivateFailDomainId=t11ZsActivateFailDomainId, t11ZsActiveAttribType=t11ZsActiveAttribType, t11ZsStatisticsGroup=t11ZsStatisticsGroup, t11ZsSetRowStatus=t11ZsSetRowStatus, t11ZsServerResult=t11ZsServerResult, t11ZsSetZoneTable=t11ZsSetZoneTable, t11ZsRejectRequestSource=t11ZsRejectRequestSource, t11ZsAttribBlockEntry=t11ZsAttribBlockEntry, t11ZsBasicGroup=t11ZsBasicGroup, t11ZsServerCapabilityObject=t11ZsServerCapabilityObject, t11ZsActivateTable=t11ZsActivateTable, t11ZsSetTable=t11ZsSetTable, t11ZsZoneMemberParentIndex=t11ZsZoneMemberParentIndex, t11ZsRequestRejectNotify=t11ZsRequestRejectNotify, t11ZsNotifyMergeFailureEnable=t11ZsNotifyMergeFailureEnable, t11ZsNotifyActivateEnable=t11ZsNotifyActivateEnable, t11ZsActiveZoneBroadcastZoning=t11ZsActiveZoneBroadcastZoning, t11ZsActiveZoneIndex=t11ZsActiveZoneIndex, t11ZsEnhancedModeGroup=t11ZsEnhancedModeGroup, T11ZsZoneMemberType=T11ZsZoneMemberType, t11ZsActiveActivateTime=t11ZsActiveActivateTime, t11ZsAttribBlockRowStatus=t11ZsAttribBlockRowStatus, T11ZoningName=T11ZoningName, t11ZsAliasTable=t11ZsAliasTable, t11ZsServerMergeControlSetting=t11ZsServerMergeControlSetting, t11ZsInChangeRequests=t11ZsInChangeRequests, t11ZsNotifyDefZoneChangeEnable=t11ZsNotifyDefZoneChangeEnable, t11ZsSetZoneRowStatus=t11ZsSetZoneRowStatus, t11ZsActiveZoneSetName=t11ZsActiveZoneSetName, t11ZsServerChangeModeResult=t11ZsServerChangeModeResult, t11ZsServerCommit=t11ZsServerCommit, t11ZsStatsTable=t11ZsStatsTable, t11ZsOutChangeRequests=t11ZsOutChangeRequests, t11ZsMIBObjects=t11ZsMIBObjects, t11ZsSetEntry=t11ZsSetEntry, t11ZsServerFabricIndex=t11ZsServerFabricIndex, t11ZsZoneMemberFormat=t11ZsZoneMemberFormat, t11ZsActivateResult=t11ZsActivateResult, t11ZsServerDefZoneBroadcast=t11ZsServerDefZoneBroadcast, t11ZsServerEntry=t11ZsServerEntry, t11ZsRejectReasonVendorCode=t11ZsRejectReasonVendorCode, t11ZsZoneTable=t11ZsZoneTable, t11ZsSetName=t11ZsSetName, t11ZsAttribType=t11ZsAttribType, t11ZsActiveAttribValue=t11ZsActiveAttribValue, t11ZsAttribEntry=t11ZsAttribEntry, t11ZsSetZoneEntry=t11ZsSetZoneEntry, t11ZsServerReadFromDatabase=t11ZsServerReadFromDatabase, t11ZsNotifyMergeSuccessEnable=t11ZsNotifyMergeSuccessEnable, t11ZsServerDefaultZoneSetting=t11ZsServerDefaultZoneSetting, t11ZsOutZsRejects=t11ZsOutZsRejects, t11ZsZoneIndex=t11ZsZoneIndex, t11ZsInChangeAccepts=t11ZsInChangeAccepts, t11ZsZoneEntry=t11ZsZoneEntry, t11ZsZoneMemberEntry=t11ZsZoneMemberEntry, t11ZsInMergeAccepts=t11ZsInMergeAccepts, t11ZsServerDistribute=t11ZsServerDistribute, t11ZsOutMergeRequests=t11ZsOutMergeRequests, t11ZsRejectCtCommandString=t11ZsRejectCtCommandString, t11ZsZoneAttribBlock=t11ZsZoneAttribBlock, t11ZsNotifyRequestRejectEnable=t11ZsNotifyRequestRejectEnable, t11ZsZoneMemberTable=t11ZsZoneMemberTable, t11ZsZoneName=t11ZsZoneName, PYSNMP_MODULE_ID=t11ZoneServerMIB, t11ZsServerOperationMode=t11ZsServerOperationMode, t11ZsActivateEntry=t11ZsActivateEntry, t11ZsActivateRequest=t11ZsActivateRequest, t11ZsNotifyControlTable=t11ZsNotifyControlTable, t11ZsActiveZoneTable=t11ZsActiveZoneTable, t11ZsActiveZoneHardZoning=t11ZsActiveZoneHardZoning, t11ZsNotificationControlGroup=t11ZsNotificationControlGroup, t11ZsAttribBlockIndex=t11ZsAttribBlockIndex, t11ZsFabricIndex=t11ZsFabricIndex, t11ZsServerTable=t11ZsServerTable, t11ZoneServerMIB=t11ZoneServerMIB, t11ZsMIBGroups=t11ZsMIBGroups, t11ZsStatsEntry=t11ZsStatsEntry, t11ZsOutMergeAccepts=t11ZsOutMergeAccepts, T11ZsRejectReasonExplanation=T11ZsRejectReasonExplanation, t11ZsZoneRowStatus=t11ZsZoneRowStatus, t11ZsActiveZoneMemberTable=t11ZsActiveZoneMemberTable, t11ZsActiveAttribEntry=t11ZsActiveAttribEntry, t11ZsActivateGroup=t11ZsActivateGroup, t11ZsActiveAttribTable=t11ZsActiveAttribTable, t11ZsAliasRowStatus=t11ZsAliasRowStatus, t11ZsAttribBlockName=t11ZsAttribBlockName, t11ZsActiveTable=t11ZsActiveTable, t11ZsServerReasonVendorCode=t11ZsServerReasonVendorCode, t11ZsServerLastChange=t11ZsServerLastChange, t11ZsInMergeRequests=t11ZsInMergeRequests, t11ZsAliasName=t11ZsAliasName, t11ZsStatistics=t11ZsStatistics, t11ZsActiveZoneEntry=t11ZsActiveZoneEntry, t11ZsNotifyControlEntry=t11ZsNotifyControlEntry, t11ZsActiveZoneMemberEntry=t11ZsActiveZoneMemberEntry, t11ZsInZsRequests=t11ZsInZsRequests, t11ZsActivateDeactivate=t11ZsActivateDeactivate, t11ZsRejectReasonCode=t11ZsRejectReasonCode, t11ZsServerReasonCode=t11ZsServerReasonCode, t11ZsActiveEntry=t11ZsActiveEntry, t11ZsMIBNotifications=t11ZsMIBNotifications, t11ZsAttribTable=t11ZsAttribTable, t11ZsNotificationGroup=t11ZsNotificationGroup, t11ZsAttribBlockTable=t11ZsAttribBlockTable, t11ZsAttribValue=t11ZsAttribValue, t11ZsZoneMemberRowStatus=t11ZsZoneMemberRowStatus, t11ZsServerReasonCodeExp=t11ZsServerReasonCodeExp, t11ZsActiveZoneMemberID=t11ZsActiveZoneMemberID, t11ZsZoneMemberParentType=t11ZsZoneMemberParentType, t11ZsActiveZoneMemberFormat=t11ZsActiveZoneMemberFormat, t11ZsActivateNotify=t11ZsActivateNotify, t11ZsRejectReasonCodeExp=t11ZsRejectReasonCodeExp)
