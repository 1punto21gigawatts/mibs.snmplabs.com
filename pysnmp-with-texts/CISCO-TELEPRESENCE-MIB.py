#
# PySNMP MIB module CISCO-TELEPRESENCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-TELEPRESENCE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:14:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, Bits, Gauge32, IpAddress, Integer32, Counter32, iso, ObjectIdentity, MibIdentifier, Unsigned32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Bits", "Gauge32", "IpAddress", "Integer32", "Counter32", "iso", "ObjectIdentity", "MibIdentifier", "Unsigned32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TimeStamp, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DisplayString", "TruthValue", "TextualConvention")
ciscoTelepresenceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 643))
ciscoTelepresenceMIB.setRevisions(('2014-07-18 00:00', '2012-07-17 00:00', '2012-03-23 00:00', '2011-08-23 00:00', '2010-07-23 00:00', '2010-07-13 00:00', '2009-07-12 00:00', '2008-02-13 00:00', '2007-12-11 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoTelepresenceMIB.setRevisionsDescriptions(('Added ctpDPPeripheralStatusTable Table and added auxHDMIInputDevice(19) and bringYourOwnDevice(20) enum value in CtpPeripheralDeviceCategoryCode', 'Added detectionDisabled in CtpPeripheralStatusCode', 'Added ctpVlanId, ctpDefaultGateway and ctpDefaultGatewayAddrType in ctpObjects', 'Added uiDevice in CtpPeripheralDeviceCategoryCode', 'Added ctpUSBPeripheralStatusTable and ctpWIFIPeripheralStatusTable in ctpPeripheralStatusEntry. ciscoTelepresenceComplianceR02 has been deprecated by ciscoTelepresenceComplianceR03. ciscoTpPeripheralStatusGroupR01 has been deprecated by ciscoTpPeripheralStatusGroupR02', 'Added ctpPeriStatusChangeNotifyEnable.', 'Added ctpPeripheralDeviceCategory and ctpPeripheralDeviceNumber in ctpPeripheralStatusEntry. Added commError in CtpPeripheralStatusCode. Updated the description of ctpPeripheralErrorHistoryTable.', 'Added serial peripheral status and peripheral attribute table.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoTelepresenceMIB.setLastUpdated('201411240000Z')
if mibBuilder.loadTexts: ciscoTelepresenceMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoTelepresenceMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cochan@cisco.com')
if mibBuilder.loadTexts: ciscoTelepresenceMIB.setDescription('The MIB module defines the managed objects for a Telepresence system. Telepresence refers to a set of technologies which allow a person to feel as if they were present, to give the appearance that they were present, or to have an effect, at a location other than their true location. A complete Telepresence system includes one or more Telepresence CODECS and peripherals such as display, camera, speaker, microphone and presentation device. Peripherals are attached directly to a Telepresence CODEC via an interface. Some peripherals may have more than one interface to transmit audio and/or video data and provide a configuration and/or control access.')
class CtpSystemResetMode(TextualConvention, Integer32):
    description = 'This textual convention identifies the system reset mode. noRestart (1) -- No operation. restartPending (2) -- Restart a system without shutting down when there is no active call; otherwise, system will be restarted after the call is terminated. resetPending (3) -- Shut down a system and bring it back up if there is no active call; otherwise, system will be reset after the call is terminated. forceReset (4) -- Shut down a system and bring it back up no matter if there is an active call or not.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noRestart", 1), ("restartPending", 2), ("resetPending", 3), ("forceReset", 4))

class CtpPeripheralCableCode(TextualConvention, Integer32):
    description = 'The textual convention identifies cable status of the attached peripheral through HDMI. plugged (1) -- Peripheral cable is plugged. loose (2) -- Peripheral cable is loose. unplugged (3) -- Peripheral cable is unplugged. unknown (4) -- Cannot detect peripheral cable status. internalError (5) -- Internal error.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("plugged", 1), ("loose", 2), ("unplugged", 3), ("unknown", 4), ("internalError", 5))

class CtpPeripheralPowerCode(TextualConvention, Integer32):
    description = 'The textual convention identifies power status of the attached peripheral through HDMI. on (1) -- Peripheral power is on. standby (2) -- Peripheral power is in standby mode. off (3) -- Peripheral power is off. unknown (4) -- Cannot detect peripheral power status. internalError (5) -- Internal error.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("on", 1), ("standby", 2), ("off", 3), ("unknown", 4), ("internalError", 5))

class CtpPeripheralStatusCode(TextualConvention, Integer32):
    description = 'The textual convention identifies the peripheral status. noError (0) -- Expected peripheral device is functioning through the attached port. other (1) -- None of the listed state. cableError (2) -- Expected peripheral device has cabling issue. powerError (3) -- Expected peripheral device has power issue. mgmtSysConfigError (4) -- Expected peripheral device has communications management system configuration issue. systemError (5) -- Telepresence system error. deviceError (6) -- Expected peripheral device is attached but not fully functional. linkError (7) -- Expected peripheral device has port level link issue. commError (8) -- Expected peripheral device has port level communication issue. detectionDisabled (9) -- Status detection has been disabled.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("noError", 0), ("other", 1), ("cableError", 2), ("powerError", 3), ("mgmtSysConfigError", 4), ("systemError", 5), ("deviceError", 6), ("linkError", 7), ("commError", 8), ("detectionDisabled", 9))

class CtpSystemAccessProtocol(TextualConvention, Integer32):
    description = 'The textual convention identifies supported Telepresence user access protocol. http (1) -- Hypertext Transfer Protocol (HTTP) snmp (2) -- Simple Network Management Protocol (SNMP) ssh (3) -- Secure Shell (SSH)'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("http", 1), ("snmp", 2), ("ssh", 3))

class CtpPeripheralDeviceCategoryCode(TextualConvention, Integer32):
    description = 'The textual convention identifies the peripheral type. unknown (0) -- Unknown Device other (1) -- None of the listed device uplinkDevice (2) -- Device attached to CTS uplink port ipPhone (3) -- IP phone camera (4) -- Camera display (5) -- Display secCodec (6) -- CTS secondary codec docCamera (7) -- Document camera projector (8) -- Projector dviDevice (9) -- Device attached to DVI port presentationCodec (10) -- CTS codec process presentation -- stream auxiliaryControlUnit (11) -- Auxiliary control unit audioExpansionUnit (12) -- Audio expansion unit microphone (13) -- Microphone headset (14) -- Headset positionMic (15) -- Position microphone digitalMediaSystem (16) -- Digitial Media System auxHDMIOuputDevice (17) -- Auxiliary HDMI output device uiDevice (18) -- User Interface device for CTS auxHDMIInputDevice (19) -- HDMI input enabled device bringYourOwnDevice (20) -- Bring Your Own Device, -- like PC,Laptop,Tablet etc'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))
    namedValues = NamedValues(("unknown", 0), ("other", 1), ("uplinkDevice", 2), ("ipPhone", 3), ("camera", 4), ("display", 5), ("secCodec", 6), ("docCamera", 7), ("projector", 8), ("dviDevice", 9), ("presentationCodec", 10), ("auxiliaryControlUnit", 11), ("audioExpansionUnit", 12), ("microphone", 13), ("headset", 14), ("positionMic", 15), ("digitialMediaSystem", 16), ("auxHDMIOutputDevice", 17), ("uiDevice", 18), ("auxHDMIInputDevice", 19), ("bringYourOwnDevice", 20))

ciscoTelepresenceMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 0))
ciscoTelepresenceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 1))
ciscoTelepresenceMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 2))
ctpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1))
ctpPeripheralStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2))
ctpEventHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3))
ctpPeripheralErrorNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpPeripheralErrorNotifyEnable.setStatus('deprecated')
if mibBuilder.loadTexts: ctpPeripheralErrorNotifyEnable.setDescription("This object controls generation of ctpPeripheralErrorNotification. When the object is 'true(1)', generation of ctpPeripheralErrorNotification is enabled. When the object is 'false(2)', generation of ctpPeripheralErrorNotification is disabled. ctpPeripheralErrorNotifyEnable object is superseded by ctpPeriStatusChangeNotifyEnable.")
ctpSysUserAuthFailNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpSysUserAuthFailNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailNotifyEnable.setDescription("This object controls generation of ctpSysUserAuthFailNotification. When the object is 'true(1)', generation of ctpSysUserAuthFailNotification is enabled. When the object is 'false(2)', generation of ctpSysUserAuthFailNotification is disabled.")
ctpSystemReset = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 3), CtpSystemResetMode().clone('noRestart')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpSystemReset.setStatus('current')
if mibBuilder.loadTexts: ctpSystemReset.setDescription('This object is used to reset or restart a Telepresence system.')
ctpPeriStatusChangeNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpPeriStatusChangeNotifyEnable.setStatus('current')
if mibBuilder.loadTexts: ctpPeriStatusChangeNotifyEnable.setDescription("This object controls generation of ctpPeriStatusChangeNotification. When the object is 'true(1)', generation of ctpPeriStatusChangeNotification is enabled. When the object is 'false(2)', generation of ctpPeriStatusChangeNotification is disabled.")
ctpVlanId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpVlanId.setStatus('current')
if mibBuilder.loadTexts: ctpVlanId.setDescription('This object specifies the Telepresence system VLAN ID.')
ctpDefaultGatewayAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 6), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpDefaultGatewayAddrType.setStatus('current')
if mibBuilder.loadTexts: ctpDefaultGatewayAddrType.setDescription('This object specifies the type of address contained in the corresponding instance of ctpDefaultGateway.')
ctpDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpDefaultGateway.setStatus('current')
if mibBuilder.loadTexts: ctpDefaultGateway.setDescription('This object specifies the Telepresence system default gateway.')
ctpPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1), )
if mibBuilder.loadTexts: ctpPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralStatusTable.setDescription('The table contains system peripheral information. An entry in this table has a corresponding entry, INDEX-ed by the same value of ctpPeripheralIndex, in the table relevant to the type of interface: ctpEtherPeripheralStatusTable for Ethernet, ctpHDMIPeripheralStatusTable for HDMI or ctpDVIPeripheralStatusTable for DVI.')
ctpPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"))
if mibBuilder.loadTexts: ctpPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralStatusEntry.setDescription('An entry contains information about one peripheral which is configured or detected by a Telepresence system.')
ctpPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralIndex.setDescription('This object specifies a unique index for a peripheral which is attached to a Telepresence system.')
ctpPeripheralDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralDescription.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralDescription.setDescription('This object specifies a description of the attached peripheral. Peripheral description may be the peripheral type, model and/or version information or a peripheral signal description.')
ctpPeripheralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1, 3), CtpPeripheralStatusCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralStatus.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralStatus.setDescription('This object specifies a peripheral status.')
ctpPeripheralDeviceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1, 4), CtpPeripheralDeviceCategoryCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralDeviceCategory.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralDeviceCategory.setDescription('This object specifies a peripheral category of a device.')
ctpPeripheralDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralDeviceNumber.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralDeviceNumber.setDescription('This object specifies a device number for a peripheral. Device number is unique within the same peripheral device category.')
ctpEtherPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2), )
if mibBuilder.loadTexts: ctpEtherPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via Ethernet port.')
ctpEtherPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralIndex"))
if mibBuilder.loadTexts: ctpEtherPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralStatusEntry.setDescription('An entry contains information about one peripheral attached to the Telepresence system via Ethernet.')
ctpEtherPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpEtherPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralIndex.setDescription("This object specifies a unique number for a peripheral Ethernet interface. If no peripheral has more than one Ethernet interface, this object will have value '1'.")
ctpEtherPeripheralIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpEtherPeripheralIfIndex.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralIfIndex.setDescription("The object specifies an index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex. If this entry doesn't have corresponding ifIndex, then this value will have value '0'.")
ctpEtherPeripheralAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpEtherPeripheralAddrType.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralAddrType.setDescription('This object specifies the type of address contained in the corresponding instance of ctpEtherPeripheralAddr.')
ctpEtherPeripheralAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpEtherPeripheralAddr.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralAddr.setDescription('This object specifies the address of the attached peripheral in the format given by the corresponding instance of ctpEtherPeripheralAddrType.')
ctpEtherPeripheralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 2, 1, 5), CtpPeripheralStatusCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpEtherPeripheralStatus.setStatus('current')
if mibBuilder.loadTexts: ctpEtherPeripheralStatus.setDescription('This object specifies attached peripheral status retrieved via Ethernet port.')
ctpHDMIPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 3), )
if mibBuilder.loadTexts: ctpHDMIPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpHDMIPeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via HDMI.')
ctpHDMIPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralIndex"))
if mibBuilder.loadTexts: ctpHDMIPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpHDMIPeripheralStatusEntry.setDescription('An entry contains information about one Telepresence HDMI peripheral.')
ctpHDMIPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpHDMIPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpHDMIPeripheralIndex.setDescription("This object specifies a unique number for a peripheral HDMI. If no peripheral has more than one HDMI, this object will have value '1'.")
ctpHDMIPeripheralCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 3, 1, 2), CtpPeripheralCableCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpHDMIPeripheralCableStatus.setStatus('current')
if mibBuilder.loadTexts: ctpHDMIPeripheralCableStatus.setDescription("This object specifies cable status of an attached peripheral. This object is set to 'loose' if system detects cable is 'unplugged' but power is 'on'.")
ctpHDMIPeripheralPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 3, 1, 3), CtpPeripheralPowerCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpHDMIPeripheralPowerStatus.setStatus('current')
if mibBuilder.loadTexts: ctpHDMIPeripheralPowerStatus.setDescription("This object specifies power status of an attached peripheral. This object is set to 'unknown' if system detects cable is 'unplugged'.")
ctpDVIPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 4), )
if mibBuilder.loadTexts: ctpDVIPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpDVIPeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via DVI.')
ctpDVIPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpDVIPeripheralIndex"))
if mibBuilder.loadTexts: ctpDVIPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpDVIPeripheralStatusEntry.setDescription('An entry contains information about one peripheral attached to the Telepresence system via DVI.')
ctpDVIPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpDVIPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpDVIPeripheralIndex.setDescription("This object specifies a unique number for a peripheral DVI. If no peripheral has more than one DVI, this object will have value '1'. Note that some Telepresence systems have no DVI port and some Telepresence systems have only one DVI port.")
ctpDVIPeripheralCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 4, 1, 2), CtpPeripheralCableCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpDVIPeripheralCableStatus.setStatus('current')
if mibBuilder.loadTexts: ctpDVIPeripheralCableStatus.setDescription('This object specifies attached device cable status reported by DVI.')
ctpRS232PeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 5), )
if mibBuilder.loadTexts: ctpRS232PeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpRS232PeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via RS-232.')
ctpRS232PeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpRS232PeripheralIndex"))
if mibBuilder.loadTexts: ctpRS232PeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpRS232PeripheralStatusEntry.setDescription('An entry contains information about one peripheral attached to the Telepresence system via RS-232.')
ctpRS232PeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpRS232PeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpRS232PeripheralIndex.setDescription("This object specifies a unique number for a peripheral RS-232. If no peripheral has more than one RS-232, this object will have value '1'. Note that some Telepresence systems have no RS-232 port.")
ctpRS232PortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 5, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpRS232PortIndex.setStatus('current')
if mibBuilder.loadTexts: ctpRS232PortIndex.setDescription("The object specifies an index value that uniquely identifies the RS-232 port to which this entry is applicable. Its value is the same as RS-232-MIB's rs232PortIndex for the port. If RS-232-MIB is not supported by the agent, then this value will have value '0'.")
ctpRS232PeripheralConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("connected", 1), ("unknown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpRS232PeripheralConnStatus.setStatus('current')
if mibBuilder.loadTexts: ctpRS232PeripheralConnStatus.setDescription("This object specifies peripheral which is connected via RS232. When the object is 'connected(1)', peripheral connection via RS232 is working properly. When the object is 'unknown(2)', peripheral connection via RS232 is not working properly. It may due to device problem or connection problem.")
ctpPeripheralAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 6), )
if mibBuilder.loadTexts: ctpPeripheralAttributeTable.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralAttributeTable.setDescription("The table contains information about attributes for the peripherals which are connected to the system. Peripheral attribute may specify peripheral's component information, for example, an entry may specify lifetime of a lamp on a presentation device.")
ctpPeripheralAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralAttributeIndex"))
if mibBuilder.loadTexts: ctpPeripheralAttributeEntry.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralAttributeEntry.setDescription('An entry contains information about one peripheral attribute related to the peripheral specified by ctpPeripheralIndex.')
ctpPeripheralAttributeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpPeripheralAttributeIndex.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralAttributeIndex.setDescription("This object specifies a unique number for a peripheral attribute. If no peripheral has more than one attribute, this object will have value '1'.")
ctpPeripheralAttributeDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lampOperTime", 1), ("lampState", 2), ("powerSwitchState", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralAttributeDescr.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralAttributeDescr.setDescription('This object specifies description of a attribute. The supported attributes are lampOperTime(1) -- indicate the lamp operating time of a peripheral lampState(2) -- indicate the lamp state powerSwitchState(3) -- indicate the power on/off state of a peripheral Note that not all peripheral contains all the supported attributes. Agent reports whatever is available.')
ctpPeripheralAttributeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralAttributeValue.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralAttributeValue.setDescription('This object specifies value of the attribute corresponding to ctpPeripheralAttributeDescr. The possible value of the supported attributes is listed as the following: Attribute Unit SYNTAX ----------------------------------------------------------- lampOperTime hours Unsigned32(0..4294967295) lampState INTEGER { on(1), off(2), failure(3), unknown(4) } powerSwitchState INTEGER { on(1), off(2), unknown(3) }')
ctpUSBPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7), )
if mibBuilder.loadTexts: ctpUSBPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralStatusTable.setDescription('This table contains information about all the peripherals connected to the system via USB.')
ctpUSBPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpUSBPeripheralIndex"))
if mibBuilder.loadTexts: ctpUSBPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralStatusEntry.setDescription('An entry drescribes a peripheral connected to the Telepresence system through USB.')
ctpUSBPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpUSBPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralIndex.setDescription('This object indicates an arbitrary positive, integer-value that uniquely identifies the USB peripheral.')
ctpUSBPeripheralCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1, 2), CtpPeripheralCableCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpUSBPeripheralCableStatus.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralCableStatus.setDescription('This object indicates the status of the cable attaching the USB peripheral.')
ctpUSBPeripheralPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("self", 2), ("bus", 3), ("both", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpUSBPeripheralPowerStatus.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralPowerStatus.setDescription("This object indicates the source of power for the attached USB peripheral: 'unknown' - The source of power is unknown. 'self' - The USB peripheral is externally powered. 'bus' - The USB peripheral is powered by the USB bus. 'both' - The USB peripheral can be powered by both the USB bus or self")
ctpUSBPeripheralPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("host", 1), ("device", 2), ("hub", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpUSBPeripheralPortType.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralPortType.setDescription("This object indicates the type of device connected to the USB port: 'host' - no device os connected to the port 'device' - a usb device is connected to the port 'hub' - a usb hub is connected to the port")
ctpUSBPeripheralPortRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low", 1), ("full", 2), ("high", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpUSBPeripheralPortRate.setStatus('current')
if mibBuilder.loadTexts: ctpUSBPeripheralPortRate.setDescription("This object indicates the current operational rate of the USB peripheral: 'unknown' - The USB port rate is unknown 'low' - The USB port rate is at 1.5 Mbps. 'full' - The USB port rate is at 12 Mbps. 'high' - The USB port rate is at 480 Mbps.")
ctp802dot11PeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8), )
if mibBuilder.loadTexts: ctp802dot11PeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via 802dot11.')
ctp802dot11PeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralIndex"))
if mibBuilder.loadTexts: ctp802dot11PeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralStatusEntry.setDescription('An entry describes one Telepresence 802dot11 peripheral.')
ctp802dot11PeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctp802dot11PeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralIndex.setDescription('This object indicates an arbitrary positive, integer-value that uniquely identifies the IEEE 802.11 peripheral.')
ctp802dot11PeripheralIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctp802dot11PeripheralIfIndex.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralIfIndex.setDescription("This object indicates an index value that uniquely identifies the interface to which this entry is applicable. If this entry doesn't have corresponding ifIndex, then this value will have value '0'.")
ctp802dot11PeripheralAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctp802dot11PeripheralAddrType.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralAddrType.setDescription('This object indicates the type of address indicated by the corresponding instance of ctp802dot11PeripheralAddr.')
ctp802dot11PeripheralAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctp802dot11PeripheralAddr.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralAddr.setDescription('This object indicates the address of the attached peripheral in the format indicated by the corresponding instance of ctp802dot11PeripheralAddrType.')
ctp802dot11PeripheralLinkStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctp802dot11PeripheralLinkStrength.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralLinkStrength.setDescription('This object indicates the link strength of an IEEE 802.11 link for a peripheral. A return value of 0 indicates the link is not connected. A return value between 1 - 5 indicates the strength of the link, with 1 being the weakest and 5 being the strongest.')
ctp802dot11PeripheralLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 8, 1, 6), CtpPeripheralCableCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctp802dot11PeripheralLinkStatus.setStatus('current')
if mibBuilder.loadTexts: ctp802dot11PeripheralLinkStatus.setDescription('This object indicates the link status of the attached peripheral via IEEE 802.11 link.')
ctpDPPeripheralStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 9), )
if mibBuilder.loadTexts: ctpDPPeripheralStatusTable.setStatus('current')
if mibBuilder.loadTexts: ctpDPPeripheralStatusTable.setDescription('The table contains information about all peripherals connected to the system via DP.')
ctpDPPeripheralStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 9, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralIndex"), (0, "CISCO-TELEPRESENCE-MIB", "ctpDPPeripheralIndex"))
if mibBuilder.loadTexts: ctpDPPeripheralStatusEntry.setStatus('current')
if mibBuilder.loadTexts: ctpDPPeripheralStatusEntry.setDescription('An entry contains information about one Telepresence DP peripheral.')
ctpDPPeripheralIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 9, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ctpDPPeripheralIndex.setStatus('current')
if mibBuilder.loadTexts: ctpDPPeripheralIndex.setDescription("This object indicates a unique number for a peripheral DP. If no peripheral has more than one DP, this object will have value '1'.")
ctpDPPeripheralCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 9, 1, 2), CtpPeripheralCableCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpDPPeripheralCableStatus.setStatus('current')
if mibBuilder.loadTexts: ctpDPPeripheralCableStatus.setDescription("This object indicates the cable status of a peripheral which is attached to the system via Display Port interface. This object returns 'loose' if system detects cable is 'unplugged' but power is 'on'.")
ctpDPPeripheralPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 2, 9, 1, 3), CtpPeripheralPowerCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpDPPeripheralPowerStatus.setStatus('current')
if mibBuilder.loadTexts: ctpDPPeripheralPowerStatus.setDescription("This object indicates the power status of a peripheral which is attached to the system via Display Port interface. This object returns 'unknown' if system detects cable is 'unplugged'.")
ctpPeripheralErrorHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpPeripheralErrorHistTableSize.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorHistTableSize.setDescription("This object specifies the maximum number of entries that the ctpPeripheralErrorHistTable can contain. When the capacity of the ctpPeripheralErrorHistTable has reached the value specified by this object, then the agent deletes the oldest entity in order to accommodate the new entry. A value of '0' prevents any history from being retained. Some agents restrict the value of this object to be less than 500.")
ctpPeripheralErrorHistLastIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorHistLastIndex.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorHistLastIndex.setDescription('This object specifies the value of the ctpPeripheralErrorHistIndex object corresponding to the last entry added to the table by the agent. If the management application uses the notifications defined by this module, then it can poll this object to determine whether it has missed a notification sent by the agent.')
ctpPeripheralErrorHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3), )
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryTable.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryTable.setDescription('This table contains a history of the detected peripheral status changes. After a management agent restart, when sysUpTime is reset to zero, this table records all notifications until such time as it becomes full. Thereafter, it remains full by retaining the number of most recent notifications specified in ctpPeripheralErrorHistTableSize.')
ctpPeripheralErrorHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorHistoryIndex"))
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryEntry.setDescription('An entry contains information about a Telepresence peripheral status changes.')
ctpPeripheralErrorHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorHistoryIndex.setDescription("A unique non-zero integer value that identifies a CtpPeripheralErrorHistoryEntry in the table. The value of this index starts from '1' and monotonically increases for each peripheral error known to the agent. If the value of this object is '4294967295', the agent will use '1' as the value of the next detected peripheral status change.")
ctpPeripheralErrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorIndex.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorIndex.setDescription('The object specifies the value of ctpPeripheralIndex of a peripheral which is in error state. This object is deprecated in favor of ctpPeripheralErrorDeviceCategory and ctpPeripheralErrorDeviceNumber.')
ctpPeripheralErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 3), CtpPeripheralStatusCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorStatus.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorStatus.setDescription('This object specifies the peripheral status after its status changed.')
ctpPeripheralErrorTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorTimeStamp.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorTimeStamp.setDescription('This object specifies the value of the sysUpTime object at the time the notification was generated.')
ctpPeripheralErrorDeviceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 5), CtpPeripheralDeviceCategoryCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorDeviceCategory.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorDeviceCategory.setDescription('The object specifies peripheral device category after its status changed.')
ctpPeripheralErrorDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpPeripheralErrorDeviceNumber.setStatus('current')
if mibBuilder.loadTexts: ctpPeripheralErrorDeviceNumber.setDescription('The object specifies peripheral device number after its status changed. Device number is unique within the same peripheral device category.')
ctpSysUserAuthFailHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 500)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctpSysUserAuthFailHistTableSize.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailHistTableSize.setDescription("This object specifies the number of entries that the ctpSysUserAuthFailHistTable can contain. When the capacity of the ctpSysUserAuthFailHistTable has reached the value specified by this object, then the agent deletes the oldest entity in order to accommodate the new entry. A value of '0' prevents any history from being retained. Some agents restrict the value of this object to be less than 500.")
ctpSysUserAuthFailHistLastIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailHistLastIndex.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailHistLastIndex.setDescription('This object specifies the value of the ctpSysUserAuthFailHistIndex object corresponding to the last entry added to the table by the agent. If the management application uses the notifications defined by this module, then it can poll this object to determine whether it has missed a notification sent by the agent.')
ctpSysUserAuthFailHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6), )
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryTable.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryTable.setDescription('This table contains a history of detected user authentication failures. After a management agent restart, when sysUpTime is reset to zero, this table records all user authentication failure notifications until such time as it becomes full. Thereafter, it remains full by retaining the number of most recent notifications specified in ctpSysUserAuthFailHistTableSize.')
ctpSysUserAuthFailHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1), ).setIndexNames((0, "CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailHistoryIndex"))
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryEntry.setDescription('An entry contains information about a Telepresence system user authentication failure.')
ctpSysUserAuthFailHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryIndex.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailHistoryIndex.setDescription("A unique non-zero integer value that identifies a CtpSysUserAuthFailHistoryEntry in the table. The value of this index starts from '1' and monotonically increases for each system authentication failure event known to the agent. If the value of this object is '4294967295', the agent will use '1' as the value of the next user authentication failure event.")
ctpSysUserAuthFailSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailSourceAddrType.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailSourceAddrType.setDescription('The object specifies the type of address contained in the corresponding instance of ctpSysUserAuthFailSourceAddr.')
ctpSysUserAuthFailSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailSourceAddr.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailSourceAddr.setDescription('The object specifies the source address when the user authentication failure occurred, in the format given by the corresponding instance of ctpSysUserAuthFailSourceAddrType.')
ctpSysUserAuthFailSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailSourcePort.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailSourcePort.setDescription('The object specifies the source TCP/UDP port number when a user authentication failure occurred.')
ctpSysUserAuthFailUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailUserName.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailUserName.setDescription('The object specifies the user name which was used to gain system access when authentication failure occurred.')
ctpSysUserAuthFailAccessProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 6), CtpSystemAccessProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailAccessProtocol.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailAccessProtocol.setDescription('This object specifies the access protocol when a user authentication failure occurred.')
ctpSysUserAuthFailTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 643, 1, 3, 6, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctpSysUserAuthFailTimeStamp.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailTimeStamp.setDescription('This object specifies the value of the sysUpTime object at the time the notification was generated.')
ctpPeripheralErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 643, 0, 1)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorStatus"))
if mibBuilder.loadTexts: ctpPeripheralErrorNotification.setStatus('deprecated')
if mibBuilder.loadTexts: ctpPeripheralErrorNotification.setDescription('This notification is sent when a peripheral error is detected. This notification is deprecated in favor of ctpPeriStatusChangeNotification. ctpPeripheralErrorNotification object is superseded by ctpPeriStatusChangeNotification.')
ctpSysUserAuthFailNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 643, 0, 2)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourcePort"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailUserName"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailAccessProtocol"))
if mibBuilder.loadTexts: ctpSysUserAuthFailNotification.setStatus('current')
if mibBuilder.loadTexts: ctpSysUserAuthFailNotification.setDescription('This notification is sent when a user authentication failure via a Telepresence supported access protocol is detected.')
ctpPeriStatusChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 643, 0, 3)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorDeviceCategory"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorDeviceNumber"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorStatus"))
if mibBuilder.loadTexts: ctpPeriStatusChangeNotification.setStatus('current')
if mibBuilder.loadTexts: ctpPeriStatusChangeNotification.setDescription('This notification is sent when a peripheral status is changed.')
ciscoTelepresenceCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1))
ciscoTelepresenceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2))
ciscoTelepresenceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 1)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceCompliance = ciscoTelepresenceCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTelepresenceCompliance.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTelepresenceComplianceR01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 2)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpRS232PeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceComplianceR01 = ciscoTelepresenceComplianceR01.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTelepresenceComplianceR01.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTelepresenceComplianceR02 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 3)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpRS232PeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceComplianceR02 = ciscoTelepresenceComplianceR02.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTelepresenceComplianceR02.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTelepresenceComplianceR03 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 4)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroupR02"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpRS232PeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceComplianceR03 = ciscoTelepresenceComplianceR03.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTelepresenceComplianceR03.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTelepresenceComplianceR04 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 5)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR02"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroupR02"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpRS232PeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceComplianceR04 = ciscoTelepresenceComplianceR04.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTelepresenceComplianceR04.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTelepresenceComplianceR05 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 1, 6)).setObjects(("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpConfigurationGroupR02"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralStatusGroupR02"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpEventHistoryGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpNotificationGroupR01"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpDPPeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpRS232PeripheralStatusGroup"), ("CISCO-TELEPRESENCE-MIB", "ciscoTpPeripheralAttributeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTelepresenceComplianceR05 = ciscoTelepresenceComplianceR05.setStatus('current')
if mibBuilder.loadTexts: ciscoTelepresenceComplianceR05.setDescription('The compliance statement for entities which implement the Cisco Telepresence MIB.')
ciscoTpConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 1)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorNotifyEnable"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailNotifyEnable"), ("CISCO-TELEPRESENCE-MIB", "ctpSystemReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpConfigurationGroup = ciscoTpConfigurationGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTpConfigurationGroup.setDescription('A collection of objects providing the notification configuration and system reset. ciscoTpConfigurationGroup object is superseded by ciscoTpConfigurationGroupR01.')
ciscoTpPeripheralStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 2)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDescription"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralIfIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralPowerStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpDVIPeripheralCableStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpPeripheralStatusGroup = ciscoTpPeripheralStatusGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTpPeripheralStatusGroup.setDescription('A collection of objects providing the Telepresence peripheral information. ciscoTpPeripheralStatusGroup object is superseded by ciscoTpPeripheralStatusGroupR01.')
ciscoTpEventHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 3)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorHistTableSize"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorHistLastIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorTimeStamp"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailHistTableSize"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailHistLastIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourcePort"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailUserName"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailAccessProtocol"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpEventHistoryGroup = ciscoTpEventHistoryGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTpEventHistoryGroup.setDescription('A collection of managed objects providing notification event history information. ciscoTpEventHistoryGroup object is superseded by ciscoTpEventHistoryGroupR01.')
ciscoTpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 4)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorNotification"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpNotificationGroup = ciscoTpNotificationGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTpNotificationGroup.setDescription('A collection of Telepresence system notifications. ciscoTpNotificationGroup object is superseded by ciscoTpNotificationGroupR01.')
ciscoTpRS232PeripheralStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 5)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpRS232PortIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpRS232PeripheralConnStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpRS232PeripheralStatusGroup = ciscoTpRS232PeripheralStatusGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTpRS232PeripheralStatusGroup.setDescription('A collection of objects providing the information about Telepresence peripheral which is connected via RS232.')
ciscoTpPeripheralAttributeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 6)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralAttributeDescr"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralAttributeValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpPeripheralAttributeGroup = ciscoTpPeripheralAttributeGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTpPeripheralAttributeGroup.setDescription('A collection of managed objects providing peripheral attribute information.')
ciscoTpPeripheralStatusGroupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 7)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDescription"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDeviceCategory"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDeviceNumber"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralIfIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralPowerStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpDVIPeripheralCableStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpPeripheralStatusGroupR01 = ciscoTpPeripheralStatusGroupR01.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoTpPeripheralStatusGroupR01.setDescription('A collection of objects providing the Telepresence peripheral information. ciscoTpPeripheralStatusGroupR01 object is superseded by ciscoTpPeripheralStatusGroupR02.')
ciscoTpEventHistoryGroupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 8)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorHistTableSize"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorHistLastIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorTimeStamp"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorDeviceCategory"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralErrorDeviceNumber"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailHistTableSize"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailHistLastIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourceAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailSourcePort"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailUserName"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailAccessProtocol"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpEventHistoryGroupR01 = ciscoTpEventHistoryGroupR01.setStatus('current')
if mibBuilder.loadTexts: ciscoTpEventHistoryGroupR01.setDescription('A collection of managed objects providing notification event history information.')
ciscoTpNotificationGroupR01 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 9)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeriStatusChangeNotification"), ("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpNotificationGroupR01 = ciscoTpNotificationGroupR01.setStatus('current')
if mibBuilder.loadTexts: ciscoTpNotificationGroupR01.setDescription('A collection of Telepresence system notifications.')
ciscoTpConfigurationGroupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 10)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpSysUserAuthFailNotifyEnable"), ("CISCO-TELEPRESENCE-MIB", "ctpSystemReset"), ("CISCO-TELEPRESENCE-MIB", "ctpPeriStatusChangeNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpConfigurationGroupR01 = ciscoTpConfigurationGroupR01.setStatus('current')
if mibBuilder.loadTexts: ciscoTpConfigurationGroupR01.setDescription('A collection of objects providing the notification configuration and system reset.')
ciscoTpPeripheralStatusGroupR02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 11)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDescription"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDeviceCategory"), ("CISCO-TELEPRESENCE-MIB", "ctpPeripheralDeviceNumber"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralIfIndex"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralAddr"), ("CISCO-TELEPRESENCE-MIB", "ctpEtherPeripheralStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpHDMIPeripheralPowerStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpDVIPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpUSBPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpUSBPeripheralPowerStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpUSBPeripheralPortType"), ("CISCO-TELEPRESENCE-MIB", "ctpUSBPeripheralPortRate"), ("CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralIfIndex"), ("CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralAddrType"), ("CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralAddr"), ("CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralLinkStrength"), ("CISCO-TELEPRESENCE-MIB", "ctp802dot11PeripheralLinkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpPeripheralStatusGroupR02 = ciscoTpPeripheralStatusGroupR02.setStatus('current')
if mibBuilder.loadTexts: ciscoTpPeripheralStatusGroupR02.setDescription('A collection of objects providing the Telepresence peripheral information.')
ciscoTpConfigurationGroupR02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 12)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpVlanId"), ("CISCO-TELEPRESENCE-MIB", "ctpDefaultGateway"), ("CISCO-TELEPRESENCE-MIB", "ctpDefaultGatewayAddrType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpConfigurationGroupR02 = ciscoTpConfigurationGroupR02.setStatus('current')
if mibBuilder.loadTexts: ciscoTpConfigurationGroupR02.setDescription('A collection of objects providing network configurations.')
ciscoTpDPPeripheralStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 643, 2, 2, 13)).setObjects(("CISCO-TELEPRESENCE-MIB", "ctpDPPeripheralCableStatus"), ("CISCO-TELEPRESENCE-MIB", "ctpDPPeripheralPowerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoTpDPPeripheralStatusGroup = ciscoTpDPPeripheralStatusGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoTpDPPeripheralStatusGroup.setDescription('A collection of objects providing the information about Telepresence peripheral which is connected via Display Port.')
mibBuilder.exportSymbols("CISCO-TELEPRESENCE-MIB", ciscoTpRS232PeripheralStatusGroup=ciscoTpRS232PeripheralStatusGroup, ctpSystemReset=ctpSystemReset, CtpPeripheralCableCode=CtpPeripheralCableCode, CtpSystemResetMode=CtpSystemResetMode, ctpDPPeripheralCableStatus=ctpDPPeripheralCableStatus, ctpDPPeripheralPowerStatus=ctpDPPeripheralPowerStatus, ctpPeriStatusChangeNotification=ctpPeriStatusChangeNotification, ctpRS232PeripheralIndex=ctpRS232PeripheralIndex, ctpDPPeripheralStatusTable=ctpDPPeripheralStatusTable, ctpPeripheralIndex=ctpPeripheralIndex, ctpPeripheralErrorNotifyEnable=ctpPeripheralErrorNotifyEnable, ciscoTelepresenceMIBGroups=ciscoTelepresenceMIBGroups, ctpPeripheralErrorIndex=ctpPeripheralErrorIndex, ctpRS232PeripheralStatusTable=ctpRS232PeripheralStatusTable, ctpUSBPeripheralPortRate=ctpUSBPeripheralPortRate, ctpPeripheralErrorNotification=ctpPeripheralErrorNotification, ctpDVIPeripheralCableStatus=ctpDVIPeripheralCableStatus, ctpPeripheralStatusTable=ctpPeripheralStatusTable, ctp802dot11PeripheralIfIndex=ctp802dot11PeripheralIfIndex, ctp802dot11PeripheralLinkStrength=ctp802dot11PeripheralLinkStrength, ctpPeripheralStatusObjects=ctpPeripheralStatusObjects, ctpHDMIPeripheralCableStatus=ctpHDMIPeripheralCableStatus, ctpHDMIPeripheralStatusEntry=ctpHDMIPeripheralStatusEntry, ctpHDMIPeripheralStatusTable=ctpHDMIPeripheralStatusTable, ctpPeripheralAttributeTable=ctpPeripheralAttributeTable, ctpSysUserAuthFailHistoryEntry=ctpSysUserAuthFailHistoryEntry, ciscoTpPeripheralAttributeGroup=ciscoTpPeripheralAttributeGroup, ctpEtherPeripheralIfIndex=ctpEtherPeripheralIfIndex, ctpPeripheralErrorDeviceNumber=ctpPeripheralErrorDeviceNumber, ctpEtherPeripheralStatusTable=ctpEtherPeripheralStatusTable, ctpUSBPeripheralPortType=ctpUSBPeripheralPortType, ciscoTelepresenceComplianceR02=ciscoTelepresenceComplianceR02, ctpRS232PeripheralConnStatus=ctpRS232PeripheralConnStatus, ctpSysUserAuthFailNotification=ctpSysUserAuthFailNotification, ctpUSBPeripheralStatusTable=ctpUSBPeripheralStatusTable, ctpPeripheralStatusEntry=ctpPeripheralStatusEntry, ciscoTelepresenceCompliances=ciscoTelepresenceCompliances, ctpPeripheralAttributeValue=ctpPeripheralAttributeValue, ctpDPPeripheralIndex=ctpDPPeripheralIndex, ctpUSBPeripheralStatusEntry=ctpUSBPeripheralStatusEntry, ctpDefaultGateway=ctpDefaultGateway, ctp802dot11PeripheralStatusTable=ctp802dot11PeripheralStatusTable, ctpEtherPeripheralStatusEntry=ctpEtherPeripheralStatusEntry, ctpSysUserAuthFailHistoryIndex=ctpSysUserAuthFailHistoryIndex, ciscoTpNotificationGroup=ciscoTpNotificationGroup, ctpPeripheralAttributeEntry=ctpPeripheralAttributeEntry, ctpRS232PeripheralStatusEntry=ctpRS232PeripheralStatusEntry, ctpPeripheralErrorDeviceCategory=ctpPeripheralErrorDeviceCategory, ctpSysUserAuthFailNotifyEnable=ctpSysUserAuthFailNotifyEnable, ciscoTpDPPeripheralStatusGroup=ciscoTpDPPeripheralStatusGroup, ctpSysUserAuthFailAccessProtocol=ctpSysUserAuthFailAccessProtocol, ctpDefaultGatewayAddrType=ctpDefaultGatewayAddrType, ciscoTelepresenceComplianceR01=ciscoTelepresenceComplianceR01, ctpEventHistory=ctpEventHistory, ctpDVIPeripheralStatusEntry=ctpDVIPeripheralStatusEntry, ctpSysUserAuthFailTimeStamp=ctpSysUserAuthFailTimeStamp, ciscoTelepresenceCompliance=ciscoTelepresenceCompliance, ctp802dot11PeripheralLinkStatus=ctp802dot11PeripheralLinkStatus, ciscoTpConfigurationGroupR01=ciscoTpConfigurationGroupR01, ciscoTpPeripheralStatusGroup=ciscoTpPeripheralStatusGroup, ctpPeripheralAttributeIndex=ctpPeripheralAttributeIndex, ciscoTelepresenceMIB=ciscoTelepresenceMIB, ctpDVIPeripheralIndex=ctpDVIPeripheralIndex, ctpEtherPeripheralIndex=ctpEtherPeripheralIndex, ctpHDMIPeripheralPowerStatus=ctpHDMIPeripheralPowerStatus, ctpPeripheralErrorHistoryEntry=ctpPeripheralErrorHistoryEntry, ctpSysUserAuthFailHistoryTable=ctpSysUserAuthFailHistoryTable, ctpRS232PortIndex=ctpRS232PortIndex, ctpSysUserAuthFailHistTableSize=ctpSysUserAuthFailHistTableSize, ctpVlanId=ctpVlanId, ctpPeripheralStatus=ctpPeripheralStatus, ciscoTelepresenceComplianceR05=ciscoTelepresenceComplianceR05, ciscoTelepresenceComplianceR04=ciscoTelepresenceComplianceR04, ctpUSBPeripheralIndex=ctpUSBPeripheralIndex, ciscoTpConfigurationGroupR02=ciscoTpConfigurationGroupR02, ciscoTelepresenceMIBNotifs=ciscoTelepresenceMIBNotifs, ctpDVIPeripheralStatusTable=ctpDVIPeripheralStatusTable, ctpPeripheralErrorHistoryTable=ctpPeripheralErrorHistoryTable, ctpPeripheralErrorStatus=ctpPeripheralErrorStatus, ciscoTpEventHistoryGroupR01=ciscoTpEventHistoryGroupR01, ctpPeripheralErrorHistTableSize=ctpPeripheralErrorHistTableSize, CtpPeripheralStatusCode=CtpPeripheralStatusCode, ctpEtherPeripheralStatus=ctpEtherPeripheralStatus, ciscoTpNotificationGroupR01=ciscoTpNotificationGroupR01, CtpPeripheralDeviceCategoryCode=CtpPeripheralDeviceCategoryCode, ciscoTpPeripheralStatusGroupR01=ciscoTpPeripheralStatusGroupR01, CtpSystemAccessProtocol=CtpSystemAccessProtocol, ctpSysUserAuthFailSourceAddrType=ctpSysUserAuthFailSourceAddrType, ctpObjects=ctpObjects, ctpPeripheralDeviceCategory=ctpPeripheralDeviceCategory, ctpPeripheralErrorHistoryIndex=ctpPeripheralErrorHistoryIndex, ctpPeripheralErrorTimeStamp=ctpPeripheralErrorTimeStamp, ctpSysUserAuthFailSourceAddr=ctpSysUserAuthFailSourceAddr, ctpUSBPeripheralCableStatus=ctpUSBPeripheralCableStatus, ctp802dot11PeripheralIndex=ctp802dot11PeripheralIndex, ctpHDMIPeripheralIndex=ctpHDMIPeripheralIndex, ciscoTpEventHistoryGroup=ciscoTpEventHistoryGroup, ctpPeripheralDeviceNumber=ctpPeripheralDeviceNumber, ciscoTpPeripheralStatusGroupR02=ciscoTpPeripheralStatusGroupR02, ciscoTpConfigurationGroup=ciscoTpConfigurationGroup, ctpPeriStatusChangeNotifyEnable=ctpPeriStatusChangeNotifyEnable, PYSNMP_MODULE_ID=ciscoTelepresenceMIB, ctpSysUserAuthFailHistLastIndex=ctpSysUserAuthFailHistLastIndex, ciscoTelepresenceComplianceR03=ciscoTelepresenceComplianceR03, ctp802dot11PeripheralStatusEntry=ctp802dot11PeripheralStatusEntry, ctpUSBPeripheralPowerStatus=ctpUSBPeripheralPowerStatus, ciscoTelepresenceMIBConform=ciscoTelepresenceMIBConform, ciscoTelepresenceMIBObjects=ciscoTelepresenceMIBObjects, ctpSysUserAuthFailSourcePort=ctpSysUserAuthFailSourcePort, ctp802dot11PeripheralAddrType=ctp802dot11PeripheralAddrType, CtpPeripheralPowerCode=CtpPeripheralPowerCode, ctpEtherPeripheralAddrType=ctpEtherPeripheralAddrType, ctpPeripheralErrorHistLastIndex=ctpPeripheralErrorHistLastIndex, ctpDPPeripheralStatusEntry=ctpDPPeripheralStatusEntry, ctpSysUserAuthFailUserName=ctpSysUserAuthFailUserName, ctpEtherPeripheralAddr=ctpEtherPeripheralAddr, ctpPeripheralDescription=ctpPeripheralDescription, ctp802dot11PeripheralAddr=ctp802dot11PeripheralAddr, ctpPeripheralAttributeDescr=ctpPeripheralAttributeDescr)
