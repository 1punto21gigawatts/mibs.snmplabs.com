#
# PySNMP MIB module HUAWEI-VO-DIGITAL-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VO-DIGITAL-IF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:49:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
voice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "voice")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Counter64, IpAddress, Gauge32, NotificationType, TimeTicks, Bits, Unsigned32, ObjectIdentity, MibIdentifier, Counter32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "IpAddress", "Gauge32", "NotificationType", "TimeTicks", "Bits", "Unsigned32", "ObjectIdentity", "MibIdentifier", "Counter32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hwVoiceDigitalInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4))
hwVoiceDigitalInterfaceMIB.setRevisions(('2004-04-08 13:45',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setLastUpdated('200410200000Z')
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setOrganization('Huawei-3COM Technologies Co., Ltd.')
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setContactInfo('PLAT Team Huawei 3Com Technologies co.,Ltd. Shang-Di Information Industry Base, Hai-Dian District Beijing P.R. China http://www.huawei-3com.com Zip:100085')
if mibBuilder.loadTexts: hwVoiceDigitalInterfaceMIB.setDescription(' ')
hwVoDigitalIfCommonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1))
hwVoDigitalIfCommonCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgTable.setDescription('The voice digital interface common configuration table contains information about configuration parameters for digital voice interface.')
hwVoDigitalIfCommonCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCommonCfgEntry.setDescription('An entry in the voice digital interface common configuration table. The entry is automatically created when a digital voice interface hardware is found.')
hwVoDigitalIfCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCfgPortNumber.setDescription('Index of voice digital interface common config table. It identify the number of the voice port.')
hwVoDigitalIfCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCfgGroupNumber.setDescription('Index of voice digital interface common config table. It identify the number of the ds0 or pri group.')
hwVoDigitalIfCfgBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e1vi", 1), ("t1vi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgBoardType.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCfgBoardType.setDescription('This object expresses the type of digital voice interface.')
hwVoDigitalIfCfgSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("r2", 1), ("dss1", 2), ("em", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgSignalType.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCfgSignalType.setDescription('This object expresses the signal type of ds0 or pri group.')
hwVoDigitalIfCfgTimeSlotsConfigurable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(24, 24), ValueSizeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfCfgTimeSlotsConfigurable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfCfgTimeSlotsConfigurable.setDescription("This object expresses whether the timeslot is available. '1' states the timeslot is available for the E1VI or T1VI, '0' states the timeslot is not available. For T1VI, the length is 24. For E1VI, the length is 32.")
hwVoDigitalIfEMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2))
hwVoDigitalIfEMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTable.setDescription('The voice digital interface e&m configuration table contains information about configuration parameters for digital e&m voice interface.')
hwVoDigitalIfEMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgEntry.setDescription('An entry in the voice digital interface e&m configuration table. The entry is automatically created when a digital voice interface is configed for digital e&m signal.')
hwVoDigitalIfEMCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgPortNumber.setDescription('Index of voice digital interface e&m config table. It identify the number of the voice port.')
hwVoDigitalIfEMCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgGroupNumber.setDescription('Index of voice digital interface e&m config table. It identify the number of the ds0 group.')
hwVoDigitalIfEMCfgTimeoutInterDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutInterDigits.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutInterDigits.setDescription('This object states the longest time to wait between two input digit from caller side. The default value is 10 seconds.')
hwVoDigitalIfEMCfgTimeoutRinging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 600), ValueRangeConstraint(65535, 65535), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutRinging.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutRinging.setDescription('This object expresses the ring timeout of the digital e&m interface. The value of 65535 indicates the timer is approach infinity. The default value of this object is 60 seconds.')
hwVoDigitalIfEMCfgTimeoutWaitDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 600), ValueRangeConstraint(65535, 65535), )).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutWaitDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMCfgTimeoutWaitDigit.setDescription('This object expresses the wait digit timeout of the digital e&m interface. The value of 65535 indicates the timer is approach infinity. The default value of this object is 5 seconds.')
hwVoDigitalIfEMABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2), )
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgTable.setDescription('The voice digital interface e&m abcd configuration table contains information about abcd bits configuration parameters for digital e&m voice interface.')
hwVoDigitalIfEMABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMABCDCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMABCDCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgEntry.setDescription('An entry in the voice digital interface e&m abcd configuration table. The entry is automatically created when a digital voice interface is configed for digital e&m signal.')
hwVoDigitalIfEMABCDCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgPortNumber.setDescription('Index of voice digital interface e&m abcd config table. It identify the number of the voice port.')
hwVoDigitalIfEMABCDCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDCfgGroupNumber.setDescription('Index of voice digital interface e&m abcd config table. It identify the number of the ds0 group.')
hwVoDigitalIfEMABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxIdle.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxIdle.setDescription("This object expresses the a b c d bits for receiving idle signal. The default value is '1101'.")
hwVoDigitalIfEMABCDRxSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxSeize.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDRxSeize.setDescription("This object expresses the a b c d bits for receiving seize signal. The default value is '0101'.")
hwVoDigitalIfEMABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxIdle.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxIdle.setDescription("This object expresses the a b c d bits for sending idle signal. The default value is '1101'.")
hwVoDigitalIfEMABCDTxSeize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxSeize.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMABCDTxSeize.setDescription("This object expresses the a b c d bits for sending seize signal. The default value is '0101'.")
hwVoDigitalIfEMTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4), )
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerTable.setDescription('The voice digital interface e&m timer table contains information about timer parameters for digital e&m voice interface.')
hwVoDigitalIfEMTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMTimerPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfEMTimerGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerEntry.setDescription('An entry in the voice digital interface e&m timer table. The entry is automatically created when a digital voice interface is configed for digital e&m signal.')
hwVoDigitalIfEMTimerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerPortNumber.setDescription('Index of voice digital interface e&m timer config table. It identify the number of the voice port.')
hwVoDigitalIfEMTimerGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerGroupNumber.setDescription('Index of voice digital interface e&m timer config table. It identify the number of the ds0 group.')
hwVoDigitalIfEMTimerCallInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 2000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerCallInterval.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerCallInterval.setDescription('This object expresses the dureation of call clearing. The default value is 200 milliseconds.')
hwVoDigitalIfEMTimerSendWink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerSendWink.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerSendWink.setDescription('This object expresses the max time between receiving seizure signal and sending wink signal. The default value is 500 milliseconds.')
hwVoDigitalIfEMTimerWinkRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkRising.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkRising.setDescription('This object expresses the max time between sending seizure signal and receiving wink signal. The default value is 1000 milliseconds.')
hwVoDigitalIfEMTimerWinkHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 3000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkHold.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerWinkHold.setDescription('This object expresses the max duration for sending wink signal. The default value is 500 milliseconds.')
hwVoDigitalIfEMTimerDialoutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 5000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDialoutDelay.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDialoutDelay.setDescription('This object expresses max time sending called digits. The default value is 300 milliseconds.')
hwVoDigitalIfEMTimerRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerRising.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerRising.setDescription('This object expresses the wait duration between receiveing seizure signal and sending delay signal. The default value is 300 milliseconds.')
hwVoDigitalIfEMTimerHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerHold.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerHold.setDescription('This object expresses the max time sending delay signal. The default value is 400 milliseconds.')
hwVoDigitalIfEMTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmf.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmf.setDescription('This object expresses outgoing dtmf digit duration of the digital e&m interface. The default value is 120 milliseconds')
hwVoDigitalIfEMTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 2, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmfInterval.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfEMTimerDtmfInterval.setDescription('This object expresses outgoing dtmf inter-digit duration of the digital e&m interface. The default value is 120 milliseconds')
hwVoDigitalIfR2Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3))
hwVoDigitalIfR2CfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1), )
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgTable.setDescription('The voice digital interface r2 configuration table contains information about configuration parameters for digital r2 voice interface.')
hwVoDigitalIfR2CfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2CfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2CfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgEntry.setDescription('An entry in the voice digital interface r2 configuration table. The entry is automatically created when a digital voice interface is configed for digital r2 signal.')
hwVoDigitalIfR2CfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPortNumber.setDescription('Index of voice digital interface r2 config table. It identify the number of the voice port.')
hwVoDigitalIfR2CfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupNumber.setDescription('Index of voice digital interface r2 config table. It identify the number of the ds0 group.')
hwVoDigitalIfR2CfgAniSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniSwitch.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniSwitch.setDescription('This object expresses the ANI funtion is enable or disable. The default value is disable.')
hwVoDigitalIfR2CallerDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CallerDigits.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2CallerDigits.setDescription('This object expresses how many digits will be collected befor sending A6. The default value of this object is 1.')
hwVoDigitalIfR2DebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2DebounceTime.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2DebounceTime.setDescription('This object expresses the minimus duration the line signal to persist. The default value of this object is 40.')
hwVoDigitalIfR2Ka = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2Ka.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2Ka.setDescription('This object expresses the code of KA signal. The default value is 1.')
hwVoDigitalIfR2Kd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2Kd.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2Kd.setDescription('This object expresses the code of KD signal. The default value is 3.')
hwVoDigitalIfR2SeizureAckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2SeizureAckTime.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2SeizureAckTime.setDescription('This object expresses the longgest time to wait the seizure acknowldge signal. The default value is 1000 milliseconds.')
hwVoDigitalIfR2SelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("max", 1), ("maxpoll", 2), ("min", 3), ("minpoll", 4))).clone('min')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2SelectMode.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2SelectMode.setDescription('This object expresses the trunk mode to be selected. max set select trunk mode to max-mode maxpoll set select trunk mode to max-poll-mode min set select trunk mode to min-mode minpoll set select trunk mode to min-poll-mode The default value is min.')
hwVoDigitalIfR2TimeoutKb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKb.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKb.setDescription('This object expresses the maxinum time to wait kb signal. The default value of this object is 5000 milliseconds.')
hwVoDigitalIfR2TimeoutKd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKd.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutKd.setDescription('This object expresses the maxinum time to wait kd signal. The default value of this object is 5000 milliseconds.')
hwVoDigitalIfR2TimeoutNextNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 50000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutNextNumber.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutNextNumber.setDescription('This object expresses the maxinum time to wait next number. The default value of this object is 5000 milliseconds.')
hwVoDigitalIfR2TimeoutReleaseApprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 3000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutReleaseApprove.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutReleaseApprove.setDescription('This object expresses the maxinum time to wait release approve. The default value of this object is 1000 milliseconds.')
hwVoDigitalIfR2TimeoutRing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 240000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutRing.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutRing.setDescription('This object expresses the maxinum time to wait the end of ring. The default value is 30000 milliseconds.')
hwVoDigitalIfR2TimeoutSendAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 1000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutSendAnswer.setStatus('deprecated')
if mibBuilder.loadTexts: hwVoDigitalIfR2TimeoutSendAnswer.setDescription('This object expresses the maxinum time to wait Answer signal. The default value is 500 milliseconds.')
hwVoDigitalIfR2CfgBillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgBillingCategory.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgBillingCategory.setDescription('This object expresses the value of signal BillingCategory. The default value is 2.')
hwVoDigitalIfR2CfgCallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCallingCategory.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCallingCategory.setDescription('This object expresses the value of signal CallingCategory. The default value is 1.')
hwVoDigitalIfR2CfgCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCongestion.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCongestion.setDescription('This object expresses the value of signal Congestion. The default value is 4.')
hwVoDigitalIfR2CfgDemandRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDemandRefused.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDemandRefused.setDescription('This object expresses the value of signal DemandRefused. The default value is 12.')
hwVoDigitalIfR2CfgDigitEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDigitEnd.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDigitEnd.setDescription('This object expresses the value of signal DigitEnd. The default value is 15.')
hwVoDigitalIfR2CfgNullnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgNullnum.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgNullnum.setDescription('This object expresses the value of signal Nullnum. The default value is 5.')
hwVoDigitalIfR2CfgReqBillingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqBillingCategory.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqBillingCategory.setDescription('This object expresses the value of signal requesting BillingCategory. The default value is 16.')
hwVoDigitalIfR2CfgReqCallingCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingCategory.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingCategory.setDescription('This object expresses the value of signal requesting CallingCategory. The default value is 5.')
hwVoDigitalIfR2CfgReqCurrentdigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCurrentdigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCurrentdigit.setDescription('This object expresses the value of signal requesting Currentdigit. The default value is 16.')
hwVoDigitalIfR2CfgReqFirstCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstCallingnum.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstCallingnum.setDescription('This object expresses the value of signal requesting FirstCallingnum. The default value is 5.')
hwVoDigitalIfR2CfgReqFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqFirstDigit.setDescription('This object expresses the value of signal requesting FirstDigit. The default value is 16.')
hwVoDigitalIfR2CfgReqNextCallednum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallednum.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallednum.setDescription('This object expresses the value of signal requesting NextCallednum. The default value is 1.')
hwVoDigitalIfR2CfgReqNextCallingnum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallingnum.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqNextCallingnum.setDescription('This object expresses the value of signal requesting NextCallingnum. The default value is 5.')
hwVoDigitalIfR2CfgReqLastFirstDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastFirstDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastFirstDigit.setDescription('This object expresses the value of signal requesting LastFirstDigit. The default value is 2.')
hwVoDigitalIfR2CfgReqLastSecondDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastSecondDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastSecondDigit.setDescription('This object expresses the value of signal requesting LastSecondDigit. The default value is 7.')
hwVoDigitalIfR2CfgReqLastThirdDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastThirdDigit.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqLastThirdDigit.setDescription('This object expresses the value of signal requesting LastFirstDigit. The default value is 8.')
hwVoDigitalIfR2CfgReqSwitchGroupB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqSwitchGroupB.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqSwitchGroupB.setDescription('This object expresses the value of signal requesting SwitchGroupB. The default value is 3.')
hwVoDigitalIfR2CfgSubscriberIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberIdle.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberIdle.setDescription('This object expresses the value of signal SubscriberIdle. The default value is 6.')
hwVoDigitalIfR2CfgSubscriberBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberBusy.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSubscriberBusy.setDescription('This object expresses the value of signal SubscriberBusy. The default value is 3.')
hwVoDigitalIfR2CfgDebounceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 40)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDebounceTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDebounceTime.setDescription('This object expresses the minimus duration the line signal to persist. The default value of this object is 10.')
hwVoDigitalIfR2CfgSendringBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 90000)).clone(60000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBackTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBackTime.setDescription('This object expresses the minimus duration the back-ring to persist. The default value of this object is 60000.')
hwVoDigitalIfR2CfgSendringBusyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 90000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBusyTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendringBusyTime.setDescription('This object expresses the minimus duration the busy-ring to persist. The default value of this object is 30000.')
hwVoDigitalIfR2CfgPulseSignalPersistenceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 3000)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPulseSignalPersistenceTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgPulseSignalPersistenceTime.setDescription('This object expresses the value of PulseSignalPersistence-Timer. The default value is 150.')
hwVoDigitalIfR2CfgDlAnswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 120000)).clone(60000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlAnswerTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlAnswerTime.setDescription('This object expresses the value of Answer-Timer. The default value is 60000.')
hwVoDigitalIfR2CfgDlClearBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearBackTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearBackTime.setDescription('This object expresses the value of ClearBack-Timer. The default value is 1000.')
hwVoDigitalIfR2CfgDlClearForwardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearForwardTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlClearForwardTime.setDescription('This object expresses the value of ClearForward-Timer. The default value is 1000.')
hwVoDigitalIfR2CfgDlSeizureTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureTime.setDescription('This object expresses the value of Seize-Timer. The default value is 1000.')
hwVoDigitalIfR2CfgDlReanswerTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReanswerTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReanswerTime.setDescription('This object expresses the value of ReAnswer-Timer. The default value is 1000.')
hwVoDigitalIfR2CfgDlReleaseGuardTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReleaseGuardTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlReleaseGuardTime.setDescription('This object expresses the value of ReleaseGuard-Timer. The default value is 1000.')
hwVoDigitalIfR2CfgMfcGroupBTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 90000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgMfcGroupBTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgMfcGroupBTime.setDescription('This object expresses the value of GroupB-Timer. The default value is 30000.')
hwVoDigitalIfR2CfgAniEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAniEnable.setDescription('This object expresses the ANI is enable or disable. The default value is disable.')
hwVoDigitalIfR2CfgGroupBEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupBEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgGroupBEnable.setDescription('This object expresses the GroupB-Process is enable or disable . The default value is enable.')
hwVoDigitalIfR2CfgClearForwardAckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgClearForwardAckEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgClearForwardAckEnable.setDescription('This object expresses the ClearForwardAck-Signal is enable or disable . The default value is disable.')
hwVoDigitalIfR2CfgDlSeizureAckEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureAckEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDlSeizureAckEnable.setDescription('This object expresses the SeizureAck-Signal is enable or disable . The default value is enable.')
hwVoDigitalIfR2CfgDTMFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFEnable.setDescription('This object expresses the DTMF is enable or disable . The default value is disable.')
hwVoDigitalIfR2CfgAnswerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAnswerEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgAnswerEnable.setDescription('This object expresses the Answer-Signal is enable or disable . The default value is enable.')
hwVoDigitalIfR2CfgReanswerEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReanswerEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReanswerEnable.setDescription('This object expresses the ReAnswer-Signal is enable or disable . The default value is disable.')
hwVoDigitalIfR2CfgFinalCallnumEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgFinalCallnumEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgFinalCallnumEnable.setDescription('This object expresses the FinalCallnum-Signal is enable or disable . The default value is disable.')
hwVoDigitalIfR2CfgForceMeteringEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgForceMeteringEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgForceMeteringEnable.setDescription('This object expresses the Metering-Signal is enable or disable . The default value is disable.')
hwVoDigitalIfR2CfgSendRingBackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBackEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBackEnable.setDescription('This object expresses the SendRingBack is enable or disable . The default value is enable.')
hwVoDigitalIfR2CfgSendRingBusyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBusyEnable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSendRingBusyEnable.setDescription('This object expresses the SendRingBusy is enable or disable . The default value is enable.')
hwVoDigitalIfR2CfgReqCategoryOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCategoryOffset.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCategoryOffset.setDescription('This object expresses the value of CategoryOffset . The default value is 1.')
hwVoDigitalIfR2CfgReqCallingnumOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingnumOffset.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallingnumOffset.setDescription('This object expresses the value of CallingnumOffset . The default value is 1.')
hwVoDigitalIfR2CfgCountryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("argentina", 0), ("australia", 1), ("bengal", 2), ("brazil", 3), ("china", 4), ("customer", 5), ("hongkong", 6), ("india", 7), ("indonesia", 8), ("itu-t", 9), ("korea", 10), ("malaysia", 11), ("mexico", 12), ("newzealand", 13), ("singapore", 14), ("thailand", 15))).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCountryMode.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgCountryMode.setDescription('This object expresses the value of CountryMode . The default value is 9.')
hwVoDigitalIfR2CfgSpecialCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 65, 66, 67, 68, 35, 42))).clone(namedValues=NamedValues(("null", 0), ("a", 65), ("b", 66), ("c", 67), ("d", 68), ("pound", 35), ("asterisk", 42)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialCharacter.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialCharacter.setDescription('This object expresses the SpecialCharacter(A,B,C,D,#,*). The default value is NULL.')
hwVoDigitalIfR2CfgSpecialSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(11, 16)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialSignal.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSpecialSignal.setDescription('This object expresses the signal of SpecialCharacter. The default value is 16.')
hwVoDigitalIfR2CfgSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("min", 1), ("max", 2), ("minpoll", 3), ("maxpoll", 4))).clone('min')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSelectMode.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgSelectMode.setDescription('This object expresses the trunk mode to be selected. max set select trunk mode to max-mode maxpoll set select trunk mode to max-poll-mode min set select trunk mode to min-mode minpoll set select trunk mode to min-poll-mode The default value is min.')
hwVoDigitalIfR2CfgDTMFTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFTime.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgDTMFTime.setDescription('This object expresses the value of DTMF-Timer. The default value is 0.')
hwVoDigitalIfR2CfgReqCallCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 1, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallCreate.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2CfgReqCallCreate.setDescription('This object expresses the value of signal callcreate in group-a. The default value is 6.')
hwVoDigitalIfR2ABCDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2), )
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgTable.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgTable.setDescription('The voice digital interface r2 abcd configuration table contains information about abcd bits configuration parameters for digital r2 voice interface.')
hwVoDigitalIfR2ABCDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1), ).setIndexNames((0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2ABCDCfgPortNumber"), (0, "HUAWEI-VO-DIGITAL-IF-MIB", "hwVoDigitalIfR2ABCDCfgGroupNumber"))
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgEntry.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgEntry.setDescription('An entry in the voice digital interface r2 abcd configuration table. The entry is automatically created when a digital voice interface is configed for digital r2 signal.')
hwVoDigitalIfR2ABCDCfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgPortNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgPortNumber.setDescription('Index of voice digital interface r2 abcd config table. It identify the number of the voice port.')
hwVoDigitalIfR2ABCDCfgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDCfgGroupNumber.setDescription('Index of voice digital interface r2 abcd config table. It identify the number of the ds0 group.')
hwVoDigitalIfR2ABCDReverseABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0000')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDReverseABCD.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDReverseABCD.setDescription("This object expresses whether or not the a b c d bits should be invert. '0' : disable invert. '1' : enable invert. The default value is '0000'.")
hwVoDigitalIfR2ABCDRenewABCD = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1111')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRenewABCD.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRenewABCD.setDescription("This object expresses the unused a b c d bits to be sent. The default value is '1111'.")
hwVoDigitalIfR2ABCDRxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxIdle.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxIdle.setDescription("This object expresses the idle line signal bits to be received. The default value is '1001'.")
hwVoDigitalIfR2ABCDTxIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxIdle.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxIdle.setDescription("This object expresses the idle line signal bits to be sent. The default value is '1001'.")
hwVoDigitalIfR2ABCDRxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizure.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizure.setDescription("This object expresses the seizure line signal bits to be received. The default value is '0001'.")
hwVoDigitalIfR2ABCDTxSeizure = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizure.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizure.setDescription("This object expresses the seizure line signal bits to be sent. The default value is '0001'.")
hwVoDigitalIfR2ABCDRxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizureAck.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxSeizureAck.setDescription("This object expresses the seizureAck line signal bits to be received. The default value is '1101'.")
hwVoDigitalIfR2ABCDTxSeizureAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizureAck.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxSeizureAck.setDescription("This object expresses the seizureAck line signal bits to be sent. The default value is '1101'.")
hwVoDigitalIfR2ABCDRxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxAnswer.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxAnswer.setDescription("This object expresses the answer line signal bits to be received. The default value is '0101'.")
hwVoDigitalIfR2ABCDTxAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('0101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxAnswer.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxAnswer.setDescription("This object expresses the answer line signal bits to be sent. The default value is '0101'.")
hwVoDigitalIfR2ABCDRxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearForward.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearForward.setDescription("This object expresses the ClearForward line signal bits to be received. The default value is '1001'.")
hwVoDigitalIfR2ABCDTxClearForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearForward.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearForward.setDescription("This object expresses the ClearForward line signal bits to be sent. The default value is '1001'.")
hwVoDigitalIfR2ABCDRxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearBack.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxClearBack.setDescription("This object expresses the ClearBackward line signal bits to be received. The default value is '1101'.")
hwVoDigitalIfR2ABCDTxClearBack = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearBack.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxClearBack.setDescription("This object expresses the ClearBackward line signal bits to be sent. The default value is '1101'.")
hwVoDigitalIfR2ABCDRxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxReleaseGuard.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxReleaseGuard.setDescription("This object expresses the ReleaseGuard line signal bits to be received. The default value is '1001'.")
hwVoDigitalIfR2ABCDTxReleaseGuard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxReleaseGuard.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxReleaseGuard.setDescription("This object expresses the ReleaseGuard line signal bits to be sent. The default value is '1001'.")
hwVoDigitalIfR2ABCDRxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxBlocking.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDRxBlocking.setDescription("This object expresses the Blocking line signal bits to be received. The default value is '1101'.")
hwVoDigitalIfR2ABCDTxBlocking = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 4, 3, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone('1101')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxBlocking.setStatus('current')
if mibBuilder.loadTexts: hwVoDigitalIfR2ABCDTxBlocking.setDescription("This object expresses the Blocking line signal bits to be sent. The default value is '1101'.")
mibBuilder.exportSymbols("HUAWEI-VO-DIGITAL-IF-MIB", hwVoDigitalIfR2TimeoutNextNumber=hwVoDigitalIfR2TimeoutNextNumber, hwVoDigitalIfR2ABCDRxSeizure=hwVoDigitalIfR2ABCDRxSeizure, hwVoDigitalIfEMABCDCfgPortNumber=hwVoDigitalIfEMABCDCfgPortNumber, hwVoDigitalIfR2CfgDemandRefused=hwVoDigitalIfR2CfgDemandRefused, hwVoDigitalIfR2CfgMfcGroupBTime=hwVoDigitalIfR2CfgMfcGroupBTime, hwVoDigitalIfR2CfgReanswerEnable=hwVoDigitalIfR2CfgReanswerEnable, hwVoDigitalIfEMCfgTimeoutRinging=hwVoDigitalIfEMCfgTimeoutRinging, hwVoDigitalIfR2CfgForceMeteringEnable=hwVoDigitalIfR2CfgForceMeteringEnable, hwVoDigitalIfR2CfgDTMFEnable=hwVoDigitalIfR2CfgDTMFEnable, hwVoDigitalIfEMTimerRising=hwVoDigitalIfEMTimerRising, hwVoDigitalIfR2CfgDebounceTime=hwVoDigitalIfR2CfgDebounceTime, hwVoDigitalIfR2ABCDCfgPortNumber=hwVoDigitalIfR2ABCDCfgPortNumber, hwVoDigitalIfR2ABCDRxIdle=hwVoDigitalIfR2ABCDRxIdle, hwVoDigitalIfR2CfgDlClearBackTime=hwVoDigitalIfR2CfgDlClearBackTime, hwVoDigitalIfR2CfgSelectMode=hwVoDigitalIfR2CfgSelectMode, hwVoDigitalIfCommonCfgEntry=hwVoDigitalIfCommonCfgEntry, hwVoDigitalIfR2ABCDRxAnswer=hwVoDigitalIfR2ABCDRxAnswer, hwVoDigitalIfR2CfgReqCategoryOffset=hwVoDigitalIfR2CfgReqCategoryOffset, hwVoDigitalIfR2CfgDlAnswerTime=hwVoDigitalIfR2CfgDlAnswerTime, hwVoDigitalIfCfgBoardType=hwVoDigitalIfCfgBoardType, hwVoDigitalIfR2CfgReqLastSecondDigit=hwVoDigitalIfR2CfgReqLastSecondDigit, hwVoDigitalIfEMCfgTimeoutInterDigits=hwVoDigitalIfEMCfgTimeoutInterDigits, hwVoDigitalIfCfgGroupNumber=hwVoDigitalIfCfgGroupNumber, hwVoDigitalIfR2ABCDRxSeizureAck=hwVoDigitalIfR2ABCDRxSeizureAck, hwVoDigitalIfEMTimerCallInterval=hwVoDigitalIfEMTimerCallInterval, hwVoDigitalIfEMABCDTxIdle=hwVoDigitalIfEMABCDTxIdle, hwVoDigitalIfCfgPortNumber=hwVoDigitalIfCfgPortNumber, hwVoDigitalIfR2CfgSpecialSignal=hwVoDigitalIfR2CfgSpecialSignal, hwVoDigitalIfCommonCfgTable=hwVoDigitalIfCommonCfgTable, hwVoDigitalIfR2CfgReqNextCallingnum=hwVoDigitalIfR2CfgReqNextCallingnum, hwVoDigitalIfR2CfgFinalCallnumEnable=hwVoDigitalIfR2CfgFinalCallnumEnable, hwVoDigitalIfR2ABCDTxSeizureAck=hwVoDigitalIfR2ABCDTxSeizureAck, hwVoDigitalIfR2Objects=hwVoDigitalIfR2Objects, hwVoDigitalIfR2CfgSendRingBusyEnable=hwVoDigitalIfR2CfgSendRingBusyEnable, hwVoDigitalIfR2ABCDRxClearBack=hwVoDigitalIfR2ABCDRxClearBack, hwVoDigitalIfEMTimerDialoutDelay=hwVoDigitalIfEMTimerDialoutDelay, hwVoDigitalIfR2CfgEntry=hwVoDigitalIfR2CfgEntry, hwVoDigitalIfEMTimerPortNumber=hwVoDigitalIfEMTimerPortNumber, hwVoDigitalIfR2CfgAnswerEnable=hwVoDigitalIfR2CfgAnswerEnable, hwVoDigitalIfEMABCDCfgEntry=hwVoDigitalIfEMABCDCfgEntry, hwVoDigitalIfEMABCDCfgGroupNumber=hwVoDigitalIfEMABCDCfgGroupNumber, hwVoDigitalIfR2CallerDigits=hwVoDigitalIfR2CallerDigits, hwVoDigitalIfEMCfgTimeoutWaitDigit=hwVoDigitalIfEMCfgTimeoutWaitDigit, hwVoDigitalIfR2CfgCountryMode=hwVoDigitalIfR2CfgCountryMode, hwVoDigitalIfR2ABCDTxSeizure=hwVoDigitalIfR2ABCDTxSeizure, hwVoDigitalIfR2ABCDCfgEntry=hwVoDigitalIfR2ABCDCfgEntry, hwVoDigitalIfR2TimeoutKb=hwVoDigitalIfR2TimeoutKb, hwVoDigitalIfEMTimerWinkRising=hwVoDigitalIfEMTimerWinkRising, hwVoDigitalIfR2CfgDigitEnd=hwVoDigitalIfR2CfgDigitEnd, hwVoDigitalIfR2TimeoutKd=hwVoDigitalIfR2TimeoutKd, hwVoDigitalIfEMTimerWinkHold=hwVoDigitalIfEMTimerWinkHold, hwVoDigitalIfR2CfgDlReanswerTime=hwVoDigitalIfR2CfgDlReanswerTime, hwVoDigitalIfR2Ka=hwVoDigitalIfR2Ka, hwVoDigitalIfR2CfgSendRingBackEnable=hwVoDigitalIfR2CfgSendRingBackEnable, hwVoDigitalIfCfgTimeSlotsConfigurable=hwVoDigitalIfCfgTimeSlotsConfigurable, hwVoDigitalIfR2CfgSendringBackTime=hwVoDigitalIfR2CfgSendringBackTime, hwVoDigitalIfR2CfgSpecialCharacter=hwVoDigitalIfR2CfgSpecialCharacter, hwVoDigitalIfR2CfgAniSwitch=hwVoDigitalIfR2CfgAniSwitch, hwVoDigitalIfR2CfgPortNumber=hwVoDigitalIfR2CfgPortNumber, hwVoDigitalIfR2CfgDlSeizureTime=hwVoDigitalIfR2CfgDlSeizureTime, hwVoDigitalIfR2ABCDCfgTable=hwVoDigitalIfR2ABCDCfgTable, hwVoDigitalIfR2ABCDTxClearForward=hwVoDigitalIfR2ABCDTxClearForward, hwVoDigitalIfR2CfgDlClearForwardTime=hwVoDigitalIfR2CfgDlClearForwardTime, hwVoDigitalIfR2CfgClearForwardAckEnable=hwVoDigitalIfR2CfgClearForwardAckEnable, hwVoDigitalIfR2CfgReqCallingnumOffset=hwVoDigitalIfR2CfgReqCallingnumOffset, hwVoDigitalIfR2ABCDRxClearForward=hwVoDigitalIfR2ABCDRxClearForward, hwVoDigitalIfR2Kd=hwVoDigitalIfR2Kd, hwVoDigitalIfR2CfgSubscriberIdle=hwVoDigitalIfR2CfgSubscriberIdle, hwVoDigitalIfEMABCDTxSeize=hwVoDigitalIfEMABCDTxSeize, hwVoDigitalIfR2CfgReqFirstDigit=hwVoDigitalIfR2CfgReqFirstDigit, hwVoDigitalIfR2CfgGroupBEnable=hwVoDigitalIfR2CfgGroupBEnable, hwVoDigitalIfR2CfgSubscriberBusy=hwVoDigitalIfR2CfgSubscriberBusy, hwVoDigitalIfR2ABCDCfgGroupNumber=hwVoDigitalIfR2ABCDCfgGroupNumber, hwVoDigitalIfR2CfgReqLastThirdDigit=hwVoDigitalIfR2CfgReqLastThirdDigit, hwVoDigitalIfR2CfgBillingCategory=hwVoDigitalIfR2CfgBillingCategory, hwVoDigitalIfR2ABCDTxAnswer=hwVoDigitalIfR2ABCDTxAnswer, hwVoDigitalIfEMTimerDtmfInterval=hwVoDigitalIfEMTimerDtmfInterval, hwVoDigitalIfCfgSignalType=hwVoDigitalIfCfgSignalType, hwVoDigitalIfR2CfgReqCallCreate=hwVoDigitalIfR2CfgReqCallCreate, hwVoDigitalIfR2ABCDReverseABCD=hwVoDigitalIfR2ABCDReverseABCD, hwVoDigitalIfCommonObjects=hwVoDigitalIfCommonObjects, hwVoDigitalIfR2ABCDTxBlocking=hwVoDigitalIfR2ABCDTxBlocking, hwVoDigitalIfR2CfgReqCallingCategory=hwVoDigitalIfR2CfgReqCallingCategory, hwVoDigitalIfR2TimeoutReleaseApprove=hwVoDigitalIfR2TimeoutReleaseApprove, hwVoDigitalIfR2CfgDTMFTime=hwVoDigitalIfR2CfgDTMFTime, hwVoDigitalIfR2CfgPulseSignalPersistenceTime=hwVoDigitalIfR2CfgPulseSignalPersistenceTime, hwVoDigitalIfEMTimerTable=hwVoDigitalIfEMTimerTable, hwVoDigitalIfEMTimerDtmf=hwVoDigitalIfEMTimerDtmf, hwVoDigitalIfR2CfgNullnum=hwVoDigitalIfR2CfgNullnum, hwVoDigitalIfR2CfgSendringBusyTime=hwVoDigitalIfR2CfgSendringBusyTime, hwVoDigitalIfEMCfgTable=hwVoDigitalIfEMCfgTable, hwVoDigitalIfR2ABCDRxReleaseGuard=hwVoDigitalIfR2ABCDRxReleaseGuard, hwVoDigitalIfR2CfgReqCurrentdigit=hwVoDigitalIfR2CfgReqCurrentdigit, hwVoDigitalIfR2CfgGroupNumber=hwVoDigitalIfR2CfgGroupNumber, hwVoDigitalIfR2TimeoutRing=hwVoDigitalIfR2TimeoutRing, hwVoDigitalIfR2ABCDRenewABCD=hwVoDigitalIfR2ABCDRenewABCD, hwVoDigitalIfR2CfgReqFirstCallingnum=hwVoDigitalIfR2CfgReqFirstCallingnum, hwVoDigitalIfEMCfgGroupNumber=hwVoDigitalIfEMCfgGroupNumber, hwVoDigitalIfR2CfgReqLastFirstDigit=hwVoDigitalIfR2CfgReqLastFirstDigit, hwVoDigitalIfR2ABCDRxBlocking=hwVoDigitalIfR2ABCDRxBlocking, hwVoDigitalIfEMABCDRxSeize=hwVoDigitalIfEMABCDRxSeize, hwVoDigitalIfR2TimeoutSendAnswer=hwVoDigitalIfR2TimeoutSendAnswer, hwVoDigitalIfEMCfgEntry=hwVoDigitalIfEMCfgEntry, hwVoiceDigitalInterfaceMIB=hwVoiceDigitalInterfaceMIB, hwVoDigitalIfR2CfgReqBillingCategory=hwVoDigitalIfR2CfgReqBillingCategory, hwVoDigitalIfEMObjects=hwVoDigitalIfEMObjects, hwVoDigitalIfR2CfgCallingCategory=hwVoDigitalIfR2CfgCallingCategory, hwVoDigitalIfR2DebounceTime=hwVoDigitalIfR2DebounceTime, hwVoDigitalIfR2CfgAniEnable=hwVoDigitalIfR2CfgAniEnable, PYSNMP_MODULE_ID=hwVoiceDigitalInterfaceMIB, hwVoDigitalIfR2ABCDTxClearBack=hwVoDigitalIfR2ABCDTxClearBack, hwVoDigitalIfEMTimerGroupNumber=hwVoDigitalIfEMTimerGroupNumber, hwVoDigitalIfR2CfgTable=hwVoDigitalIfR2CfgTable, hwVoDigitalIfR2ABCDTxIdle=hwVoDigitalIfR2ABCDTxIdle, hwVoDigitalIfEMABCDRxIdle=hwVoDigitalIfEMABCDRxIdle, hwVoDigitalIfR2ABCDTxReleaseGuard=hwVoDigitalIfR2ABCDTxReleaseGuard, hwVoDigitalIfR2CfgCongestion=hwVoDigitalIfR2CfgCongestion, hwVoDigitalIfEMTimerEntry=hwVoDigitalIfEMTimerEntry, hwVoDigitalIfEMTimerSendWink=hwVoDigitalIfEMTimerSendWink, hwVoDigitalIfEMABCDCfgTable=hwVoDigitalIfEMABCDCfgTable, hwVoDigitalIfR2SeizureAckTime=hwVoDigitalIfR2SeizureAckTime, hwVoDigitalIfEMTimerHold=hwVoDigitalIfEMTimerHold, hwVoDigitalIfR2CfgReqNextCallednum=hwVoDigitalIfR2CfgReqNextCallednum, hwVoDigitalIfR2CfgDlReleaseGuardTime=hwVoDigitalIfR2CfgDlReleaseGuardTime, hwVoDigitalIfR2CfgDlSeizureAckEnable=hwVoDigitalIfR2CfgDlSeizureAckEnable, hwVoDigitalIfEMCfgPortNumber=hwVoDigitalIfEMCfgPortNumber, hwVoDigitalIfR2SelectMode=hwVoDigitalIfR2SelectMode, hwVoDigitalIfR2CfgReqSwitchGroupB=hwVoDigitalIfR2CfgReqSwitchGroupB)
