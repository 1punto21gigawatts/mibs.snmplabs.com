#
# PySNMP MIB module CISCO-SIP-UA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SIP-UA-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:12:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, Integer32, Unsigned32, Bits, Gauge32, Counter32, TimeTicks, ModuleIdentity, NotificationType, IpAddress, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "Integer32", "Unsigned32", "Bits", "Gauge32", "Counter32", "TimeTicks", "ModuleIdentity", "NotificationType", "IpAddress", "MibIdentifier", "iso")
TextualConvention, StorageType, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "TruthValue", "DisplayString")
ciscoSipUaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 152))
ciscoSipUaMIB.setRevisions(('2004-02-19 00:00', '2002-05-08 00:00', '2001-10-05 00:00', '2001-09-07 00:00', '2001-08-21 00:00', '2001-08-02 00:00', '2001-06-07 00:00', '2001-03-02 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoSipUaMIB.setRevisionsDescriptions((' Addition of the following objects: cSipCfgSuspendResumeEnabled cSipCfgTimerHold cSipCfgTimerInfo cSipCfgTimerConnectionAging cSipCfgTimerBufferInvite cSipCfgRetryInfo cSipCfgRetrySubscribe cSipCfgOfferCallHold cSipCfgPeerSwitchTransEnabled cSipCfgSwitchTransportEnabled cSipCfgMaximumForwards cSipCfgReasonHeaderOveride cSipCfgBindSourceAddrTable -> cSipCfgBindSourceAddrEntry cSipCfgBindSourceAddrScope cSipCfgBindSourceAddrInterface cSipCfgVoiceServiceVoip -> cSipCfgHeaderPassingEnabled cSipCfgMaxSubscriptionAccept cSipCfgMaxSubscriptionOriginate cSipStatsRedirMovedTempsIns cSipStatsRedirMovedTempsOuts cSipStatsRetryInfo cSipStatsRetrySubscribe cSipStatsClientReqPendingIns cSipStatsClientReqPendingOuts cSipStatsTrafficUpdateIns cSipStatsTrafficUpdateOuts cSipStatsConnTCPSendFailures cSipStatsConnUDPSendFailures cSipStatsConnTCPRemoteClosures cSipStatsConnUDPCreateFailures cSipStatsConnTCPCreateFailures cSipStatsConnUDPInactiveTimeouts cSipStatsConnTCPInactiveTimeouts cSipStatsActiveUDPConnections cSipStatsActiveTCPConnections Deprecated the following objects: cSipCfgMaxForwards cSipStatsRedirMovedTemps cSipCfgBindSrcAddrScope cSipCfgBindSrcAddrInterface Addition of the following Conformance objects: ciscoSipTrafficStatsGroupRev3 ciscoSipStatsRedirStatusCodesGroupRev2 ciscoSipTimerConfigGroupRev4 ciscoSipRetryStatsGroupRev4 ciscoSipBaseIOSConfigGroupRev1 ciscoSipStatsClientStatusCodesGroupRev4 ciscoSipRetryConfigGroupRev4 ciscoSipCfgPeerGroupRev1 ciscoSipCfgVoiceServiceVoipGroup ciscoSipStatsConnectionGroup Deprecated the following Conformance objects: ciscoSipTrafficStatsGroupRev2 ciscoSipStatsRedirStatusCodesGroupRev1 ciscoSipTimerConfigGroupRev3 ciscoSipRetryStatsGroupRev3 ciscoSipBaseIOSConfigGroup ciscoSipStatsClientStatusCodesGroupRev3 ciscoSipRetryConfigGroupRev3 ciscoSipCfgPeerGroup Addition of the following Compliance object: ciscoSipComplianceRev5 Deprecated the following Compliance object: ciscoSipComplianceRev4 ', ' Addition of the following textual conventions: CSipStatusCode CSipMethodStr Addition of the following objects: cSipCfgRedirectionDisabled cSipCfgTimerSessionTimer cSipCfgEarlyMediaTable cSipCfgEarlyMediaStatusCodeIndex cSipCfgEarlyMediaCutThruDisabled cSipStatsClientSTTooSmallIns cSipStatsClientSTTooSmallOuts cSipStatsMisc3xxMappedTo4xxRsps cSipStatsSuccessOkTable cSipStatsSuccessOkMethod cSipStatsSuccessOkInbounds cSipStatsSuccessOkOutbounds cSipCfgSymNatEnabled cSipCfgSymNatDirectionRole ', 'Obsoleting cSipStatsRedirSeeOthers, cSipStatsClientLengthRequiredIns and cSipStatsClientLengthRequiredOuts. Add cSipCfgTimerRefer, cSipCfgRetryRefer, and cSipStatsRetryRefers. Deprecated old-style ciscoSipUaMIBNotificationPrefix. ', 'Neglected to deprecate ciscoSipStatsClientStatusCodesGroupRev1 in the previous revision where ciscoSipStatsClientStatusCodesGroupRev2 was made current. ', 'Deprecating cSipStatsRedirSeeOthers, cSipStatsClientLengthRequiredIns and cSipStatsClientLengthRequiredOuts. The SIP status codes related to these counters have been removed from RFC2543bis03 version of the standard. ', 'Addition of the following objects: cSipCfgAaaUsername cSipStatsTrafficInfoIns cSipStatsTrafficInfoOuts cSipStatsTrafficSubscribeIns cSipStatsTrafficSubscribeOuts cSipStatsClientBadEventIns cSipStatsClientBadEventOuts ', 'Addition of the following objects: cSipCfgBindSrcAddrInterface cSipCfgBindSrcAddrScope cSipCfgDnsSrvQueryStringFormat cSipStatsTrafficReferIns cSipStatsTrafficReferOuts cSipStatsTrafficNotifyIns cSipStatsTrafficNotifyOuts cSipStatsSuccessAcceptedIns cSipStatsSuccessAcceptedOuts cSipCfgTimerNotify cSipCfgRetryNotify cSipCfgStatusCodeIndex cSipCfgPstnCause cSipCfgStatusCauseStoreStatus cSipCfgPstnCauseIndex cSipCfgStatusCode cSipCfgCauseStatusStoreStatus cSipStatsRetryNotifys ', 'Addition of the following objects: cSipCfgMaxForwards cSipCfgTimerPrack cSipCfgTimerComet cSipCfgTimerReliableRsp cSipCfgRetryPrack cSipCfgRetryComet cSipCfgRetryReliableRsp cSipCfgOutSessionTransport cSipCfgReliable1xxRspStr cSipCfgReliable1xxRspHdr cSipCfgUrlType cSipCfgPeerTable cSipCfgPeerIndex cSipCfgPeerOutSessionTransport cSipCfgPeerReliable1xxRspStr cSipCfgPeerReliable1xxRspHdr cSipCfgPeerUrlType cSipStatsClientReqTermIns cSipStatsClientReqTermOuts cSipStatsClientNoAcceptHereIns cSipStatsClientNoAcceptHereOuts cSipStatsServerPrecondFailureIns cSipStatsServerPrecondFailureOuts cSipStatsTrafficCometIns cSipStatsTrafficCometOuts cSipStatsTrafficPrackIns cSipStatsTrafficPrackOuts cSipStatsRetryPrack cSipStatsRetryComets cSipStatsRetryReliable1xxRsps ',))
if mibBuilder.loadTexts: ciscoSipUaMIB.setLastUpdated('200402190000Z')
if mibBuilder.loadTexts: ciscoSipUaMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoSipUaMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W. Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-sip@cisco.com')
if mibBuilder.loadTexts: ciscoSipUaMIB.setDescription('Cisco User Agent Session Initiation Protocol (SIP) MIB module. SIP is an application-layer signalling protocol for creating, modifying and terminating multimedia sessions with one or more participants. These sessions include Internet multimedia conferences and Internet telephone calls. SIP is defined in RFC 2543 (March 1999). This MIB is defined for the management of SIP User Agents (UAs). A User Agent is an application which contains both a User Agent Client (UAC) and a User Agent Server (UAS). A UAC is an application that initiates a SIP request. A UAS is an application that contacts the user when a SIP request is received and that returns a response on behalf of the user. The response accepts, rejects, or redirects the request. A SIP transaction occurs between a client and a server and comprises all messages from the first request sent from the client to the server up to a final (non-1xx) response sent from the server to the client.')
ciscoSipUaMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 0))
ciscoSipUaMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1))
cSipCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1))
cSipCfgBase = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1))
cSipCfgTimer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2))
cSipCfgRetry = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3))
cSipCfgPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4))
cSipCfgStatusCauseMap = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5))
cSipCfgAaa = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 6))
cSipCfgVoiceServiceVoip = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 7))
cSipStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2))
cSipStatsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1))
cSipStatsSuccess = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2))
cSipStatsRedirect = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3))
cSipStatsErrClient = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4))
cSipStatsErrServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5))
cSipStatsGlobalFail = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6))
cSipStatsTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7))
cSipStatsRetry = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8))
cSipStatsMisc = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 9))
cSipStatsConnection = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10))
class CSipStatusCode(TextualConvention, Integer32):
    description = 'A textual convention reflecting a SIP response status code value.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class CSipMethodStr(TextualConvention, OctetString):
    description = "A textual convention reflecting SIP methods supported by this user agent. SIP methods are case-sensitive. Therefore, objects using this textual convention must also have values that are case-sensitive. All SIP methods must be represented as all upper case ASCII strings. For example, 'INVITE'."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

cSipCfgVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipCfgVersion.setStatus('current')
if mibBuilder.loadTexts: cSipCfgVersion.setDescription("This object will reflect the version of SIP supported by this user agent. It will follow the same format as SIP version information contained in the SIP messages generated by this user agent. For example, user agents supporting SIP version 2 will return 'SIP/2.0' as dictated by RFC 2543.")
cSipCfgTransport = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("udpAndTcp", 3), ("disabled", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTransport.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTransport.setDescription("This object specifies the transport protocol the SIP user agent will use to receive SIP messages. A value of 'disabled' indicates that the UA will not receive any SIP messages.")
cSipCfgUserLocationServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgUserLocationServerAddr.setStatus('current')
if mibBuilder.loadTexts: cSipCfgUserLocationServerAddr.setDescription('This object specifies address of the User Location Server (ULS) being used to resolve the location of end points. This could be a Domain Name Server (DNS) or a SIP proxy/redirect server. The format of the address follows the IETF service location protocol. The syntax is as follows: mapping-type:type-specific-syntax the mapping-type specifies a scheme for mapping the matching dial string to a target server. The type-specific-syntax is exactly that, something that the particular mapping scheme can understand. For example, Session target Meaning ipv4:171.68.13.55:1006 The session target is the IP version 4 address of 171.68.13.55 and port 1006. dns:pots.cisco.com The session target is the IP host with dns name pots.cisco.com. The valid Mapping type definitions for the peer follow: ipv4 - Syntax: ipv4:w.x.y.z:port or ipv4:w.x.y.z dns - Syntax: dns:host.domain.')
cSipCfgMaxForwards = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgMaxForwards.setStatus('deprecated')
if mibBuilder.loadTexts: cSipCfgMaxForwards.setDescription('This object may be used with any SIP method to limit the number of proxies that can forward the request to the next downstream server.')
cSipCfgBindSrcAddrInterface = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgBindSrcAddrInterface.setStatus('deprecated')
if mibBuilder.loadTexts: cSipCfgBindSrcAddrInterface.setDescription('This object may specify the interface where the source IP address used in SIP signalling or media packets is configured. A value of 0 means that there is no specific source address configured and in this case the best local IP address will be chosen by the system.')
cSipCfgBindSrcAddrScope = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("control", 2))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgBindSrcAddrScope.setStatus('deprecated')
if mibBuilder.loadTexts: cSipCfgBindSrcAddrScope.setDescription("This object specifies the scope of packets to which the source IP address of the interface designated by cSipCfgBindSrcAddrInterface will be bound. A value of 'all' means the IP address will be bound to both SIP signalling and media packets. A value of 'control' means the IP address will only be bound to SIP signalling packets. If cSipCfgBindSrcAddrInterface is set to 0, the value of this object has no meaning.")
cSipCfgDnsSrvQueryStringFormat = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2))).clone('v2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgDnsSrvQueryStringFormat.setStatus('current')
if mibBuilder.loadTexts: cSipCfgDnsSrvQueryStringFormat.setDescription("This object specifies the format of the prefix used by the system for DNS SRV queries. v1 : RFC 2052 format - 'protocol.transport.' v2 : RFC 2782 format - '_protocol._transport.' This object allows backward compatibility with systems only supporting RFC 2052 format.")
cSipCfgRedirectionDisabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRedirectionDisabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRedirectionDisabled.setDescription("This object specifies how call redirection (3xx) is handled by the user agent. If 'false', the user agent's treatment of incoming 3xx class response messages is as defined in RFC 2543. That is, the user agent uses the Contact header(s) from the 3xx response to reinitiate another INVITE transaction to the user's new location. The call is redirected. If 'true', the user agent treats incoming 3xx response messages as 4xx (client error) class response messages. In this case, the call is not redirected, instead it is released with the appropriate PSTN cause code. The mapping of SIP 3xx response status codes to 4xx response status codes is as follows: 300 Multiple Choices -> 410 Gone 301 Moved Permanently -> 410 Gone 302 Moved Temporarily -> 480 Temporarily Unavailable 305 User Proxy -> 410 Gone 380 Alternative Service -> 410 Gone Any other 3xx -> 410 Gone")
cSipCfgEarlyMediaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 9), )
if mibBuilder.loadTexts: cSipCfgEarlyMediaTable.setStatus('current')
if mibBuilder.loadTexts: cSipCfgEarlyMediaTable.setDescription('This table contains configuration for Early Media Cut Through. The configuration controls how the SIP user agent will process 1xx (Provisional) SIP response messages that contain Session Definition Protocol (SDP) payloads.')
cSipCfgEarlyMediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 9, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipCfgEarlyMediaStatusCodeIndex"))
if mibBuilder.loadTexts: cSipCfgEarlyMediaEntry.setStatus('current')
if mibBuilder.loadTexts: cSipCfgEarlyMediaEntry.setDescription('A row in the cSipCfgEarlyMediaTable. A row is accessible with a Provisional (1xx) status code value (eg, 180) and provides an object for the enabling or disabling of the Early Media Cut Through functionality.')
cSipCfgEarlyMediaStatusCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 9, 1, 1), CSipStatusCode())
if mibBuilder.loadTexts: cSipCfgEarlyMediaStatusCodeIndex.setStatus('current')
if mibBuilder.loadTexts: cSipCfgEarlyMediaStatusCodeIndex.setDescription('A unique identifier of a row in this table and a valid SIP status code.')
cSipCfgEarlyMediaCutThruDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 9, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgEarlyMediaCutThruDisabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgEarlyMediaCutThruDisabled.setDescription("This object specifies whether Early Media Cut Through is enabled or disabled for the SIP response messages with status codes that match cSipCfgEarlyMediaStatusCodeIndex. If 'true', early media cut through is disabled, and the user agent will process the message as though it did not contain any SDP payload. If 'false', early media cut through is enabled, and the user agent will process the message similar to a 183 (Session Progress) and cut through for early media. The assumption being that the SDP is an indication that the far end is going to send early media.")
cSipCfgSymNatEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgSymNatEnabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgSymNatEnabled.setDescription("This object specifies whether remote media checks for Symmetric Network Address Translation (NAT) is enabled or disabled. If 'true', remote media checks are enabled. The gateway will have the ability to open a Real Time Transport Protocol (RTP) session with the remote end and then update (modify) the existing RTP session's remote address/port (raddr:rport) with the source address and port of the actual media packet received. This would be triggered for only those calls where the Session Description Protocol (SDP) received by the gateway has an indication to do so. If 'false', remote media checks are disabled.")
cSipCfgSymNatDirectionRole = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("passive", 2), ("active", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgSymNatDirectionRole.setStatus('current')
if mibBuilder.loadTexts: cSipCfgSymNatDirectionRole.setDescription("This object specifies the value of the 'a=direction:<role>' SDP attribute supported by the user agent. The direction attribute is used to describe the role of the user agent (as an endpoint for a connection-oriented media stream) in the connection setup procedure. none : No role is specified. passive : The user agent will advertise itself as a 'passive' entity (inside the NAT) in the SDP. active : The user agent will advertise itself as a 'active' entity (outside the NAT) in the SDP.")
cSipCfgBindSourceAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 12), )
if mibBuilder.loadTexts: cSipCfgBindSourceAddrTable.setStatus('current')
if mibBuilder.loadTexts: cSipCfgBindSourceAddrTable.setDescription("This table contains configuration for binding the scope of packets to the particular ethernet interface. The scope for the packets can be specified as either 'signalling' or 'media' packets. The ethernet interface shall be specified by the interface index. The table shall be indexed based on the scope.")
cSipCfgBindSourceAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 12, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipCfgBindSourceAddrScope"))
if mibBuilder.loadTexts: cSipCfgBindSourceAddrEntry.setStatus('current')
if mibBuilder.loadTexts: cSipCfgBindSourceAddrEntry.setDescription('A row in the cSipCfgBindSourceAddrTable. A row is accessible with the scope of packets to which the source IP address of the interface designated by cSipCfgBindSourceAddrInterface will be bound.')
cSipCfgBindSourceAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("media", 1), ("control", 2))))
if mibBuilder.loadTexts: cSipCfgBindSourceAddrScope.setStatus('current')
if mibBuilder.loadTexts: cSipCfgBindSourceAddrScope.setDescription('A unique identifier of a row in this table and specifies the scope of packets to which the source IP address of the interface designated by cSipCfgBindSourceAddrInterface will be bound.')
cSipCfgBindSourceAddrInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 12, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgBindSourceAddrInterface.setStatus('current')
if mibBuilder.loadTexts: cSipCfgBindSourceAddrInterface.setDescription('This object may specify the interface where the source IP address used in SIP signalling or media packets is configured. A value of 0 means that there is no specific source address configured and in this case the best local IP address will be chosen by the system.')
cSipCfgSuspendResumeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 13), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgSuspendResumeEnabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgSuspendResumeEnabled.setDescription("This object specifies if support for handling Suspend/Resume events from the switch is enabled or not. If 'true', the user agent on getting a Suspend will notify the remote agent by sending it a re-invite with a hold SDP. Similarly, when the Gateway receives a Resume, it will initiate a re-invite with the original SDP and unhold the call. If 'false', the user agent will not initiate any re-invites on receiving Suspend/Resume events, basically it won't be putting the call on hold or off hold.")
cSipCfgOfferCallHold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("directionAttr", 1), ("connAddr", 2))).clone('directionAttr')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgOfferCallHold.setStatus('current')
if mibBuilder.loadTexts: cSipCfgOfferCallHold.setDescription('This object specifies how the SIP gateway would initiate call hold requests. directionAttr: The user agent will use the direction attribute such as a=sendonly or a=inactive in the sdp to initiate call hold requests. connAddr: The user agent will use 0.0.0.0 connection address to specify Call Hold.')
cSipCfgReasonHeaderOveride = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgReasonHeaderOveride.setStatus('current')
if mibBuilder.loadTexts: cSipCfgReasonHeaderOveride.setDescription('This object specifies that the Reason header overrides SIP status code mapping table.')
cSipCfgMaximumForwards = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 70)).clone(70)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgMaximumForwards.setStatus('current')
if mibBuilder.loadTexts: cSipCfgMaximumForwards.setDescription('This object may be used with any SIP method to limit the number of proxies that can forward the request to the next downstream server.')
cSipCfgTimerTrying = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerTrying.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerTrying.setDescription('This object specifies the time a user agent will wait to receive a provisional response to a INVITE before resending the INVITE.')
cSipCfgTimerExpires = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60000, 300000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerExpires.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerExpires.setDescription('This object specifies the time a user agent will wait to receive a final response to a INVITE before cancelling the transaction.')
cSipCfgTimerConnect = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerConnect.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerConnect.setDescription('This object specifies the time a user agent will wait to receive an ACK confirmation a session is established.')
cSipCfgTimerDisconnect = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerDisconnect.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerDisconnect.setDescription('This object specifies the time a user agent will wait to receive an BYE confirmation a session is disconnected.')
cSipCfgTimerPrack = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerPrack.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerPrack.setDescription('This object specifies the time a user agent will wait for a final response before retransmitting the PRACK (PRovisional ACKnowledgment).')
cSipCfgTimerComet = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerComet.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerComet.setDescription('This object specifies the time a user agent will wait for a final response before retransmitting the COMET (COndition MET).')
cSipCfgTimerReliableRsp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerReliableRsp.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerReliableRsp.setDescription('This object specifies the amount of time to wait for a PRACK before retransmitting the reliable 1xx response.')
cSipCfgTimerNotify = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerNotify.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerNotify.setDescription('This object specifies the amount of time to wait for a final response before retransmitting the Notify.')
cSipCfgTimerRefer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerRefer.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerRefer.setDescription('This object specifies the amount of time to wait for a final response before retransmitting the Refer.')
cSipCfgTimerSessionTimer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(1800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerSessionTimer.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerSessionTimer.setDescription("This object specifies the value of the Min-SE header for INVITE messages originated by this user agent and the minimum value of the Session-Expires headers for INVITE messages received by this user agent. Any Session-Expires headers received with a value below this object's value will be rejected with a 422 client error response message. Setting this object to a value less than 600 is valid, but the possibly of excessive re-INVITES and the impact of those messages should be fully understood and considered an acceptable risk.")
cSipCfgTimerHold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(15, 2880), )).clone(2880)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerHold.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerHold.setDescription('This object specifies the amount of time to wait before disconnecting a call already on hold. A value of 0 specifies that this functionality is disabled.')
cSipCfgTimerInfo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerInfo.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerInfo.setDescription('This object specifies the amount of time to wait for a 200ok response before retransmitting the Info.')
cSipCfgTimerConnectionAging = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(5)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerConnectionAging.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerConnectionAging.setDescription('This object specifies the amount of time to wait before aging out a TCP/UDP connection.')
cSipCfgTimerBufferInvite = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 5000), ))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgTimerBufferInvite.setStatus('current')
if mibBuilder.loadTexts: cSipCfgTimerBufferInvite.setDescription("This object specifies the amount of time to buffer the INVITE while waiting for display name info in the Facility. A value of 0 means that the INVITE wouldn't be buffered waiting for the display name info in the Facility.")
cSipCfgRetryInvite = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryInvite.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryInvite.setDescription('This object specifies the number of times a user agent will retry sending a INVITE request.')
cSipCfgRetryBye = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryBye.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryBye.setDescription('This object specifies the number of times a user agent will retry sending a BYE request.')
cSipCfgRetryCancel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryCancel.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryCancel.setDescription('This object specifies the number of times a user agent will retry sending a CANCEL request.')
cSipCfgRetryRegister = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryRegister.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryRegister.setDescription('This object specifies the number of times a user agent will retry sending a REGISTER request.')
cSipCfgRetryResponse = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryResponse.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryResponse.setDescription('This object specifies the number of times a user agent will retry sending a Response and expecting a ACK.')
cSipCfgRetryPrack = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryPrack.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryPrack.setDescription('This object specifies the number of times a user agent will retry sending a PRACK (PRovisional ACKnowledgement).')
cSipCfgRetryComet = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryComet.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryComet.setDescription('This object specifies the number of times a user agent will retry sending a COMET (COndition MET).')
cSipCfgRetryReliableRsp = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryReliableRsp.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryReliableRsp.setDescription('This object specifies the number of times a user agent will retry sending a reliable response.')
cSipCfgRetryNotify = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryNotify.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryNotify.setDescription('This object specifies the number of times a user agent will retry sending a Notify request.')
cSipCfgRetryRefer = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryRefer.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryRefer.setDescription('This object specifies the number of times a user agent will retry sending a Refer request.')
cSipCfgRetryInfo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetryInfo.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetryInfo.setDescription('This object specifies the number of times a user agent will retry sending a Info request.')
cSipCfgRetrySubscribe = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 3, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgRetrySubscribe.setStatus('current')
if mibBuilder.loadTexts: cSipCfgRetrySubscribe.setDescription('This object specifies the number of times a user agent will retry sending a Subscribe request.')
cSipCfgPeerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1), )
if mibBuilder.loadTexts: cSipCfgPeerTable.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerTable.setDescription("This table contains per dial-peer SIP related configuration. The table is a sparse table of dial-peer information. This means, it only reflects dial-peers being used for SIP. A dial-peer is being used for SIP if the value of cvVoIPPeerCfgSessionProtocol (CISCO-VOICE-DIAL-CONTROL-MIB) is 'sip'. Dial-peers are not created or destroyed via this table. Only SIP related configuration can be performed via this table once the dial-peer exists in the system and is visible in this table.")
cSipCfgPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipCfgPeerIndex"))
if mibBuilder.loadTexts: cSipCfgPeerEntry.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerEntry.setDescription('A row in the cSipCfgPeerTable.')
cSipCfgPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cSipCfgPeerIndex.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerIndex.setDescription('An arbitrary index that uniquely identifies a dial-peer configured for SIP.')
cSipCfgPeerOutSessionTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("system", 1), ("udp", 2), ("tcp", 3))).clone('system')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPeerOutSessionTransport.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerOutSessionTransport.setDescription("This object specifies the session transport protocol that will be used by this dial-peer for outbound SIP messages. The value 'system' is the default and indicates that this dial-peer should use the value set by cSipCfgOutSessionTransport instead.")
cSipCfgPeerReliable1xxRspStr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 3), SnmpAdminString().clone('100rel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPeerReliable1xxRspStr.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerReliable1xxRspStr.setDescription('This object specifies the string that will be placed in either the Supported or Require SIP header, as specified by cSipCfgPeerReliable1xxRspHdr.')
cSipCfgPeerReliable1xxRspHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("system", 1), ("supported", 2), ("require", 3), ("disabled", 4))).clone('system')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPeerReliable1xxRspHdr.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerReliable1xxRspHdr.setDescription("This object specifies behavior with respect to Support or Require headers in SIP messages sent and received via this dial-peer. If the originating gateway is configured for 'require', the Require header is added to the outgoing INVITEs with the value of cSipCfgPeerReliable1xxStr. This requires the use of reliable provisional responses by the terminating gateway. Sessions will be torn down if this use cannot be supported by that gateway. If the originating gateway is configured for 'supported', the Supported header is added to the outgoing INVITEs with the value of cSipCfgPeerReliable1xxStr. This requires that an attempt to use reliable provisional responses be made, but sessions can continue without them. If the originating gateway is configured for 'disabled', the value of cSipCfgReliable1xxStr will NOT be added to either the Require or Supported headers of outgoing INVITEs. The value 'system' is the default and indicates that this dial-peer should use the value of cSipCfgReliable1xxRspHdr instead.")
cSipCfgPeerUrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("system", 1), ("sip", 2), ("tel", 3))).clone('system')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPeerUrlType.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerUrlType.setDescription("This object specifies the URL type sent in outbound INVITES generated by this device. The value 'system' is the default and indicates that this dial-peer should use the value of cSipCfgUrlType instead.")
cSipCfgPeerSwitchTransEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPeerSwitchTransEnabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPeerSwitchTransEnabled.setDescription('This object specifies if the functionality of switching between transports from UDP to TCP if the message size of a Request is greater than 1300 bytes is enabled or not.')
cSipCfgOutSessionTransport = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2))).clone('udp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgOutSessionTransport.setStatus('current')
if mibBuilder.loadTexts: cSipCfgOutSessionTransport.setDescription("This object specifies the session transport protocol that will be used for outbound SIP messages. This configuration is applicable to all dial-peers in the system having cSipCfgPeerOutSessionTransport set to 'system'.")
cSipCfgReliable1xxRspStr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 3), SnmpAdminString().clone('100rel')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgReliable1xxRspStr.setStatus('current')
if mibBuilder.loadTexts: cSipCfgReliable1xxRspStr.setDescription('This object specifies the string that will be placed in either the Supported or Require SIP header, as specified by cSipCfgReliable1xxRspHdr.')
cSipCfgReliable1xxRspHdr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("supported", 1), ("require", 2), ("disabled", 3))).clone('supported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgReliable1xxRspHdr.setStatus('current')
if mibBuilder.loadTexts: cSipCfgReliable1xxRspHdr.setDescription("This object specifies behavior with respect to Supported or Require headers in SIP messages sent and received via this dial-peer. If the originating gateway is configured for 'require', the Require header is added to the outgoing INVITEs with the value of cSipCfgReliable1xxStr. This requires the use of reliable provisional responses by the terminating gateway. Sessions will be torn down if this use cannot be supported by that gateway. If the originating gateway is configured for 'supported', the Supported header is added to the outgoing INVITEs with the value of cSipCfgReliable1xxStr. This requires that an attempt to use reliable provisional responses be made, but sessions can continue without them. If the originating gateway is configured for 'disabled', the value of cSipCfgReliable1xxStr will NOT be added to either the Require or Supported headers of outgoing INVITEs.")
cSipCfgUrlType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sip", 1), ("tel", 2))).clone('sip')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgUrlType.setStatus('current')
if mibBuilder.loadTexts: cSipCfgUrlType.setDescription('This object specifies the URL type sent in outbound INVITES generated by this device.')
cSipCfgStatusCauseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 1), )
if mibBuilder.loadTexts: cSipCfgStatusCauseTable.setStatus('current')
if mibBuilder.loadTexts: cSipCfgStatusCauseTable.setDescription('This table contains SIP status code to PSTN cause code mapping configuration. Inbound SIP response messages that will result in outbound PSTN signalling messages will have the SIP status codes transposed into the PSTN cause codes as prescribed by the contents of this table.')
cSipCfgStatusCauseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipCfgStatusCodeIndex"))
if mibBuilder.loadTexts: cSipCfgStatusCauseEntry.setStatus('current')
if mibBuilder.loadTexts: cSipCfgStatusCauseEntry.setDescription('A row in the cSipCfgStatusCauseTable. Entries cannot be created or destroyed by the actions of any NMS.')
cSipCfgStatusCodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 1, 1, 1), CSipStatusCode())
if mibBuilder.loadTexts: cSipCfgStatusCodeIndex.setStatus('current')
if mibBuilder.loadTexts: cSipCfgStatusCodeIndex.setDescription('A unique identifier of a row in this table and a valid SIP status code.')
cSipCfgPstnCause = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgPstnCause.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPstnCause.setDescription('The PSTN cause code to which the SIP status code given by cSipCfgStatusCodeIndex is to be mapped for outbound PSTN signalling messages.')
cSipCfgStatusCauseStoreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 1, 1, 3), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipCfgStatusCauseStoreStatus.setStatus('current')
if mibBuilder.loadTexts: cSipCfgStatusCauseStoreStatus.setDescription("This object reflects the storage status of this table entry. If the value is 'volatile', then this entry only exists in RAM and the information would be lost (reverting to defaults) on system reload. If the value is 'nonVolatile' then this entry has been written to NVRAM and will persist across system reloads.")
cSipCfgCauseStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 2), )
if mibBuilder.loadTexts: cSipCfgCauseStatusTable.setStatus('current')
if mibBuilder.loadTexts: cSipCfgCauseStatusTable.setDescription('This table contains PSTN cause code to SIP status code mapping configuration. Inbound PSTN signalling messages that will result in outbound SIP response messages will have the PSTN cause codes transposed into the SIP status codes as prescribed by the contents of this table.')
cSipCfgCauseStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipCfgPstnCauseIndex"))
if mibBuilder.loadTexts: cSipCfgCauseStatusEntry.setStatus('current')
if mibBuilder.loadTexts: cSipCfgCauseStatusEntry.setDescription('A row in the cSipCfgCauseStatusTable. Entries cannot be created or destroyed by the actions of any NMS.')
cSipCfgPstnCauseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cSipCfgPstnCauseIndex.setStatus('current')
if mibBuilder.loadTexts: cSipCfgPstnCauseIndex.setDescription('A unique identifier of a row in this table and a valid PSTN cause code.')
cSipCfgStatusCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 2, 1, 2), CSipStatusCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgStatusCode.setStatus('current')
if mibBuilder.loadTexts: cSipCfgStatusCode.setDescription('The SIP status code to which the PSTN cause code given by cSipCfgPstnCauseIndex is to be mapped for outbound SIP response messages.')
cSipCfgCauseStatusStoreStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 5, 2, 1, 3), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipCfgCauseStatusStoreStatus.setStatus('current')
if mibBuilder.loadTexts: cSipCfgCauseStatusStoreStatus.setDescription("This object reflects the storage status of this table entry. If the value is 'volatile', then this entry only exists in RAM and the information would be lost (reverting to defaults) on system reload. If the value is 'nonVolatile' then this entry has been written to NVRAM and will persist across system reloads.")
cSipCfgAaaUsername = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("callingNumber", 1), ("proxyAuth", 2))).clone('callingNumber')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgAaaUsername.setStatus('current')
if mibBuilder.loadTexts: cSipCfgAaaUsername.setDescription('This object specifies the source of the information used to populate the username attribute of AAA billing records.')
cSipCfgHeaderPassingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 7, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgHeaderPassingEnabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgHeaderPassingEnabled.setDescription("This object specifies if support for passing SIP headers from Invite, Subscribe, Notify Request to the application is enabled. If 'true', the headers received in a message will be passed to the application. If 'false', the headers received in a message will not be passed to the application.")
cSipCfgMaxSubscriptionAccept = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 7, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgMaxSubscriptionAccept.setStatus('current')
if mibBuilder.loadTexts: cSipCfgMaxSubscriptionAccept.setDescription('This object specifies the maximum number of concurrent SIP subscriptions a SIP Gateway can accept.')
cSipCfgMaxSubscriptionOriginate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 7, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgMaxSubscriptionOriginate.setStatus('current')
if mibBuilder.loadTexts: cSipCfgMaxSubscriptionOriginate.setDescription('This object specifies the maximum number of concurrent SIP subscriptions that a SIP Gateway can originate. Default is Max Dialpeers on platform. Maximum is 2*Max Dialpeers on Platform.')
cSipCfgSwitchTransportEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 1, 7, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSipCfgSwitchTransportEnabled.setStatus('current')
if mibBuilder.loadTexts: cSipCfgSwitchTransportEnabled.setDescription('This object specifies if the functionality of switching between transports from udp to tcp if the message size of a Request is greater than 1300 bytes is enabled or not. This configuration is at the global level, and will only be considered if there exists no voip dial-peer.')
cSipStatsInfoTryingIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoTryingIns.setReference('RFC 2543, Sections 5.1.1 & 7.1.1')
if mibBuilder.loadTexts: cSipStatsInfoTryingIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoTryingIns.setDescription('This object reflects the total number of Trying (100) responses received by the user agent since system startup. Trying responses indicate that some unspecified action is being taken on behalf of this call, but the user has not yet been located. Inbound Trying responses indicate that outbound INVITE request sent out by this system have been received and are processed.')
cSipStatsInfoTryingOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoTryingOuts.setReference('RFC 2543, Sections 5.1.1 & 7.1.1')
if mibBuilder.loadTexts: cSipStatsInfoTryingOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoTryingOuts.setDescription('This object reflects the total number of Trying (100) responses sent by the user agent since system startup. Trying responses indicate that some unspecified action is being taken on behalf of this call, but the user has not yet been located. Outbound Trying responses indicate this system is successfully receiving INVITE requests and processing them on behalf of the system initiating the INVITE.')
cSipStatsInfoRingingIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoRingingIns.setReference('RFC 2543, Sections 5.1.1 & 7.1.2')
if mibBuilder.loadTexts: cSipStatsInfoRingingIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoRingingIns.setDescription('This object reflects the total number of Ringing (180) responses received by the user agent since system startup. A inbound Ringing response indicates that the UAS processing a INVITE initiated by this system has found a possible location where the desired end user has registered recently and is trying to alert the user.')
cSipStatsInfoRingingOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoRingingOuts.setReference('RFC 2543, Sections 5.1.1 & 7.1.2')
if mibBuilder.loadTexts: cSipStatsInfoRingingOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoRingingOuts.setDescription('This object reflects the total number of Ringing (180) responses sent by the user agent since system startup. A outbound Ringing response indicates that this system has processed an INVITE for a particular end user and found a possible location where that user has registered recently. The system is trying to alert the end user and is conveying that status to the system that originated the INVITE.')
cSipStatsInfoForwardedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoForwardedIns.setReference('RFC 2543, Sections 5.1.1 & 7.1.3')
if mibBuilder.loadTexts: cSipStatsInfoForwardedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoForwardedIns.setDescription('This object reflects the total number of Call Is Being Forwarded (181) responses received by the user agent since system startup. A proxy server may use a Forwarded status code to indicate that the call is being forwarded to a different set of destinations. Inbound Forwarded responses indicate to this system that forwarding actions are taking place with regard to calls initiated by this system.')
cSipStatsInfoForwardedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoForwardedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.1.3')
if mibBuilder.loadTexts: cSipStatsInfoForwardedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoForwardedOuts.setDescription('This object reflects the total number of Call Is Being Forwarded (181) responses sent by the user agent since system startup. A proxy server may use a Forwarded status code to indicate that the call is being forwarded to a different set of destinations. Outbound Forwarded responses indicate this system is taking some forwarding action for calls and conveying that status to the system that initiated the calls.')
cSipStatsInfoQueuedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoQueuedIns.setReference('RFC 2543, Sections 5.1.1 & 7.1.4')
if mibBuilder.loadTexts: cSipStatsInfoQueuedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoQueuedIns.setDescription('This object reflects the total number of Queued (182) responses received by the user agent since system startup. Inbound Queued responses indicate that the users this system is attempting to call are temporarily unavailable but the SIP agents operating on behalf of those users wish to queue the calls rather than reject them. When the called parties become available, this system can expect to receive the appropriate final status response. The Reason-Phrase from the Queued response messages Status-Line may give further details about the status of the call. Multiple Queued responses to update this system about the status of the queued call my be received.')
cSipStatsInfoQueuedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoQueuedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.1.4')
if mibBuilder.loadTexts: cSipStatsInfoQueuedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoQueuedOuts.setDescription('This object reflects the total number of Queued (182) responses sent by the user agent since system startup. Outbound Queued responses indicate this system has determined that the called party is temporarily unavailable but the call is not rejected. Rather the call is queued until the called party becomes available. Queued responses messages are sent to the system originating the call request to convey the current status of a queued call.')
cSipStatsInfoSessionProgIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoSessionProgIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoSessionProgIns.setDescription('This object reflects the total number of Session Progress (183) responses received by the user agent since system startup.')
cSipStatsInfoSessionProgOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsInfoSessionProgOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsInfoSessionProgOuts.setDescription('This object reflects the total number of Session Progress (183) responses sent by the user agent since system startup.')
cSipStatsSuccessOkIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessOkIns.setReference('RFC 2543, Sections 5.1.1 & 7.2.1')
if mibBuilder.loadTexts: cSipStatsSuccessOkIns.setStatus('deprecated')
if mibBuilder.loadTexts: cSipStatsSuccessOkIns.setDescription('This object reflects the total number of Ok (200) responses received by the user agent since system startup. The meaning of inbound Ok responses depends on the method used in the associated request. BYE : The Ok response means the call has been terminated. CANCEL : The Ok response means the search for the end user has been cancelled. INVITE : The Ok response means the called party has agreed to participate in the call. OPTIONS : The Ok response means the called party has agreed to share its capabilities. REGISTER : The Ok response means the registration has succeeded.')
cSipStatsSuccessOkOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessOkOuts.setReference('RFC 2543, Sections 5.1.1 & 7.2.1')
if mibBuilder.loadTexts: cSipStatsSuccessOkOuts.setStatus('deprecated')
if mibBuilder.loadTexts: cSipStatsSuccessOkOuts.setDescription('This object reflects the total number of Ok (200) responses sent by the user agent since system startup. The meaning of outbound Ok responses depends on the method used in the associated request. BYE : The Ok response means the call has been terminated. CANCEL : The Ok response means the search for the end user has been cancelled. INVITE : The Ok response means the called party has agreed to participate in the call. OPTIONS : The Ok response means the called party has agreed to share its capabilities. REGISTER : The Ok response means the registration has succeeded.')
cSipStatsSuccessAcceptedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedIns.setReference('draft-ietf-sip-cc-transfer-04.txt')
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedIns.setDescription('This object reflects the total number of Accepted (202) responses received by the user agent since system startup. The meaning of outbound 202 Ok responses depends on the method used in the associated request.')
cSipStatsSuccessAcceptedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedOuts.setReference('draft-ietf-sip-cc-transfer-04.txt')
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessAcceptedOuts.setDescription('This object reflects the total number of Accepted (202) responses sent by the user agent since system startup. The meaning of outbound 202 Ok responses depends on the method used in the associated request.')
cSipStatsSuccessOkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 5), )
if mibBuilder.loadTexts: cSipStatsSuccessOkTable.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessOkTable.setDescription('This table contains statistics for sent and received 200 Ok response messages. The statistics are kept on per SIP method basis.')
cSipStatsSuccessOkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 5, 1), ).setIndexNames((0, "CISCO-SIP-UA-MIB", "cSipStatsSuccessOkMethod"))
if mibBuilder.loadTexts: cSipStatsSuccessOkEntry.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessOkEntry.setDescription('A row in the cSipStatsSuccessOkTable. There is an entry for each SIP method for which 200 Ok inbound and/or outbound statistics are kept.')
cSipStatsSuccessOkMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 5, 1, 1), CSipMethodStr())
if mibBuilder.loadTexts: cSipStatsSuccessOkMethod.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessOkMethod.setDescription('This object is used for instance identification of objects in this table. The value reflects a SIP method.')
cSipStatsSuccessOkInbounds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessOkInbounds.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessOkInbounds.setDescription('This object reflects the total number of Ok (200) responses sent by the user agent, since system startup, that were associated with the SIP method as specified by cSipStatsSuccessOkMethod.')
cSipStatsSuccessOkOutbounds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsSuccessOkOutbounds.setStatus('current')
if mibBuilder.loadTexts: cSipStatsSuccessOkOutbounds.setDescription('This object reflects the total number of Ok (200) responses received by the user agent, since system startup, that were associated with the SIP method as specified by cSipStatsSuccessOkMethod.')
cSipStatsRedirMultipleChoices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirMultipleChoices.setReference('RFC 2543, Section 5.1.1 & 7.3.1')
if mibBuilder.loadTexts: cSipStatsRedirMultipleChoices.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirMultipleChoices.setDescription('This object reflects the total number of Multiple Choices (300) responses received by the user agent since system startup. Multiple Choices responses indicate that the called party can be reached at several different locations and the server cannot or prefers not to proxy the request.')
cSipStatsRedirMovedPerms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirMovedPerms.setReference('RFC 2543, Sections 5.1.1 & 7.3.2')
if mibBuilder.loadTexts: cSipStatsRedirMovedPerms.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirMovedPerms.setDescription('This object reflects the total number of Moved Permanently (301) responses received by the user agent since system startup. Moved Permanently responses indicate that the called party can no longer be found at the address offered in the request and the requesting UAC should retry at the new address given by the Contact header field of the response.')
cSipStatsRedirMovedTemps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirMovedTemps.setReference('RFC 2543, Sections 5.1.1 & 7.3.3')
if mibBuilder.loadTexts: cSipStatsRedirMovedTemps.setStatus('deprecated')
if mibBuilder.loadTexts: cSipStatsRedirMovedTemps.setDescription('This object reflects the total number of Moved Temporarily (302) responses received by the user agent since system startup. Moved Temporarily responses indicate the UAC should retry the request directed at the new address(es) given by the Contact header field of the response. The duration of this redirection can be indicated through the Expires header. If no explicit expiration time is given, the new address(es) are only valid for this call.')
cSipStatsRedirSeeOthers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirSeeOthers.setReference('RFC 2543, Sections 5.1.1')
if mibBuilder.loadTexts: cSipStatsRedirSeeOthers.setStatus('obsolete')
if mibBuilder.loadTexts: cSipStatsRedirSeeOthers.setDescription('This object reflects the total number of See Other (303) responses received by the user agent since system startup.')
cSipStatsRedirUseProxys = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirUseProxys.setReference('RFC 2543, Sections 5.1.1 & 7.3.4')
if mibBuilder.loadTexts: cSipStatsRedirUseProxys.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirUseProxys.setDescription('This object reflects the total number of Use Proxy (305) responses received by the user agent since system startup. See Other responses indicate that requested resources must be accessed through the proxy given by the Contact header field of the response. The recipient of this response is expected to repeat this single request via the proxy.')
cSipStatsRedirAltServices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirAltServices.setReference('RFC 2543, Sections 5.1.1 & 7.3.5')
if mibBuilder.loadTexts: cSipStatsRedirAltServices.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirAltServices.setDescription('This object reflects the total number of Alternative Service (380) responses received by the user agent since system startup. Alternative Service responses indicate that the call was not successful, but alternative services are possible. Those alternative services are described in the message body of the response.')
cSipStatsRedirMovedTempsIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsIns.setReference('RFC 3261 Section 21.3.3')
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsIns.setDescription('This object reflects the total number of Moved Temporarily (302) responses received by the user agent since system startup. Moved Temporarily responses indicate the UAC should retry the request directed at the new address(es) given by the Contact header field of the response. The duration of this redirection can be indicated through the Expires header. If no explicit expiration time is given, the new address(es) are only valid for this call.')
cSipStatsRedirMovedTempsOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsOuts.setReference('RFC 3261, Section 21.3.3')
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRedirMovedTempsOuts.setDescription('This object reflects the total number of Moved Temporarily (302) responses sent by the user agent since system startup.')
cSipStatsClientBadRequestIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadRequestIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.1')
if mibBuilder.loadTexts: cSipStatsClientBadRequestIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadRequestIns.setDescription('This object reflects the total number of Bad Request (400) responses received by the user agent since system startup. Inbound Bad Request responses indicate that requests issued by this system could not be understood due to malformed syntax.')
cSipStatsClientBadRequestOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadRequestOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.1')
if mibBuilder.loadTexts: cSipStatsClientBadRequestOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadRequestOuts.setDescription('This object reflects the total number of Bad Request (400) responses sent by the user agent since system startup. Outbound Bad Request responses indicate that requests received by this system could not be understood due to malformed syntax.')
cSipStatsClientUnauthorizedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.2')
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedIns.setDescription('This object reflects the total number of Unauthorized (401) responses received by the user agent since system startup. Inbound Unauthorized responses indicate that requests issued by this system require user authentication.')
cSipStatsClientUnauthorizedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.2')
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientUnauthorizedOuts.setDescription('This object reflects the total number of Unauthorized (401) responses sent by the user agent since system startup. Outbound Unauthorized responses indicate that requests received by this system require user authentication.')
cSipStatsClientPaymentReqdIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.3')
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdIns.setDescription('This object reflects the total number of Payment Required (402) responses received by the user agent since system startup.')
cSipStatsClientPaymentReqdOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.3')
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientPaymentReqdOuts.setDescription('This object reflects the total number of Payment Required (402) responses sent by the user agent since system startup.')
cSipStatsClientForbiddenIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientForbiddenIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.4')
if mibBuilder.loadTexts: cSipStatsClientForbiddenIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientForbiddenIns.setDescription('This object reflects the total number of Forbidden (403) responses received by the user agent since system startup. Inbound Forbidden responses indicate that requests issued by this system are understood by the server but the server refuses to fulfill the request. Authorization will not help and the requests should not be repeated.')
cSipStatsClientForbiddenOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientForbiddenOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.4')
if mibBuilder.loadTexts: cSipStatsClientForbiddenOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientForbiddenOuts.setDescription('This object reflects the total number of Forbidden (403) responses sent by the user agent since system startup. Outbound Forbidden responses indicate that requests received by this system are understood but this system is refusing to fulfill the requests.')
cSipStatsClientNotFoundIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNotFoundIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.5')
if mibBuilder.loadTexts: cSipStatsClientNotFoundIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNotFoundIns.setDescription('This object reflects the total number of Not Found (404) responses received by the user agent since system startup. Inbound Not Found responses indicate that the called party does not exist at the domain specified in the Request-URI or the domain is not handled by the recipient of the request.')
cSipStatsClientNotFoundOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNotFoundOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.5')
if mibBuilder.loadTexts: cSipStatsClientNotFoundOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNotFoundOuts.setDescription('This object reflects the total number of Not Found (404) responses sent by the user agent since system startup. Outbound Not Found responses indicate that this system knows that the called party does not exist at the domain specified in the Request-URI or the domain is not handled by this system.')
cSipStatsClientMethNotAllowedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.6')
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedIns.setDescription('This object reflects the total number of Method Not Allowed (405) received responses by the user agent. Inbound Method Not Allowed responses indicate that requests issued by this system have specified a SIP method in the Request-Line that is not allowed for the address identified by the Request-URI.')
cSipStatsClientMethNotAllowedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.6')
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientMethNotAllowedOuts.setDescription('This object reflects the total number of Method Not Allowed (405) received sent by the user agent since system startup. Outbound Method Not Allowed responses indicate that requests received by this system have SIP methods specified in the Request-Line that are not allowed for the address identified by the Request-URI.')
cSipStatsClientNotAcceptableIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.7')
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableIns.setDescription('This object reflects the total number of Not Acceptable (406) responses received by the user agent since system startup. Inbound Not Acceptable responses indicate the resources identified by requests issued by this system cannot generate responses with content characteristics acceptable to this system according to the accept headers sent in the requests.')
cSipStatsClientNotAcceptableOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.7')
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNotAcceptableOuts.setDescription('This object reflects the total number of Not Acceptable (406) responses sent by the user agent since system startup. Outbound Not Acceptable responses indicate that the resources identified by requests received by this system cannot generate responses with content characteristics acceptable to the system sending the requests.')
cSipStatsClientProxyAuthReqdIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.8')
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdIns.setDescription('This object reflects the total number of Proxy Authentication Required (407) responses received by the user agent since system startup. Inbound Proxy Authentication Required responses indicate that this system must authenticate itself with the proxy before gaining access to the requested resource.')
cSipStatsClientProxyAuthReqdOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.8')
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientProxyAuthReqdOuts.setDescription('This object reflects the total number of Proxy Authentication Required (407) responses sent by the user agent since system startup. Outbound Proxy Authentication Required responses indicate that the systems issuing requests being processed by this system must authenticate themselves with this system before gaining access to requested resources.')
cSipStatsClientReqTimeoutIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.9')
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutIns.setDescription('This object reflects the total number of Request Timeout (408) responses received by the user agent since system startup. Inbound Request Timeout responses indicate that requests issued by this system are not being processed by the server within the time indicated in the Expires header of the request.')
cSipStatsClientReqTimeoutOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.9')
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqTimeoutOuts.setDescription('This object reflects the total number of Request Timeout (408) responses sent by the user agent since system startup. Outbound Request Timeout responses indicate that this system is not able to produce an appropriate response within the time indicated in the Expires header of the request.')
cSipStatsClientConflictIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientConflictIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.10')
if mibBuilder.loadTexts: cSipStatsClientConflictIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientConflictIns.setDescription('This object reflects the total number of Conflict (409) responses received by the user agent since system startup. Inbound Conflict responses indicate that requests issued by this system could not be completed due to a conflict with the current state of a requested resource.')
cSipStatsClientConflictOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientConflictOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.10')
if mibBuilder.loadTexts: cSipStatsClientConflictOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientConflictOuts.setDescription('This object reflects the total number of Conflict (409) responses sent by the user agent since system startup. Outbound Conflict responses indicate that requests received by this system could not be completed due to a conflict with the current state of a requested resource.')
cSipStatsClientGoneIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientGoneIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.11')
if mibBuilder.loadTexts: cSipStatsClientGoneIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientGoneIns.setDescription('This object reflects the total number of Gone (410) responses received by the user agent since system startup. Inbound Gone responses indicate that resources requested by this system are no longer available at the recipient server and no forwarding address is known.')
cSipStatsClientGoneOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientGoneOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.11')
if mibBuilder.loadTexts: cSipStatsClientGoneOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientGoneOuts.setDescription('This object reflects the total number of Gone (410) responses sent by the user agent since system startup. Outbound Gone responses indicate that the requested resources are no longer available at this system and no forwarding address is known.')
cSipStatsClientLengthRequiredIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.12')
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredIns.setStatus('obsolete')
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredIns.setDescription('This object reflects the total number of Length Required (411) responses received by the user agent since system startup. Inbound Length Required responses indicate that requests issued by this system are being refused by servers because of no defined Content-Length header field.')
cSipStatsClientLengthRequiredOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.12')
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredOuts.setStatus('obsolete')
if mibBuilder.loadTexts: cSipStatsClientLengthRequiredOuts.setDescription('This object reflects the total number of Length Required (411) responses sent by the user agent since system startup. Outbound Length Required responses indicate that requests received by this system are being refused because of no defined Content-Length header field.')
cSipStatsClientReqEntTooLargeIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.13')
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeIns.setDescription('This object reflects the total number of Request Entity Too Large (413) responses received by the user agent since system startup. Inbound Request Entity Too Large responses indicate that requests issued by this system are being refused because the request is larger than the server is willing or able to process.')
cSipStatsClientReqEntTooLargeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.13')
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqEntTooLargeOuts.setDescription('This object reflects the total number of Request Entity Too Large (413) responses sent by the user agent since system startup. Outbound Request Entity Too Large responses indicate that requests received by this system are larger than this system is willing or able to process.')
cSipStatsClientReqURITooLargeIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.14')
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeIns.setDescription('This object reflects the total number of Request-URI Too Large (414) responses received by the user agent since system startup. Inbound Request-URI Too Large responses indicate that requests issued by this system are being refused because the Request-URI is longer than the server is willing or able to interpret.')
cSipStatsClientReqURITooLargeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.14')
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqURITooLargeOuts.setDescription('This object reflects the total number of Request-URI Too Large (414) responses sent by the user agent since system startup. Outbound Request-URI Too Large responses indicate that Request-URIs received by this system are longer than this system is willing or able to interpret.')
cSipStatsClientNoSupMediaTypeIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.15')
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeIns.setDescription('This object reflects the total number of Unsupported Media Type (415) responses received by the user agent since system startup. Inbound Unsupported Media Type responses indicate that requests issued by this system are being refused because the message body of the request is in a format not supported by the requested resource for the requested method.')
cSipStatsClientNoSupMediaTypeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.15')
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNoSupMediaTypeOuts.setDescription('This object reflects the total number of Unsupported Media Type (415) responses sent by the user agent since system startup. Outbound Unsupported Media Type responses indicate that the body of requests received by this system are in a format not supported by the requested resource for the requested method.')
cSipStatsClientBadExtensionIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadExtensionIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.16')
if mibBuilder.loadTexts: cSipStatsClientBadExtensionIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadExtensionIns.setDescription('This object reflects the total number of Bad Extension (420) responses received by the user agent since system startup. Inbound Bad Extension responses indicate that the recipient did not understand the protocol extension specified in a Require header field.')
cSipStatsClientBadExtensionOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadExtensionOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.16')
if mibBuilder.loadTexts: cSipStatsClientBadExtensionOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadExtensionOuts.setDescription('This object reflects the total number of Bad Extension (420) responses sent by the user agent since system startup. Outbound Bad Extension responses indicate that this system did not understand the protocol extension specified in a Require header field of requests.')
cSipStatsClientTempNotAvailIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.17')
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailIns.setDescription('This object reflects the total number of Temporarily Not Available (480) responses received by the user agent since system startup. Inbound Temporarily Not Available responses indicate that the called party is currently unavailable.')
cSipStatsClientTempNotAvailOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.17')
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientTempNotAvailOuts.setDescription("This object reflects the total number of Temporarily Not Available (480) responses sent by the user agent since system startup. Outbound Temporarily Not Available responses indicate that the called party's end system was contacted successfully but the called party is currently unavailable.")
cSipStatsClientCallLegNoExistIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.18')
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistIns.setDescription('This object reflects the total number of Call Leg/Transaction Does Not Exist (481) responses received by the user agent since system startup. Inbound Call Leg/Transaction Does Not Exist responses indicate that either BYE or CANCEL requests issued by this system were received by a server and not matching call leg or transaction existed.')
cSipStatsClientCallLegNoExistOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.18')
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientCallLegNoExistOuts.setDescription('This object reflects the total number of Call Leg/Transaction Does Not Exist (481) responses sent by the user agent since system startup. Outbound Call Leg/Transaction Does Not Exist responses indicate that BYE or CANCEL requests have been received by this system and not call leg or transaction matching that request exists.')
cSipStatsClientLoopDetectedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.19')
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedIns.setDescription('This object reflects the total number of Loop Detected (482) responses received by the user agent since system startup. Inbound Loop Detected responses indicate that requests issued by this system were received at servers and the server found itself in the Via path more than once.')
cSipStatsClientLoopDetectedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.19')
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientLoopDetectedOuts.setDescription('This object reflects the total number of Loop Detected (482) responses sent by the user agent since system startup. Outbound Loop Detected responses indicate that requests received by this system contain a Via path with this system appearing more than once.')
cSipStatsClientTooManyHopsIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.20')
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsIns.setDescription('This object reflects the total number of Too Many Hops (483) responses received by the user agent since system startup. Inbound Too Many Hops responses indicate that requests issued by this system contain more Via entries (hops) than allowed by the Max-Forwards header field of the requests.')
cSipStatsClientTooManyHopsOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.20')
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientTooManyHopsOuts.setDescription('This object reflects the total number of Too Many Hops (483) responses sent by the user agent since system startup. Outbound Too Many Hops responses indicate that requests received by this system contain more Via entries (hops) than are allowed by the Max-Forwards header field of the requests.')
cSipStatsClientAddrIncompleteIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.21')
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteIns.setDescription('This object reflects the total number of Address Incomplete (484) responses received by the user agent since system startup. Inbound Address Incomplete responses indicate that requests issued by this system had To addresses or Request-URIs that were incomplete.')
cSipStatsClientAddrIncompleteOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.21')
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientAddrIncompleteOuts.setDescription('This object reflects the total number of Address Incomplete (484) responses sent by the user agent since system startup. Outbound Address Incomplete responses indicate that requests received by this system had To addresses or Request-URIs that were incomplete.')
cSipStatsClientAmbiguousIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientAmbiguousIns.setReference('RFC 2543, Sections 5.1.1 & 7.4.22')
if mibBuilder.loadTexts: cSipStatsClientAmbiguousIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientAmbiguousIns.setDescription('This object reflects the total number of Ambiguous (485) responses received by the user agent since system startup. Inbound Ambiguous responses indicate that requests issued by this system provided ambiguous address information.')
cSipStatsClientAmbiguousOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientAmbiguousOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.22')
if mibBuilder.loadTexts: cSipStatsClientAmbiguousOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientAmbiguousOuts.setDescription('This object reflects the total number of Ambiguous (485) responses sent by the user agent since system startup. Outbound Ambiguous responses indicate that requests received by this system contained ambiguous address information.')
cSipStatsClientBusyHereIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBusyHereIns.setReference('RFC 2543, Section 5.1.1 & 7.4.23')
if mibBuilder.loadTexts: cSipStatsClientBusyHereIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBusyHereIns.setDescription('This object reflects the total number of Busy Here (486) responses received by the user agent since system startup. Inbound Busy Here responses indicate that the called party is currently not willing or not able to take additional calls.')
cSipStatsClientBusyHereOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBusyHereOuts.setReference('RFC 2543, Sections 5.1.1 & 7.4.23')
if mibBuilder.loadTexts: cSipStatsClientBusyHereOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBusyHereOuts.setDescription("This object reflects the total number of Busy Here (486) responses sent by the user agent since system startup. Outbound Busy Here responses indicate that the called party's end system was contacted successfully but the called party is currently not willing or able to take additional calls.")
cSipStatsClientReqTermIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqTermIns.setReference('draft-ietf-sip-rfc2543bis-01.txt, Section 7.4.24.487')
if mibBuilder.loadTexts: cSipStatsClientReqTermIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqTermIns.setDescription('This object reflects the total number of Request Terminated (487) responses received by the user agent since system startup. Request Terminated responses are issued if the original request was terminated via CANCEL or BYE.')
cSipStatsClientReqTermOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqTermOuts.setReference('draft-ietf-sip-rfc2543bis-01.txt, Section 7.4.24.487')
if mibBuilder.loadTexts: cSipStatsClientReqTermOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqTermOuts.setDescription('This object reflects the total number of Request Terminated (487) responses sent by the user agent since system startup. Request Terminated responses are issued if the original request was terminated via CANCEL or BYE.')
cSipStatsClientNoAcceptHereIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereIns.setReference('draft-ietf-sip-rfc2543bis-01.txt, Section 7.4.24.488')
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereIns.setDescription('This object reflects the total number of Not Acceptable Here (488) responses received by the user agent since system startup. The response has the same meaning as 606 (Not Acceptable), but only applies to the specific entity addressed by the Request-URI and the request may succeed elsewhere.')
cSipStatsClientNoAcceptHereOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereOuts.setReference('draft-ietf-sip-rfc2543bis-01.txt, Section 7.4.24.488')
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientNoAcceptHereOuts.setDescription('This object reflects the total number of Not Acceptable Here (488) responses sent by the user agent since system startup. The response has the same meaning as 606 (Not Acceptable), but only applies to the specific entity addressed by the Request-URI and the request may succeed elsewhere.')
cSipStatsClientBadEventIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadEventIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadEventIns.setDescription('This object reflects the total number of BadEvent (489) responses received by the user agent since system startup.')
cSipStatsClientBadEventOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientBadEventOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientBadEventOuts.setDescription('This object reflects the total number of BadEvent (489) responses sent by the user agent since system startup.')
cSipStatsClientSTTooSmallIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientSTTooSmallIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientSTTooSmallIns.setDescription('This object reflects the total number of SessionTimerTooSmall (422) responses received by the user agent since system startup.')
cSipStatsClientSTTooSmallOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientSTTooSmallOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientSTTooSmallOuts.setDescription('This object reflects the total number of SessionTimerTooSmall (422) responses sent by the user agent since system startup.')
cSipStatsClientReqPendingIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqPendingIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqPendingIns.setDescription('This object reflects the total number of RequestPending (491) responses received by the user agent since system startup.')
cSipStatsClientReqPendingOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 4, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsClientReqPendingOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsClientReqPendingOuts.setDescription('This object reflects the total number of RequestPending (491) responses sent by the user agent since system startup.')
cSipStatsServerIntErrorIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerIntErrorIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.1')
if mibBuilder.loadTexts: cSipStatsServerIntErrorIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerIntErrorIns.setDescription('This object reflects the total number of Internal Server Error (500) responses received by the user agent since system startup. Inbound Internal Server Error responses indicate that servers to which this system is sending requests have encountered unexpected conditions that prevent them from fulfilling the requests.')
cSipStatsServerIntErrorOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerIntErrorOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.1')
if mibBuilder.loadTexts: cSipStatsServerIntErrorOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerIntErrorOuts.setDescription('This object reflects the total number of Internal Server Error (500) responses sent by the user agent since system startup. Outbound Internal Server Error responses indicate that this system has encountered unexpected conditions that prevent it from fulfilling received requests.')
cSipStatsServerNotImplementedIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerNotImplementedIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.2')
if mibBuilder.loadTexts: cSipStatsServerNotImplementedIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerNotImplementedIns.setDescription('This object reflects the total number of Not Implemented (501) responses received by the user agent since system startup. Inbound Not Implemented responses indicate that servers to which this system is sending requests do not support the functionality required to fulfill the requests.')
cSipStatsServerNotImplementedOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerNotImplementedOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.2')
if mibBuilder.loadTexts: cSipStatsServerNotImplementedOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerNotImplementedOuts.setDescription('This object reflects the total number of Not Implemented (501) responses sent by the user agent since system startup. Outbound Not Implemented responses indicate that this system does not support the functionality required to fulfill the requests.')
cSipStatsServerBadGatewayIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerBadGatewayIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.3')
if mibBuilder.loadTexts: cSipStatsServerBadGatewayIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerBadGatewayIns.setDescription('This object reflects the total number of Bad Gateway (502) responses received by the user agent since system startup.')
cSipStatsServerBadGatewayOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerBadGatewayOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.3')
if mibBuilder.loadTexts: cSipStatsServerBadGatewayOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerBadGatewayOuts.setDescription('This object reflects the total number of Bad Gateway (502) responses sent by the user agent since system startup.')
cSipStatsServerServiceUnavailIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.4')
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailIns.setDescription("This object reflects the total number of Service Unavailable (503) responses received by the user agent since system startup. Inbound Service Unavailable responses indicate that the server servicing this system's request is temporarily unavailable to handle the request.")
cSipStatsServerServiceUnavailOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.4')
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerServiceUnavailOuts.setDescription('This object reflects the total number of Service Unavailable (503) responses sent by the user agent since system startup. Outbound Service Unavailable responses indicate that this system is temporarily unable to handle received requests.')
cSipStatsServerGatewayTimeoutIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.5')
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutIns.setDescription("This object reflects the total number of Gateway Time-out (504) responses received by the user agent since system startup. Inbound Gateway Time-out responses indicate that the server attempting to complete this system's request did not receive a timely response from yet another system it was accessing to complete the request.")
cSipStatsServerGatewayTimeoutOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.5')
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerGatewayTimeoutOuts.setDescription('This object reflects the total number of Gateway Time-out (504) responses sent by the user agent since system startup. Outbound Gateway Time-out responses indicate that this system did not receive a timely response from the system it had accessed to assist in completing a received request.')
cSipStatsServerBadSipVersionIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionIns.setReference('RFC 2543, Sections 5.1.1 & 7.5.6')
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionIns.setDescription('This object reflects the total number of SIP Version Not Supported (505) responses received by the user agent since system startup. Inbound SIP Version Not Supported responses indicate that the server does not support, or refuses to support, the SIP protocol version that was used in the request message.')
cSipStatsServerBadSipVersionOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionOuts.setReference('RFC 2543, Sections 5.1.1 & 7.5.6')
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerBadSipVersionOuts.setDescription('This object reflects the total number of SIP Version Not Supported (505) responses sent by the user agent since system startup. Outbound SIP Version Not Supported responses indicate that this system does not support, or refuses to support, the SIP protocol version used in received requests.')
cSipStatsServerPrecondFailureIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureIns.setReference('draft-manyfolks-sip-resource-01.txt, Section 6')
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureIns.setDescription('This object reflects the total number of Precondition Failure (580) responses received by the user agent since system startup. This response is returned by a UAS if it is unable to perform the mandatory preconditions for the session.')
cSipStatsServerPrecondFailureOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureOuts.setReference('draft-manyfolks-sip-resource-01.txt, Section 6')
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsServerPrecondFailureOuts.setDescription('This object reflects the total number of Precondition Failure (580) responses sent by the user agent since system startup. This response is returned by a UAS if it is unable to perform the mandatory preconditions for the session.')
cSipStatsGlobalBusyEverywhereIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereIns.setReference('RFC 2543, Sections 5.1.1 & 7.6.1')
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereIns.setDescription("This object reflects the total number of Busy Everywhere (600) responses received by the user agent since system startup. Inbound Busy Everywhere responses indicate that the called party's end system was contacted successfully but the called party is busy and does not wish to take the call at this time.")
cSipStatsGlobalBusyEverywhereOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereOuts.setReference('RFC 2543, Sections 5.1.1 & 7.6.1')
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalBusyEverywhereOuts.setDescription("This object reflects the total number of Busy Everywhere (600) responses sent by the user agent since system startup. Outbound Busy Everywhere responses indicate that this system has successfully contacted a called party's end system and the called party does not wish to take the call at this time.")
cSipStatsGlobalDeclineIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalDeclineIns.setReference('RFC 2543, Sections 5.1.1 & 7.6.2')
if mibBuilder.loadTexts: cSipStatsGlobalDeclineIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalDeclineIns.setDescription("This object reflects the total number of Decline (603) responses received by the user agent since system startup. Decline responses indicate that the called party's end system was contacted successfully but the called party explicitly does not wish to, or cannot, participate.")
cSipStatsGlobalDeclineOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalDeclineOuts.setReference('RFC 2543, Sections 5.1.1 & 7.6.2')
if mibBuilder.loadTexts: cSipStatsGlobalDeclineOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalDeclineOuts.setDescription("This object reflects the total number of Decline (603) responses sent by the user agent since system startup. Outbound Decline responses indicate that this system has successfully contacted a called party's end system and the called party explicitly does not wish to, or cannot, participate.")
cSipStatsGlobalNotAnywhereIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereIns.setReference('RFC 2543, Sections 5.1.1 & 7.6.3')
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereIns.setDescription("This object reflects the total number of Does Not Exist Anywhere (604) responses received by the user agent since system startup. Inbound Does Not Exist Anywhere responses indicate that the server handling this system's request has authoritative information that the called party indicated in the To request field does not exist anywhere.")
cSipStatsGlobalNotAnywhereOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereOuts.setReference('RFC 2543, Sections 5.1.1 & 7.6.3')
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalNotAnywhereOuts.setDescription('This object reflects the total number of Does Not Exist Anywhere (604) responses sent by the user agent since system startup. Outbound Does Not Exist Anywhere responses indicate that this system has authoritative information that the called party in the To field of received requests does not exist anywhere.')
cSipStatsGlobalNotAcceptableIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableIns.setReference('RFC 2543, Sections 5.1.1 & 7.6.4')
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableIns.setDescription("This object reflects the total number of Not Acceptable (606) responses received by the user agent since system startup. Inbound Not Acceptable responses indicate that the called party's end system was contacted successfully but some aspect of the session description is not acceptable.")
cSipStatsGlobalNotAcceptableOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableOuts.setReference('RFC 2543, Sections 5.1.1 & 7.6.4')
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsGlobalNotAcceptableOuts.setDescription('This object reflects the total number of Not Acceptable (606) responses sent by the user agent since system startup. Outbound Not Acceptable responses indicate that the called party wishes to communicate, but cannot adequately support the session described in the request.')
cSipStatsTrafficInviteIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficInviteIns.setReference('RFC 2543, Section 4.2.1')
if mibBuilder.loadTexts: cSipStatsTrafficInviteIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficInviteIns.setDescription('This object reflects the total number of INVITE requests received by the user agent since system startup.')
cSipStatsTrafficInviteOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficInviteOuts.setReference('RFC 2543, Section 4.2.1')
if mibBuilder.loadTexts: cSipStatsTrafficInviteOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficInviteOuts.setDescription('This object reflects the total number of INVITE requests sent by the user agent.')
cSipStatsTrafficAckIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficAckIns.setReference('RFC 2543, Section 4.2.2')
if mibBuilder.loadTexts: cSipStatsTrafficAckIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficAckIns.setDescription('This object reflects the total number of ACK requests received by the user agent since system startup.')
cSipStatsTrafficAckOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficAckOuts.setReference('RFC 2543, Section 4.2.2')
if mibBuilder.loadTexts: cSipStatsTrafficAckOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficAckOuts.setDescription('This object reflects the total number of ACK requests sent by the user agent.')
cSipStatsTrafficByeIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficByeIns.setReference('RFC 2543, Section 4.2.4')
if mibBuilder.loadTexts: cSipStatsTrafficByeIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficByeIns.setDescription('This object reflects the total number of BYE requests received by the user agent since system startup.')
cSipStatsTrafficByeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficByeOuts.setReference('RFC 2543, Section 4.2.4')
if mibBuilder.loadTexts: cSipStatsTrafficByeOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficByeOuts.setDescription('This object reflects the total number of BYE requests sent by the user agent.')
cSipStatsTrafficCancelIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficCancelIns.setReference('RFC 2543, Section 4.2.5')
if mibBuilder.loadTexts: cSipStatsTrafficCancelIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficCancelIns.setDescription('This object reflects the total number of CANCEL requests received by the user agent since system startup.')
cSipStatsTrafficCancelOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficCancelOuts.setReference('RFC 2543, Section 4.2.5')
if mibBuilder.loadTexts: cSipStatsTrafficCancelOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficCancelOuts.setDescription('This object reflects the total number of CANCEL requests sent by the user agent.')
cSipStatsTrafficOptionsIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficOptionsIns.setReference('RFC 2543, Section 4.2.3')
if mibBuilder.loadTexts: cSipStatsTrafficOptionsIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficOptionsIns.setDescription('This object reflects the total number of OPTIONS requests received by the user agent since system startup.')
cSipStatsTrafficOptionsOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficOptionsOuts.setReference('RFC 2543, Section 4.2.3')
if mibBuilder.loadTexts: cSipStatsTrafficOptionsOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficOptionsOuts.setDescription('This object reflects the total number of OPTIONS requests sent by the user agent.')
cSipStatsTrafficRegisterIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficRegisterIns.setReference('RFC 2543, Section 4.2.6')
if mibBuilder.loadTexts: cSipStatsTrafficRegisterIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficRegisterIns.setDescription('This object reflects the total number of REGISTER requests received by the user agent since system startup.')
cSipStatsTrafficRegisterOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficRegisterOuts.setReference('RFC 2543, Section 4.2.6')
if mibBuilder.loadTexts: cSipStatsTrafficRegisterOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficRegisterOuts.setDescription('This object reflects the total number of REGISTER requests sent by the user agent since system startup.')
cSipStatsTrafficCometIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficCometIns.setReference('draft-manyfolks-sip-resource-01.txt, Section 5')
if mibBuilder.loadTexts: cSipStatsTrafficCometIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficCometIns.setDescription('This object reflects the total number of COndition MET requests received by the user agent since system startup.')
cSipStatsTrafficCometOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficCometOuts.setReference('draft-manyfolks-sip-resource-01.txt, Section 5')
if mibBuilder.loadTexts: cSipStatsTrafficCometOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficCometOuts.setDescription('This object reflects the total number of COndition MET requests sent by the user agent since system startup.')
cSipStatsTrafficPrackIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficPrackIns.setReference('draft-ietf-sip-100rel-02.txt')
if mibBuilder.loadTexts: cSipStatsTrafficPrackIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficPrackIns.setDescription('This object reflects the total number of PRovisonal ACKnowledgement requests received by the user agent since system startup.')
cSipStatsTrafficPrackOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficPrackOuts.setReference('draft-ietf-sip-100rel-02.txt')
if mibBuilder.loadTexts: cSipStatsTrafficPrackOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficPrackOuts.setDescription('This object reflects the total number of PRovisonal ACKnowledgement requests sent by the user agent since system startup.')
cSipStatsTrafficReferIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficReferIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficReferIns.setDescription('This object reflects the total number of Refer requests received by the user agent since system startup.')
cSipStatsTrafficReferOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficReferOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficReferOuts.setDescription('This object reflects the total number of Refer requests sent by the user agent since system startup.')
cSipStatsTrafficNotifyIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficNotifyIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficNotifyIns.setDescription('This object reflects the total number of Notify requests received by the user agent since system startup.')
cSipStatsTrafficNotifyOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficNotifyOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficNotifyOuts.setDescription('This object reflects the total number of Notify requests sent by the user agent since system startup.')
cSipStatsTrafficInfoIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficInfoIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficInfoIns.setDescription('This object reflects the total number of Info requests received by the user agent since system startup.')
cSipStatsTrafficInfoOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficInfoOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficInfoOuts.setDescription('This object reflects the total number of Info requests sent by the user agent since system startup.')
cSipStatsTrafficSubscribeIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficSubscribeIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficSubscribeIns.setDescription('This object reflects the total number of Subscribe requests received by the user agent since system startup.')
cSipStatsTrafficSubscribeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficSubscribeOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficSubscribeOuts.setDescription('This object reflects the total number of Subscribe requests sent by the user agent since system startup.')
cSipStatsTrafficUpdateIns = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficUpdateIns.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficUpdateIns.setDescription('This object reflects the total number of Update requests received by the user agent since system startup.')
cSipStatsTrafficUpdateOuts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 7, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsTrafficUpdateOuts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsTrafficUpdateOuts.setDescription('This object reflects the total number of Update requests sent by the user agent since system startup.')
cSipStatsRetryInvites = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryInvites.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryInvites.setDescription("This object reflects the total number of INVITE retries that have been sent by the user agent since system startup. If the number of 'first attempt' INVITES is of interest, subtract the value of this object from cSipStatsTrafficInviteOut.")
cSipStatsRetryByes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryByes.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryByes.setDescription('This object reflects the total number of BYE retries that have been sent by the user agent since system startup.')
cSipStatsRetryCancels = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryCancels.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryCancels.setDescription('This object reflects the total number of CANCEL retries that have been sent by the user agent since system startup.')
cSipStatsRetryRegisters = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryRegisters.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryRegisters.setDescription('This object reflects the total number of REGISTER retries that have been sent by the user agent since system startup.')
cSipStatsRetryResponses = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryResponses.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryResponses.setDescription('This object reflects the total number of Response (while expecting a ACK) retries that have been sent by the user agent.')
cSipStatsRetryPracks = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryPracks.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryPracks.setDescription('This object reflects the total number of PRovisional ACKnowledgement retries sent by the user agent since system startup.')
cSipStatsRetryComets = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryComets.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryComets.setDescription('This object reflects the total number of COndition MET retries sent by the user agent since system startup.')
cSipStatsRetryReliable1xxRsps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryReliable1xxRsps.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryReliable1xxRsps.setDescription('This object reflects the total number of Reliable 1xx Response retries sent by the user agent since system startup.')
cSipStatsRetryNotifys = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryNotifys.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryNotifys.setDescription('This object reflects the total number of Notify retries that have been sent by the user agent since system startup.')
cSipStatsRetryRefers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryRefers.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryRefers.setDescription('This object reflects the total number of Refer retries that have been sent by the user agent since system startup.')
cSipStatsRetryInfo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetryInfo.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetryInfo.setDescription('This object reflects the total number of Info retries that have been sent by the user agent since system startup.')
cSipStatsRetrySubscribe = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 8, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsRetrySubscribe.setStatus('current')
if mibBuilder.loadTexts: cSipStatsRetrySubscribe.setDescription('This object reflects the total number of Subscribe retries that have been sent by the user agent since system startup.')
cSipStatsMisc3xxMappedTo4xxRsps = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsMisc3xxMappedTo4xxRsps.setStatus('current')
if mibBuilder.loadTexts: cSipStatsMisc3xxMappedTo4xxRsps.setDescription('This object reflects the total number of incoming Redirect (3xx) response messages that have been mapped to Client Error (4xx) response messages.')
cSipStatsConnTCPSendFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnTCPSendFailures.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnTCPSendFailures.setDescription('This object reflects the total number of TCP send failures since system startup.')
cSipStatsConnUDPSendFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnUDPSendFailures.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnUDPSendFailures.setDescription('This object reflects the total number of UDP send failures since system startup.')
cSipStatsConnTCPRemoteClosures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnTCPRemoteClosures.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnTCPRemoteClosures.setDescription('This object reflects the total number of Remote Closures for TCP since system startup.')
cSipStatsConnUDPCreateFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnUDPCreateFailures.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnUDPCreateFailures.setDescription('This object reflects the total number of connection create failures for UDP since system startup.')
cSipStatsConnTCPCreateFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnTCPCreateFailures.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnTCPCreateFailures.setDescription('This object reflects the total number of connection create failures for TCP since system startup.')
cSipStatsConnUDPInactiveTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnUDPInactiveTimeouts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnUDPInactiveTimeouts.setDescription('This object reflects the total number of UDP connections that timed out due to inactivity since system startup.')
cSipStatsConnTCPInactiveTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsConnTCPInactiveTimeouts.setStatus('current')
if mibBuilder.loadTexts: cSipStatsConnTCPInactiveTimeouts.setDescription('This object reflects the total number of TCP connections that timed out due to inactivity since system startup.')
cSipStatsActiveUDPConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsActiveUDPConnections.setStatus('current')
if mibBuilder.loadTexts: cSipStatsActiveUDPConnections.setDescription('This object reflects the total number of active UDP connections since system startup.')
cSipStatsActiveTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 152, 1, 2, 10, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSipStatsActiveTCPConnections.setStatus('current')
if mibBuilder.loadTexts: cSipStatsActiveTCPConnections.setDescription('This object reflects the total number of active TCP connections since system startup.')
ciscoSipUaMIBNotificationPrefix = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 152, 2))
if mibBuilder.loadTexts: ciscoSipUaMIBNotificationPrefix.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipUaMIBNotificationPrefix.setDescription('Old style notification prefixing. Being replaced by ciscoSipUaMIBNotifs.')
ciscoSipUaMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 9, 9, 152, 2, 0))
if mibBuilder.loadTexts: ciscoSipUaMIBNotifications.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipUaMIBNotifications.setDescription('Old style notification prefixing. Being replaced by ciscoSipUaMIBNotifs.')
ciscoSipUaMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 3))
ciscoSipUaMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1))
ciscoSipUaMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2))
ciscoSipCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 1)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipCompliance = ciscoSipCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: ciscoSipCompliance.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 2)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgPeerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipComplianceRev1 = ciscoSipComplianceRev1.setStatus('obsolete')
if mibBuilder.loadTexts: ciscoSipComplianceRev1.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 3)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgPeerGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgAaaGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipComplianceRev2 = ciscoSipComplianceRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipComplianceRev2.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 4)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgPeerGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgAaaGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatusCauseMapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipComplianceRev3 = ciscoSipComplianceRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipComplianceRev3.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 5)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgPeerGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgAaaGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatusCauseMapGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsMiscGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipBaseIOSConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipComplianceRev4 = ciscoSipComplianceRev4.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipComplianceRev4.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 1, 6)).setObjects(("CISCO-SIP-UA-MIB", "ciscoSipBaseConfigGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsInfoStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsSuccessStatusCodesGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsGlobalStatusCodesGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipTrafficStatsGroupRev3"), ("CISCO-SIP-UA-MIB", "ciscoSipTimerConfigGroupRev4"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryConfigGroupRev4"), ("CISCO-SIP-UA-MIB", "ciscoSipRetryStatsGroupRev4"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsRedirStatusCodesGroupRev2"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsClientStatusCodesGroupRev4"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsServerStatusCodesGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgPeerGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgAaaGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatusCauseMapGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsMiscGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipBaseIOSConfigGroupRev1"), ("CISCO-SIP-UA-MIB", "ciscoSipCfgVoiceServiceVoipGroup"), ("CISCO-SIP-UA-MIB", "ciscoSipStatsConnectionGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipComplianceRev5 = ciscoSipComplianceRev5.setStatus('current')
if mibBuilder.loadTexts: ciscoSipComplianceRev5.setDescription('The compliance statement for SIP user agent entities.')
ciscoSipBaseConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 1)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgUserLocationServerAddr"), ("CISCO-SIP-UA-MIB", "cSipCfgTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseConfigGroup = ciscoSipBaseConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipBaseConfigGroup.setDescription('A collection of objects providing basic SIP User Agent configuration.')
ciscoSipTimerConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 2)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgTimerTrying"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerExpires"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerDisconnect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTimerConfigGroup = ciscoSipTimerConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTimerConfigGroup.setDescription('A collection of objects providing basic SIP User Agent timer configuration.')
ciscoSipRetryConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 3)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgRetryInvite"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryBye"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryCancel"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRegister"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryResponse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryConfigGroup = ciscoSipRetryConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryConfigGroup.setDescription('A collection of objects providing basic SIP User Agent retry configuration.')
ciscoSipStatsInfoStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 4)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsInfoTryingIns"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoTryingOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoRingingIns"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoRingingOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoForwardedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoForwardedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoQueuedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoQueuedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoSessionProgIns"), ("CISCO-SIP-UA-MIB", "cSipStatsInfoSessionProgOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsInfoStatusCodesGroup = ciscoSipStatsInfoStatusCodesGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsInfoStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Informational status code response messages statistics.')
ciscoSipStatsSuccessStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 5)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkIns"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsSuccessStatusCodesGroup = ciscoSipStatsSuccessStatusCodesGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsSuccessStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Success status code response messages statistics.')
ciscoSipStatsRedirStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 6)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRedirMultipleChoices"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedPerms"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedTemps"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirSeeOthers"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirUseProxys"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirAltServices"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsRedirStatusCodesGroup = ciscoSipStatsRedirStatusCodesGroup.setStatus('obsolete')
if mibBuilder.loadTexts: ciscoSipStatsRedirStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Redirection status code response messages statistics.')
ciscoSipStatsClientStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 7)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLengthRequiredIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLengthRequiredOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsClientStatusCodesGroup = ciscoSipStatsClientStatusCodesGroup.setStatus('obsolete')
if mibBuilder.loadTexts: ciscoSipStatsClientStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Client Error status code response messages statistics.')
ciscoSipStatsServerStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 8)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsServerIntErrorIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerIntErrorOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerNotImplementedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerNotImplementedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadGatewayIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadGatewayOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerServiceUnavailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerServiceUnavailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerGatewayTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerGatewayTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadSipVersionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadSipVersionOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsServerStatusCodesGroup = ciscoSipStatsServerStatusCodesGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsServerStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Server Error status code response messages statistics.')
ciscoSipStatsGlobalStatusCodesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 9)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsGlobalBusyEverywhereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalBusyEverywhereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalDeclineIns"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalDeclineOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalNotAnywhereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalNotAnywhereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsGlobalNotAcceptableOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsGlobalStatusCodesGroup = ciscoSipStatsGlobalStatusCodesGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsGlobalStatusCodesGroup.setDescription('A collection of objects providing basic SIP User Agent Global Failure status code response messages statistics.')
ciscoSipTrafficStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 10)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTrafficStatsGroup = ciscoSipTrafficStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTrafficStatsGroup.setDescription('A collection of objects providing basic SIP User Agent inbound and outbound traffic statistics.')
ciscoSipRetryStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 11)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRetryInvites"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryByes"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryCancels"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRegisters"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryStatsGroup = ciscoSipRetryStatsGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryStatsGroup.setDescription('A collection of objects providing basic SIP User Agent retry statistics.')
ciscoSipBaseConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 12)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgUserLocationServerAddr"), ("CISCO-SIP-UA-MIB", "cSipCfgTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgVersion"), ("CISCO-SIP-UA-MIB", "cSipCfgMaxForwards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseConfigGroupRev1 = ciscoSipBaseConfigGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipBaseConfigGroupRev1.setDescription('A collection of objects providing basic SIP User Agent configuration.')
ciscoSipTimerConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 13)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgTimerTrying"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerExpires"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerDisconnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerComet"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerReliableRsp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTimerConfigGroupRev1 = ciscoSipTimerConfigGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTimerConfigGroupRev1.setDescription('A collection of objects providing basic SIP User Agent timer configuration.')
ciscoSipRetryConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 14)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgRetryInvite"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryBye"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryCancel"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRegister"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryResponse"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryComet"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryReliableRsp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryConfigGroupRev1 = ciscoSipRetryConfigGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryConfigGroupRev1.setDescription('A collection of objects providing basic SIP User Agent retry configuration.')
ciscoSipTrafficStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 15)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTrafficStatsGroupRev1 = ciscoSipTrafficStatsGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTrafficStatsGroupRev1.setDescription('A collection of objects providing basic SIP User Agent inbound and outbound traffic statistics.')
ciscoSipStatsServerStatusCodesGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 16)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsServerIntErrorIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerIntErrorOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerNotImplementedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerNotImplementedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadGatewayIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadGatewayOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerServiceUnavailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerServiceUnavailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerGatewayTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerGatewayTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadSipVersionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerBadSipVersionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsServerPrecondFailureIns"), ("CISCO-SIP-UA-MIB", "cSipStatsServerPrecondFailureOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsServerStatusCodesGroupRev1 = ciscoSipStatsServerStatusCodesGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsServerStatusCodesGroupRev1.setDescription('A collection of objects providing basic SIP User Agent Server Error status code response messages statistics.')
ciscoSipRetryStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 17)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRetryInvites"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryByes"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryCancels"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRegisters"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryResponses"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryPracks"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryComets"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryReliable1xxRsps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryStatsGroupRev1 = ciscoSipRetryStatsGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryStatsGroupRev1.setDescription('A collection of objects providing basic SIP User Agent retry statistics.')
ciscoSipStatsClientStatusCodesGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 18)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLengthRequiredIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLengthRequiredOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsClientStatusCodesGroupRev1 = ciscoSipStatsClientStatusCodesGroupRev1.setStatus('obsolete')
if mibBuilder.loadTexts: ciscoSipStatsClientStatusCodesGroupRev1.setDescription('A collection of objects providing basic SIP User Agent Client Error status code response messages statistics.')
ciscoSipCfgPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 19)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgPeerOutSessionTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerReliable1xxRspStr"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerReliable1xxRspHdr"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerUrlType"), ("CISCO-SIP-UA-MIB", "cSipCfgOutSessionTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgReliable1xxRspStr"), ("CISCO-SIP-UA-MIB", "cSipCfgReliable1xxRspHdr"), ("CISCO-SIP-UA-MIB", "cSipCfgUrlType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipCfgPeerGroup = ciscoSipCfgPeerGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipCfgPeerGroup.setDescription('A collection of objects providing SIP related configuration of Dial Peers.')
ciscoSipBaseConfigGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 20)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgUserLocationServerAddr"), ("CISCO-SIP-UA-MIB", "cSipCfgTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgVersion"), ("CISCO-SIP-UA-MIB", "cSipCfgMaxForwards"), ("CISCO-SIP-UA-MIB", "cSipCfgBindSrcAddrInterface"), ("CISCO-SIP-UA-MIB", "cSipCfgBindSrcAddrScope"), ("CISCO-SIP-UA-MIB", "cSipCfgDnsSrvQueryStringFormat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseConfigGroupRev2 = ciscoSipBaseConfigGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipBaseConfigGroupRev2.setDescription('A collection of objects providing basic SIP User Agent configuration.')
ciscoSipStatusCauseMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 21)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgPstnCause"), ("CISCO-SIP-UA-MIB", "cSipCfgStatusCauseStoreStatus"), ("CISCO-SIP-UA-MIB", "cSipCfgStatusCode"), ("CISCO-SIP-UA-MIB", "cSipCfgCauseStatusStoreStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatusCauseMapGroup = ciscoSipStatusCauseMapGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatusCauseMapGroup.setDescription('A collection of objects providing SIP status code to PSTN cause code mapping configuration.')
ciscoSipTrafficStatsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 22)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficReferIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficReferOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficNotifyIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficNotifyOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInfoIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInfoOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficSubscribeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficSubscribeOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTrafficStatsGroupRev2 = ciscoSipTrafficStatsGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTrafficStatsGroupRev2.setDescription('A collection of objects providing basic SIP User Agent inbound and outbound traffic statistics.')
ciscoSipStatsSuccessStatusCodesGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 23)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkIns"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessAcceptedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessAcceptedOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsSuccessStatusCodesGroupRev1 = ciscoSipStatsSuccessStatusCodesGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsSuccessStatusCodesGroupRev1.setDescription('A collection of objects providing basic SIP User Agent Success status code response messages statistics.')
ciscoSipTimerConfigGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 24)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgTimerTrying"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerExpires"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerDisconnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerComet"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTimerConfigGroupRev2 = ciscoSipTimerConfigGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTimerConfigGroupRev2.setDescription('A collection of objects providing basic SIP User Agent timer configuration.')
ciscoSipRetryConfigGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 25)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgRetryInvite"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryBye"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryCancel"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRegister"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryResponse"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryComet"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryConfigGroupRev2 = ciscoSipRetryConfigGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryConfigGroupRev2.setDescription('A collection of objects providing basic SIP User Agent retry configuration.')
ciscoSipRetryStatsGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 26)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRetryInvites"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryByes"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryCancels"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRegisters"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryResponses"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryPracks"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryComets"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryReliable1xxRsps"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryNotifys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryStatsGroupRev2 = ciscoSipRetryStatsGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryStatsGroupRev2.setDescription('A collection of objects providing basic SIP User Agent retry statistics.')
ciscoSipCfgAaaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 27)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgAaaUsername"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipCfgAaaGroup = ciscoSipCfgAaaGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipCfgAaaGroup.setDescription('A collection of objects providing SIP related configuration for AAA.')
ciscoSipStatsClientStatusCodesGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 28)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsClientStatusCodesGroupRev2 = ciscoSipStatsClientStatusCodesGroupRev2.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsClientStatusCodesGroupRev2.setDescription('A collection of objects providing basic SIP User Agent Client Error status code response messages statistics.')
ciscoSipStatsRedirStatusCodesGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 29)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRedirMultipleChoices"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedPerms"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedTemps"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirUseProxys"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirAltServices"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsRedirStatusCodesGroupRev1 = ciscoSipStatsRedirStatusCodesGroupRev1.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsRedirStatusCodesGroupRev1.setDescription('A collection of objects providing basic SIP User Agent Redirection status code response messages statistics.')
ciscoSipTimerConfigGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 30)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgTimerTrying"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerExpires"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerDisconnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerComet"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerNotify"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerRefer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTimerConfigGroupRev3 = ciscoSipTimerConfigGroupRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipTimerConfigGroupRev3.setDescription('A collection of objects providing basic SIP User Agent timer configuration.')
ciscoSipRetryConfigGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 31)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgRetryInvite"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryBye"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryCancel"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRegister"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryResponse"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryComet"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryNotify"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRefer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryConfigGroupRev3 = ciscoSipRetryConfigGroupRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryConfigGroupRev3.setDescription('A collection of objects providing basic SIP User Agent retry configuration.')
ciscoSipRetryStatsGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 32)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRetryInvites"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryByes"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryCancels"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRegisters"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryResponses"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryPracks"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryComets"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryReliable1xxRsps"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryNotifys"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRefers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryStatsGroupRev3 = ciscoSipRetryStatsGroupRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipRetryStatsGroupRev3.setDescription('A collection of objects providing basic SIP User Agent retry statistics.')
ciscoSipStatsSuccessStatusCodesGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 33)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsSuccessAcceptedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessAcceptedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkInbounds"), ("CISCO-SIP-UA-MIB", "cSipStatsSuccessOkOutbounds"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsSuccessStatusCodesGroupRev2 = ciscoSipStatsSuccessStatusCodesGroupRev2.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsSuccessStatusCodesGroupRev2.setDescription('A collection of objects providing basic SIP User Agent Success status code response messages statistics.')
ciscoSipBaseConfigGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 34)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgUserLocationServerAddr"), ("CISCO-SIP-UA-MIB", "cSipCfgTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseConfigGroupRev3 = ciscoSipBaseConfigGroupRev3.setStatus('current')
if mibBuilder.loadTexts: ciscoSipBaseConfigGroupRev3.setDescription('A collection of objects providing basic SIP User Agent configuration.')
ciscoSipStatsClientStatusCodesGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 35)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientSTTooSmallIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientSTTooSmallOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsClientStatusCodesGroupRev3 = ciscoSipStatsClientStatusCodesGroupRev3.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipStatsClientStatusCodesGroupRev3.setDescription('A collection of objects providing basic SIP User Agent Client Error status code response messages statistics.')
ciscoSipStatsMiscGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 36)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsMisc3xxMappedTo4xxRsps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsMiscGroup = ciscoSipStatsMiscGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsMiscGroup.setDescription('A collection of objects providing miscellaneous SIP User Agent statistics.')
ciscoSipBaseIOSConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 37)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgMaxForwards"), ("CISCO-SIP-UA-MIB", "cSipCfgBindSrcAddrInterface"), ("CISCO-SIP-UA-MIB", "cSipCfgBindSrcAddrScope"), ("CISCO-SIP-UA-MIB", "cSipCfgDnsSrvQueryStringFormat"), ("CISCO-SIP-UA-MIB", "cSipCfgRedirectionDisabled"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerSessionTimer"), ("CISCO-SIP-UA-MIB", "cSipCfgEarlyMediaCutThruDisabled"), ("CISCO-SIP-UA-MIB", "cSipCfgSymNatEnabled"), ("CISCO-SIP-UA-MIB", "cSipCfgSymNatDirectionRole"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseIOSConfigGroup = ciscoSipBaseIOSConfigGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoSipBaseIOSConfigGroup.setDescription('A collection of objects providing basic SIP User Agent configuration for SIP user agents in IOS.')
ciscoSipTrafficStatsGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 38)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInviteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficAckOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficByeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCancelOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficOptionsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficRegisterOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficCometOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficPrackOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficReferIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficReferOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficNotifyIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficNotifyOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInfoIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficInfoOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficSubscribeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficSubscribeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficUpdateIns"), ("CISCO-SIP-UA-MIB", "cSipStatsTrafficUpdateOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTrafficStatsGroupRev3 = ciscoSipTrafficStatsGroupRev3.setStatus('current')
if mibBuilder.loadTexts: ciscoSipTrafficStatsGroupRev3.setDescription('A collection of objects providing basic SIP User Agent inbound and outbound traffic statistics.')
ciscoSipStatsRedirStatusCodesGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 39)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRedirMultipleChoices"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedPerms"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirUseProxys"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirAltServices"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedTempsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsRedirMovedTempsOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsRedirStatusCodesGroupRev2 = ciscoSipStatsRedirStatusCodesGroupRev2.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsRedirStatusCodesGroupRev2.setDescription('A collection of objects providing basic SIP User Agent Redirection status code response messages statistics.')
ciscoSipTimerConfigGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 40)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgTimerTrying"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerExpires"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerDisconnect"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerComet"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerNotify"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerRefer"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerHold"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerInfo"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerConnectionAging"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerBufferInvite"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipTimerConfigGroupRev4 = ciscoSipTimerConfigGroupRev4.setStatus('current')
if mibBuilder.loadTexts: ciscoSipTimerConfigGroupRev4.setDescription('A collection of objects providing basic SIP User Agent timer configuration.')
ciscoSipRetryStatsGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 41)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsRetryInvites"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryByes"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryCancels"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRegisters"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryResponses"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryPracks"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryComets"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryReliable1xxRsps"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryNotifys"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryRefers"), ("CISCO-SIP-UA-MIB", "cSipStatsRetryInfo"), ("CISCO-SIP-UA-MIB", "cSipStatsRetrySubscribe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryStatsGroupRev4 = ciscoSipRetryStatsGroupRev4.setStatus('current')
if mibBuilder.loadTexts: ciscoSipRetryStatsGroupRev4.setDescription('A collection of objects providing basic SIP User Agent retry statistics.')
ciscoSipBaseIOSConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 42)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgMaximumForwards"), ("CISCO-SIP-UA-MIB", "cSipCfgDnsSrvQueryStringFormat"), ("CISCO-SIP-UA-MIB", "cSipCfgRedirectionDisabled"), ("CISCO-SIP-UA-MIB", "cSipCfgTimerSessionTimer"), ("CISCO-SIP-UA-MIB", "cSipCfgEarlyMediaCutThruDisabled"), ("CISCO-SIP-UA-MIB", "cSipCfgSymNatEnabled"), ("CISCO-SIP-UA-MIB", "cSipCfgSymNatDirectionRole"), ("CISCO-SIP-UA-MIB", "cSipCfgBindSourceAddrInterface"), ("CISCO-SIP-UA-MIB", "cSipCfgSuspendResumeEnabled"), ("CISCO-SIP-UA-MIB", "cSipCfgOfferCallHold"), ("CISCO-SIP-UA-MIB", "cSipCfgReasonHeaderOveride"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipBaseIOSConfigGroupRev1 = ciscoSipBaseIOSConfigGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoSipBaseIOSConfigGroupRev1.setDescription('A collection of objects providing basic SIP User Agent configuration for SIP user agents in IOS.')
ciscoSipStatsClientStatusCodesGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 43)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadRequestOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientUnauthorizedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientPaymentReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientForbiddenOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotFoundOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientMethNotAllowedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNotAcceptableOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientProxyAuthReqdOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTimeoutOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientConflictOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientGoneOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqEntTooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqURITooLargeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoSupMediaTypeOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadExtensionOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTempNotAvailOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientCallLegNoExistOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientLoopDetectedOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientTooManyHopsOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAddrIncompleteOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientAmbiguousOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBusyHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqTermOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientNoAcceptHereOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientBadEventOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientSTTooSmallIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientSTTooSmallOuts"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqPendingIns"), ("CISCO-SIP-UA-MIB", "cSipStatsClientReqPendingOuts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsClientStatusCodesGroupRev4 = ciscoSipStatsClientStatusCodesGroupRev4.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsClientStatusCodesGroupRev4.setDescription('A collection of objects providing basic SIP User Agent Client Error status code response messages statistics.')
ciscoSipRetryConfigGroupRev4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 44)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgRetryInvite"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryBye"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryCancel"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRegister"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryResponse"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryPrack"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryComet"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryReliableRsp"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryNotify"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryRefer"), ("CISCO-SIP-UA-MIB", "cSipCfgRetryInfo"), ("CISCO-SIP-UA-MIB", "cSipCfgRetrySubscribe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipRetryConfigGroupRev4 = ciscoSipRetryConfigGroupRev4.setStatus('current')
if mibBuilder.loadTexts: ciscoSipRetryConfigGroupRev4.setDescription('A collection of objects providing basic SIP User Agent retry configuration.')
ciscoSipCfgPeerGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 45)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgPeerOutSessionTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerReliable1xxRspStr"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerReliable1xxRspHdr"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerUrlType"), ("CISCO-SIP-UA-MIB", "cSipCfgOutSessionTransport"), ("CISCO-SIP-UA-MIB", "cSipCfgReliable1xxRspStr"), ("CISCO-SIP-UA-MIB", "cSipCfgReliable1xxRspHdr"), ("CISCO-SIP-UA-MIB", "cSipCfgUrlType"), ("CISCO-SIP-UA-MIB", "cSipCfgPeerSwitchTransEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipCfgPeerGroupRev1 = ciscoSipCfgPeerGroupRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoSipCfgPeerGroupRev1.setDescription('A collection of objects providing SIP related configuration of Dial Peers.')
ciscoSipCfgVoiceServiceVoipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 46)).setObjects(("CISCO-SIP-UA-MIB", "cSipCfgHeaderPassingEnabled"), ("CISCO-SIP-UA-MIB", "cSipCfgMaxSubscriptionAccept"), ("CISCO-SIP-UA-MIB", "cSipCfgMaxSubscriptionOriginate"), ("CISCO-SIP-UA-MIB", "cSipCfgSwitchTransportEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipCfgVoiceServiceVoipGroup = ciscoSipCfgVoiceServiceVoipGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipCfgVoiceServiceVoipGroup.setDescription('A collection of objects providing SIP related configuration of Voice Service VoIP.')
ciscoSipStatsConnectionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 152, 3, 2, 47)).setObjects(("CISCO-SIP-UA-MIB", "cSipStatsConnTCPSendFailures"), ("CISCO-SIP-UA-MIB", "cSipStatsConnUDPSendFailures"), ("CISCO-SIP-UA-MIB", "cSipStatsConnTCPRemoteClosures"), ("CISCO-SIP-UA-MIB", "cSipStatsConnUDPCreateFailures"), ("CISCO-SIP-UA-MIB", "cSipStatsConnTCPCreateFailures"), ("CISCO-SIP-UA-MIB", "cSipStatsConnUDPInactiveTimeouts"), ("CISCO-SIP-UA-MIB", "cSipStatsConnTCPInactiveTimeouts"), ("CISCO-SIP-UA-MIB", "cSipStatsActiveUDPConnections"), ("CISCO-SIP-UA-MIB", "cSipStatsActiveTCPConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSipStatsConnectionGroup = ciscoSipStatsConnectionGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoSipStatsConnectionGroup.setDescription('A collection of objects providing basic SIP User Agent Transport Connection statistics.')
mibBuilder.exportSymbols("CISCO-SIP-UA-MIB", ciscoSipTimerConfigGroup=ciscoSipTimerConfigGroup, ciscoSipCfgPeerGroup=ciscoSipCfgPeerGroup, cSipCfgSwitchTransportEnabled=cSipCfgSwitchTransportEnabled, cSipStatsInfoForwardedIns=cSipStatsInfoForwardedIns, ciscoSipUaMIBCompliances=ciscoSipUaMIBCompliances, ciscoSipComplianceRev5=ciscoSipComplianceRev5, cSipCfgSymNatEnabled=cSipCfgSymNatEnabled, ciscoSipBaseConfigGroup=ciscoSipBaseConfigGroup, cSipStatsClientBadRequestIns=cSipStatsClientBadRequestIns, cSipStatsMisc=cSipStatsMisc, cSipStatsConnUDPCreateFailures=cSipStatsConnUDPCreateFailures, cSipStatsRetrySubscribe=cSipStatsRetrySubscribe, ciscoSipComplianceRev3=ciscoSipComplianceRev3, ciscoSipBaseIOSConfigGroupRev1=ciscoSipBaseIOSConfigGroupRev1, cSipCfgReliable1xxRspStr=cSipCfgReliable1xxRspStr, ciscoSipComplianceRev4=ciscoSipComplianceRev4, cSipCfgCauseStatusEntry=cSipCfgCauseStatusEntry, cSipStatsClientLengthRequiredIns=cSipStatsClientLengthRequiredIns, cSipStatsTrafficCometIns=cSipStatsTrafficCometIns, cSipStatsClientNoAcceptHereOuts=cSipStatsClientNoAcceptHereOuts, ciscoSipTrafficStatsGroupRev1=ciscoSipTrafficStatsGroupRev1, cSipStatsErrServer=cSipStatsErrServer, cSipCfgPeerReliable1xxRspHdr=cSipCfgPeerReliable1xxRspHdr, cSipStatsTrafficUpdateOuts=cSipStatsTrafficUpdateOuts, ciscoSipTrafficStatsGroupRev2=ciscoSipTrafficStatsGroupRev2, cSipStatsClientReqPendingOuts=cSipStatsClientReqPendingOuts, cSipStatsConnection=cSipStatsConnection, cSipStatsTrafficRegisterOuts=cSipStatsTrafficRegisterOuts, cSipCfgBase=cSipCfgBase, PYSNMP_MODULE_ID=ciscoSipUaMIB, ciscoSipRetryStatsGroupRev3=ciscoSipRetryStatsGroupRev3, cSipStatsConnTCPSendFailures=cSipStatsConnTCPSendFailures, cSipStatsTrafficNotifyOuts=cSipStatsTrafficNotifyOuts, cSipStatsClientLoopDetectedOuts=cSipStatsClientLoopDetectedOuts, ciscoSipStatsRedirStatusCodesGroupRev1=ciscoSipStatsRedirStatusCodesGroupRev1, cSipStatsClientBadEventIns=cSipStatsClientBadEventIns, cSipCfgEarlyMediaStatusCodeIndex=cSipCfgEarlyMediaStatusCodeIndex, cSipStatsGlobalNotAnywhereIns=cSipStatsGlobalNotAnywhereIns, cSipStatsClientNotFoundIns=cSipStatsClientNotFoundIns, cSipStatsClientLengthRequiredOuts=cSipStatsClientLengthRequiredOuts, cSipStatsActiveTCPConnections=cSipStatsActiveTCPConnections, ciscoSipStatsConnectionGroup=ciscoSipStatsConnectionGroup, cSipCfgMaxSubscriptionOriginate=cSipCfgMaxSubscriptionOriginate, cSipStatsRetryInvites=cSipStatsRetryInvites, cSipCfgTimerReliableRsp=cSipCfgTimerReliableRsp, cSipStatsClientConflictOuts=cSipStatsClientConflictOuts, cSipStatsClientTempNotAvailIns=cSipStatsClientTempNotAvailIns, ciscoSipRetryConfigGroupRev2=ciscoSipRetryConfigGroupRev2, cSipStatsServerGatewayTimeoutIns=cSipStatsServerGatewayTimeoutIns, ciscoSipTrafficStatsGroup=ciscoSipTrafficStatsGroup, cSipStatsTrafficCancelOuts=cSipStatsTrafficCancelOuts, cSipCfgDnsSrvQueryStringFormat=cSipCfgDnsSrvQueryStringFormat, cSipStatsRetryReliable1xxRsps=cSipStatsRetryReliable1xxRsps, cSipCfgTimer=cSipCfgTimer, cSipCfgRetryComet=cSipCfgRetryComet, cSipStatsClientBadExtensionOuts=cSipStatsClientBadExtensionOuts, cSipStatsServerBadSipVersionIns=cSipStatsServerBadSipVersionIns, cSipStatsClientReqTimeoutOuts=cSipStatsClientReqTimeoutOuts, cSipCfgRedirectionDisabled=cSipCfgRedirectionDisabled, cSipStatsRedirAltServices=cSipStatsRedirAltServices, cSipStatsClientMethNotAllowedOuts=cSipStatsClientMethNotAllowedOuts, cSipStatsClientNotFoundOuts=cSipStatsClientNotFoundOuts, ciscoSipStatsClientStatusCodesGroupRev4=ciscoSipStatsClientStatusCodesGroupRev4, cSipStatsClientTooManyHopsOuts=cSipStatsClientTooManyHopsOuts, cSipStatsInfoTryingIns=cSipStatsInfoTryingIns, cSipStatsClientBadRequestOuts=cSipStatsClientBadRequestOuts, cSipCfgTimerComet=cSipCfgTimerComet, cSipCfgRetry=cSipCfgRetry, cSipStatsServerIntErrorOuts=cSipStatsServerIntErrorOuts, cSipCfgCauseStatusTable=cSipCfgCauseStatusTable, cSipStatsClientUnauthorizedIns=cSipStatsClientUnauthorizedIns, cSipStatsActiveUDPConnections=cSipStatsActiveUDPConnections, cSipStatsTrafficByeOuts=cSipStatsTrafficByeOuts, ciscoSipStatsSuccessStatusCodesGroupRev2=ciscoSipStatsSuccessStatusCodesGroupRev2, cSipStatsRedirect=cSipStatsRedirect, cSipStatsServerPrecondFailureIns=cSipStatsServerPrecondFailureIns, cSipCfgSuspendResumeEnabled=cSipCfgSuspendResumeEnabled, cSipCfgOutSessionTransport=cSipCfgOutSessionTransport, cSipStatsRetry=cSipStatsRetry, cSipStatsClientNoSupMediaTypeOuts=cSipStatsClientNoSupMediaTypeOuts, cSipCfgPeerOutSessionTransport=cSipCfgPeerOutSessionTransport, CSipStatusCode=CSipStatusCode, cSipCfgRetryResponse=cSipCfgRetryResponse, cSipStatsGlobalBusyEverywhereIns=cSipStatsGlobalBusyEverywhereIns, ciscoSipStatsRedirStatusCodesGroupRev2=ciscoSipStatsRedirStatusCodesGroupRev2, cSipStatsClientAddrIncompleteIns=cSipStatsClientAddrIncompleteIns, cSipStatsMisc3xxMappedTo4xxRsps=cSipStatsMisc3xxMappedTo4xxRsps, ciscoSipTimerConfigGroupRev2=ciscoSipTimerConfigGroupRev2, cSipStatsInfoTryingOuts=cSipStatsInfoTryingOuts, cSipStatsTrafficOptionsOuts=cSipStatsTrafficOptionsOuts, cSipCfgEarlyMediaTable=cSipCfgEarlyMediaTable, cSipCfgUserLocationServerAddr=cSipCfgUserLocationServerAddr, cSipStatsTrafficPrackIns=cSipStatsTrafficPrackIns, ciscoSipRetryConfigGroupRev3=ciscoSipRetryConfigGroupRev3, cSipStats=cSipStats, cSipCfgTimerDisconnect=cSipCfgTimerDisconnect, ciscoSipBaseConfigGroupRev1=ciscoSipBaseConfigGroupRev1, cSipStatsSuccess=cSipStatsSuccess, cSipCfgPeerReliable1xxRspStr=cSipCfgPeerReliable1xxRspStr, ciscoSipRetryConfigGroup=ciscoSipRetryConfigGroup, cSipCfgStatusCauseMap=cSipCfgStatusCauseMap, cSipStatsGlobalNotAcceptableIns=cSipStatsGlobalNotAcceptableIns, ciscoSipStatsGlobalStatusCodesGroup=ciscoSipStatsGlobalStatusCodesGroup, cSipStatsTrafficOptionsIns=cSipStatsTrafficOptionsIns, ciscoSipStatsInfoStatusCodesGroup=ciscoSipStatsInfoStatusCodesGroup, ciscoSipUaMIB=ciscoSipUaMIB, cSipStatsClientCallLegNoExistOuts=cSipStatsClientCallLegNoExistOuts, cSipStatsGlobalDeclineOuts=cSipStatsGlobalDeclineOuts, cSipStatsRedirUseProxys=cSipStatsRedirUseProxys, ciscoSipStatsServerStatusCodesGroup=ciscoSipStatsServerStatusCodesGroup, cSipStatsRetryRefers=cSipStatsRetryRefers, cSipStatsClientConflictIns=cSipStatsClientConflictIns, cSipCfgTimerConnectionAging=cSipCfgTimerConnectionAging, cSipStatsClientTooManyHopsIns=cSipStatsClientTooManyHopsIns, cSipCfgRetryRegister=cSipCfgRetryRegister, cSipStatsSuccessOkOuts=cSipStatsSuccessOkOuts, cSipStatsInfoQueuedOuts=cSipStatsInfoQueuedOuts, cSipStatsClientReqTimeoutIns=cSipStatsClientReqTimeoutIns, ciscoSipStatsClientStatusCodesGroupRev2=ciscoSipStatsClientStatusCodesGroupRev2, ciscoSipCompliance=ciscoSipCompliance, cSipStatsTrafficNotifyIns=cSipStatsTrafficNotifyIns, cSipStatsTrafficUpdateIns=cSipStatsTrafficUpdateIns, cSipStatsClientGoneOuts=cSipStatsClientGoneOuts, cSipCfgBindSrcAddrScope=cSipCfgBindSrcAddrScope, ciscoSipUaMIBNotificationPrefix=ciscoSipUaMIBNotificationPrefix, cSipCfgBindSrcAddrInterface=cSipCfgBindSrcAddrInterface, cSipCfgStatusCauseEntry=cSipCfgStatusCauseEntry, cSipStatsClientBusyHereIns=cSipStatsClientBusyHereIns, cSipCfgRetryInfo=cSipCfgRetryInfo, ciscoSipUaMIBGroups=ciscoSipUaMIBGroups, cSipCfgStatusCode=cSipCfgStatusCode, cSipStatsServerPrecondFailureOuts=cSipStatsServerPrecondFailureOuts, ciscoSipBaseIOSConfigGroup=ciscoSipBaseIOSConfigGroup, cSipCfgVoiceServiceVoip=cSipCfgVoiceServiceVoip, cSipStatsInfoRingingOuts=cSipStatsInfoRingingOuts, cSipStatsTrafficInfoOuts=cSipStatsTrafficInfoOuts, cSipStatsClientAmbiguousOuts=cSipStatsClientAmbiguousOuts, cSipCfgTimerTrying=cSipCfgTimerTrying, cSipStatsConnTCPInactiveTimeouts=cSipStatsConnTCPInactiveTimeouts, cSipCfgTimerConnect=cSipCfgTimerConnect, cSipStatsSuccessOkInbounds=cSipStatsSuccessOkInbounds, cSipCfgEarlyMediaCutThruDisabled=cSipCfgEarlyMediaCutThruDisabled, cSipStatsConnTCPCreateFailures=cSipStatsConnTCPCreateFailures, cSipStatsServerNotImplementedIns=cSipStatsServerNotImplementedIns, cSipStatsRetryInfo=cSipStatsRetryInfo, cSipStatsRetryCancels=cSipStatsRetryCancels, ciscoSipTrafficStatsGroupRev3=ciscoSipTrafficStatsGroupRev3, ciscoSipStatsRedirStatusCodesGroup=ciscoSipStatsRedirStatusCodesGroup, cSipStatsInfoSessionProgOuts=cSipStatsInfoSessionProgOuts, cSipStatsClientBadExtensionIns=cSipStatsClientBadExtensionIns, ciscoSipTimerConfigGroupRev1=ciscoSipTimerConfigGroupRev1, cSipStatsInfoSessionProgIns=cSipStatsInfoSessionProgIns, cSipStatsRetryRegisters=cSipStatsRetryRegisters, cSipCfgTimerSessionTimer=cSipCfgTimerSessionTimer, cSipStatsClientGoneIns=cSipStatsClientGoneIns, cSipStatsRetryResponses=cSipStatsRetryResponses, cSipStatsRedirSeeOthers=cSipStatsRedirSeeOthers, cSipStatsServerBadSipVersionOuts=cSipStatsServerBadSipVersionOuts, cSipCfgBindSourceAddrInterface=cSipCfgBindSourceAddrInterface, ciscoSipUaMIBNotifications=ciscoSipUaMIBNotifications, cSipCfgReasonHeaderOveride=cSipCfgReasonHeaderOveride, cSipStatsTrafficRegisterIns=cSipStatsTrafficRegisterIns, cSipCfgPeer=cSipCfgPeer, CSipMethodStr=CSipMethodStr, ciscoSipUaMIBObjects=ciscoSipUaMIBObjects, cSipStatsSuccessAcceptedIns=cSipStatsSuccessAcceptedIns, cSipCfgStatusCauseTable=cSipCfgStatusCauseTable, cSipCfgTimerExpires=cSipCfgTimerExpires, cSipStatsClientSTTooSmallOuts=cSipStatsClientSTTooSmallOuts, cSipStatsSuccessAcceptedOuts=cSipStatsSuccessAcceptedOuts, cSipCfgTimerHold=cSipCfgTimerHold, cSipStatsConnTCPRemoteClosures=cSipStatsConnTCPRemoteClosures, cSipCfgTimerInfo=cSipCfgTimerInfo, cSipCfgRetrySubscribe=cSipCfgRetrySubscribe, cSipStatsSuccessOkIns=cSipStatsSuccessOkIns, cSipStatsTrafficInviteIns=cSipStatsTrafficInviteIns, cSipStatsClientReqPendingIns=cSipStatsClientReqPendingIns, cSipStatsRedirMovedTempsOuts=cSipStatsRedirMovedTempsOuts, cSipStatsClientForbiddenOuts=cSipStatsClientForbiddenOuts, cSipCfgOfferCallHold=cSipCfgOfferCallHold, cSipStatsRetryComets=cSipStatsRetryComets, cSipStatsTrafficReferOuts=cSipStatsTrafficReferOuts, cSipStatsClientAmbiguousIns=cSipStatsClientAmbiguousIns, cSipStatsInfoQueuedIns=cSipStatsInfoQueuedIns, cSipStatsClientProxyAuthReqdOuts=cSipStatsClientProxyAuthReqdOuts, cSipStatsServerBadGatewayIns=cSipStatsServerBadGatewayIns, cSipStatsClientReqTermIns=cSipStatsClientReqTermIns, cSipStatsTrafficByeIns=cSipStatsTrafficByeIns, cSipStatsGlobalNotAnywhereOuts=cSipStatsGlobalNotAnywhereOuts, cSipCfgPeerTable=cSipCfgPeerTable, cSipStatsTrafficAckIns=cSipStatsTrafficAckIns, cSipCfg=cSipCfg, cSipStatsGlobalNotAcceptableOuts=cSipStatsGlobalNotAcceptableOuts, cSipStatsTrafficSubscribeOuts=cSipStatsTrafficSubscribeOuts, cSipCfgPeerEntry=cSipCfgPeerEntry, cSipCfgUrlType=cSipCfgUrlType, cSipCfgHeaderPassingEnabled=cSipCfgHeaderPassingEnabled, cSipStatsClientPaymentReqdIns=cSipStatsClientPaymentReqdIns, cSipCfgPeerIndex=cSipCfgPeerIndex, cSipCfgMaximumForwards=cSipCfgMaximumForwards, ciscoSipStatsClientStatusCodesGroupRev1=ciscoSipStatsClientStatusCodesGroupRev1, cSipCfgRetryRefer=cSipCfgRetryRefer, cSipStatsRedirMovedPerms=cSipStatsRedirMovedPerms, cSipStatsSuccessOkTable=cSipStatsSuccessOkTable, ciscoSipStatsSuccessStatusCodesGroup=ciscoSipStatsSuccessStatusCodesGroup, cSipStatsClientForbiddenIns=cSipStatsClientForbiddenIns, cSipStatsErrClient=cSipStatsErrClient, cSipCfgStatusCodeIndex=cSipCfgStatusCodeIndex, cSipCfgPeerUrlType=cSipCfgPeerUrlType, cSipStatsClientReqURITooLargeOuts=cSipStatsClientReqURITooLargeOuts, cSipCfgTimerPrack=cSipCfgTimerPrack, cSipStatsClientNoSupMediaTypeIns=cSipStatsClientNoSupMediaTypeIns, cSipStatsClientReqEntTooLargeIns=cSipStatsClientReqEntTooLargeIns, ciscoSipStatsServerStatusCodesGroupRev1=ciscoSipStatsServerStatusCodesGroupRev1, cSipStatsClientBusyHereOuts=cSipStatsClientBusyHereOuts, cSipCfgMaxSubscriptionAccept=cSipCfgMaxSubscriptionAccept, cSipStatsClientNoAcceptHereIns=cSipStatsClientNoAcceptHereIns, cSipCfgCauseStatusStoreStatus=cSipCfgCauseStatusStoreStatus, ciscoSipRetryStatsGroupRev2=ciscoSipRetryStatsGroupRev2, cSipStatsGlobalFail=cSipStatsGlobalFail, cSipCfgPstnCause=cSipCfgPstnCause, cSipCfgAaa=cSipCfgAaa, cSipStatsClientSTTooSmallIns=cSipStatsClientSTTooSmallIns, cSipCfgRetryBye=cSipCfgRetryBye, cSipCfgBindSourceAddrScope=cSipCfgBindSourceAddrScope, ciscoSipStatsClientStatusCodesGroup=ciscoSipStatsClientStatusCodesGroup, ciscoSipStatsSuccessStatusCodesGroupRev1=ciscoSipStatsSuccessStatusCodesGroupRev1, cSipStatsClientNotAcceptableOuts=cSipStatsClientNotAcceptableOuts, cSipStatsTrafficCometOuts=cSipStatsTrafficCometOuts, cSipStatsClientBadEventOuts=cSipStatsClientBadEventOuts, cSipStatsServerBadGatewayOuts=cSipStatsServerBadGatewayOuts, ciscoSipRetryStatsGroupRev4=ciscoSipRetryStatsGroupRev4, ciscoSipStatsClientStatusCodesGroupRev3=ciscoSipStatsClientStatusCodesGroupRev3, cSipCfgReliable1xxRspHdr=cSipCfgReliable1xxRspHdr, cSipCfgVersion=cSipCfgVersion, cSipStatsSuccessOkEntry=cSipStatsSuccessOkEntry, cSipStatsServerGatewayTimeoutOuts=cSipStatsServerGatewayTimeoutOuts, ciscoSipRetryConfigGroupRev4=ciscoSipRetryConfigGroupRev4, cSipCfgTimerNotify=cSipCfgTimerNotify, cSipCfgPstnCauseIndex=cSipCfgPstnCauseIndex, cSipStatsInfoForwardedOuts=cSipStatsInfoForwardedOuts, cSipStatsClientProxyAuthReqdIns=cSipStatsClientProxyAuthReqdIns, cSipCfgRetryReliableRsp=cSipCfgRetryReliableRsp, cSipCfgBindSourceAddrTable=cSipCfgBindSourceAddrTable, cSipCfgStatusCauseStoreStatus=cSipCfgStatusCauseStoreStatus, ciscoSipRetryConfigGroupRev1=ciscoSipRetryConfigGroupRev1, ciscoSipCfgVoiceServiceVoipGroup=ciscoSipCfgVoiceServiceVoipGroup, ciscoSipUaMIBConformance=ciscoSipUaMIBConformance, cSipCfgAaaUsername=cSipCfgAaaUsername, cSipStatsRedirMovedTemps=cSipStatsRedirMovedTemps, cSipStatsInfo=cSipStatsInfo, cSipStatsGlobalBusyEverywhereOuts=cSipStatsGlobalBusyEverywhereOuts, cSipStatsServerIntErrorIns=cSipStatsServerIntErrorIns, cSipStatsGlobalDeclineIns=cSipStatsGlobalDeclineIns)
mibBuilder.exportSymbols("CISCO-SIP-UA-MIB", cSipStatsClientReqURITooLargeIns=cSipStatsClientReqURITooLargeIns, ciscoSipRetryStatsGroupRev1=ciscoSipRetryStatsGroupRev1, cSipStatsClientLoopDetectedIns=cSipStatsClientLoopDetectedIns, cSipCfgPeerSwitchTransEnabled=cSipCfgPeerSwitchTransEnabled, cSipCfgRetryNotify=cSipCfgRetryNotify, ciscoSipUaMIBNotifs=ciscoSipUaMIBNotifs, cSipStatsTrafficInfoIns=cSipStatsTrafficInfoIns, cSipStatsClientPaymentReqdOuts=cSipStatsClientPaymentReqdOuts, cSipStatsConnUDPInactiveTimeouts=cSipStatsConnUDPInactiveTimeouts, cSipStatsServerServiceUnavailIns=cSipStatsServerServiceUnavailIns, cSipStatsTrafficCancelIns=cSipStatsTrafficCancelIns, ciscoSipBaseConfigGroupRev2=ciscoSipBaseConfigGroupRev2, cSipStatsServerServiceUnavailOuts=cSipStatsServerServiceUnavailOuts, cSipStatsClientReqEntTooLargeOuts=cSipStatsClientReqEntTooLargeOuts, cSipCfgSymNatDirectionRole=cSipCfgSymNatDirectionRole, cSipStatsClientReqTermOuts=cSipStatsClientReqTermOuts, cSipStatsTrafficPrackOuts=cSipStatsTrafficPrackOuts, cSipStatsTrafficSubscribeIns=cSipStatsTrafficSubscribeIns, ciscoSipBaseConfigGroupRev3=ciscoSipBaseConfigGroupRev3, cSipStatsClientNotAcceptableIns=cSipStatsClientNotAcceptableIns, cSipStatsClientUnauthorizedOuts=cSipStatsClientUnauthorizedOuts, cSipCfgMaxForwards=cSipCfgMaxForwards, cSipStatsServerNotImplementedOuts=cSipStatsServerNotImplementedOuts, cSipCfgTimerRefer=cSipCfgTimerRefer, cSipStatsRedirMovedTempsIns=cSipStatsRedirMovedTempsIns, cSipStatsRetryPracks=cSipStatsRetryPracks, ciscoSipCfgPeerGroupRev1=ciscoSipCfgPeerGroupRev1, ciscoSipStatsMiscGroup=ciscoSipStatsMiscGroup, cSipStatsRetryByes=cSipStatsRetryByes, ciscoSipTimerConfigGroupRev4=ciscoSipTimerConfigGroupRev4, cSipStatsClientMethNotAllowedIns=cSipStatsClientMethNotAllowedIns, cSipStatsClientTempNotAvailOuts=cSipStatsClientTempNotAvailOuts, cSipStatsTrafficReferIns=cSipStatsTrafficReferIns, cSipCfgTimerBufferInvite=cSipCfgTimerBufferInvite, cSipCfgBindSourceAddrEntry=cSipCfgBindSourceAddrEntry, ciscoSipComplianceRev2=ciscoSipComplianceRev2, cSipCfgEarlyMediaEntry=cSipCfgEarlyMediaEntry, cSipStatsSuccessOkMethod=cSipStatsSuccessOkMethod, cSipStatsInfoRingingIns=cSipStatsInfoRingingIns, cSipStatsTrafficAckOuts=cSipStatsTrafficAckOuts, cSipStatsTraffic=cSipStatsTraffic, cSipStatsClientCallLegNoExistIns=cSipStatsClientCallLegNoExistIns, ciscoSipStatusCauseMapGroup=ciscoSipStatusCauseMapGroup, cSipStatsRedirMultipleChoices=cSipStatsRedirMultipleChoices, ciscoSipRetryStatsGroup=ciscoSipRetryStatsGroup, ciscoSipCfgAaaGroup=ciscoSipCfgAaaGroup, cSipStatsRetryNotifys=cSipStatsRetryNotifys, ciscoSipComplianceRev1=ciscoSipComplianceRev1, cSipCfgRetryPrack=cSipCfgRetryPrack, cSipCfgRetryInvite=cSipCfgRetryInvite, cSipStatsConnUDPSendFailures=cSipStatsConnUDPSendFailures, cSipStatsSuccessOkOutbounds=cSipStatsSuccessOkOutbounds, ciscoSipTimerConfigGroupRev3=ciscoSipTimerConfigGroupRev3, cSipStatsClientAddrIncompleteOuts=cSipStatsClientAddrIncompleteOuts, cSipCfgRetryCancel=cSipCfgRetryCancel, cSipStatsTrafficInviteOuts=cSipStatsTrafficInviteOuts, cSipCfgTransport=cSipCfgTransport)
