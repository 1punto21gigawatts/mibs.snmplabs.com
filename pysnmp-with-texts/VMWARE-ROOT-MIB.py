#
# PySNMP MIB module VMWARE-ROOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VMWARE-ROOT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:34:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, iso, Integer32, Counter64, NotificationType, enterprises, ModuleIdentity, Gauge32, Counter32, Bits, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Integer32", "Counter64", "NotificationType", "enterprises", "ModuleIdentity", "Gauge32", "Counter32", "Bits", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vmware = ModuleIdentity((1, 3, 6, 1, 4, 1, 6876))
vmware.setRevisions(('2016-01-02 20:00', '2010-04-02 00:00', '2007-07-30 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: vmware.setRevisionsDescriptions(('Arc vmwNsxManager defined.', 'Arc vmwDocumentation defined.', 'The initial revision. Prior version was released in SMIv1 format as VMWARE-ROOT-MIB.',))
if mibBuilder.loadTexts: vmware.setLastUpdated('201601022000Z')
if mibBuilder.loadTexts: vmware.setOrganization('VMware, Inc')
if mibBuilder.loadTexts: vmware.setContactInfo('VMware, Inc 3401 Hillview Ave Palo Alto, CA 94304 Tel: 1-877-486-9273 or 650-427-5000 Fax: 650-427-5001 Web: http://communities.vmware.com/community/developer/forums/managementapi ')
if mibBuilder.loadTexts: vmware.setDescription('VMware managed object root assignements This module defines the VMware SNMP MIB root and its primary subtrees. ')
vmwNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 0))
if mibBuilder.loadTexts: vmwNotifications.setStatus('current')
if mibBuilder.loadTexts: vmwNotifications.setDescription('Parent of all notifications (traps, informs).')
vmwSystem = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 1))
if mibBuilder.loadTexts: vmwSystem.setStatus('current')
if mibBuilder.loadTexts: vmwSystem.setDescription('Parent of all managed objects relating to system software identification.')
vmwVirtMachines = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 2))
if mibBuilder.loadTexts: vmwVirtMachines.setStatus('current')
if mibBuilder.loadTexts: vmwVirtMachines.setDescription('Parent of all managed objects relating to virtual machine inventory.')
vmwResources = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 3))
if mibBuilder.loadTexts: vmwResources.setStatus('current')
if mibBuilder.loadTexts: vmwResources.setDescription('Parent of all managed objects relating to resource utilization.')
vmwProductSpecific = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 4))
if mibBuilder.loadTexts: vmwProductSpecific.setStatus('current')
if mibBuilder.loadTexts: vmwProductSpecific.setDescription('parent of objects specific to a given hardware/software product.')
vmwLdap = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 40))
if mibBuilder.loadTexts: vmwLdap.setStatus('current')
if mibBuilder.loadTexts: vmwLdap.setDescription('VMware specific LDAP schema definitions.')
vmwTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 50))
if mibBuilder.loadTexts: vmwTraps.setStatus('current')
if mibBuilder.loadTexts: vmwTraps.setDescription('Managed objects defined under this node are only visible in notifications varbind lists and can not be polled.')
vmwSRM = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 51))
if mibBuilder.loadTexts: vmwSRM.setStatus('current')
if mibBuilder.loadTexts: vmwSRM.setDescription('Managed objects defined under this node are only visible in notifications from Site Recovery Manager and can not be polled.')
vmwVCHA = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 53))
if mibBuilder.loadTexts: vmwVCHA.setStatus('current')
if mibBuilder.loadTexts: vmwVCHA.setDescription('Managed objects defined under this node are only visible in notifications from VMware Virtual Center High Availability and can not be polled.')
vmwOID = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 60))
if mibBuilder.loadTexts: vmwOID.setStatus('deprecated')
if mibBuilder.loadTexts: vmwOID.setDescription('Assignments under this are no longer made.')
vmwareAgentCapabilities = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 70))
if mibBuilder.loadTexts: vmwareAgentCapabilities.setStatus('current')
if mibBuilder.loadTexts: vmwareAgentCapabilities.setDescription('All agent capabilities defnitions occur under this.')
vmwNsxManager = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 90))
if mibBuilder.loadTexts: vmwNsxManager.setStatus('current')
if mibBuilder.loadTexts: vmwNsxManager.setDescription('Used by VMware NSX Manager and related components.')
vmwExperimental = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 700))
if mibBuilder.loadTexts: vmwExperimental.setStatus('current')
if mibBuilder.loadTexts: vmwExperimental.setDescription('Used for product testing and development.')
vmwDocumentation = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 750))
if mibBuilder.loadTexts: vmwDocumentation.setStatus('current')
if mibBuilder.loadTexts: vmwDocumentation.setDescription('Used in product documentation, examples.')
vmwObsolete = ObjectIdentity((1, 3, 6, 1, 4, 1, 6876, 800))
if mibBuilder.loadTexts: vmwObsolete.setStatus('current')
if mibBuilder.loadTexts: vmwObsolete.setDescription('Conformance, meta SMI oids for Obsolete smi assignements done under this arc.')
mibBuilder.exportSymbols("VMWARE-ROOT-MIB", vmwObsolete=vmwObsolete, vmwNsxManager=vmwNsxManager, vmwSystem=vmwSystem, vmwTraps=vmwTraps, vmwExperimental=vmwExperimental, PYSNMP_MODULE_ID=vmware, vmwNotifications=vmwNotifications, vmwLdap=vmwLdap, vmwProductSpecific=vmwProductSpecific, vmwDocumentation=vmwDocumentation, vmwOID=vmwOID, vmware=vmware, vmwResources=vmwResources, vmwSRM=vmwSRM, vmwVCHA=vmwVCHA, vmwVirtMachines=vmwVirtMachines, vmwareAgentCapabilities=vmwareAgentCapabilities)
