#
# PySNMP MIB module HH3C-CONTEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-CONTEXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:25:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, iso, Counter64, NotificationType, TimeTicks, Unsigned32, MibIdentifier, Gauge32, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "iso", "Counter64", "NotificationType", "TimeTicks", "Unsigned32", "MibIdentifier", "Gauge32", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cContext = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 154))
hh3cContext.setRevisions(('2014-03-18 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cContext.setRevisionsDescriptions(('Initial revision of this MIB module.',))
if mibBuilder.loadTexts: hh3cContext.setLastUpdated('201403180000Z')
if mibBuilder.loadTexts: hh3cContext.setOrganization('Hangzhou H3C Technologies. Co., Ltd.')
if mibBuilder.loadTexts: hh3cContext.setContactInfo('Platform Team Hangzhou H3C Technologies. Co., Ltd. Haidian District Beijing P.R. China http://www.h3c.com Zip:100085')
if mibBuilder.loadTexts: hh3cContext.setDescription('This MIB contains objects for managing context operations.')
hh3cContextTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1))
hh3cContextControl = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1, 1))
hh3cContextControlTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cContextControlTable.setStatus('current')
if mibBuilder.loadTexts: hh3cContextControlTable.setDescription('This table is used to configure contexts for a device and show context status info.')
hh3cContextControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-CONTEXT-MIB", "hh3cContextIndex"))
if mibBuilder.loadTexts: hh3cContextControlEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cContextControlEntry.setDescription('An entry of the hh3cContextControlTable. Each entry corresponds to one context.')
hh3cContextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cContextIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cContextIndex.setDescription('The value range of Context ID depends on the device model.')
hh3cContextName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 154, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cContextName.setStatus('current')
if mibBuilder.loadTexts: hh3cContextName.setDescription('Specifies the context name, a case-sensitive string of 1 to 15 characters. The context name cannot be modified once created.')
hh3cContextNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 154, 8))
hh3cContextNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 154, 8, 0))
hh3cContextStateChangeToActive = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 154, 8, 0, 1)).setObjects(("HH3C-CONTEXT-MIB", "hh3cContextIndex"), ("HH3C-CONTEXT-MIB", "hh3cContextName"))
if mibBuilder.loadTexts: hh3cContextStateChangeToActive.setStatus('current')
if mibBuilder.loadTexts: hh3cContextStateChangeToActive.setDescription('The hh3cContextStateChangeToActive trap indicates that the context status has changed to active.')
hh3cContextStateChangeToInactive = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 154, 8, 0, 2)).setObjects(("HH3C-CONTEXT-MIB", "hh3cContextIndex"), ("HH3C-CONTEXT-MIB", "hh3cContextName"))
if mibBuilder.loadTexts: hh3cContextStateChangeToInactive.setStatus('current')
if mibBuilder.loadTexts: hh3cContextStateChangeToInactive.setDescription('The hh3cContextStateChangeToInactive trap indicates that the context status has changed to inactive.')
mibBuilder.exportSymbols("HH3C-CONTEXT-MIB", hh3cContextControl=hh3cContextControl, hh3cContextNotification=hh3cContextNotification, hh3cContextControlTable=hh3cContextControlTable, hh3cContextControlEntry=hh3cContextControlEntry, hh3cContextNotificationObjects=hh3cContextNotificationObjects, hh3cContextStateChangeToActive=hh3cContextStateChangeToActive, PYSNMP_MODULE_ID=hh3cContext, hh3cContextTables=hh3cContextTables, hh3cContextName=hh3cContextName, hh3cContextIndex=hh3cContextIndex, hh3cContextStateChangeToInactive=hh3cContextStateChangeToInactive, hh3cContext=hh3cContext)
