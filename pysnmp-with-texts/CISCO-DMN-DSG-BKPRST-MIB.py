#
# PySNMP MIB module CISCO-DMN-DSG-BKPRST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DMN-DSG-BKPRST-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:54:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoDSGUtilities, = mibBuilder.importSymbols("CISCO-DMN-DSG-ROOT-MIB", "ciscoDSGUtilities")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ObjectIdentity, IpAddress, Bits, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Integer32, NotificationType, MibIdentifier, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "IpAddress", "Bits", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Integer32", "NotificationType", "MibIdentifier", "Unsigned32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ciscoDSGBKPRST = ModuleIdentity((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3))
ciscoDSGBKPRST.setRevisions(('2012-03-26 17:00', '2010-08-30 05:00', '2010-06-17 06:00', '2010-03-22 05:00', '2010-02-12 15:00', '2009-11-22 15:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoDSGBKPRST.setRevisionsDescriptions(('V01.00.05 2012-03-26 Updated enum list of backupRestoreDetailedStatus.', 'V01.00.04 2010-08-30 Updated for adherence to SNMPv2 format.', 'V01.00.03 2010-06-17 The enum options of backupRestoreDetailedStatus is updated.', 'V01.00.02 2010-03-22 The Syntax of Unsigned32 MIB objects whose range is within the range of Integer32, is updated to Integer32.', 'V01.00.01 2010-02-12 The Syntax of read-only object is updated to DisplayString.', 'V01.00.00 2009-11-22 Initial Version.',))
if mibBuilder.loadTexts: ciscoDSGBKPRST.setLastUpdated('201203121700Z')
if mibBuilder.loadTexts: ciscoDSGBKPRST.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoDSGBKPRST.setContactInfo('Cisco Systems, Inc. Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 NETS E-mail: cs-ipsla@cisco.com')
if mibBuilder.loadTexts: ciscoDSGBKPRST.setDescription('Cisco DSG Backup Restore MIB.')
backupRestoreInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1))
backupRestoreOperation = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("backup", 1), ("restore", 2), ("writeOnly", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreOperation.setStatus('current')
if mibBuilder.loadTexts: backupRestoreOperation.setDescription('Type of operation ( backup or restore ). Setting backup( 1 ) backs up the specified file to the FTP server. Setting restore( 2 ) restores the specified file from the FTP server.')
backupRestoreType = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("standard", 1), ("extended", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreType.setStatus('current')
if mibBuilder.loadTexts: backupRestoreType.setDescription('Backup data sets to be included in the backup/restore file. Following backup options are available. Standard:To save the user settings to the backup file. Extended:To save user settings and tuning information to the backup file. Full:To save user settings,tuning information and factory defaults to the backup file.')
backupRestoreFileName = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreFileName.setStatus('current')
if mibBuilder.loadTexts: backupRestoreFileName.setDescription('Name of file to backup or restore.')
backupRestoreFtpServerIp = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreFtpServerIp.setStatus('current')
if mibBuilder.loadTexts: backupRestoreFtpServerIp.setDescription('FTP Server IP Address of the FTP server used to store the backup/restore file. Format: ###.###.###.###, Range of ### is 0 to 255.')
backupRestoreFtpUsername = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreFtpUsername.setStatus('current')
if mibBuilder.loadTexts: backupRestoreFtpUsername.setDescription('FTP username to access the FTP Server.')
backupRestoreFtpPassword = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreFtpPassword.setStatus('current')
if mibBuilder.loadTexts: backupRestoreFtpPassword.setDescription('FTP password to access the FTP Server.')
backupRestoreFtpPortno = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: backupRestoreFtpPortno.setStatus('current')
if mibBuilder.loadTexts: backupRestoreFtpPortno.setDescription('FTP port number of the FTP Server used to store the backup\\restore file.')
backupRestoreLastBackupFile = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreLastBackupFile.setStatus('current')
if mibBuilder.loadTexts: backupRestoreLastBackupFile.setDescription('Name of last backedup file.')
backupRestoreLastBackupTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreLastBackupTime.setStatus('current')
if mibBuilder.loadTexts: backupRestoreLastBackupTime.setDescription('Time of last backup.')
backupRestoreLastRestoreFile = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 119))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreLastRestoreFile.setStatus('current')
if mibBuilder.loadTexts: backupRestoreLastRestoreFile.setDescription('Name of last restored file.')
backupRestoreLastRestoreTime = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreLastRestoreTime.setStatus('current')
if mibBuilder.loadTexts: backupRestoreLastRestoreTime.setDescription('Time of last restore operation.')
backupRestoreOperationStatus = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inprogress", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreOperationStatus.setStatus('current')
if mibBuilder.loadTexts: backupRestoreOperationStatus.setDescription('Backup/Restore Operation status ( inprogress,pass or failed ).')
backupRestoreDetailedStatus = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("idle", 1), ("backupProcessing", 2), ("backupConnecting", 3), ("backupSendingFile", 4), ("backupDone", 5), ("backupFailed", 6), ("restoreConnecting", 7), ("restoreWaitingFile", 8), ("restoreReceivingFile", 9), ("restoreProcessing", 10), ("restoreDone", 11), ("restoreFailed", 12), ("ftpFileTransferError", 13), ("restoreFileCorrupted", 14), ("restoreFileDesignationCodeMismatch", 15), ("restoreFilePlatformTypeMismatch", 16), ("restoreFileMissingFileInformation", 17), ("restoreFileMissingPlatformType", 18), ("restoreFileMissingDesignation", 19), ("restoreFileMissingContents", 20), ("restoreFileMissingRoot", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestoreDetailedStatus.setStatus('current')
if mibBuilder.loadTexts: backupRestoreDetailedStatus.setDescription('Detailed status of Backup/Restore operation.')
backupRestorePercentageComp = MibScalar((1, 3, 6, 1, 4, 1, 1429, 2, 2, 5, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: backupRestorePercentageComp.setStatus('current')
if mibBuilder.loadTexts: backupRestorePercentageComp.setDescription('Percentage of Backup/Restore operation Completed. The range is from 0 to 100 in steps of 1 percentage.')
mibBuilder.exportSymbols("CISCO-DMN-DSG-BKPRST-MIB", ciscoDSGBKPRST=ciscoDSGBKPRST, backupRestoreFtpPortno=backupRestoreFtpPortno, backupRestoreLastRestoreFile=backupRestoreLastRestoreFile, backupRestoreLastBackupFile=backupRestoreLastBackupFile, backupRestoreInfo=backupRestoreInfo, backupRestoreOperationStatus=backupRestoreOperationStatus, backupRestorePercentageComp=backupRestorePercentageComp, backupRestoreFtpPassword=backupRestoreFtpPassword, backupRestoreLastBackupTime=backupRestoreLastBackupTime, backupRestoreFtpUsername=backupRestoreFtpUsername, backupRestoreDetailedStatus=backupRestoreDetailedStatus, backupRestoreFileName=backupRestoreFileName, backupRestoreLastRestoreTime=backupRestoreLastRestoreTime, backupRestoreOperation=backupRestoreOperation, backupRestoreFtpServerIp=backupRestoreFtpServerIp, PYSNMP_MODULE_ID=ciscoDSGBKPRST, backupRestoreType=backupRestoreType)
