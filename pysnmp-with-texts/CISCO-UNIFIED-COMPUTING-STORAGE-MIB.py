#
# PySNMP MIB module CISCO-UNIFIED-COMPUTING-STORAGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNIFIED-COMPUTING-STORAGE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:17:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoNetworkAddress, CiscoAlarmSeverity, TimeIntervalSec, Unsigned64, CiscoInetAddressMask = mibBuilder.importSymbols("CISCO-TC", "CiscoNetworkAddress", "CiscoAlarmSeverity", "TimeIntervalSec", "Unsigned64", "CiscoInetAddressMask")
CucsManagedObjectDn, CucsManagedObjectId, ciscoUnifiedComputingMIBObjects = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-MIB", "CucsManagedObjectDn", "CucsManagedObjectId", "ciscoUnifiedComputingMIBObjects")
CucsStorageControllerStatus, CucsStorageCacheType, CucsStorageFFCardHealth, CucsStorageLearnMode, CucsStorageIniGroupOperProtocol, CucsStorageOperatingModeType, CucsStorageKeyType, CucsStoragePDriveStatus, CucsStorageFFCardSizeMismatch, CucsStorageVsanRefSwitchId, CucsFabricZoningState, CucsStorageVDriveState, CucsStorageSystemFsmTaskItem, CucsStorageLunType, CucsStorageControllerPinnedCacheStatus, CucsStorageFlexFlashControllerFsmCurrentFsm, CucsEquipmentPresence, CucsStorageDiskEnvStatsHistThresholded, CucsStorageConnectionProtocol, CucsStorageBbuStatus, CucsStorageFileSystemStatus, CucsPolicyPolicyOwner, CucsStorageRaidBatteryOperabilityQualifier, CucsConditionRemoteInvRslt, CucsStorageLinkSpeed, CucsStorageDeployAction, CucsStorageOptionRomBootStatus, CucsStorageFFCardMode, CucsStorageConfiguration, CucsStorageDiskEnvStatsThresholded, CucsFsmFsmStageStatus, CucsStorageFlexFlashControllerId, CucsStorageVirtualDriveRefAdminState, CucsStorageFFRaidSyncSupport, CucsStorageSelectionDecisionType, CucsStorageAdminActionTrigger, CucsStorageControllerType, CucsEquipmentSensorThresholdStatus, CucsStorageOperState, CucsStorageFlexFlashControllerFsmTaskItem, CucsStorageLearnCycleRequested, CucsStorageFFSlotENUM, CucsStorageControllerFaultMonitoring, CucsStorageIOType, CucsStorageControllerId, CucsStorageOperationState, CucsStorageDiskRole, CucsStorageFFCardWriteEnable, CucsStorageLocalDiskMode, CucsStorageVdChangeQualifierType, CucsStorageFlexFlashControllerFsmStageName, CucsVnicConfigIssues, CucsStorageFFRAIDState, CucsStorageFFDriveRemovable, CucsStorageBatteryType, CucsStorageFFControllerHealth, CucsStorageOperationType, CucsStorageFFDriveState, CucsStoragePowerState, CucsEquipmentPowerState, CucsStorageBootableType, CucsStorageLocalDiskConfigFlexFlashState, CucsStorageFcZoningType, CucsStorageActualWriteType, CucsStorageFFRWType, CucsStorageOperationRequestType, CucsStorageFFRAIDHealth, CucsFsmCompletion, CucsLstorageBootDevice, CucsStorageEtherIfVlanType, CucsStorageSystemFsmStageName, CucsStorageFFHasError, CucsStorageFFCardState, CucsStorageProtocol, CucsStorageFFFormatRunning, CucsStorageUnitOperState, CucsAaaConfigState, CucsStorageFFCardSync, CucsStorageSelectionResultType, CucsStorageConfigState, CucsStorageSystemFsmCurrentFsm, CucsStorageIniGroupOwner, CucsStorageAccessType, CucsStorageFFControllerState, CucsStorageVdMemberConfigQualifierType, CucsStorageIniGroupProtocol, CucsStorageAdminActionType, CucsEquipmentOperability, CucsStorageLocalDiskConfigFlexFlashRAIDReportingState, CucsStorageReadType, CucsStorageFFDriveType, CucsStorageFFDriveVisible, CucsStorageAdminCtrlActionType, CucsFsmLifecycle, CucsStorageConfigCheckPoint, CucsStorageOperationStateType, CucsStorageTargetPath, CucsStorageConfiguredWriteType, CucsStorageDisklessAction, CucsFsmFlags, CucsStorageEpAccess, CucsStorageAdminState, CucsStorageTechnology, CucsStorageEnclosureId, CucsStorageFFType = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-TC-MIB", "CucsStorageControllerStatus", "CucsStorageCacheType", "CucsStorageFFCardHealth", "CucsStorageLearnMode", "CucsStorageIniGroupOperProtocol", "CucsStorageOperatingModeType", "CucsStorageKeyType", "CucsStoragePDriveStatus", "CucsStorageFFCardSizeMismatch", "CucsStorageVsanRefSwitchId", "CucsFabricZoningState", "CucsStorageVDriveState", "CucsStorageSystemFsmTaskItem", "CucsStorageLunType", "CucsStorageControllerPinnedCacheStatus", "CucsStorageFlexFlashControllerFsmCurrentFsm", "CucsEquipmentPresence", "CucsStorageDiskEnvStatsHistThresholded", "CucsStorageConnectionProtocol", "CucsStorageBbuStatus", "CucsStorageFileSystemStatus", "CucsPolicyPolicyOwner", "CucsStorageRaidBatteryOperabilityQualifier", "CucsConditionRemoteInvRslt", "CucsStorageLinkSpeed", "CucsStorageDeployAction", "CucsStorageOptionRomBootStatus", "CucsStorageFFCardMode", "CucsStorageConfiguration", "CucsStorageDiskEnvStatsThresholded", "CucsFsmFsmStageStatus", "CucsStorageFlexFlashControllerId", "CucsStorageVirtualDriveRefAdminState", "CucsStorageFFRaidSyncSupport", "CucsStorageSelectionDecisionType", "CucsStorageAdminActionTrigger", "CucsStorageControllerType", "CucsEquipmentSensorThresholdStatus", "CucsStorageOperState", "CucsStorageFlexFlashControllerFsmTaskItem", "CucsStorageLearnCycleRequested", "CucsStorageFFSlotENUM", "CucsStorageControllerFaultMonitoring", "CucsStorageIOType", "CucsStorageControllerId", "CucsStorageOperationState", "CucsStorageDiskRole", "CucsStorageFFCardWriteEnable", "CucsStorageLocalDiskMode", "CucsStorageVdChangeQualifierType", "CucsStorageFlexFlashControllerFsmStageName", "CucsVnicConfigIssues", "CucsStorageFFRAIDState", "CucsStorageFFDriveRemovable", "CucsStorageBatteryType", "CucsStorageFFControllerHealth", "CucsStorageOperationType", "CucsStorageFFDriveState", "CucsStoragePowerState", "CucsEquipmentPowerState", "CucsStorageBootableType", "CucsStorageLocalDiskConfigFlexFlashState", "CucsStorageFcZoningType", "CucsStorageActualWriteType", "CucsStorageFFRWType", "CucsStorageOperationRequestType", "CucsStorageFFRAIDHealth", "CucsFsmCompletion", "CucsLstorageBootDevice", "CucsStorageEtherIfVlanType", "CucsStorageSystemFsmStageName", "CucsStorageFFHasError", "CucsStorageFFCardState", "CucsStorageProtocol", "CucsStorageFFFormatRunning", "CucsStorageUnitOperState", "CucsAaaConfigState", "CucsStorageFFCardSync", "CucsStorageSelectionResultType", "CucsStorageConfigState", "CucsStorageSystemFsmCurrentFsm", "CucsStorageIniGroupOwner", "CucsStorageAccessType", "CucsStorageFFControllerState", "CucsStorageVdMemberConfigQualifierType", "CucsStorageIniGroupProtocol", "CucsStorageAdminActionType", "CucsEquipmentOperability", "CucsStorageLocalDiskConfigFlexFlashRAIDReportingState", "CucsStorageReadType", "CucsStorageFFDriveType", "CucsStorageFFDriveVisible", "CucsStorageAdminCtrlActionType", "CucsFsmLifecycle", "CucsStorageConfigCheckPoint", "CucsStorageOperationStateType", "CucsStorageTargetPath", "CucsStorageConfiguredWriteType", "CucsStorageDisklessAction", "CucsFsmFlags", "CucsStorageEpAccess", "CucsStorageAdminState", "CucsStorageTechnology", "CucsStorageEnclosureId", "CucsStorageFFType")
InetAddressIPv6, InetAddressIPv4 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddressIPv4")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, ModuleIdentity, Counter64, IpAddress, Counter32, TimeTicks, Unsigned32, iso, NotificationType, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "ModuleIdentity", "Counter64", "IpAddress", "Counter32", "TimeTicks", "Unsigned32", "iso", "NotificationType", "ObjectIdentity", "Bits")
TextualConvention, TruthValue, RowPointer, TimeStamp, DateAndTime, TimeInterval, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowPointer", "TimeStamp", "DateAndTime", "TimeInterval", "DisplayString", "MacAddress")
cucsStorageObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45))
if mibBuilder.loadTexts: cucsStorageObjects.setLastUpdated('201601180000Z')
if mibBuilder.loadTexts: cucsStorageObjects.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: cucsStorageObjects.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553 -NETS E-mail: cs-san@cisco.com, cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: cucsStorageObjects.setDescription('MIB representation of the Cisco Unified Computing System STORAGE management information model package')
cucsStorageAuthKeyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14), )
if mibBuilder.loadTexts: cucsStorageAuthKeyTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyTable.setDescription('Cisco UCS storage:AuthKey managed object table')
cucsStorageAuthKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageAuthKeyInstanceId"))
if mibBuilder.loadTexts: cucsStorageAuthKeyEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyEntry.setDescription('Entry for the cucsStorageAuthKeyTable table.')
cucsStorageAuthKeyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageAuthKeyInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageAuthKeyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyDn.setDescription('Cisco UCS storage:AuthKey:dn managed object property')
cucsStorageAuthKeyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyRn.setDescription('Cisco UCS storage:AuthKey:rn managed object property')
cucsStorageAuthKeyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyDescr.setDescription('Cisco UCS storage:AuthKey:descr managed object property')
cucsStorageAuthKeyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyIntId.setDescription('Cisco UCS storage:AuthKey:intId managed object property')
cucsStorageAuthKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyName.setDescription('Cisco UCS storage:AuthKey:name managed object property')
cucsStorageAuthKeyPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPassword.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyPassword.setDescription('Cisco UCS storage:AuthKey:password managed object property')
cucsStorageAuthKeyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyLevel.setDescription('Cisco UCS storage:AuthKey:policyLevel managed object property')
cucsStorageAuthKeyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyPolicyOwner.setDescription('Cisco UCS storage:AuthKey:policyOwner managed object property')
cucsStorageAuthKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 10), CucsStorageKeyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyType.setDescription('Cisco UCS storage:AuthKey:type managed object property')
cucsStorageAuthKeyUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 14, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageAuthKeyUserId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageAuthKeyUserId.setDescription('Cisco UCS storage:AuthKey:userId managed object property')
cucsStorageConnectionDefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15), )
if mibBuilder.loadTexts: cucsStorageConnectionDefTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefTable.setDescription('Cisco UCS storage:ConnectionDef managed object table')
cucsStorageConnectionDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageConnectionDefInstanceId"))
if mibBuilder.loadTexts: cucsStorageConnectionDefEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefEntry.setDescription('Entry for the cucsStorageConnectionDefTable table.')
cucsStorageConnectionDefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageConnectionDefInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageConnectionDefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefDn.setDescription('Cisco UCS storage:ConnectionDef:dn managed object property')
cucsStorageConnectionDefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefRn.setDescription('Cisco UCS storage:ConnectionDef:rn managed object property')
cucsStorageConnectionDefDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefDescr.setDescription('Cisco UCS storage:ConnectionDef:descr managed object property')
cucsStorageConnectionDefIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefIntId.setDescription('Cisco UCS storage:ConnectionDef:intId managed object property')
cucsStorageConnectionDefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefName.setDescription('Cisco UCS storage:ConnectionDef:name managed object property')
cucsStorageConnectionDefOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefOperState.setDescription('Cisco UCS storage:ConnectionDef:operState managed object property')
cucsStorageConnectionDefPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyLevel.setDescription('Cisco UCS storage:ConnectionDef:policyLevel managed object property')
cucsStorageConnectionDefPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefPolicyOwner.setDescription('Cisco UCS storage:ConnectionDef:policyOwner managed object property')
cucsStorageConnectionDefZoningType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 15, 1, 10), CucsStorageFcZoningType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionDefZoningType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionDefZoningType.setDescription('Cisco UCS storage:ConnectionDef:zoningType managed object property')
cucsStorageConnectionPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16), )
if mibBuilder.loadTexts: cucsStorageConnectionPolicyTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyTable.setDescription('Cisco UCS storage:ConnectionPolicy managed object table')
cucsStorageConnectionPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageConnectionPolicyInstanceId"))
if mibBuilder.loadTexts: cucsStorageConnectionPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyEntry.setDescription('Entry for the cucsStorageConnectionPolicyTable table.')
cucsStorageConnectionPolicyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageConnectionPolicyInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageConnectionPolicyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDn.setDescription('Cisco UCS storage:ConnectionPolicy:dn managed object property')
cucsStorageConnectionPolicyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyRn.setDescription('Cisco UCS storage:ConnectionPolicy:rn managed object property')
cucsStorageConnectionPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyDescr.setDescription('Cisco UCS storage:ConnectionPolicy:descr managed object property')
cucsStorageConnectionPolicyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyIntId.setDescription('Cisco UCS storage:ConnectionPolicy:intId managed object property')
cucsStorageConnectionPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyName.setDescription('Cisco UCS storage:ConnectionPolicy:name managed object property')
cucsStorageConnectionPolicyOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyOperState.setDescription('Cisco UCS storage:ConnectionPolicy:operState managed object property')
cucsStorageConnectionPolicyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyLevel.setDescription('Cisco UCS storage:ConnectionPolicy:policyLevel managed object property')
cucsStorageConnectionPolicyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyPolicyOwner.setDescription('Cisco UCS storage:ConnectionPolicy:policyOwner managed object property')
cucsStorageConnectionPolicyZoningType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 16, 1, 10), CucsStorageFcZoningType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageConnectionPolicyZoningType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageConnectionPolicyZoningType.setDescription('Cisco UCS storage:ConnectionPolicy:zoningType managed object property')
cucsStorageControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1), )
if mibBuilder.loadTexts: cucsStorageControllerTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerTable.setDescription('Cisco UCS storage:Controller managed object table')
cucsStorageControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageControllerInstanceId"))
if mibBuilder.loadTexts: cucsStorageControllerEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerEntry.setDescription('Entry for the cucsStorageControllerTable table.')
cucsStorageControllerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageControllerInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageControllerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerDn.setDescription('Cisco UCS storage:Controller:dn managed object property')
cucsStorageControllerRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerRn.setDescription('Cisco UCS storage:Controller:rn managed object property')
cucsStorageControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 4), CucsStorageControllerId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerId.setDescription('Cisco UCS storage:Controller:id managed object property')
cucsStorageControllerModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerModel.setDescription('Cisco UCS storage:Controller:model managed object property')
cucsStorageControllerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 6), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOperState.setDescription('Cisco UCS storage:Controller:operState managed object property')
cucsStorageControllerOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 7), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOperability.setDescription('Cisco UCS storage:Controller:operability managed object property')
cucsStorageControllerPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPciAddr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPciAddr.setDescription('Cisco UCS storage:Controller:pciAddr managed object property')
cucsStorageControllerPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPciSlot.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPciSlot.setDescription('Cisco UCS storage:Controller:pciSlot managed object property')
cucsStorageControllerPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 10), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPerf.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPerf.setDescription('Cisco UCS storage:Controller:perf managed object property')
cucsStorageControllerPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 11), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPower.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPower.setDescription('Cisco UCS storage:Controller:power managed object property')
cucsStorageControllerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 12), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPresence.setDescription('Cisco UCS storage:Controller:presence managed object property')
cucsStorageControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerRevision.setDescription('Cisco UCS storage:Controller:revision managed object property')
cucsStorageControllerSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerSerial.setDescription('Cisco UCS storage:Controller:serial managed object property')
cucsStorageControllerThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 15), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerThermal.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerThermal.setDescription('Cisco UCS storage:Controller:thermal managed object property')
cucsStorageControllerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 16), CucsStorageControllerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerType.setDescription('Cisco UCS storage:Controller:type managed object property')
cucsStorageControllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerVendor.setDescription('Cisco UCS storage:Controller:vendor managed object property')
cucsStorageControllerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 18), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVoltage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerVoltage.setDescription('Cisco UCS storage:Controller:voltage managed object property')
cucsStorageControllerRaidSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRaidSupport.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerRaidSupport.setDescription('Cisco UCS storage:Controller:raidSupport managed object property')
cucsStorageControllerFaultMonitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 20), CucsStorageControllerFaultMonitoring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerFaultMonitoring.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerFaultMonitoring.setDescription('Cisco UCS storage:Controller:faultMonitoring managed object property')
cucsStorageControllerHwRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerHwRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerHwRevision.setDescription('Cisco UCS storage:Controller:hwRevision managed object property')
cucsStorageControllerDeviceRaidSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 23), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerDeviceRaidSupport.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerDeviceRaidSupport.setDescription('Cisco UCS storage:Controller:deviceRaidSupport managed object property')
cucsStorageControllerOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 24), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOperQualifierReason.setDescription('Cisco UCS storage:Controller:operQualifierReason managed object property')
cucsStorageControllerControllerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 25), CucsStorageControllerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerControllerStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerControllerStatus.setDescription('Cisco UCS storage:Controller:controllerStatus managed object property')
cucsStorageControllerLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 26), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerLc.setDescription('Cisco UCS storage:Controller:lc managed object property')
cucsStorageControllerOobControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOobControllerId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOobControllerId.setDescription('Cisco UCS storage:Controller:oobControllerId managed object property')
cucsStorageControllerOobInterfaceSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOobInterfaceSupported.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOobInterfaceSupported.setDescription('Cisco UCS storage:Controller:oobInterfaceSupported managed object property')
cucsStorageControllerRebuildRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerRebuildRate.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerRebuildRate.setDescription('Cisco UCS storage:Controller:rebuildRate managed object property')
cucsStorageControllerLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 30), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerLocationDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerLocationDn.setDescription('Cisco UCS storage:Controller:locationDn managed object property')
cucsStorageControllerPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPartNumber.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPartNumber.setDescription('Cisco UCS storage:Controller:partNumber managed object property')
cucsStorageControllerVid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerVid.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerVid.setDescription('Cisco UCS storage:Controller:vid managed object property')
cucsStorageControllerAdminAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 33), CucsStorageAdminCtrlActionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerAdminAction.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerAdminAction.setDescription('Cisco UCS storage:Controller:adminAction managed object property')
cucsStorageControllerAdminActionTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 34), CucsStorageAdminActionTrigger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerAdminActionTrigger.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerAdminActionTrigger.setDescription('Cisco UCS storage:Controller:adminActionTrigger managed object property')
cucsStorageControllerConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 35), CucsStorageConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerConfigState.setDescription('Cisco UCS storage:Controller:configState managed object property')
cucsStorageControllerOpromBootStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 36), CucsStorageOptionRomBootStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerOpromBootStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerOpromBootStatus.setDescription('Cisco UCS storage:Controller:opromBootStatus managed object property')
cucsStorageControllerPciSlotRawName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 37), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPciSlotRawName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPciSlotRawName.setDescription('Cisco UCS storage:Controller:pciSlotRawName managed object property')
cucsStorageControllerIdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerIdCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerIdCount.setDescription('Cisco UCS storage:Controller:idCount managed object property')
cucsStorageControllerPinnedCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 1, 1, 39), CucsStorageControllerPinnedCacheStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageControllerPinnedCacheStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageControllerPinnedCacheStatus.setDescription('Cisco UCS storage:Controller:pinnedCacheStatus managed object property')
cucsStorageDiskEnvStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50), )
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTable.setDescription('Cisco UCS storage:DiskEnvStats managed object table')
cucsStorageDiskEnvStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDiskEnvStatsInstanceId"))
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsEntry.setDescription('Entry for the cucsStorageDiskEnvStatsTable table.')
cucsStorageDiskEnvStatsInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageDiskEnvStatsDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsDn.setDescription('Cisco UCS storage:DiskEnvStats:dn managed object property')
cucsStorageDiskEnvStatsRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsRn.setDescription('Cisco UCS storage:DiskEnvStats:rn managed object property')
cucsStorageDiskEnvStatsIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsIntervals.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsIntervals.setDescription('Cisco UCS storage:DiskEnvStats:intervals managed object property')
cucsStorageDiskEnvStatsSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsSuspect.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsSuspect.setDescription('Cisco UCS storage:DiskEnvStats:suspect managed object property')
cucsStorageDiskEnvStatsTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperature.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperature.setDescription('Cisco UCS storage:DiskEnvStats:temperature managed object property')
cucsStorageDiskEnvStatsTemperatureAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureAvg.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureAvg.setDescription('Cisco UCS storage:DiskEnvStats:temperatureAvg managed object property')
cucsStorageDiskEnvStatsTemperatureMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureMax.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureMax.setDescription('Cisco UCS storage:DiskEnvStats:temperatureMax managed object property')
cucsStorageDiskEnvStatsTemperatureMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureMin.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTemperatureMin.setDescription('Cisco UCS storage:DiskEnvStats:temperatureMin managed object property')
cucsStorageDiskEnvStatsThresholded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 10), CucsStorageDiskEnvStatsThresholded()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsThresholded.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsThresholded.setDescription('Cisco UCS storage:DiskEnvStats:thresholded managed object property')
cucsStorageDiskEnvStatsTimeCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTimeCollected.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsTimeCollected.setDescription('Cisco UCS storage:DiskEnvStats:timeCollected managed object property')
cucsStorageDiskEnvStatsUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsUpdate.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsUpdate.setDescription('Cisco UCS storage:DiskEnvStats:update managed object property')
cucsStorageDiskEnvStatsWearPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentage.setDescription('Cisco UCS storage:DiskEnvStats:wearPercentage managed object property')
cucsStorageDiskEnvStatsWearPercentageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageAvg.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageAvg.setDescription('Cisco UCS storage:DiskEnvStats:wearPercentageAvg managed object property')
cucsStorageDiskEnvStatsWearPercentageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageMax.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageMax.setDescription('Cisco UCS storage:DiskEnvStats:wearPercentageMax managed object property')
cucsStorageDiskEnvStatsWearPercentageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 50, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageMin.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsWearPercentageMin.setDescription('Cisco UCS storage:DiskEnvStats:wearPercentageMin managed object property')
cucsStorageDiskEnvStatsHistTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51), )
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTable.setDescription('Cisco UCS storage:DiskEnvStatsHist managed object table')
cucsStorageDiskEnvStatsHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDiskEnvStatsHistInstanceId"))
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistEntry.setDescription('Entry for the cucsStorageDiskEnvStatsHistTable table.')
cucsStorageDiskEnvStatsHistInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageDiskEnvStatsHistDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistDn.setDescription('Cisco UCS storage:DiskEnvStatsHist:dn managed object property')
cucsStorageDiskEnvStatsHistRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistRn.setDescription('Cisco UCS storage:DiskEnvStatsHist:rn managed object property')
cucsStorageDiskEnvStatsHistId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 4), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistId.setDescription('Cisco UCS storage:DiskEnvStatsHist:id managed object property')
cucsStorageDiskEnvStatsHistMostRecent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistMostRecent.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistMostRecent.setDescription('Cisco UCS storage:DiskEnvStatsHist:mostRecent managed object property')
cucsStorageDiskEnvStatsHistSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistSuspect.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistSuspect.setDescription('Cisco UCS storage:DiskEnvStatsHist:suspect managed object property')
cucsStorageDiskEnvStatsHistTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperature.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperature.setDescription('Cisco UCS storage:DiskEnvStatsHist:temperature managed object property')
cucsStorageDiskEnvStatsHistTemperatureAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureAvg.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureAvg.setDescription('Cisco UCS storage:DiskEnvStatsHist:temperatureAvg managed object property')
cucsStorageDiskEnvStatsHistTemperatureMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureMax.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureMax.setDescription('Cisco UCS storage:DiskEnvStatsHist:temperatureMax managed object property')
cucsStorageDiskEnvStatsHistTemperatureMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureMin.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTemperatureMin.setDescription('Cisco UCS storage:DiskEnvStatsHist:temperatureMin managed object property')
cucsStorageDiskEnvStatsHistThresholded = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 11), CucsStorageDiskEnvStatsHistThresholded()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistThresholded.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistThresholded.setDescription('Cisco UCS storage:DiskEnvStatsHist:thresholded managed object property')
cucsStorageDiskEnvStatsHistTimeCollected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTimeCollected.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistTimeCollected.setDescription('Cisco UCS storage:DiskEnvStatsHist:timeCollected managed object property')
cucsStorageDiskEnvStatsHistWearPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentage.setDescription('Cisco UCS storage:DiskEnvStatsHist:wearPercentage managed object property')
cucsStorageDiskEnvStatsHistWearPercentageAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageAvg.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageAvg.setDescription('Cisco UCS storage:DiskEnvStatsHist:wearPercentageAvg managed object property')
cucsStorageDiskEnvStatsHistWearPercentageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageMax.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageMax.setDescription('Cisco UCS storage:DiskEnvStatsHist:wearPercentageMax managed object property')
cucsStorageDiskEnvStatsHistWearPercentageMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 51, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageMin.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDiskEnvStatsHistWearPercentageMin.setDescription('Cisco UCS storage:DiskEnvStatsHist:wearPercentageMin managed object property')
cucsStorageDomainEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17), )
if mibBuilder.loadTexts: cucsStorageDomainEpTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDomainEpTable.setDescription('Cisco UCS storage:DomainEp managed object table')
cucsStorageDomainEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDomainEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageDomainEpEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDomainEpEntry.setDescription('Entry for the cucsStorageDomainEpTable table.')
cucsStorageDomainEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageDomainEpInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDomainEpInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageDomainEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDomainEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDomainEpDn.setDescription('Cisco UCS storage:DomainEp:dn managed object property')
cucsStorageDomainEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 17, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDomainEpRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDomainEpRn.setDescription('Cisco UCS storage:DomainEp:rn managed object property')
cucsStorageDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2), )
if mibBuilder.loadTexts: cucsStorageDriveTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveTable.setDescription('Cisco UCS storage:Drive managed object table')
cucsStorageDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageDriveEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveEntry.setDescription('Entry for the cucsStorageDriveTable table.')
cucsStorageDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageDriveInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveDn.setDescription('Cisco UCS storage:Drive:dn managed object property')
cucsStorageDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveRn.setDescription('Cisco UCS storage:Drive:rn managed object property')
cucsStorageDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveId.setDescription('Cisco UCS storage:Drive:id managed object property')
cucsStorageDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveModel.setDescription('Cisco UCS storage:Drive:model managed object property')
cucsStorageDrivePciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDrivePciAddr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDrivePciAddr.setDescription('Cisco UCS storage:Drive:pciAddr managed object property')
cucsStorageDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveRevision.setDescription('Cisco UCS storage:Drive:revision managed object property')
cucsStorageDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveSerial.setDescription('Cisco UCS storage:Drive:serial managed object property')
cucsStorageDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageDriveVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageDriveVendor.setDescription('Cisco UCS storage:Drive:vendor managed object property')
cucsStorageEnclosureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12), )
if mibBuilder.loadTexts: cucsStorageEnclosureTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureTable.setDescription('Cisco UCS storage:Enclosure managed object table')
cucsStorageEnclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEnclosureInstanceId"))
if mibBuilder.loadTexts: cucsStorageEnclosureEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureEntry.setDescription('Entry for the cucsStorageEnclosureTable table.')
cucsStorageEnclosureInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageEnclosureInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageEnclosureDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureDn.setDescription('Cisco UCS storage:Enclosure:dn managed object property')
cucsStorageEnclosureRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureRn.setDescription('Cisco UCS storage:Enclosure:rn managed object property')
cucsStorageEnclosureId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 4), CucsStorageEnclosureId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureId.setDescription('Cisco UCS storage:Enclosure:id managed object property')
cucsStorageEnclosureModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureModel.setDescription('Cisco UCS storage:Enclosure:model managed object property')
cucsStorageEnclosureNumSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureNumSlots.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureNumSlots.setDescription('Cisco UCS storage:Enclosure:numSlots managed object property')
cucsStorageEnclosureRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureRevision.setDescription('Cisco UCS storage:Enclosure:revision managed object property')
cucsStorageEnclosureSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureSerial.setDescription('Cisco UCS storage:Enclosure:serial managed object property')
cucsStorageEnclosureVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureVendor.setDescription('Cisco UCS storage:Enclosure:vendor managed object property')
cucsStorageEnclosureLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 10), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureLc.setDescription('Cisco UCS storage:Enclosure:lc managed object property')
cucsStorageEnclosureDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 12, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEnclosureDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEnclosureDescr.setDescription('Cisco UCS storage:Enclosure:descr managed object property')
cucsStorageEpUserTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18), )
if mibBuilder.loadTexts: cucsStorageEpUserTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserTable.setDescription('Cisco UCS storage:EpUser managed object table')
cucsStorageEpUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEpUserInstanceId"))
if mibBuilder.loadTexts: cucsStorageEpUserEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserEntry.setDescription('Entry for the cucsStorageEpUserTable table.')
cucsStorageEpUserInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageEpUserInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageEpUserDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserDn.setDescription('Cisco UCS storage:EpUser:dn managed object property')
cucsStorageEpUserRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserRn.setDescription('Cisco UCS storage:EpUser:rn managed object property')
cucsStorageEpUserConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 4), CucsAaaConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserConfigState.setDescription('Cisco UCS storage:EpUser:configState managed object property')
cucsStorageEpUserConfigStatusMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserConfigStatusMessage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserConfigStatusMessage.setDescription('Cisco UCS storage:EpUser:configStatusMessage managed object property')
cucsStorageEpUserDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserDescr.setDescription('Cisco UCS storage:EpUser:descr managed object property')
cucsStorageEpUserDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserDomain.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserDomain.setDescription('Cisco UCS storage:EpUser:domain managed object property')
cucsStorageEpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserName.setDescription('Cisco UCS storage:EpUser:name managed object property')
cucsStorageEpUserPriv = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 9), CucsStorageEpAccess()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPriv.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserPriv.setDescription('Cisco UCS storage:EpUser:priv managed object property')
cucsStorageEpUserPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPwd.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserPwd.setDescription('Cisco UCS storage:EpUser:pwd managed object property')
cucsStorageEpUserPwdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 18, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEpUserPwdSet.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEpUserPwdSet.setDescription('Cisco UCS storage:EpUser:pwdSet managed object property')
cucsStorageEtherIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19), )
if mibBuilder.loadTexts: cucsStorageEtherIfTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfTable.setDescription('Cisco UCS storage:EtherIf managed object table')
cucsStorageEtherIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageEtherIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageEtherIfEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfEntry.setDescription('Entry for the cucsStorageEtherIfTable table.')
cucsStorageEtherIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageEtherIfInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageEtherIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfDn.setDescription('Cisco UCS storage:EtherIf:dn managed object property')
cucsStorageEtherIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfRn.setDescription('Cisco UCS storage:EtherIf:rn managed object property')
cucsStorageEtherIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfName.setDescription('Cisco UCS storage:EtherIf:name managed object property')
cucsStorageEtherIfVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 19, 1, 5), CucsStorageEtherIfVlanType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageEtherIfVlanType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageEtherIfVlanType.setDescription('Cisco UCS storage:EtherIf:vlanType managed object property')
cucsStorageFcIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20), )
if mibBuilder.loadTexts: cucsStorageFcIfTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfTable.setDescription('Cisco UCS storage:FcIf managed object table')
cucsStorageFcIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcIfEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfEntry.setDescription('Entry for the cucsStorageFcIfTable table.')
cucsStorageFcIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFcIfInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFcIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfDn.setDescription('Cisco UCS storage:FcIf:dn managed object property')
cucsStorageFcIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfRn.setDescription('Cisco UCS storage:FcIf:rn managed object property')
cucsStorageFcIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 20, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcIfName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcIfName.setDescription('Cisco UCS storage:FcIf:name managed object property')
cucsStorageFcTargetEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21), )
if mibBuilder.loadTexts: cucsStorageFcTargetEpTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpTable.setDescription('Cisco UCS storage:FcTargetEp managed object table')
cucsStorageFcTargetEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcTargetEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcTargetEpEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpEntry.setDescription('Entry for the cucsStorageFcTargetEpTable table.')
cucsStorageFcTargetEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFcTargetEpInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFcTargetEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpDn.setDescription('Cisco UCS storage:FcTargetEp:dn managed object property')
cucsStorageFcTargetEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpRn.setDescription('Cisco UCS storage:FcTargetEp:rn managed object property')
cucsStorageFcTargetEpDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpDescr.setDescription('Cisco UCS storage:FcTargetEp:descr managed object property')
cucsStorageFcTargetEpPath = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 5), CucsStorageTargetPath()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpPath.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpPath.setDescription('Cisco UCS storage:FcTargetEp:path managed object property')
cucsStorageFcTargetEpTargetwwpn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 21, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetEpTargetwwpn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetEpTargetwwpn.setDescription('Cisco UCS storage:FcTargetEp:targetwwpn managed object property')
cucsStorageFcTargetIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22), )
if mibBuilder.loadTexts: cucsStorageFcTargetIfTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfTable.setDescription('Cisco UCS storage:FcTargetIf managed object table')
cucsStorageFcTargetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFcTargetIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageFcTargetIfEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfEntry.setDescription('Entry for the cucsStorageFcTargetIfTable table.')
cucsStorageFcTargetIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFcTargetIfInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFcTargetIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfDn.setDescription('Cisco UCS storage:FcTargetIf:dn managed object property')
cucsStorageFcTargetIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfRn.setDescription('Cisco UCS storage:FcTargetIf:rn managed object property')
cucsStorageFcTargetIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 4), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfId.setDescription('Cisco UCS storage:FcTargetIf:id managed object property')
cucsStorageFcTargetIfProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 22, 1, 5), CucsStorageProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFcTargetIfProt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFcTargetIfProt.setDescription('Cisco UCS storage:FcTargetIf:prot managed object property')
cucsStorageFlexFlashCardTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34), )
if mibBuilder.loadTexts: cucsStorageFlexFlashCardTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardTable.setDescription('Cisco UCS storage:FlexFlashCard managed object table')
cucsStorageFlexFlashCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashCardInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashCardEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardEntry.setDescription('Entry for the cucsStorageFlexFlashCardTable table.')
cucsStorageFlexFlashCardInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashCardInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashCardDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDn.setDescription('Cisco UCS storage:FlexFlashCard:dn managed object property')
cucsStorageFlexFlashCardRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRn.setDescription('Cisco UCS storage:FlexFlashCard:rn managed object property')
cucsStorageFlexFlashCardBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardBlockSize.setDescription('Cisco UCS storage:FlexFlashCard:blockSize managed object property')
cucsStorageFlexFlashCardCardHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 5), CucsStorageFFCardHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardHealth.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardHealth.setDescription('Cisco UCS storage:FlexFlashCard:cardHealth managed object property')
cucsStorageFlexFlashCardCardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 6), CucsStorageFFCardMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardMode.setDescription('Cisco UCS storage:FlexFlashCard:cardMode managed object property')
cucsStorageFlexFlashCardCardType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardType.setDescription('Cisco UCS storage:FlexFlashCard:cardType managed object property')
cucsStorageFlexFlashCardConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 8), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardConnectionProtocol.setDescription('Cisco UCS storage:FlexFlashCard:connectionProtocol managed object property')
cucsStorageFlexFlashCardControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardControllerIndex.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardControllerIndex.setDescription('Cisco UCS storage:FlexFlashCard:controllerIndex managed object property')
cucsStorageFlexFlashCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardId.setDescription('Cisco UCS storage:FlexFlashCard:id managed object property')
cucsStorageFlexFlashCardMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgDate.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgDate.setDescription('Cisco UCS storage:FlexFlashCard:mfgDate managed object property')
cucsStorageFlexFlashCardMfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardMfgId.setDescription('Cisco UCS storage:FlexFlashCard:mfgId managed object property')
cucsStorageFlexFlashCardModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardModel.setDescription('Cisco UCS storage:FlexFlashCard:model managed object property')
cucsStorageFlexFlashCardNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardNumberOfBlocks.setDescription('Cisco UCS storage:FlexFlashCard:numberOfBlocks managed object property')
cucsStorageFlexFlashCardOemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOemId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOemId.setDescription('Cisco UCS storage:FlexFlashCard:oemId managed object property')
cucsStorageFlexFlashCardOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperQualifierReason.setDescription('Cisco UCS storage:FlexFlashCard:operQualifierReason managed object property')
cucsStorageFlexFlashCardOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 17), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardOperability.setDescription('Cisco UCS storage:FlexFlashCard:operability managed object property')
cucsStorageFlexFlashCardPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 18), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPresence.setDescription('Cisco UCS storage:FlexFlashCard:presence managed object property')
cucsStorageFlexFlashCardReadIOErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadIOErrorCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadIOErrorCount.setDescription('Cisco UCS storage:FlexFlashCard:readIOErrorCount managed object property')
cucsStorageFlexFlashCardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 20), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardRevision.setDescription('Cisco UCS storage:FlexFlashCard:revision managed object property')
cucsStorageFlexFlashCardSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSerial.setDescription('Cisco UCS storage:FlexFlashCard:serial managed object property')
cucsStorageFlexFlashCardSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 22), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSize.setDescription('Cisco UCS storage:FlexFlashCard:size managed object property')
cucsStorageFlexFlashCardSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSlotNumber.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSlotNumber.setDescription('Cisco UCS storage:FlexFlashCard:slotNumber managed object property')
cucsStorageFlexFlashCardVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 24), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardVendor.setDescription('Cisco UCS storage:FlexFlashCard:vendor managed object property')
cucsStorageFlexFlashCardWriteEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 25), CucsStorageFFCardWriteEnable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteEnable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteEnable.setDescription('Cisco UCS storage:FlexFlashCard:writeEnable managed object property')
cucsStorageFlexFlashCardWriteIOErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteIOErrorCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteIOErrorCount.setDescription('Cisco UCS storage:FlexFlashCard:writeIOErrorCount managed object property')
cucsStorageFlexFlashCardCardState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 27), CucsStorageFFCardState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardState.setDescription('Cisco UCS storage:FlexFlashCard:cardState managed object property')
cucsStorageFlexFlashCardCardSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 28), CucsStorageFFCardSync()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardSync.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardCardSync.setDescription('Cisco UCS storage:FlexFlashCard:cardSync managed object property')
cucsStorageFlexFlashCardDrivesEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDrivesEnabled.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardDrivesEnabled.setDescription('Cisco UCS storage:FlexFlashCard:drivesEnabled managed object property')
cucsStorageFlexFlashCardPartitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPartitionCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardPartitionCount.setDescription('Cisco UCS storage:FlexFlashCard:partitionCount managed object property')
cucsStorageFlexFlashCardReadErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardReadErrorThreshold.setDescription('Cisco UCS storage:FlexFlashCard:readErrorThreshold managed object property')
cucsStorageFlexFlashCardSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSignature.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardSignature.setDescription('Cisco UCS storage:FlexFlashCard:signature managed object property')
cucsStorageFlexFlashCardWriteErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 34, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashCardWriteErrorThreshold.setDescription('Cisco UCS storage:FlexFlashCard:writeErrorThreshold managed object property')
cucsStorageFlexFlashControllerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35), )
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerTable.setDescription('Cisco UCS storage:FlexFlashController managed object table')
cucsStorageFlexFlashControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerEntry.setDescription('Entry for the cucsStorageFlexFlashControllerTable table.')
cucsStorageFlexFlashControllerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashControllerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerDn.setDescription('Cisco UCS storage:FlexFlashController:dn managed object property')
cucsStorageFlexFlashControllerRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRn.setDescription('Cisco UCS storage:FlexFlashController:rn managed object property')
cucsStorageFlexFlashControllerControllerHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 4), CucsStorageFFControllerHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerHealth.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerHealth.setDescription('Cisco UCS storage:FlexFlashController:controllerHealth managed object property')
cucsStorageFlexFlashControllerControllerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 5), CucsStorageFFControllerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerControllerState.setDescription('Cisco UCS storage:FlexFlashController:controllerState managed object property')
cucsStorageFlexFlashControllerFlexFlashType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 6), CucsStorageFFType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFlexFlashType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFlexFlashType.setDescription('Cisco UCS storage:FlexFlashController:flexFlashType managed object property')
cucsStorageFlexFlashControllerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 7), CucsStorageFlexFlashControllerId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerId.setDescription('Cisco UCS storage:FlexFlashController:id managed object property')
cucsStorageFlexFlashControllerModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerModel.setDescription('Cisco UCS storage:FlexFlashController:model managed object property')
cucsStorageFlexFlashControllerOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperQualifierReason.setDescription('Cisco UCS storage:FlexFlashController:operQualifierReason managed object property')
cucsStorageFlexFlashControllerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperState.setDescription('Cisco UCS storage:FlexFlashController:operState managed object property')
cucsStorageFlexFlashControllerOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 11), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperability.setDescription('Cisco UCS storage:FlexFlashController:operability managed object property')
cucsStorageFlexFlashControllerPciAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciAddr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciAddr.setDescription('Cisco UCS storage:FlexFlashController:pciAddr managed object property')
cucsStorageFlexFlashControllerPciSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciSlot.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPciSlot.setDescription('Cisco UCS storage:FlexFlashController:pciSlot managed object property')
cucsStorageFlexFlashControllerPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 14), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPerf.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPerf.setDescription('Cisco UCS storage:FlexFlashController:perf managed object property')
cucsStorageFlexFlashControllerPhysicalDriveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPhysicalDriveCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPhysicalDriveCount.setDescription('Cisco UCS storage:FlexFlashController:physicalDriveCount managed object property')
cucsStorageFlexFlashControllerPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 16), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPower.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPower.setDescription('Cisco UCS storage:FlexFlashController:power managed object property')
cucsStorageFlexFlashControllerPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 17), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPresence.setDescription('Cisco UCS storage:FlexFlashController:presence managed object property')
cucsStorageFlexFlashControllerPrimarySlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPrimarySlotNumber.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerPrimarySlotNumber.setDescription('Cisco UCS storage:FlexFlashController:primarySlotNumber managed object property')
cucsStorageFlexFlashControllerRaidSyncSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 19), CucsStorageFFRaidSyncSupport()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRaidSyncSupport.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRaidSyncSupport.setDescription('Cisco UCS storage:FlexFlashController:raidSyncSupport managed object property')
cucsStorageFlexFlashControllerReadErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerReadErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerReadErrorThreshold.setDescription('Cisco UCS storage:FlexFlashController:readErrorThreshold managed object property')
cucsStorageFlexFlashControllerRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerRevision.setDescription('Cisco UCS storage:FlexFlashController:revision managed object property')
cucsStorageFlexFlashControllerSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 22), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerSerial.setDescription('Cisco UCS storage:FlexFlashController:serial managed object property')
cucsStorageFlexFlashControllerThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 23), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerThermal.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerThermal.setDescription('Cisco UCS storage:FlexFlashController:thermal managed object property')
cucsStorageFlexFlashControllerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 24), CucsStorageControllerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerType.setDescription('Cisco UCS storage:FlexFlashController:type managed object property')
cucsStorageFlexFlashControllerVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 25), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVendor.setDescription('Cisco UCS storage:FlexFlashController:vendor managed object property')
cucsStorageFlexFlashControllerVirtualDriveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVirtualDriveCount.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVirtualDriveCount.setDescription('Cisco UCS storage:FlexFlashController:virtualDriveCount managed object property')
cucsStorageFlexFlashControllerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 27), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVoltage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerVoltage.setDescription('Cisco UCS storage:FlexFlashController:voltage managed object property')
cucsStorageFlexFlashControllerWriteErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerWriteErrorThreshold.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerWriteErrorThreshold.setDescription('Cisco UCS storage:FlexFlashController:writeErrorThreshold managed object property')
cucsStorageFlexFlashControllerLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 29), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerLocationDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerLocationDn.setDescription('Cisco UCS storage:FlexFlashController:locationDn managed object property')
cucsStorageFlexFlashControllerAdminSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 30), CucsStorageFFSlotENUM()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerAdminSlotNumber.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerAdminSlotNumber.setDescription('Cisco UCS storage:FlexFlashController:adminSlotNumber managed object property')
cucsStorageFlexFlashControllerConfiguredMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 31), CucsStorageOperatingModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerConfiguredMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerConfiguredMode.setDescription('Cisco UCS storage:FlexFlashController:configuredMode managed object property')
cucsStorageFlexFlashControllerFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFirmwareVersion.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFirmwareVersion.setDescription('Cisco UCS storage:FlexFlashController:firmwareVersion managed object property')
cucsStorageFlexFlashControllerFsmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 33), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDescr.setDescription('Cisco UCS storage:FlexFlashController:fsmDescr managed object property')
cucsStorageFlexFlashControllerFsmPrev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 34), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmPrev.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmPrev.setDescription('Cisco UCS storage:FlexFlashController:fsmPrev managed object property')
cucsStorageFlexFlashControllerFsmProgr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgr.setDescription('Cisco UCS storage:FlexFlashController:fsmProgr managed object property')
cucsStorageFlexFlashControllerFsmRmtInvErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrCode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrCode.setDescription('Cisco UCS storage:FlexFlashController:fsmRmtInvErrCode managed object property')
cucsStorageFlexFlashControllerFsmRmtInvErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 37), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvErrDescr.setDescription('Cisco UCS storage:FlexFlashController:fsmRmtInvErrDescr managed object property')
cucsStorageFlexFlashControllerFsmRmtInvRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 38), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvRslt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtInvRslt.setDescription('Cisco UCS storage:FlexFlashController:fsmRmtInvRslt managed object property')
cucsStorageFlexFlashControllerFsmStageDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 39), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDescr.setDescription('Cisco UCS storage:FlexFlashController:fsmStageDescr managed object property')
cucsStorageFlexFlashControllerFsmStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 40), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStamp.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStamp.setDescription('Cisco UCS storage:FlexFlashController:fsmStamp managed object property')
cucsStorageFlexFlashControllerFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 41), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStatus.setDescription('Cisco UCS storage:FlexFlashController:fsmStatus managed object property')
cucsStorageFlexFlashControllerFsmTry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTry.setDescription('Cisco UCS storage:FlexFlashController:fsmTry managed object property')
cucsStorageFlexFlashControllerHasError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 43), CucsStorageFFHasError()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerHasError.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerHasError.setDescription('Cisco UCS storage:FlexFlashController:hasError managed object property')
cucsStorageFlexFlashControllerIsCardMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 44), CucsStorageFFCardSizeMismatch()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerIsCardMismatch.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerIsCardMismatch.setDescription('Cisco UCS storage:FlexFlashController:isCardMismatch managed object property')
cucsStorageFlexFlashControllerIsFormatFSMRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 45), CucsStorageFFFormatRunning()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerIsFormatFSMRunning.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerIsFormatFSMRunning.setDescription('Cisco UCS storage:FlexFlashController:isFormatFSMRunning managed object property')
cucsStorageFlexFlashControllerOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 46), CucsStorageOperatingModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperatingMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperatingMode.setDescription('Cisco UCS storage:FlexFlashController:operatingMode managed object property')
cucsStorageFlexFlashControllerOperationRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 35, 1, 47), CucsStorageOperationRequestType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperationRequest.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerOperationRequest.setDescription('Cisco UCS storage:FlexFlashController:operationRequest managed object property')
cucsStorageFlexFlashControllerFsmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40), )
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTable.setDescription('Cisco UCS storage:FlexFlashControllerFsm managed object table')
cucsStorageFlexFlashControllerFsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmEntry.setDescription('Entry for the cucsStorageFlexFlashControllerFsmTable table.')
cucsStorageFlexFlashControllerFsmInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashControllerFsmDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDn.setDescription('Cisco UCS storage:FlexFlashControllerFsm:dn managed object property')
cucsStorageFlexFlashControllerFsmRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRn.setDescription('Cisco UCS storage:FlexFlashControllerFsm:rn managed object property')
cucsStorageFlexFlashControllerFsmCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCompletionTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCompletionTime.setDescription('Cisco UCS storage:FlexFlashControllerFsm:completionTime managed object property')
cucsStorageFlexFlashControllerFsmCurrentFsm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 5), CucsStorageFlexFlashControllerFsmCurrentFsm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCurrentFsm.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmCurrentFsm.setDescription('Cisco UCS storage:FlexFlashControllerFsm:currentFsm managed object property')
cucsStorageFlexFlashControllerFsmDescrData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDescrData.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmDescrData.setDescription('Cisco UCS storage:FlexFlashControllerFsm:descr managed object property')
cucsStorageFlexFlashControllerFsmFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 7), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmFsmStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmFsmStatus.setDescription('Cisco UCS storage:FlexFlashControllerFsm:fsmStatus managed object property')
cucsStorageFlexFlashControllerFsmProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgress.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmProgress.setDescription('Cisco UCS storage:FlexFlashControllerFsm:progress managed object property')
cucsStorageFlexFlashControllerFsmRmtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrCode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrCode.setDescription('Cisco UCS storage:FlexFlashControllerFsm:rmtErrCode managed object property')
cucsStorageFlexFlashControllerFsmRmtErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtErrDescr.setDescription('Cisco UCS storage:FlexFlashControllerFsm:rmtErrDescr managed object property')
cucsStorageFlexFlashControllerFsmRmtRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 40, 1, 11), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtRslt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmRmtRslt.setDescription('Cisco UCS storage:FlexFlashControllerFsm:rmtRslt managed object property')
cucsStorageFlexFlashControllerFsmStageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41), )
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageTable.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage managed object table')
cucsStorageFlexFlashControllerFsmStageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmStageInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageEntry.setDescription('Entry for the cucsStorageFlexFlashControllerFsmStageTable table.')
cucsStorageFlexFlashControllerFsmStageInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashControllerFsmStageDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDn.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:dn managed object property')
cucsStorageFlexFlashControllerFsmStageRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRn.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:rn managed object property')
cucsStorageFlexFlashControllerFsmStageDescrData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDescrData.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageDescrData.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:descr managed object property')
cucsStorageFlexFlashControllerFsmStageLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageLastUpdateTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageLastUpdateTime.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:lastUpdateTime managed object property')
cucsStorageFlexFlashControllerFsmStageName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 6), CucsStorageFlexFlashControllerFsmStageName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageName.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:name managed object property')
cucsStorageFlexFlashControllerFsmStageOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageOrder.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageOrder.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:order managed object property')
cucsStorageFlexFlashControllerFsmStageRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRetry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageRetry.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:retry managed object property')
cucsStorageFlexFlashControllerFsmStageStageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 41, 1, 9), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageStageStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmStageStageStatus.setDescription('Cisco UCS storage:FlexFlashControllerFsmStage:stageStatus managed object property')
cucsStorageFlexFlashControllerFsmTaskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42), )
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskTable.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask managed object table')
cucsStorageFlexFlashControllerFsmTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashControllerFsmTaskInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskEntry.setDescription('Entry for the cucsStorageFlexFlashControllerFsmTaskTable table.')
cucsStorageFlexFlashControllerFsmTaskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashControllerFsmTaskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskDn.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:dn managed object property')
cucsStorageFlexFlashControllerFsmTaskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskRn.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:rn managed object property')
cucsStorageFlexFlashControllerFsmTaskCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 4), CucsFsmCompletion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskCompletion.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskCompletion.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:completion managed object property')
cucsStorageFlexFlashControllerFsmTaskFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 5), CucsFsmFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskFlags.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskFlags.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:flags managed object property')
cucsStorageFlexFlashControllerFsmTaskItem = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 6), CucsStorageFlexFlashControllerFsmTaskItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskItem.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskItem.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:item managed object property')
cucsStorageFlexFlashControllerFsmTaskSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 42, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskSeqId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashControllerFsmTaskSeqId.setDescription('Cisco UCS storage:FlexFlashControllerFsmTask:seqId managed object property')
cucsStorageFlexFlashDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36), )
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveTable.setDescription('Cisco UCS storage:FlexFlashDrive managed object table')
cucsStorageFlexFlashDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveEntry.setDescription('Entry for the cucsStorageFlexFlashDriveTable table.')
cucsStorageFlexFlashDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDn.setDescription('Cisco UCS storage:FlexFlashDrive:dn managed object property')
cucsStorageFlexFlashDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRn.setDescription('Cisco UCS storage:FlexFlashDrive:rn managed object property')
cucsStorageFlexFlashDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveBlockSize.setDescription('Cisco UCS storage:FlexFlashDrive:blockSize managed object property')
cucsStorageFlexFlashDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveConnectionProtocol.setDescription('Cisco UCS storage:FlexFlashDrive:connectionProtocol managed object property')
cucsStorageFlexFlashDriveControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveControllerIndex.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveControllerIndex.setDescription('Cisco UCS storage:FlexFlashDrive:controllerIndex managed object property')
cucsStorageFlexFlashDriveDriveState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 7), CucsStorageFFDriveState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveState.setDescription('Cisco UCS storage:FlexFlashDrive:driveState managed object property')
cucsStorageFlexFlashDriveDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 8), CucsStorageFFDriveType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveDriveType.setDescription('Cisco UCS storage:FlexFlashDrive:driveType managed object property')
cucsStorageFlexFlashDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveId.setDescription('Cisco UCS storage:FlexFlashDrive:id managed object property')
cucsStorageFlexFlashDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveModel.setDescription('Cisco UCS storage:FlexFlashDrive:model managed object property')
cucsStorageFlexFlashDriveName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveName.setDescription('Cisco UCS storage:FlexFlashDrive:name managed object property')
cucsStorageFlexFlashDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 12), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveNumberOfBlocks.setDescription('Cisco UCS storage:FlexFlashDrive:numberOfBlocks managed object property')
cucsStorageFlexFlashDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperQualifierReason.setDescription('Cisco UCS storage:FlexFlashDrive:operQualifierReason managed object property')
cucsStorageFlexFlashDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 14), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperability.setDescription('Cisco UCS storage:FlexFlashDrive:operability managed object property')
cucsStorageFlexFlashDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 15), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDrivePresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDrivePresence.setDescription('Cisco UCS storage:FlexFlashDrive:presence managed object property')
cucsStorageFlexFlashDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRevision.setDescription('Cisco UCS storage:FlexFlashDrive:revision managed object property')
cucsStorageFlexFlashDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSerial.setDescription('Cisco UCS storage:FlexFlashDrive:serial managed object property')
cucsStorageFlexFlashDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 18), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSize.setDescription('Cisco UCS storage:FlexFlashDrive:size managed object property')
cucsStorageFlexFlashDriveSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSlotNumber.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveSlotNumber.setDescription('Cisco UCS storage:FlexFlashDrive:slotNumber managed object property')
cucsStorageFlexFlashDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 20), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVendor.setDescription('Cisco UCS storage:FlexFlashDrive:vendor managed object property')
cucsStorageFlexFlashDriveVisible = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 21), CucsStorageFFDriveVisible()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVisible.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveVisible.setDescription('Cisco UCS storage:FlexFlashDrive:visible managed object property')
cucsStorageFlexFlashDriveRemovable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 22), CucsStorageFFDriveRemovable()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRemovable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRemovable.setDescription('Cisco UCS storage:FlexFlashDrive:removable managed object property')
cucsStorageFlexFlashDriveRWType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 23), CucsStorageFFRWType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRWType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveRWType.setDescription('Cisco UCS storage:FlexFlashDrive:RWType managed object property')
cucsStorageFlexFlashDriveLastOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 24), CucsStorageOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveLastOperation.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveLastOperation.setDescription('Cisco UCS storage:FlexFlashDrive:lastOperation managed object property')
cucsStorageFlexFlashDriveOperationState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 36, 1, 25), CucsStorageOperationStateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperationState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashDriveOperationState.setDescription('Cisco UCS storage:FlexFlashDrive:operationState managed object property')
cucsStorageFlexFlashVirtualDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37), )
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveTable.setDescription('Cisco UCS storage:FlexFlashVirtualDrive managed object table')
cucsStorageFlexFlashVirtualDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageFlexFlashVirtualDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveEntry.setDescription('Entry for the cucsStorageFlexFlashVirtualDriveTable table.')
cucsStorageFlexFlashVirtualDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageFlexFlashVirtualDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveDn.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:dn managed object property')
cucsStorageFlexFlashVirtualDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRn.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:rn managed object property')
cucsStorageFlexFlashVirtualDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveBlockSize.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:blockSize managed object property')
cucsStorageFlexFlashVirtualDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveConnectionProtocol.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:connectionProtocol managed object property')
cucsStorageFlexFlashVirtualDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveId.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:id managed object property')
cucsStorageFlexFlashVirtualDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveModel.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:model managed object property')
cucsStorageFlexFlashVirtualDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveNumberOfBlocks.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:numberOfBlocks managed object property')
cucsStorageFlexFlashVirtualDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperQualifierReason.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:operQualifierReason managed object property')
cucsStorageFlexFlashVirtualDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveOperability.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:operability managed object property')
cucsStorageFlexFlashVirtualDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDrivePresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDrivePresence.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:presence managed object property')
cucsStorageFlexFlashVirtualDriveRaidHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 12), CucsStorageFFRAIDHealth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidHealth.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidHealth.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:raidHealth managed object property')
cucsStorageFlexFlashVirtualDriveRaidState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 13), CucsStorageFFRAIDState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRaidState.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:raidState managed object property')
cucsStorageFlexFlashVirtualDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveRevision.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:revision managed object property')
cucsStorageFlexFlashVirtualDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSerial.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:serial managed object property')
cucsStorageFlexFlashVirtualDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 16), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveSize.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:size managed object property')
cucsStorageFlexFlashVirtualDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 17), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveType.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:type managed object property')
cucsStorageFlexFlashVirtualDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 37, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageFlexFlashVirtualDriveVendor.setDescription('Cisco UCS storage:FlexFlashVirtualDrive:vendor managed object property')
cucsStorageIScsiTargetIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23), )
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfTable.setDescription('Cisco UCS storage:IScsiTargetIf managed object table')
cucsStorageIScsiTargetIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageIScsiTargetIfInstanceId"))
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfEntry.setDescription('Entry for the cucsStorageIScsiTargetIfTable table.')
cucsStorageIScsiTargetIfInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageIScsiTargetIfDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfDn.setDescription('Cisco UCS storage:IScsiTargetIf:dn managed object property')
cucsStorageIScsiTargetIfRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfRn.setDescription('Cisco UCS storage:IScsiTargetIf:rn managed object property')
cucsStorageIScsiTargetIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfName.setDescription('Cisco UCS storage:IScsiTargetIf:name managed object property')
cucsStorageIScsiTargetIfProt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 23, 1, 5), CucsStorageProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfProt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIScsiTargetIfProt.setDescription('Cisco UCS storage:IScsiTargetIf:prot managed object property')
cucsStorageIniGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24), )
if mibBuilder.loadTexts: cucsStorageIniGroupTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupTable.setDescription('Cisco UCS storage:IniGroup managed object table')
cucsStorageIniGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageIniGroupInstanceId"))
if mibBuilder.loadTexts: cucsStorageIniGroupEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupEntry.setDescription('Entry for the cucsStorageIniGroupTable table.')
cucsStorageIniGroupInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageIniGroupInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageIniGroupDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupDn.setDescription('Cisco UCS storage:IniGroup:dn managed object property')
cucsStorageIniGroupRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupRn.setDescription('Cisco UCS storage:IniGroup:rn managed object property')
cucsStorageIniGroupDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupDescr.setDescription('Cisco UCS storage:IniGroup:descr managed object property')
cucsStorageIniGroupGroupPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupGroupPolicyName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupGroupPolicyName.setDescription('Cisco UCS storage:IniGroup:groupPolicyName managed object property')
cucsStorageIniGroupIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupIntId.setDescription('Cisco UCS storage:IniGroup:intId managed object property')
cucsStorageIniGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupName.setDescription('Cisco UCS storage:IniGroup:name managed object property')
cucsStorageIniGroupOperProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 8), CucsStorageIniGroupOperProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOperProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupOperProtocol.setDescription('Cisco UCS storage:IniGroup:operProtocol managed object property')
cucsStorageIniGroupOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 9), CucsStorageIniGroupOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupOwner.setDescription('Cisco UCS storage:IniGroup:owner managed object property')
cucsStorageIniGroupPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyLevel.setDescription('Cisco UCS storage:IniGroup:policyLevel managed object property')
cucsStorageIniGroupPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyName.setDescription('Cisco UCS storage:IniGroup:policyName managed object property')
cucsStorageIniGroupPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 12), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupPolicyOwner.setDescription('Cisco UCS storage:IniGroup:policyOwner managed object property')
cucsStorageIniGroupProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 13), CucsStorageIniGroupProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupProtocol.setDescription('Cisco UCS storage:IniGroup:protocol managed object property')
cucsStorageIniGroupRmtDiskCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupRmtDiskCfgName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupRmtDiskCfgName.setDescription('Cisco UCS storage:IniGroup:rmtDiskCfgName managed object property')
cucsStorageIniGroupOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 24, 1, 15), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageIniGroupOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageIniGroupOperState.setDescription('Cisco UCS storage:IniGroup:operState managed object property')
cucsStorageInitiatorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25), )
if mibBuilder.loadTexts: cucsStorageInitiatorTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorTable.setDescription('Cisco UCS storage:Initiator managed object table')
cucsStorageInitiatorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageInitiatorInstanceId"))
if mibBuilder.loadTexts: cucsStorageInitiatorEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorEntry.setDescription('Entry for the cucsStorageInitiatorTable table.')
cucsStorageInitiatorInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageInitiatorInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageInitiatorDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorDn.setDescription('Cisco UCS storage:Initiator:dn managed object property')
cucsStorageInitiatorRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorRn.setDescription('Cisco UCS storage:Initiator:rn managed object property')
cucsStorageInitiatorDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorDescr.setDescription('Cisco UCS storage:Initiator:descr managed object property')
cucsStorageInitiatorIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorIntId.setDescription('Cisco UCS storage:Initiator:intId managed object property')
cucsStorageInitiatorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorName.setDescription('Cisco UCS storage:Initiator:name managed object property')
cucsStorageInitiatorOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 7), CucsStorageOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorOperState.setDescription('Cisco UCS storage:Initiator:operState managed object property')
cucsStorageInitiatorPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyLevel.setDescription('Cisco UCS storage:Initiator:policyLevel managed object property')
cucsStorageInitiatorPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 9), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorPolicyOwner.setDescription('Cisco UCS storage:Initiator:policyOwner managed object property')
cucsStorageInitiatorDuplicateTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 25, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageInitiatorDuplicateTarget.setStatus('current')
if mibBuilder.loadTexts: cucsStorageInitiatorDuplicateTarget.setDescription('Cisco UCS storage:Initiator:duplicateTarget managed object property')
cucsStorageItemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3), )
if mibBuilder.loadTexts: cucsStorageItemTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemTable.setDescription('Cisco UCS storage:Item managed object table')
cucsStorageItemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageItemInstanceId"))
if mibBuilder.loadTexts: cucsStorageItemEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemEntry.setDescription('Entry for the cucsStorageItemTable table.')
cucsStorageItemInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageItemInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageItemDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemDn.setDescription('Cisco UCS storage:Item:dn managed object property')
cucsStorageItemRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemRn.setDescription('Cisco UCS storage:Item:rn managed object property')
cucsStorageItemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemName.setDescription('Cisco UCS storage:Item:name managed object property')
cucsStorageItemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 5), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemSize.setDescription('Cisco UCS storage:Item:size managed object property')
cucsStorageItemUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemUsed.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemUsed.setDescription('Cisco UCS storage:Item:used managed object property')
cucsStorageItemOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 3, 1, 7), CucsStorageFileSystemStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageItemOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageItemOperState.setDescription('Cisco UCS storage:Item:operState managed object property')
cucsStorageLocalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4), )
if mibBuilder.loadTexts: cucsStorageLocalDiskTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskTable.setDescription('Cisco UCS storage:LocalDisk managed object table')
cucsStorageLocalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskEntry.setDescription('Entry for the cucsStorageLocalDiskTable table.')
cucsStorageLocalDiskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalDiskInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalDiskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskDn.setDescription('Cisco UCS storage:LocalDisk:dn managed object property')
cucsStorageLocalDiskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskRn.setDescription('Cisco UCS storage:LocalDisk:rn managed object property')
cucsStorageLocalDiskBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskBlockSize.setDescription('Cisco UCS storage:LocalDisk:blockSize managed object property')
cucsStorageLocalDiskConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConnectionProtocol.setDescription('Cisco UCS storage:LocalDisk:connectionProtocol managed object property')
cucsStorageLocalDiskId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskId.setDescription('Cisco UCS storage:LocalDisk:id managed object property')
cucsStorageLocalDiskModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskModel.setDescription('Cisco UCS storage:LocalDisk:model managed object property')
cucsStorageLocalDiskNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskNumberOfBlocks.setDescription('Cisco UCS storage:LocalDisk:numberOfBlocks managed object property')
cucsStorageLocalDiskOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskOperability.setDescription('Cisco UCS storage:LocalDisk:operability managed object property')
cucsStorageLocalDiskPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPresence.setDescription('Cisco UCS storage:LocalDisk:presence managed object property')
cucsStorageLocalDiskRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskRevision.setDescription('Cisco UCS storage:LocalDisk:revision managed object property')
cucsStorageLocalDiskSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSerial.setDescription('Cisco UCS storage:LocalDisk:serial managed object property')
cucsStorageLocalDiskSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSize.setDescription('Cisco UCS storage:LocalDisk:size managed object property')
cucsStorageLocalDiskVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskVendor.setDescription('Cisco UCS storage:LocalDisk:vendor managed object property')
cucsStorageLocalDiskLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 15), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskLc.setDescription('Cisco UCS storage:LocalDisk:lc managed object property')
cucsStorageLocalDiskOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskOperQualifierReason.setDescription('Cisco UCS storage:LocalDisk:operQualifierReason managed object property')
cucsStorageLocalDiskDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 17), CucsStorageTechnology()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDeviceType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskDeviceType.setDescription('Cisco UCS storage:LocalDisk:deviceType managed object property')
cucsStorageLocalDiskDiskState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 18), CucsStoragePDriveStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskDiskState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskDiskState.setDescription('Cisco UCS storage:LocalDisk:diskState managed object property')
cucsStorageLocalDiskLinkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 19), CucsStorageLinkSpeed()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskLinkSpeed.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskLinkSpeed.setDescription('Cisco UCS storage:LocalDisk:linkSpeed managed object property')
cucsStorageLocalDiskPowerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 20), CucsStoragePowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPowerState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPowerState.setDescription('Cisco UCS storage:LocalDisk:powerState managed object property')
cucsStorageLocalDiskAdminAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 21), CucsStorageAdminActionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminAction.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminAction.setDescription('Cisco UCS storage:LocalDisk:adminAction managed object property')
cucsStorageLocalDiskAdminActionTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 22), CucsStorageAdminActionTrigger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminActionTrigger.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminActionTrigger.setDescription('Cisco UCS storage:LocalDisk:adminActionTrigger managed object property')
cucsStorageLocalDiskBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 23), CucsStorageBootableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskBootable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskBootable.setDescription('Cisco UCS storage:LocalDisk:bootable managed object property')
cucsStorageLocalDiskConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 24), CucsStorageConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigState.setDescription('Cisco UCS storage:LocalDisk:configState managed object property')
cucsStorageLocalDiskThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 25), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskThermal.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskThermal.setDescription('Cisco UCS storage:LocalDisk:thermal managed object property')
cucsStorageLocalDiskAdminVirtualDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminVirtualDriveId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskAdminVirtualDriveId.setDescription('Cisco UCS storage:LocalDisk:adminVirtualDriveId managed object property')
cucsStorageLocalDiskConfigCheckPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 4, 1, 27), CucsStorageConfigCheckPoint()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigCheckPoint.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigCheckPoint.setDescription('Cisco UCS storage:LocalDisk:configCheckPoint managed object property')
cucsStorageLocalDiskConfigDefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5), )
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefTable.setDescription('Cisco UCS storage:LocalDiskConfigDef managed object table')
cucsStorageLocalDiskConfigDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskConfigDefInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefEntry.setDescription('Entry for the cucsStorageLocalDiskConfigDefTable table.')
cucsStorageLocalDiskConfigDefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalDiskConfigDefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDn.setDescription('Cisco UCS storage:LocalDiskConfigDef:dn managed object property')
cucsStorageLocalDiskConfigDefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefRn.setDescription('Cisco UCS storage:LocalDiskConfigDef:rn managed object property')
cucsStorageLocalDiskConfigDefDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefDescr.setDescription('Cisco UCS storage:LocalDiskConfigDef:descr managed object property')
cucsStorageLocalDiskConfigDefIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefIntId.setDescription('Cisco UCS storage:LocalDiskConfigDef:intId managed object property')
cucsStorageLocalDiskConfigDefMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 6), CucsStorageLocalDiskMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefMode.setDescription('Cisco UCS storage:LocalDiskConfigDef:mode managed object property')
cucsStorageLocalDiskConfigDefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefName.setDescription('Cisco UCS storage:LocalDiskConfigDef:name managed object property')
cucsStorageLocalDiskConfigDefProtectConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefProtectConfig.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefProtectConfig.setDescription('Cisco UCS storage:LocalDiskConfigDef:protectConfig managed object property')
cucsStorageLocalDiskConfigDefPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyLevel.setDescription('Cisco UCS storage:LocalDiskConfigDef:policyLevel managed object property')
cucsStorageLocalDiskConfigDefPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 10), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefPolicyOwner.setDescription('Cisco UCS storage:LocalDiskConfigDef:policyOwner managed object property')
cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 11), CucsStorageLocalDiskConfigFlexFlashRAIDReportingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState.setDescription('Cisco UCS storage:LocalDiskConfigDef:flexFlashRAIDReportingState managed object property')
cucsStorageLocalDiskConfigDefFlexFlashState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 5, 1, 12), CucsStorageLocalDiskConfigFlexFlashState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigDefFlexFlashState.setDescription('Cisco UCS storage:LocalDiskConfigDef:flexFlashState managed object property')
cucsStorageLocalDiskConfigPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6), )
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyTable.setDescription('Cisco UCS storage:LocalDiskConfigPolicy managed object table')
cucsStorageLocalDiskConfigPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskConfigPolicyInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyEntry.setDescription('Entry for the cucsStorageLocalDiskConfigPolicyTable table.')
cucsStorageLocalDiskConfigPolicyInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalDiskConfigPolicyDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDn.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:dn managed object property')
cucsStorageLocalDiskConfigPolicyRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyRn.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:rn managed object property')
cucsStorageLocalDiskConfigPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyDescr.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:descr managed object property')
cucsStorageLocalDiskConfigPolicyIntId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyIntId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyIntId.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:intId managed object property')
cucsStorageLocalDiskConfigPolicyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 6), CucsStorageLocalDiskMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyMode.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:mode managed object property')
cucsStorageLocalDiskConfigPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyName.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:name managed object property')
cucsStorageLocalDiskConfigPolicyProtectConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyProtectConfig.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyProtectConfig.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:protectConfig managed object property')
cucsStorageLocalDiskConfigPolicyPolicyLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyLevel.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:policyLevel managed object property')
cucsStorageLocalDiskConfigPolicyPolicyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 10), CucsPolicyPolicyOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyOwner.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyPolicyOwner.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:policyOwner managed object property')
cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 11), CucsStorageLocalDiskConfigFlexFlashRAIDReportingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:flexFlashRAIDReportingSta te managed object property')
cucsStorageLocalDiskConfigPolicyFlexFlashState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 6, 1, 12), CucsStorageLocalDiskConfigFlexFlashState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskConfigPolicyFlexFlashState.setDescription('Cisco UCS storage:LocalDiskConfigPolicy:flexFlashState managed object property')
cucsStorageLocalDiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7), )
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionTable.setDescription('Cisco UCS storage:LocalDiskPartition managed object table')
cucsStorageLocalDiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskPartitionInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionEntry.setDescription('Entry for the cucsStorageLocalDiskPartitionTable table.')
cucsStorageLocalDiskPartitionInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalDiskPartitionDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionDn.setDescription('Cisco UCS storage:LocalDiskPartition:dn managed object property')
cucsStorageLocalDiskPartitionRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionRn.setDescription('Cisco UCS storage:LocalDiskPartition:rn managed object property')
cucsStorageLocalDiskPartitionName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionName.setDescription('Cisco UCS storage:LocalDiskPartition:name managed object property')
cucsStorageLocalDiskPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionSize.setDescription('Cisco UCS storage:LocalDiskPartition:size managed object property')
cucsStorageLocalDiskPartitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionType.setDescription('Cisco UCS storage:LocalDiskPartition:type managed object property')
cucsStorageLocalDiskPartitionBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 12), CucsStorageBootableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionBootable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionBootable.setDescription('Cisco UCS storage:LocalDiskPartition:bootable managed object property')
cucsStorageLocalDiskPartitionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionId.setDescription('Cisco UCS storage:LocalDiskPartition:id managed object property')
cucsStorageLocalDiskPartitionPartitionEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPartitionEnd.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPartitionEnd.setDescription('Cisco UCS storage:LocalDiskPartition:partitionEnd managed object property')
cucsStorageLocalDiskPartitionPartitionStart = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 15), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPartitionStart.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionPartitionStart.setDescription('Cisco UCS storage:LocalDiskPartition:partitionStart managed object property')
cucsStorageLocalDiskPartitionRawTypeDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 7, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionRawTypeDesc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskPartitionRawTypeDesc.setDescription('Cisco UCS storage:LocalDiskPartition:rawTypeDesc managed object property')
cucsStorageLocalDiskSlotEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13), )
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpTable.setDescription('Cisco UCS storage:LocalDiskSlotEp managed object table')
cucsStorageLocalDiskSlotEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalDiskSlotEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpEntry.setDescription('Entry for the cucsStorageLocalDiskSlotEpTable table.')
cucsStorageLocalDiskSlotEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalDiskSlotEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpDn.setDescription('Cisco UCS storage:LocalDiskSlotEp:dn managed object property')
cucsStorageLocalDiskSlotEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpRn.setDescription('Cisco UCS storage:LocalDiskSlotEp:rn managed object property')
cucsStorageLocalDiskSlotEpConfiguration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 4), CucsStorageConfiguration()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpConfiguration.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpConfiguration.setDescription('Cisco UCS storage:LocalDiskSlotEp:configuration managed object property')
cucsStorageLocalDiskSlotEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpId.setDescription('Cisco UCS storage:LocalDiskSlotEp:id managed object property')
cucsStorageLocalDiskSlotEpOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 6), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperability.setDescription('Cisco UCS storage:LocalDiskSlotEp:operability managed object property')
cucsStorageLocalDiskSlotEpPeerDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPeerDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPeerDn.setDescription('Cisco UCS storage:LocalDiskSlotEp:peerDn managed object property')
cucsStorageLocalDiskSlotEpPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 8), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpPresence.setDescription('Cisco UCS storage:LocalDiskSlotEp:presence managed object property')
cucsStorageLocalDiskSlotEpOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 13, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalDiskSlotEpOperQualifierReason.setDescription('Cisco UCS storage:LocalDiskSlotEp:operQualifierReason managed object property')
cucsStorageLocalLunTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8), )
if mibBuilder.loadTexts: cucsStorageLocalLunTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunTable.setDescription('Cisco UCS storage:LocalLun managed object table')
cucsStorageLocalLunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLocalLunInstanceId"))
if mibBuilder.loadTexts: cucsStorageLocalLunEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunEntry.setDescription('Entry for the cucsStorageLocalLunTable table.')
cucsStorageLocalLunInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLocalLunInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLocalLunDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunDn.setDescription('Cisco UCS storage:LocalLun:dn managed object property')
cucsStorageLocalLunRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunRn.setDescription('Cisco UCS storage:LocalLun:rn managed object property')
cucsStorageLocalLunBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunBlockSize.setDescription('Cisco UCS storage:LocalLun:blockSize managed object property')
cucsStorageLocalLunConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunConnectionProtocol.setDescription('Cisco UCS storage:LocalLun:connectionProtocol managed object property')
cucsStorageLocalLunId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunId.setDescription('Cisco UCS storage:LocalLun:id managed object property')
cucsStorageLocalLunModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunModel.setDescription('Cisco UCS storage:LocalLun:model managed object property')
cucsStorageLocalLunNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunNumberOfBlocks.setDescription('Cisco UCS storage:LocalLun:numberOfBlocks managed object property')
cucsStorageLocalLunOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunOperability.setDescription('Cisco UCS storage:LocalLun:operability managed object property')
cucsStorageLocalLunPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunPresence.setDescription('Cisco UCS storage:LocalLun:presence managed object property')
cucsStorageLocalLunRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunRevision.setDescription('Cisco UCS storage:LocalLun:revision managed object property')
cucsStorageLocalLunSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunSerial.setDescription('Cisco UCS storage:LocalLun:serial managed object property')
cucsStorageLocalLunSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunSize.setDescription('Cisco UCS storage:LocalLun:size managed object property')
cucsStorageLocalLunType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 14), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunType.setDescription('Cisco UCS storage:LocalLun:type managed object property')
cucsStorageLocalLunVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunVendor.setDescription('Cisco UCS storage:LocalLun:vendor managed object property')
cucsStorageLocalLunLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 16), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunLc.setDescription('Cisco UCS storage:LocalLun:lc managed object property')
cucsStorageLocalLunOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 8, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLocalLunOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLocalLunOperQualifierReason.setDescription('Cisco UCS storage:LocalLun:operQualifierReason managed object property')
cucsStorageLunDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9), )
if mibBuilder.loadTexts: cucsStorageLunDiskTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskTable.setDescription('Cisco UCS storage:LunDisk managed object table')
cucsStorageLunDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLunDiskInstanceId"))
if mibBuilder.loadTexts: cucsStorageLunDiskEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskEntry.setDescription('Entry for the cucsStorageLunDiskTable table.')
cucsStorageLunDiskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLunDiskInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLunDiskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskDn.setDescription('Cisco UCS storage:LunDisk:dn managed object property')
cucsStorageLunDiskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskRn.setDescription('Cisco UCS storage:LunDisk:rn managed object property')
cucsStorageLunDiskId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunDiskId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunDiskId.setDescription('Cisco UCS storage:LunDisk:id managed object property')
cucsStorageLunResourceSelectionLogTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64), )
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogTable.setDescription('Cisco UCS storage:LunResourceSelectionLog managed object table')
cucsStorageLunResourceSelectionLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageLunResourceSelectionLogInstanceId"))
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogEntry.setDescription('Entry for the cucsStorageLunResourceSelectionLogTable table.')
cucsStorageLunResourceSelectionLogInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageLunResourceSelectionLogDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDn.setDescription('Cisco UCS storage:LunResourceSelectionLog:dn managed object property')
cucsStorageLunResourceSelectionLogRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogRn.setDescription('Cisco UCS storage:LunResourceSelectionLog:rn managed object property')
cucsStorageLunResourceSelectionLogDecisionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 4), CucsStorageSelectionDecisionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDecisionType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDecisionType.setDescription('Cisco UCS storage:LunResourceSelectionLog:decisionType managed object property')
cucsStorageLunResourceSelectionLogDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogDescr.setDescription('Cisco UCS storage:LunResourceSelectionLog:descr managed object property')
cucsStorageLunResourceSelectionLogOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogOrder.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogOrder.setDescription('Cisco UCS storage:LunResourceSelectionLog:order managed object property')
cucsStorageLunResourceSelectionLogResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 7), CucsStorageSelectionResultType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogResult.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogResult.setDescription('Cisco UCS storage:LunResourceSelectionLog:result managed object property')
cucsStorageLunResourceSelectionLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 64, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogTimeStamp.setStatus('current')
if mibBuilder.loadTexts: cucsStorageLunResourceSelectionLogTimeStamp.setDescription('Cisco UCS storage:LunResourceSelectionLog:timeStamp managed object property')
cucsStorageMezzFlashLifeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39), )
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeTable.setDescription('Cisco UCS storage:MezzFlashLife managed object table')
cucsStorageMezzFlashLifeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageMezzFlashLifeInstanceId"))
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeEntry.setDescription('Entry for the cucsStorageMezzFlashLifeTable table.')
cucsStorageMezzFlashLifeInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageMezzFlashLifeDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeDn.setDescription('Cisco UCS storage:MezzFlashLife:dn managed object property')
cucsStorageMezzFlashLifeRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRn.setDescription('Cisco UCS storage:MezzFlashLife:rn managed object property')
cucsStorageMezzFlashLifeBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeBlockSize.setDescription('Cisco UCS storage:MezzFlashLife:blockSize managed object property')
cucsStorageMezzFlashLifeConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeConnectionProtocol.setDescription('Cisco UCS storage:MezzFlashLife:connectionProtocol managed object property')
cucsStorageMezzFlashLifeFlashPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashPercentage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashPercentage.setDescription('Cisco UCS storage:MezzFlashLife:flashPercentage managed object property')
cucsStorageMezzFlashLifeFlashStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeFlashStatus.setDescription('Cisco UCS storage:MezzFlashLife:flashStatus managed object property')
cucsStorageMezzFlashLifeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeId.setDescription('Cisco UCS storage:MezzFlashLife:id managed object property')
cucsStorageMezzFlashLifeModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeModel.setDescription('Cisco UCS storage:MezzFlashLife:model managed object property')
cucsStorageMezzFlashLifeNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 10), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeNumberOfBlocks.setDescription('Cisco UCS storage:MezzFlashLife:numberOfBlocks managed object property')
cucsStorageMezzFlashLifeOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperQualifierReason.setDescription('Cisco UCS storage:MezzFlashLife:operQualifierReason managed object property')
cucsStorageMezzFlashLifeOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 12), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeOperability.setDescription('Cisco UCS storage:MezzFlashLife:operability managed object property')
cucsStorageMezzFlashLifePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 13), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifePresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifePresence.setDescription('Cisco UCS storage:MezzFlashLife:presence managed object property')
cucsStorageMezzFlashLifeRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeRevision.setDescription('Cisco UCS storage:MezzFlashLife:revision managed object property')
cucsStorageMezzFlashLifeSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSerial.setDescription('Cisco UCS storage:MezzFlashLife:serial managed object property')
cucsStorageMezzFlashLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 16), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeSize.setDescription('Cisco UCS storage:MezzFlashLife:size managed object property')
cucsStorageMezzFlashLifeVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 39, 1, 17), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageMezzFlashLifeVendor.setDescription('Cisco UCS storage:MezzFlashLife:vendor managed object property')
cucsStorageNodeEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26), )
if mibBuilder.loadTexts: cucsStorageNodeEpTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpTable.setDescription('Cisco UCS storage:NodeEp managed object table')
cucsStorageNodeEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageNodeEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageNodeEpEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpEntry.setDescription('Entry for the cucsStorageNodeEpTable table.')
cucsStorageNodeEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageNodeEpInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageNodeEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpDn.setDescription('Cisco UCS storage:NodeEp:dn managed object property')
cucsStorageNodeEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpRn.setDescription('Cisco UCS storage:NodeEp:rn managed object property')
cucsStorageNodeEpEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpEpDn.setDescription('Cisco UCS storage:NodeEp:epDn managed object property')
cucsStorageNodeEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 26, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageNodeEpId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageNodeEpId.setDescription('Cisco UCS storage:NodeEp:id managed object property')
cucsStorageOperationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38), )
if mibBuilder.loadTexts: cucsStorageOperationTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationTable.setDescription('Cisco UCS storage:Operation managed object table')
cucsStorageOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageOperationInstanceId"))
if mibBuilder.loadTexts: cucsStorageOperationEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationEntry.setDescription('Entry for the cucsStorageOperationTable table.')
cucsStorageOperationInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageOperationInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageOperationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationDn.setDescription('Cisco UCS storage:Operation:dn managed object property')
cucsStorageOperationRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationRn.setDescription('Cisco UCS storage:Operation:rn managed object property')
cucsStorageOperationEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationEndTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationEndTime.setDescription('Cisco UCS storage:Operation:endTime managed object property')
cucsStorageOperationName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 5), CucsStorageOperationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationName.setDescription('Cisco UCS storage:Operation:name managed object property')
cucsStorageOperationOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 6), CucsStorageOperationState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationOperState.setDescription('Cisco UCS storage:Operation:operState managed object property')
cucsStorageOperationProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationProgress.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationProgress.setDescription('Cisco UCS storage:Operation:progress managed object property')
cucsStorageOperationStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationStartTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationStartTime.setDescription('Cisco UCS storage:Operation:startTime managed object property')
cucsStorageOperationStatusDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 38, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageOperationStatusDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageOperationStatusDescr.setDescription('Cisco UCS storage:Operation:statusDescr managed object property')
cucsStorageQualTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10), )
if mibBuilder.loadTexts: cucsStorageQualTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualTable.setDescription('Cisco UCS storage:Qual managed object table')
cucsStorageQualEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageQualInstanceId"))
if mibBuilder.loadTexts: cucsStorageQualEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualEntry.setDescription('Entry for the cucsStorageQualTable table.')
cucsStorageQualInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageQualInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageQualDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualDn.setDescription('Cisco UCS storage:Qual:dn managed object property')
cucsStorageQualRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualRn.setDescription('Cisco UCS storage:Qual:rn managed object property')
cucsStorageQualBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualBlockSize.setDescription('Cisco UCS storage:Qual:blockSize managed object property')
cucsStorageQualMaxCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 5), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualMaxCap.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualMaxCap.setDescription('Cisco UCS storage:Qual:maxCap managed object property')
cucsStorageQualMinCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 6), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualMinCap.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualMinCap.setDescription('Cisco UCS storage:Qual:minCap managed object property')
cucsStorageQualNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 7), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualNumberOfBlocks.setDescription('Cisco UCS storage:Qual:numberOfBlocks managed object property')
cucsStorageQualPerDiskCap = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualPerDiskCap.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualPerDiskCap.setDescription('Cisco UCS storage:Qual:perDiskCap managed object property')
cucsStorageQualUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualUnits.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualUnits.setDescription('Cisco UCS storage:Qual:units managed object property')
cucsStorageQualDiskless = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 10), CucsStorageDisklessAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualDiskless.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualDiskless.setDescription('Cisco UCS storage:Qual:diskless managed object property')
cucsStorageQualNumberOfFlexFlashCards = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualNumberOfFlexFlashCards.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualNumberOfFlexFlashCards.setDescription('Cisco UCS storage:Qual:numberOfFlexFlashCards managed object property')
cucsStorageQualDiskType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 10, 1, 12), CucsStorageTechnology()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageQualDiskType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageQualDiskType.setDescription('Cisco UCS storage:Qual:diskType managed object property')
cucsStorageRaidBatteryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11), )
if mibBuilder.loadTexts: cucsStorageRaidBatteryTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryTable.setDescription('Cisco UCS storage:RaidBattery managed object table')
cucsStorageRaidBatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageRaidBatteryInstanceId"))
if mibBuilder.loadTexts: cucsStorageRaidBatteryEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryEntry.setDescription('Entry for the cucsStorageRaidBatteryTable table.')
cucsStorageRaidBatteryInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageRaidBatteryInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageRaidBatteryDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryDn.setDescription('Cisco UCS storage:RaidBattery:dn managed object property')
cucsStorageRaidBatteryRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryRn.setDescription('Cisco UCS storage:RaidBattery:rn managed object property')
cucsStorageRaidBatteryBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryBlockSize.setDescription('Cisco UCS storage:RaidBattery:blockSize managed object property')
cucsStorageRaidBatteryConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryConnectionProtocol.setDescription('Cisco UCS storage:RaidBattery:connectionProtocol managed object property')
cucsStorageRaidBatteryId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryId.setDescription('Cisco UCS storage:RaidBattery:id managed object property')
cucsStorageRaidBatteryModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryModel.setDescription('Cisco UCS storage:RaidBattery:model managed object property')
cucsStorageRaidBatteryNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryNumberOfBlocks.setDescription('Cisco UCS storage:RaidBattery:numberOfBlocks managed object property')
cucsStorageRaidBatteryOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperability.setDescription('Cisco UCS storage:RaidBattery:operability managed object property')
cucsStorageRaidBatteryPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 10), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryPresence.setDescription('Cisco UCS storage:RaidBattery:presence managed object property')
cucsStorageRaidBatteryRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryRevision.setDescription('Cisco UCS storage:RaidBattery:revision managed object property')
cucsStorageRaidBatterySerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatterySerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatterySerial.setDescription('Cisco UCS storage:RaidBattery:serial managed object property')
cucsStorageRaidBatterySize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatterySize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatterySize.setDescription('Cisco UCS storage:RaidBattery:size managed object property')
cucsStorageRaidBatteryVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryVendor.setDescription('Cisco UCS storage:RaidBattery:vendor managed object property')
cucsStorageRaidBatteryOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperQualifierReason.setDescription('Cisco UCS storage:RaidBattery:operQualifierReason managed object property')
cucsStorageRaidBatteryBatteryType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 16), CucsStorageBatteryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBatteryType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryBatteryType.setDescription('Cisco UCS storage:RaidBattery:batteryType managed object property')
cucsStorageRaidBatteryCapacityPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryCapacityPercentage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryCapacityPercentage.setDescription('Cisco UCS storage:RaidBattery:capacityPercentage managed object property')
cucsStorageRaidBatteryOperabilityQualifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 18), CucsStorageRaidBatteryOperabilityQualifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifier.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifier.setDescription('Cisco UCS storage:RaidBattery:operabilityQualifier managed object property')
cucsStorageRaidBatteryOperabilityQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryOperabilityQualifierReason.setDescription('Cisco UCS storage:RaidBattery:operabilityQualifierReason managed object property')
cucsStorageRaidBatteryTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryTemperature.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryTemperature.setDescription('Cisco UCS storage:RaidBattery:temperature managed object property')
cucsStorageRaidBatteryBbuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 21), CucsStorageBbuStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryBbuStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryBbuStatus.setDescription('Cisco UCS storage:RaidBattery:bbuStatus managed object property')
cucsStorageRaidBatteryLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 22), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryLc.setDescription('Cisco UCS storage:RaidBattery:lc managed object property')
cucsStorageRaidBatteryLearnCycleRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 23), CucsStorageLearnCycleRequested()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnCycleRequested.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnCycleRequested.setDescription('Cisco UCS storage:RaidBattery:learnCycleRequested managed object property')
cucsStorageRaidBatteryLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 24), CucsStorageLearnMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnMode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryLearnMode.setDescription('Cisco UCS storage:RaidBattery:learnMode managed object property')
cucsStorageRaidBatteryNextLearnCycleTs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 11, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageRaidBatteryNextLearnCycleTs.setStatus('current')
if mibBuilder.loadTexts: cucsStorageRaidBatteryNextLearnCycleTs.setDescription('Cisco UCS storage:RaidBattery:nextLearnCycleTs managed object property')
cucsStorageSasExpanderTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78), )
if mibBuilder.loadTexts: cucsStorageSasExpanderTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderTable.setDescription('Cisco UCS storage:SasExpander managed object table')
cucsStorageSasExpanderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSasExpanderInstanceId"))
if mibBuilder.loadTexts: cucsStorageSasExpanderEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderEntry.setDescription('Entry for the cucsStorageSasExpanderTable table.')
cucsStorageSasExpanderInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageSasExpanderInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageSasExpanderDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderDn.setDescription('Cisco UCS storage:SasExpander:dn managed object property')
cucsStorageSasExpanderRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderRn.setDescription('Cisco UCS storage:SasExpander:rn managed object property')
cucsStorageSasExpanderId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderId.setDescription('Cisco UCS storage:SasExpander:id managed object property')
cucsStorageSasExpanderLocationDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderLocationDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderLocationDn.setDescription('Cisco UCS storage:SasExpander:locationDn managed object property')
cucsStorageSasExpanderModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderModel.setDescription('Cisco UCS storage:SasExpander:model managed object property')
cucsStorageSasExpanderOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderOperQualifierReason.setDescription('Cisco UCS storage:SasExpander:operQualifierReason managed object property')
cucsStorageSasExpanderOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 8), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderOperState.setDescription('Cisco UCS storage:SasExpander:operState managed object property')
cucsStorageSasExpanderOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 9), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderOperability.setDescription('Cisco UCS storage:SasExpander:operability managed object property')
cucsStorageSasExpanderPerf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 10), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderPerf.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderPerf.setDescription('Cisco UCS storage:SasExpander:perf managed object property')
cucsStorageSasExpanderPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 11), CucsEquipmentPowerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderPower.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderPower.setDescription('Cisco UCS storage:SasExpander:power managed object property')
cucsStorageSasExpanderPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 12), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderPresence.setDescription('Cisco UCS storage:SasExpander:presence managed object property')
cucsStorageSasExpanderRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderRevision.setDescription('Cisco UCS storage:SasExpander:revision managed object property')
cucsStorageSasExpanderSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderSerial.setDescription('Cisco UCS storage:SasExpander:serial managed object property')
cucsStorageSasExpanderThermal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 15), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderThermal.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderThermal.setDescription('Cisco UCS storage:SasExpander:thermal managed object property')
cucsStorageSasExpanderVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderVendor.setDescription('Cisco UCS storage:SasExpander:vendor managed object property')
cucsStorageSasExpanderVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 17), CucsEquipmentSensorThresholdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderVoltage.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderVoltage.setDescription('Cisco UCS storage:SasExpander:voltage managed object property')
cucsStorageSasExpanderFwRegionOne = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 23), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRegionOne.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRegionOne.setDescription('Cisco UCS storage:SasExpander:fwRegionOne managed object property')
cucsStorageSasExpanderFwRegionTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 24), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRegionTwo.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRegionTwo.setDescription('Cisco UCS storage:SasExpander:fwRegionTwo managed object property')
cucsStorageSasExpanderFwRunningRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 25), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRunningRegion.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderFwRunningRegion.setDescription('Cisco UCS storage:SasExpander:fwRunningRegion managed object property')
cucsStorageSasExpanderSasAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 78, 1, 26), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSasExpanderSasAddress.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSasExpanderSasAddress.setDescription('Cisco UCS storage:SasExpander:sasAddress managed object property')
cucsStorageScsiLunRefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83), )
if mibBuilder.loadTexts: cucsStorageScsiLunRefTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefTable.setDescription('Cisco UCS storage:ScsiLunRef managed object table')
cucsStorageScsiLunRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageScsiLunRefInstanceId"))
if mibBuilder.loadTexts: cucsStorageScsiLunRefEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefEntry.setDescription('Entry for the cucsStorageScsiLunRefTable table.')
cucsStorageScsiLunRefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageScsiLunRefInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageScsiLunRefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefDn.setDescription('Cisco UCS storage:ScsiLunRef:dn managed object property')
cucsStorageScsiLunRefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefRn.setDescription('Cisco UCS storage:ScsiLunRef:rn managed object property')
cucsStorageScsiLunRefId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefId.setDescription('Cisco UCS storage:ScsiLunRef:id managed object property')
cucsStorageScsiLunRefLsDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefLsDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefLsDn.setDescription('Cisco UCS storage:ScsiLunRef:lsDn managed object property')
cucsStorageScsiLunRefLunName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefLunName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefLunName.setDescription('Cisco UCS storage:ScsiLunRef:lunName managed object property')
cucsStorageScsiLunRefProfileDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefProfileDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefProfileDn.setDescription('Cisco UCS storage:ScsiLunRef:profileDn managed object property')
cucsStorageScsiLunRefPnDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 83, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageScsiLunRefPnDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageScsiLunRefPnDn.setDescription('Cisco UCS storage:ScsiLunRef:pnDn managed object property')
cucsStorageSystemTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27), )
if mibBuilder.loadTexts: cucsStorageSystemTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemTable.setDescription('Cisco UCS storage:System managed object table')
cucsStorageSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemEntry.setDescription('Entry for the cucsStorageSystemTable table.')
cucsStorageSystemInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageSystemInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageSystemDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemDn.setDescription('Cisco UCS storage:System:dn managed object property')
cucsStorageSystemRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemRn.setDescription('Cisco UCS storage:System:rn managed object property')
cucsStorageSystemFsmDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmDescr.setDescription('Cisco UCS storage:System:fsmDescr managed object property')
cucsStorageSystemFsmPrev = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmPrev.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmPrev.setDescription('Cisco UCS storage:System:fsmPrev managed object property')
cucsStorageSystemFsmProgr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmProgr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmProgr.setDescription('Cisco UCS storage:System:fsmProgr managed object property')
cucsStorageSystemFsmRmtInvErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrCode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrCode.setDescription('Cisco UCS storage:System:fsmRmtInvErrCode managed object property')
cucsStorageSystemFsmRmtInvErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvErrDescr.setDescription('Cisco UCS storage:System:fsmRmtInvErrDescr managed object property')
cucsStorageSystemFsmRmtInvRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 9), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvRslt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtInvRslt.setDescription('Cisco UCS storage:System:fsmRmtInvRslt managed object property')
cucsStorageSystemFsmStageDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDescr.setDescription('Cisco UCS storage:System:fsmStageDescr managed object property')
cucsStorageSystemFsmStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStamp.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStamp.setDescription('Cisco UCS storage:System:fsmStamp managed object property')
cucsStorageSystemFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStatus.setDescription('Cisco UCS storage:System:fsmStatus managed object property')
cucsStorageSystemFsmTry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTry.setDescription('Cisco UCS storage:System:fsmTry managed object property')
cucsStorageSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemId.setDescription('Cisco UCS storage:System:id managed object property')
cucsStorageSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 27, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemName.setDescription('Cisco UCS storage:System:name managed object property')
cucsStorageSystemFsmTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28), )
if mibBuilder.loadTexts: cucsStorageSystemFsmTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTable.setDescription('Cisco UCS storage:SystemFsm managed object table')
cucsStorageSystemFsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmEntry.setDescription('Entry for the cucsStorageSystemFsmTable table.')
cucsStorageSystemFsmInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageSystemFsmInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageSystemFsmDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmDn.setDescription('Cisco UCS storage:SystemFsm:dn managed object property')
cucsStorageSystemFsmRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRn.setDescription('Cisco UCS storage:SystemFsm:rn managed object property')
cucsStorageSystemFsmCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmCompletionTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmCompletionTime.setDescription('Cisco UCS storage:SystemFsm:completionTime managed object property')
cucsStorageSystemFsmCurrentFsm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 5), CucsStorageSystemFsmCurrentFsm()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmCurrentFsm.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmCurrentFsm.setDescription('Cisco UCS storage:SystemFsm:currentFsm managed object property')
cucsStorageSystemFsmDescrData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmDescrData.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmDescrData.setDescription('Cisco UCS storage:SystemFsm:descr managed object property')
cucsStorageSystemFsmFsmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 7), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmFsmStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmFsmStatus.setDescription('Cisco UCS storage:SystemFsm:fsmStatus managed object property')
cucsStorageSystemFsmProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmProgress.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmProgress.setDescription('Cisco UCS storage:SystemFsm:progress managed object property')
cucsStorageSystemFsmRmtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrCode.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrCode.setDescription('Cisco UCS storage:SystemFsm:rmtErrCode managed object property')
cucsStorageSystemFsmRmtErrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtErrDescr.setDescription('Cisco UCS storage:SystemFsm:rmtErrDescr managed object property')
cucsStorageSystemFsmRmtRslt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 28, 1, 11), CucsConditionRemoteInvRslt()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtRslt.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmRmtRslt.setDescription('Cisco UCS storage:SystemFsm:rmtRslt managed object property')
cucsStorageSystemFsmStageTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29), )
if mibBuilder.loadTexts: cucsStorageSystemFsmStageTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageTable.setDescription('Cisco UCS storage:SystemFsmStage managed object table')
cucsStorageSystemFsmStageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmStageInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmStageEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageEntry.setDescription('Entry for the cucsStorageSystemFsmStageTable table.')
cucsStorageSystemFsmStageInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageSystemFsmStageInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageSystemFsmStageDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDn.setDescription('Cisco UCS storage:SystemFsmStage:dn managed object property')
cucsStorageSystemFsmStageRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRn.setDescription('Cisco UCS storage:SystemFsmStage:rn managed object property')
cucsStorageSystemFsmStageDescrData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDescrData.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageDescrData.setDescription('Cisco UCS storage:SystemFsmStage:descr managed object property')
cucsStorageSystemFsmStageLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageLastUpdateTime.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageLastUpdateTime.setDescription('Cisco UCS storage:SystemFsmStage:lastUpdateTime managed object property')
cucsStorageSystemFsmStageName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 6), CucsStorageSystemFsmStageName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageName.setDescription('Cisco UCS storage:SystemFsmStage:name managed object property')
cucsStorageSystemFsmStageOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageOrder.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageOrder.setDescription('Cisco UCS storage:SystemFsmStage:order managed object property')
cucsStorageSystemFsmStageRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRetry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageRetry.setDescription('Cisco UCS storage:SystemFsmStage:retry managed object property')
cucsStorageSystemFsmStageStageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 29, 1, 9), CucsFsmFsmStageStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmStageStageStatus.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmStageStageStatus.setDescription('Cisco UCS storage:SystemFsmStage:stageStatus managed object property')
cucsStorageSystemFsmTaskTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30), )
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskTable.setDescription('Cisco UCS storage:SystemFsmTask managed object table')
cucsStorageSystemFsmTaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageSystemFsmTaskInstanceId"))
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskEntry.setDescription('Entry for the cucsStorageSystemFsmTaskTable table.')
cucsStorageSystemFsmTaskInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageSystemFsmTaskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskDn.setDescription('Cisco UCS storage:SystemFsmTask:dn managed object property')
cucsStorageSystemFsmTaskRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskRn.setDescription('Cisco UCS storage:SystemFsmTask:rn managed object property')
cucsStorageSystemFsmTaskCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 4), CucsFsmCompletion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskCompletion.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskCompletion.setDescription('Cisco UCS storage:SystemFsmTask:completion managed object property')
cucsStorageSystemFsmTaskFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 5), CucsFsmFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskFlags.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskFlags.setDescription('Cisco UCS storage:SystemFsmTask:flags managed object property')
cucsStorageSystemFsmTaskItem = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 6), CucsStorageSystemFsmTaskItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskItem.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskItem.setDescription('Cisco UCS storage:SystemFsmTask:item managed object property')
cucsStorageSystemFsmTaskSeqId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 30, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskSeqId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageSystemFsmTaskSeqId.setDescription('Cisco UCS storage:SystemFsmTask:seqId managed object property')
cucsStorageTransportableFlashModuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33), )
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleTable.setDescription('Cisco UCS storage:TransportableFlashModule managed object table')
cucsStorageTransportableFlashModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageTransportableFlashModuleInstanceId"))
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleEntry.setDescription('Entry for the cucsStorageTransportableFlashModuleTable table.')
cucsStorageTransportableFlashModuleInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageTransportableFlashModuleDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleDn.setDescription('Cisco UCS storage:TransportableFlashModule:dn managed object property')
cucsStorageTransportableFlashModuleRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRn.setDescription('Cisco UCS storage:TransportableFlashModule:rn managed object property')
cucsStorageTransportableFlashModuleBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleBlockSize.setDescription('Cisco UCS storage:TransportableFlashModule:blockSize managed object property')
cucsStorageTransportableFlashModuleConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleConnectionProtocol.setDescription('Cisco UCS storage:TransportableFlashModule:connectionProtocol managed object property')
cucsStorageTransportableFlashModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleId.setDescription('Cisco UCS storage:TransportableFlashModule:id managed object property')
cucsStorageTransportableFlashModuleModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleModel.setDescription('Cisco UCS storage:TransportableFlashModule:model managed object property')
cucsStorageTransportableFlashModuleNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleNumberOfBlocks.setDescription('Cisco UCS storage:TransportableFlashModule:numberOfBlocks managed object property')
cucsStorageTransportableFlashModuleOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperQualifierReason.setDescription('Cisco UCS storage:TransportableFlashModule:operQualifierReason managed object property')
cucsStorageTransportableFlashModuleOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleOperability.setDescription('Cisco UCS storage:TransportableFlashModule:operability managed object property')
cucsStorageTransportableFlashModulePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModulePresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModulePresence.setDescription('Cisco UCS storage:TransportableFlashModule:presence managed object property')
cucsStorageTransportableFlashModuleRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleRevision.setDescription('Cisco UCS storage:TransportableFlashModule:revision managed object property')
cucsStorageTransportableFlashModuleSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSerial.setDescription('Cisco UCS storage:TransportableFlashModule:serial managed object property')
cucsStorageTransportableFlashModuleSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleSize.setDescription('Cisco UCS storage:TransportableFlashModule:size managed object property')
cucsStorageTransportableFlashModuleVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 33, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageTransportableFlashModuleVendor.setDescription('Cisco UCS storage:TransportableFlashModule:vendor managed object property')
cucsStorageVDMemberEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90), )
if mibBuilder.loadTexts: cucsStorageVDMemberEpTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpTable.setDescription('Cisco UCS storage:VDMemberEp managed object table')
cucsStorageVDMemberEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVDMemberEpInstanceId"))
if mibBuilder.loadTexts: cucsStorageVDMemberEpEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpEntry.setDescription('Entry for the cucsStorageVDMemberEpTable table.')
cucsStorageVDMemberEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageVDMemberEpInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageVDMemberEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpDn.setDescription('Cisco UCS storage:VDMemberEp:dn managed object property')
cucsStorageVDMemberEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpRn.setDescription('Cisco UCS storage:VDMemberEp:rn managed object property')
cucsStorageVDMemberEpConfigQual = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 4), CucsStorageVdMemberConfigQualifierType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigQual.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigQual.setDescription('Cisco UCS storage:VDMemberEp:configQual managed object property')
cucsStorageVDMemberEpConfigQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigQualifierReason.setDescription('Cisco UCS storage:VDMemberEp:configQualifierReason managed object property')
cucsStorageVDMemberEpConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 6), CucsStorageConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpConfigState.setDescription('Cisco UCS storage:VDMemberEp:configState managed object property')
cucsStorageVDMemberEpDeployAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 7), CucsStorageDeployAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpDeployAction.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpDeployAction.setDescription('Cisco UCS storage:VDMemberEp:deployAction managed object property')
cucsStorageVDMemberEpDiskDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpDiskDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpDiskDn.setDescription('Cisco UCS storage:VDMemberEp:diskDn managed object property')
cucsStorageVDMemberEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpId.setDescription('Cisco UCS storage:VDMemberEp:id managed object property')
cucsStorageVDMemberEpModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpModel.setDescription('Cisco UCS storage:VDMemberEp:model managed object property')
cucsStorageVDMemberEpOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpOperQualifierReason.setDescription('Cisco UCS storage:VDMemberEp:operQualifierReason managed object property')
cucsStorageVDMemberEpOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 12), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpOperability.setDescription('Cisco UCS storage:VDMemberEp:operability managed object property')
cucsStorageVDMemberEpPresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 13), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpPresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpPresence.setDescription('Cisco UCS storage:VDMemberEp:presence managed object property')
cucsStorageVDMemberEpRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 14), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpRevision.setDescription('Cisco UCS storage:VDMemberEp:revision managed object property')
cucsStorageVDMemberEpRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 15), CucsStorageDiskRole()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpRole.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpRole.setDescription('Cisco UCS storage:VDMemberEp:role managed object property')
cucsStorageVDMemberEpSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpSerial.setDescription('Cisco UCS storage:VDMemberEp:serial managed object property')
cucsStorageVDMemberEpSpanId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpSpanId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpSpanId.setDescription('Cisco UCS storage:VDMemberEp:spanId managed object property')
cucsStorageVDMemberEpVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 90, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVDMemberEpVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVDMemberEpVendor.setDescription('Cisco UCS storage:VDMemberEp:vendor managed object property')
cucsStorageVirtualDriveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31), )
if mibBuilder.loadTexts: cucsStorageVirtualDriveTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveTable.setDescription('Cisco UCS storage:VirtualDrive managed object table')
cucsStorageVirtualDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVirtualDriveInstanceId"))
if mibBuilder.loadTexts: cucsStorageVirtualDriveEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveEntry.setDescription('Entry for the cucsStorageVirtualDriveTable table.')
cucsStorageVirtualDriveInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageVirtualDriveInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageVirtualDriveDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveDn.setDescription('Cisco UCS storage:VirtualDrive:dn managed object property')
cucsStorageVirtualDriveRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRn.setDescription('Cisco UCS storage:VirtualDrive:rn managed object property')
cucsStorageVirtualDriveBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveBlockSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveBlockSize.setDescription('Cisco UCS storage:VirtualDrive:blockSize managed object property')
cucsStorageVirtualDriveConnectionProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 5), CucsStorageConnectionProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConnectionProtocol.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveConnectionProtocol.setDescription('Cisco UCS storage:VirtualDrive:connectionProtocol managed object property')
cucsStorageVirtualDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveId.setDescription('Cisco UCS storage:VirtualDrive:id managed object property')
cucsStorageVirtualDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveModel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveModel.setDescription('Cisco UCS storage:VirtualDrive:model managed object property')
cucsStorageVirtualDriveNumberOfBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 8), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveNumberOfBlocks.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveNumberOfBlocks.setDescription('Cisco UCS storage:VirtualDrive:numberOfBlocks managed object property')
cucsStorageVirtualDriveOperQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperQualifierReason.setDescription('Cisco UCS storage:VirtualDrive:operQualifierReason managed object property')
cucsStorageVirtualDriveOperability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 10), CucsEquipmentOperability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperability.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperability.setDescription('Cisco UCS storage:VirtualDrive:operability managed object property')
cucsStorageVirtualDrivePresence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 11), CucsEquipmentPresence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDrivePresence.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDrivePresence.setDescription('Cisco UCS storage:VirtualDrive:presence managed object property')
cucsStorageVirtualDriveRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRevision.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRevision.setDescription('Cisco UCS storage:VirtualDrive:revision managed object property')
cucsStorageVirtualDriveSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 13), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveSerial.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveSerial.setDescription('Cisco UCS storage:VirtualDrive:serial managed object property')
cucsStorageVirtualDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveSize.setDescription('Cisco UCS storage:VirtualDrive:size managed object property')
cucsStorageVirtualDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 15), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveType.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveType.setDescription('Cisco UCS storage:VirtualDrive:type managed object property')
cucsStorageVirtualDriveVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 16), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveVendor.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveVendor.setDescription('Cisco UCS storage:VirtualDrive:vendor managed object property')
cucsStorageVirtualDriveAccessPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 17), CucsStorageAccessType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAccessPolicy.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveAccessPolicy.setDescription('Cisco UCS storage:VirtualDrive:accessPolicy managed object property')
cucsStorageVirtualDriveActualWriteCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 18), CucsStorageActualWriteType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveActualWriteCachePolicy.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveActualWriteCachePolicy.setDescription('Cisco UCS storage:VirtualDrive:actualWriteCachePolicy managed object property')
cucsStorageVirtualDriveBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 19), CucsStorageBootableType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveBootable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveBootable.setDescription('Cisco UCS storage:VirtualDrive:bootable managed object property')
cucsStorageVirtualDriveConfiguredWriteCachePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 20), CucsStorageConfiguredWriteType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfiguredWriteCachePolicy.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfiguredWriteCachePolicy.setDescription('Cisco UCS storage:VirtualDrive:configuredWriteCachePolicy managed object property')
cucsStorageVirtualDriveDriveCache = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 21), CucsStorageCacheType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveCache.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveCache.setDescription('Cisco UCS storage:VirtualDrive:driveCache managed object property')
cucsStorageVirtualDriveDriveState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 22), CucsStorageVDriveState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveDriveState.setDescription('Cisco UCS storage:VirtualDrive:driveState managed object property')
cucsStorageVirtualDriveIoPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 23), CucsStorageIOType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveIoPolicy.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveIoPolicy.setDescription('Cisco UCS storage:VirtualDrive:ioPolicy managed object property')
cucsStorageVirtualDriveLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 24), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveLc.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveLc.setDescription('Cisco UCS storage:VirtualDrive:lc managed object property')
cucsStorageVirtualDriveReadPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 25), CucsStorageReadType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveReadPolicy.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveReadPolicy.setDescription('Cisco UCS storage:VirtualDrive:readPolicy managed object property')
cucsStorageVirtualDriveStripSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 26), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveStripSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveStripSize.setDescription('Cisco UCS storage:VirtualDrive:stripSize managed object property')
cucsStorageVirtualDriveAdminActionTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 27), CucsStorageAdminActionTrigger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminActionTrigger.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminActionTrigger.setDescription('Cisco UCS storage:VirtualDrive:adminActionTrigger managed object property')
cucsStorageVirtualDriveAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 28), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminName.setDescription('Cisco UCS storage:VirtualDrive:adminName managed object property')
cucsStorageVirtualDriveAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 29), CucsStorageAdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveAdminState.setDescription('Cisco UCS storage:VirtualDrive:adminState managed object property')
cucsStorageVirtualDriveChangeQualifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 30), CucsStorageVdChangeQualifierType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveChangeQualifier.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveChangeQualifier.setDescription('Cisco UCS storage:VirtualDrive:changeQualifier managed object property')
cucsStorageVirtualDriveConfigQualifierReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfigQualifierReason.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfigQualifierReason.setDescription('Cisco UCS storage:VirtualDrive:configQualifierReason managed object property')
cucsStorageVirtualDriveConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 32), CucsStorageConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveConfigState.setDescription('Cisco UCS storage:VirtualDrive:configState managed object property')
cucsStorageVirtualDriveDeployAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 33), CucsStorageDeployAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDeployAction.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveDeployAction.setDescription('Cisco UCS storage:VirtualDrive:deployAction managed object property')
cucsStorageVirtualDriveDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 34), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveDescr.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveDescr.setDescription('Cisco UCS storage:VirtualDrive:descr managed object property')
cucsStorageVirtualDriveLocale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 35), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveLocale.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveLocale.setDescription('Cisco UCS storage:VirtualDrive:locale managed object property')
cucsStorageVirtualDriveName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 36), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveName.setDescription('Cisco UCS storage:VirtualDrive:name managed object property')
cucsStorageVirtualDriveOperDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperDeviceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperDeviceId.setDescription('Cisco UCS storage:VirtualDrive:operDeviceId managed object property')
cucsStorageVirtualDriveOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 38), CucsStorageUnitOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveOperState.setDescription('Cisco UCS storage:VirtualDrive:operState managed object property')
cucsStorageVirtualDriveUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 39), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveUuid.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveUuid.setDescription('Cisco UCS storage:VirtualDrive:uuid managed object property')
cucsStorageVirtualDriveVendorUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 40), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveVendorUuid.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveVendorUuid.setDescription('Cisco UCS storage:VirtualDrive:vendorUuid managed object property')
cucsStorageVirtualDriveAvailableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 41), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveAvailableSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveAvailableSize.setDescription('Cisco UCS storage:VirtualDrive:availableSize managed object property')
cucsStorageVirtualDrivePnDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 42), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDrivePnDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDrivePnDn.setDescription('Cisco UCS storage:VirtualDrive:pnDn managed object property')
cucsStorageVirtualDriveRefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 31, 1, 43), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDn.setDescription('Cisco UCS storage:VirtualDrive:refDn managed object property')
cucsStorageVirtualDriveRefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91), )
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefTable.setDescription('Cisco UCS storage:VirtualDriveRef managed object table')
cucsStorageVirtualDriveRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVirtualDriveRefInstanceId"))
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefEntry.setDescription('Entry for the cucsStorageVirtualDriveRefTable table.')
cucsStorageVirtualDriveRefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageVirtualDriveRefDnData = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDnData.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDnData.setDescription('Cisco UCS storage:VirtualDriveRef:dn managed object property')
cucsStorageVirtualDriveRefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefRn.setDescription('Cisco UCS storage:VirtualDriveRef:rn managed object property')
cucsStorageVirtualDriveRefAdminName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefAdminName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefAdminName.setDescription('Cisco UCS storage:VirtualDriveRef:adminName managed object property')
cucsStorageVirtualDriveRefAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 5), CucsStorageVirtualDriveRefAdminState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefAdminState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefAdminState.setDescription('Cisco UCS storage:VirtualDriveRef:adminState managed object property')
cucsStorageVirtualDriveRefConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 6), CucsStorageConfigState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefConfigState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefConfigState.setDescription('Cisco UCS storage:VirtualDriveRef:configState managed object property')
cucsStorageVirtualDriveRefDiskSelectionOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDiskSelectionOrder.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDiskSelectionOrder.setDescription('Cisco UCS storage:VirtualDriveRef:diskSelectionOrder managed object property')
cucsStorageVirtualDriveRefDiskSelectionTs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDiskSelectionTs.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefDiskSelectionTs.setDescription('Cisco UCS storage:VirtualDriveRef:diskSelectionTs managed object property')
cucsStorageVirtualDriveRefLunDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunDn.setDescription('Cisco UCS storage:VirtualDriveRef:lunDn managed object property')
cucsStorageVirtualDriveRefLunItemDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunItemDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunItemDn.setDescription('Cisco UCS storage:VirtualDriveRef:lunItemDn managed object property')
cucsStorageVirtualDriveRefLunItemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunItemName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunItemName.setDescription('Cisco UCS storage:VirtualDriveRef:lunItemName managed object property')
cucsStorageVirtualDriveRefLunName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefLunName.setDescription('Cisco UCS storage:VirtualDriveRef:lunName managed object property')
cucsStorageVirtualDriveRefRaidLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 13), CucsStorageLunType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefRaidLevel.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefRaidLevel.setDescription('Cisco UCS storage:VirtualDriveRef:raidLevel managed object property')
cucsStorageVirtualDriveRefSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefSize.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefSize.setDescription('Cisco UCS storage:VirtualDriveRef:size managed object property')
cucsStorageVirtualDriveRefUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 15), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefUuid.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefUuid.setDescription('Cisco UCS storage:VirtualDriveRef:uuid managed object property')
cucsStorageVirtualDriveRefIsBootable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 16), CucsLstorageBootDevice()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefIsBootable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefIsBootable.setDescription('Cisco UCS storage:VirtualDriveRef:isBootable managed object property')
cucsStorageVirtualDriveRefOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefOrder.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefOrder.setDescription('Cisco UCS storage:VirtualDriveRef:order managed object property')
cucsStorageVirtualDriveRefVendorUuid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 91, 1, 18), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefVendorUuid.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVirtualDriveRefVendorUuid.setDescription('Cisco UCS storage:VirtualDriveRef:vendorUuid managed object property')
cucsStorageVsanRefTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32), )
if mibBuilder.loadTexts: cucsStorageVsanRefTable.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefTable.setDescription('Cisco UCS storage:VsanRef managed object table')
cucsStorageVsanRefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-STORAGE-MIB", "cucsStorageVsanRefInstanceId"))
if mibBuilder.loadTexts: cucsStorageVsanRefEntry.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefEntry.setDescription('Entry for the cucsStorageVsanRefTable table.')
cucsStorageVsanRefInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsStorageVsanRefInstanceId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefInstanceId.setDescription('Instance identifier of the managed object.')
cucsStorageVsanRefDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefDn.setDescription('Cisco UCS storage:VsanRef:dn managed object property')
cucsStorageVsanRefRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefRn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefRn.setDescription('Cisco UCS storage:VsanRef:rn managed object property')
cucsStorageVsanRefConfigQualifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 4), CucsVnicConfigIssues()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefConfigQualifier.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefConfigQualifier.setDescription('Cisco UCS storage:VsanRef:configQualifier managed object property')
cucsStorageVsanRefName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefName.setDescription('Cisco UCS storage:VsanRef:name managed object property')
cucsStorageVsanRefOperVnetDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetDn.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetDn.setDescription('Cisco UCS storage:VsanRef:operVnetDn managed object property')
cucsStorageVsanRefOperVnetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetName.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefOperVnetName.setDescription('Cisco UCS storage:VsanRef:operVnetName managed object property')
cucsStorageVsanRefSwitchId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 8), CucsStorageVsanRefSwitchId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefSwitchId.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefSwitchId.setDescription('Cisco UCS storage:VsanRef:switchId managed object property')
cucsStorageVsanRefVnet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefVnet.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefVnet.setDescription('Cisco UCS storage:VsanRef:vnet managed object property')
cucsStorageVsanRefZoningState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 45, 32, 1, 10), CucsFabricZoningState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsStorageVsanRefZoningState.setStatus('current')
if mibBuilder.loadTexts: cucsStorageVsanRefZoningState.setDescription('Cisco UCS storage:VsanRef:zoningState managed object property')
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageControllerPower=cucsStorageControllerPower, cucsStorageAuthKeyPassword=cucsStorageAuthKeyPassword, cucsStorageFlexFlashCardMfgId=cucsStorageFlexFlashCardMfgId, cucsStorageVirtualDriveDriveCache=cucsStorageVirtualDriveDriveCache, cucsStorageControllerEntry=cucsStorageControllerEntry, cucsStorageScsiLunRefRn=cucsStorageScsiLunRefRn, cucsStorageDriveRevision=cucsStorageDriveRevision, cucsStorageEnclosureId=cucsStorageEnclosureId, cucsStorageVirtualDriveAccessPolicy=cucsStorageVirtualDriveAccessPolicy, cucsStorageVDMemberEpOperQualifierReason=cucsStorageVDMemberEpOperQualifierReason, cucsStorageDiskEnvStatsTimeCollected=cucsStorageDiskEnvStatsTimeCollected, cucsStorageTransportableFlashModuleOperability=cucsStorageTransportableFlashModuleOperability, cucsStorageDiskEnvStatsHistThresholded=cucsStorageDiskEnvStatsHistThresholded, cucsStorageLocalDiskPartitionId=cucsStorageLocalDiskPartitionId, cucsStorageFlexFlashDriveOperability=cucsStorageFlexFlashDriveOperability, cucsStorageLocalLunInstanceId=cucsStorageLocalLunInstanceId, cucsStorageFlexFlashDriveOperQualifierReason=cucsStorageFlexFlashDriveOperQualifierReason, cucsStorageFlexFlashControllerWriteErrorThreshold=cucsStorageFlexFlashControllerWriteErrorThreshold, cucsStorageLocalDiskConfigDefDescr=cucsStorageLocalDiskConfigDefDescr, cucsStorageFlexFlashCardSignature=cucsStorageFlexFlashCardSignature, cucsStorageLocalDiskConfigPolicyFlexFlashState=cucsStorageLocalDiskConfigPolicyFlexFlashState, cucsStorageItemTable=cucsStorageItemTable, cucsStorageDrivePciAddr=cucsStorageDrivePciAddr, cucsStorageLocalDiskSlotEpTable=cucsStorageLocalDiskSlotEpTable, cucsStorageNodeEpTable=cucsStorageNodeEpTable, cucsStorageVsanRefOperVnetDn=cucsStorageVsanRefOperVnetDn, cucsStorageSystemFsmTaskTable=cucsStorageSystemFsmTaskTable, cucsStorageLunResourceSelectionLogDescr=cucsStorageLunResourceSelectionLogDescr, cucsStorageVirtualDriveVendor=cucsStorageVirtualDriveVendor, cucsStorageVirtualDriveRefInstanceId=cucsStorageVirtualDriveRefInstanceId, cucsStorageFlexFlashCardBlockSize=cucsStorageFlexFlashCardBlockSize, cucsStorageSystemEntry=cucsStorageSystemEntry, cucsStorageFlexFlashDriveControllerIndex=cucsStorageFlexFlashDriveControllerIndex, cucsStorageMezzFlashLifeSerial=cucsStorageMezzFlashLifeSerial, cucsStorageSystemFsmTaskDn=cucsStorageSystemFsmTaskDn, cucsStorageControllerThermal=cucsStorageControllerThermal, cucsStorageFlexFlashControllerFsmRn=cucsStorageFlexFlashControllerFsmRn, cucsStorageScsiLunRefLsDn=cucsStorageScsiLunRefLsDn, cucsStorageSystemFsmPrev=cucsStorageSystemFsmPrev, cucsStorageConnectionDefEntry=cucsStorageConnectionDefEntry, cucsStorageItemEntry=cucsStorageItemEntry, cucsStorageVDMemberEpRevision=cucsStorageVDMemberEpRevision, cucsStorageFcIfTable=cucsStorageFcIfTable, cucsStorageEtherIfDn=cucsStorageEtherIfDn, cucsStorageFlexFlashControllerPhysicalDriveCount=cucsStorageFlexFlashControllerPhysicalDriveCount, cucsStorageEnclosureRn=cucsStorageEnclosureRn, cucsStorageEtherIfTable=cucsStorageEtherIfTable, cucsStorageFlexFlashControllerFsmFsmStatus=cucsStorageFlexFlashControllerFsmFsmStatus, cucsStorageLocalDiskConfigDefEntry=cucsStorageLocalDiskConfigDefEntry, cucsStorageControllerAdminAction=cucsStorageControllerAdminAction, cucsStorageLocalDiskPartitionTable=cucsStorageLocalDiskPartitionTable, cucsStorageSystemId=cucsStorageSystemId, cucsStorageSystemFsmDescr=cucsStorageSystemFsmDescr, cucsStorageVsanRefName=cucsStorageVsanRefName, cucsStorageLocalDiskConfigPolicyMode=cucsStorageLocalDiskConfigPolicyMode, cucsStorageControllerModel=cucsStorageControllerModel, cucsStorageLocalDiskPartitionName=cucsStorageLocalDiskPartitionName, cucsStorageFcTargetIfInstanceId=cucsStorageFcTargetIfInstanceId, cucsStorageIniGroupOwner=cucsStorageIniGroupOwner, cucsStorageVirtualDriveRefConfigState=cucsStorageVirtualDriveRefConfigState, cucsStorageControllerSerial=cucsStorageControllerSerial, cucsStorageFlexFlashCardRevision=cucsStorageFlexFlashCardRevision, cucsStorageNodeEpRn=cucsStorageNodeEpRn, cucsStorageSystemFsmTaskEntry=cucsStorageSystemFsmTaskEntry, cucsStorageIniGroupPolicyOwner=cucsStorageIniGroupPolicyOwner, cucsStorageFlexFlashControllerFsmStageStageStatus=cucsStorageFlexFlashControllerFsmStageStageStatus, cucsStorageNodeEpDn=cucsStorageNodeEpDn, cucsStorageLocalDiskPartitionSize=cucsStorageLocalDiskPartitionSize, cucsStorageMezzFlashLifeOperability=cucsStorageMezzFlashLifeOperability, cucsStorageFlexFlashControllerFsmTaskSeqId=cucsStorageFlexFlashControllerFsmTaskSeqId, cucsStorageDiskEnvStatsHistTimeCollected=cucsStorageDiskEnvStatsHistTimeCollected, cucsStorageFlexFlashCardEntry=cucsStorageFlexFlashCardEntry, cucsStorageLocalLunRn=cucsStorageLocalLunRn, cucsStorageFlexFlashCardReadIOErrorCount=cucsStorageFlexFlashCardReadIOErrorCount, cucsStorageEtherIfEntry=cucsStorageEtherIfEntry, cucsStorageFcTargetIfRn=cucsStorageFcTargetIfRn, cucsStorageLocalDiskSlotEpRn=cucsStorageLocalDiskSlotEpRn, cucsStorageVirtualDriveChangeQualifier=cucsStorageVirtualDriveChangeQualifier, cucsStorageSystemFsmStageInstanceId=cucsStorageSystemFsmStageInstanceId, cucsStorageLocalDiskLc=cucsStorageLocalDiskLc, cucsStorageControllerType=cucsStorageControllerType, cucsStorageLocalDiskConfigPolicyPolicyLevel=cucsStorageLocalDiskConfigPolicyPolicyLevel, cucsStorageSasExpanderPerf=cucsStorageSasExpanderPerf, cucsStorageFlexFlashVirtualDriveBlockSize=cucsStorageFlexFlashVirtualDriveBlockSize, cucsStorageRaidBatteryBatteryType=cucsStorageRaidBatteryBatteryType, cucsStorageLunResourceSelectionLogDn=cucsStorageLunResourceSelectionLogDn, cucsStorageControllerOperQualifierReason=cucsStorageControllerOperQualifierReason, cucsStorageFlexFlashVirtualDriveInstanceId=cucsStorageFlexFlashVirtualDriveInstanceId, cucsStorageFlexFlashVirtualDriveConnectionProtocol=cucsStorageFlexFlashVirtualDriveConnectionProtocol, cucsStorageFlexFlashCardWriteIOErrorCount=cucsStorageFlexFlashCardWriteIOErrorCount, cucsStorageFlexFlashCardWriteErrorThreshold=cucsStorageFlexFlashCardWriteErrorThreshold, cucsStorageSystemFsmStageOrder=cucsStorageSystemFsmStageOrder, cucsStorageFlexFlashCardRn=cucsStorageFlexFlashCardRn, cucsStorageFlexFlashControllerInstanceId=cucsStorageFlexFlashControllerInstanceId, cucsStorageIniGroupRn=cucsStorageIniGroupRn, cucsStorageRaidBatteryRn=cucsStorageRaidBatteryRn, cucsStorageOperationTable=cucsStorageOperationTable, cucsStorageIniGroupDescr=cucsStorageIniGroupDescr, cucsStorageInitiatorDuplicateTarget=cucsStorageInitiatorDuplicateTarget, cucsStorageEpUserRn=cucsStorageEpUserRn, cucsStorageDiskEnvStatsUpdate=cucsStorageDiskEnvStatsUpdate, cucsStorageSystemFsmEntry=cucsStorageSystemFsmEntry, cucsStorageSystemFsmCurrentFsm=cucsStorageSystemFsmCurrentFsm, cucsStorageAuthKeyTable=cucsStorageAuthKeyTable, cucsStorageNodeEpEpDn=cucsStorageNodeEpEpDn, cucsStorageEpUserTable=cucsStorageEpUserTable, cucsStorageInitiatorPolicyOwner=cucsStorageInitiatorPolicyOwner, cucsStorageLocalDiskSlotEpId=cucsStorageLocalDiskSlotEpId, cucsStorageLocalLunNumberOfBlocks=cucsStorageLocalLunNumberOfBlocks, cucsStorageControllerDn=cucsStorageControllerDn, cucsStorageNodeEpEntry=cucsStorageNodeEpEntry, cucsStorageControllerPerf=cucsStorageControllerPerf, cucsStorageLunDiskRn=cucsStorageLunDiskRn, cucsStorageVDMemberEpConfigQualifierReason=cucsStorageVDMemberEpConfigQualifierReason, cucsStorageIScsiTargetIfDn=cucsStorageIScsiTargetIfDn, cucsStorageScsiLunRefId=cucsStorageScsiLunRefId, cucsStorageFcIfDn=cucsStorageFcIfDn, cucsStorageFlexFlashControllerFirmwareVersion=cucsStorageFlexFlashControllerFirmwareVersion, cucsStorageLocalLunPresence=cucsStorageLocalLunPresence, cucsStorageTransportableFlashModuleModel=cucsStorageTransportableFlashModuleModel, cucsStorageRaidBatteryBlockSize=cucsStorageRaidBatteryBlockSize, cucsStorageTransportableFlashModuleVendor=cucsStorageTransportableFlashModuleVendor, cucsStorageDiskEnvStatsIntervals=cucsStorageDiskEnvStatsIntervals, cucsStorageIScsiTargetIfTable=cucsStorageIScsiTargetIfTable, cucsStorageTransportableFlashModuleTable=cucsStorageTransportableFlashModuleTable, cucsStorageLocalDiskNumberOfBlocks=cucsStorageLocalDiskNumberOfBlocks, cucsStorageRaidBatteryLearnMode=cucsStorageRaidBatteryLearnMode, cucsStorageFlexFlashControllerConfiguredMode=cucsStorageFlexFlashControllerConfiguredMode, cucsStorageRaidBatteryLearnCycleRequested=cucsStorageRaidBatteryLearnCycleRequested, cucsStorageFlexFlashDriveConnectionProtocol=cucsStorageFlexFlashDriveConnectionProtocol, cucsStorageSystemFsmTable=cucsStorageSystemFsmTable, cucsStorageInitiatorTable=cucsStorageInitiatorTable, cucsStorageAuthKeyPolicyLevel=cucsStorageAuthKeyPolicyLevel, cucsStorageQualNumberOfBlocks=cucsStorageQualNumberOfBlocks, cucsStorageFlexFlashControllerFsmStageInstanceId=cucsStorageFlexFlashControllerFsmStageInstanceId, cucsStorageEnclosureLc=cucsStorageEnclosureLc, cucsStorageControllerPciSlot=cucsStorageControllerPciSlot, cucsStorageFcTargetIfTable=cucsStorageFcTargetIfTable, cucsStorageVDMemberEpOperability=cucsStorageVDMemberEpOperability, cucsStorageFlexFlashControllerControllerHealth=cucsStorageFlexFlashControllerControllerHealth, cucsStorageVirtualDriveDriveState=cucsStorageVirtualDriveDriveState, cucsStorageVirtualDriveConnectionProtocol=cucsStorageVirtualDriveConnectionProtocol, cucsStorageVirtualDriveRefLunDn=cucsStorageVirtualDriveRefLunDn, cucsStorageEpUserConfigStatusMessage=cucsStorageEpUserConfigStatusMessage, cucsStorageSystemFsmStageRetry=cucsStorageSystemFsmStageRetry, cucsStorageConnectionPolicyEntry=cucsStorageConnectionPolicyEntry, cucsStorageDiskEnvStatsHistInstanceId=cucsStorageDiskEnvStatsHistInstanceId, cucsStorageFlexFlashControllerFsmStageDescr=cucsStorageFlexFlashControllerFsmStageDescr, cucsStorageFlexFlashControllerFsmRmtErrCode=cucsStorageFlexFlashControllerFsmRmtErrCode, cucsStorageRaidBatteryBbuStatus=cucsStorageRaidBatteryBbuStatus, cucsStorageLocalDiskPartitionRn=cucsStorageLocalDiskPartitionRn, cucsStorageControllerTable=cucsStorageControllerTable, cucsStorageInitiatorName=cucsStorageInitiatorName, cucsStorageLocalDiskConfigDefPolicyLevel=cucsStorageLocalDiskConfigDefPolicyLevel, cucsStorageMezzFlashLifeRn=cucsStorageMezzFlashLifeRn, cucsStorageIniGroupOperState=cucsStorageIniGroupOperState, cucsStorageDiskEnvStatsEntry=cucsStorageDiskEnvStatsEntry, cucsStorageLocalDiskConfigPolicyEntry=cucsStorageLocalDiskConfigPolicyEntry, cucsStorageFcTargetEpEntry=cucsStorageFcTargetEpEntry, cucsStorageLocalDiskSlotEpPresence=cucsStorageLocalDiskSlotEpPresence, cucsStorageVirtualDriveBootable=cucsStorageVirtualDriveBootable, cucsStorageLocalDiskSlotEpInstanceId=cucsStorageLocalDiskSlotEpInstanceId, cucsStorageOperationStartTime=cucsStorageOperationStartTime, cucsStorageSystemRn=cucsStorageSystemRn, cucsStorageLocalDiskThermal=cucsStorageLocalDiskThermal, cucsStorageDiskEnvStatsThresholded=cucsStorageDiskEnvStatsThresholded, cucsStorageSasExpanderFwRegionOne=cucsStorageSasExpanderFwRegionOne, cucsStorageControllerOobInterfaceSupported=cucsStorageControllerOobInterfaceSupported, cucsStorageFlexFlashDriveRn=cucsStorageFlexFlashDriveRn, cucsStorageSasExpanderDn=cucsStorageSasExpanderDn, cucsStorageDiskEnvStatsWearPercentage=cucsStorageDiskEnvStatsWearPercentage, cucsStorageSystemFsmStageStageStatus=cucsStorageSystemFsmStageStageStatus, cucsStorageEnclosureInstanceId=cucsStorageEnclosureInstanceId, cucsStorageDiskEnvStatsInstanceId=cucsStorageDiskEnvStatsInstanceId, cucsStorageControllerOperState=cucsStorageControllerOperState, cucsStorageTransportableFlashModuleConnectionProtocol=cucsStorageTransportableFlashModuleConnectionProtocol, cucsStorageMezzFlashLifeOperQualifierReason=cucsStorageMezzFlashLifeOperQualifierReason, cucsStorageFlexFlashControllerRn=cucsStorageFlexFlashControllerRn, cucsStorageDomainEpEntry=cucsStorageDomainEpEntry, cucsStorageFlexFlashCardCardMode=cucsStorageFlexFlashCardCardMode, cucsStorageRaidBatteryInstanceId=cucsStorageRaidBatteryInstanceId, cucsStorageDiskEnvStatsHistTemperatureAvg=cucsStorageDiskEnvStatsHistTemperatureAvg, cucsStorageItemUsed=cucsStorageItemUsed, cucsStorageSystemFsmStageDescrData=cucsStorageSystemFsmStageDescrData, cucsStorageQualInstanceId=cucsStorageQualInstanceId, cucsStorageTransportableFlashModuleNumberOfBlocks=cucsStorageTransportableFlashModuleNumberOfBlocks, cucsStorageTransportableFlashModuleRn=cucsStorageTransportableFlashModuleRn, cucsStorageSystemFsmStageLastUpdateTime=cucsStorageSystemFsmStageLastUpdateTime, cucsStorageVirtualDriveRefTable=cucsStorageVirtualDriveRefTable, cucsStorageLocalLunId=cucsStorageLocalLunId, cucsStorageVirtualDrivePnDn=cucsStorageVirtualDrivePnDn, cucsStorageConnectionDefPolicyLevel=cucsStorageConnectionDefPolicyLevel, cucsStorageControllerConfigState=cucsStorageControllerConfigState, cucsStorageFlexFlashCardCardHealth=cucsStorageFlexFlashCardCardHealth, cucsStorageFcIfInstanceId=cucsStorageFcIfInstanceId, cucsStorageSystemFsmDn=cucsStorageSystemFsmDn, cucsStorageFlexFlashControllerFsmTaskInstanceId=cucsStorageFlexFlashControllerFsmTaskInstanceId, cucsStorageVirtualDriveRefDnData=cucsStorageVirtualDriveRefDnData, cucsStorageDiskEnvStatsHistWearPercentage=cucsStorageDiskEnvStatsHistWearPercentage, cucsStorageLocalDiskSlotEpConfiguration=cucsStorageLocalDiskSlotEpConfiguration, cucsStorageSasExpanderFwRunningRegion=cucsStorageSasExpanderFwRunningRegion, cucsStorageQualRn=cucsStorageQualRn, cucsStorageItemDn=cucsStorageItemDn, cucsStorageRaidBatteryVendor=cucsStorageRaidBatteryVendor, cucsStorageVirtualDriveAdminActionTrigger=cucsStorageVirtualDriveAdminActionTrigger, cucsStorageTransportableFlashModuleBlockSize=cucsStorageTransportableFlashModuleBlockSize, cucsStorageScsiLunRefInstanceId=cucsStorageScsiLunRefInstanceId, cucsStorageLocalDiskDiskState=cucsStorageLocalDiskDiskState, cucsStorageDiskEnvStatsTemperatureMax=cucsStorageDiskEnvStatsTemperatureMax, cucsStorageFlexFlashVirtualDrivePresence=cucsStorageFlexFlashVirtualDrivePresence, cucsStorageSystemFsmStamp=cucsStorageSystemFsmStamp, cucsStorageRaidBatteryCapacityPercentage=cucsStorageRaidBatteryCapacityPercentage, cucsStorageFlexFlashControllerFsmTaskFlags=cucsStorageFlexFlashControllerFsmTaskFlags, cucsStorageVirtualDriveDn=cucsStorageVirtualDriveDn, cucsStorageConnectionDefName=cucsStorageConnectionDefName, cucsStorageFlexFlashControllerFsmStageTable=cucsStorageFlexFlashControllerFsmStageTable, cucsStorageVirtualDrivePresence=cucsStorageVirtualDrivePresence, cucsStorageLocalDiskConfigState=cucsStorageLocalDiskConfigState, cucsStorageLunResourceSelectionLogResult=cucsStorageLunResourceSelectionLogResult, cucsStorageFlexFlashControllerFsmRmtInvRslt=cucsStorageFlexFlashControllerFsmRmtInvRslt, cucsStorageFlexFlashDriveName=cucsStorageFlexFlashDriveName, cucsStorageFlexFlashVirtualDriveRn=cucsStorageFlexFlashVirtualDriveRn, cucsStorageConnectionDefDescr=cucsStorageConnectionDefDescr, cucsStorageControllerOpromBootStatus=cucsStorageControllerOpromBootStatus, cucsStorageVirtualDriveRefLunItemName=cucsStorageVirtualDriveRefLunItemName, cucsStorageFlexFlashControllerFsmInstanceId=cucsStorageFlexFlashControllerFsmInstanceId, cucsStorageFcIfEntry=cucsStorageFcIfEntry, cucsStorageFlexFlashControllerFsmStageEntry=cucsStorageFlexFlashControllerFsmStageEntry, cucsStorageControllerRevision=cucsStorageControllerRevision, cucsStorageEnclosureEntry=cucsStorageEnclosureEntry, cucsStorageFlexFlashVirtualDriveRevision=cucsStorageFlexFlashVirtualDriveRevision, cucsStorageFlexFlashControllerFsmStageLastUpdateTime=cucsStorageFlexFlashControllerFsmStageLastUpdateTime, cucsStorageIniGroupIntId=cucsStorageIniGroupIntId, cucsStorageLocalLunEntry=cucsStorageLocalLunEntry, cucsStorageMezzFlashLifeDn=cucsStorageMezzFlashLifeDn, cucsStorageVirtualDriveIoPolicy=cucsStorageVirtualDriveIoPolicy, cucsStorageOperationName=cucsStorageOperationName, cucsStorageConnectionPolicyDescr=cucsStorageConnectionPolicyDescr, cucsStorageVirtualDriveConfiguredWriteCachePolicy=cucsStorageVirtualDriveConfiguredWriteCachePolicy, cucsStorageFlexFlashControllerPrimarySlotNumber=cucsStorageFlexFlashControllerPrimarySlotNumber, cucsStorageVirtualDriveName=cucsStorageVirtualDriveName, cucsStorageVsanRefOperVnetName=cucsStorageVsanRefOperVnetName, cucsStorageFlexFlashDriveEntry=cucsStorageFlexFlashDriveEntry, cucsStorageFlexFlashDriveVisible=cucsStorageFlexFlashDriveVisible, cucsStorageEtherIfInstanceId=cucsStorageEtherIfInstanceId, cucsStorageFlexFlashControllerFsmCurrentFsm=cucsStorageFlexFlashControllerFsmCurrentFsm, cucsStorageFlexFlashControllerOperatingMode=cucsStorageFlexFlashControllerOperatingMode, cucsStorageLunDiskEntry=cucsStorageLunDiskEntry, cucsStorageVDMemberEpVendor=cucsStorageVDMemberEpVendor, cucsStorageLocalDiskAdminAction=cucsStorageLocalDiskAdminAction, cucsStorageSystemFsmInstanceId=cucsStorageSystemFsmInstanceId, cucsStorageFcTargetEpPath=cucsStorageFcTargetEpPath, cucsStorageFlexFlashVirtualDriveRaidState=cucsStorageFlexFlashVirtualDriveRaidState, cucsStorageFlexFlashCardDn=cucsStorageFlexFlashCardDn)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageFlexFlashControllerModel=cucsStorageFlexFlashControllerModel, cucsStorageFlexFlashControllerIsFormatFSMRunning=cucsStorageFlexFlashControllerIsFormatFSMRunning, cucsStorageLocalDiskConfigPolicyRn=cucsStorageLocalDiskConfigPolicyRn, cucsStorageConnectionPolicyIntId=cucsStorageConnectionPolicyIntId, cucsStorageFlexFlashControllerFsmRmtInvErrDescr=cucsStorageFlexFlashControllerFsmRmtInvErrDescr, cucsStorageSasExpanderRn=cucsStorageSasExpanderRn, cucsStorageIniGroupName=cucsStorageIniGroupName, cucsStorageControllerId=cucsStorageControllerId, cucsStorageVirtualDriveAdminState=cucsStorageVirtualDriveAdminState, cucsStorageVirtualDriveOperDeviceId=cucsStorageVirtualDriveOperDeviceId, cucsStorageControllerRaidSupport=cucsStorageControllerRaidSupport, cucsStorageSystemFsmProgr=cucsStorageSystemFsmProgr, cucsStorageLocalDiskSlotEpOperQualifierReason=cucsStorageLocalDiskSlotEpOperQualifierReason, cucsStorageLocalDiskConfigPolicyIntId=cucsStorageLocalDiskConfigPolicyIntId, cucsStorageTransportableFlashModuleRevision=cucsStorageTransportableFlashModuleRevision, cucsStorageIniGroupProtocol=cucsStorageIniGroupProtocol, cucsStorageFlexFlashCardOperQualifierReason=cucsStorageFlexFlashCardOperQualifierReason, cucsStorageQualMaxCap=cucsStorageQualMaxCap, cucsStorageLunResourceSelectionLogRn=cucsStorageLunResourceSelectionLogRn, cucsStorageLocalDiskConfigDefName=cucsStorageLocalDiskConfigDefName, cucsStorageLunDiskInstanceId=cucsStorageLunDiskInstanceId, cucsStorageVDMemberEpInstanceId=cucsStorageVDMemberEpInstanceId, cucsStorageFlexFlashDriveInstanceId=cucsStorageFlexFlashDriveInstanceId, cucsStorageItemRn=cucsStorageItemRn, cucsStorageDriveModel=cucsStorageDriveModel, cucsStorageLocalDiskSlotEpPeerDn=cucsStorageLocalDiskSlotEpPeerDn, cucsStorageFlexFlashControllerLocationDn=cucsStorageFlexFlashControllerLocationDn, cucsStorageLunDiskTable=cucsStorageLunDiskTable, cucsStorageLocalDiskSlotEpOperability=cucsStorageLocalDiskSlotEpOperability, cucsStorageIniGroupOperProtocol=cucsStorageIniGroupOperProtocol, cucsStorageDiskEnvStatsTemperatureMin=cucsStorageDiskEnvStatsTemperatureMin, cucsStorageFlexFlashCardWriteEnable=cucsStorageFlexFlashCardWriteEnable, cucsStorageFlexFlashControllerIsCardMismatch=cucsStorageFlexFlashControllerIsCardMismatch, cucsStorageLocalDiskConnectionProtocol=cucsStorageLocalDiskConnectionProtocol, cucsStorageTransportableFlashModulePresence=cucsStorageTransportableFlashModulePresence, cucsStorageFlexFlashControllerVendor=cucsStorageFlexFlashControllerVendor, cucsStorageDiskEnvStatsHistWearPercentageMax=cucsStorageDiskEnvStatsHistWearPercentageMax, cucsStorageMezzFlashLifeEntry=cucsStorageMezzFlashLifeEntry, cucsStorageFlexFlashDriveDriveState=cucsStorageFlexFlashDriveDriveState, cucsStorageFlexFlashControllerFsmDescr=cucsStorageFlexFlashControllerFsmDescr, cucsStorageIScsiTargetIfName=cucsStorageIScsiTargetIfName, cucsStorageItemName=cucsStorageItemName, cucsStorageVDMemberEpConfigQual=cucsStorageVDMemberEpConfigQual, cucsStorageFcTargetEpTable=cucsStorageFcTargetEpTable, cucsStorageSasExpanderOperability=cucsStorageSasExpanderOperability, cucsStorageVirtualDriveLc=cucsStorageVirtualDriveLc, cucsStorageVDMemberEpConfigState=cucsStorageVDMemberEpConfigState, cucsStorageConnectionDefDn=cucsStorageConnectionDefDn, cucsStorageDiskEnvStatsTable=cucsStorageDiskEnvStatsTable, cucsStorageTransportableFlashModuleDn=cucsStorageTransportableFlashModuleDn, cucsStorageMezzFlashLifeConnectionProtocol=cucsStorageMezzFlashLifeConnectionProtocol, cucsStorageVDMemberEpSerial=cucsStorageVDMemberEpSerial, cucsStorageVirtualDriveActualWriteCachePolicy=cucsStorageVirtualDriveActualWriteCachePolicy, cucsStorageVsanRefZoningState=cucsStorageVsanRefZoningState, cucsStorageVirtualDriveVendorUuid=cucsStorageVirtualDriveVendorUuid, cucsStorageControllerPciSlotRawName=cucsStorageControllerPciSlotRawName, cucsStorageFlexFlashControllerFsmDn=cucsStorageFlexFlashControllerFsmDn, cucsStorageVirtualDriveRefSize=cucsStorageVirtualDriveRefSize, cucsStorageFlexFlashDriveSlotNumber=cucsStorageFlexFlashDriveSlotNumber, cucsStorageLunResourceSelectionLogTimeStamp=cucsStorageLunResourceSelectionLogTimeStamp, cucsStorageLocalDiskBootable=cucsStorageLocalDiskBootable, cucsStorageLocalDiskAdminVirtualDriveId=cucsStorageLocalDiskAdminVirtualDriveId, cucsStorageVsanRefSwitchId=cucsStorageVsanRefSwitchId, cucsStorageDiskEnvStatsWearPercentageMin=cucsStorageDiskEnvStatsWearPercentageMin, cucsStorageFlexFlashDriveBlockSize=cucsStorageFlexFlashDriveBlockSize, cucsStorageFlexFlashVirtualDriveType=cucsStorageFlexFlashVirtualDriveType, cucsStorageFlexFlashControllerFsmTry=cucsStorageFlexFlashControllerFsmTry, cucsStorageFlexFlashControllerOperability=cucsStorageFlexFlashControllerOperability, cucsStorageDiskEnvStatsHistTemperatureMin=cucsStorageDiskEnvStatsHistTemperatureMin, cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState=cucsStorageLocalDiskConfigDefFlexFlashRAIDReportingState, cucsStorageLocalDiskOperQualifierReason=cucsStorageLocalDiskOperQualifierReason, cucsStorageSystemFsmDescrData=cucsStorageSystemFsmDescrData, cucsStorageControllerLocationDn=cucsStorageControllerLocationDn, cucsStorageFlexFlashControllerThermal=cucsStorageFlexFlashControllerThermal, cucsStorageFlexFlashDriveVendor=cucsStorageFlexFlashDriveVendor, cucsStorageConnectionDefInstanceId=cucsStorageConnectionDefInstanceId, cucsStorageLocalLunRevision=cucsStorageLocalLunRevision, cucsStorageRaidBatteryNextLearnCycleTs=cucsStorageRaidBatteryNextLearnCycleTs, cucsStorageConnectionPolicyName=cucsStorageConnectionPolicyName, cucsStorageConnectionPolicyDn=cucsStorageConnectionPolicyDn, cucsStorageFlexFlashControllerOperQualifierReason=cucsStorageFlexFlashControllerOperQualifierReason, cucsStorageFlexFlashControllerFsmStageDn=cucsStorageFlexFlashControllerFsmStageDn, cucsStorageInitiatorIntId=cucsStorageInitiatorIntId, cucsStorageMezzFlashLifeFlashPercentage=cucsStorageMezzFlashLifeFlashPercentage, cucsStorageRaidBatteryOperability=cucsStorageRaidBatteryOperability, cucsStorageFlexFlashCardDrivesEnabled=cucsStorageFlexFlashCardDrivesEnabled, cucsStorageTransportableFlashModuleSize=cucsStorageTransportableFlashModuleSize, cucsStorageVirtualDriveReadPolicy=cucsStorageVirtualDriveReadPolicy, cucsStorageLocalDiskDeviceType=cucsStorageLocalDiskDeviceType, cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState=cucsStorageLocalDiskConfigPolicyFlexFlashRAIDReportingState, cucsStorageSystemFsmStageEntry=cucsStorageSystemFsmStageEntry, cucsStorageControllerRn=cucsStorageControllerRn, cucsStorageVDMemberEpDeployAction=cucsStorageVDMemberEpDeployAction, cucsStorageIScsiTargetIfProt=cucsStorageIScsiTargetIfProt, cucsStorageVirtualDriveType=cucsStorageVirtualDriveType, cucsStorageLunDiskDn=cucsStorageLunDiskDn, cucsStorageDiskEnvStatsTemperature=cucsStorageDiskEnvStatsTemperature, cucsStorageFlexFlashCardOemId=cucsStorageFlexFlashCardOemId, cucsStorageRaidBatteryConnectionProtocol=cucsStorageRaidBatteryConnectionProtocol, cucsStorageVDMemberEpDn=cucsStorageVDMemberEpDn, cucsStorageSasExpanderSerial=cucsStorageSasExpanderSerial, cucsStorageVirtualDriveRefAdminName=cucsStorageVirtualDriveRefAdminName, cucsStorageTransportableFlashModuleEntry=cucsStorageTransportableFlashModuleEntry, cucsStorageInitiatorOperState=cucsStorageInitiatorOperState, cucsStorageFlexFlashControllerDn=cucsStorageFlexFlashControllerDn, cucsStorageFlexFlashDriveRemovable=cucsStorageFlexFlashDriveRemovable, cucsStorageSystemFsmCompletionTime=cucsStorageSystemFsmCompletionTime, cucsStorageQualUnits=cucsStorageQualUnits, cucsStorageVirtualDriveAdminName=cucsStorageVirtualDriveAdminName, cucsStorageVirtualDriveRefEntry=cucsStorageVirtualDriveRefEntry, cucsStorageFlexFlashControllerRevision=cucsStorageFlexFlashControllerRevision, cucsStorageDomainEpRn=cucsStorageDomainEpRn, cucsStorageFlexFlashVirtualDriveTable=cucsStorageFlexFlashVirtualDriveTable, cucsStorageLocalDiskBlockSize=cucsStorageLocalDiskBlockSize, cucsStorageSystemFsmTaskFlags=cucsStorageSystemFsmTaskFlags, cucsStorageControllerPartNumber=cucsStorageControllerPartNumber, cucsStorageFlexFlashCardModel=cucsStorageFlexFlashCardModel, cucsStorageFcIfRn=cucsStorageFcIfRn, cucsStorageLocalDiskInstanceId=cucsStorageLocalDiskInstanceId, cucsStorageMezzFlashLifeId=cucsStorageMezzFlashLifeId, cucsStorageConnectionPolicyRn=cucsStorageConnectionPolicyRn, cucsStorageLunResourceSelectionLogDecisionType=cucsStorageLunResourceSelectionLogDecisionType, cucsStorageDiskEnvStatsSuspect=cucsStorageDiskEnvStatsSuspect, cucsStorageSystemFsmTaskRn=cucsStorageSystemFsmTaskRn, cucsStorageSystemFsmRmtErrDescr=cucsStorageSystemFsmRmtErrDescr, cucsStorageFlexFlashCardSize=cucsStorageFlexFlashCardSize, cucsStorageControllerControllerStatus=cucsStorageControllerControllerStatus, cucsStorageScsiLunRefEntry=cucsStorageScsiLunRefEntry, cucsStorageFlexFlashVirtualDriveEntry=cucsStorageFlexFlashVirtualDriveEntry, cucsStorageSasExpanderId=cucsStorageSasExpanderId, cucsStorageVDMemberEpRn=cucsStorageVDMemberEpRn, cucsStorageLocalDiskConfigDefIntId=cucsStorageLocalDiskConfigDefIntId, cucsStorageLocalDiskConfigDefRn=cucsStorageLocalDiskConfigDefRn, cucsStorageDiskEnvStatsTemperatureAvg=cucsStorageDiskEnvStatsTemperatureAvg, cucsStorageLocalDiskPowerState=cucsStorageLocalDiskPowerState, cucsStorageFlexFlashControllerFsmProgr=cucsStorageFlexFlashControllerFsmProgr, cucsStorageMezzFlashLifeNumberOfBlocks=cucsStorageMezzFlashLifeNumberOfBlocks, cucsStorageFlexFlashVirtualDriveSerial=cucsStorageFlexFlashVirtualDriveSerial, cucsStorageFlexFlashVirtualDriveOperQualifierReason=cucsStorageFlexFlashVirtualDriveOperQualifierReason, cucsStorageControllerPciAddr=cucsStorageControllerPciAddr, cucsStorageFlexFlashControllerFsmStageOrder=cucsStorageFlexFlashControllerFsmStageOrder, cucsStorageFlexFlashControllerAdminSlotNumber=cucsStorageFlexFlashControllerAdminSlotNumber, cucsStorageFlexFlashVirtualDriveVendor=cucsStorageFlexFlashVirtualDriveVendor, cucsStorageFlexFlashControllerFsmTaskEntry=cucsStorageFlexFlashControllerFsmTaskEntry, cucsStorageFlexFlashControllerFsmTaskDn=cucsStorageFlexFlashControllerFsmTaskDn, cucsStorageOperationOperState=cucsStorageOperationOperState, cucsStorageFlexFlashCardReadErrorThreshold=cucsStorageFlexFlashCardReadErrorThreshold, cucsStorageFlexFlashDriveTable=cucsStorageFlexFlashDriveTable, cucsStorageVirtualDriveSize=cucsStorageVirtualDriveSize, cucsStorageFlexFlashControllerType=cucsStorageFlexFlashControllerType, cucsStorageIniGroupRmtDiskCfgName=cucsStorageIniGroupRmtDiskCfgName, cucsStorageFlexFlashControllerFsmStageRetry=cucsStorageFlexFlashControllerFsmStageRetry, cucsStorageFlexFlashControllerPresence=cucsStorageFlexFlashControllerPresence, cucsStorageEpUserDn=cucsStorageEpUserDn, cucsStorageItemSize=cucsStorageItemSize, cucsStorageDiskEnvStatsHistWearPercentageAvg=cucsStorageDiskEnvStatsHistWearPercentageAvg, cucsStorageConnectionPolicyOperState=cucsStorageConnectionPolicyOperState, cucsStorageControllerVoltage=cucsStorageControllerVoltage, cucsStorageInitiatorEntry=cucsStorageInitiatorEntry, cucsStorageQualMinCap=cucsStorageQualMinCap, cucsStorageEpUserPriv=cucsStorageEpUserPriv, cucsStorageFcTargetIfEntry=cucsStorageFcTargetIfEntry, cucsStorageVirtualDriveUuid=cucsStorageVirtualDriveUuid, cucsStorageSystemFsmRmtInvErrCode=cucsStorageSystemFsmRmtInvErrCode, cucsStorageFlexFlashVirtualDriveDn=cucsStorageFlexFlashVirtualDriveDn, cucsStorageConnectionPolicyTable=cucsStorageConnectionPolicyTable, cucsStorageFlexFlashControllerFsmRmtErrDescr=cucsStorageFlexFlashControllerFsmRmtErrDescr, cucsStorageVirtualDriveRefAdminState=cucsStorageVirtualDriveRefAdminState, cucsStorageFlexFlashCardVendor=cucsStorageFlexFlashCardVendor, cucsStorageFlexFlashDrivePresence=cucsStorageFlexFlashDrivePresence, cucsStorageOperationProgress=cucsStorageOperationProgress, cucsStorageFcIfName=cucsStorageFcIfName, cucsStorageSystemFsmStageName=cucsStorageSystemFsmStageName, cucsStorageVirtualDriveOperQualifierReason=cucsStorageVirtualDriveOperQualifierReason, cucsStorageFlexFlashControllerFsmTaskCompletion=cucsStorageFlexFlashControllerFsmTaskCompletion, cucsStorageControllerHwRevision=cucsStorageControllerHwRevision, cucsStorageVsanRefInstanceId=cucsStorageVsanRefInstanceId, cucsStorageConnectionDefZoningType=cucsStorageConnectionDefZoningType, cucsStorageLocalDiskPresence=cucsStorageLocalDiskPresence, cucsStorageFlexFlashCardSerial=cucsStorageFlexFlashCardSerial, cucsStorageSystemFsmProgress=cucsStorageSystemFsmProgress, cucsStorageSystemFsmRmtInvRslt=cucsStorageSystemFsmRmtInvRslt, cucsStorageSystemFsmTaskItem=cucsStorageSystemFsmTaskItem, cucsStorageNodeEpInstanceId=cucsStorageNodeEpInstanceId, cucsStorageVirtualDriveBlockSize=cucsStorageVirtualDriveBlockSize, cucsStorageMezzFlashLifeVendor=cucsStorageMezzFlashLifeVendor, cucsStorageConnectionDefPolicyOwner=cucsStorageConnectionDefPolicyOwner, cucsStorageIniGroupGroupPolicyName=cucsStorageIniGroupGroupPolicyName, cucsStorageMezzFlashLifeBlockSize=cucsStorageMezzFlashLifeBlockSize, cucsStorageQualEntry=cucsStorageQualEntry, cucsStorageSasExpanderPresence=cucsStorageSasExpanderPresence, cucsStorageScsiLunRefDn=cucsStorageScsiLunRefDn, cucsStorageDiskEnvStatsHistSuspect=cucsStorageDiskEnvStatsHistSuspect, cucsStorageEpUserDescr=cucsStorageEpUserDescr, cucsStorageVDMemberEpDiskDn=cucsStorageVDMemberEpDiskDn, cucsStorageSasExpanderOperQualifierReason=cucsStorageSasExpanderOperQualifierReason, cucsStorageOperationStatusDescr=cucsStorageOperationStatusDescr, cucsStorageFlexFlashControllerFsmStatus=cucsStorageFlexFlashControllerFsmStatus, cucsStorageEnclosureDn=cucsStorageEnclosureDn, cucsStorageSasExpanderSasAddress=cucsStorageSasExpanderSasAddress, cucsStorageOperationInstanceId=cucsStorageOperationInstanceId, cucsStorageFlexFlashControllerReadErrorThreshold=cucsStorageFlexFlashControllerReadErrorThreshold, cucsStorageVirtualDriveRefIsBootable=cucsStorageVirtualDriveRefIsBootable, cucsStorageRaidBatteryRevision=cucsStorageRaidBatteryRevision, cucsStorageRaidBatterySerial=cucsStorageRaidBatterySerial, cucsStorageLocalDiskRevision=cucsStorageLocalDiskRevision, cucsStorageEpUserDomain=cucsStorageEpUserDomain, cucsStorageTransportableFlashModuleSerial=cucsStorageTransportableFlashModuleSerial, cucsStorageSystemTable=cucsStorageSystemTable, cucsStorageConnectionPolicyZoningType=cucsStorageConnectionPolicyZoningType, cucsStorageEpUserConfigState=cucsStorageEpUserConfigState, cucsStorageEpUserEntry=cucsStorageEpUserEntry, cucsStorageVirtualDriveRefDn=cucsStorageVirtualDriveRefDn, cucsStorageFlexFlashControllerFsmPrev=cucsStorageFlexFlashControllerFsmPrev, cucsStorageRaidBatteryDn=cucsStorageRaidBatteryDn, cucsStorageQualNumberOfFlexFlashCards=cucsStorageQualNumberOfFlexFlashCards, cucsStorageVirtualDriveRn=cucsStorageVirtualDriveRn, cucsStorageLocalDiskAdminActionTrigger=cucsStorageLocalDiskAdminActionTrigger, cucsStorageLocalDiskDn=cucsStorageLocalDiskDn, cucsStorageLocalLunTable=cucsStorageLocalLunTable, cucsStorageVDMemberEpId=cucsStorageVDMemberEpId, cucsStorageFlexFlashCardTable=cucsStorageFlexFlashCardTable, cucsStorageLocalDiskConfigDefPolicyOwner=cucsStorageLocalDiskConfigDefPolicyOwner, cucsStorageVirtualDriveLocale=cucsStorageVirtualDriveLocale, cucsStorageSystemFsmStageDescr=cucsStorageSystemFsmStageDescr, cucsStorageControllerAdminActionTrigger=cucsStorageControllerAdminActionTrigger, cucsStorageIScsiTargetIfEntry=cucsStorageIScsiTargetIfEntry, cucsStorageSystemFsmRmtInvErrDescr=cucsStorageSystemFsmRmtInvErrDescr, cucsStorageItemInstanceId=cucsStorageItemInstanceId, cucsStorageVirtualDriveRefLunItemDn=cucsStorageVirtualDriveRefLunItemDn, cucsStorageVDMemberEpSpanId=cucsStorageVDMemberEpSpanId, cucsStorageMezzFlashLifeSize=cucsStorageMezzFlashLifeSize, cucsStorageRaidBatteryLc=cucsStorageRaidBatteryLc, cucsStorageAuthKeyName=cucsStorageAuthKeyName, cucsStorageFlexFlashControllerFsmDescrData=cucsStorageFlexFlashControllerFsmDescrData, cucsStorageFlexFlashControllerOperState=cucsStorageFlexFlashControllerOperState, cucsStorageFlexFlashControllerFsmEntry=cucsStorageFlexFlashControllerFsmEntry, cucsStorageDiskEnvStatsWearPercentageAvg=cucsStorageDiskEnvStatsWearPercentageAvg, cucsStorageVDMemberEpPresence=cucsStorageVDMemberEpPresence, cucsStorageScsiLunRefLunName=cucsStorageScsiLunRefLunName, cucsStorageVirtualDriveTable=cucsStorageVirtualDriveTable, cucsStorageMezzFlashLifeFlashStatus=cucsStorageMezzFlashLifeFlashStatus, cucsStorageFlexFlashControllerFsmTable=cucsStorageFlexFlashControllerFsmTable, cucsStorageVirtualDriveRefRn=cucsStorageVirtualDriveRefRn, cucsStorageLunResourceSelectionLogInstanceId=cucsStorageLunResourceSelectionLogInstanceId, cucsStorageFlexFlashControllerFsmTaskRn=cucsStorageFlexFlashControllerFsmTaskRn, cucsStorageFlexFlashControllerFsmRmtRslt=cucsStorageFlexFlashControllerFsmRmtRslt, cucsStorageLunResourceSelectionLogEntry=cucsStorageLunResourceSelectionLogEntry, cucsStorageEpUserName=cucsStorageEpUserName, cucsStorageVirtualDriveDescr=cucsStorageVirtualDriveDescr, cucsStorageDiskEnvStatsRn=cucsStorageDiskEnvStatsRn, cucsStorageSystemFsmTaskSeqId=cucsStorageSystemFsmTaskSeqId, cucsStorageVirtualDriveConfigState=cucsStorageVirtualDriveConfigState, cucsStorageLocalDiskPartitionBootable=cucsStorageLocalDiskPartitionBootable)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageFlexFlashControllerFsmProgress=cucsStorageFlexFlashControllerFsmProgress, cucsStorageControllerVid=cucsStorageControllerVid, cucsStorageLocalLunConnectionProtocol=cucsStorageLocalLunConnectionProtocol, cucsStorageMezzFlashLifePresence=cucsStorageMezzFlashLifePresence, cucsStorageLunResourceSelectionLogOrder=cucsStorageLunResourceSelectionLogOrder, cucsStorageVirtualDriveRefDiskSelectionTs=cucsStorageVirtualDriveRefDiskSelectionTs, PYSNMP_MODULE_ID=cucsStorageObjects, cucsStorageFlexFlashDriveRevision=cucsStorageFlexFlashDriveRevision, cucsStorageSasExpanderModel=cucsStorageSasExpanderModel, cucsStorageSystemFsmStageTable=cucsStorageSystemFsmStageTable, cucsStorageVDMemberEpModel=cucsStorageVDMemberEpModel, cucsStorageDriveSerial=cucsStorageDriveSerial, cucsStorageFlexFlashVirtualDriveSize=cucsStorageFlexFlashVirtualDriveSize, cucsStorageRaidBatteryId=cucsStorageRaidBatteryId, cucsStorageFlexFlashControllerFsmTaskTable=cucsStorageFlexFlashControllerFsmTaskTable, cucsStorageInitiatorDn=cucsStorageInitiatorDn, cucsStorageEpUserPwdSet=cucsStorageEpUserPwdSet, cucsStorageFlexFlashControllerId=cucsStorageFlexFlashControllerId, cucsStorageControllerIdCount=cucsStorageControllerIdCount, cucsStorageControllerLc=cucsStorageControllerLc, cucsStorageFlexFlashCardInstanceId=cucsStorageFlexFlashCardInstanceId, cucsStorageOperationDn=cucsStorageOperationDn, cucsStorageFlexFlashControllerPower=cucsStorageFlexFlashControllerPower, cucsStorageQualDn=cucsStorageQualDn, cucsStorageSasExpanderLocationDn=cucsStorageSasExpanderLocationDn, cucsStorageDiskEnvStatsHistEntry=cucsStorageDiskEnvStatsHistEntry, cucsStorageMezzFlashLifeRevision=cucsStorageMezzFlashLifeRevision, cucsStorageFlexFlashControllerControllerState=cucsStorageFlexFlashControllerControllerState, cucsStorageQualTable=cucsStorageQualTable, cucsStorageVDMemberEpRole=cucsStorageVDMemberEpRole, cucsStorageFlexFlashCardPartitionCount=cucsStorageFlexFlashCardPartitionCount, cucsStorageOperationEndTime=cucsStorageOperationEndTime, cucsStorageSystemFsmTry=cucsStorageSystemFsmTry, cucsStorageFcTargetIfProt=cucsStorageFcTargetIfProt, cucsStorageDriveInstanceId=cucsStorageDriveInstanceId, cucsStorageEnclosureTable=cucsStorageEnclosureTable, cucsStorageVirtualDriveRefRaidLevel=cucsStorageVirtualDriveRefRaidLevel, cucsStorageSasExpanderFwRegionTwo=cucsStorageSasExpanderFwRegionTwo, cucsStorageIniGroupPolicyName=cucsStorageIniGroupPolicyName, cucsStorageRaidBatteryModel=cucsStorageRaidBatteryModel, cucsStorageLocalLunDn=cucsStorageLocalLunDn, cucsStorageLunResourceSelectionLogTable=cucsStorageLunResourceSelectionLogTable, cucsStorageIScsiTargetIfRn=cucsStorageIScsiTargetIfRn, cucsStorageFlexFlashCardOperability=cucsStorageFlexFlashCardOperability, cucsStorageLocalDiskPartitionType=cucsStorageLocalDiskPartitionType, cucsStorageSystemFsmStageDn=cucsStorageSystemFsmStageDn, cucsStorageFlexFlashVirtualDriveOperability=cucsStorageFlexFlashVirtualDriveOperability, cucsStorageLocalDiskConfigDefDn=cucsStorageLocalDiskConfigDefDn, cucsStorageFlexFlashCardNumberOfBlocks=cucsStorageFlexFlashCardNumberOfBlocks, cucsStorageDriveVendor=cucsStorageDriveVendor, cucsStorageVirtualDriveRefVendorUuid=cucsStorageVirtualDriveRefVendorUuid, cucsStorageDiskEnvStatsHistTemperature=cucsStorageDiskEnvStatsHistTemperature, cucsStorageAuthKeyDescr=cucsStorageAuthKeyDescr, cucsStorageAuthKeyUserId=cucsStorageAuthKeyUserId, cucsStorageLocalDiskEntry=cucsStorageLocalDiskEntry, cucsStorageIniGroupEntry=cucsStorageIniGroupEntry, cucsStorageEtherIfName=cucsStorageEtherIfName, cucsStorageVirtualDriveRefUuid=cucsStorageVirtualDriveRefUuid, cucsStorageFlexFlashDriveLastOperation=cucsStorageFlexFlashDriveLastOperation, cucsStorageLocalDiskConfigPolicyPolicyOwner=cucsStorageLocalDiskConfigPolicyPolicyOwner, cucsStorageControllerFaultMonitoring=cucsStorageControllerFaultMonitoring, cucsStorageFlexFlashVirtualDriveRaidHealth=cucsStorageFlexFlashVirtualDriveRaidHealth, cucsStorageFlexFlashControllerRaidSyncSupport=cucsStorageFlexFlashControllerRaidSyncSupport, cucsStorageFlexFlashControllerEntry=cucsStorageFlexFlashControllerEntry, cucsStorageLocalLunType=cucsStorageLocalLunType, cucsStorageMezzFlashLifeInstanceId=cucsStorageMezzFlashLifeInstanceId, cucsStorageEpUserInstanceId=cucsStorageEpUserInstanceId, cucsStorageFlexFlashDriveSerial=cucsStorageFlexFlashDriveSerial, cucsStorageFlexFlashControllerFsmRmtInvErrCode=cucsStorageFlexFlashControllerFsmRmtInvErrCode, cucsStorageSystemFsmTaskInstanceId=cucsStorageSystemFsmTaskInstanceId, cucsStorageNodeEpId=cucsStorageNodeEpId, cucsStorageFcTargetEpDescr=cucsStorageFcTargetEpDescr, cucsStorageFlexFlashControllerFsmStageName=cucsStorageFlexFlashControllerFsmStageName, cucsStorageDiskEnvStatsDn=cucsStorageDiskEnvStatsDn, cucsStorageEnclosureDescr=cucsStorageEnclosureDescr, cucsStorageInitiatorPolicyLevel=cucsStorageInitiatorPolicyLevel, cucsStorageFlexFlashControllerFsmCompletionTime=cucsStorageFlexFlashControllerFsmCompletionTime, cucsStorageSystemFsmStatus=cucsStorageSystemFsmStatus, cucsStorageLocalDiskPartitionPartitionStart=cucsStorageLocalDiskPartitionPartitionStart, cucsStorageInitiatorRn=cucsStorageInitiatorRn, cucsStorageVirtualDriveDeployAction=cucsStorageVirtualDriveDeployAction, cucsStorageLocalLunSerial=cucsStorageLocalLunSerial, cucsStorageMezzFlashLifeTable=cucsStorageMezzFlashLifeTable, cucsStorageVirtualDriveEntry=cucsStorageVirtualDriveEntry, cucsStorageDomainEpDn=cucsStorageDomainEpDn, cucsStorageFcTargetEpInstanceId=cucsStorageFcTargetEpInstanceId, cucsStorageLocalLunLc=cucsStorageLocalLunLc, cucsStorageAuthKeyInstanceId=cucsStorageAuthKeyInstanceId, cucsStorageFlexFlashDriveSize=cucsStorageFlexFlashDriveSize, cucsStorageVDMemberEpTable=cucsStorageVDMemberEpTable, cucsStorageSasExpanderVendor=cucsStorageSasExpanderVendor, cucsStorageTransportableFlashModuleId=cucsStorageTransportableFlashModuleId, cucsStorageAuthKeyEntry=cucsStorageAuthKeyEntry, cucsStorageIniGroupPolicyLevel=cucsStorageIniGroupPolicyLevel, cucsStorageSasExpanderInstanceId=cucsStorageSasExpanderInstanceId, cucsStorageFlexFlashDriveDn=cucsStorageFlexFlashDriveDn, cucsStorageRaidBatteryPresence=cucsStorageRaidBatteryPresence, cucsStorageSystemFsmRmtErrCode=cucsStorageSystemFsmRmtErrCode, cucsStorageDriveEntry=cucsStorageDriveEntry, cucsStorageVsanRefEntry=cucsStorageVsanRefEntry, cucsStorageLocalDiskId=cucsStorageLocalDiskId, cucsStorageFlexFlashControllerVirtualDriveCount=cucsStorageFlexFlashControllerVirtualDriveCount, cucsStorageDiskEnvStatsHistWearPercentageMin=cucsStorageDiskEnvStatsHistWearPercentageMin, cucsStorageLunDiskId=cucsStorageLunDiskId, cucsStorageVirtualDriveId=cucsStorageVirtualDriveId, cucsStorageLocalDiskConfigPolicyName=cucsStorageLocalDiskConfigPolicyName, cucsStorageDiskEnvStatsHistId=cucsStorageDiskEnvStatsHistId, cucsStorageIScsiTargetIfInstanceId=cucsStorageIScsiTargetIfInstanceId, cucsStorageInitiatorInstanceId=cucsStorageInitiatorInstanceId, cucsStorageConnectionPolicyInstanceId=cucsStorageConnectionPolicyInstanceId, cucsStorageFcTargetEpRn=cucsStorageFcTargetEpRn, cucsStorageRaidBatteryTable=cucsStorageRaidBatteryTable, cucsStorageEnclosureVendor=cucsStorageEnclosureVendor, cucsStorageVirtualDriveRefLunName=cucsStorageVirtualDriveRefLunName, cucsStorageFlexFlashControllerSerial=cucsStorageFlexFlashControllerSerial, cucsStorageDiskEnvStatsHistTemperatureMax=cucsStorageDiskEnvStatsHistTemperatureMax, cucsStorageVsanRefVnet=cucsStorageVsanRefVnet, cucsStorageLocalLunOperQualifierReason=cucsStorageLocalLunOperQualifierReason, cucsStorageFlexFlashDriveNumberOfBlocks=cucsStorageFlexFlashDriveNumberOfBlocks, cucsStorageSasExpanderTable=cucsStorageSasExpanderTable, cucsStorageSystemDn=cucsStorageSystemDn, cucsStorageFlexFlashControllerFsmTaskItem=cucsStorageFlexFlashControllerFsmTaskItem, cucsStorageRaidBatterySize=cucsStorageRaidBatterySize, cucsStorageFlexFlashControllerTable=cucsStorageFlexFlashControllerTable, cucsStorageDiskEnvStatsHistRn=cucsStorageDiskEnvStatsHistRn, cucsStorageFlexFlashDriveModel=cucsStorageFlexFlashDriveModel, cucsStorageDomainEpTable=cucsStorageDomainEpTable, cucsStorageFlexFlashVirtualDriveNumberOfBlocks=cucsStorageFlexFlashVirtualDriveNumberOfBlocks, cucsStorageFlexFlashControllerFsmStageDescrData=cucsStorageFlexFlashControllerFsmStageDescrData, cucsStorageConnectionDefTable=cucsStorageConnectionDefTable, cucsStorageFlexFlashControllerFsmStageRn=cucsStorageFlexFlashControllerFsmStageRn, cucsStorageConnectionPolicyPolicyOwner=cucsStorageConnectionPolicyPolicyOwner, cucsStorageSystemInstanceId=cucsStorageSystemInstanceId, cucsStorageLocalDiskPartitionRawTypeDesc=cucsStorageLocalDiskPartitionRawTypeDesc, cucsStorageOperationEntry=cucsStorageOperationEntry, cucsStorageVirtualDriveOperState=cucsStorageVirtualDriveOperState, cucsStorageQualPerDiskCap=cucsStorageQualPerDiskCap, cucsStorageEnclosureRevision=cucsStorageEnclosureRevision, cucsStorageLocalDiskConfigPolicyProtectConfig=cucsStorageLocalDiskConfigPolicyProtectConfig, cucsStorageLocalLunBlockSize=cucsStorageLocalLunBlockSize, cucsStorageVirtualDriveInstanceId=cucsStorageVirtualDriveInstanceId, cucsStorageVirtualDriveModel=cucsStorageVirtualDriveModel, cucsStorageFlexFlashControllerPciSlot=cucsStorageFlexFlashControllerPciSlot, cucsStorageAuthKeyPolicyOwner=cucsStorageAuthKeyPolicyOwner, cucsStorageDriveDn=cucsStorageDriveDn, cucsStorageLocalDiskModel=cucsStorageLocalDiskModel, cucsStorageFlexFlashCardCardState=cucsStorageFlexFlashCardCardState, cucsStorageMezzFlashLifeModel=cucsStorageMezzFlashLifeModel, cucsStorageControllerPresence=cucsStorageControllerPresence, cucsStorageFcTargetIfDn=cucsStorageFcTargetIfDn, cucsStorageFlexFlashDriveId=cucsStorageFlexFlashDriveId, cucsStorageControllerPinnedCacheStatus=cucsStorageControllerPinnedCacheStatus, cucsStorageEnclosureNumSlots=cucsStorageEnclosureNumSlots, cucsStorageFlexFlashVirtualDriveModel=cucsStorageFlexFlashVirtualDriveModel, cucsStorageQualDiskless=cucsStorageQualDiskless, cucsStorageSasExpanderThermal=cucsStorageSasExpanderThermal, cucsStorageLocalLunSize=cucsStorageLocalLunSize, cucsStorageIniGroupInstanceId=cucsStorageIniGroupInstanceId, cucsStorageIniGroupDn=cucsStorageIniGroupDn, cucsStorageFlexFlashControllerPciAddr=cucsStorageFlexFlashControllerPciAddr, cucsStorageVirtualDriveSerial=cucsStorageVirtualDriveSerial, cucsStorageLocalDiskConfigPolicyDescr=cucsStorageLocalDiskConfigPolicyDescr, cucsStorageDriveId=cucsStorageDriveId, cucsStorageLocalLunOperability=cucsStorageLocalLunOperability, cucsStorageEnclosureModel=cucsStorageEnclosureModel, cucsStorageFlexFlashVirtualDriveId=cucsStorageFlexFlashVirtualDriveId, cucsStorageSystemFsmStageRn=cucsStorageSystemFsmStageRn, cucsStorageSystemFsmRmtRslt=cucsStorageSystemFsmRmtRslt, cucsStorageLocalDiskConfigDefInstanceId=cucsStorageLocalDiskConfigDefInstanceId, cucsStorageSasExpanderEntry=cucsStorageSasExpanderEntry, cucsStorageFlexFlashCardCardType=cucsStorageFlexFlashCardCardType, cucsStorageFlexFlashDriveDriveType=cucsStorageFlexFlashDriveDriveType, cucsStorageScsiLunRefProfileDn=cucsStorageScsiLunRefProfileDn, cucsStorageScsiLunRefPnDn=cucsStorageScsiLunRefPnDn, cucsStorageConnectionDefRn=cucsStorageConnectionDefRn, cucsStorageFlexFlashCardId=cucsStorageFlexFlashCardId, cucsStorageVsanRefDn=cucsStorageVsanRefDn, cucsStorageDriveTable=cucsStorageDriveTable, cucsStorageVirtualDriveAvailableSize=cucsStorageVirtualDriveAvailableSize, cucsStorageLocalDiskRn=cucsStorageLocalDiskRn, cucsStorageLocalDiskLinkSpeed=cucsStorageLocalDiskLinkSpeed, cucsStorageAuthKeyRn=cucsStorageAuthKeyRn, cucsStorageLocalDiskPartitionEntry=cucsStorageLocalDiskPartitionEntry, cucsStorageLocalDiskSerial=cucsStorageLocalDiskSerial, cucsStorageFcTargetIfId=cucsStorageFcTargetIfId, cucsStorageLocalDiskOperability=cucsStorageLocalDiskOperability, cucsStorageRaidBatteryOperQualifierReason=cucsStorageRaidBatteryOperQualifierReason, cucsStorageSasExpanderPower=cucsStorageSasExpanderPower, cucsStorageLocalDiskSlotEpEntry=cucsStorageLocalDiskSlotEpEntry, cucsStorageQualBlockSize=cucsStorageQualBlockSize, cucsStorageLocalDiskConfigDefProtectConfig=cucsStorageLocalDiskConfigDefProtectConfig, cucsStorageEtherIfVlanType=cucsStorageEtherIfVlanType, cucsStorageVirtualDriveRefOrder=cucsStorageVirtualDriveRefOrder, cucsStorageControllerDeviceRaidSupport=cucsStorageControllerDeviceRaidSupport, cucsStorageRaidBatteryEntry=cucsStorageRaidBatteryEntry, cucsStorageEtherIfRn=cucsStorageEtherIfRn, cucsStorageLocalDiskTable=cucsStorageLocalDiskTable, cucsStorageObjects=cucsStorageObjects, cucsStorageLocalDiskConfigDefTable=cucsStorageLocalDiskConfigDefTable, cucsStorageSasExpanderOperState=cucsStorageSasExpanderOperState, cucsStorageSasExpanderVoltage=cucsStorageSasExpanderVoltage, cucsStorageSasExpanderRevision=cucsStorageSasExpanderRevision, cucsStorageEnclosureSerial=cucsStorageEnclosureSerial, cucsStorageSystemName=cucsStorageSystemName, cucsStorageFlexFlashCardSlotNumber=cucsStorageFlexFlashCardSlotNumber, cucsStorageAuthKeyDn=cucsStorageAuthKeyDn, cucsStorageSystemFsmRn=cucsStorageSystemFsmRn, cucsStorageAuthKeyType=cucsStorageAuthKeyType, cucsStorageDomainEpInstanceId=cucsStorageDomainEpInstanceId, cucsStorageItemOperState=cucsStorageItemOperState, cucsStorageTransportableFlashModuleInstanceId=cucsStorageTransportableFlashModuleInstanceId, cucsStorageEpUserPwd=cucsStorageEpUserPwd, cucsStorageFlexFlashDriveRWType=cucsStorageFlexFlashDriveRWType, cucsStorageVirtualDriveOperability=cucsStorageVirtualDriveOperability, cucsStorageVirtualDriveNumberOfBlocks=cucsStorageVirtualDriveNumberOfBlocks, cucsStorageControllerVendor=cucsStorageControllerVendor, cucsStorageLocalDiskConfigPolicyTable=cucsStorageLocalDiskConfigPolicyTable, cucsStorageVirtualDriveRefDiskSelectionOrder=cucsStorageVirtualDriveRefDiskSelectionOrder, cucsStorageFlexFlashControllerPerf=cucsStorageFlexFlashControllerPerf, cucsStorageDiskEnvStatsHistTable=cucsStorageDiskEnvStatsHistTable, cucsStorageIniGroupTable=cucsStorageIniGroupTable, cucsStorageLocalDiskPartitionDn=cucsStorageLocalDiskPartitionDn, cucsStorageDiskEnvStatsHistMostRecent=cucsStorageDiskEnvStatsHistMostRecent, cucsStorageVirtualDriveRevision=cucsStorageVirtualDriveRevision, cucsStorageConnectionDefIntId=cucsStorageConnectionDefIntId, cucsStorageControllerOobControllerId=cucsStorageControllerOobControllerId, cucsStorageQualDiskType=cucsStorageQualDiskType, cucsStorageVsanRefRn=cucsStorageVsanRefRn, cucsStorageFcTargetEpTargetwwpn=cucsStorageFcTargetEpTargetwwpn, cucsStorageVDMemberEpEntry=cucsStorageVDMemberEpEntry, cucsStorageRaidBatteryNumberOfBlocks=cucsStorageRaidBatteryNumberOfBlocks, cucsStorageSystemFsmTaskCompletion=cucsStorageSystemFsmTaskCompletion, cucsStorageLocalDiskPartitionInstanceId=cucsStorageLocalDiskPartitionInstanceId, cucsStorageFlexFlashControllerFlexFlashType=cucsStorageFlexFlashControllerFlexFlashType, cucsStorageRaidBatteryTemperature=cucsStorageRaidBatteryTemperature, cucsStorageOperationRn=cucsStorageOperationRn, cucsStorageRaidBatteryOperabilityQualifier=cucsStorageRaidBatteryOperabilityQualifier, cucsStorageLocalDiskPartitionPartitionEnd=cucsStorageLocalDiskPartitionPartitionEnd, cucsStorageVirtualDriveStripSize=cucsStorageVirtualDriveStripSize, cucsStorageDriveRn=cucsStorageDriveRn, cucsStorageLocalDiskConfigDefMode=cucsStorageLocalDiskConfigDefMode, cucsStorageLocalLunVendor=cucsStorageLocalLunVendor, cucsStorageFlexFlashControllerVoltage=cucsStorageFlexFlashControllerVoltage, cucsStorageLocalDiskConfigDefFlexFlashState=cucsStorageLocalDiskConfigDefFlexFlashState, cucsStorageConnectionDefOperState=cucsStorageConnectionDefOperState, cucsStorageLocalLunModel=cucsStorageLocalLunModel, cucsStorageInitiatorDescr=cucsStorageInitiatorDescr, cucsStorageFlexFlashCardMfgDate=cucsStorageFlexFlashCardMfgDate, cucsStorageVirtualDriveConfigQualifierReason=cucsStorageVirtualDriveConfigQualifierReason, cucsStorageSystemFsmFsmStatus=cucsStorageSystemFsmFsmStatus, cucsStorageLocalDiskConfigPolicyDn=cucsStorageLocalDiskConfigPolicyDn, cucsStorageLocalDiskSlotEpDn=cucsStorageLocalDiskSlotEpDn, cucsStorageFlexFlashCardControllerIndex=cucsStorageFlexFlashCardControllerIndex, cucsStorageLocalDiskVendor=cucsStorageLocalDiskVendor)
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-STORAGE-MIB", cucsStorageDiskEnvStatsHistDn=cucsStorageDiskEnvStatsHistDn, cucsStorageFcTargetEpDn=cucsStorageFcTargetEpDn, cucsStorageFlexFlashCardConnectionProtocol=cucsStorageFlexFlashCardConnectionProtocol, cucsStorageFlexFlashControllerHasError=cucsStorageFlexFlashControllerHasError, cucsStorageControllerOperability=cucsStorageControllerOperability, cucsStorageFlexFlashCardPresence=cucsStorageFlexFlashCardPresence, cucsStorageAuthKeyIntId=cucsStorageAuthKeyIntId, cucsStorageControllerRebuildRate=cucsStorageControllerRebuildRate, cucsStorageScsiLunRefTable=cucsStorageScsiLunRefTable, cucsStorageFlexFlashDriveOperationState=cucsStorageFlexFlashDriveOperationState, cucsStorageConnectionPolicyPolicyLevel=cucsStorageConnectionPolicyPolicyLevel, cucsStorageFlexFlashCardCardSync=cucsStorageFlexFlashCardCardSync, cucsStorageFlexFlashControllerFsmStamp=cucsStorageFlexFlashControllerFsmStamp, cucsStorageRaidBatteryOperabilityQualifierReason=cucsStorageRaidBatteryOperabilityQualifierReason, cucsStorageVsanRefConfigQualifier=cucsStorageVsanRefConfigQualifier, cucsStorageVsanRefTable=cucsStorageVsanRefTable, cucsStorageFlexFlashControllerOperationRequest=cucsStorageFlexFlashControllerOperationRequest, cucsStorageControllerInstanceId=cucsStorageControllerInstanceId, cucsStorageLocalDiskConfigCheckPoint=cucsStorageLocalDiskConfigCheckPoint, cucsStorageTransportableFlashModuleOperQualifierReason=cucsStorageTransportableFlashModuleOperQualifierReason, cucsStorageDiskEnvStatsWearPercentageMax=cucsStorageDiskEnvStatsWearPercentageMax, cucsStorageLocalDiskConfigPolicyInstanceId=cucsStorageLocalDiskConfigPolicyInstanceId, cucsStorageLocalDiskSize=cucsStorageLocalDiskSize)
