#
# PySNMP MIB module Unisphere-Data-ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Unisphere-Data-ISIS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:31:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, ModuleIdentity, Gauge32, IpAddress, iso, TimeTicks, ObjectIdentity, Unsigned32, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "ModuleIdentity", "Gauge32", "IpAddress", "iso", "TimeTicks", "ObjectIdentity", "Unsigned32", "Counter32", "Bits")
RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
usDataMibs, = mibBuilder.importSymbols("Unisphere-Data-MIBs", "usDataMibs")
usdIsisMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38))
usdIsisMIB.setRevisions(('2001-12-10 21:29', '2001-12-07 15:22', '2001-04-17 21:26', '2000-02-22 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: usdIsisMIB.setRevisionsDescriptions(('Added MPLS support.', 'Added support for simple password protection.', 'Add circuit state object.', 'Initial version of this MIB module, based on draft-ietf-isis-wg-mib.',))
if mibBuilder.loadTexts: usdIsisMIB.setLastUpdated('200112102129Z')
if mibBuilder.loadTexts: usdIsisMIB.setOrganization('Unisphere Networks, Inc.')
if mibBuilder.loadTexts: usdIsisMIB.setContactInfo(' Unisphere Networks, Inc. Postal: 10 Technology Park Drive Westford, MA 01886 USA Tel: +1 978 589 5800 Email: mib@UnisphereNetworks.com')
if mibBuilder.loadTexts: usdIsisMIB.setDescription('The intermediate system to intermediate system (IS-IS) routing protocol MIB for Unisphere Networks routing switch products. This MIB provides objects for management of the IS-IS Routing protocol, as described in ISO 10589, when it is used to construct routing tables for IP networks, as described in RFC 1195.')
class OSINSAddress(TextualConvention, OctetString):
    description = 'OSI Network Service Address, e.g. NSAP, Network Entity Title'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class SystemID(TextualConvention, OctetString):
    description = 'A system ID.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class OperState(TextualConvention, Integer32):
    description = 'Type used in enabling and disabling a row.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("on", 2))

class AuthTime(TextualConvention, Integer32):
    description = 'Then number of seconds since Jan. 1 1970.'
    status = 'current'

class LSPBuffSize(TextualConvention, Integer32):
    description = 'Integer sub range for LSP size.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(512, 9180)

class LevelState(TextualConvention, Integer32):
    description = 'States of the ISIS protocol.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("off", 1), ("on", 2), ("waiting", 3))

class SupportedProtocol(TextualConvention, Integer32):
    description = 'Types of network protocol supported by Integrated ISIS. The values for ISO8473 and IP are those registered for these protocols in ISO TR9577.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 204, 205))
    namedValues = NamedValues(("iso8473", 129), ("ip", 204), ("ipV6", 205))

class UsdDefaultMetric(TextualConvention, Integer32):
    description = 'Integer sub-range for default metric for single hop. The value is truncated to 63 when the usdIsisSysL1MetricStyle or usdIsisSysL2MetricStyle is set to usdIsisMetricStyleNarrow '
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16777214)

class OtherMetric(TextualConvention, Integer32):
    description = 'Integer sub-range for metrics other than the default metric for single hop.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class CircuitID(TextualConvention, OctetString):
    description = 'ID for a circuit.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 9)

class ISPriority(TextualConvention, Integer32):
    description = 'Integer sub-range for ISIS priority.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 127)

usdIsisObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1))
usdIsisTrapGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 2))
usdIsisConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3))
usdIsisSystemGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1))
usdIsisCircuitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2))
usdIsisSysTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1), )
if mibBuilder.loadTexts: usdIsisSysTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysTable.setDescription('The set of instances of the Integrated IS-IS protocol existing on the system.')
usdIsisSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysInstance"))
if mibBuilder.loadTexts: usdIsisSysEntry.setReference('ISIS.poi cLNSISISBasic-P (1)')
if mibBuilder.loadTexts: usdIsisSysEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysEntry.setDescription('Each row defines information specific to a single instance of the protocol existing on the system.')
usdIsisSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysVersion.setReference('ISIS.aoi version (1)')
if mibBuilder.loadTexts: usdIsisSysVersion.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysVersion.setDescription('The version number of the IS-IS protocol to which this instance conforms. This value must be set by the implementation when the row is valid.')
usdIsisSysType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1IS", 1), ("level1l2IS", 2), ("level2Only", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysType.setReference('ISIS.aoi iSType (2)')
if mibBuilder.loadTexts: usdIsisSysType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysType.setDescription('The type of this instance of the Integrated IS-IS protocol. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 4), SystemID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysID.setReference('ISIS.aoi systemId (119)')
if mibBuilder.loadTexts: usdIsisSysID.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysID.setDescription("The ID for this instance of the Integrated IS-IS protocol. This value is appended to each of the instance's area addresses to form the Network Entity Titles valid for this instance. The derivation of a value for this object is implementation-specific. Some implementations may assign values and not permit write MAX-ACCESS, others may require the value to be set manually.")
usdIsisSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMaxPathSplits.setReference('ISIS.aoi maximumPathSplits (3)')
if mibBuilder.loadTexts: usdIsisSysMaxPathSplits.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxPathSplits.setDescription('Maximum number of paths with equal routing metric value which it is permitted to split between. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisSysMaxLSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(900)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMaxLSPGenInt.setReference('ISIS.aoi maximumLSPGenerationInterval (6)')
if mibBuilder.loadTexts: usdIsisSysMaxLSPGenInt.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxLSPGenInt.setDescription('Maximum interval, in seconds, between generated LSPs by this instance. This object follows the resettingTimer behaviour.')
usdIsisSysOrigL1LSPBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 7), LSPBuffSize().clone(1497)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysOrigL1LSPBuffSize.setReference('ISIS.aoi originatingL1LSPBufferSize (9)')
if mibBuilder.loadTexts: usdIsisSysOrigL1LSPBuffSize.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysOrigL1LSPBuffSize.setDescription('The maximum size of Level 1 LSPs and SNPs originated by this instance. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisSysMaxAreaAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254)).clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddresses.setReference('ISIS.aoi maximumAreaAddresses (4)')
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddresses.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddresses.setDescription('The maximum number of area addresses to be permitted for the area in which this instance exists. Note that all Intermediate Systems in the same area must have the same value configured for this attribute if correct operation is to be assumed. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisSysMinL1LSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMinL1LSPGenInt.setReference('ISIS.aoi minimumLSPGenerationInterval (11)')
if mibBuilder.loadTexts: usdIsisSysMinL1LSPGenInt.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMinL1LSPGenInt.setDescription('Minimum interval, in seconds, between successive generation of L1 LSPs with the same LSPID by this instance. This object follows the resettingTimer behaviour.')
usdIsisSysMinL2LSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMinL2LSPGenInt.setReference('ISIS.aoi minimumLSPGenerationInterval (11)')
if mibBuilder.loadTexts: usdIsisSysMinL2LSPGenInt.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMinL2LSPGenInt.setDescription('Minimum interval, in seconds, between successive generation of L2 LSPs with the same LSPID by this instance. This object follows the resettingTimer behaviour.')
usdIsisSysPollESHelloRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysPollESHelloRate.setReference('ISIS.aoi pollESHelloRate (13)')
if mibBuilder.loadTexts: usdIsisSysPollESHelloRate.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysPollESHelloRate.setDescription('The value, in seconds, to be used for the suggested ES configuration timer in ISH PDUs when soliciting the ES configuration.')
usdIsisSysWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysWaitTime.setReference('ISIS.aoi waitingTime (15)')
if mibBuilder.loadTexts: usdIsisSysWaitTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysWaitTime.setDescription('Number of seconds to delay in waiting state before entering on state. This object follows the resettingTimer behaviour.')
usdIsisSysOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 13), OperState().clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysOperState.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysOperState.setDescription('The operational state of this instance of the Integrated IS-IS protocol. Setting this object to the value on when its current value is off enables operation of this instance of the Integrated IS-IS protocol.')
usdIsisSysL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 14), LevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysL1State.setReference('ISIS.aoi l1State (17)')
if mibBuilder.loadTexts: usdIsisSysL1State.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1State.setDescription('The state of the Level 1 database.')
usdIsisSysCorrLSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysCorrLSPs.setReference('ISIS.aoi corruptedLSPsDetected (19)')
if mibBuilder.loadTexts: usdIsisSysCorrLSPs.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysCorrLSPs.setDescription('Number of corrupted LSPs detected.')
usdIsisSysLSPL1DbaseOloads = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysLSPL1DbaseOloads.setReference('ISIS.aoi lSPL1DatabaseOverloads (20)')
if mibBuilder.loadTexts: usdIsisSysLSPL1DbaseOloads.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysLSPL1DbaseOloads.setDescription('Number of times the LSP L1 database has become overloaded.')
usdIsisSysManAddrDropFromAreas = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysManAddrDropFromAreas.setReference('ISIS.aoi manualAddressesDroppedFromArea (21)')
if mibBuilder.loadTexts: usdIsisSysManAddrDropFromAreas.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysManAddrDropFromAreas.setDescription('Number of times a manual address has been dropped from the area.')
usdIsisSysAttmptToExMaxSeqNums = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysAttmptToExMaxSeqNums.setReference('ISIS.aoi attemptsToExceedmaximumSequenceNumber (22)')
if mibBuilder.loadTexts: usdIsisSysAttmptToExMaxSeqNums.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAttmptToExMaxSeqNums.setDescription('Number of times the IS has attempted to exceed the maximum sequence number.')
usdIsisSysSeqNumSkips = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysSeqNumSkips.setReference('ISIS.aoi sequenceNumberSkips (23)')
if mibBuilder.loadTexts: usdIsisSysSeqNumSkips.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysSeqNumSkips.setDescription('Number of times a sequence number skip has occurred.')
usdIsisSysOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysOwnLSPPurges.setReference('ISIS.aoi ownLSPPurges (24)')
if mibBuilder.loadTexts: usdIsisSysOwnLSPPurges.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysOwnLSPPurges.setDescription("Number of times a zero-aged copy of the system's own LSP is received from some other node.")
usdIsisSysIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysIDFieldLenMismatches.setReference('ISIS.aoi iDFieldLengthMismatches (25)')
if mibBuilder.loadTexts: usdIsisSysIDFieldLenMismatches.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysIDFieldLenMismatches.setDescription('Number of times a PDU is received with a different value for ID field length to that of the receiving system.')
usdIsisSysMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddrMismatches.setReference('ISIS.aoi MaximumAreaAddressesMismatches (118)')
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddrMismatches.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxAreaAddrMismatches.setDescription('Number of times a PDU is received with a different value for MaximumAreaAddresses from that of the receiving system.')
usdIsisSysOrigL2LSPBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 23), LSPBuffSize().clone(1497)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysOrigL2LSPBuffSize.setReference('ISIS.aoi originatingL2LSPBufferSize (26)')
if mibBuilder.loadTexts: usdIsisSysOrigL2LSPBuffSize.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysOrigL2LSPBuffSize.setDescription('The maximum size of Level 2 LSPs and SNPs originated by this system. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisSysL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 24), LevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysL2State.setReference('ISIS.aoi l2State (28)')
if mibBuilder.loadTexts: usdIsisSysL2State.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2State.setDescription('The state of the Level 2 database.')
usdIsisSysLSPL2DbaseOloads = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysLSPL2DbaseOloads.setReference('ISIS.aoi lSPL2DatabaseOverloads (32)')
if mibBuilder.loadTexts: usdIsisSysLSPL2DbaseOloads.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysLSPL2DbaseOloads.setDescription('Number of times the Level 2 LSP database has become overloaded.')
usdIsisSysAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysAuthFails.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAuthFails.setDescription('The number of authentication failures recognized by this instance of the protocol.')
usdIsisSysLSPIgnoreErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysLSPIgnoreErrors.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysLSPIgnoreErrors.setDescription('If true, allow the router to ignore IS-IS link state packets (LSPs) that are received with internal checksum errors rather than purging the LSPs.')
usdIsisSysMaxAreaCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 28), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysMaxAreaCheck.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxAreaCheck.setDescription('When on, enables checking of maximum area addresses per IS version of ISO10589.')
usdIsisSysSetOverloadBit = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysSetOverloadBit.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysSetOverloadBit.setDescription('Isis overload bit')
usdIsisSysSetOverloadBitStartupDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysSetOverloadBitStartupDuration.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysSetOverloadBitStartupDuration.setDescription('Specifies the length in time of seconds to set the overload bit from startup. This object must be set together with usdIsisSysSetOverloadBit, otherwise the agent will return an error.')
usdIsisSysMaxLspLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMaxLspLifetime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMaxLspLifetime.setDescription('Specifies the maximum time (in seconds) a LSP will remain in the box without being refreshed before being considered invalid.')
usdIsisSysL1SpfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1SpfInterval.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1SpfInterval.setDescription('Minimum interval, in seconds, between level 1 SPF calculations.')
usdIsisSysL2SpfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2SpfInterval.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2SpfInterval.setDescription('Minimum interval, in seconds, between level 2 SPF calculations.')
usdIsisSysIshHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysIshHoldTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysIshHoldTime.setDescription('Specify a holdtime advertised in ESH/ISH PDUs.')
usdIsisSysIshConfigTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysIshConfigTimer.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysIshConfigTimer.setDescription('Specify the rate of transmission for ESH and ISH packets.')
usdIsisSysDistributeDomainWide = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 36), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDistributeDomainWide.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDistributeDomainWide.setDescription('When on, enables distribution of prefixes throughout a multi-level domain.')
usdIsisSysDistance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(115)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDistance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDistance.setDescription('The weight applied to IS-IS routes.')
usdIsisSysL1MetricStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("usdIsisMetricStyleNarrow", 2), ("usdIsisMetricStyleNarrowTransition", 3), ("usdIsisMetricStyleTransition", 4), ("usdIsisMetricStyleWide", 5), ("usdIsisMetricStyleWideTransition", 6))).clone('usdIsisMetricStyleNarrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1MetricStyle.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1MetricStyle.setDescription('Specifies the type of IP reachability TLV to advertise in level 1 LSPs.')
usdIsisSysL2MetricStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("usdIsisMetricStyleNarrow", 2), ("usdIsisMetricStyleNarrowTransition", 3), ("usdIsisMetricStyleTransition", 4), ("usdIsisMetricStyleWide", 5), ("usdIsisMetricStyleWideTransition", 6))).clone('usdIsisMetricStyleNarrow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2MetricStyle.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2MetricStyle.setDescription('Specifies the type of IP reachability TLV to advertise in level 2 LSPs.')
usdIsisSysIsoRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysIsoRouteTag.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysIsoRouteTag.setDescription('The ISO routing area tag.')
usdIsisSysMplsTeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("levelNone", 0), ("level1", 1), ("level2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMplsTeLevel.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMplsTeLevel.setDescription('Select flooding of MPLS traffic engineering link information into the specified ISIS level.')
usdIsisSysMplsTeRtrIdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 1, 1, 42), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysMplsTeRtrIdIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysMplsTeRtrIdIfIndex.setDescription('Configure the stable router interface ID to designate it as TE capable. A value of zero is used to remove any configured router interface ID.')
usdIsisManAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 2), )
if mibBuilder.loadTexts: usdIsisManAreaAddrTable.setReference('ISIS.aoi manualAreaAddresses (10)')
if mibBuilder.loadTexts: usdIsisManAreaAddrTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisManAreaAddrTable.setDescription('The set of manual area addresses configured on this Intermediate System.')
usdIsisManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 2, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisManAreaAddrSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisManAreaAddr"))
if mibBuilder.loadTexts: usdIsisManAreaAddrEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisManAreaAddrEntry.setDescription('Each entry contains one area address manually configured on this system.')
usdIsisManAreaAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisManAreaAddrSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisManAreaAddrSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisManAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 2, 1, 2), OSINSAddress())
if mibBuilder.loadTexts: usdIsisManAreaAddr.setStatus('current')
if mibBuilder.loadTexts: usdIsisManAreaAddr.setDescription('A manually configured area address for this system. This object follows the index behaviour. Note: an index for the entry {1, {49.0001} active} in this table would be the ordered pair (1, (0x03 0x49 0x00 0x01)), as the length of an octet string is part of the OID.')
usdIsisManAreaAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 2, 1, 3), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIsisManAreaAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisManAreaAddrRowStatus.setDescription('The state of the usdIsisManAreaAddrEntry. This object follows the RowStatus behaviour. If an attempt is made to set this object to the value off when the corresponding usdIsisManAreaAddrEntry is the only valid entry for this instance and when the corresponding IS-IS instance has usdIsisSysOperState set to on then the attempt is rejected.')
usdIsisSysProtSuppTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 3), )
if mibBuilder.loadTexts: usdIsisSysProtSuppTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysProtSuppTable.setDescription('This table contains the manually configured set of protocols supported by each instance of the Integrated ISIS protocol.')
usdIsisSysProtSuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 3, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysProtSuppSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysProtSuppProtocol"))
if mibBuilder.loadTexts: usdIsisSysProtSuppEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysProtSuppEntry.setDescription('Each entry contains one protocol supported by an instance of the Integrated ISIS protocol.')
usdIsisSysProtSuppSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysProtSuppSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysProtSuppSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 3, 1, 2), SupportedProtocol())
if mibBuilder.loadTexts: usdIsisSysProtSuppProtocol.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysProtSuppProtocol.setDescription('One supported protocol. This object follows the index behaviour.')
usdIsisSysProtSuppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 3, 1, 3), RowStatus().clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysProtSuppRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysProtSuppRowStatus.setDescription('The state of the usdIsisSysProtSuppEntry. This object follows the RowStatus behavior.')
usdIsisSummAddrTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4), )
if mibBuilder.loadTexts: usdIsisSummAddrTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrTable.setDescription('The set of IP summary addresses to use in forming the contents of Level 2 LSPs originated by this level 2 Intermediate System.')
usdIsisSummAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSummAddrSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSummAddress"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSummAddrMask"))
if mibBuilder.loadTexts: usdIsisSummAddrEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrEntry.setDescription('Each entry contains one IP summary address.')
usdIsisSummAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSummAddrSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviours.')
usdIsisSummAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 2), IpAddress())
if mibBuilder.loadTexts: usdIsisSummAddress.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddress.setDescription('The IP Address value for this summary address. This object follows the index behaviour.')
usdIsisSummAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 3), IpAddress())
if mibBuilder.loadTexts: usdIsisSummAddrMask.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrMask.setDescription('The mask value for this summary address. This object follows the index behaviour.')
usdIsisSummAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIsisSummAddrRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrRowStatus.setDescription('The existence state of this summary address. This object follows the RowStatus behaviour.')
usdIsisSummAddrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 5), OperState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIsisSummAddrOperState.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrOperState.setDescription('The operational state of this entry. This object follows the operationalState behaviour. When the operational state changes if this would cause the contents of LSPs originated by the system to change then those new LSPs must be generated and sent as soon as is permitted by the ISIS protocol.')
usdIsisSummAddrDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIsisSummAddrDefaultMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrDefaultMetric.setDescription('The default metric value to announce this summary address with in Level 1 or 2 LSPs generated by this system. A Metric value of 0 indicates to use the lowest metric value amongst the routes being summarized. When advertising a metric value into a narrow domain (usdIsisSysL1MetricStyle or usdIsisSysL2MetricStyle is set to usdIsisMetricStyleNarrow) the value will be truncated to 63.')
usdIsisSummAddrDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 7), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSummAddrDelayMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrDelayMetric.setDescription('The delay metric value to announce this summary address with in Level 2 LSPs generated by this system. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisSummAddrExpenseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 8), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSummAddrExpenseMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrExpenseMetric.setDescription('The expense metric value to announce this summary address with in Level 2 LSPs generated by this system. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisSummAddrErrorMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 9), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSummAddrErrorMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummAddrErrorMetric.setDescription('The error metric value to announce this summary address with in Level n LSPs generated by this system. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisSummLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2), ("level1l2IS", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usdIsisSummLevel.setStatus('current')
if mibBuilder.loadTexts: usdIsisSummLevel.setDescription('The level of database at which to annouce this summary.')
usdIsisCircTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1), )
if mibBuilder.loadTexts: usdIsisCircTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircTable.setDescription('The table of circuits used by each instance of Integrated IS-IS on this system.')
usdIsisCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisCircSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisCircIfIndex"))
if mibBuilder.loadTexts: usdIsisCircEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircEntry.setDescription('An usdIsisCircEntry exists for each circuit used by Integrated IS-IS on this system.')
usdIsisCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisCircSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisCircIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircIfIndex.setDescription('The value of ifIndex for the interface to which this circuit corresponds.')
usdIsisCircLocalID = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircLocalID.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircLocalID.setDescription('An identification that can be used in protocol packets to identify a circuit. Implementations may devise ways to assure that this value is suitable for the circuit it is used on. LAN packets only have space for 8 bits. Values of usdIsisCircLocalID do not need to be unique. They are only required to differ on LANs where the Intermediate System is the Designated Intermediate System.')
usdIsisCircOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 4), OperState().clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircOperState.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircOperState.setDescription('The operational state of the circuit. This object follows the operationalState behaviour.')
usdIsisCircRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 5), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircRowStatus.setDescription('The existence state of this circuit. This object follows the RowStatus behaviour.')
usdIsisCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("ptToPt", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircType.setReference('ISIS.aoi type (33)')
if mibBuilder.loadTexts: usdIsisCircType.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircType.setDescription('The type of the circuit. This object follows the replaceOnlyWhileDisabled behaviour. The type specified must be compatible with the type of the interface defined by the value of usdIsisCircIfIndex.')
usdIsisCircL1DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 7), UsdDefaultMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL1DefaultMetric.setReference('ISIS.aoi l1DefaultMetric (35)')
if mibBuilder.loadTexts: usdIsisCircL1DefaultMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1DefaultMetric.setDescription('The default metric value of this circuit for Level 1 traffic.')
usdIsisCircL1DelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 8), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL1DelayMetric.setReference('ISIS.aoi l1DelayMetric (36)')
if mibBuilder.loadTexts: usdIsisCircL1DelayMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1DelayMetric.setDescription('The delay metric value of this circuit for Level 1 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircL1ExpenseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 9), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL1ExpenseMetric.setReference('ISIS.aoi l1ExpenseMetric (37)')
if mibBuilder.loadTexts: usdIsisCircL1ExpenseMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1ExpenseMetric.setDescription('The expense metric value of this circuit for Level 1 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircL1ErrorMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 10), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL1ErrorMetric.setReference('ISIS.aoi l1ErrorMetric (38)')
if mibBuilder.loadTexts: usdIsisCircL1ErrorMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1ErrorMetric.setDescription('The error metric value of this circuit for Level 1 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircExtDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircExtDomain.setReference('ISIS.aoi externalDomain (46)')
if mibBuilder.loadTexts: usdIsisCircExtDomain.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircExtDomain.setDescription('If true, suppress normal transmission of and interpretation of Intra-domain ISIS PDUs on this circuit.')
usdIsisCircAdjChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircAdjChanges.setReference('ISIS.aoi changesInAdjacencyState (40)')
if mibBuilder.loadTexts: usdIsisCircAdjChanges.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircAdjChanges.setDescription('The number of times an adjacency state change has occurred on this circuit.')
usdIsisCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircInitFails.setReference('ISIS.aoi initializationFailures (41)')
if mibBuilder.loadTexts: usdIsisCircInitFails.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircInitFails.setDescription('The number of times initialization of this circuit has failed.')
usdIsisCircRejAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircRejAdjs.setReference('ISIS.aoi rejectedAdjacencies (42)')
if mibBuilder.loadTexts: usdIsisCircRejAdjs.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircRejAdjs.setDescription('The number of times an adjacency has been rejected on this circuit.')
usdIsisCircOutCtrlPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircOutCtrlPDUs.setReference('ISIS.aoi iSISControlPDUsSent (43)')
if mibBuilder.loadTexts: usdIsisCircOutCtrlPDUs.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircOutCtrlPDUs.setDescription('The number of IS-IS control PDUs sent on this circuit.')
usdIsisCircInCtrlPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircInCtrlPDUs.setReference('ISIS.aoi controlPDUsReceived (44)')
if mibBuilder.loadTexts: usdIsisCircInCtrlPDUs.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircInCtrlPDUs.setDescription('The number of IS-IS control PDUs received on this circuit.')
usdIsisCircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircIDFieldLenMismatches.setReference('ISIS.aoi iDFieldLengthMismatches (25)')
if mibBuilder.loadTexts: usdIsisCircIDFieldLenMismatches.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircIDFieldLenMismatches.setDescription('The number of times an IS-IS control PDU with an ID field length different to that for this system has been received.')
usdIsisCircL2DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 18), UsdDefaultMetric().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL2DefaultMetric.setReference('ISIS.aoi l2DefaultMetric (68)')
if mibBuilder.loadTexts: usdIsisCircL2DefaultMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2DefaultMetric.setDescription('The default metric value of this circuit for level 2 traffic.')
usdIsisCircL2DelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 19), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL2DelayMetric.setReference('ISIS.aoi l2DelayMetric (69)')
if mibBuilder.loadTexts: usdIsisCircL2DelayMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2DelayMetric.setDescription('The delay metric value of this circuit for level 2 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircL2ExpenseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 20), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL2ExpenseMetric.setReference('ISIS.aoi l2ExpenseMetric (70)')
if mibBuilder.loadTexts: usdIsisCircL2ExpenseMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2ExpenseMetric.setDescription('The expense metric value of this circuit for level 2 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircL2ErrorMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 21), OtherMetric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL2ErrorMetric.setReference('ISIS.aoi l2ErrorMetric (71)')
if mibBuilder.loadTexts: usdIsisCircL2ErrorMetric.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2ErrorMetric.setDescription('The error metric value of this circuit for level 2 traffic. The value of zero is reserved to indicate that this metric is not supported.')
usdIsisCircManL2Only = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircManL2Only.setReference('ISIS.aoi manualL2OnlyMode (72)')
if mibBuilder.loadTexts: usdIsisCircManL2Only.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircManL2Only.setDescription('When true, indicates that this circuit is to be used only for level 2. This object follows the replaceOnlyWhileDisabled behaviour.')
usdIsisCircL1ISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 23), ISPriority().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL1ISPriority.setReference('ISIS.aoi l1IntermediateSystemPriority (47)')
if mibBuilder.loadTexts: usdIsisCircL1ISPriority.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1ISPriority.setDescription('The priority for becoming LAN Level 1 Deignated Intermediate System on a broadcast circuit.')
usdIsisCircL1CircID = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 24), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL1CircID.setReference('ISIS.aoi l1CircuitID (48)')
if mibBuilder.loadTexts: usdIsisCircL1CircID.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1CircID.setDescription('The LAN ID allocated by the LAN Level 1 Designated Intermediate System. Where this system is not aware of the value (because it is not participating in the Level 1 Designated Intermediate System election), this object has the value which would be proposed for this circuit (i.e. the concatenation of the local system ID and the one octet local Circuit ID for this circuit.')
usdIsisCircL1DesIS = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 25), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL1DesIS.setReference('ISIS.aoi l1DesignatedIntermediateSystem (49)')
if mibBuilder.loadTexts: usdIsisCircL1DesIS.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1DesIS.setDescription('The ID of the LAN Level 1 Designated Intermediate System on this circuit. If, for any reason this system is not partaking in the relevant Designated Intermediate System election process, then the value returned is the zero length OCTET STRING.')
usdIsisCircLANL1DesISChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircLANL1DesISChanges.setReference('ISIS.aoi lanL1DesignatedIntermediateSystemChanges (50)')
if mibBuilder.loadTexts: usdIsisCircLANL1DesISChanges.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircLANL1DesISChanges.setDescription('The number of times the LAN Level 1 Designated Intermediate System has changed.')
usdIsisCircL2ISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 27), ISPriority().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL2ISPriority.setReference('ISIS.aoi l2IntermediateSystemPriority (73)')
if mibBuilder.loadTexts: usdIsisCircL2ISPriority.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2ISPriority.setDescription('The priority for becoming LAN level 2 Designated Intermediate System.')
usdIsisCircL2CircID = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 28), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL2CircID.setReference('ISIS.aoi l2CircuitID (74)')
if mibBuilder.loadTexts: usdIsisCircL2CircID.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2CircID.setDescription('The LAN ID allocated by the LAN Level 2 Designated Intermediate System. Where this system is not aware of this value (because it is not participating in the Level 2 Designated Intermediate System election), this object has the value which would be proposed for this circuit (i.e. the concatenation of the local system ID and the one octet local Circuit ID for this circuit.')
usdIsisCircL2DesIS = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 29), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircL2DesIS.setReference('ISIS.aoi l2DesignatedIntermediateSystem (75)')
if mibBuilder.loadTexts: usdIsisCircL2DesIS.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2DesIS.setDescription('The ID of the LAN Level 2 Designated Intermediate System on this circuit. If, for any reason, this system is not partaking in the relevant Designated Intermediate System election process, then the value returned is the zero length OCTET STRING.')
usdIsisCircLANL2DesISChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircLANL2DesISChanges.setReference('ISIS.aoi lanL2DesignatedIntermediateSystemChanges (76)')
if mibBuilder.loadTexts: usdIsisCircLANL2DesISChanges.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircLANL2DesISChanges.setDescription('The number of times the LAN Level 2 Designated Intermediate System has changed.')
usdIsisCircMCAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("group", 1), ("functional", 2))).clone('group')).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircMCAddr.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircMCAddr.setDescription('Specifies which type of multicast address will be used for sending HELLO PDUs on this circuit.')
usdIsisCircPtToPtCircID = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 32), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircPtToPtCircID.setReference('ISIS.aoi ptPtCircuitID (51)')
if mibBuilder.loadTexts: usdIsisCircPtToPtCircID.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircPtToPtCircID.setDescription('The ID of the circuit allocated during initialization. If no value has been negotiated (either because the adjacency is to an End System, or because initialization has not yet successfully completed), this object has the value which would be proposed for this circuit (i.e. the concatenation of the local system ID and the one octet local Circuit ID for this circuit.')
usdIsisCircL1HelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL1HelloTimer.setReference('ISIS.aoi iSISHelloTimer (45)')
if mibBuilder.loadTexts: usdIsisCircL1HelloTimer.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1HelloTimer.setDescription('Maximum period, in seconds, between Level 1 IIH PDUs on multiaccess networks. It is also used as the period between Hellos on point to point circuits. This object follows the resettingTimer behaviour.')
usdIsisCircL2HelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL2HelloTimer.setReference('ISIS.aoi iSISHelloTimer (45)')
if mibBuilder.loadTexts: usdIsisCircL2HelloTimer.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2HelloTimer.setDescription('Maximum period, in seconds, between Level 1 IIH PDUs on multiaccess networks. This object follows the resettingTimer behaviour.')
usdIsisCircL1HelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL1HelloMultiplier.setReference('ISIS.aoi iSISHelloTimer (45)')
if mibBuilder.loadTexts: usdIsisCircL1HelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1HelloMultiplier.setDescription('This value is multiplied by the corresponding HelloTimer and the result in seconds (rounded up) is used as the holding time in transmitted hellos, to be used by receivers of hello packets from this IS.')
usdIsisCircL2HelloMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1000)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL2HelloMultiplier.setReference('ISIS.aoi iSISHelloTimer (45)')
if mibBuilder.loadTexts: usdIsisCircL2HelloMultiplier.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2HelloMultiplier.setDescription('This value is multiplied by the corresponding HelloTimer and the result in seconds (rounded up) is used as the holding time in transmitted hellos, to be used by receivers of hello packets from this IS')
usdIsisCircMinLSPTransInt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(33)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircMinLSPTransInt.setReference('ISIS.aoi minimumBroadcastLSPTransmissionInterval (7)')
if mibBuilder.loadTexts: usdIsisCircMinLSPTransInt.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircMinLSPTransInt.setDescription('Minimum interval, in milliseconds, between transmission of LSPs on a circuit. This object follows the resettingTimer behaviour. This timer shall be capable of a resolution not coarser than 10 milliseconds.')
usdIsisCircMinLSPReTransInt = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircMinLSPReTransInt.setReference('ISIS.aoi minimumLSPTransmissionInterval (5)')
if mibBuilder.loadTexts: usdIsisCircMinLSPReTransInt.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircMinLSPReTransInt.setDescription('Minimum interval, in seconds, between re-transmission of an Level 1 or 2 LSP. This object follows the resettingTimer behaviour.')
usdIsisCircL1CSNPInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL1CSNPInterval.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL1CSNPInterval.setDescription('Interval of time, in seconds, between transmission of Level 1 CSNPs on multiaccess networks if this router is the designated router. On point-to-point networks the default is to not transmit CSNPs.')
usdIsisCircL2CSNPInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircL2CSNPInterval.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircL2CSNPInterval.setDescription('Interval of time, in seconds, between transmission of Level 2 CSNPs on multiaccess networks if this router is the designated router. On point-to-point networks the default is to not transmit CSNPs.')
usdIsisCircLSPThrottle = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(33)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircLSPThrottle.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircLSPThrottle.setDescription('Minimal interval of time, in milliseconds, between retransmissions of LSPs on a point to point interface.')
usdIsisCircMeshGroupEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("blocked", 2), ("set", 3))).clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircMeshGroupEnabled.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircMeshGroupEnabled.setDescription('Is this port a member of a mesh group, or blocked? Circuits in the same mesh group act as a virtual multiaccess network. LSPs seen on one circuit in a mesh group will not be flooded to another circuit in the same mesh group.')
usdIsisCircMeshGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircMeshGroup.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircMeshGroup.setDescription('Circuits in the same mesh group act as a virtual multiaccess network. LSPs seen on one circuit in a mesh group will not be flooded to another circuit in the same mesh group. If usdIsisCircMeshGroupEnabled is false, this value is ignored.')
usdIsisCircLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("level1IS", 0), ("level1l2IS", 1), ("level2Only", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisCircLevel.setReference('ISIS.aoi iSType(2)')
if mibBuilder.loadTexts: usdIsisCircLevel.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircLevel.setDescription('The type of this circuit. This object follows the replaceOnlyWhileDisabled behavior.')
usdIsisCircState = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("isisCircuitDown", 1), ("isisCircuitUp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisCircState.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircState.setDescription('The operational state of the circuit.')
usdIsisSysHostNameTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5), )
if mibBuilder.loadTexts: usdIsisSysHostNameTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameTable.setDescription('This table contains the manually configured set of host name to system ID aliases supported by each instance of the Integrated ISIS protocol.')
usdIsisSysHostNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameSysId"))
if mibBuilder.loadTexts: usdIsisSysHostNameEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameEntry.setDescription('Each entry contains one name to system ID alias supported by an instance of the Integrated ISIS protocol.')
usdIsisSysHostNameSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysHostNameSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysHostNameSysId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 2), SystemID())
if mibBuilder.loadTexts: usdIsisSysHostNameSysId.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameSysId.setDescription('The ID for the system which this name will be assigned.')
usdIsisSysHostNameAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 3), OSINSAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysHostNameAreaAddr.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameAreaAddr.setDescription('A configured area address for the system which this name will be assigned. This object follows the index behaviour. Note: an index for the entry {1, {49.0001} active} in this table would be the ordered pair (1, (0x03 0x49 0x00 0x01)), as the length of an Octet string is part of the OID.')
usdIsisSysHostNameName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysHostNameName.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameName.setDescription('A string to use when displaying system data with this system ID.')
usdIsisSysHostNameType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hostNameTypeStatic", 1), ("hostNameTypeDynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usdIsisSysHostNameType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameType.setDescription('The type of host name entry.')
usdIsisSysHostNameRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 5, 1, 6), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysHostNameRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysHostNameRowStatus.setDescription('The status of this host name entry. This object follows the RowStatus behaviour.')
usdIsisSysAreaAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6), )
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationTable.setDescription('This table contains the manually configured set of area authentication keys supported by each instance of the Integrated ISIS protocol.')
usdIsisSysAreaAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationKeyId"))
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationEntry.setDescription('Each entry contains one area authentication key supported by an instance of the Integrated ISIS protocol.')
usdIsisSysAreaAuthenticationSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysAreaAuthenticationKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationKeyId.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationKeyId.setDescription('The unique identifier of the instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysAreaAuthenticationPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationPwd.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationPwd.setDescription('The value to be used as the Authentication Key in Level 1 Link State Packets whenever the value of usdIsisSysAreaAuthenticationKeyType has a value of plaintext or hmacMd5. A modification of usdIsisSysAreaAuthenticationKeyType does not modify the usdIsisSysAreaAuthenticationPwd value. Reading this object always results in an OCTET STRING of length zero; authentication may not be bypassed by reading the MIB object.')
usdIsisSysAreaAuthenticationKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("plaintext", 1), ("hmacMd5", 2))).clone('hmacMd5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationKeyType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationKeyType.setDescription('What authentication scheme, if any, is used to protect Level 1 Link State packets and sequence number packets')
usdIsisSysAreaAuthenticationStartAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 5), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStartAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStartAcceptTime.setDescription('The date and time when this authentication key will start to be used to validate level 1 LSPs and SNPs received. The Default value the start accept time will be the current time when the key was created')
usdIsisSysAreaAuthenticationStartGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 6), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStartGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStartGenerateTime.setDescription('The date and time when this authentication key will start to be used to authenticate level 1 LSPs and SNPs transmitted. The Default value the start accept time will be the current time when the key was created + 2 minutes')
usdIsisSysAreaAuthenticationStopAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 7), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStopAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStopAcceptTime.setDescription('The date and time when this authentication key will stop being accepted as a valid level 1 LSP and SNP key received. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysAreaAuthenticationStopGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 8), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStopGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationStopGenerateTime.setDescription('The date and time when this authentication key will stop being used to authenticate level 1 LSPs and SNPs transmitted. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysAreaAuthenticationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 6, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysAreaAuthenticationRowStatus.setDescription('The existence state of this authentication key. This object follows the RowStatus behaviour.')
usdIsisSysDomainAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7), )
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationTable.setDescription('This table contains the manually configured set of domain authentication keys supported by each instance of the Integrated ISIS protocol.')
usdIsisSysDomainAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationKeyId"))
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationEntry.setDescription('Each entry contains one domain authentication key supported by an instance of the Integrated ISIS protocol.')
usdIsisSysDomainAuthenticationSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysDomainAuthenticationKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationKeyId.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationKeyId.setDescription('The unique identifier of the instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysDomainAuthenticationPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationPwd.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationPwd.setDescription('The value to be used as the Authentication Key in Level 2 Link State Packets whenever the value of usdIsisSysDomainAuthenticationKeyType has a value of plaintext or hmacMd5. A modification of usdIsisSysDomainAuthenticationKeyType does not modify the usdIsisSysDomainAuthenticationPwd value. Reading this object always results in an OCTET STRING of length zero; authentication may not be bypassed by reading the MIB object.')
usdIsisSysDomainAuthenticationKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("plaintext", 1), ("hmacMd5", 2))).clone('hmacMd5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationKeyType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationKeyType.setDescription('What authentication scheme, if any, is used to protect Level 2 Link State packets and Sequence Number packets')
usdIsisSysDomainAuthenticationStartAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 5), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStartAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStartAcceptTime.setDescription('The date and time when this authentication key will start to be used to validate level 2 LSPs and SNPs received. The Default value the start accept time will be the current time when the key was created')
usdIsisSysDomainAuthenticationStartGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 6), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStartGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStartGenerateTime.setDescription('The date and time when this authentication key will start to be used to authenticate level 2 LSPs and SNPs transmitted. The Default value the start accept time will be the current time when the key was created + 2 minutes')
usdIsisSysDomainAuthenticationStopAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 7), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStopAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStopAcceptTime.setDescription('The date and time when this authentication key will stop being accepted as a valid level 2 LSP and SNP key received. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysDomainAuthenticationStopGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 8), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStopGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationStopGenerateTime.setDescription('The date and time when this authentication key will stop being used to authenticate level 2 LSPs and SNPs transmitted. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysDomainAuthenticationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 1, 7, 1, 9), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysDomainAuthenticationRowStatus.setDescription('The existence state of this authentication key. This object follows the RowStatus behaviour.')
usdIsisSysL1CircAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2), )
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationTable.setDescription('This table contains the manually configured set of Level 1 Circuit authentication keys supported by each instance of the Integrated ISIS protocol.')
usdIsisSysL1CircAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationIfIndex"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationKeyId"))
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationEntry.setDescription('Each entry contains one Level 1 circuit authentication key supported by an instance of the Integrated ISIS protocol.')
usdIsisSysL1CircAuthenticationSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysL1CircAuthenticationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationIfIndex.setDescription('The value of ifIndex for the interface to which this circuit corresponds.')
usdIsisSysL1CircAuthenticationKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationKeyId.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationKeyId.setDescription('The unique identifier of the instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysL1CircAuthenticationPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationPwd.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationPwd.setDescription('The value to be used as the Authentication Key in Level 1 Hello Packets whenever the value of usdIsisSysL1CircAuthenticationKeyType has a value of hmacMd5. A modification of usdIsisSysL1CircAuthenticationKeyType does not modify the usdIsisSysL1CircAuthenticationPwd value. Reading this object always results in an OCTET STRING of length zero; authentication may not be bypassed by reading the MIB object.')
usdIsisSysL1CircAuthenticationKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("plaintext", 1), ("hmacMd5", 2))).clone('hmacMd5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationKeyType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationKeyType.setDescription('What authentication scheme, if any, is used to protect Level 1 hello packets.')
usdIsisSysL1CircAuthenticationStartAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 6), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStartAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStartAcceptTime.setDescription('The date and time when this authentication key will start to be used to validate level 1 IIH packets received. The Default value the start accept time will be the current time when the key was created.')
usdIsisSysL1CircAuthenticationStartGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 7), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStartGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStartGenerateTime.setDescription('The date and time when this authentication key will start to be used to authenticate level 1 IIH packets transmitted. The Default value the start accept time will be the current time when the key was created + 2 minutes.')
usdIsisSysL1CircAuthenticationStopAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 8), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStopAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStopAcceptTime.setDescription('The date and time when this authentication key will stop being accepted as a valid level 1 IIH packets key received. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysL1CircAuthenticationStopGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 9), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStopGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationStopGenerateTime.setDescription('The date and time when this authentication key will stop being used to authenticate level 1 IIH packets transmitted. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysL1CircAuthenticationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 2, 1, 10), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL1CircAuthenticationRowStatus.setDescription('The existence state of this authentication key. This object follows the RowStatus behaviour.')
usdIsisSysL2CircAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3), )
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationTable.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationTable.setDescription('This table contains the manually configured set of Level 2 Circuit authentication keys supported by each instance of the Integrated ISIS protocol.')
usdIsisSysL2CircAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1), ).setIndexNames((0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationSysInstance"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationIfIndex"), (0, "Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationKeyId"))
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationEntry.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationEntry.setDescription('Each entry contains one Level 2 circuit authentication key supported by an instance of the Integrated ISIS protocol.')
usdIsisSysL2CircAuthenticationSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationSysInstance.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationSysInstance.setDescription('The unique identifier of the Integrated IS-IS instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysL2CircAuthenticationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationIfIndex.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationIfIndex.setDescription('The value of ifIndex for the interface to which this circuit corresponds.')
usdIsisSysL2CircAuthenticationKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationKeyId.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationKeyId.setDescription('The unique identifier of the instance to which this row corresponds. This object follows the index behaviour.')
usdIsisSysL2CircAuthenticationPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationPwd.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationPwd.setDescription('The value to be used as the Authentication Key in Level 2 Hello Packets whenever the value of usdIsisSysL2CircAuthenticationKeyType has a value of hmacMd5. A modification of usdIsisSysL2CircAuthenticationKeyType does not modify the usdIsisSysL2CircAuthenticationPwd value. Reading this object always results in an OCTET STRING of length zero; authentication may not be bypassed by reading the MIB object.')
usdIsisSysL2CircAuthenticationKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("plaintext", 1), ("hmacMd5", 2))).clone('hmacMd5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationKeyType.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationKeyType.setDescription('What authentication scheme, if any, is used to protect Level 2 hello packets.')
usdIsisSysL2CircAuthenticationStartAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 6), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStartAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStartAcceptTime.setDescription('The date and time when this authentication key will start to be used to validate level 2 IIH packets received. The Default value the start accept time will be the current time when the key was created.')
usdIsisSysL2CircAuthenticationStartGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 7), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStartGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStartGenerateTime.setDescription('The date and time when this authentication key will start to be used to authenticate level 2 IIH packets transmitted. The Default value the start accept time will be the current time when the key was created + 2 minutes.')
usdIsisSysL2CircAuthenticationStopAcceptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 8), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStopAcceptTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStopAcceptTime.setDescription('The date and time when this authentication key will stop being accepted as a valid level 2 IIH packets key received. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysL2CircAuthenticationStopGenerateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 9), AuthTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStopGenerateTime.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationStopGenerateTime.setDescription('The date and time when this authentication key will stop being used to authenticate level 2 IIH packets transmitted. A value of zero indicates the key will never stop being used to authenticate packets.')
usdIsisSysL2CircAuthenticationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 1, 2, 3, 1, 10), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationRowStatus.setStatus('current')
if mibBuilder.loadTexts: usdIsisSysL2CircAuthenticationRowStatus.setDescription('The existence state of this authentication key. This object follows the RowStatus behaviour.')
usdIsisCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 1))
usdIsisMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 2))
usdIsisCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 1, 1)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisSystemMgmtGroup"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircuitMgmtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisCompliance = usdIsisCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: usdIsisCompliance.setDescription('Obsolete compliance statement for systems supporting ISIS functionality. This statement became obsolete when the usdIsisCircState object was added.')
usdIsisCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 1, 2)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisSystemMgmtGroup"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircuitMgmtGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisCompliance2 = usdIsisCompliance2.setStatus('obsolete')
if mibBuilder.loadTexts: usdIsisCompliance2.setDescription('Obsolete compliance statement for systems supporting ISIS functionality. This statement became obsolete when MPSL support was added.')
usdIsisCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 1, 3)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisSystemMgmtGroup2"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircuitMgmtGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisCompliance3 = usdIsisCompliance3.setStatus('current')
if mibBuilder.loadTexts: usdIsisCompliance3.setDescription('The compliance statement for systems supporting ISIS functionality.')
usdIsisSystemMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 2, 1)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisSysVersion"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysID"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxPathSplits"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxLSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOrigL1LSPBuffSize"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaAddresses"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMinL1LSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMinL2LSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysPollESHelloRate"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysWaitTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1State"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysCorrLSPs"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPL1DbaseOloads"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysManAddrDropFromAreas"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAttmptToExMaxSeqNums"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSeqNumSkips"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOwnLSPPurges"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIDFieldLenMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaAddrMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOrigL2LSPBuffSize"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2State"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPL2DbaseOloads"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAuthFails"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPIgnoreErrors"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaCheck"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSetOverloadBit"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSetOverloadBitStartupDuration"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxLspLifetime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1SpfInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2SpfInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIshHoldTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIshConfigTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDistributeDomainWide"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDistance"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1MetricStyle"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2MetricStyle"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIsoRouteTag"), ("Unisphere-Data-ISIS-MIB", "usdIsisManAreaAddrRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysProtSuppRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrDefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrDelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummLevel"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameAreaAddr"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameName"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisSystemMgmtGroup = usdIsisSystemMgmtGroup.setStatus('obsolete')
if mibBuilder.loadTexts: usdIsisSystemMgmtGroup.setDescription('Obsolete system level objects for ISIS management functionality. This group became obsolete when the MPLS management objects were added.')
usdIsisCircuitMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 2, 2)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisCircLocalID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircType"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircExtDomain"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircAdjChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircInitFails"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircRejAdjs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircOutCtrlPDUs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircInCtrlPDUs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircIDFieldLenMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircManL2Only"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ISPriority"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1CircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DesIS"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLANL1DesISChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ISPriority"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2CircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DesIS"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLANL2DesISChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMCAddr"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircPtToPtCircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1HelloTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2HelloTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1HelloMultiplier"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2HelloMultiplier"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMinLSPTransInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMinLSPReTransInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1CSNPInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2CSNPInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLSPThrottle"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMeshGroupEnabled"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMeshGroup"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLevel"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisCircuitMgmtGroup = usdIsisCircuitMgmtGroup.setStatus('obsolete')
if mibBuilder.loadTexts: usdIsisCircuitMgmtGroup.setDescription('Obsolete circuit management objects. This group became obsolete when the usdIsisCircState object was added.')
usdIsisCircuitMgmtGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 2, 3)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisCircLocalID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircType"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircExtDomain"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircAdjChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircInitFails"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircRejAdjs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircOutCtrlPDUs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircInCtrlPDUs"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircIDFieldLenMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircManL2Only"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1ISPriority"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1CircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1DesIS"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLANL1DesISChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2ISPriority"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2CircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2DesIS"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLANL2DesISChanges"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMCAddr"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircPtToPtCircID"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1HelloTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2HelloTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1HelloMultiplier"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2HelloMultiplier"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMinLSPTransInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMinLSPReTransInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL1CSNPInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircL2CSNPInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLSPThrottle"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMeshGroupEnabled"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircMeshGroup"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircLevel"), ("Unisphere-Data-ISIS-MIB", "usdIsisCircState"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1CircAuthenticationRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2CircAuthenticationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisCircuitMgmtGroup2 = usdIsisCircuitMgmtGroup2.setStatus('current')
if mibBuilder.loadTexts: usdIsisCircuitMgmtGroup2.setDescription('The circuit management objects.')
usdIsisSystemMgmtGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 38, 3, 2, 4)).setObjects(("Unisphere-Data-ISIS-MIB", "usdIsisSysVersion"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysID"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxPathSplits"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxLSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOrigL1LSPBuffSize"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaAddresses"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMinL1LSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMinL2LSPGenInt"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysPollESHelloRate"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysWaitTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1State"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysCorrLSPs"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPL1DbaseOloads"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysManAddrDropFromAreas"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAttmptToExMaxSeqNums"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSeqNumSkips"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOwnLSPPurges"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIDFieldLenMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaAddrMismatches"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysOrigL2LSPBuffSize"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2State"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPL2DbaseOloads"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAuthFails"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysLSPIgnoreErrors"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxAreaCheck"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSetOverloadBit"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysSetOverloadBitStartupDuration"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMaxLspLifetime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1SpfInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2SpfInterval"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIshHoldTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIshConfigTimer"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDistributeDomainWide"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDistance"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL1MetricStyle"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysL2MetricStyle"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysIsoRouteTag"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMplsTeLevel"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysMplsTeRtrIdIfIndex"), ("Unisphere-Data-ISIS-MIB", "usdIsisManAreaAddrRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysProtSuppRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrOperState"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrDefaultMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrDelayMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrExpenseMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummAddrErrorMetric"), ("Unisphere-Data-ISIS-MIB", "usdIsisSummLevel"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameAreaAddr"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameName"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysHostNameRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysAreaAuthenticationRowStatus"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationPwd"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationKeyType"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStartAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStartGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStopAcceptTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationStopGenerateTime"), ("Unisphere-Data-ISIS-MIB", "usdIsisSysDomainAuthenticationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usdIsisSystemMgmtGroup2 = usdIsisSystemMgmtGroup2.setStatus('current')
if mibBuilder.loadTexts: usdIsisSystemMgmtGroup2.setDescription('The system level objects for ISIS management functionality.')
mibBuilder.exportSymbols("Unisphere-Data-ISIS-MIB", usdIsisSysAreaAuthenticationStartAcceptTime=usdIsisSysAreaAuthenticationStartAcceptTime, usdIsisCircAdjChanges=usdIsisCircAdjChanges, usdIsisSummAddress=usdIsisSummAddress, usdIsisSysID=usdIsisSysID, usdIsisCircL2DesIS=usdIsisCircL2DesIS, usdIsisSysHostNameSysInstance=usdIsisSysHostNameSysInstance, usdIsisSysIDFieldLenMismatches=usdIsisSysIDFieldLenMismatches, usdIsisManAreaAddrSysInstance=usdIsisManAreaAddrSysInstance, usdIsisCircInCtrlPDUs=usdIsisCircInCtrlPDUs, usdIsisCircL2HelloMultiplier=usdIsisCircL2HelloMultiplier, usdIsisCircL2DelayMetric=usdIsisCircL2DelayMetric, usdIsisSysLSPL2DbaseOloads=usdIsisSysLSPL2DbaseOloads, usdIsisSysAreaAuthenticationStopAcceptTime=usdIsisSysAreaAuthenticationStopAcceptTime, usdIsisSysL2CircAuthenticationStopAcceptTime=usdIsisSysL2CircAuthenticationStopAcceptTime, usdIsisManAreaAddrEntry=usdIsisManAreaAddrEntry, usdIsisSysMplsTeLevel=usdIsisSysMplsTeLevel, usdIsisSysProtSuppRowStatus=usdIsisSysProtSuppRowStatus, usdIsisSysDomainAuthenticationKeyType=usdIsisSysDomainAuthenticationKeyType, usdIsisSummAddrOperState=usdIsisSummAddrOperState, usdIsisCircL1ExpenseMetric=usdIsisCircL1ExpenseMetric, usdIsisSysWaitTime=usdIsisSysWaitTime, usdIsisSysProtSuppTable=usdIsisSysProtSuppTable, usdIsisSysMplsTeRtrIdIfIndex=usdIsisSysMplsTeRtrIdIfIndex, usdIsisSystemMgmtGroup2=usdIsisSystemMgmtGroup2, usdIsisSysProtSuppProtocol=usdIsisSysProtSuppProtocol, usdIsisCircL1DelayMetric=usdIsisCircL1DelayMetric, usdIsisSysDomainAuthenticationTable=usdIsisSysDomainAuthenticationTable, usdIsisMIB=usdIsisMIB, usdIsisSysAreaAuthenticationEntry=usdIsisSysAreaAuthenticationEntry, usdIsisCircL1CircID=usdIsisCircL1CircID, usdIsisCircState=usdIsisCircState, usdIsisSysHostNameTable=usdIsisSysHostNameTable, usdIsisSummAddrErrorMetric=usdIsisSummAddrErrorMetric, usdIsisSysAreaAuthenticationPwd=usdIsisSysAreaAuthenticationPwd, usdIsisSysL1CircAuthenticationKeyId=usdIsisSysL1CircAuthenticationKeyId, usdIsisCircOutCtrlPDUs=usdIsisCircOutCtrlPDUs, PYSNMP_MODULE_ID=usdIsisMIB, usdIsisCircL2ISPriority=usdIsisCircL2ISPriority, CircuitID=CircuitID, usdIsisSysHostNameSysId=usdIsisSysHostNameSysId, usdIsisSysHostNameAreaAddr=usdIsisSysHostNameAreaAddr, usdIsisManAreaAddrTable=usdIsisManAreaAddrTable, usdIsisSysAuthFails=usdIsisSysAuthFails, usdIsisSysL2CircAuthenticationStartAcceptTime=usdIsisSysL2CircAuthenticationStartAcceptTime, usdIsisCircL1HelloMultiplier=usdIsisCircL1HelloMultiplier, usdIsisCircL2ExpenseMetric=usdIsisCircL2ExpenseMetric, usdIsisCircuitMgmtGroup=usdIsisCircuitMgmtGroup, usdIsisSysAreaAuthenticationRowStatus=usdIsisSysAreaAuthenticationRowStatus, usdIsisSysL1State=usdIsisSysL1State, usdIsisSysIshConfigTimer=usdIsisSysIshConfigTimer, usdIsisSystemGroup=usdIsisSystemGroup, usdIsisSysL2CircAuthenticationKeyType=usdIsisSysL2CircAuthenticationKeyType, usdIsisSysProtSuppSysInstance=usdIsisSysProtSuppSysInstance, usdIsisSysDomainAuthenticationStartAcceptTime=usdIsisSysDomainAuthenticationStartAcceptTime, usdIsisCircL2DefaultMetric=usdIsisCircL2DefaultMetric, usdIsisSysHostNameType=usdIsisSysHostNameType, usdIsisCircMinLSPReTransInt=usdIsisCircMinLSPReTransInt, usdIsisSysL1CircAuthenticationTable=usdIsisSysL1CircAuthenticationTable, usdIsisSysMaxAreaAddresses=usdIsisSysMaxAreaAddresses, usdIsisCircExtDomain=usdIsisCircExtDomain, usdIsisCircL2ErrorMetric=usdIsisCircL2ErrorMetric, usdIsisSummAddrExpenseMetric=usdIsisSummAddrExpenseMetric, usdIsisCircManL2Only=usdIsisCircManL2Only, usdIsisSysAreaAuthenticationSysInstance=usdIsisSysAreaAuthenticationSysInstance, usdIsisSysManAddrDropFromAreas=usdIsisSysManAddrDropFromAreas, usdIsisCircPtToPtCircID=usdIsisCircPtToPtCircID, usdIsisSysL2CircAuthenticationIfIndex=usdIsisSysL2CircAuthenticationIfIndex, usdIsisCompliance2=usdIsisCompliance2, usdIsisCircMCAddr=usdIsisCircMCAddr, usdIsisCircRejAdjs=usdIsisCircRejAdjs, usdIsisCircOperState=usdIsisCircOperState, usdIsisSysL1SpfInterval=usdIsisSysL1SpfInterval, usdIsisCircL1HelloTimer=usdIsisCircL1HelloTimer, usdIsisSysL2CircAuthenticationPwd=usdIsisSysL2CircAuthenticationPwd, usdIsisSysL2CircAuthenticationStartGenerateTime=usdIsisSysL2CircAuthenticationStartGenerateTime, usdIsisSysDomainAuthenticationStopAcceptTime=usdIsisSysDomainAuthenticationStopAcceptTime, usdIsisSysEntry=usdIsisSysEntry, usdIsisSysMaxLSPGenInt=usdIsisSysMaxLSPGenInt, usdIsisCompliance3=usdIsisCompliance3, usdIsisCircL2CSNPInterval=usdIsisCircL2CSNPInterval, usdIsisSummAddrRowStatus=usdIsisSummAddrRowStatus, usdIsisSysL1CircAuthenticationStopGenerateTime=usdIsisSysL1CircAuthenticationStopGenerateTime, usdIsisSysL2CircAuthenticationRowStatus=usdIsisSysL2CircAuthenticationRowStatus, OperState=OperState, usdIsisSysL1CircAuthenticationStopAcceptTime=usdIsisSysL1CircAuthenticationStopAcceptTime, usdIsisSysL2CircAuthenticationTable=usdIsisSysL2CircAuthenticationTable, usdIsisSysL2CircAuthenticationSysInstance=usdIsisSysL2CircAuthenticationSysInstance, usdIsisSysDomainAuthenticationEntry=usdIsisSysDomainAuthenticationEntry, usdIsisCircuitMgmtGroup2=usdIsisCircuitMgmtGroup2, usdIsisCircSysInstance=usdIsisCircSysInstance, usdIsisCircLANL2DesISChanges=usdIsisCircLANL2DesISChanges, usdIsisSysInstance=usdIsisSysInstance, usdIsisSysAttmptToExMaxSeqNums=usdIsisSysAttmptToExMaxSeqNums, usdIsisCircLSPThrottle=usdIsisCircLSPThrottle, usdIsisCircLevel=usdIsisCircLevel, AuthTime=AuthTime, usdIsisSummAddrEntry=usdIsisSummAddrEntry, usdIsisSysL2State=usdIsisSysL2State, usdIsisSysDomainAuthenticationSysInstance=usdIsisSysDomainAuthenticationSysInstance, usdIsisSysIshHoldTime=usdIsisSysIshHoldTime, usdIsisCompliance=usdIsisCompliance, usdIsisSysMaxPathSplits=usdIsisSysMaxPathSplits, usdIsisSysMaxAreaCheck=usdIsisSysMaxAreaCheck, usdIsisCircL1ISPriority=usdIsisCircL1ISPriority, usdIsisManAreaAddrRowStatus=usdIsisManAreaAddrRowStatus, usdIsisSysHostNameRowStatus=usdIsisSysHostNameRowStatus, usdIsisSysL1CircAuthenticationKeyType=usdIsisSysL1CircAuthenticationKeyType, usdIsisSummAddrDelayMetric=usdIsisSummAddrDelayMetric, SystemID=SystemID, usdIsisSysHostNameEntry=usdIsisSysHostNameEntry, usdIsisSysL1CircAuthenticationEntry=usdIsisSysL1CircAuthenticationEntry, usdIsisSysSetOverloadBitStartupDuration=usdIsisSysSetOverloadBitStartupDuration, usdIsisSysL1CircAuthenticationRowStatus=usdIsisSysL1CircAuthenticationRowStatus, usdIsisCircEntry=usdIsisCircEntry, usdIsisCircL1DefaultMetric=usdIsisCircL1DefaultMetric, usdIsisSysL1MetricStyle=usdIsisSysL1MetricStyle, usdIsisSysL2CircAuthenticationStopGenerateTime=usdIsisSysL2CircAuthenticationStopGenerateTime, usdIsisSummAddrDefaultMetric=usdIsisSummAddrDefaultMetric, usdIsisSysMaxLspLifetime=usdIsisSysMaxLspLifetime, usdIsisCircInitFails=usdIsisCircInitFails, usdIsisManAreaAddr=usdIsisManAreaAddr, usdIsisSysOrigL1LSPBuffSize=usdIsisSysOrigL1LSPBuffSize, usdIsisCircMeshGroupEnabled=usdIsisCircMeshGroupEnabled, usdIsisSysTable=usdIsisSysTable, usdIsisSysDomainAuthenticationPwd=usdIsisSysDomainAuthenticationPwd, usdIsisSysL1CircAuthenticationSysInstance=usdIsisSysL1CircAuthenticationSysInstance, usdIsisSummAddrSysInstance=usdIsisSummAddrSysInstance, usdIsisSysL2SpfInterval=usdIsisSysL2SpfInterval, usdIsisSysCorrLSPs=usdIsisSysCorrLSPs, usdIsisSysDistributeDomainWide=usdIsisSysDistributeDomainWide, ISPriority=ISPriority, usdIsisSysDomainAuthenticationStartGenerateTime=usdIsisSysDomainAuthenticationStartGenerateTime, usdIsisTrapGroup=usdIsisTrapGroup, usdIsisSysL1CircAuthenticationStartGenerateTime=usdIsisSysL1CircAuthenticationStartGenerateTime, OSINSAddress=OSINSAddress, usdIsisSysMinL1LSPGenInt=usdIsisSysMinL1LSPGenInt, UsdDefaultMetric=UsdDefaultMetric, usdIsisSysDomainAuthenticationKeyId=usdIsisSysDomainAuthenticationKeyId, usdIsisCircMinLSPTransInt=usdIsisCircMinLSPTransInt, usdIsisSysAreaAuthenticationKeyType=usdIsisSysAreaAuthenticationKeyType, usdIsisCircL2CircID=usdIsisCircL2CircID, usdIsisConformance=usdIsisConformance, usdIsisSysL1CircAuthenticationPwd=usdIsisSysL1CircAuthenticationPwd, SupportedProtocol=SupportedProtocol, usdIsisSysPollESHelloRate=usdIsisSysPollESHelloRate, usdIsisSysLSPIgnoreErrors=usdIsisSysLSPIgnoreErrors, usdIsisSysAreaAuthenticationStartGenerateTime=usdIsisSysAreaAuthenticationStartGenerateTime, LevelState=LevelState, usdIsisSysLSPL1DbaseOloads=usdIsisSysLSPL1DbaseOloads, usdIsisSysSeqNumSkips=usdIsisSysSeqNumSkips, usdIsisSysL2CircAuthenticationKeyId=usdIsisSysL2CircAuthenticationKeyId, usdIsisSysOperState=usdIsisSysOperState, usdIsisCircTable=usdIsisCircTable, usdIsisCircLocalID=usdIsisCircLocalID, usdIsisSysType=usdIsisSysType, usdIsisCircType=usdIsisCircType, usdIsisSysDomainAuthenticationStopGenerateTime=usdIsisSysDomainAuthenticationStopGenerateTime, usdIsisMIBGroups=usdIsisMIBGroups, usdIsisCircL1ErrorMetric=usdIsisCircL1ErrorMetric, usdIsisCircIDFieldLenMismatches=usdIsisCircIDFieldLenMismatches, usdIsisSysL1CircAuthenticationStartAcceptTime=usdIsisSysL1CircAuthenticationStartAcceptTime, usdIsisCircuitGroup=usdIsisCircuitGroup, usdIsisSysOrigL2LSPBuffSize=usdIsisSysOrigL2LSPBuffSize, usdIsisSysMinL2LSPGenInt=usdIsisSysMinL2LSPGenInt, LSPBuffSize=LSPBuffSize, usdIsisSummAddrMask=usdIsisSummAddrMask, usdIsisCircL1DesIS=usdIsisCircL1DesIS, usdIsisCircL2HelloTimer=usdIsisCircL2HelloTimer, usdIsisSysMaxAreaAddrMismatches=usdIsisSysMaxAreaAddrMismatches, usdIsisSysDistance=usdIsisSysDistance, usdIsisSysProtSuppEntry=usdIsisSysProtSuppEntry, usdIsisSysDomainAuthenticationRowStatus=usdIsisSysDomainAuthenticationRowStatus, usdIsisSysOwnLSPPurges=usdIsisSysOwnLSPPurges, usdIsisSysAreaAuthenticationStopGenerateTime=usdIsisSysAreaAuthenticationStopGenerateTime, usdIsisCircRowStatus=usdIsisCircRowStatus, usdIsisSummLevel=usdIsisSummLevel, usdIsisObjects=usdIsisObjects, usdIsisSysVersion=usdIsisSysVersion, usdIsisSysAreaAuthenticationKeyId=usdIsisSysAreaAuthenticationKeyId, usdIsisSysL1CircAuthenticationIfIndex=usdIsisSysL1CircAuthenticationIfIndex, usdIsisSysL2MetricStyle=usdIsisSysL2MetricStyle, usdIsisCircL1CSNPInterval=usdIsisCircL1CSNPInterval, usdIsisCircMeshGroup=usdIsisCircMeshGroup, usdIsisSysL2CircAuthenticationEntry=usdIsisSysL2CircAuthenticationEntry, usdIsisCompliances=usdIsisCompliances, usdIsisSysAreaAuthenticationTable=usdIsisSysAreaAuthenticationTable, usdIsisCircLANL1DesISChanges=usdIsisCircLANL1DesISChanges, usdIsisCircIfIndex=usdIsisCircIfIndex, OtherMetric=OtherMetric, usdIsisSysIsoRouteTag=usdIsisSysIsoRouteTag, usdIsisSysSetOverloadBit=usdIsisSysSetOverloadBit, usdIsisSummAddrTable=usdIsisSummAddrTable, usdIsisSystemMgmtGroup=usdIsisSystemMgmtGroup, usdIsisSysHostNameName=usdIsisSysHostNameName)
