#
# PySNMP MIB module STACK-TOP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STACK-TOP
# Produced by pysmi-0.3.4 at Wed May  1 15:10:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, ModuleIdentity, ObjectIdentity, Counter32, NotificationType, iso, Bits, IpAddress, enterprises, Gauge32, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "ObjectIdentity", "Counter32", "NotificationType", "iso", "Bits", "IpAddress", "enterprises", "Gauge32", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
stacktop = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 301))
stacktop.setRevisions(('2004-05-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: stacktop.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: stacktop.setLastUpdated('200705280000Z')
if mibBuilder.loadTexts: stacktop.setOrganization('ZTE Corp.')
if mibBuilder.loadTexts: stacktop.setContactInfo('')
if mibBuilder.loadTexts: stacktop.setDescription('')
class VendorIdType(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

sysMasterVoteTimes = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMasterVoteTimes.setStatus('current')
if mibBuilder.loadTexts: sysMasterVoteTimes.setDescription("How many times stack system's master device be voted.")
sysMasterLastVoteTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysMasterLastVoteTime.setStatus('current')
if mibBuilder.loadTexts: sysMasterLastVoteTime.setDescription("The ending time when stack system's master device be voted.")
sysLastDetecTopEndTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysLastDetecTopEndTime.setStatus('current')
if mibBuilder.loadTexts: sysLastDetecTopEndTime.setDescription('The ending time when the system detected top at the last time.')
sysTopChagTimes = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTopChagTimes.setStatus('current')
if mibBuilder.loadTexts: sysTopChagTimes.setDescription('How many times the system top changed.')
sysTopDetecMsgCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 301, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTopDetecMsgCount.setStatus('current')
if mibBuilder.loadTexts: sysTopDetecMsgCount.setDescription('System topo detected topo protocol message count.')
sysTopInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6), )
if mibBuilder.loadTexts: sysTopInfoTable.setStatus('current')
if mibBuilder.loadTexts: sysTopInfoTable.setDescription('A list of the topo information.')
sysTopInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1), ).setIndexNames((0, "STACK-TOP", "sysDeviceMacAddr"), (0, "STACK-TOP", "sysDeviceStkPortIndex"))
if mibBuilder.loadTexts: sysTopInfoEntry.setStatus('current')
if mibBuilder.loadTexts: sysTopInfoEntry.setDescription('An entry to the topo info table.')
sysDeviceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceMacAddr.setStatus('current')
if mibBuilder.loadTexts: sysDeviceMacAddr.setDescription('System Device mac address.')
sysDeviceStkPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortIndex.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkPortIndex.setDescription('System device stack interface port index.')
sysDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceType.setStatus('current')
if mibBuilder.loadTexts: sysDeviceType.setDescription('System device type.')
sysDeviceStkPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNum.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkPortNum.setDescription('System device stack interface port number.')
sysDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceID.setStatus('current')
if mibBuilder.loadTexts: sysDeviceID.setDescription('System device ID.')
sysDeviceMasterPri = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceMasterPri.setStatus('current')
if mibBuilder.loadTexts: sysDeviceMasterPri.setDescription("System device's priority in voting master device.")
sysDeviceStkIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfStatus.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkIfStatus.setDescription('System device stack interface status 1: up 2: down.')
sysDeviceStkIfPanel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfPanel.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkIfPanel.setDescription('System device stack interface panel num.')
sysDeviceStkIfPortID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkIfPortID.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkIfPortID.setDescription('System device stack interface port num.')
sysDeviceStkPortNeibMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNeibMacAddr.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkPortNeibMacAddr.setDescription('System device stack interface neighbor device mac address.')
sysDeviceStkPortNeibPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysDeviceStkPortNeibPortIndex.setStatus('current')
if mibBuilder.loadTexts: sysDeviceStkPortNeibPortIndex.setDescription('System device stack interface neighbor device port index.')
sysStkPortMsgStacTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7), )
if mibBuilder.loadTexts: sysStkPortMsgStacTable.setStatus('current')
if mibBuilder.loadTexts: sysStkPortMsgStacTable.setDescription('A list of the stack interface receive and send message statistic information.')
sysStkPortMsgStacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1), ).setIndexNames((0, "STACK-TOP", "sysStkDeviceID"), (0, "STACK-TOP", "sysStkDeviceStkIfIndex"))
if mibBuilder.loadTexts: sysStkPortMsgStacEntry.setStatus('current')
if mibBuilder.loadTexts: sysStkPortMsgStacEntry.setDescription('An entry to the stack interface receive and send message statistic information table.')
sysStkDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkDeviceID.setStatus('current')
if mibBuilder.loadTexts: sysStkDeviceID.setDescription('System device ID.')
sysStkDeviceStkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkDeviceStkIfIndex.setStatus('current')
if mibBuilder.loadTexts: sysStkDeviceStkIfIndex.setDescription('System device stack interface index.')
sysStkPortRecMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkPortRecMsgCount.setStatus('current')
if mibBuilder.loadTexts: sysStkPortRecMsgCount.setDescription('System stack interface received message count.')
sysStkPortSendMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 301, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysStkPortSendMsgCount.setStatus('current')
if mibBuilder.loadTexts: sysStkPortSendMsgCount.setDescription('System stack interface send message count.')
mibBuilder.exportSymbols("STACK-TOP", sysTopChagTimes=sysTopChagTimes, zxr10=zxr10, PYSNMP_MODULE_ID=stacktop, stacktop=stacktop, VendorIdType=VendorIdType, sysLastDetecTopEndTime=sysLastDetecTopEndTime, sysStkPortMsgStacTable=sysStkPortMsgStacTable, sysStkPortSendMsgCount=sysStkPortSendMsgCount, sysTopDetecMsgCount=sysTopDetecMsgCount, sysDeviceMacAddr=sysDeviceMacAddr, sysDeviceType=sysDeviceType, sysDeviceID=sysDeviceID, sysMasterLastVoteTime=sysMasterLastVoteTime, zte=zte, sysDeviceStkIfStatus=sysDeviceStkIfStatus, sysTopInfoTable=sysTopInfoTable, sysStkPortRecMsgCount=sysStkPortRecMsgCount, sysStkPortMsgStacEntry=sysStkPortMsgStacEntry, sysStkDeviceStkIfIndex=sysStkDeviceStkIfIndex, sysDeviceMasterPri=sysDeviceMasterPri, sysMasterVoteTimes=sysMasterVoteTimes, sysDeviceStkIfPanel=sysDeviceStkIfPanel, sysTopInfoEntry=sysTopInfoEntry, sysDeviceStkPortNum=sysDeviceStkPortNum, sysDeviceStkPortNeibPortIndex=sysDeviceStkPortNeibPortIndex, sysDeviceStkIfPortID=sysDeviceStkIfPortID, sysDeviceStkPortNeibMacAddr=sysDeviceStkPortNeibMacAddr, sysStkDeviceID=sysStkDeviceID, sysDeviceStkPortIndex=sysDeviceStkPortIndex)
