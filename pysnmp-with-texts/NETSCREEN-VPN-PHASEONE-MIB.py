#
# PySNMP MIB module NETSCREEN-VPN-PHASEONE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-PHASEONE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:20:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
netscreenVpn, netscreenVpnMibModule = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpn", "netscreenVpnMibModule")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, ModuleIdentity, Counter32, MibIdentifier, ObjectIdentity, Counter64, Integer32, TimeTicks, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "ModuleIdentity", "Counter32", "MibIdentifier", "ObjectIdentity", "Counter64", "Integer32", "TimeTicks", "Bits", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenVpnPhaseoneMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 5))
netscreenVpnPhaseoneMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2001-05-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netscreenVpnPhaseoneMibModule.setRevisionsDescriptions(('Modified copyright and contact information', 'Converted to SMIv2 by Longview Software', 'Correct spelling mistake', 'no comment', 'Creation Date',))
if mibBuilder.loadTexts: netscreenVpnPhaseoneMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenVpnPhaseoneMibModule.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: netscreenVpnPhaseoneMibModule.setContactInfo('Customer Support 1194 North Mathilda Avenue Sunnyvale, California 94089-1206 USA Tel: 1-800-638-8296 E-mail: customerservice@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: netscreenVpnPhaseoneMibModule.setDescription('This module defines NetScreen private MIBs for VPN Phase 1')
nsVpnPhaseOneCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 5))
nsVpnPhOneTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1), )
if mibBuilder.loadTexts: nsVpnPhOneTable.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneTable.setDescription('To establish an IKE IPSec tunnel, two phases of negotiation are required. This table specifies the configuration attributes for Phase One negotiation. In Phase 1, the participants establish a secure channel in which to negotiate the IPSec SAs.')
nsVpnPhOneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-PHASEONE-MIB", "nsVpnPhOneIndex"))
if mibBuilder.loadTexts: nsVpnPhOneEntry.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneEntry.setDescription('Each entry in the nsVpnPhOneTable holds a set of configuration parameters associated with an instance of Phase 1 setting.')
nsVpnPhOneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneIndex.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneIndex.setDescription('A unique value for phase one table. Its value ranges between 1 and 65535 and may not be contiguous. The index has no other meaning but a pure index')
nsVpnPhOneName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneName.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneName.setDescription('Phase one proposal name.')
nsVpnPhOneAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("preshare", 0), ("rsa-sig", 1), ("dsa-sig", 2), ("rsa-enc", 3), ("rsa-rev", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneAuthMethod.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneAuthMethod.setDescription('Phase one proposal authentication method.')
nsVpnPhOneDhGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneDhGroup.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneDhGroup.setDescription('Phase one proposal Diffie-Hellman exchange group id.')
nsVpnPhOneEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("null", 0), ("des", 1), ("des3", 2), ("aes", 3), ("aes-192", 4), ("aes-256", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneEncryp.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneEncryp.setDescription('Phase one proposal encryption exchange id.')
nsVpnPhOneHash = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneHash.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneHash.setDescription('Phase one proposal hash algorithm.')
nsVpnPhOneLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneLifetime.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneLifetime.setDescription('Lifetime of this phase one setting.')
nsVpnPhOneLifetimeMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("second", 0), ("minute", 1), ("hours", 2), ("days", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneLifetimeMeasure.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneLifetimeMeasure.setDescription('life time measurement.')
nsVpnPhOneVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhOneVsys.setStatus('current')
if mibBuilder.loadTexts: nsVpnPhOneVsys.setDescription('vsys this phase one proposal configuration belongs to.')
mibBuilder.exportSymbols("NETSCREEN-VPN-PHASEONE-MIB", nsVpnPhOneEncryp=nsVpnPhOneEncryp, nsVpnPhOneName=nsVpnPhOneName, nsVpnPhOneTable=nsVpnPhOneTable, PYSNMP_MODULE_ID=netscreenVpnPhaseoneMibModule, nsVpnPhOneAuthMethod=nsVpnPhOneAuthMethod, nsVpnPhOneLifetimeMeasure=nsVpnPhOneLifetimeMeasure, nsVpnPhOneLifetime=nsVpnPhOneLifetime, nsVpnPhOneDhGroup=nsVpnPhOneDhGroup, nsVpnPhOneIndex=nsVpnPhOneIndex, nsVpnPhOneEntry=nsVpnPhOneEntry, netscreenVpnPhaseoneMibModule=netscreenVpnPhaseoneMibModule, nsVpnPhOneVsys=nsVpnPhOneVsys, nsVpnPhOneHash=nsVpnPhOneHash, nsVpnPhaseOneCfg=nsVpnPhaseOneCfg)
