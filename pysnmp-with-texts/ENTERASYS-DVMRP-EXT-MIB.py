#
# PySNMP MIB module ENTERASYS-DVMRP-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ENTERASYS-DVMRP-EXT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:03:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
dvmrpInterfaceEntry, = mibBuilder.importSymbols("DVMRP-MIB", "dvmrpInterfaceEntry")
etsysModules, = mibBuilder.importSymbols("ENTERASYS-MIB-NAMES", "etsysModules")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, Gauge32, Bits, IpAddress, NotificationType, Counter32, TimeTicks, ObjectIdentity, ModuleIdentity, MibIdentifier, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Bits", "IpAddress", "NotificationType", "Counter32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention")
etsysDvmrpExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69))
etsysDvmrpExtMIB.setRevisions(('2009-02-27 19:29',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: etsysDvmrpExtMIB.setRevisionsDescriptions(('The initial version of this MIB module',))
if mibBuilder.loadTexts: etsysDvmrpExtMIB.setLastUpdated('200902271929Z')
if mibBuilder.loadTexts: etsysDvmrpExtMIB.setOrganization('Enterasys Networks, Inc')
if mibBuilder.loadTexts: etsysDvmrpExtMIB.setContactInfo('Postal: Enterasys Networks 50 Minuteman Rd. Andover, MA 01810-1008 USA Phone: +1 978 684 1000 E-mail: support@enterasys.com WWW: http://www.enterasys.com')
if mibBuilder.loadTexts: etsysDvmrpExtMIB.setDescription('This MIB module defines a portion of the SNMP MIB under the Enterasys Networks enterprise OID pertaining to the DVMRP configuration. This MIB was designed to be used in conjunction with the DVMRP-MIB [THALER1] for configuring the DVMRP parameters.')
etsysDvmrpExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1))
etsysDvmrpExtGlobals = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 1))
etsysDvmrpExtTables = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2))
etsysDvmrpExtIfTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1), )
if mibBuilder.loadTexts: etsysDvmrpExtIfTable.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfTable.setDescription('This table provides addtional configuration objects that provide control for Enterasys DVMRP systems. This table augments the dvmrpInterfaceTable.')
etsysDvmrpExtIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1), )
dvmrpInterfaceEntry.registerAugmentions(("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfEntry"))
etsysDvmrpExtIfEntry.setIndexNames(*dvmrpInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: etsysDvmrpExtIfEntry.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfEntry.setDescription('An entry (conceptual row) in the etsysDvmrpExtIfTable.')
etsysDvmrpExtIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("adminStatusUp", 1), ("adminStatusDown", 2))).clone('adminStatusUp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfAdminStatus.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfAdminStatus.setDescription("The administrative state of DVMRP on this interface. When the status of this object is set to 'adminStatusDown', no DVMRP messages will be sent or received on this interface. The TIB state pertaining to this interface is cleared, resulting in the removal of the associated routes from the MFIB. When the status of this object is set to 'adminStatusUp', normal DVMRP operation will proceed, and multicast state is stored in the TIB when it is learned.")
etsysDvmrpExtIfIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 8, 10, 11))).clone(namedValues=NamedValues(("operStatusUp", 1), ("operStatusDown", 2), ("operStatusGoingUp", 3), ("operStatusGoingDown", 4), ("operStatusActFailed", 5), ("operStatusFailed", 8), ("operStatusFailedPerm", 10), ("operStatusFailing", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysDvmrpExtIfIfOperStatus.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfIfOperStatus.setDescription('The current operational state of DVMRP on this interface.')
etsysDvmrpExtIfStubInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfStubInterface.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfStubInterface.setDescription("Indicates whether this interface is a stub interface in relation to DVMRP. If this object is set to 'true', no DVMRP packets are sent out this interface, and any received DVMRP packets are ignored. Setting this object to 'true' is a security measure for interfaces towards untrusted hosts. To communicate with other DVMRP routers using this interface, this object must remain set to 'false'. Changing the value of this object while the interface is operationally active MAY cause the interface to be deactivated and then reactivated.")
etsysDvmrpExtIfP2PNoHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfP2PNoHellos.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfP2PNoHellos.setDescription("Indicates whether this interface is a point-to-point interface. If the value of this object is 'true', neighbors are not required to send DVMRP-Hello messages. This is provided for backward-compatibility with some older implementations that do not send DVMRP-Hellos on point-to-point links. Changing the value of this object while the interface is operationally active MAY cause the interface to be deactivated and then reactivated.")
etsysDvmrpExtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfHelloInterval.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfHelloInterval.setDescription('The transmit frequency of DVMRP Hello messages on this interface. A value of 0 represents an infinite interval and periodic DVMRP Hello messages SHOULD not be sent on this interface.')
etsysDvmrpExtIfHelloHoldtime = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(35)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfHelloHoldtime.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfHelloHoldtime.setDescription('The amount of time a DVMRP neighbor should consider this router operationally up.')
etsysDvmrpExtIfReportInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 18000)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: etsysDvmrpExtIfReportInterval.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfReportInterval.setDescription('The transmit frequency of DVMRP Report messages on this interface. A value of 0 represents an infinite interval and periodic DVMRP Report messages SHOULD not be sent on this interface.')
etsysDvmrpExtTibMgrTable = MibTable((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2), )
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrTable.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrTable.setDescription('This table provides objects that manipulate the operation of the DVMRP Tree Information Base (TIB) Manager in order control the acceptable limits for the TIB.')
etsysDvmrpExtTibMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1), ).setIndexNames((0, "ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrIndex"))
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrEntry.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrEntry.setDescription('An entry (conceptual row) in the etsysDvmrpExtTibMgrTable.')
etsysDvmrpExtTibMgrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrIndex.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrIndex.setDescription('The DVMRP TIB Manager index.')
etsysDvmrpExtTibMgrKeepalivePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrKeepalivePeriod.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrKeepalivePeriod.setDescription('The amount of time to keep (S,G) state alive in the absence of DVMRP (S,G) Join messages or (S,G) data packets. Note: Configuring different values for this object for different routers in the DVRMP domain may lead to incorrect protocol operation.')
etsysDvmrpExtTibMgrMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrMetric.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrMetric.setDescription('A global distance metric that is used to calculate distance vectors. An interface SHOULD inherit this value if its default metric (dvmrpInterfaceMetric) has not been modified.')
etsysDvmrpExtTibMgrSGStateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateLimit.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateLimit.setDescription('The maximum number of {source, group} pairs for which the DVMRP TIB Manager is allowed to store non-interface specific (S,G) state. A value of zero means that there is no limit.')
etsysDvmrpExtTibMgrSGStateWarnThold = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateWarnThold.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateWarnThold.setDescription('The DVMRP TIB Manager logs an exception if the number of {source, group} pairs for which it is storing non-interface specific (S,G) state exceeds this value. A value of zero means that there is no warning threshold.')
etsysDvmrpExtTibMgrSGStateStored = MibTableColumn((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 1, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateStored.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrSGStateStored.setDescription('The number of {source, group} pairs for which the DVMRP TIB Manager is storing non-interface specific (S,G) state.')
etsysDvmrpExtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2))
etsysDvmrpExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2, 1))
etsysDvmrpExtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2, 2))
etsysDvmrpExtIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2, 1, 1)).setObjects(("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfAdminStatus"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfIfOperStatus"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfStubInterface"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfP2PNoHellos"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfHelloInterval"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfHelloHoldtime"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfReportInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysDvmrpExtIfGroup = etsysDvmrpExtIfGroup.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtIfGroup.setDescription('This group defines interface controls for Enterasys DVMRP systems.')
etsysDvmrpExtTibMgrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2, 1, 2)).setObjects(("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrIndex"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrKeepalivePeriod"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrMetric"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrSGStateLimit"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrSGStateWarnThold"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrSGStateStored"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysDvmrpExtTibMgrGroup = etsysDvmrpExtTibMgrGroup.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtTibMgrGroup.setDescription('This group defines the Tree Information Base (TIB) manager objects for Enterasys DVMRP systems.')
etsysDvmrpExtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5624, 1, 2, 69, 2, 2, 1)).setObjects(("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtIfGroup"), ("ENTERASYS-DVMRP-EXT-MIB", "etsysDvmrpExtTibMgrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etsysDvmrpExtCompliance = etsysDvmrpExtCompliance.setStatus('current')
if mibBuilder.loadTexts: etsysDvmrpExtCompliance.setDescription('The compliance statement for devices that support etsysDvmrpExt.')
mibBuilder.exportSymbols("ENTERASYS-DVMRP-EXT-MIB", PYSNMP_MODULE_ID=etsysDvmrpExtMIB, etsysDvmrpExtTibMgrSGStateStored=etsysDvmrpExtTibMgrSGStateStored, etsysDvmrpExtIfP2PNoHellos=etsysDvmrpExtIfP2PNoHellos, etsysDvmrpExtIfEntry=etsysDvmrpExtIfEntry, etsysDvmrpExtIfGroup=etsysDvmrpExtIfGroup, etsysDvmrpExtIfReportInterval=etsysDvmrpExtIfReportInterval, etsysDvmrpExtTibMgrKeepalivePeriod=etsysDvmrpExtTibMgrKeepalivePeriod, etsysDvmrpExtTibMgrEntry=etsysDvmrpExtTibMgrEntry, etsysDvmrpExtConformance=etsysDvmrpExtConformance, etsysDvmrpExtGlobals=etsysDvmrpExtGlobals, etsysDvmrpExtObjects=etsysDvmrpExtObjects, etsysDvmrpExtIfIfOperStatus=etsysDvmrpExtIfIfOperStatus, etsysDvmrpExtIfStubInterface=etsysDvmrpExtIfStubInterface, etsysDvmrpExtTibMgrGroup=etsysDvmrpExtTibMgrGroup, etsysDvmrpExtIfHelloHoldtime=etsysDvmrpExtIfHelloHoldtime, etsysDvmrpExtTibMgrSGStateLimit=etsysDvmrpExtTibMgrSGStateLimit, etsysDvmrpExtTibMgrSGStateWarnThold=etsysDvmrpExtTibMgrSGStateWarnThold, etsysDvmrpExtIfHelloInterval=etsysDvmrpExtIfHelloInterval, etsysDvmrpExtCompliances=etsysDvmrpExtCompliances, etsysDvmrpExtCompliance=etsysDvmrpExtCompliance, etsysDvmrpExtTables=etsysDvmrpExtTables, etsysDvmrpExtTibMgrMetric=etsysDvmrpExtTibMgrMetric, etsysDvmrpExtIfTable=etsysDvmrpExtIfTable, etsysDvmrpExtMIB=etsysDvmrpExtMIB, etsysDvmrpExtTibMgrTable=etsysDvmrpExtTibMgrTable, etsysDvmrpExtTibMgrIndex=etsysDvmrpExtTibMgrIndex, etsysDvmrpExtGroups=etsysDvmrpExtGroups, etsysDvmrpExtIfAdminStatus=etsysDvmrpExtIfAdminStatus)
