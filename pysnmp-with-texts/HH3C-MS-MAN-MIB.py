#
# PySNMP MIB module HH3C-MS-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MS-MAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:28:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
hh3cSurveillanceMIB, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cSurveillanceMIB")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Bits, ModuleIdentity, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, TimeTicks, IpAddress, ObjectIdentity, Gauge32, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "ModuleIdentity", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "TimeTicks", "IpAddress", "ObjectIdentity", "Gauge32", "Counter32", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cMSMan = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 9, 3))
if mibBuilder.loadTexts: hh3cMSMan.setLastUpdated('200708130000Z')
if mibBuilder.loadTexts: hh3cMSMan.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cMSMan.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cMSMan.setDescription('This MIB is defined to manage MS components according to specific capability.')
hh3cMSManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 3, 1))
hh3cMSStatisticalPeriod = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMSStatisticalPeriod.setStatus('current')
if mibBuilder.loadTexts: hh3cMSStatisticalPeriod.setDescription('The statistical period of this entity, which unit is second and default value is 300 seconds.')
hh3cMSManMIBTables = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2))
hh3cMSForwardTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1), )
if mibBuilder.loadTexts: hh3cMSForwardTable.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardTable.setDescription('MS Forward table, used to get the forwarding information of the entity. ')
hh3cMSForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1), ).setIndexNames((0, "HH3C-MS-MAN-MIB", "hh3cMSForwardIndex"))
if mibBuilder.loadTexts: hh3cMSForwardEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardEntry.setDescription('hh3cMSForward table entry.')
hh3cMSForwardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMSForwardIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
hh3cMSForwardMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSForwardMaxConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardMaxConnection.setDescription('The maxium number of forward connections the entity can support.')
hh3cMSForwardConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMSForwardConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardConnectionThreshold.setDescription('The threshold of forward connections.')
hh3cMSCurrentForwardConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSCurrentForwardConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSCurrentForwardConnection.setDescription('Number of forward connections the entity provided in this time.')
hh3cMSPeriodForwardConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSPeriodForwardConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSPeriodForwardConnection.setDescription('The maxium number of forward connections within the last statistical period.')
hh3cMSForwardTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSForwardTotalTime.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardTotalTime.setDescription('The total forward connection time the entity has serviced since its startup.')
hh3cMSForwardTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSForwardTotalConn.setStatus('current')
if mibBuilder.loadTexts: hh3cMSForwardTotalConn.setDescription('The total forward connection numbers the entity has serviced since its startup.')
hh3cMSVODTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2), )
if mibBuilder.loadTexts: hh3cMSVODTable.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODTable.setDescription('MS VOD(video on demand) table, used to get the VOD information of the entity.')
hh3cMSVODEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1), ).setIndexNames((0, "HH3C-MS-MAN-MIB", "hh3cMSVODIndex"))
if mibBuilder.loadTexts: hh3cMSVODEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODEntry.setDescription('hh3cMSVOD table entry.')
hh3cMSVODIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMSVODIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
hh3cMSVODMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSVODMaxConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODMaxConnection.setDescription('The maxium number of VOD connections the entity can support.')
hh3cMSVODConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMSVODConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODConnectionThreshold.setDescription('The threshold of VOD connections.')
hh3cMSCurrentVODConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSCurrentVODConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSCurrentVODConnection.setDescription('Number of VOD connections the entity provided in this time.')
hh3cMSPeriodVODMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSPeriodVODMaxConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSPeriodVODMaxConnection.setDescription('The maxium number of VOD connections within the last statistical period.')
hh3cMSVODTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSVODTotalTime.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODTotalTime.setDescription('The total VOD connection time the entity has serviced since its startup.')
hh3cMSVODTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSVODTotalConn.setStatus('current')
if mibBuilder.loadTexts: hh3cMSVODTotalConn.setDescription('The total VOD connection numbers the entity has serviced since its startup.')
hh3cMSRecordTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3), )
if mibBuilder.loadTexts: hh3cMSRecordTable.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordTable.setDescription('MS Record table, used to get the record information of the entity.')
hh3cMSRecordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1), ).setIndexNames((0, "HH3C-MS-MAN-MIB", "hh3cMSRecordIndex"))
if mibBuilder.loadTexts: hh3cMSRecordEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordEntry.setDescription('hh3cMSRecord table entry.')
hh3cMSRecordIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cMSRecordIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordIndex.setDescription('The value of this object is the entity index, which depends on the implementation of ENTITY-MIB. ')
hh3cMSRecordMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSRecordMaxConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordMaxConnection.setDescription('The maxium number of record connections the entity can support.')
hh3cMSRecordConnectionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMSRecordConnectionThreshold.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordConnectionThreshold.setDescription('The threshold of record connections .')
hh3cMSCurrentRecordConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSCurrentRecordConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSCurrentRecordConnection.setDescription('Number of record connections the entity provided in this time.')
hh3cMSPeriodRecordMaxConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSPeriodRecordMaxConnection.setStatus('current')
if mibBuilder.loadTexts: hh3cMSPeriodRecordMaxConnection.setDescription('The maxium number of record connections within the last statistical period.')
hh3cMSRecordTotalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSRecordTotalTime.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordTotalTime.setDescription('The total record connection time the entity has serviced since its startup.')
hh3cMSRecordTotalConn = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 9, 3, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMSRecordTotalConn.setStatus('current')
if mibBuilder.loadTexts: hh3cMSRecordTotalConn.setDescription('The total record connection numbers the entity has serviced since its startup.')
hh3cMSManMIBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3))
hh3cMSManTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0))
hh3cMSManVODConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 1)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSVODIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentVODConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSVODConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManVODConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManVODConnectionThresholdTrap.setDescription('Current VOD connection exceeds the threshold.')
hh3cMSManVODConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 2)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSVODIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentVODConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSVODConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManVODConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManVODConnectionRecoverTrap.setDescription('Current VOD connection recovers under the threshold.')
hh3cMSManForwardConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 3)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSForwardIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentForwardConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSForwardConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManForwardConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManForwardConnectionThresholdTrap.setDescription('Current forward connection exceeds the threshold.')
hh3cMSManForwardConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 4)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSForwardIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentForwardConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSForwardConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManForwardConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManForwardConnectionRecoverTrap.setDescription('Current forward connection recovers under the threshold.')
hh3cMSManRecordConnectionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 5)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSRecordIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentRecordConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSRecordConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManRecordConnectionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManRecordConnectionThresholdTrap.setDescription('Current record connection exceeds the threshold.')
hh3cMSManRecordConnectionRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 3, 3, 0, 6)).setObjects(("HH3C-MS-MAN-MIB", "hh3cMSRecordIndex"), ("HH3C-MS-MAN-MIB", "hh3cMSCurrentRecordConnection"), ("HH3C-MS-MAN-MIB", "hh3cMSRecordConnectionThreshold"))
if mibBuilder.loadTexts: hh3cMSManRecordConnectionRecoverTrap.setStatus('current')
if mibBuilder.loadTexts: hh3cMSManRecordConnectionRecoverTrap.setDescription('Current record connection recovers under the threshold.')
mibBuilder.exportSymbols("HH3C-MS-MAN-MIB", hh3cMSRecordConnectionThreshold=hh3cMSRecordConnectionThreshold, hh3cMSPeriodForwardConnection=hh3cMSPeriodForwardConnection, hh3cMSManMIBObjects=hh3cMSManMIBObjects, hh3cMSVODTotalConn=hh3cMSVODTotalConn, hh3cMSForwardConnectionThreshold=hh3cMSForwardConnectionThreshold, hh3cMSVODConnectionThreshold=hh3cMSVODConnectionThreshold, hh3cMSForwardEntry=hh3cMSForwardEntry, hh3cMSVODTotalTime=hh3cMSVODTotalTime, hh3cMSMan=hh3cMSMan, hh3cMSVODIndex=hh3cMSVODIndex, hh3cMSManForwardConnectionThresholdTrap=hh3cMSManForwardConnectionThresholdTrap, PYSNMP_MODULE_ID=hh3cMSMan, hh3cMSRecordTable=hh3cMSRecordTable, hh3cMSCurrentForwardConnection=hh3cMSCurrentForwardConnection, hh3cMSForwardTable=hh3cMSForwardTable, hh3cMSManMIBTrap=hh3cMSManMIBTrap, hh3cMSManForwardConnectionRecoverTrap=hh3cMSManForwardConnectionRecoverTrap, hh3cMSStatisticalPeriod=hh3cMSStatisticalPeriod, hh3cMSManRecordConnectionRecoverTrap=hh3cMSManRecordConnectionRecoverTrap, hh3cMSVODEntry=hh3cMSVODEntry, hh3cMSForwardTotalConn=hh3cMSForwardTotalConn, hh3cMSManMIBTables=hh3cMSManMIBTables, hh3cMSCurrentVODConnection=hh3cMSCurrentVODConnection, hh3cMSPeriodVODMaxConnection=hh3cMSPeriodVODMaxConnection, hh3cMSRecordIndex=hh3cMSRecordIndex, hh3cMSVODMaxConnection=hh3cMSVODMaxConnection, hh3cMSForwardMaxConnection=hh3cMSForwardMaxConnection, hh3cMSForwardTotalTime=hh3cMSForwardTotalTime, hh3cMSManVODConnectionThresholdTrap=hh3cMSManVODConnectionThresholdTrap, hh3cMSManVODConnectionRecoverTrap=hh3cMSManVODConnectionRecoverTrap, hh3cMSPeriodRecordMaxConnection=hh3cMSPeriodRecordMaxConnection, hh3cMSManTrapPrex=hh3cMSManTrapPrex, hh3cMSVODTable=hh3cMSVODTable, hh3cMSManRecordConnectionThresholdTrap=hh3cMSManRecordConnectionThresholdTrap, hh3cMSForwardIndex=hh3cMSForwardIndex, hh3cMSRecordTotalConn=hh3cMSRecordTotalConn, hh3cMSCurrentRecordConnection=hh3cMSCurrentRecordConnection, hh3cMSRecordMaxConnection=hh3cMSRecordMaxConnection, hh3cMSRecordTotalTime=hh3cMSRecordTotalTime, hh3cMSRecordEntry=hh3cMSRecordEntry)
