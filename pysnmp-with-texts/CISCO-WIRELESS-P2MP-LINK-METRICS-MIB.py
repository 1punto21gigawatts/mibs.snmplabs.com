#
# PySNMP MIB module CISCO-WIRELESS-P2MP-LINK-METRICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WIRELESS-P2MP-LINK-METRICS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:21:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CwrCwErrorFreeSecond, WirelessGauge64, CwrPercentageValue, CwrUpdateTime, CwrCwErroredSecond, CwrFixedPointScale, CwrFixedPointPrecision, CwrFixedPointValue, CwrCwConsecutiveSevErrSecond, CwrCwSeverelyErroredSecond, CwrCwDegradedSecond = mibBuilder.importSymbols("CISCO-WIRELESS-TC-MIB", "CwrCwErrorFreeSecond", "WirelessGauge64", "CwrPercentageValue", "CwrUpdateTime", "CwrCwErroredSecond", "CwrFixedPointScale", "CwrFixedPointPrecision", "CwrFixedPointValue", "CwrCwConsecutiveSevErrSecond", "CwrCwSeverelyErroredSecond", "CwrCwDegradedSecond")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, Integer32, Counter32, Bits, TimeTicks, MibIdentifier, ModuleIdentity, iso, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Counter32", "Bits", "TimeTicks", "MibIdentifier", "ModuleIdentity", "iso", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Gauge32")
TextualConvention, DisplayString, MacAddress, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress", "TimeInterval")
ciscoWirelessLinkMetricsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 181))
ciscoWirelessLinkMetricsMIB.setRevisions(('2006-01-04 10:03', '2000-02-14 19:10',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoWirelessLinkMetricsMIB.setRevisionsDescriptions(('Imported Unsigned32 from SNMPv2-SMI.', 'The initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoWirelessLinkMetricsMIB.setLastUpdated('200601041003Z')
if mibBuilder.loadTexts: ciscoWirelessLinkMetricsMIB.setOrganization('Cisco Systems Inc.')
if mibBuilder.loadTexts: ciscoWirelessLinkMetricsMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: firestorm-sw@cisco.com')
if mibBuilder.loadTexts: ciscoWirelessLinkMetricsMIB.setDescription("This is the MIB Module for the Cisco Wireless Radio Point to MultiPoint interface link metrics specification. Glossary The following terms are used in the MIB definitions below. Radio Interface: The interface that provides wireless communication features. Radio Link: The bi-directional wireless link between two communicating wireless radios. Radio PHY: Represents the transmission characteristics of the Radio link. Link Admin Up: This is the system time when the link is configured to be 'administratively up'. The user can configure the link to be up either by executing a 'no shut' command via the CLI or by setting the ifAdminStatus object in the IF-MIB to 'up(1)' via SNMP. Cisco Wireless MIB Organization The Cisco Wireless Point to Multipoint Radio Link Metrics MIB is divided into 2 main groups. Head End: These objects are supported on the Head End only. Subscriber Unit: These objects are supported on the Subscriber unit only.")
p2mpLinkMetricsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 1))
p2mpSuLinkMetricsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 2))
p2mpHeLinkMetricsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 3))
p2mpMetricsPrecisionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 1), )
if mibBuilder.loadTexts: p2mpMetricsPrecisionTable.setStatus('current')
if mibBuilder.loadTexts: p2mpMetricsPrecisionTable.setDescription('This table contains the precision and scale values to be used when interpreting fixed point values in this MIB. This information is encapsulated in a table to accomodate for multiple cards in the same system having different precision values. This table is indexed by the ifIndex for the physical card (propDocsWirelessMaclayer). The user can refer to the entAliasMappingTable in the ENTITY-MIB to determine the upstream/downstream channels associated with each card.')
p2mpMetricsPrecisionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: p2mpMetricsPrecisionEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpMetricsPrecisionEntry.setDescription('This represents one entry in the p2mpMetricsPrecisionTable. This table is indexed by the ifIndex of propDocsWirelessMaclayer.')
p2mpLinkMetricsScale = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 1, 1, 1), CwrFixedPointScale()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpLinkMetricsScale.setStatus('current')
if mibBuilder.loadTexts: p2mpLinkMetricsScale.setDescription('This variable indicates the exponent to apply to the fixed-point values.')
p2mpLinkMetricsPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 1, 1, 2), CwrFixedPointPrecision()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpLinkMetricsPrecision.setStatus('current')
if mibBuilder.loadTexts: p2mpLinkMetricsPrecision.setDescription('This variable indicates the number of decimal places used for precision when interpreting the fixed-point values.')
p2mpSuLinkMetricsThreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1), )
if mibBuilder.loadTexts: p2mpSuLinkMetricsThreshTable.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkMetricsThreshTable.setDescription('This table contains threshold values that are the trigger points for controlling the collection of the Link Metrics such as Codeword Errored Seconds and others.')
p2mpSuLinkMetricsThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: p2mpSuLinkMetricsThreshEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkMetricsThreshEntry.setDescription('This represents one entry in the table. There exists one such entry for every interface in the ifTable which has an ifType of propDocsWirelessDownstream. Each of these entries are indexed by the value of ifIndex as defined in RFC2233.')
p2mpSuLinkESThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLinkESThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkESThresh.setDescription('When the number of Codeword Errors detected in a single Operational second is greater than this value, that second is counted as an Errored Second.')
p2mpSuLinkDSThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 2), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLinkDSThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkDSThresh.setDescription('When the percentage of codeword errors detected to the total codewords received in one second is equal to or greater than this value, and less than p2mpLinkSESThresh, the second is counted as a Codeword Degraded Second.')
p2mpSuLinkSESThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 3), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLinkSESThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkSESThresh.setDescription('When the percentage of codeword errors detected to the total codewords received in one second equals or exceeds this value, that second is counted as a Severely Errored Second.')
p2mpSuLinkCSESThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLinkCSESThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLinkCSESThresh.setDescription('When the number of severely errored codewords detected consecutively in one second equals or exceeds this value, the second is counted as a Consecutively Severely Errored Second.')
p2mpSuLink1HrESAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLink1HrESAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLink1HrESAlarmThresh.setDescription('This object specifies the one hour Codeword Error Second threshold. When the number of Codeword Error Seconds in a 1 Operational Hour period exceeds this value, the p2mpSuErrSecAlarmTrap trap will be generated. Time measurement starts after the first operational second.')
p2mpSuLink1HrSESAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLink1HrSESAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLink1HrSESAlarmThresh.setDescription('This object specifies the one hour Codeword Severely Errored Seconds threshold. When the number of Codeword Severely Errored Seconds in a 1 Operational Hour period exceeds this value, the p2mpSuSevErrSecAlarmTrap trap will be generated. Time measurement starts after the first operational second.')
p2mpSuLink1HrCSESAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLink1HrCSESAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLink1HrCSESAlarmThresh.setDescription('This object specifies the one hour Codeword Consecutively Severely Errored Seconds threshold. When the number of Codeword Severely Errored Seconds in a 1 Operational Hour period exceeds this value, the p2mpSuConsecSevErrSecAlarmTrap trap will be generated. Time measurement starts after the first operational second.')
p2mpSuLink1HrDCSAlarmThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpSuLink1HrDCSAlarmThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLink1HrDCSAlarmThresh.setDescription('This object specifies the one hour Degraded Codeword Seconds threshold. When the number of Degraded Codeword Seconds in a 1 Operational Hour period exceeds this value, the p2mpSuDegradedSecAlarmTrap trap will be generated. Time measurement starts after the first operational second.')
p2mpSu1SecMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2), )
if mibBuilder.loadTexts: p2mpSu1SecMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecMetricsTable.setDescription('This table contains metrics collected over the duration of one second. This table will have a maximum of 60 entries providing cumulative status of the link, identified by ifIndex of propDocsWirelessDownstream, over the past one minute. This table is updated once every second. After 60 seconds, only the latest 60 entries will be stored in the table.')
p2mpSu1SecMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecIndex"))
if mibBuilder.loadTexts: p2mpSu1SecMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecMetricsEntry.setDescription('This represents one entry in the p2mpSu1SecMetricsTable indexed by the ifIndex of propDocsWirelessDownstream and p2mpSu1SecIndex. The first entry in the table (p2mpSu1SecIndex = 1) represents the chronologically oldest data available.')
p2mpSu1SecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: p2mpSu1SecIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpSu1SecUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1SecUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpSu1SecType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("errorFree", 1), ("errored", 2), ("degraded", 3), ("sevErrored", 4), ("syncLoss", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1SecType.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecType.setDescription('This object identifies the nature of the measured second.')
p2mpSu1SecTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1SecTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecTotalCodewords.setDescription('This object represents the total number of codewords received by this radio link from the last Link Admin Up time until the current operational second.')
p2mpSu1SecTotalErrCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 5), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1SecTotalErrCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecTotalErrCodewords.setDescription('This object represents the total number of errored codewords received by this radio link from the last Link Admin Up time until the current operational second.')
p2mpSu1SecValidDataPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1SecValidDataPkt.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1SecValidDataPkt.setDescription('This variable indicates the number of data packets received without any bit errors from the last Link Admin Up time until the current operational second.')
p2mpSu1MinMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3), )
if mibBuilder.loadTexts: p2mpSu1MinMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinMetricsTable.setDescription('This table contains metrics collected over the duration of one minute. This table will have a maximum of 60 entries providing cumulative statistics of the link, identified by ifIndex of propDocsWirelessDownstream, over the past one hour. This table is updated once every minute.')
p2mpSu1MinMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinIndex"))
if mibBuilder.loadTexts: p2mpSu1MinMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinMetricsEntry.setDescription('This represents one entry in the p2mpSu1MinMetricsTable indexed by ifIndex of propDocsWirelessDownstream and p2mpSu1MinIndex. The first entry in the table (p2mpSu1MinIndex = 1) represents the chronologically oldest data available.')
p2mpSu1MinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: p2mpSu1MinIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpSu1MinUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinUpdateTime.setDescription('This object represents time in seconds since system power up until the time this entry was last updated.')
p2mpSu1MinTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 3), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinTotalCodewords.setDescription('This object represents the cumulative sum of received codewords from the last Link Admin Up time until the current operational second.')
p2mpSu1MinTotalErrCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinTotalErrCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinTotalErrCodewords.setDescription('This object represents the cumulative sum of received errored codewords from the last Link Admin Up time until the current operational second.')
p2mpSu1MinValidDataPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinValidDataPkt.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinValidDataPkt.setDescription('This variable indicates the number of data packets received without any bit errors from the last Link Admin Up time until the current operational second.')
p2mpSu1MinErrorFreeSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 6), CwrCwErrorFreeSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinErrorFreeSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinErrorFreeSeconds.setDescription('This object represents the cumulative Codeword Error Free Seconds (EFS) detected from the last Link Admin Up time until the current operational second.')
p2mpSu1MinErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 7), CwrCwErroredSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinErroredSeconds.setDescription('This object represents the cumulative Codeword Errored Seconds (ES) detected from the last Link Admin Up time until the current operational second.')
p2mpSu1MinDegradedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 8), CwrCwDegradedSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinDegradedSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinDegradedSeconds.setDescription('This object represents the cumulative Codeword Degraded Seconds (DS) detected from the last Link Admin Up time until the current operational second.')
p2mpSu1MinSevErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 9), CwrCwSeverelyErroredSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinSevErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinSevErroredSeconds.setDescription('This object represents the cumulative Codeword Severely Errored Seconds (SES) detected from the last Link Admin Up time until the current operational second.')
p2mpSu1MinConsecSevErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 10), CwrCwConsecutiveSevErrSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinConsecSevErrSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinConsecSevErrSeconds.setDescription('This object represents the cumulative Codeword Consecutively Severely Errored Seconds (CSES) detected from the last Link Admin Up time until the current operational second.')
p2mpSu1MinSyncLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinSyncLossSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinSyncLossSeconds.setDescription('This object represents the cumulative number of seconds from the last Link Admin Up time to the current operational minute the link was out of synchronization.')
p2mpSu1MinTxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 12), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinTxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinTxPowerMax.setDescription('This variable represents the maximum transmit power of the subscriber unit measured during the current operational minute. This is not a cumulative value.')
p2mpSu1MinTxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 13), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinTxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinTxPowerMin.setDescription('This variable indicates the minimum transmit power of the subscriber unit measured during the current operational minute. This is not a cumulative value.')
p2mpSu1MinTxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 14), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinTxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinTxPowerAvg.setDescription('This variable indicates the average measured transmit power of the subscriber unit measured during the current operational minute. This is not a cumulative value.')
p2mpSu1MinMainAntRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 15), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerMax.setDescription('This variable indicates the maximum receive power measured at the main antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1MinMainAntRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 16), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerMin.setDescription('This variable indicates the minimum receive power measured at the main antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1MinMainAntRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 17), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinMainAntRxPowerAvg.setDescription('This variable indicates the average receive power measured at the main antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1MinDivAntRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 18), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerMax.setDescription('This variable indicates the maximum receive power measured at the diversity antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1MinDivAntRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 19), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerMin.setDescription('This variable indicates the minimum receive power measured at the diversity antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1MinDivAntRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 3, 1, 20), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1MinDivAntRxPowerAvg.setDescription('This variable indicates the average received power measured at the diversity antenna during the current operational minute. This is not a cumulative value.')
p2mpSu1HrMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4), )
if mibBuilder.loadTexts: p2mpSu1HrMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrMetricsTable.setDescription('This table contains metrics collected over the duration of one hour. This table will have a maximum of 24 entries providing cumulative status of the link, identified by ifIndex, over the past 24 hours. This table is updated once every hour.')
p2mpSu1HrMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrIndex"))
if mibBuilder.loadTexts: p2mpSu1HrMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrMetricsEntry.setDescription('This represents one entry in the p2mpSu1HrMetricsTable indexed by ifIndex of propDocsWirelessDownstream and p2mpSu1HrIndex. The first entry in the table (p2mpSu1HrIndex = 1) represents the chronologically oldest data available.')
p2mpSu1HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: p2mpSu1HrIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpSu1HrUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpSu1HrTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 3), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrTotalCodewords.setDescription('This object represents the total received codewords detected from the last Link Admin Up time until the current operational hour.')
p2mpSu1HrTotalErrCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrTotalErrCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrTotalErrCodewords.setDescription('This object represents the total number of errored codewords received from the last Link Admin Up time until the current operational hour.')
p2mpSu1HrValidDataPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrValidDataPkt.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrValidDataPkt.setDescription('This variable indicates the number of data packets received without any bit errors from the last Link Admin Up time until the current operational hour.')
p2mpSu1HrErrorFreeSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 6), CwrCwErrorFreeSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrErrorFreeSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrErrorFreeSeconds.setDescription('This object represents the cumulative Codeword Error Free Seconds (EFS) detected from the last Link Admin Up time until the current operational hour.')
p2mpSu1HrErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 7), CwrCwErroredSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrErroredSeconds.setDescription('This object represents the cumulative Codeword Errored Seconds (ES) detected from the last Link Admin Up time until the current operational hour')
p2mpSu1HrSevErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 8), CwrCwSeverelyErroredSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrSevErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrSevErroredSeconds.setDescription('This object represents the cumulative Codeword Severely Errored Seconds (SES) detected from the last Link Admin Up time until the current operational hour')
p2mpSu1HrConsecSvErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 9), CwrCwConsecutiveSevErrSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrConsecSvErrSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrConsecSvErrSeconds.setDescription('This object represents the cumulative Codeword Consecutive Severely Errored Seconds (CSES) detected from the last Link Admin Up time until the current operational hour')
p2mpSu1HrSyncLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrSyncLossSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrSyncLossSeconds.setDescription('This object represents the cumulative number of seconds from the last Link Admin Up time to the current operational hour the link was out of synchronization.')
p2mpSu1HrDegradedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 11), CwrCwDegradedSecond()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrDegradedSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrDegradedSeconds.setDescription('This object represents the cumulative Codeword Degraded Seconds detected from the last Link Admin Up time until the current operational hour')
p2mpSu1HrTxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 12), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrTxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrTxPowerMax.setDescription('This variable indicates the maximum transmit power measured during the current operational hour. This is not a cumulative value.')
p2mpSu1HrTxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 13), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrTxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrTxPowerMin.setDescription('This variable indicates the minimum transmit power measured during the current operational hour. This is not a cumulative value.')
p2mpSu1HrTxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 14), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrTxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrTxPowerAvg.setDescription('This variable indicates the average transmit power measured during the current operational hour. This is not a cumulative value.')
p2mpSu1HrMainAntRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 15), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerMax.setDescription('This variable indicates the maximum receive power measured at the main antenna during the current operational hour. This is not a cumulative value.')
p2mpSu1HrMainAntRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 16), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerMin.setDescription('This variable indicates the minimum receive power measured at the main antenna during the current operational hour. This is not a cumulative value.')
p2mpSu1HrMainAntRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 17), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrMainAntRxPowerAvg.setDescription('This variable indicates the average received power measured at the main antenna during the current operational hour. This is not a cumulative value.')
p2mpSu1HrDivAntRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 18), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerMax.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerMax.setDescription('This variable indicates the maximum receive power measured at the diversity antenna during the current operational hour. This is not a cumulative value.')
p2mpSu1HrDivAntRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 19), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerMin.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerMin.setDescription('This variable indicates the minimum receive power measured at the diversity antenna during the current operational hour. This is not a cumulative value.')
p2mpSu1HrDivAntRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 4, 1, 20), CwrFixedPointValue()).setUnits('dBm - decibel milliwatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerAvg.setStatus('current')
if mibBuilder.loadTexts: p2mpSu1HrDivAntRxPowerAvg.setDescription('This variable indicates the average received power measured at the diversity antenna during the current operational hour. This is not a cumulative value.')
p2mpSuCumulativeLinkMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6), )
if mibBuilder.loadTexts: p2mpSuCumulativeLinkMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpSuCumulativeLinkMetricsTable.setDescription('This table contains metrics used to measure the quality of the radio link identified by the ifIndex. The metrics in this table are cumulated since the last Link Admin Up time.')
p2mpSuCumulativeLinkMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: p2mpSuCumulativeLinkMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpSuCumulativeLinkMetricsEntry.setDescription('There exists one such entry for every interface in the ifTable which has an ifType of propDocsWirelessDownstream. Each of these entries are indexed by the value of ifIndex as defined in RFC2233.')
p2mpSuAvailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuAvailableSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuAvailableSeconds.setDescription('This object represents the total number of Available Seconds since the last Link Admin Up time. It is equal to: Error Free Seconds + Errored Seconds - Severely Errored Seconds')
p2mpSuUnAvailableSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuUnAvailableSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuUnAvailableSeconds.setDescription('This object represents the total number of seconds since the last Link Admin Up time that the link was not available for use. It is equal to: Severely Errored Seconds + Sync Loss Seconds.')
p2mpSuPctAvailSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 3), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPctAvailSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPctAvailSeconds.setDescription('This object represents the ratio of cumulative Available seconds to Link Admin Up seconds, expressed as a percentage.')
p2mpSuSyncLossSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuSyncLossSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSyncLossSeconds.setDescription('This object represents the number of seconds since the last Link Admin Up time during which the radio link was out of sync with the remote end.')
p2mpSuPctErrorFreeSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 5), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPctErrorFreeSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPctErrorFreeSeconds.setDescription('This object represents the ratio of cumulative Codeword Error Free Seconds (EFS) to Link Admin Up seconds, expressed as a percentage.')
p2mpSuPctErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 6), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPctErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPctErroredSeconds.setDescription('This object represents the ratio of cumulative Codeword Errored Seconds (ES) to Link Admin Up seconds, expressed as a percentage.')
p2mpSuPctSevErroredSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 7), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPctSevErroredSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPctSevErroredSeconds.setDescription('This object represents the ratio of cumulative Codeword Severely Errored Seconds (SES) to Link Admin Up seconds, expressed as a percentage.')
p2mpSuPctDegradedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 8), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPctDegradedSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPctDegradedSeconds.setDescription('This object represents the ratio of degraded seconds (DS) to Link Admin Up seconds, expressed as a percentage.')
p2mpSuInitialSyncSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuInitialSyncSeconds.setStatus('current')
if mibBuilder.loadTexts: p2mpSuInitialSyncSeconds.setDescription('Time spent in acquiring sync for the first time after the link is administratively configured up')
p2mpSuSyncSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuSyncSuccessCount.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSyncSuccessCount.setDescription('This object represents the number of times the subscriber unit successfully synchronized with the head end.')
p2mpSuLastSyncSuccessTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 11), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuLastSyncSuccessTime.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLastSyncSuccessTime.setDescription('This object represents elapsed time since the subscriber unit last successfully synchronized with the head end.')
p2mpSuSyncFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuSyncFailureCount.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSyncFailureCount.setDescription('This object represents the number of times the subscriber unit attempted, but failed, to synchronize with the head end.')
p2mpSuLastSyncFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 13), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuLastSyncFailTime.setStatus('current')
if mibBuilder.loadTexts: p2mpSuLastSyncFailTime.setDescription('This object represents elapsed time since the subscriber unit last lost synchronization with the remote end.')
p2mpSuSyncMedEffort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuSyncMedEffort.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSyncMedEffort.setDescription('This object indicates how many times sync was regained (since Link Admin Up time) without the subscriber unit having to scan through the channels.')
p2mpSuSyncHighEffort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuSyncHighEffort.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSyncHighEffort.setDescription('This object indicates how many times the channels were scanned due to sync loss (after first sync at Link Admin Up time).')
p2mpSuEffectiveDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuEffectiveDataRate.setStatus('current')
if mibBuilder.loadTexts: p2mpSuEffectiveDataRate.setDescription('Represents the effective data throughput while the link was last synchronized. For a given bandwidth and throughput selection, it represents the data throughput being achieved.')
p2mpSuPercentEfficiency = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 2, 6, 1, 17), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSuPercentEfficiency.setStatus('current')
if mibBuilder.loadTexts: p2mpSuPercentEfficiency.setDescription('Represents the ratio of total good codewords received to the total number of codewords received since Link Admin Up, stated as a percentage')
p2mpHeLinkMetricsThreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 1), )
if mibBuilder.loadTexts: p2mpHeLinkMetricsThreshTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHeLinkMetricsThreshTable.setDescription('This table contains thresholds that are the trigger points to determine if an excessive number of errored codewords are being transmitted. The thresholds can be set for each upstream channel. This helps determine if a particular upstream channel is experiencing excessive errors. The thresholds can also be set for all the subscriber units communicating with the head end. These thresholds will not be set on a per subscriber basis. Instead, there is only one entry in this table for all the subscriber units.')
p2mpHeLinkMetricsThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: p2mpHeLinkMetricsThreshEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHeLinkMetricsThreshEntry.setDescription('This represents one entry in the tablei. The first entry in this table is applicable to all the subscriber units communicating with the head end. This entry uses the ifIndex of propDocsWirelessMaclayer. Subsequent entries in this table apply to the upstream channels and are indexed by the ifIndex of propDocsWirelessUpstream.')
p2mpHe1HrMinTotalCWThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpHe1HrMinTotalCWThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrMinTotalCWThresh.setDescription('This object specifies the threshold for the minimum number of total codewords that should be transmitted in an operational hour before the percentage of errored codewords is evaluated against the p2mpHe1HrPctErrCWThresh.')
p2mpHe1HrPctErrCWThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 1, 1, 2), CwrPercentageValue()).setUnits('0.00001 percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: p2mpHe1HrPctErrCWThresh.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrPctErrCWThresh.setDescription("This object represents the threshold for the acceptable ratio of errored codewords to the total codewords transmitted in an operational hour. For an Upstream Channel: When the percentage of errored codewords to total codewords transmitted on a upstream channel crosses this threshold, the p2mpHeChPctErrCWThreshTrap is sent out (provided the number of total codewords transmitted on the upstream channel in an operational hour, exceeds the value represented by p2mpHe1HrMinTotalCWThresh). For a Subscriber Unit (SU): When the percentage of errored codewords to total codewords transmitted by a SU crosses this threshold, the SU is added to a list of SU's that have also crossed this threshold (provided the number of total codewords transmitted by the SU exceed the value represented by p2mpHe1HrMinTotalCWThresh). The head end sends out the p2mpHeMacPctErrCWThreshTrap to indicate that an SU has been added to the 'bad SU list'.")
p2mpHeBadSuTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2), )
if mibBuilder.loadTexts: p2mpHeBadSuTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHeBadSuTable.setDescription('This table lists all the subscriber units who have either failed to transmit a minimum number of codewords in an operational hour OR have transmitted a total number of codewords equal to or greater than p2mpHe1HrMinTotalCWThresh but have a codeword error percentage (ratio of errored codewords to the total number of codewords transmitted) greater than p2mpHe1HrPctErrCWThresh.')
p2mpHeBadSuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpBadSuIndex"))
if mibBuilder.loadTexts: p2mpHeBadSuEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHeBadSuEntry.setDescription("This represents one entry in the p2mpHeBadSuTable. This entry uses the ifIndex of propDocsWirelessMaclayer. An entry is created in this table when a 'bad' subscriber unit is detected in the managed system. The entry is removed from this table when the subscriber units performance recovers.")
p2mpBadSuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: p2mpBadSuIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpBadSuIndex.setDescription('This object, along with the ifIndex of the MAC layer, identifies exactly one entry in the table.')
p2mpBadSuUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpBadSuUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpBadSuUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpBadSuMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpBadSuMacAddress.setStatus('current')
if mibBuilder.loadTexts: p2mpBadSuMacAddress.setDescription('This object identifies the subscriber unit that either failed to transmit a minimum number of codewords in an operational hour OR whose percentage of errored codewords transmitted exceeded the threshold.')
p2mpTotalErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpTotalErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpTotalErroredCodewords.setDescription('This object represents the total errored codewords transmitted by this subscriber unit in the current operational hour.')
p2mpPctErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpPctErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpPctErroredCodewords.setDescription('This object represent the percentage of errored codewords to total codewords transmitted by the subscriber unit in the current operational hour.')
p2mpHeCodewordErrorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3), )
if mibBuilder.loadTexts: p2mpHeCodewordErrorTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHeCodewordErrorTable.setDescription('This table contains codeword error history for the past 24 hours, at 1 hour intervals, on a per subscriber basis. This table will have a maximum of 24 entries providing cumulative status of the link, identified by ifIndex, over the past 24 hours. This table is updated once every hour.')
p2mpHeCodewordErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuMacAddress"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHeCWErrorIndex"))
if mibBuilder.loadTexts: p2mpHeCodewordErrorEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHeCodewordErrorEntry.setDescription('This represents one entry in the p2mpHeCodewordErrorTable indexed by ifIndex of propDocsWirelessMaclayer, the MAC address of the subscriber unit, and p2mpHeCWErrorIndex Every entry represents the cumulative sum of the previous entry plus last hour before the entry is updated. The first entry in the table (p2mpHeCWErrorIndex = 1) represents the chronologically oldest data available.')
p2mpSuMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: p2mpSuMacAddress.setStatus('current')
if mibBuilder.loadTexts: p2mpSuMacAddress.setDescription('This object is used to index this table. It indicates the MAC address of the subscriber unit.')
p2mpHeCWErrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: p2mpHeCWErrorIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpHeCWErrorIndex.setDescription('This object identifies exactly one entry in the table.')
p2mpHeCWErrorUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 3), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHeCWErrorUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpHeCWErrorUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpTotalCodewords.setDescription('This object represents the total received codewords detected on the subscriber unit identified by p2mpSuMacAddress from Link Admin Up time until the current operational hour.')
p2mpErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 5), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpErroredCodewords.setDescription('This object represents the total received errored codewords detected on the subscriber unit identified by p2mpSuMacAddress from Link Admin Up time until the current operational hour.')
p2mpSINR = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 3, 1, 6), CwrFixedPointValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpSINR.setStatus('current')
if mibBuilder.loadTexts: p2mpSINR.setDescription('This object represents the ratio of signal to (interference + noise) from Link Admin Up time until the current operational hour.')
p2mpHe1SecMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4), )
if mibBuilder.loadTexts: p2mpHe1SecMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecMetricsTable.setDescription('This table contains metrics collected over the duration of one second. This table will have a maximum of 60 entries providing cumulative status of the upstream channel, identified by ifIndex of propDocsWirelessUpstream, over the past one minute. This table is updated once every second.')
p2mpHe1SecMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1SecIndex"))
if mibBuilder.loadTexts: p2mpHe1SecMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecMetricsEntry.setDescription('This represents one entry in the p2mpHe1SecMetricsTable indexed by the ifIndex of propDocsWirelessUpstream and p2mpHe1SecIndex. Every entry represents the cumulative sum of the previous entry plus the last second before the entry is updated. The first entry in the table (p2mpHe1SecIndex = 1) represents the chronologically oldest data available.')
p2mpHe1SecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: p2mpHe1SecIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpHe1SecUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1SecUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpHe1SecTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4, 1, 3), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1SecTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecTotalCodewords.setDescription('This object represents the total number of codewords received on a channel from the last Link Admin Up time until the current operational second.')
p2mpHe1SecErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 4, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1SecErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1SecErroredCodewords.setDescription('This object represents the total number of errored codewords received on a channel from the last Link Admin Up time until the current operational second.')
p2mpHe1MinMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5), )
if mibBuilder.loadTexts: p2mpHe1MinMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinMetricsTable.setDescription('This table contains metrics collected over the duration of one minute. This table will have a maximum of 60 entries providing cumulative status of the upstream channel, identified by ifIndex of propDocsWirelessUpstream, over the past one hour. This table is updated once every minute.')
p2mpHe1MinMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1MinIndex"))
if mibBuilder.loadTexts: p2mpHe1MinMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinMetricsEntry.setDescription('This represents one entry in the p2mpHe1MinMetricsTable indexed by ifIndex of propDocsWirelessUpstream and p2mpHe1MinIndex. Every entry represents the cumulative sum of the previous entry plus the last 1 minute before the entry was updated. The first entry in the table (p2mpHe1MinIndex = 1) represents the chronologically oldest data available.')
p2mpHe1MinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: p2mpHe1MinIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpHe1MinUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1MinUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpHe1MinTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5, 1, 3), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1MinTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinTotalCodewords.setDescription('This object represents the cumulative sum of codewords received on a channel from the last Link Admin Up time until the current operational minute.')
p2mpHe1MinErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 5, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1MinErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1MinErroredCodewords.setDescription('This object represents the cumulative sum of errored codewords received on a channel from the last Link Admin Up time until the current operational minute.')
p2mpHe1HrMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6), )
if mibBuilder.loadTexts: p2mpHe1HrMetricsTable.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrMetricsTable.setDescription('This table contains metrics collected over the duration of one hour. This table will have a maximum of 24 entries providing cumulative status of the upstream channel, identified by ifIndex of propDocsWirelessUpstream, over the past 24 hours. This table is updated once every hour.')
p2mpHe1HrMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrIndex"))
if mibBuilder.loadTexts: p2mpHe1HrMetricsEntry.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrMetricsEntry.setDescription('This represents one entry in the p2mpHe1HrMetricsTable indexed by ifIndex of propDocsWirelessUpstream and p2mpHe1HrIndex. Every entry represents the cumulative sum of the previous entry plus the last 1 hour before the entry was updated. The first entry in the table (p2mpHe1HrIndex = 1) represents the chronologically oldest data available.')
p2mpHe1HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24)))
if mibBuilder.loadTexts: p2mpHe1HrIndex.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrIndex.setDescription('This object, along with ifIndex, identifies exactly one entry in the table.')
p2mpHe1HrUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6, 1, 2), CwrUpdateTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1HrUpdateTime.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrUpdateTime.setDescription('This object represents time in seconds since system power up at which time this entry was last updated.')
p2mpHe1HrTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6, 1, 3), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1HrTotalCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrTotalCodewords.setDescription('This object represents the total number of codewords received on this channel at the time this entry was updated.')
p2mpHe1HrErroredCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 181, 3, 6, 1, 4), WirelessGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: p2mpHe1HrErroredCodewords.setStatus('current')
if mibBuilder.loadTexts: p2mpHe1HrErroredCodewords.setDescription('This object represents the total number of errored codewords received on this channel in the last 1 hour.')
p2mpMetricsMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2))
p2mpMetricsMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0))
p2mpHeChPctErrCWThreshTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 1)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrPctErrCWThresh"))
if mibBuilder.loadTexts: p2mpHeChPctErrCWThreshTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpHeChPctErrCWThreshTrap.setDescription('The p2mpHe1HrPctErrCWThresh for an upstream channel was exceeded.')
p2mpHeMacPctErrCWThreshTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 2)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpBadSuMacAddress"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpTotalErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpPctErroredCodewords"))
if mibBuilder.loadTexts: p2mpHeMacPctErrCWThreshTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpHeMacPctErrCWThreshTrap.setDescription('The p2mpHe1HrPctErrCWThresh for the subscriber unit was exceeded. The subscriber unit was added to the p2mpHeBadSuTable.')
p2mpSuErrSecAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 3)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrESAlarmThresh"))
if mibBuilder.loadTexts: p2mpSuErrSecAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpSuErrSecAlarmTrap.setDescription('The p2mpSuLink1HrESAlarmThresh was exceeded.')
p2mpSuSevErrSecAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 4)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrSESAlarmThresh"))
if mibBuilder.loadTexts: p2mpSuSevErrSecAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpSuSevErrSecAlarmTrap.setDescription('The p2mpSuLink1HrSESAlarmThresh was exceeded.')
p2mpSuConsecSevErrSecAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 5)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrCSESAlarmThresh"))
if mibBuilder.loadTexts: p2mpSuConsecSevErrSecAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpSuConsecSevErrSecAlarmTrap.setDescription('The p2mpSuLink1HrCSESAlarmThresh was exceeded.')
p2mpSuDegradedSecAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 181, 1, 2, 0, 6)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrDCSAlarmThresh"))
if mibBuilder.loadTexts: p2mpSuDegradedSecAlarmTrap.setStatus('current')
if mibBuilder.loadTexts: p2mpSuDegradedSecAlarmTrap.setDescription('The p2mpSuLink1HrDCSAlarmThresh was exceeded.')
p2mpRadioLinkConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 4))
p2mpRadioLinkCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 1))
p2mpRadioLinkGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 2))
p2mpRadioLinkCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 1, 1)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpComplianceLinkMetricsGroup"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpComplianceSuMetricsGroup"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpComplianceHeMetricsGroup"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpComplianceNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    p2mpRadioLinkCompliance = p2mpRadioLinkCompliance.setStatus('current')
if mibBuilder.loadTexts: p2mpRadioLinkCompliance.setDescription('The compliance statement for devices implementing the Point to MultiPoint wireless interface compliant to Cisco Systems Inc. specification.')
p2mpComplianceLinkMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 2, 1)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpLinkMetricsScale"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpLinkMetricsPrecision"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    p2mpComplianceLinkMetricsGroup = p2mpComplianceLinkMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: p2mpComplianceLinkMetricsGroup.setDescription('Objects implemented to indicate scaling factors for fixed point values. This group is mandatory on the Head End and the Subscriber Unit.')
p2mpComplianceSuMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 2, 2)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLinkESThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLinkDSThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLinkSESThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLinkCSESThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrESAlarmThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrSESAlarmThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrCSESAlarmThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLink1HrDCSAlarmThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecType"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecTotalErrCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1SecValidDataPkt"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinTotalErrCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinValidDataPkt"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinErrorFreeSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinSevErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinConsecSevErrSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinSyncLossSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinDegradedSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinTxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinTxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinTxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinMainAntRxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinMainAntRxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinMainAntRxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinDivAntRxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinDivAntRxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1MinDivAntRxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrTotalErrCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrValidDataPkt"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrErrorFreeSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrSevErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrConsecSvErrSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrSyncLossSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrDegradedSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrTxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrTxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrTxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrMainAntRxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrMainAntRxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrMainAntRxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrDivAntRxPowerMax"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrDivAntRxPowerMin"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSu1HrDivAntRxPowerAvg"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuAvailableSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuUnAvailableSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPctAvailSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSyncLossSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPctErrorFreeSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPctErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPctSevErroredSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPctDegradedSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuInitialSyncSeconds"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSyncSuccessCount"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLastSyncSuccessTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSyncMedEffort"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSyncHighEffort"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSyncFailureCount"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuLastSyncFailTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuEffectiveDataRate"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuPercentEfficiency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    p2mpComplianceSuMetricsGroup = p2mpComplianceSuMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: p2mpComplianceSuMetricsGroup.setDescription('Group of objects implemented at the Subscriber unit.')
p2mpComplianceHeMetricsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 2, 3)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrMinTotalCWThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrPctErrCWThresh"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpBadSuUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpBadSuMacAddress"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpTotalErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpPctErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHeCWErrorUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSINR"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1SecUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1SecTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1SecErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1MinUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1MinTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1MinErroredCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrUpdateTime"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrTotalCodewords"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHe1HrErroredCodewords"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    p2mpComplianceHeMetricsGroup = p2mpComplianceHeMetricsGroup.setStatus('current')
if mibBuilder.loadTexts: p2mpComplianceHeMetricsGroup.setDescription('Group of objects implemented at the Head End.')
p2mpComplianceNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 181, 4, 2, 4)).setObjects(("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHeChPctErrCWThreshTrap"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpHeMacPctErrCWThreshTrap"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuErrSecAlarmTrap"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuSevErrSecAlarmTrap"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuConsecSevErrSecAlarmTrap"), ("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", "p2mpSuDegradedSecAlarmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    p2mpComplianceNotifGroup = p2mpComplianceNotifGroup.setStatus('current')
if mibBuilder.loadTexts: p2mpComplianceNotifGroup.setDescription('Group of notifications which indicate that a threshold was exceeded.')
mibBuilder.exportSymbols("CISCO-WIRELESS-P2MP-LINK-METRICS-MIB", p2mpSuLinkCSESThresh=p2mpSuLinkCSESThresh, p2mpSu1HrDivAntRxPowerMax=p2mpSu1HrDivAntRxPowerMax, p2mpSuPctSevErroredSeconds=p2mpSuPctSevErroredSeconds, p2mpHe1HrMetricsEntry=p2mpHe1HrMetricsEntry, PYSNMP_MODULE_ID=ciscoWirelessLinkMetricsMIB, p2mpSu1HrMainAntRxPowerAvg=p2mpSu1HrMainAntRxPowerAvg, p2mpSu1MinIndex=p2mpSu1MinIndex, p2mpSu1HrErroredSeconds=p2mpSu1HrErroredSeconds, p2mpSu1HrSevErroredSeconds=p2mpSu1HrSevErroredSeconds, p2mpSu1SecMetricsEntry=p2mpSu1SecMetricsEntry, p2mpSuDegradedSecAlarmTrap=p2mpSuDegradedSecAlarmTrap, p2mpHe1HrTotalCodewords=p2mpHe1HrTotalCodewords, p2mpSuLink1HrDCSAlarmThresh=p2mpSuLink1HrDCSAlarmThresh, p2mpSu1SecTotalCodewords=p2mpSu1SecTotalCodewords, p2mpLinkMetricsPrecision=p2mpLinkMetricsPrecision, p2mpSuEffectiveDataRate=p2mpSuEffectiveDataRate, p2mpSu1SecUpdateTime=p2mpSu1SecUpdateTime, p2mpSu1MinConsecSevErrSeconds=p2mpSu1MinConsecSevErrSeconds, p2mpSuPctErroredSeconds=p2mpSuPctErroredSeconds, p2mpHe1SecIndex=p2mpHe1SecIndex, p2mpHe1HrUpdateTime=p2mpHe1HrUpdateTime, p2mpSuConsecSevErrSecAlarmTrap=p2mpSuConsecSevErrSecAlarmTrap, p2mpSu1HrDivAntRxPowerMin=p2mpSu1HrDivAntRxPowerMin, p2mpHe1HrErroredCodewords=p2mpHe1HrErroredCodewords, ciscoWirelessLinkMetricsMIB=ciscoWirelessLinkMetricsMIB, p2mpTotalErroredCodewords=p2mpTotalErroredCodewords, p2mpSu1MinMainAntRxPowerMin=p2mpSu1MinMainAntRxPowerMin, p2mpSuSyncLossSeconds=p2mpSuSyncLossSeconds, p2mpSu1MinDivAntRxPowerAvg=p2mpSu1MinDivAntRxPowerAvg, p2mpHe1MinIndex=p2mpHe1MinIndex, p2mpComplianceLinkMetricsGroup=p2mpComplianceLinkMetricsGroup, p2mpRadioLinkCompliances=p2mpRadioLinkCompliances, p2mpSu1MinMetricsTable=p2mpSu1MinMetricsTable, p2mpSu1HrDegradedSeconds=p2mpSu1HrDegradedSeconds, p2mpSuLastSyncSuccessTime=p2mpSuLastSyncSuccessTime, p2mpSuLinkMetricsThreshEntry=p2mpSuLinkMetricsThreshEntry, p2mpTotalCodewords=p2mpTotalCodewords, p2mpSu1HrTotalErrCodewords=p2mpSu1HrTotalErrCodewords, p2mpSuSyncHighEffort=p2mpSuSyncHighEffort, p2mpRadioLinkGroups=p2mpRadioLinkGroups, p2mpSu1HrTxPowerMax=p2mpSu1HrTxPowerMax, p2mpSu1HrIndex=p2mpSu1HrIndex, p2mpHe1SecMetricsEntry=p2mpHe1SecMetricsEntry, p2mpSuUnAvailableSeconds=p2mpSuUnAvailableSeconds, p2mpSu1MinMainAntRxPowerMax=p2mpSu1MinMainAntRxPowerMax, p2mpHeBadSuTable=p2mpHeBadSuTable, p2mpSuSyncFailureCount=p2mpSuSyncFailureCount, p2mpSuErrSecAlarmTrap=p2mpSuErrSecAlarmTrap, p2mpHe1SecMetricsTable=p2mpHe1SecMetricsTable, p2mpBadSuMacAddress=p2mpBadSuMacAddress, p2mpHe1MinMetricsTable=p2mpHe1MinMetricsTable, p2mpSuLastSyncFailTime=p2mpSuLastSyncFailTime, p2mpHeBadSuEntry=p2mpHeBadSuEntry, p2mpSuInitialSyncSeconds=p2mpSuInitialSyncSeconds, p2mpSu1HrUpdateTime=p2mpSu1HrUpdateTime, p2mpHeLinkMetricsThreshTable=p2mpHeLinkMetricsThreshTable, p2mpSuPctErrorFreeSeconds=p2mpSuPctErrorFreeSeconds, p2mpSuLinkMetricsThreshTable=p2mpSuLinkMetricsThreshTable, p2mpSu1MinTotalCodewords=p2mpSu1MinTotalCodewords, p2mpHe1SecErroredCodewords=p2mpHe1SecErroredCodewords, p2mpSuLink1HrESAlarmThresh=p2mpSuLink1HrESAlarmThresh, p2mpSu1HrTxPowerMin=p2mpSu1HrTxPowerMin, p2mpSu1SecMetricsTable=p2mpSu1SecMetricsTable, p2mpHe1MinUpdateTime=p2mpHe1MinUpdateTime, p2mpSu1MinMetricsEntry=p2mpSu1MinMetricsEntry, p2mpSuLinkSESThresh=p2mpSuLinkSESThresh, p2mpComplianceHeMetricsGroup=p2mpComplianceHeMetricsGroup, p2mpSu1HrValidDataPkt=p2mpSu1HrValidDataPkt, p2mpHe1HrPctErrCWThresh=p2mpHe1HrPctErrCWThresh, p2mpSuCumulativeLinkMetricsTable=p2mpSuCumulativeLinkMetricsTable, p2mpSu1MinTxPowerMin=p2mpSu1MinTxPowerMin, p2mpHeCodewordErrorTable=p2mpHeCodewordErrorTable, p2mpComplianceNotifGroup=p2mpComplianceNotifGroup, p2mpSuPctAvailSeconds=p2mpSuPctAvailSeconds, p2mpBadSuUpdateTime=p2mpBadSuUpdateTime, p2mpSu1HrMetricsTable=p2mpSu1HrMetricsTable, p2mpSuSyncSuccessCount=p2mpSuSyncSuccessCount, p2mpHe1SecUpdateTime=p2mpHe1SecUpdateTime, p2mpMetricsPrecisionEntry=p2mpMetricsPrecisionEntry, p2mpSuPercentEfficiency=p2mpSuPercentEfficiency, p2mpSu1MinValidDataPkt=p2mpSu1MinValidDataPkt, p2mpHeLinkMetricsGroup=p2mpHeLinkMetricsGroup, p2mpSu1SecIndex=p2mpSu1SecIndex, p2mpSu1MinTxPowerAvg=p2mpSu1MinTxPowerAvg, p2mpSu1SecType=p2mpSu1SecType, p2mpSuLinkESThresh=p2mpSuLinkESThresh, p2mpSu1SecTotalErrCodewords=p2mpSu1SecTotalErrCodewords, p2mpHe1MinMetricsEntry=p2mpHe1MinMetricsEntry, p2mpSu1HrSyncLossSeconds=p2mpSu1HrSyncLossSeconds, p2mpSu1MinMainAntRxPowerAvg=p2mpSu1MinMainAntRxPowerAvg, p2mpSuSyncMedEffort=p2mpSuSyncMedEffort, p2mpHe1HrMetricsTable=p2mpHe1HrMetricsTable, p2mpSuLink1HrSESAlarmThresh=p2mpSuLink1HrSESAlarmThresh, p2mpSu1MinUpdateTime=p2mpSu1MinUpdateTime, p2mpHeCWErrorUpdateTime=p2mpHeCWErrorUpdateTime, p2mpRadioLinkCompliance=p2mpRadioLinkCompliance, p2mpMetricsMIBNotificationPrefix=p2mpMetricsMIBNotificationPrefix, p2mpErroredCodewords=p2mpErroredCodewords, p2mpHe1HrMinTotalCWThresh=p2mpHe1HrMinTotalCWThresh, p2mpSuMacAddress=p2mpSuMacAddress, p2mpRadioLinkConformance=p2mpRadioLinkConformance, p2mpSu1MinDivAntRxPowerMax=p2mpSu1MinDivAntRxPowerMax, p2mpSu1MinDivAntRxPowerMin=p2mpSu1MinDivAntRxPowerMin, p2mpSu1MinDegradedSeconds=p2mpSu1MinDegradedSeconds, p2mpSuLinkDSThresh=p2mpSuLinkDSThresh, p2mpBadSuIndex=p2mpBadSuIndex, p2mpComplianceSuMetricsGroup=p2mpComplianceSuMetricsGroup, p2mpHe1MinErroredCodewords=p2mpHe1MinErroredCodewords, p2mpSu1HrTxPowerAvg=p2mpSu1HrTxPowerAvg, p2mpHeCodewordErrorEntry=p2mpHeCodewordErrorEntry, p2mpSu1HrErrorFreeSeconds=p2mpSu1HrErrorFreeSeconds, p2mpLinkMetricsScale=p2mpLinkMetricsScale, p2mpSu1HrMetricsEntry=p2mpSu1HrMetricsEntry, p2mpHeMacPctErrCWThreshTrap=p2mpHeMacPctErrCWThreshTrap, p2mpSu1MinTotalErrCodewords=p2mpSu1MinTotalErrCodewords, p2mpSuAvailableSeconds=p2mpSuAvailableSeconds, p2mpSu1MinErrorFreeSeconds=p2mpSu1MinErrorFreeSeconds, p2mpSu1MinErroredSeconds=p2mpSu1MinErroredSeconds, p2mpHeChPctErrCWThreshTrap=p2mpHeChPctErrCWThreshTrap, p2mpPctErroredCodewords=p2mpPctErroredCodewords, p2mpSu1MinSyncLossSeconds=p2mpSu1MinSyncLossSeconds, p2mpSu1HrMainAntRxPowerMax=p2mpSu1HrMainAntRxPowerMax, p2mpSINR=p2mpSINR, p2mpMetricsPrecisionTable=p2mpMetricsPrecisionTable, p2mpSuLinkMetricsGroup=p2mpSuLinkMetricsGroup, p2mpSu1SecValidDataPkt=p2mpSu1SecValidDataPkt, p2mpSu1MinTxPowerMax=p2mpSu1MinTxPowerMax, p2mpSu1MinSevErroredSeconds=p2mpSu1MinSevErroredSeconds, p2mpSu1HrConsecSvErrSeconds=p2mpSu1HrConsecSvErrSeconds, p2mpSu1HrTotalCodewords=p2mpSu1HrTotalCodewords, p2mpSuCumulativeLinkMetricsEntry=p2mpSuCumulativeLinkMetricsEntry, p2mpHe1SecTotalCodewords=p2mpHe1SecTotalCodewords, p2mpHe1MinTotalCodewords=p2mpHe1MinTotalCodewords, p2mpSuPctDegradedSeconds=p2mpSuPctDegradedSeconds, p2mpLinkMetricsGroup=p2mpLinkMetricsGroup, p2mpMetricsMIBNotification=p2mpMetricsMIBNotification, p2mpHe1HrIndex=p2mpHe1HrIndex, p2mpHeCWErrorIndex=p2mpHeCWErrorIndex, p2mpSu1HrDivAntRxPowerAvg=p2mpSu1HrDivAntRxPowerAvg, p2mpHeLinkMetricsThreshEntry=p2mpHeLinkMetricsThreshEntry, p2mpSuLink1HrCSESAlarmThresh=p2mpSuLink1HrCSESAlarmThresh, p2mpSu1HrMainAntRxPowerMin=p2mpSu1HrMainAntRxPowerMin, p2mpSuSevErrSecAlarmTrap=p2mpSuSevErrSecAlarmTrap)
