#
# PySNMP MIB module VERTICAL-ENV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL-ENV-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:34:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, iso, Counter32, ObjectIdentity, Unsigned32, IpAddress, MibIdentifier, Gauge32, TimeTicks, NotificationType, enterprises, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "iso", "Counter32", "ObjectIdentity", "Unsigned32", "IpAddress", "MibIdentifier", "Gauge32", "TimeTicks", "NotificationType", "enterprises", "NotificationType", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
environment = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 11))
iOFanTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 11, 1), )
if mibBuilder.loadTexts: iOFanTable.setStatus('current')
if mibBuilder.loadTexts: iOFanTable.setDescription('Table of status information about all Instant Office cooling fans')
iOFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 11, 1, 1), ).setIndexNames((0, "VERTICAL-ENV-MIB", "fanIndex"))
if mibBuilder.loadTexts: iOFanEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iOFanEntry.setDescription('An entry in the Fan Table.')
fanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 11, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanIndex.setStatus('mandatory')
if mibBuilder.loadTexts: fanIndex.setDescription('The index of the cooling fan within the system')
fanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("stopped", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: fanOperStatus.setDescription('The operational status of this fan. The following are valid values: running =1,(the normal operational state), stopped =2, unknown =3')
iOPSTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 11, 2), )
if mibBuilder.loadTexts: iOPSTable.setStatus('current')
if mibBuilder.loadTexts: iOPSTable.setDescription('Table of status information about all Instant Office power supplies')
iOPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 11, 2, 1), ).setIndexNames((0, "VERTICAL-ENV-MIB", "psIndex"))
if mibBuilder.loadTexts: iOPSEntry.setStatus('mandatory')
if mibBuilder.loadTexts: iOPSEntry.setDescription('An entry in the Power Supply Table.')
psIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 11, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psIndex.setStatus('mandatory')
if mibBuilder.loadTexts: psIndex.setDescription('The index of the power supply unit within the system')
psOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 11, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOperStatus.setStatus('mandatory')
if mibBuilder.loadTexts: psOperStatus.setDescription('The operational status of this power supply. The following are valid values: on=1, off=2, unknown=3 ')
iOFaultMonitorGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 11, 3))
iOFaultMonitorStatus = MibScalar((1, 3, 6, 1, 4, 1, 2338, 11, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rAMFull", 1), ("notResponding", 2), ("ok", 3), ("modemFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iOFaultMonitorStatus.setStatus('mandatory')
if mibBuilder.loadTexts: iOFaultMonitorStatus.setDescription('The operational status of the Fault Monitor. The following are valid values: RAMFull =1, NotResponding =2, Ok =3, ModemFailed =4 ')
iOTrapInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 11, 4))
iOLastFanTrap = MibScalar((1, 3, 6, 1, 4, 1, 2338, 11, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iOLastFanTrap.setStatus('mandatory')
if mibBuilder.loadTexts: iOLastFanTrap.setDescription('This object describes,in more detail,the last Fan Trap event that occured. Since traps for all fans are combined into one Trap, this string describes each fan status just after the trap condition.')
iOLastPowerSupplyTrap = MibScalar((1, 3, 6, 1, 4, 1, 2338, 11, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iOLastPowerSupplyTrap.setStatus('mandatory')
if mibBuilder.loadTexts: iOLastPowerSupplyTrap.setDescription('This object describes,in more detail,the last Power Supply Trap event that occured. Since traps for all power supplies are combined into one Trap, this string describes each power supply status just after the trap condition.')
iOLastFaultMonitorTrap = MibScalar((1, 3, 6, 1, 4, 1, 2338, 11, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: iOLastFaultMonitorTrap.setStatus('mandatory')
if mibBuilder.loadTexts: iOLastFaultMonitorTrap.setDescription('This object describes,in more detail,the last Fault Monitor Trap event that occured. Since traps for all Fault Monitor events are combined into one Trap,this string describes the Fault Monitor event (RAM full, NotResponding or Modem Failed) that caused this trap.')
iOFanStatus = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,47)).setObjects(("VERTICAL-ENV-MIB", "iOLastFanTrap"))
if mibBuilder.loadTexts: iOFanStatus.setDescription(' This notification is sent when one (or more) cooling fans changes state (i.e. it goes from an ON state to OFF state or vice-versa. Even if more than one fan changes state, only one trap is sent. Information about the new state of all the fans is sent in the Trap Data (iOLastFanTrap)')
iOPowerSupplyStatus = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,48)).setObjects(("VERTICAL-ENV-MIB", "iOLastPowerSupplyTrap"))
if mibBuilder.loadTexts: iOPowerSupplyStatus.setDescription(' This notification is sent when one (or more) power supply units changs state (i.e it goes from an ON state to an OFF state, or vice versa). Even if more than one power supply changes state, only one trap is sent. Information about the new state of all the power supplies is sent in the Trap Data (IOLastPowerSupplyTrap).')
iOFaultMonitorStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,49)).setObjects(("VERTICAL-ENV-MIB", "iOLastFaultMonitorTrap"))
if mibBuilder.loadTexts: iOFaultMonitorStatusTrap.setDescription(' This notification is sent when or more of the following Fault Monitor Events occur: RAM full, Fault Monitor NotResponding or Modem Failed. Information about these events is contained in the Trap data (IOLatFaultmonitorTrap).')
mibBuilder.exportSymbols("VERTICAL-ENV-MIB", iOFanEntry=iOFanEntry, iOFanTable=iOFanTable, iOPowerSupplyStatus=iOPowerSupplyStatus, psOperStatus=psOperStatus, fanOperStatus=fanOperStatus, psIndex=psIndex, iOLastFaultMonitorTrap=iOLastFaultMonitorTrap, iOTrapInfoGroup=iOTrapInfoGroup, iOFaultMonitorStatus=iOFaultMonitorStatus, iOFaultMonitorGroup=iOFaultMonitorGroup, fanIndex=fanIndex, environment=environment, iOLastPowerSupplyTrap=iOLastPowerSupplyTrap, iOLastFanTrap=iOLastFanTrap, iOFaultMonitorStatusTrap=iOFaultMonitorStatusTrap, vertical=vertical, iOPSTable=iOPSTable, iOPSEntry=iOPSEntry, iOFanStatus=iOFanStatus)
