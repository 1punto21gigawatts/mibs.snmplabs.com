#
# PySNMP MIB module ZYXEL-LLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-LLDP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:50:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, Counter64, ModuleIdentity, Counter32, Gauge32, Unsigned32, IpAddress, ObjectIdentity, iso, MibIdentifier, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "Counter64", "ModuleIdentity", "Counter32", "Gauge32", "Unsigned32", "IpAddress", "ObjectIdentity", "iso", "MibIdentifier", "Integer32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelLldp = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43))
if mibBuilder.loadTexts: zyxelLldp.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelLldp.setOrganization('Enterprise Solution ZyXEL')
if mibBuilder.loadTexts: zyxelLldp.setContactInfo('')
if mibBuilder.loadTexts: zyxelLldp.setDescription('The subtree for Link Layer Discovery Protocol (LLDP)')
zyxelLldpSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 1))
zyxelLldpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 2))
zyLldpState = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 1, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyLldpState.setStatus('current')
if mibBuilder.loadTexts: zyLldpState.setDescription('Enable/Disable LLDP on the switch. The Link Layer Discover Protocol (LLDP) is to discover and make available physical topology information for network management. This protocol will advertise information useful for discovering pertinent information about a remote port and to populate topology MIB.')
zyLldpRemoteInfoClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 2, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyLldpRemoteInfoClear.setStatus('current')
if mibBuilder.loadTexts: zyLldpRemoteInfoClear.setDescription('Clear all the LLDP remote information.')
zyLldpRemoteInfoClearPorts = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 2, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyLldpRemoteInfoClearPorts.setStatus('current')
if mibBuilder.loadTexts: zyLldpRemoteInfoClearPorts.setDescription('Clear the LLDP remote informationof of the port(s).')
zyLldpStatisticsClear = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 43, 2, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyLldpStatisticsClear.setStatus('current')
if mibBuilder.loadTexts: zyLldpStatisticsClear.setDescription('Clear all the LLDP statistics.')
mibBuilder.exportSymbols("ZYXEL-LLDP-MIB", PYSNMP_MODULE_ID=zyxelLldp, zyxelLldpStatus=zyxelLldpStatus, zyxelLldpSetup=zyxelLldpSetup, zyxelLldp=zyxelLldp, zyLldpStatisticsClear=zyLldpStatisticsClear, zyLldpState=zyLldpState, zyLldpRemoteInfoClearPorts=zyLldpRemoteInfoClearPorts, zyLldpRemoteInfoClear=zyLldpRemoteInfoClear)
