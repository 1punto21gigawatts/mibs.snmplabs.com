#
# PySNMP MIB module CISCO-OUTAGE-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-OUTAGE-MONITOR-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, ModuleIdentity, Gauge32, MibIdentifier, Counter64, Unsigned32, Counter32, ObjectIdentity, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "ModuleIdentity", "Gauge32", "MibIdentifier", "Counter64", "Unsigned32", "Counter32", "ObjectIdentity", "Integer32", "NotificationType")
DisplayString, DateAndTime, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention")
ciscoOutageMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 280))
ciscoOutageMIB.setRevisions(('2005-08-22 00:00', '2002-09-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoOutageMIB.setRevisionsDescriptions(('Added object cOutageRecordingStartTime to cOutageObjectTable. Added logicalEntity(5) to OutageMonObjectType. Added cOutageLntMapping subgroup object.', 'Initial version of this MIB.',))
if mibBuilder.loadTexts: ciscoOutageMIB.setLastUpdated('200508220000Z')
if mibBuilder.loadTexts: ciscoOutageMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoOutageMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoOutageMIB.setDescription("This MIB module describes, stores, and reports outage related information generated by individual hardware and software components comprising a router. They includes physical interfaces, logical interfaces, physical entities such as chassis, slots, modules, ports, power supplies, and fan, software processes running on each card, and logical entity, which can be defined by outage monitoring program, which are IOS software for each LC and RP, router device, and CPU utilization. The outage related information comprises entity or interface up and down, process start and abnormal or normal termination, unusually high CPU utilization caused, for example, by Denial of Service (DoS) attack, etc. The outage related event can be collected by means of Cisco's fault manager, Cisco's event manager, and syslog messages, etc. An outage manager maintains the following outage data for each component. 1) Accumulated Outage Time (AOT): total outage time of a component from the beginning of the measurement. 2) Number of Accumulated Failure (NAF): total number of failure instance from the beginning of the measurement. 3) Recording Start Time (RST): the date-time that the measurement process began against the object. Using aforementioned outage data, users can calculate and correlate to derive availability information as follows: 1) Component Availability: the probability that a component will operate when needed. = (1 - (Outage Time / Duration)) 2) DPM (Defects per Million): measure(s) of the defects of the system that have an immediate impact on the end-user. = ([AOTi / (Measurement Interval)] x 10**6) 3) MTTR(Mean Time To Recovery): expected average time to restore a failed component. = (AOTi / NAFi) 4) MTBF (Mean Time Between Failure): expected average time between failures of a component. = (T2 - RSTi) / NAFi 5) MTTF (Mean Time To Failure): the mean time to failure once the device starts working. = (MTBFi - MTTRi = (T2 - RSTi - AOTi) / NAFi) measurement 1 |<----------------->| | | System Up @------|-------------------|----> Time RSTi T2 At the beginning RSTi: tmp_AOT = AOTi (from the MIB polling); At the end T2: Duration = Current Time(T2) - RSTi; Outage Time = AOTj - tmp_AOT; ")
ciscoOutageMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1))
cOutageBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1))
cOutageHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2))
cOutageDescription = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3))
cOutageMonObject = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4))
cOutageCpmMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5))
cOutageRmtMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6))
cOutageLntMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 7))
class OutageMonObjectType(TextualConvention, Integer32):
    description = 'Represents different monitored object types: interface - this object supports monitoring of both physical and logical interfaces, which is defined in IF-MIB. physicalEntity - this object supports monitoring of physical entities contained by the system, including chassis, slots, modules, ports, power supplies, and fan, which is defined in ENTITY-MIB. swProcess - this object supports monitoring of software processes, which is defined in CISCO-PROCESS-MIB. remoteObject - this object supports monitoring of remote objects including remote customer devices or interfaces. The object is defined by users via CLI configuration. logicalEntity - this object supports monitoring of any logical entities contained by the system, including router device, IOS software on each LC or RP, and CPU utilization object, which can be defined by outage monitoring program.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("interface", 1), ("physicalEntity", 2), ("swProcess", 3), ("remoteObject", 4), ("logicalEntity", 5))

cOutageApplVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageApplVersion.setStatus('current')
if mibBuilder.loadTexts: cOutageApplVersion.setDescription("outage monitoring application version string. The format will be: 'Version.Release.Patch-Level: Textual-Description' For example: '1.0.0: Initial Outage Monitor Application'")
cOutageNotificationsSent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1, 2), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageNotificationsSent.setStatus('current')
if mibBuilder.loadTexts: cOutageNotificationsSent.setDescription('The number of outage notifications that have been sent. This number may include notifications that were prevented from being transmitted due to reasons such as resource limitations and/or non-connectivity. If one is receiving notifications, one can periodically poll this object to determine if any notifications were missed. If missed, a poll of the cOutageHistoryTable might be necessary.')
cOutageNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOutageNotificationsEnabled.setStatus('current')
if mibBuilder.loadTexts: cOutageNotificationsEnabled.setDescription('This object indicates whether outage notifications will or will not be sent when an outage related event is generated by the device. Disabling notifications does not prevent outage event from being added to the cOutageHistoryTable.')
cOutageNotificationFilterEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOutageNotificationFilterEnabled.setStatus('current')
if mibBuilder.loadTexts: cOutageNotificationFilterEnabled.setDescription('This object indicates whether certain outage related event notifications will or will not be sent when the cOutageNotificationsEnabled is TRUE. In the event structure, it is possible to have certain hierarchies such that an event causes several related events. The original event is called a root event and other related events are called sub-events. If it is enabled, only a root event notification will be sent out and all other related sub-events will be filtered out. The cOutageHistoryTable maintains only the root event. However, it does not prevent the object entries from being updated in the cOutageObjectTable. The filtering policy, which correlates a root event and the following sub-events, may vary and can be controlled by the configuration.')
cOutageFilteredEvents = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageFilteredEvents.setStatus('current')
if mibBuilder.loadTexts: cOutageFilteredEvents.setDescription('The number of events which were filtered out. This object can be utilized to determine how many following events got filtered out related to the notified event.')
cOutageHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 1), Unsigned32().clone(100)).setUnits('entries').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cOutageHistTableSize.setStatus('current')
if mibBuilder.loadTexts: cOutageHistTableSize.setDescription('The upper limit on the number of entries that the cOutageHistoryTable may contain.')
cOutageHistMsgsFlushed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageHistMsgsFlushed.setStatus('current')
if mibBuilder.loadTexts: cOutageHistMsgsFlushed.setDescription("The number of entries that have been removed from the cOutageHistoryTable in order to make room for new entries. The value of this object starts at '0' and monotonically increases for each flushed message. If the value of this object is '4294967295', the value will become '0'. This object can be utilized to determine whether your polling frequency on the history table is fast enough and/or the size of your history table is large enough such that you are not missing events.")
cOutageHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3), )
if mibBuilder.loadTexts: cOutageHistoryTable.setStatus('current')
if mibBuilder.loadTexts: cOutageHistoryTable.setDescription('A table of outage related events generated by this router. Conceptual row entries are dynamically added into this table when outage related events occur. Entries are stored in FIFO order. When the maximum number of entries has been reached in the table, the oldest entry in the table is removed immediately. When a table is reduced to a smaller size N, the oldest entries are immediately removed from the table leaving a maximum of N entries.')
cOutageHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageEventIndex"))
if mibBuilder.loadTexts: cOutageHistoryEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageHistoryEntry.setDescription('This entry contains information about an outage related event which has been generated by this router.')
cOutageEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cOutageEventIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageEventIndex.setDescription("An arbitrary non-zero integer value that uniquely identifies a COutageHistoryEntry in the table. The value of this table starts at '1' and monotonically increases for each object failure and recovery event received by the agent. If the value of this object is '4294967295', the agent will reset it to '1' upon receiving the next event.")
cOutageEventObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 2), OutageMonObjectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventObjectType.setStatus('current')
if mibBuilder.loadTexts: cOutageEventObjectType.setDescription("This object specifies the monitored object's type. It comprises interface(1), physicalEntity(2), swProcess(3), remoteObject(4), and logicalEntity(5). The detailed description has been presented above in the OutageMonObjectType definition.")
cOutageEventMonObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventMonObjectIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageEventMonObjectIndex.setDescription('This object identifies a specific index of the monitored object based upon the cOutageEventObjectType. If it is interface(1), it correlates the object with ifIndex in ifTable in the IF-MIB. If it is physicalEntity(2), it correlates the object with entPhysicalIndex in entPhysicalTable in the ENTITY-MIB. If it is swProcess(3), the value corresponds to an entry in the cOutageCpmMapTable, which correlates the object with cpmCPUTotalIndex and cpmProcessPID in cpmProcessTable in the CISCO-PROCESS-MIB. If it is remoteObject(4), the value corresponds to an entry in the cOutageRemoteObjMapTable, which correlates the object with its ID and description. If it is logicalEntity(5), the value corresponds to an entry in the cOutageLogicalObjMapTable, which correlates the object with the description. It also correlates the event entry with a specific entry in cOutageObjectTable.')
cOutageEventTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventTypeIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeIndex.setDescription('The type of outage related event. The value corresponds to an entry in the cOutageEventTypeMapTable.')
cOutageEventTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventTime.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTime.setDescription('This object specifies the date and time of the event was generated. The value of sysUpTime, which is reinitialized during the router boot-up, is not sufficient, since it shall be able to measure the outage time of the router failure over the measurement period.')
cOutageEventInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventInterval.setStatus('current')
if mibBuilder.loadTexts: cOutageEventInterval.setDescription('Object that identifies the time duration between transitions in available state of a component. According to the cOutageEventTypeIndex, If the event type is up, the interval time from the last down time is TTR (Time To Recovery). Otherwise, the interval time from the last up is TTF (Time To Failure).')
cOutageEventTypeMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3, 1), )
if mibBuilder.loadTexts: cOutageEventTypeMapTable.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeMapTable.setDescription('A table containing information about cOutageEventTypeMapIndex value mapping. Each conceptual row specifies a unique mapping between a cOutageEventTypeMapIndex value, and an outage related event type.')
cOutageEventTypeMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTypeMapIndex"))
if mibBuilder.loadTexts: cOutageEventTypeMapEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeMapEntry.setDescription('A mapping between an event type and an event description.')
cOutageEventTypeMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cOutageEventTypeMapIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeMapIndex.setDescription('This object uniquely identifies an event description.')
cOutageEventTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventTypeName.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeName.setDescription('The name of the outage related event.')
cOutageEventTypeDescrText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 3, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageEventTypeDescrText.setStatus('current')
if mibBuilder.loadTexts: cOutageEventTypeDescrText.setDescription('This object specifies a human-readable message describing information about the outage related event.')
cOutageObjectTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1), )
if mibBuilder.loadTexts: cOutageObjectTable.setStatus('current')
if mibBuilder.loadTexts: cOutageObjectTable.setDescription('A table of monitored object entries generated by this router, which include interface, physical entry, and software process. The conceptual row entries are initially established during the monitoring start-up procedure based upon configuration set-up. The entries are also dynamically added into this table when a new object is detected. The entry information will be updated, when the outage related event occurs. The entry will be removed only by configuration reset.')
cOutageObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageObjectType"), (0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageMonitoredObjectIndex"))
if mibBuilder.loadTexts: cOutageObjectEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageObjectEntry.setDescription('An entry containing outage related information applicable to a particular measurement object.')
cOutageObjectType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 1), OutageMonObjectType())
if mibBuilder.loadTexts: cOutageObjectType.setStatus('current')
if mibBuilder.loadTexts: cOutageObjectType.setDescription("This object specifies the monitored object's type. It comprises interface(1), physicalEntity(2), swProcess(3), remoteObject(4), and logicalEntity(5). The detailed description has been presented above in the OutageMonObjectType definition.")
cOutageMonitoredObjectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cOutageMonitoredObjectIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageMonitoredObjectIndex.setDescription('This object identifies a specific index of the monitored object based upon the cOutageObjectType. If it is interface(1), it correlates the object with ifIndex in ifTable in the IF-MIB. If it is PhysicalEntity(2), it correlates the object with entPhysicalIndex in entPhysicalTable in the ENTITY-MIB. If it is SWProcess(3), the value corresponds to an entry in the cOutageCpmMapTable, which correlates the object with cpmCPUTotalIndex and cpmProcessPID in cpmProcessTable in the CISCO-PROCESS-MIB. If it is remoteObject(4), the value corresponds to an entry in the cOutageRemoteObjMapTable, which correlates the object with its ID and description. If it is logicalEntity(5), the value corresponds to an entry in the cOutageLogicalObjMapTable, which correlates the object with the description.')
cOutageCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageCurrentStatus.setStatus('current')
if mibBuilder.loadTexts: cOutageCurrentStatus.setDescription('The current operational state of the monitored object. The Up(1) state indicates that the monitored object is actively or passively running in the normal condition. The Down(2) state indicates that the monitored object is experiencing some degree of outage.')
cOutageAOTSinceMeasureStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageAOTSinceMeasureStarted.setStatus('current')
if mibBuilder.loadTexts: cOutageAOTSinceMeasureStarted.setDescription('The total outage time in second of a component from the beginning of the measurement. The table stores the outage time up to the last recovery event. However, a request comes in during the down status of a component, the report adds the outage time between the last failure to the current.')
cOutageNAFSinceMeasureStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageNAFSinceMeasureStarted.setStatus('current')
if mibBuilder.loadTexts: cOutageNAFSinceMeasureStarted.setDescription('The total number of failure instances from the beginning of the measurement. Every failure event of a component adds 1 to this object.')
cOutageRecordingStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 4, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageRecordingStartTime.setStatus('current')
if mibBuilder.loadTexts: cOutageRecordingStartTime.setDescription('This object specifies the date and time of the object to start outage recording. The instance value of this cOutageRecordingStartTime value is initialized to the time when the monitored object is added into this cOutageObjectTable.')
cOutageCpmMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5, 1), )
if mibBuilder.loadTexts: cOutageCpmMapTable.setStatus('current')
if mibBuilder.loadTexts: cOutageCpmMapTable.setDescription('A table containing information about cOutageMonitoredObjectIndex value mapping, when the cOutageObjectType is swProcess. Each conceptual row specifies a unique mapping between a cOutageMonitoredObjectIndex value, and cpmCPUTotalIndex and cpmProcessPID in cpmProcessTable in the CISCO-PROCESS-MIB.')
cOutageCpmMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageCpmMapIndex"))
if mibBuilder.loadTexts: cOutageCpmMapEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageCpmMapEntry.setDescription('A mapping between an object index and a pair of cpm indexes.')
cOutageCpmMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cOutageCpmMapIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageCpmMapIndex.setDescription('This object uniquely identifies cpmCPUTotalIndex and cpmProcessPID in CISCO-PROCESS-MIB. The cpmCPUTotalIndex is used for the cpmCPUTotalTable reference. A pair of { cpmCPUTotalIndex, cpmProcessPID } is used for the cpmProcessTable reference.')
cOutageCpmCPUTotalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageCpmCPUTotalIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageCpmCPUTotalIndex.setDescription('An index that uniquely represents a CPU in cpmCPUTotalTable in CISCO-PROCESS-MIB.')
cOutageCpmProcessPID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageCpmProcessPID.setStatus('current')
if mibBuilder.loadTexts: cOutageCpmProcessPID.setDescription('This object contains the process ID. It identifies an entry combined with cpmCPUTotalIndex in cpmProcessTable in CISCO-PROCESS-MIB.')
cOutageRemoteObjMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1), )
if mibBuilder.loadTexts: cOutageRemoteObjMapTable.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjMapTable.setDescription('A table containing information about cOutageMonitoredObjectIndex value mapping, when the cOutageObjectType is remoteObject. Each conceptual row specifies a unique mapping between a cOutageMonitoredObjectIndex value, and a remote object related information such as the object ID and the object description. Using IP ICMP protocol to monitor the remote object, the object ID can be Network Layer Address, which has been configured by users via configuration file or CLI.')
cOutageRemoteObjMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageRemoteObjMapIndex"))
if mibBuilder.loadTexts: cOutageRemoteObjMapEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjMapEntry.setDescription('A mapping between a remote object and a remote object description.')
cOutageRemoteObjMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cOutageRemoteObjMapIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjMapIndex.setDescription('This object uniquely identifies a remote object description.')
cOutageRemoteObjIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageRemoteObjIDType.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjIDType.setDescription('Represents the type of address stored in cOutageRemoteObjID.')
cOutageRemoteObjID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageRemoteObjID.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjID.setDescription('This object represents the Network Layer Address of the remote object, which is configured by users via configuration file or CLI. It could be an IP address or DNS depends on users input.')
cOutageRemoteObjDescrText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 6, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageRemoteObjDescrText.setStatus('current')
if mibBuilder.loadTexts: cOutageRemoteObjDescrText.setDescription('This object specifies a human-readable message describing information about the monitored remote components such as router name or interface name, etc.')
cOutageLogicalObjMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 7, 1), )
if mibBuilder.loadTexts: cOutageLogicalObjMapTable.setStatus('current')
if mibBuilder.loadTexts: cOutageLogicalObjMapTable.setDescription('A table containing information about cOutageMonitoredObjectIndex value mapping, when the cOutageObjectType is logicalEntity. Each conceptual row specifies a unique mapping between a cOutageMonitoredObjectIndex value, and a logical entity object related information such as the object description.')
cOutageLogicalObjMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-OUTAGE-MONITOR-MIB", "cOutageLogicalObjMapIndex"))
if mibBuilder.loadTexts: cOutageLogicalObjMapEntry.setStatus('current')
if mibBuilder.loadTexts: cOutageLogicalObjMapEntry.setDescription('A mapping between a logical entity object and a logical entity object description.')
cOutageLogicalObjMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cOutageLogicalObjMapIndex.setStatus('current')
if mibBuilder.loadTexts: cOutageLogicalObjMapIndex.setDescription('This object uniquely identifies a logical entity object description.')
cOutageLogicalObjDescrText = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 280, 1, 7, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cOutageLogicalObjDescrText.setStatus('current')
if mibBuilder.loadTexts: cOutageLogicalObjDescrText.setDescription('This object specifies a human-readable message describing a detailed information about the monitored logical entity.')
ciscoOutageMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 2))
ciscoOutageMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 2, 0))
ciscoOutageEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 280, 2, 0, 1)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventObjectType"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventMonObjectIndex"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTypeIndex"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTime"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventInterval"))
if mibBuilder.loadTexts: ciscoOutageEvent.setStatus('current')
if mibBuilder.loadTexts: ciscoOutageEvent.setDescription('The agent generates this notification when an outage related event on a monitored object is detected. The sending of this notification can be enabled/disabled via the cOutageNotificationsEnabled object.')
ciscoOutageMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 3))
ciscoOutageMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 1))
ciscoOutageMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2))
ciscoOutageMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 1, 1)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "ciscoOutageBasicGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoEventHistoryGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoEventDescrGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoObjectOutageGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoCpmMappingGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoRmtMappingGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoOutageNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOutageMIBCompliance = ciscoOutageMIBCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoOutageMIBCompliance.setDescription('The compliance statement for Cisco agents which implement the Cisco Outage MIB. This is deprecated and new compliance ciscoOutageMIBComplianceRev1 is added.')
ciscoOutageMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 1, 2)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "ciscoOutageBasicGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoEventHistoryGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoEventDescrGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoObjectOutageGroupRev"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoCpmMappingGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoRmtMappingGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoLntMappingGroup"), ("CISCO-OUTAGE-MONITOR-MIB", "ciscoOutageNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOutageMIBComplianceRev1 = ciscoOutageMIBComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoOutageMIBComplianceRev1.setDescription('The compliance statement for Cisco agents which implement the Cisco Outage MIB.')
ciscoOutageBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 1)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageApplVersion"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageNotificationsSent"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageNotificationsEnabled"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageNotificationFilterEnabled"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageFilteredEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOutageBasicGroup = ciscoOutageBasicGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoOutageBasicGroup.setDescription('A collection of managed objects providing basic outage notification and configuration information including notification status and event filtering status.')
ciscoEventHistoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 2)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageHistTableSize"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageHistMsgsFlushed"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventObjectType"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventMonObjectIndex"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTypeIndex"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTime"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEventHistoryGroup = ciscoEventHistoryGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoEventHistoryGroup.setDescription('A collection of managed objects providing detected outage related event history information.')
ciscoEventDescrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 3)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTypeName"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageEventTypeDescrText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoEventDescrGroup = ciscoEventDescrGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoEventDescrGroup.setDescription('A collection of managed objects defining the description of outage related events.')
ciscoObjectOutageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 4)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageCurrentStatus"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageAOTSinceMeasureStarted"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageNAFSinceMeasureStarted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoObjectOutageGroup = ciscoObjectOutageGroup.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoObjectOutageGroup.setDescription('A collection of managed objects providing accumulated outage data. This group is deprecated in favour of ciscoObjectOutageGroupRev.')
ciscoCpmMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 5)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageCpmCPUTotalIndex"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageCpmProcessPID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCpmMappingGroup = ciscoCpmMappingGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoCpmMappingGroup.setDescription('A collection of managed objects defining the mapping of two cpm indexes.')
ciscoRmtMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 6)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageRemoteObjIDType"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageRemoteObjID"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageRemoteObjDescrText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRmtMappingGroup = ciscoRmtMappingGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoRmtMappingGroup.setDescription('A collection of managed objects defining the description of remote objects.')
ciscoOutageNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 7)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "ciscoOutageEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoOutageNotificationsGroup = ciscoOutageNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoOutageNotificationsGroup.setDescription('A collection of notifications.')
ciscoObjectOutageGroupRev = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 8)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageCurrentStatus"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageRecordingStartTime"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageAOTSinceMeasureStarted"), ("CISCO-OUTAGE-MONITOR-MIB", "cOutageNAFSinceMeasureStarted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoObjectOutageGroupRev = ciscoObjectOutageGroupRev.setStatus('current')
if mibBuilder.loadTexts: ciscoObjectOutageGroupRev.setDescription('A collection of managed objects providing accumulated outage data information.')
ciscoLntMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 280, 3, 2, 9)).setObjects(("CISCO-OUTAGE-MONITOR-MIB", "cOutageLogicalObjDescrText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLntMappingGroup = ciscoLntMappingGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoLntMappingGroup.setDescription('A managed object defining the description of logical entity objects.')
mibBuilder.exportSymbols("CISCO-OUTAGE-MONITOR-MIB", cOutageObjectEntry=cOutageObjectEntry, cOutageEventIndex=cOutageEventIndex, cOutageHistory=cOutageHistory, cOutageLntMapping=cOutageLntMapping, cOutageNAFSinceMeasureStarted=cOutageNAFSinceMeasureStarted, cOutageRemoteObjIDType=cOutageRemoteObjIDType, ciscoOutageMIBGroups=ciscoOutageMIBGroups, ciscoCpmMappingGroup=ciscoCpmMappingGroup, cOutageRmtMapping=cOutageRmtMapping, ciscoEventHistoryGroup=ciscoEventHistoryGroup, cOutageCpmMapTable=cOutageCpmMapTable, cOutageEventTypeName=cOutageEventTypeName, cOutageLogicalObjDescrText=cOutageLogicalObjDescrText, cOutageEventTypeMapEntry=cOutageEventTypeMapEntry, cOutageBasicInfo=cOutageBasicInfo, ciscoOutageMIBNotifications=ciscoOutageMIBNotifications, ciscoOutageMIBCompliance=ciscoOutageMIBCompliance, cOutageRemoteObjMapEntry=cOutageRemoteObjMapEntry, ciscoOutageEvent=ciscoOutageEvent, ciscoLntMappingGroup=ciscoLntMappingGroup, cOutageEventMonObjectIndex=cOutageEventMonObjectIndex, PYSNMP_MODULE_ID=ciscoOutageMIB, ciscoObjectOutageGroup=ciscoObjectOutageGroup, cOutageDescription=cOutageDescription, cOutageMonObject=cOutageMonObject, cOutageObjectTable=cOutageObjectTable, cOutageHistoryTable=cOutageHistoryTable, cOutageObjectType=cOutageObjectType, cOutageAOTSinceMeasureStarted=cOutageAOTSinceMeasureStarted, cOutageEventTypeIndex=cOutageEventTypeIndex, ciscoOutageMIBObjects=ciscoOutageMIBObjects, cOutageRemoteObjDescrText=cOutageRemoteObjDescrText, ciscoOutageNotificationsGroup=ciscoOutageNotificationsGroup, cOutageMonitoredObjectIndex=cOutageMonitoredObjectIndex, cOutageFilteredEvents=cOutageFilteredEvents, ciscoObjectOutageGroupRev=ciscoObjectOutageGroupRev, cOutageLogicalObjMapTable=cOutageLogicalObjMapTable, cOutageCpmMapping=cOutageCpmMapping, cOutageRemoteObjMapIndex=cOutageRemoteObjMapIndex, cOutageHistoryEntry=cOutageHistoryEntry, cOutageRemoteObjMapTable=cOutageRemoteObjMapTable, ciscoOutageMIBNotificationPrefix=ciscoOutageMIBNotificationPrefix, ciscoOutageMIBComplianceRev1=ciscoOutageMIBComplianceRev1, cOutageNotificationsEnabled=cOutageNotificationsEnabled, cOutageCpmMapIndex=cOutageCpmMapIndex, cOutageLogicalObjMapIndex=cOutageLogicalObjMapIndex, cOutageEventTypeMapTable=cOutageEventTypeMapTable, ciscoOutageMIBCompliances=ciscoOutageMIBCompliances, cOutageHistMsgsFlushed=cOutageHistMsgsFlushed, cOutageCurrentStatus=cOutageCurrentStatus, ciscoOutageBasicGroup=ciscoOutageBasicGroup, cOutageCpmProcessPID=cOutageCpmProcessPID, cOutageHistTableSize=cOutageHistTableSize, OutageMonObjectType=OutageMonObjectType, cOutageEventInterval=cOutageEventInterval, cOutageRecordingStartTime=cOutageRecordingStartTime, cOutageCpmMapEntry=cOutageCpmMapEntry, ciscoOutageMIBConformance=ciscoOutageMIBConformance, cOutageEventTime=cOutageEventTime, cOutageApplVersion=cOutageApplVersion, ciscoRmtMappingGroup=ciscoRmtMappingGroup, cOutageNotificationFilterEnabled=cOutageNotificationFilterEnabled, ciscoEventDescrGroup=ciscoEventDescrGroup, cOutageNotificationsSent=cOutageNotificationsSent, cOutageEventObjectType=cOutageEventObjectType, cOutageEventTypeDescrText=cOutageEventTypeDescrText, cOutageCpmCPUTotalIndex=cOutageCpmCPUTotalIndex, cOutageRemoteObjID=cOutageRemoteObjID, ciscoOutageMIB=ciscoOutageMIB, cOutageEventTypeMapIndex=cOutageEventTypeMapIndex, cOutageLogicalObjMapEntry=cOutageLogicalObjMapEntry)
