#
# PySNMP MIB module HH3C-UI-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-UI-MAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:30:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Integer32, IpAddress, TimeTicks, iso, Counter32, Counter64, NotificationType, ModuleIdentity, Gauge32, Unsigned32, MibIdentifier, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "TimeTicks", "iso", "Counter32", "Counter64", "NotificationType", "ModuleIdentity", "Gauge32", "Unsigned32", "MibIdentifier", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hh3cUIMgt = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 2))
if mibBuilder.loadTexts: hh3cUIMgt.setLastUpdated('200404081405Z')
if mibBuilder.loadTexts: hh3cUIMgt.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cUIMgt.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip:100085 ')
if mibBuilder.loadTexts: hh3cUIMgt.setDescription('User interfaces management MIB')
hh3cUIMgtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1))
hh3cUIBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1))
hh3cUIScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 1))
hh3cUITrapBindObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 2))
hh3cTerminalUserName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 2, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cTerminalUserName.setStatus('current')
if mibBuilder.loadTexts: hh3cTerminalUserName.setDescription(' It represents the name of the logging user when login with authentication, otherwise login mode, such as Console, AUX, TTY, VTY etc. ')
hh3cTerminalSource = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cTerminalSource.setStatus('current')
if mibBuilder.loadTexts: hh3cTerminalSource.setDescription(' Login mode, such as Console, AUX, TTY, VTY etc. ')
hh3cTerminalUserAuthFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("exceedRetries", 1), ("authTimeout", 2), ("otherReason", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cTerminalUserAuthFailureReason.setStatus('current')
if mibBuilder.loadTexts: hh3cTerminalUserAuthFailureReason.setDescription('The reason why a user failed to log in.')
hh3cUINotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 3))
hh3cUINotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 3, 0))
hh3cLogIn = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 3, 0, 1)).setObjects(("HH3C-UI-MAN-MIB", "hh3cTerminalUserName"), ("HH3C-UI-MAN-MIB", "hh3cTerminalSource"))
if mibBuilder.loadTexts: hh3cLogIn.setStatus('current')
if mibBuilder.loadTexts: hh3cLogIn.setDescription(' This notification is generated when a user logs in. ')
hh3cLogOut = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 3, 0, 2)).setObjects(("HH3C-UI-MAN-MIB", "hh3cTerminalUserName"), ("HH3C-UI-MAN-MIB", "hh3cTerminalSource"))
if mibBuilder.loadTexts: hh3cLogOut.setStatus('current')
if mibBuilder.loadTexts: hh3cLogOut.setDescription(' This notification is generated when a user logs out. ')
hh3cLogInAuthenFailure = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 1, 3, 0, 3)).setObjects(("HH3C-UI-MAN-MIB", "hh3cTerminalUserName"), ("HH3C-UI-MAN-MIB", "hh3cTerminalSource"), ("HH3C-UI-MAN-MIB", "hh3cTerminalUserAuthFailureReason"))
if mibBuilder.loadTexts: hh3cLogInAuthenFailure.setStatus('current')
if mibBuilder.loadTexts: hh3cLogInAuthenFailure.setDescription(' This notification is generated when a user fails to log in because of authentication. ')
hh3cVtyMan = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2))
hh3cVtyAccTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cVtyAccTable.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccTable.setDescription('Description.')
hh3cVtyAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-UI-MAN-MIB", "hh3cVtyAccUserIndex"), (0, "HH3C-UI-MAN-MIB", "hh3cVtyAccConnway"))
if mibBuilder.loadTexts: hh3cVtyAccEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccEntry.setDescription('Description.')
hh3cVtyAccUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hh3cVtyAccUserIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccUserIndex.setDescription(' The relative index of the user interface of vty. ')
hh3cVtyAccConnway = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 11, 12))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("linkinbound", 3), ("acl6inbound", 11), ("acl6outbound", 12))))
if mibBuilder.loadTexts: hh3cVtyAccConnway.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccConnway.setDescription(' inbound(1):Filter login connections from current UI with ipv4 layer acl. outbound(2):Filter logout connections from current UI with ipv4 layer acl. linkinbound(3):Filter login connections from current UI with link layer acl. acl6inbound(11):Filter login connections from current UI with ipv6 layer acl. acl6outbound(12):Filter logout connections from current UI with ipv6 layer acl. ')
hh3cVtyAccAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVtyAccAclNum.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccAclNum.setDescription(' The filter rule number of ACL. ')
hh3cVtyAccEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 2, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cVtyAccEntryRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cVtyAccEntryRowStatus.setDescription(' The status of this conceptual row. Now only support CreateAndGo and Destroy and Active. ')
hh3cConStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 3))
hh3cConStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cConStatusTable.setStatus('current')
if mibBuilder.loadTexts: hh3cConStatusTable.setDescription(' The current status of CONSOLE user interface. A group of attributes are used to describe the current status. ')
hh3cConStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-UI-MAN-MIB", "hh3cConUserIndex"))
if mibBuilder.loadTexts: hh3cConStatusEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cConStatusEntry.setDescription(' An entry of hh3cConStatusTable. ')
hh3cConUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cConUserIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cConUserIndex.setDescription(" The index of the user interface of CONSOLE. It's equal to current UserID. ")
hh3cConReAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 2, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cConReAuth.setStatus('current')
if mibBuilder.loadTexts: hh3cConReAuth.setDescription(' The re-authentication attribute of current user interface. After disconnection of current user interface, connection is rebuilt, at the moment disable(1): re-authentication is not need. enable(2): re-authentication is need. ')
hh3cUIMgtMIBConformance18 = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2))
hh3cUIMgtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2, 1))
hh3cUIMgtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2, 1, 1)).setObjects(("HH3C-UI-MAN-MIB", "hh3cUIMgtBasicGroup"), ("HH3C-UI-MAN-MIB", "hh3cConStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cUIMgtMIBCompliance = hh3cUIMgtMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: hh3cUIMgtMIBCompliance.setDescription('The compliance statement')
hh3cUIMgtManMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2, 2))
hh3cUIMgtBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2, 2, 1)).setObjects(("HH3C-UI-MAN-MIB", "hh3cVtyAccAclNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cUIMgtBasicGroup = hh3cUIMgtBasicGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cUIMgtBasicGroup.setDescription('A collection of objects for a basic implement.')
hh3cConStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 2, 2, 2, 2)).setObjects(("HH3C-UI-MAN-MIB", "hh3cConReAuth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cConStatusGroup = hh3cConStatusGroup.setStatus('current')
if mibBuilder.loadTexts: hh3cConStatusGroup.setDescription('A collection of current user interface status.')
mibBuilder.exportSymbols("HH3C-UI-MAN-MIB", hh3cConReAuth=hh3cConReAuth, hh3cTerminalSource=hh3cTerminalSource, hh3cUIMgtManMIBGroups=hh3cUIMgtManMIBGroups, hh3cUIMgtMIBCompliances=hh3cUIMgtMIBCompliances, hh3cUIMgtBasicGroup=hh3cUIMgtBasicGroup, hh3cVtyAccEntry=hh3cVtyAccEntry, hh3cConStatus=hh3cConStatus, hh3cVtyAccTable=hh3cVtyAccTable, hh3cUINotificationsPrefix=hh3cUINotificationsPrefix, hh3cUIScalarObjects=hh3cUIScalarObjects, hh3cVtyAccUserIndex=hh3cVtyAccUserIndex, hh3cUITrapBindObjects=hh3cUITrapBindObjects, hh3cUINotifications=hh3cUINotifications, hh3cConUserIndex=hh3cConUserIndex, hh3cLogOut=hh3cLogOut, hh3cLogInAuthenFailure=hh3cLogInAuthenFailure, hh3cTerminalUserAuthFailureReason=hh3cTerminalUserAuthFailureReason, hh3cVtyAccEntryRowStatus=hh3cVtyAccEntryRowStatus, hh3cUIMgtMIBCompliance=hh3cUIMgtMIBCompliance, hh3cUIMgt=hh3cUIMgt, hh3cVtyAccConnway=hh3cVtyAccConnway, hh3cUIMgtMIBConformance18=hh3cUIMgtMIBConformance18, hh3cUIMgtObjects=hh3cUIMgtObjects, hh3cTerminalUserName=hh3cTerminalUserName, hh3cConStatusEntry=hh3cConStatusEntry, hh3cVtyAccAclNum=hh3cVtyAccAclNum, hh3cConStatusGroup=hh3cConStatusGroup, hh3cConStatusTable=hh3cConStatusTable, hh3cVtyMan=hh3cVtyMan, hh3cUIBasicInfo=hh3cUIBasicInfo, hh3cLogIn=hh3cLogIn, PYSNMP_MODULE_ID=hh3cUIMgt)
