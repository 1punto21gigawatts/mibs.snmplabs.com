#
# PySNMP MIB module EXTREME-UPM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-UPM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:09:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
mib_2, Gauge32, Bits, ObjectIdentity, MibIdentifier, Integer32, Unsigned32, iso, Counter64, TimeTicks, IpAddress, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "Gauge32", "Bits", "ObjectIdentity", "MibIdentifier", "Integer32", "Unsigned32", "iso", "Counter64", "TimeTicks", "IpAddress", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
extremeUpm = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 35))
if mibBuilder.loadTexts: extremeUpm.setLastUpdated('200402140000Z')
if mibBuilder.loadTexts: extremeUpm.setOrganization('Extreme Networks, Inc.')
if mibBuilder.loadTexts: extremeUpm.setContactInfo('www.extremenetworks.com')
if mibBuilder.loadTexts: extremeUpm.setDescription('Extreme universal port management mib')
upmNotificationTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 35, 1))
upmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2))
upmProfileEventExecution = NotificationType((1, 3, 6, 1, 4, 1, 1916, 1, 35, 1, 1)).setObjects(("EXTREME-UPM-MIB", "upmProfileName"), ("EXTREME-UPM-MIB", "upmExecutionId"), ("EXTREME-UPM-MIB", "upmEventType"), ("EXTREME-UPM-MIB", "upmExecutionStatus"), ("EXTREME-UPM-MIB", "upmPort"), ("EXTREME-UPM-MIB", "upmProfileExecVars"), ("EXTREME-UPM-MIB", "upmTimerName"))
if mibBuilder.loadTexts: upmProfileEventExecution.setStatus('current')
if mibBuilder.loadTexts: upmProfileEventExecution.setDescription('This trap will be generated, when a profile is executed.')
upmProfileName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmProfileName.setStatus('current')
if mibBuilder.loadTexts: upmProfileName.setDescription('The textual string identifying the name of the profile.')
upmExecutionId = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967296))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmExecutionId.setStatus('current')
if mibBuilder.loadTexts: upmExecutionId.setDescription('The value uniquely identifies the execution of a UPM profile. Switch stores history of 100 last run executions.')
upmEventType = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7))).clone(namedValues=NamedValues(("devicedetect", 1), ("deviceundetect", 2), ("userauthenticated", 3), ("userunauthenticated", 4), ("upmTimer", 5), ("userrequest", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmEventType.setStatus('current')
if mibBuilder.loadTexts: upmEventType.setDescription('The type of the event that triggered the profile execution.')
upmExecutionStatus = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmExecutionStatus.setStatus('current')
if mibBuilder.loadTexts: upmExecutionStatus.setDescription('The state of the profile execution.')
upmPort = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967296))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmPort.setStatus('current')
if mibBuilder.loadTexts: upmPort.setDescription('The ifIndex of the port on which the profile was run. Is non-zero only when there is a valid port associated when the profile was run with the event. For ex: When a timer fires, the port may not be valid parameter')
upmProfileExecVars = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmProfileExecVars.setStatus('current')
if mibBuilder.loadTexts: upmProfileExecVars.setDescription('The textual string identifying the variables that were set when executing the profile.')
upmTimerName = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 35, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: upmTimerName.setStatus('current')
if mibBuilder.loadTexts: upmTimerName.setDescription('The textual string identifying the timer fired when executing the profile.')
mibBuilder.exportSymbols("EXTREME-UPM-MIB", upmEventType=upmEventType, upmExecutionStatus=upmExecutionStatus, upmConfig=upmConfig, upmExecutionId=upmExecutionId, upmNotificationTrap=upmNotificationTrap, upmProfileName=upmProfileName, upmPort=upmPort, PYSNMP_MODULE_ID=extremeUpm, extremeUpm=extremeUpm, upmTimerName=upmTimerName, upmProfileEventExecution=upmProfileEventExecution, upmProfileExecVars=upmProfileExecVars)
