#
# PySNMP MIB module ONEACCESS-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-ATM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:34:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
AtmVcIdentifier, AtmVpIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVcIdentifier", "AtmVpIdentifier")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
oacMIBModules, oacExpIMAtmStatistics = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacMIBModules", "oacExpIMAtmStatistics")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Unsigned32, Counter32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Integer32, ObjectIdentity, Gauge32, MibIdentifier, Bits, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Integer32", "ObjectIdentity", "Gauge32", "MibIdentifier", "Bits", "TimeTicks", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
oacAtmMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 667))
oacAtmMIBModule.setRevisions(('2011-10-27 00:00', '2010-07-08 00:01',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: oacAtmMIBModule.setRevisionsDescriptions(('Fixed some minor corrections.', 'This MIB module describes ATM Management objects.',))
if mibBuilder.loadTexts: oacAtmMIBModule.setLastUpdated('201110270000Z')
if mibBuilder.loadTexts: oacAtmMIBModule.setOrganization(' OneAccess ')
if mibBuilder.loadTexts: oacAtmMIBModule.setContactInfo('Pascal KESTELOOT Postal: ONE ACCESS 381 Avenue du Gnral de Gaulle 92140 Clamart, France FRANCE Tel: (+33) 01 41 87 70 00 Fax: (+33) 01 41 87 74 00 E-mail: pascal.kesteloot@oneaccess-net.com')
if mibBuilder.loadTexts: oacAtmMIBModule.setDescription('Contact updated')
oacAtmStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1))
oacAtmStatNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 2))
oacAtmStatConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3))
oacAtmChannelTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1), )
if mibBuilder.loadTexts: oacAtmChannelTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmChannelTable.setDescription('The table representing the oacAtmChannel')
oacAtmChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmChannelEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmChannelEntry.setDescription('An index into the table oacAtmChannelTable')
oacAtmChanVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: oacAtmChanVpi.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanVpi.setDescription(' Virtual Path Id for the connexion')
oacAtmChanVci = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 2), AtmVcIdentifier())
if mibBuilder.loadTexts: oacAtmChanVci.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanVci.setDescription(' Virtual Channel Id for the connexion')
oacAtmChanTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxBytes.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanTxBytes.setDescription(' Total transmitted UINT8s counter')
oacAtmChanTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxCells.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanTxCells.setDescription(' Total transmitted cells counter')
oacAtmChanRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxBytes.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanRxBytes.setDescription(' Total received UINT8s counter')
oacAtmChanRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxCells.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanRxCells.setDescription(' Total received cells counter')
oacAtmChanRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanRxErrors.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanRxErrors.setDescription(' Total receive errors counter. For AAL0: counts number of CRC10 errors. For AAL1: counts number of SN errors. For AA5: counts frames with errors')
oacAtmChanTxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmChanTxOverflows.setStatus('current')
if mibBuilder.loadTexts: oacAtmChanTxOverflows.setDescription(' Transmit overflow counter. It counts the number of frames discarded due to transmit queue overflow or transmit BD overflow for AAL5 and AAL1 channels and the number of cells discarded due to the same reasons for AAL0 channels')
oacAtmAal0ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2), )
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatTable.setDescription(' The table representing oacAtmAal0ChannelGlobalStats')
oacAtmAal0ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal0ChannelGlobalStatEntry.setDescription('An index into the table oacAtmAal0ChannelGlobalStatTable')
oacAtmAal0ChanRxCellsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal0ChanRxCellsDiscarded.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal0ChanRxCellsDiscarded.setDescription('Cells discarded due to busy condition counter')
oacAtmAal1ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3), )
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatTable.setDescription('An index into the table oacAtmAal1ChannelGlobalStatTable')
oacAtmAal1ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal1ChannelGlobalStatEntry.setDescription('An index into the table oacAtmAal1ChannelGlobalStatTable')
oacAtmAal1ChanTxUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal1ChanTxUnderflows.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal1ChanTxUnderflows.setDescription('Transmit buffer underflows counter')
oacAtmAal1ChanRxOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal1ChanRxOverflows.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal1ChanRxOverflows.setDescription('Receive buffer overflows counter')
oacAtmAal5ChannelGlobalStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4), )
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatTable.setDescription('An index into the table oacAtmAal5ChannelGlobalStatEntry')
oacAtmAal5ChannelGlobalStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVpi"), (0, "ONEACCESS-ATM-MIB", "oacAtmChanVci"))
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChannelGlobalStatEntry.setDescription('An index into the table oacAtmAal5ChannelGlobalStatEntry')
oacAtmAal5ChanTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanTxFrames.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanTxFrames.setDescription('Total AAL5 transmitted frames counter')
oacAtmAal5ChanRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanRxFrames.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanRxFrames.setDescription('Total AAL5 received frames counter')
oacAtmAal5ChanRxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanRxFramesDiscarded.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanRxFramesDiscarded.setDescription('Total AAL5 receive frames discarded counter')
oacAtmAal5ChanCrc32Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanCrc32Errors.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanCrc32Errors.setDescription('AAL5 frames with CRC32 error counter')
oacAtmAal5ChanLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanLengthErrors.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanLengthErrors.setDescription('AAL5 frames with length error counter')
oacAtmAal5ChanReassemblyTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5ChanReassemblyTimeouts.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5ChanReassemblyTimeouts.setDescription('AAL5 reassembling timeouts counter')
oacAtmPortStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5), )
if mibBuilder.loadTexts: oacAtmPortStatTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortStatTable.setDescription('An entry into the table oacAtmPortStatEntry')
oacAtmPortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacAtmPortStatEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortStatEntry.setDescription('An entry into the table oacAtmPortStatEntry')
oacAtmPortTxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortTxCells.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortTxCells.setDescription('Total transmitted cells for ATM port counter')
oacAtmPortRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortRxCells.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortRxCells.setDescription('Total received cells for ATM port counter')
oacAtmPortRxCellsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortRxCellsDiscarded.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortRxCellsDiscarded.setDescription('Receive cells discarded counter. Cells discarded due to: UTOPIA errors, header validation (mis-insertion), CRC10 error for AAL5-ABR channels')
oacAtmPortHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmPortHecErrors.setStatus('current')
if mibBuilder.loadTexts: oacAtmPortHecErrors.setDescription('Cells received with HEC error counter')
oacAtmAal5PortStatTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6), )
if mibBuilder.loadTexts: oacAtmAal5PortStatTable.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortStatTable.setDescription('An entry into the table oacAtmAal5PortStatTable')
oacAtmAal5PortStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacAtmAal5PortStatEntry.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortStatEntry.setDescription('An entry into the table oacAtmAal5PortStatTable')
oacAtmAal5PortTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxBytes.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortTxBytes.setDescription('Total transmitted bytes counter')
oacAtmAal5PortTxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxFrames.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortTxFrames.setDescription('Total transmitted frames counter')
oacAtmAal5PortTxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortTxFramesDiscarded.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortTxFramesDiscarded.setDescription('Transmit frames discarded counter (due to transmit queue overflow)')
oacAtmAal5PortRxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxBytes.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortRxBytes.setDescription('Total received bytes counter')
oacAtmAal5PortRxFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxFrames.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortRxFrames.setDescription('Total received frames counter')
oacAtmAal5PortRxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxErrors.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortRxErrors.setDescription('Total receive errors counter (CRC32 errors, length errors, RAS timeouts)')
oacAtmAal5PortRxFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacAtmAal5PortRxFramesDiscarded.setStatus('current')
if mibBuilder.loadTexts: oacAtmAal5PortRxFramesDiscarded.setDescription('Total receive frames discarded counter')
oacAtmStatGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 1))
oacAtmStatCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 2))
oacAtmStatCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 2, 1)).setObjects(("ONEACCESS-ATM-MIB", "oacAtmStatGeneralGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmStatCompliance = oacAtmStatCompliance.setStatus('current')
if mibBuilder.loadTexts: oacAtmStatCompliance.setDescription('The compliance statement for agents that support the OA-ATM-MIB.')
oacAtmStatGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 2, 1, 3, 1, 1)).setObjects(("ONEACCESS-ATM-MIB", "oacAtmChanTxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmChanTxCells"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxCells"), ("ONEACCESS-ATM-MIB", "oacAtmChanRxErrors"), ("ONEACCESS-ATM-MIB", "oacAtmChanTxOverflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal0ChanRxCellsDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal1ChanTxUnderflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal1ChanRxOverflows"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanTxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanRxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanRxFramesDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanCrc32Errors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanLengthErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5ChanReassemblyTimeouts"), ("ONEACCESS-ATM-MIB", "oacAtmPortTxCells"), ("ONEACCESS-ATM-MIB", "oacAtmPortRxCells"), ("ONEACCESS-ATM-MIB", "oacAtmPortRxCellsDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmPortHecErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortTxFramesDiscarded"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxBytes"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxFrames"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxErrors"), ("ONEACCESS-ATM-MIB", "oacAtmAal5PortRxFramesDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacAtmStatGeneralGroup = oacAtmStatGeneralGroup.setStatus('current')
if mibBuilder.loadTexts: oacAtmStatGeneralGroup.setDescription('This group is mandatory for all ATM entities.')
mibBuilder.exportSymbols("ONEACCESS-ATM-MIB", oacAtmChannelTable=oacAtmChannelTable, oacAtmChanRxBytes=oacAtmChanRxBytes, oacAtmChanTxOverflows=oacAtmChanTxOverflows, oacAtmStatGroups=oacAtmStatGroups, oacAtmChanRxCells=oacAtmChanRxCells, oacAtmAal5PortTxFramesDiscarded=oacAtmAal5PortTxFramesDiscarded, oacAtmChanVpi=oacAtmChanVpi, oacAtmPortStatTable=oacAtmPortStatTable, oacAtmPortStatEntry=oacAtmPortStatEntry, oacAtmPortTxCells=oacAtmPortTxCells, oacAtmAal5PortRxFramesDiscarded=oacAtmAal5PortRxFramesDiscarded, oacAtmAal0ChannelGlobalStatEntry=oacAtmAal0ChannelGlobalStatEntry, oacAtmStatGeneralGroup=oacAtmStatGeneralGroup, oacAtmAal1ChanRxOverflows=oacAtmAal1ChanRxOverflows, oacAtmChanVci=oacAtmChanVci, oacAtmAal0ChannelGlobalStatTable=oacAtmAal0ChannelGlobalStatTable, oacAtmAal5ChannelGlobalStatTable=oacAtmAal5ChannelGlobalStatTable, oacAtmChannelEntry=oacAtmChannelEntry, PYSNMP_MODULE_ID=oacAtmMIBModule, oacAtmPortHecErrors=oacAtmPortHecErrors, oacAtmAal5PortTxFrames=oacAtmAal5PortTxFrames, oacAtmAal5ChanTxFrames=oacAtmAal5ChanTxFrames, oacAtmStatCompliances=oacAtmStatCompliances, oacAtmAal5PortTxBytes=oacAtmAal5PortTxBytes, oacAtmAal5PortRxBytes=oacAtmAal5PortRxBytes, oacAtmAal5ChanCrc32Errors=oacAtmAal5ChanCrc32Errors, oacAtmAal5ChanLengthErrors=oacAtmAal5ChanLengthErrors, oacAtmStatConformance=oacAtmStatConformance, oacAtmAal5PortRxErrors=oacAtmAal5PortRxErrors, oacAtmStatNotifications=oacAtmStatNotifications, oacAtmAal5PortRxFrames=oacAtmAal5PortRxFrames, oacAtmMIBModule=oacAtmMIBModule, oacAtmAal5ChanReassemblyTimeouts=oacAtmAal5ChanReassemblyTimeouts, oacAtmPortRxCells=oacAtmPortRxCells, oacAtmChanTxCells=oacAtmChanTxCells, oacAtmPortRxCellsDiscarded=oacAtmPortRxCellsDiscarded, oacAtmAal5PortStatEntry=oacAtmAal5PortStatEntry, oacAtmChanRxErrors=oacAtmChanRxErrors, oacAtmAal1ChannelGlobalStatEntry=oacAtmAal1ChannelGlobalStatEntry, oacAtmStatObjects=oacAtmStatObjects, oacAtmAal5PortStatTable=oacAtmAal5PortStatTable, oacAtmChanTxBytes=oacAtmChanTxBytes, oacAtmAal5ChannelGlobalStatEntry=oacAtmAal5ChannelGlobalStatEntry, oacAtmAal1ChanTxUnderflows=oacAtmAal1ChanTxUnderflows, oacAtmAal0ChanRxCellsDiscarded=oacAtmAal0ChanRxCellsDiscarded, oacAtmStatCompliance=oacAtmStatCompliance, oacAtmAal1ChannelGlobalStatTable=oacAtmAal1ChannelGlobalStatTable, oacAtmAal5ChanRxFrames=oacAtmAal5ChanRxFrames, oacAtmAal5ChanRxFramesDiscarded=oacAtmAal5ChanRxFramesDiscarded)
