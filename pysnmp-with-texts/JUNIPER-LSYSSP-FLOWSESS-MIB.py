#
# PySNMP MIB module JUNIPER-LSYSSP-FLOWSESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-FLOWSESS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:59:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
jnxLsysSpFlowsess, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpFlowsess")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Integer32, Counter64, Gauge32, Bits, IpAddress, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, TimeTicks, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "Counter64", "Gauge32", "Bits", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "TimeTicks", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLsysSpFlowsessMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1))
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setContactInfo('Juniper Technical Assistance Center Juniper Networks, Inc. 1194 N. Mathilda Avenue Sunnyvale, CA 94089 E-mail: support@juniper.net HTTP://www.juniper.net')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMIB.setDescription('This module defines the flow-session-specific MIB for Juniper Enterprise Logical-System (LSYS) security profiles. Juniper documentation is recommended as the reference. The LSYS security profile provides various static and dynamic resource management by observing resource quota limits. Security flow-session resource is the focus in this MIB. ')
jnxLsysSpFlowsessObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1))
jnxLsysSpFlowsessSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2))
jnxLsysSpFlowsessTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpFlowsessTable.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessTable.setDescription('LSYSPROFILE flow-session objects for flow-session resource consumption per LSYS.')
jnxLsysSpFlowsessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-FLOWSESS-MIB", "jnxLsysSpFlowsessLsysName"))
if mibBuilder.loadTexts: jnxLsysSpFlowsessEntry.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessEntry.setDescription('An entry in flow-session resource table.')
jnxLsysSpFlowsessLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpFlowsessLsysName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessLsysName.setDescription('The name of the logical system for which flow-session resource information is retrieved. ')
jnxLsysSpFlowsessProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessProfileName.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessProfileName.setDescription('The security profile name string for the LSYS.')
jnxLsysSpFlowsessUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsage.setDescription('The current resource usage count for the LSYS.')
jnxLsysSpFlowsessReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessReserved.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessReserved.setDescription('The reserved resource count for the LSYS.')
jnxLsysSpFlowsessMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaximum.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaximum.setDescription('The maximum allowed resource usage count for the LSYS.')
jnxLsysSpFlowsessUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsedAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessUsedAmount.setDescription('The flow-session resource consumption over all LSYS.')
jnxLsysSpFlowsessMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaxQuota.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessMaxQuota.setDescription('The flow-session resource maximum quota for the whole device for all LSYS.')
jnxLsysSpFlowsessAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessAvailableAmount.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessAvailableAmount.setDescription('The flow-session resource available in the whole device.')
jnxLsysSpFlowsessHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUsage.setDescription('The most amount of flow-session resource consumed of a LSYS.')
jnxLsysSpFlowsessHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessHeaviestUser.setDescription('The LSYS name that consume the most flow-session resource.')
jnxLsysSpFlowsessLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUsage.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUsage.setDescription('The least amount of flow-session resource consumed of a LSYS.')
jnxLsysSpFlowsessLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 6, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUser.setStatus('current')
if mibBuilder.loadTexts: jnxLsysSpFlowsessLightestUser.setDescription('The LSYS name that consume the least flow-session resource.')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-FLOWSESS-MIB", jnxLsysSpFlowsessUsedAmount=jnxLsysSpFlowsessUsedAmount, jnxLsysSpFlowsessTable=jnxLsysSpFlowsessTable, jnxLsysSpFlowsessAvailableAmount=jnxLsysSpFlowsessAvailableAmount, jnxLsysSpFlowsessUsage=jnxLsysSpFlowsessUsage, PYSNMP_MODULE_ID=jnxLsysSpFlowsessMIB, jnxLsysSpFlowsessProfileName=jnxLsysSpFlowsessProfileName, jnxLsysSpFlowsessHeaviestUsage=jnxLsysSpFlowsessHeaviestUsage, jnxLsysSpFlowsessMaxQuota=jnxLsysSpFlowsessMaxQuota, jnxLsysSpFlowsessHeaviestUser=jnxLsysSpFlowsessHeaviestUser, jnxLsysSpFlowsessLightestUsage=jnxLsysSpFlowsessLightestUsage, jnxLsysSpFlowsessSummary=jnxLsysSpFlowsessSummary, jnxLsysSpFlowsessLightestUser=jnxLsysSpFlowsessLightestUser, jnxLsysSpFlowsessEntry=jnxLsysSpFlowsessEntry, jnxLsysSpFlowsessMaximum=jnxLsysSpFlowsessMaximum, jnxLsysSpFlowsessObjects=jnxLsysSpFlowsessObjects, jnxLsysSpFlowsessReserved=jnxLsysSpFlowsessReserved, jnxLsysSpFlowsessLsysName=jnxLsysSpFlowsessLsysName, jnxLsysSpFlowsessMIB=jnxLsysSpFlowsessMIB)
