#
# PySNMP MIB module SAVI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SAVI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:00:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetVersion, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetVersion", "InetAddressType")
ip, = mibBuilder.importSymbols("IP-MIB", "ip")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
NotificationType, MibIdentifier, Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, TimeTicks, IpAddress, ModuleIdentity, Integer32, Gauge32, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "TimeTicks", "IpAddress", "ModuleIdentity", "Integer32", "Gauge32", "Bits", "Counter32")
TimeInterval, DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
saviMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 4, 40))
if mibBuilder.loadTexts: saviMIB.setLastUpdated('201003080037Z')
if mibBuilder.loadTexts: saviMIB.setOrganization('IETF SAVI Working Group')
if mibBuilder.loadTexts: saviMIB.setContactInfo('Changqing An Postal: Network Research Center, Tsinghua University Beijing 100084 China Email: acq@tsinghua.edu.cn')
if mibBuilder.loadTexts: saviMIB.setDescription('The MIB Module for managing SAVI implementations.')
saviObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 4, 40, 1))
saviObjectsSystemTable = MibTable((1, 3, 6, 1, 2, 1, 4, 40, 1, 1), )
if mibBuilder.loadTexts: saviObjectsSystemTable.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemTable.setDescription('The table containing savi system-wide parameters.')
saviObjectsSystemEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 40, 1, 1, 1), ).setIndexNames((0, "SAVI-MIB", "saviObjectsSystemIPVersion"))
if mibBuilder.loadTexts: saviObjectsSystemEntry.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemEntry.setDescription('Each entry containing savi system-wide parameters for a particular IP version.')
saviObjectsSystemIPVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 1, 1, 1), InetVersion())
if mibBuilder.loadTexts: saviObjectsSystemIPVersion.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemIPVersion.setDescription('The IP version ')
saviObjectsSystemMode = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("savi-disable", 1), ("savi-default", 2), ("savi-dhcp-only", 3), ("savi-slaac-only", 4), ("savi-dhcp-slaac-mix", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsSystemMode.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemMode.setDescription('IP Address Assignment Methods. ')
saviObjectsSystemMaxDadDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 1, 1, 3), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsSystemMaxDadDelay.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemMaxDadDelay.setDescription('A constant. When A gratuitous ARP Request or Duplicate Address Detection Neighbor Solicitation is received from anchor, the lifetime of the BST(Binding State Table) entry MUST be set to be MAX_ARP_DELAY or MAX_DAD_DELAY respectively.')
saviObjectsSystemMaxDadPrepareDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 1, 1, 4), TimeInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsSystemMaxDadPrepareDelay.setStatus('current')
if mibBuilder.loadTexts: saviObjectsSystemMaxDadPrepareDelay.setDescription('A constant. When a DHCPv4 DHCPACK or DHCPv6 REPLY message is received, the lifetime of the BST(Binding State Table) entry MUST be set to be MAX_ARP_PREPARE_DELAY or MAX_DAD_PREPARE_DELAY respectively.')
saviObjectsIfTable = MibTable((1, 3, 6, 1, 2, 1, 4, 40, 1, 2), )
if mibBuilder.loadTexts: saviObjectsIfTable.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfTable.setDescription('The table containing SAVI running parameters of each anchor.')
saviObjectsIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1), ).setIndexNames((0, "SAVI-MIB", "saviObjectsIfIPVersion"), (0, "SAVI-MIB", "saviObjectsIfIfIndex"))
if mibBuilder.loadTexts: saviObjectsIfEntry.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfEntry.setDescription('An entry containing SAVI running parameters of an anchor.')
saviObjectsIfIPVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1, 1), InetVersion())
if mibBuilder.loadTexts: saviObjectsIfIPVersion.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfIPVersion.setDescription('The IP version ')
saviObjectsIfIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: saviObjectsIfIfIndex.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
saviObjectsIfValidationStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsIfValidationStatus.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfValidationStatus.setDescription("The validation status of the interface. enable(1), check source address. disable(2), don't check source address. ")
saviObjectsIfTrustStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("no-trust", 1), ("dhcp-trust", 2), ("ra-trust", 3), ("dhcp-ra-trust", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsIfTrustStatus.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfTrustStatus.setDescription('The trust status of the interface. no-trust(1), discard dhcp adv/reply and ra packet, dhcp-trust(2), permit dhcp adv/reply packet and discard ra packet, ra-trust(3), permit ra packet and discard dhcp adv/reply packet, dhcp-ra-trust(4), permit dhcp adv/reply and ra packet. ')
saviObjectsIfFilteringNum = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saviObjectsIfFilteringNum.setStatus('current')
if mibBuilder.loadTexts: saviObjectsIfFilteringNum.setDescription('The max filtering number of the Interface')
saviObjectsBindingTable = MibTable((1, 3, 6, 1, 2, 1, 4, 40, 1, 3), )
if mibBuilder.loadTexts: saviObjectsBindingTable.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingTable.setDescription('The Binding State Table containing the state of binding between source address and anchor.')
saviObjectsBindingEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1), ).setIndexNames((0, "SAVI-MIB", "saviObjectsBindingIpAddressType"), (0, "SAVI-MIB", "saviObjectsBindingType"), (0, "SAVI-MIB", "saviObjectsBindingIfIndex"), (0, "SAVI-MIB", "saviObjectsBindingIpAddress"))
if mibBuilder.loadTexts: saviObjectsBindingEntry.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingEntry.setDescription('An entry containing the state of binding between source address and anchor. Entries are keyed on the anchor, binding type, source IP address version, and source IP address.')
saviObjectsBindingIpAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: saviObjectsBindingIpAddressType.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingIpAddressType.setDescription('IP address type of the binding source IP')
saviObjectsBindingType = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("slaac", 2), ("dhcp", 3))))
if mibBuilder.loadTexts: saviObjectsBindingType.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingType.setDescription('IP address assignment methods.')
saviObjectsBindingIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: saviObjectsBindingIfIndex.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
saviObjectsBindingIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 4), InetAddress())
if mibBuilder.loadTexts: saviObjectsBindingIpAddress.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingIpAddress.setDescription('The binding source IP address')
saviObjectsBindingMacAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saviObjectsBindingMacAddr.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingMacAddr.setDescription('The binding source mac address.')
saviObjectsBindingState = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("start", 1), ("live", 2), ("detection", 3), ("query", 4), ("bound", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saviObjectsBindingState.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingState.setDescription('The state of the binding entry. ')
saviObjectsBindingLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 7), TimeInterval()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saviObjectsBindingLifetime.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingLifetime.setDescription('The remaining lifetime of the entry. If saviObjectsBindingType=static, a value of 2147483647 represents infinity.')
saviObjectsBindingRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: saviObjectsBindingRowStatus.setStatus('current')
if mibBuilder.loadTexts: saviObjectsBindingRowStatus.setDescription('The status of this row, by which new entries may be created, or old entries deleted from this table. An Entry can be created or deleted only when saviObjectsBindingType=static.')
saviObjectsFilteringTable = MibTable((1, 3, 6, 1, 2, 1, 4, 40, 1, 4), )
if mibBuilder.loadTexts: saviObjectsFilteringTable.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringTable.setDescription('The Filtering Table is used to filter packets.')
saviObjectsFilteringEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 40, 1, 4, 1), ).setIndexNames((0, "SAVI-MIB", "saviObjectsFilteringIpAddressType"), (0, "SAVI-MIB", "saviObjectsFilteringIfIndex"), (0, "SAVI-MIB", "saviObjectsFilteringIpAddress"))
if mibBuilder.loadTexts: saviObjectsFilteringEntry.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringEntry.setDescription('An entry containing the filtering parameters. Entries are keyed on the anchor.')
saviObjectsFilteringIpAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: saviObjectsFilteringIpAddressType.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringIpAddressType.setDescription('IP address type of the filtering source IP')
saviObjectsFilteringIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 4, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: saviObjectsFilteringIfIndex.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringIfIndex.setDescription("The index value that uniquely identifies the interface to which this entry is applicable. The interface identified by a particular value of this index is the same interface as identified by the same value of the IF-MIB's ifIndex.")
saviObjectsFilteringIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 4, 1, 3), InetAddress())
if mibBuilder.loadTexts: saviObjectsFilteringIpAddress.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringIpAddress.setDescription('The filtering source IP address')
saviObjectsFilteringMacAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 40, 1, 4, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saviObjectsFilteringMacAddr.setStatus('current')
if mibBuilder.loadTexts: saviObjectsFilteringMacAddr.setDescription('The filtering source mac address.')
saviConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 4, 40, 2))
saviCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 4, 40, 2, 1))
saviCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 4, 40, 2, 1, 1)).setObjects(("SAVI-MIB", "systemGroup"), ("SAVI-MIB", "ifGroup"), ("SAVI-MIB", "bindingGroup"), ("SAVI-MIB", "filteringGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    saviCompliance = saviCompliance.setStatus('current')
if mibBuilder.loadTexts: saviCompliance.setDescription('The compliance statement for entities which implement SAVI.')
saviGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 4, 40, 2, 2))
systemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 4, 40, 2, 2, 1)).setObjects(("SAVI-MIB", "saviObjectsSystemMode"), ("SAVI-MIB", "saviObjectsSystemMaxDadDelay"), ("SAVI-MIB", "saviObjectsSystemMaxDadPrepareDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    systemGroup = systemGroup.setStatus('current')
if mibBuilder.loadTexts: systemGroup.setDescription('The system group of objects containing savi system parameter.')
ifGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 4, 40, 2, 2, 2)).setObjects(("SAVI-MIB", "saviObjectsIfValidationStatus"), ("SAVI-MIB", "saviObjectsIfTrustStatus"), ("SAVI-MIB", "saviObjectsIfFilteringNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ifGroup = ifGroup.setStatus('current')
if mibBuilder.loadTexts: ifGroup.setDescription('The if group of objects containing the savi running parameters of each anchor.')
bindingGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 4, 40, 2, 2, 3)).setObjects(("SAVI-MIB", "saviObjectsBindingMacAddr"), ("SAVI-MIB", "saviObjectsBindingState"), ("SAVI-MIB", "saviObjectsBindingLifetime"), ("SAVI-MIB", "saviObjectsBindingRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bindingGroup = bindingGroup.setStatus('current')
if mibBuilder.loadTexts: bindingGroup.setDescription('The binding group of objects containing the binding information of anchor and soure ip address. ')
filteringGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 4, 40, 2, 2, 4)).setObjects(("SAVI-MIB", "saviObjectsFilteringMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    filteringGroup = filteringGroup.setStatus('current')
if mibBuilder.loadTexts: filteringGroup.setDescription('The filtering group of objects containing the filtering information of anchor and soure ip address. ')
mibBuilder.exportSymbols("SAVI-MIB", saviObjectsFilteringTable=saviObjectsFilteringTable, saviObjectsBindingState=saviObjectsBindingState, saviObjectsBindingType=saviObjectsBindingType, PYSNMP_MODULE_ID=saviMIB, ifGroup=ifGroup, saviObjectsBindingLifetime=saviObjectsBindingLifetime, filteringGroup=filteringGroup, saviCompliances=saviCompliances, saviObjectsIfTable=saviObjectsIfTable, saviGroups=saviGroups, saviObjectsIfIfIndex=saviObjectsIfIfIndex, saviObjectsSystemMaxDadDelay=saviObjectsSystemMaxDadDelay, saviObjectsBindingIpAddress=saviObjectsBindingIpAddress, saviObjectsBindingIpAddressType=saviObjectsBindingIpAddressType, saviObjectsFilteringIfIndex=saviObjectsFilteringIfIndex, saviObjectsIfFilteringNum=saviObjectsIfFilteringNum, saviCompliance=saviCompliance, saviObjectsBindingEntry=saviObjectsBindingEntry, saviObjectsFilteringIpAddress=saviObjectsFilteringIpAddress, saviObjectsBindingTable=saviObjectsBindingTable, saviObjectsFilteringEntry=saviObjectsFilteringEntry, saviObjectsBindingMacAddr=saviObjectsBindingMacAddr, saviObjectsSystemEntry=saviObjectsSystemEntry, saviMIB=saviMIB, saviObjects=saviObjects, saviObjectsSystemIPVersion=saviObjectsSystemIPVersion, saviObjectsSystemMode=saviObjectsSystemMode, saviObjectsIfValidationStatus=saviObjectsIfValidationStatus, saviObjectsSystemMaxDadPrepareDelay=saviObjectsSystemMaxDadPrepareDelay, saviObjectsSystemTable=saviObjectsSystemTable, saviObjectsFilteringIpAddressType=saviObjectsFilteringIpAddressType, saviConformance=saviConformance, saviObjectsFilteringMacAddr=saviObjectsFilteringMacAddr, saviObjectsBindingRowStatus=saviObjectsBindingRowStatus, systemGroup=systemGroup, saviObjectsIfEntry=saviObjectsIfEntry, saviObjectsBindingIfIndex=saviObjectsBindingIfIndex, saviObjectsIfTrustStatus=saviObjectsIfTrustStatus, saviObjectsIfIPVersion=saviObjectsIfIPVersion, bindingGroup=bindingGroup)
