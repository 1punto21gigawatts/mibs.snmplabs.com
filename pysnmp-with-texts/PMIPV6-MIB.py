#
# PySNMP MIB module PMIPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PMIPV6-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:41:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
Ipv6AddressIfIdentifierTC, = mibBuilder.importSymbols("IP-MIB", "Ipv6AddressIfIdentifierTC")
mip6BindingCacheEntry, mip6MnBLEntry = mibBuilder.importSymbols("MOBILEIPV6-MIB", "mip6BindingCacheEntry", "mip6MnBLEntry")
Pmip6MnInterfaceATT, Pmip6MnLLIndex, Pmip6MnLLIdentifier, Pmip6TimeStamp64, Pmip6MnIndex, Pmip6MnIdentifier = mibBuilder.importSymbols("PMIPV6-TC-MIB", "Pmip6MnInterfaceATT", "Pmip6MnLLIndex", "Pmip6MnLLIdentifier", "Pmip6TimeStamp64", "Pmip6MnIndex", "Pmip6MnIdentifier")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
mib_2, TimeTicks, Counter32, Gauge32, Integer32, Counter64, ObjectIdentity, NotificationType, ModuleIdentity, iso, IpAddress, MibIdentifier, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "TimeTicks", "Counter32", "Gauge32", "Integer32", "Counter64", "ObjectIdentity", "NotificationType", "ModuleIdentity", "iso", "IpAddress", "MibIdentifier", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TextualConvention, PhysAddress, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "PhysAddress", "TimeStamp", "DisplayString")
pmip6MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 206))
pmip6MIB.setRevisions(('2012-05-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: pmip6MIB.setRevisionsDescriptions(('Initial version, published as RFC 6475.',))
if mibBuilder.loadTexts: pmip6MIB.setLastUpdated('201205070000Z')
if mibBuilder.loadTexts: pmip6MIB.setOrganization('IETF NETLMM Working Group')
if mibBuilder.loadTexts: pmip6MIB.setContactInfo(' Glenn Mansfield Keeni Postal: Cyber Solutions, Inc. 6-6-3, Minami Yoshinari Aoba-ku, Sendai 989-3204, Japan. Tel: +81-22-303-4012 Fax: +81-22-303-4015 EMail: glenn@cysols.com Kazuhide Koide Postal: KDDI Corporation GARDEN AIR TOWER 3-10-10, Iidabashi Chiyoda-ku, Tokyo 102-8460, Japan. Tel: +81-3-6678-3378 EMail: ka-koide@kddi.com Sri Gundavelli Postal: Cisco 170 W.Tasman Drive, San Jose, CA 95134 USA Tel: +1-408-527-6109 EMail: sgundave@cisco.com Ryuji Wakikawa Postal: TOYOTA InfoTechnology Center, U.S.A., Inc. 465 Bernardo Avenue Mountain View, CA 94043 USA EMail: ryuji@us.toyota-itc.com Support Group EMail: netlmm@ietf.org')
if mibBuilder.loadTexts: pmip6MIB.setDescription("The MIB module for monitoring and controlling PMIPv6 entities. Copyright (c) 2012 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). ")
pmip6Notifications = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 0))
pmip6Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1))
pmip6Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 2))
pmip6Core = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1))
pmip6Mag = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 2))
pmip6Lma = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 3))
pmip6System = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1, 1))
pmip6Bindings = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1, 2))
pmip6Conf = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1, 3))
pmip6Stats = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1, 4))
pmip6MagSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 2, 1))
pmip6MagConf = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 2, 2))
pmip6MagRegistration = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 2, 3))
pmip6LmaSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 3, 1))
pmip6LmaConf = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 3, 2))
pmip6BindingRegCounters = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1))
pmip6Capabilities = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("mobilityAccessGateway", 0), ("localMobilityAnchor", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6Capabilities.setReference('RFC 6275: Sections 3.2, 4.1')
if mibBuilder.loadTexts: pmip6Capabilities.setStatus('current')
if mibBuilder.loadTexts: pmip6Capabilities.setDescription('This object indicates the PMIPv6 functions that are supported by this managed entity. Multiple Proxy Mobile IPv6 functions may be supported by a single entity. mobilityAccessGateway(0) indicates the availability of the mobility access gateway function. localMobilityAnchor(1) indicates the availability of the local mobility anchor function. ')
pmip6MobileNodeGeneratedTimestampInUse = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6MobileNodeGeneratedTimestampInUse.setReference('RFC 5213: Sections 5.5, 9.3')
if mibBuilder.loadTexts: pmip6MobileNodeGeneratedTimestampInUse.setStatus('current')
if mibBuilder.loadTexts: pmip6MobileNodeGeneratedTimestampInUse.setDescription("This flag indicates whether or not the MN-generated timestamp mechanism is in use in that Proxy Mobile IPv6 domain. true(1) indicates that the local mobility anchors and mobile access gateways in that Proxy Mobile IPv6 domain apply the MN-generated timestamp considerations. false(0) indicates that the MN-generated timestamp mechanism is not in use in that Proxy Mobile IPv6 domain. The default value for this flag is 'false'. ")
pmip6FixedMagLinkLocalAddressOnAllAccessLinksType = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 3, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6FixedMagLinkLocalAddressOnAllAccessLinksType.setStatus('current')
if mibBuilder.loadTexts: pmip6FixedMagLinkLocalAddressOnAllAccessLinksType.setDescription('The InetAddressType of the pmip6FixedMagLinkLocalAddressOnAllAccessLinks that follows. ')
pmip6FixedMagLinkLocalAddressOnAllAccessLinks = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 3, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6FixedMagLinkLocalAddressOnAllAccessLinks.setReference('RFC 5213: Sections 2.2, 6.8, 6.9.1.1, 6.9.3, 9.3')
if mibBuilder.loadTexts: pmip6FixedMagLinkLocalAddressOnAllAccessLinks.setStatus('current')
if mibBuilder.loadTexts: pmip6FixedMagLinkLocalAddressOnAllAccessLinks.setDescription('This variable indicates the link-local address value that all the mobile access gateways should use on any of the access links shared with any of the mobile nodes in that Proxy Mobile IPv6 domain. If this variable is initialized with all zeroes, it implies that the use of fixed link-local address mode is not enabled for that Proxy Mobile IPv6 domain.')
pmip6FixedMagLinkLayerAddressOnAllAccessLinks = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 3, 4), PhysAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6FixedMagLinkLayerAddressOnAllAccessLinks.setReference('RFC 5213: Sections 6.9.3, 9.3')
if mibBuilder.loadTexts: pmip6FixedMagLinkLayerAddressOnAllAccessLinks.setStatus('current')
if mibBuilder.loadTexts: pmip6FixedMagLinkLayerAddressOnAllAccessLinks.setDescription('This variable indicates the link-layer address value that all the mobile access gateways should use on any of the access links shared with any of the mobile nodes in that Proxy Mobile IPv6 domain. For access technologies where there is no link-layer address, this variable MUST be initialized with all zeroes. ')
pmip6MagStatus = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6MagStatus.setStatus('current')
if mibBuilder.loadTexts: pmip6MagStatus.setDescription('This object indicates whether the PMIPv6 mobile access gateway function is enabled for the managed entity. Changing the status from enabled(1) to disabled(2) will terminate the PMIPv6 mobile access gateway function. On the other hand, changing the status from disabled(2) to enabled(1) will start the PMIPv6 mobile access gateway function. The value of this object MUST remain unchanged across reboots of the managed entity. ')
pmip6MagProxyCOATable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 2), )
if mibBuilder.loadTexts: pmip6MagProxyCOATable.setReference('RFC 5213: Sections 2.2, 6.10')
if mibBuilder.loadTexts: pmip6MagProxyCOATable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProxyCOATable.setDescription('This table models the Proxy Care-of Addresses configured on the egress interfaces of the mobile access gateway. This address is the transport endpoint of the tunnel between the local mobility anchor and the mobile access gateway. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6MagProxyCOAEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 2, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6MagProxyCOAType"), (0, "PMIPV6-MIB", "pmip6MagProxyCOA"))
if mibBuilder.loadTexts: pmip6MagProxyCOAEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProxyCOAEntry.setDescription('This entry represents a conceptual row in the Proxy-CoA table. It represents a Proxy Care-of Address on the mobile access gateway. Implementers need to be aware that if the total number of octets in pmip6MagProxyCOA exceeds 113, then OIDs of column instances in this row will have more than 128 sub-identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3. ')
pmip6MagProxyCOAType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pmip6MagProxyCOAType.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProxyCOAType.setDescription('The InetAddressType of the pmip6MagProxyCOA that follows. ')
pmip6MagProxyCOA = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: pmip6MagProxyCOA.setReference('RFC 5213: Sections 2.2, 6.10')
if mibBuilder.loadTexts: pmip6MagProxyCOA.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProxyCOA.setDescription('The Proxy-CoA configured on the egress interface of the mobile access gateway. The type of the address represented by this object is specified by the corresponding pmip6MagProxyCOAType object. ')
pmip6MagProxyCOAState = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("activated", 2), ("tunneled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagProxyCOAState.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProxyCOAState.setDescription('This object indicates the state of the Proxy-CoA: unknown -- The state of the Proxy-CoA cannot be determined. activated -- The Proxy-CoA is ready to establish a tunnel. This state SHOULD be indicated when the MAG is up but has no mobile node. tunneled -- Bidirectional tunnel is established using the Proxy-CoA. ')
pmip6MagEnableMagLocalRouting = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6MagEnableMagLocalRouting.setReference('RFC 5213: Section 9.2')
if mibBuilder.loadTexts: pmip6MagEnableMagLocalRouting.setStatus('current')
if mibBuilder.loadTexts: pmip6MagEnableMagLocalRouting.setDescription("This flag indicates whether or not the mobile access gateway is allowed to enable local routing of the traffic exchanged between a visiting mobile node and a correspondent node that is locally connected to one of the interfaces of the mobile access gateway. The correspondent node can be another visiting mobile node as well, or a local fixed node. true(1) indicates that the mobile access gateway routes the traffic locally. false(0) indicates that the mobile access gateway reverse tunnels all the traffic to the mobile node's local mobility anchor. The default value for this flag is 'false'. ")
pmip6MagMnIdentifierTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 2), )
if mibBuilder.loadTexts: pmip6MagMnIdentifierTable.setReference('RFC 5213: Sections 2.2, 6.1')
if mibBuilder.loadTexts: pmip6MagMnIdentifierTable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnIdentifierTable.setDescription('A table containing the identifiers of mobile nodes attached to the MAG. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6MagMnIdentifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 2, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6MagBLMnIndex"))
if mibBuilder.loadTexts: pmip6MagMnIdentifierEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnIdentifierEntry.setDescription('An entry in the mobile node identifier table. ')
pmip6MagMnIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 2, 1, 1), Pmip6MnIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagMnIdentifier.setReference('RFC 5213: Sections 2.2, 6.1')
if mibBuilder.loadTexts: pmip6MagMnIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnIdentifier.setDescription('The identity of a mobile node in the Proxy Mobile IPv6 domain. ')
pmip6MagMnLLIdentifierTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 3), )
if mibBuilder.loadTexts: pmip6MagMnLLIdentifierTable.setReference('RFC 5213: Sections 2.2, 6.1')
if mibBuilder.loadTexts: pmip6MagMnLLIdentifierTable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnLLIdentifierTable.setDescription('A table containing the link-layer identifiers of the interfaces of the mobile nodes attached to the MAG. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6MagMnLLIdentifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 3, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6MagBLMnIndex"), (0, "PMIPV6-MIB", "pmip6MagBLMnLLIndex"))
if mibBuilder.loadTexts: pmip6MagMnLLIdentifierEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnLLIdentifierEntry.setDescription('An entry in the mobile node link-layer identifier table. ')
pmip6MagMnLLIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 3, 1, 1), Pmip6MnLLIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagMnLLIdentifier.setReference('RFC 5213: Sections 2.2, 6.1')
if mibBuilder.loadTexts: pmip6MagMnLLIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnLLIdentifier.setDescription("The link-layer identifier of the mobile node's connected interface on the access link. ")
pmip6MagHomeNetworkPrefixTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4), )
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixTable.setReference('RFC 5213: Sections 2, 6.1, 6.2')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixTable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixTable.setDescription('A table representing the home network prefixes assigned to the connected interfaces of mobile nodes attached to the MAG. ')
pmip6MagHomeNetworkPrefixEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6MagBLMnIndex"), (0, "PMIPV6-MIB", "pmip6MagBLMnLLIndex"), (0, "PMIPV6-MIB", "pmip6MagHomeNetworkPrefixType"), (0, "PMIPV6-MIB", "pmip6MagHomeNetworkPrefix"))
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixEntry.setDescription('An entry in the home network prefixes table. Implementers need to be aware that if the total number of octets in pmip6MagHomeNetworkPrefix exceeds 111, then OIDs of column instances in this row will have more than 128 sub-identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3. ')
pmip6MagHomeNetworkPrefixType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixType.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixType.setDescription('The InetAddressType of the pmip6MagHomeNetworkPrefix that follows. ')
pmip6MagHomeNetworkPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefix.setReference('RFC 5213: Section 2')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefix.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefix.setDescription('The mobile network prefix that is delegated to the mobile node. The type of the address represented by this object is specified by the corresponding pmip6MagHomeNetworkPrefixType object. ')
pmip6MagHomeNetworkPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4, 1, 3), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixLength.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixLength.setDescription('The prefix length of the home network prefix. ')
pmip6MagHomeNetworkPrefixLifeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 2, 4, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixLifeTime.setReference('RFC 5213: Sections 6.2, 6.7')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixLifeTime.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeNetworkPrefixLifeTime.setDescription('The lifetime parameter (in seconds) that will be advertised in Router Advertisements by the MAG for this home network prefix. ')
pmip6MagBLTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1), )
if mibBuilder.loadTexts: pmip6MagBLTable.setReference('RFC 6275: Sections 4.5, 11.1 RFC 5213: Section 6.1')
if mibBuilder.loadTexts: pmip6MagBLTable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLTable.setDescription('This table corresponds to the Binding Update List (BL) that includes PMIPv6-related information and is maintained by the mobile access gateway. Entries from the table are deleted as the lifetime of the binding expires. ')
pmip6MagBLEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1), )
mip6MnBLEntry.registerAugmentions(("PMIPV6-MIB", "pmip6MagBLEntry"))
pmip6MagBLEntry.setIndexNames(*mip6MnBLEntry.getIndexNames())
if mibBuilder.loadTexts: pmip6MagBLEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLEntry.setDescription('An entry containing additional information from a Binding Update sent by the mobile access gateway to the local mobility anchor. ')
pmip6MagBLFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLFlag.setReference('RFC 5213: Section 8.1')
if mibBuilder.loadTexts: pmip6MagBLFlag.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLFlag.setDescription('true(1) indicates that the mobile access gateway sent the Proxy Binding Update with Proxy Registration Flag that indicates to the local mobility anchor that the registration is the Proxy Binding Update and is from a mobile access gateway. false(0) implies that the mobile access gateway is behaving as a simple mobile node. ')
pmip6MagBLMnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 2), Pmip6MnIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMnIndex.setReference('RFC 5213: Sections 2.2, 6.1, 8.1')
if mibBuilder.loadTexts: pmip6MagBLMnIndex.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMnIndex.setDescription('The index to the identifier of the attached mobile node in the pmip6MagMnIdentifierTable. ')
pmip6MagBLMnLLIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 3), Pmip6MnLLIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMnLLIndex.setReference('RFC 5213: Sections 2.2, 6.1, 8.1')
if mibBuilder.loadTexts: pmip6MagBLMnLLIndex.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMnLLIndex.setDescription("The index to the link-layer identifier of the mobile node's connected interface in the pmip6MagMnLLIdentifierTable. ")
pmip6MagBLMagLinkLocalAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMagLinkLocalAddressType.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMagLinkLocalAddressType.setDescription('The InetAddressType of the pmip6MagBLMagLinkLocalAddress that follows. ')
pmip6MagBLMagLinkLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMagLinkLocalAddress.setReference('RFC 3963: Sections 4.1, 5.1')
if mibBuilder.loadTexts: pmip6MagBLMagLinkLocalAddress.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMagLinkLocalAddress.setDescription('The link-local address of the mobile access gateway on the access link shared with the mobile node. This is the address that is present in the Link-local Address option of the corresponding Proxy Binding Update message. ')
pmip6MagBLMagIfIdentifierToMn = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 6), Ipv6AddressIfIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMagIfIdentifierToMn.setReference('RFC 5213: Sections 6.1, 8.1')
if mibBuilder.loadTexts: pmip6MagBLMagIfIdentifierToMn.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMagIfIdentifierToMn.setDescription('The interface identifier (if-id) of the point-to-point link between the mobile node and the mobile access gateway. This is internal to the mobile access gateway and is used to associate the Proxy Mobile IPv6 tunnel to the access link where the mobile node is attached. ')
pmip6MagBLTunnelIfIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 7), Ipv6AddressIfIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLTunnelIfIdentifier.setReference('RFC 5213: Sections 6.1, 8.1')
if mibBuilder.loadTexts: pmip6MagBLTunnelIfIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLTunnelIfIdentifier.setDescription("The tunnel interface identifier (tunnel-if-id) of the bidirectional tunnel between the mobile node's local mobility anchor and the mobile access gateway. This is internal to the mobile access gateway. The tunnel interface identifier is acquired during the tunnel creation. ")
pmip6MagBLMnInterfaceATT = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 8), Pmip6MnInterfaceATT()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLMnInterfaceATT.setReference('RFC 5213: Sections 6.9.1.1, 6.9.1.5, 8.1')
if mibBuilder.loadTexts: pmip6MagBLMnInterfaceATT.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLMnInterfaceATT.setDescription('The type of the access technology by which the mobile node is currently attached to the mobile access gateway. ')
pmip6MagBLTimeRecentlyAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 1, 1, 9), Pmip6TimeStamp64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagBLTimeRecentlyAccepted.setReference('RFC 5213: Sections 5.1, 8.1')
if mibBuilder.loadTexts: pmip6MagBLTimeRecentlyAccepted.setStatus('current')
if mibBuilder.loadTexts: pmip6MagBLTimeRecentlyAccepted.setDescription('The 64-bit timestamp value of the most recently accepted Proxy Binding Update message sent for this mobile node. This is the time of day on the mobile access gateway, when the Proxy Binding Acknowledgement message with the Status field set to 0 was received. If the Timestamp option is not present in the Proxy Binding Update message (i.e., when the sequence-number-based scheme is in use), the value MUST be initialized with all zeroes. ')
pmip6MagMnProfileTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2), )
if mibBuilder.loadTexts: pmip6MagMnProfileTable.setReference('RFC 5213: Section 6.2')
if mibBuilder.loadTexts: pmip6MagMnProfileTable.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnProfileTable.setDescription("This table corresponds to the mobile node's policy profile that includes the essential operational parameters that are required by the network entities for managing the mobile node's mobility service. It contains policy profiles of mobile nodes that are connected to the mobile access gateway. Entries in this table are not required to survive a reboot of the managed entity. ")
pmip6MagMnProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6MagProfMnIndex"))
if mibBuilder.loadTexts: pmip6MagMnProfileEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6MagMnProfileEntry.setDescription("An entry containing information about the mobile node's policy profile. ")
pmip6MagProfMnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2, 1, 1), Pmip6MnIndex())
if mibBuilder.loadTexts: pmip6MagProfMnIndex.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProfMnIndex.setDescription('The index for a mobile node in the Proxy Mobile IPv6 domain. ')
pmip6MagProfMnIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2, 1, 2), Pmip6MnIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagProfMnIdentifier.setReference('RFC 5213: Section 2.2')
if mibBuilder.loadTexts: pmip6MagProfMnIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProfMnIdentifier.setDescription('The identity of a mobile node in the Proxy Mobile IPv6 domain. ')
pmip6MagProfMnLocalMobilityAnchorAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagProfMnLocalMobilityAnchorAddressType.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProfMnLocalMobilityAnchorAddressType.setDescription('The InetAddressType of the pmip6MagMnLocalMobilityAnchorAddress that follows. ')
pmip6MagProfMnLocalMobilityAnchorAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 2, 3, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagProfMnLocalMobilityAnchorAddress.setReference('RFC 5213: Section 2.2')
if mibBuilder.loadTexts: pmip6MagProfMnLocalMobilityAnchorAddress.setStatus('current')
if mibBuilder.loadTexts: pmip6MagProfMnLocalMobilityAnchorAddress.setDescription('The global address that is configured on the interface of the local mobility anchor and is the transport endpoint of the bidirectional tunnel established between the local mobility anchor and the mobile access gateway. This is the address to which the mobile access gateway sends the Proxy Binding Update messages. ')
pmip6BindingCacheTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1), )
if mibBuilder.loadTexts: pmip6BindingCacheTable.setReference('RFC 6275: Sections 4.5, 9.1, 10.1 RFC 5213: Section 5.1')
if mibBuilder.loadTexts: pmip6BindingCacheTable.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingCacheTable.setDescription('This table models the Binding Cache on the local mobility anchor. Entries from the table are deleted as the lifetime of the binding expires. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6BindingCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1), )
mip6BindingCacheEntry.registerAugmentions(("PMIPV6-MIB", "pmip6BindingCacheEntry"))
pmip6BindingCacheEntry.setIndexNames(*mip6BindingCacheEntry.getIndexNames())
if mibBuilder.loadTexts: pmip6BindingCacheEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingCacheEntry.setDescription('An entry containing additional information contained in the Binding Cache table of the local mobility anchor. ')
pmip6BindingPBUFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingPBUFlag.setReference('RFC 5213: Sections 5.1, 8.1')
if mibBuilder.loadTexts: pmip6BindingPBUFlag.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingPBUFlag.setDescription('true(1) indicates that the local mobility anchor accepted the binding update with Proxy Registration Flag from a mobile access gateway. false(0) implies that the binding cache is from a mobile node. In this case, the remaining objects will not be accessible. ')
pmip6BindingMnIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 2), Pmip6MnIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingMnIndex.setReference('RFC 5213: Sections 2.2, 5.1, 8.1 RFC 4283: Section 3')
if mibBuilder.loadTexts: pmip6BindingMnIndex.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingMnIndex.setDescription('An index to the identifier of the registered mobile node. ')
pmip6BindingMnLLIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 3), Pmip6MnLLIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingMnLLIndex.setReference('RFC 5213: Sections 2.2, 5.1, 8.1')
if mibBuilder.loadTexts: pmip6BindingMnLLIndex.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingMnLLIndex.setDescription("The index to the link-layer identifier of the mobile node's connected interface on the access link. ")
pmip6BindingMagLinkLocalAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingMagLinkLocalAddressType.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingMagLinkLocalAddressType.setDescription('The InetAddressType of the pmip6BindingMagLinkLocalAddress that follows. ')
pmip6BindingMagLinkLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingMagLinkLocalAddress.setReference('RFC 5213: Sections 5.1, 6.9.1.2, 8.2')
if mibBuilder.loadTexts: pmip6BindingMagLinkLocalAddress.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingMagLinkLocalAddress.setDescription('The link-local address of the mobile access gateway on the point-to-point link shared with the mobile node. This is generated by the local mobility anchor after accepting the initial Proxy Binding Update message. This is the address that is present in the Link-local Address option of the corresponding Proxy Binding Acknowledgement message. ')
pmip6BindingTunnelIfIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 6), Ipv6AddressIfIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingTunnelIfIdentifier.setReference('RFC 5213: Sections 5.1, 8.1')
if mibBuilder.loadTexts: pmip6BindingTunnelIfIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingTunnelIfIdentifier.setDescription('The tunnel interface identifier (tunnel-if-id) of the bidirectional tunnel between the local mobility anchor and the mobile access gateway where the mobile node is currently anchored. This is internal to the local mobility anchor. The tunnel interface identifier is acquired during the tunnel creation. ')
pmip6BindingMnInterfaceATT = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 7), Pmip6MnInterfaceATT()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingMnInterfaceATT.setReference('RFC 5213: Sections 5.1, 8.1')
if mibBuilder.loadTexts: pmip6BindingMnInterfaceATT.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingMnInterfaceATT.setDescription('The access technology type by which the mobile node is currently attached. This is obtained from the Access Technology Type option, present in the Proxy Binding Update message. ')
pmip6BindingTimeRecentlyAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 1, 2, 1, 1, 8), Pmip6TimeStamp64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingTimeRecentlyAccepted.setReference('RFC 5213: Sections 5.1, 8.1')
if mibBuilder.loadTexts: pmip6BindingTimeRecentlyAccepted.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingTimeRecentlyAccepted.setDescription('The 64-bit timestamp value of the most recently accepted Proxy Binding Update message sent for this mobile node. This is the time of day on the local mobility anchor, when the message was received. If the Timestamp option is not present in the Proxy Binding Update message (i.e., when the sequence number based scheme is in use), the value MUST be initialized with all zeroes. ')
pmip6MissingMnIdentifierOption = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MissingMnIdentifierOption.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6MissingMnIdentifierOption.setStatus('current')
if mibBuilder.loadTexts: pmip6MissingMnIdentifierOption.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Missing mobile node identifier option' (Code 160). Discontinuities in the value of this counter can occur at re-initialization of the mobile router, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6MagNotAuthorizedForProxyReg = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MagNotAuthorizedForProxyReg.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6MagNotAuthorizedForProxyReg.setStatus('current')
if mibBuilder.loadTexts: pmip6MagNotAuthorizedForProxyReg.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Not authorized to send Proxy Binding Updates' (Code 154). Discontinuities in the value of this counter can occur at re-initialization of the mobile router, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6NotLMAForThisMobileNode = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6NotLMAForThisMobileNode.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6NotLMAForThisMobileNode.setStatus('current')
if mibBuilder.loadTexts: pmip6NotLMAForThisMobileNode.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Not local mobility anchor for this mobile node' (Code 153). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6ProxyRegNotEnabled = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6ProxyRegNotEnabled.setReference('RFC 5213: Sections 5.3.1, 6.9.1.2, 8.9')
if mibBuilder.loadTexts: pmip6ProxyRegNotEnabled.setStatus('current')
if mibBuilder.loadTexts: pmip6ProxyRegNotEnabled.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Proxy Registration not enabled' (Code 152). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6MissingHomeNetworkPrefixOption = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MissingHomeNetworkPrefixOption.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6MissingHomeNetworkPrefixOption.setStatus('current')
if mibBuilder.loadTexts: pmip6MissingHomeNetworkPrefixOption.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Missing home network prefix option' (Code 158). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6MissingHandOffIndicatorOption = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MissingHandOffIndicatorOption.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6MissingHandOffIndicatorOption.setStatus('current')
if mibBuilder.loadTexts: pmip6MissingHandOffIndicatorOption.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Missing handoff indicator option' (Code 161). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6MissingAccessTechTypeOption = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6MissingAccessTechTypeOption.setReference('RFC 5213: Sections 5.3.1, 8.9')
if mibBuilder.loadTexts: pmip6MissingAccessTechTypeOption.setStatus('current')
if mibBuilder.loadTexts: pmip6MissingAccessTechTypeOption.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Missing access technology type option' (Code 162). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6NotAuthorizedForHomeNetworkPrefix = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6NotAuthorizedForHomeNetworkPrefix.setReference('RFC 5213: Sections 5.3.2, 6.9.1.2, 8.9')
if mibBuilder.loadTexts: pmip6NotAuthorizedForHomeNetworkPrefix.setStatus('current')
if mibBuilder.loadTexts: pmip6NotAuthorizedForHomeNetworkPrefix.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Mobile node not authorized for one or more of the requesting home network prefixes' (Code 155). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6TimestampMismatch = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6TimestampMismatch.setReference('RFC 5213: Sections 5.5, 6.9.1.2, 8.9')
if mibBuilder.loadTexts: pmip6TimestampMismatch.setStatus('current')
if mibBuilder.loadTexts: pmip6TimestampMismatch.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'Invalid timestamp value (the clocks are out of sync)' (Code 156). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6TimestampLowerThanPrevAccepted = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6TimestampLowerThanPrevAccepted.setReference('RFC 5213: Sections 5.5, 6.9.1.2, 8.9')
if mibBuilder.loadTexts: pmip6TimestampLowerThanPrevAccepted.setStatus('current')
if mibBuilder.loadTexts: pmip6TimestampLowerThanPrevAccepted.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'The timestamp value is lower than the previously accepted value' (Code 157). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6BcePbuPrefixSetDoNotMatch = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BcePbuPrefixSetDoNotMatch.setReference('RFC 5213: Sections 5.4.1.1, 8.9')
if mibBuilder.loadTexts: pmip6BcePbuPrefixSetDoNotMatch.setStatus('current')
if mibBuilder.loadTexts: pmip6BcePbuPrefixSetDoNotMatch.setDescription("Total number of Proxy Binding Update messages rejected by the local mobility anchor with status code in the Binding Acknowledgement message indicating 'All the home network prefixes listed in the Binding Cache entry do not match all the prefixes in the received Proxy Binding Update' (Code 159). Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6InitialBindingRegistrations = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6InitialBindingRegistrations.setReference('RFC 5213: Sections 5.3.2')
if mibBuilder.loadTexts: pmip6InitialBindingRegistrations.setStatus('current')
if mibBuilder.loadTexts: pmip6InitialBindingRegistrations.setDescription('Total number of Proxy Binding Update messages that newly creates the Binding Cache entry. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ')
pmip6BindingLifeTimeExtensionNoHandOff = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionNoHandOff.setReference('RFC 5213: Sections 5.3.3')
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionNoHandOff.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionNoHandOff.setDescription('Total number of Proxy Binding Update messages for extending the binding lifetime, received from the same mobile access gateway that last updated the binding. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ')
pmip6BindingLifeTimeExtensionAfterHandOff = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionAfterHandOff.setReference('RFC 5213: Sections 5.3.4')
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionAfterHandOff.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingLifeTimeExtensionAfterHandOff.setDescription("Total number of Proxy Binding Update messages for extending the binding lifetime, received from a new mobile access gateway where the mobile node's mobility session is handed off. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ")
pmip6BindingDeRegistrations = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingDeRegistrations.setReference('RFC 5213: Sections 5.3.5')
if mibBuilder.loadTexts: pmip6BindingDeRegistrations.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingDeRegistrations.setDescription('Total number of Proxy Binding Update messages with the lifetime value of zero. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ')
pmip6BindingBindingAcks = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6BindingBindingAcks.setReference('RFC 5213: Sections 5.3.5')
if mibBuilder.loadTexts: pmip6BindingBindingAcks.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingBindingAcks.setDescription('Total number of Proxy Binding Acknowledgement messages. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of pmip6CounterDiscontinuityTime. ')
pmip6CounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 1, 4, 1, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6CounterDiscontinuityTime.setStatus('current')
if mibBuilder.loadTexts: pmip6CounterDiscontinuityTime.setDescription("The value of sysUpTime on the most recent occasion at which any one or more of this PMIPv6 entity's global counters, viz., counters with OID prefix 'pmip6BindingRegCounters' suffered a discontinuity. If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this object will have a zero value. ")
pmip6LmaStatus = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6LmaStatus.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaStatus.setDescription('This object indicates whether the PMIPv6 local mobility anchor function is enabled for the managed entity. Changing the status from enabled(1) to disabled(2) will terminate the PMIPv6 local mobility anchor function. On the other hand, changing the status from disabled(2) to enabled(1) will start the PMIPv6 local mobility anchor function. The value of this object MUST remain unchanged across reboots of the managed entity. ')
pmip6LmaLMAATable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 2), )
if mibBuilder.loadTexts: pmip6LmaLMAATable.setReference('RFC 5213: Sections 2.2, 5.6')
if mibBuilder.loadTexts: pmip6LmaLMAATable.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaLMAATable.setDescription('This table models the LMA Addresses configured on the local mobility anchor. Each LMA Address acts as a transport endpoint of the tunnel between the local mobility anchor and the mobile access gateway and is the transport endpoint of the tunnel between the local mobility anchor and the mobile access gateway. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6LmaLMAAEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 2, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6LmaLMAAType"), (0, "PMIPV6-MIB", "pmip6LmaLMAA"))
if mibBuilder.loadTexts: pmip6LmaLMAAEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaLMAAEntry.setDescription('This entry represents a conceptual row in the LMAA table. It represents each LMAA on the local mobility anchor. Implementers need to be aware that if the total number of octets in pmip6LmaLMAA exceeds 113, then OIDs of column instances in this row will have more than 128 sub-identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3. ')
pmip6LmaLMAAType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pmip6LmaLMAAType.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaLMAAType.setDescription('The InetAddressType of the pmip6LmaLMAA that follows. ')
pmip6LmaLMAA = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: pmip6LmaLMAA.setReference('RFC 5213: Sections 2.2, 5.6')
if mibBuilder.loadTexts: pmip6LmaLMAA.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaLMAA.setDescription('The LMAA configured on the local mobility anchor. The type of the address represented by this object is specified by the corresponding pmip6LmaLMAAType object. ')
pmip6LmaLMAAState = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("activated", 2), ("tunneled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6LmaLMAAState.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaLMAAState.setDescription('This object indicates the state of the LMAA: unknown -- The state of the LMAA cannot be determined. activated -- The LMAA is ready to establish a tunnel. tunneled -- The LMAA is used to set up the bidirectional tunnel. ')
pmip6LmaMinDelayBeforeBCEDelete = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6LmaMinDelayBeforeBCEDelete.setReference('RFC 5213: Sections 5.3.5, 9.1')
if mibBuilder.loadTexts: pmip6LmaMinDelayBeforeBCEDelete.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMinDelayBeforeBCEDelete.setDescription("This variable specifies the length of time in milliseconds the local mobility anchor MUST wait before it deletes a Binding Cache entry of a mobile node, upon receiving a Proxy Binding Update message from a mobile access gateway with a lifetime value of 0. During this wait time, if the local mobility anchor receives a Proxy Binding Update for the same mobility binding, with a lifetime value greater than 0, then it must update the Binding Cache entry with the accepted binding values. By the end of this wait time, if the local mobility anchor did not receive any valid Proxy Binding Update message for that mobility binding, it MUST delete the Binding Cache entry. This delay essentially ensures that a mobile node's Binding Cache entry is not deleted too quickly and allows some time for the new mobile access gateway to complete the signaling for the mobile node. The default value for this variable is 10000 milliseconds. ")
pmip6LmaMaxDelayBeforeNewBCEAssign = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6LmaMaxDelayBeforeNewBCEAssign.setReference('RFC 5213: Sections 5.4.1.2, 5.4.1.3, 9.1')
if mibBuilder.loadTexts: pmip6LmaMaxDelayBeforeNewBCEAssign.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMaxDelayBeforeNewBCEAssign.setDescription('This variable specifies the length of time in milliseconds the local mobility anchor MUST wait for the de-registration message for an existing mobility session before it decides to create a new mobility session. The default value for this variable is 1500 milliseconds. Note that there is a dependency between this value and the values used in the retransmission algorithm for Proxy Binding Updates. The retransmissions need to happen before MaxDelayBeforeNewBCEAssign runs out, as otherwise there are situations where a de-registration from a previous mobile access gateway may be lost, and the local mobility anchor creates, needlessly, a new mobility session and new prefixes for the mobile node. However, this affects situations where there is no information from the lower layers about the type of a handoff or other parameters that can be used for identifying the mobility session. ')
pmip6LmaTimestampValidityWindow = MibScalar((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6LmaTimestampValidityWindow.setReference('RFC 5213: Sections 5.5, 9.1')
if mibBuilder.loadTexts: pmip6LmaTimestampValidityWindow.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaTimestampValidityWindow.setDescription('This variable specifies the maximum length of time difference in milliseconds between the timestamp in the received Proxy Binding Update message and the current time of day on the local mobility anchor that is allowed by the local mobility anchor for the received message to be considered valid. The default value for this variable is 300 milliseconds. This variable must be adjusted to suit the deployments. ')
pmip6LmaMnIdentifierTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 4), )
if mibBuilder.loadTexts: pmip6LmaMnIdentifierTable.setReference('RFC 5213: Sections 2, 6.1')
if mibBuilder.loadTexts: pmip6LmaMnIdentifierTable.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnIdentifierTable.setDescription('A table containing the identifiers of mobile nodes served by the LMA. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6LmaMnIdentifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 4, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6BindingMnIndex"))
if mibBuilder.loadTexts: pmip6LmaMnIdentifierEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnIdentifierEntry.setDescription('An entry in the mobile node identifier table. ')
pmip6LmaMnIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 4, 1, 1), Pmip6MnIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6LmaMnIdentifier.setReference('RFC 5213: Section 2.2')
if mibBuilder.loadTexts: pmip6LmaMnIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnIdentifier.setDescription('The identity of a mobile node in the Proxy Mobile IPv6 domain. ')
pmip6LmaMnLLIdentifierTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 5), )
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifierTable.setReference('RFC 5213: Sections 2, 6.1')
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifierTable.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifierTable.setDescription('A table containing the link-layer identifiers of the interfaces of the mobile nodes served by the LMA. Entries in this table are not required to survive a reboot of the managed entity. ')
pmip6LmaMnLLIdentifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 5, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6BindingMnIndex"), (0, "PMIPV6-MIB", "pmip6BindingMnLLIndex"))
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifierEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifierEntry.setDescription('An entry in the mobile node link-layer identifier table. ')
pmip6LmaMnLLIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 5, 1, 1), Pmip6MnLLIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifier.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaMnLLIdentifier.setDescription("The link-layer identifier of the mobile node's connected interface on the access link. ")
pmip6LmaHomeNetworkPrefixTable = MibTable((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6), )
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixTable.setReference('RFC 5213: Sections 2, 5.1, 5.2')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixTable.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixTable.setDescription('A table representing the home network prefixes assigned to the connected interfaces of all the mobile nodes anchored at the LMA. ')
pmip6LmaHomeNetworkPrefixEntry = MibTableRow((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6, 1), ).setIndexNames((0, "PMIPV6-MIB", "pmip6BindingMnIndex"), (0, "PMIPV6-MIB", "pmip6BindingMnLLIndex"), (0, "PMIPV6-MIB", "pmip6LmaHomeNetworkPrefixType"), (0, "PMIPV6-MIB", "pmip6LmaHomeNetworkPrefix"))
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixEntry.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixEntry.setDescription('An entry in the home network prefixes table. Implementers need to be aware that if the total number of octets in pmip6LmaHomeNetworkPrefix exceeds 111 then OIDs of column instances in this row will have more than 128 sub-identifiers and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3. ')
pmip6LmaHomeNetworkPrefixType = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixType.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixType.setDescription('The InetAddressType of the pmip6LmaHomeNetworkPrefix that follows. ')
pmip6LmaHomeNetworkPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6, 1, 2), InetAddress())
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefix.setReference('RFC 5213: Section 2')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefix.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefix.setDescription('The mobile network prefix that is delegated to the mobile node. The type of the address represented by this object is specified by the corresponding pmip6LmaHomeNetworkPrefixType object. ')
pmip6LmaHomeNetworkPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6, 1, 3), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixLength.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixLength.setDescription('The prefix length of the home network prefix. ')
pmip6LmaHomeNetworkPrefixLifeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 206, 1, 3, 2, 6, 1, 4), Gauge32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixLifeTime.setReference('RFC 5213: Section 5.3')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixLifeTime.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeNetworkPrefixLifeTime.setDescription('The lifetime (in seconds) granted to the mobile node for this registration. ')
pmip6MagHomeTunnelEstablished = NotificationType((1, 3, 6, 1, 2, 1, 206, 0, 1)).setObjects(("PMIPV6-MIB", "pmip6MagBLTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6MagProxyCOAState"))
if mibBuilder.loadTexts: pmip6MagHomeTunnelEstablished.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeTunnelEstablished.setDescription('This notification is sent by the Proxy Mobile IPv6 entities every time the tunnel is established between the local mobility anchor and mobile access gateway. ')
if mibBuilder.loadTexts: pmip6MagHomeTunnelEstablished.setReference('RFC 5213: Section 5.6.1')
pmip6MagHomeTunnelReleased = NotificationType((1, 3, 6, 1, 2, 1, 206, 0, 2)).setObjects(("PMIPV6-MIB", "pmip6MagBLTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6MagProxyCOAState"))
if mibBuilder.loadTexts: pmip6MagHomeTunnelReleased.setStatus('current')
if mibBuilder.loadTexts: pmip6MagHomeTunnelReleased.setDescription('This notification is sent by the Proxy Mobile IPv6 entities every time the tunnel between the local mobility anchor and mobile access gateway is released. ')
if mibBuilder.loadTexts: pmip6MagHomeTunnelReleased.setReference('RFC 5213: Section 5.6.1')
pmip6LmaHomeTunnelEstablished = NotificationType((1, 3, 6, 1, 2, 1, 206, 0, 3)).setObjects(("PMIPV6-MIB", "pmip6BindingTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6LmaLMAAState"))
if mibBuilder.loadTexts: pmip6LmaHomeTunnelEstablished.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeTunnelEstablished.setDescription('This notification is sent by the Proxy Mobile IPv6 entities every time the tunnel is established between the local mobility anchor and mobile access gateway. ')
if mibBuilder.loadTexts: pmip6LmaHomeTunnelEstablished.setReference('RFC 5213: Section 5.6.1')
pmip6LmaHomeTunnelReleased = NotificationType((1, 3, 6, 1, 2, 1, 206, 0, 4)).setObjects(("PMIPV6-MIB", "pmip6BindingTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6LmaLMAAState"))
if mibBuilder.loadTexts: pmip6LmaHomeTunnelReleased.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaHomeTunnelReleased.setDescription('This notification is sent by the Proxy Mobile IPv6 entities every time the tunnel between the local mobility anchor and mobile access gateway is released. ')
if mibBuilder.loadTexts: pmip6LmaHomeTunnelReleased.setReference('RFC 5213: Section 5.6.1')
pmip6Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 2, 1))
pmip6Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 206, 2, 2))
pmip6SystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 1)).setObjects(("PMIPV6-MIB", "pmip6Capabilities"), ("PMIPV6-MIB", "pmip6MobileNodeGeneratedTimestampInUse"), ("PMIPV6-MIB", "pmip6FixedMagLinkLocalAddressOnAllAccessLinksType"), ("PMIPV6-MIB", "pmip6FixedMagLinkLocalAddressOnAllAccessLinks"), ("PMIPV6-MIB", "pmip6FixedMagLinkLayerAddressOnAllAccessLinks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6SystemGroup = pmip6SystemGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6SystemGroup.setDescription(' A collection of objects for basic PMIPv6 monitoring.')
pmip6BindingCacheGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 2)).setObjects(("PMIPV6-MIB", "pmip6BindingPBUFlag"), ("PMIPV6-MIB", "pmip6BindingMnIndex"), ("PMIPV6-MIB", "pmip6BindingMnLLIndex"), ("PMIPV6-MIB", "pmip6BindingMagLinkLocalAddressType"), ("PMIPV6-MIB", "pmip6BindingMagLinkLocalAddress"), ("PMIPV6-MIB", "pmip6BindingTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6BindingMnInterfaceATT"), ("PMIPV6-MIB", "pmip6BindingTimeRecentlyAccepted"), ("PMIPV6-MIB", "pmip6LmaMnIdentifier"), ("PMIPV6-MIB", "pmip6LmaMnLLIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6BindingCacheGroup = pmip6BindingCacheGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6BindingCacheGroup.setDescription(' A collection of objects for monitoring the PMIPv6 extensions of the Binding Cache.')
pmip6StatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 3)).setObjects(("PMIPV6-MIB", "pmip6MissingMnIdentifierOption"), ("PMIPV6-MIB", "pmip6MagNotAuthorizedForProxyReg"), ("PMIPV6-MIB", "pmip6NotLMAForThisMobileNode"), ("PMIPV6-MIB", "pmip6ProxyRegNotEnabled"), ("PMIPV6-MIB", "pmip6MissingHomeNetworkPrefixOption"), ("PMIPV6-MIB", "pmip6MissingHandOffIndicatorOption"), ("PMIPV6-MIB", "pmip6MissingAccessTechTypeOption"), ("PMIPV6-MIB", "pmip6NotAuthorizedForHomeNetworkPrefix"), ("PMIPV6-MIB", "pmip6TimestampMismatch"), ("PMIPV6-MIB", "pmip6TimestampLowerThanPrevAccepted"), ("PMIPV6-MIB", "pmip6BcePbuPrefixSetDoNotMatch"), ("PMIPV6-MIB", "pmip6InitialBindingRegistrations"), ("PMIPV6-MIB", "pmip6BindingLifeTimeExtensionNoHandOff"), ("PMIPV6-MIB", "pmip6BindingLifeTimeExtensionAfterHandOff"), ("PMIPV6-MIB", "pmip6BindingDeRegistrations"), ("PMIPV6-MIB", "pmip6BindingBindingAcks"), ("PMIPV6-MIB", "pmip6CounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6StatsGroup = pmip6StatsGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6StatsGroup.setDescription(' A collection of objects for basic PMIPv6 statistics monitoring. ')
pmip6MagSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 4)).setObjects(("PMIPV6-MIB", "pmip6MagStatus"), ("PMIPV6-MIB", "pmip6MagProxyCOAState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagSystemGroup = pmip6MagSystemGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6MagSystemGroup.setDescription(' A collection of objects for monitoring the PMIPv6-system-related objects on a mobile router.')
pmip6MagConfigurationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 5)).setObjects(("PMIPV6-MIB", "pmip6MagHomeNetworkPrefixLength"), ("PMIPV6-MIB", "pmip6MagHomeNetworkPrefixLifeTime"), ("PMIPV6-MIB", "pmip6MagEnableMagLocalRouting"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagConfigurationGroup = pmip6MagConfigurationGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6MagConfigurationGroup.setDescription(' A collection of objects for monitoring the configuration-related objects on a mobile access gateway. ')
pmip6MagRegistrationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 6)).setObjects(("PMIPV6-MIB", "pmip6MagBLFlag"), ("PMIPV6-MIB", "pmip6MagBLMnIndex"), ("PMIPV6-MIB", "pmip6MagBLMnLLIndex"), ("PMIPV6-MIB", "pmip6MagBLMagLinkLocalAddressType"), ("PMIPV6-MIB", "pmip6MagBLMagLinkLocalAddress"), ("PMIPV6-MIB", "pmip6MagBLMagIfIdentifierToMn"), ("PMIPV6-MIB", "pmip6MagBLTunnelIfIdentifier"), ("PMIPV6-MIB", "pmip6MagBLMnInterfaceATT"), ("PMIPV6-MIB", "pmip6MagBLTimeRecentlyAccepted"), ("PMIPV6-MIB", "pmip6MagMnIdentifier"), ("PMIPV6-MIB", "pmip6MagMnLLIdentifier"), ("PMIPV6-MIB", "pmip6MagProfMnIdentifier"), ("PMIPV6-MIB", "pmip6MagProfMnLocalMobilityAnchorAddressType"), ("PMIPV6-MIB", "pmip6MagProfMnLocalMobilityAnchorAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagRegistrationGroup = pmip6MagRegistrationGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6MagRegistrationGroup.setDescription(' A collection of objects for monitoring the registration-related objects on a mobile access gateway. ')
pmip6LmaSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 7)).setObjects(("PMIPV6-MIB", "pmip6LmaStatus"), ("PMIPV6-MIB", "pmip6LmaLMAAState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaSystemGroup = pmip6LmaSystemGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaSystemGroup.setDescription(' A collection of objects for monitoring the system-related objects on an LMA.')
pmip6LmaConfigurationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 8)).setObjects(("PMIPV6-MIB", "pmip6LmaMinDelayBeforeBCEDelete"), ("PMIPV6-MIB", "pmip6LmaMaxDelayBeforeNewBCEAssign"), ("PMIPV6-MIB", "pmip6LmaTimestampValidityWindow"), ("PMIPV6-MIB", "pmip6LmaHomeNetworkPrefixLength"), ("PMIPV6-MIB", "pmip6LmaHomeNetworkPrefixLifeTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaConfigurationGroup = pmip6LmaConfigurationGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaConfigurationGroup.setDescription(' A collection of objects for Monitoring the configuration-related objects on an LMA.')
pmip6MagNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 9)).setObjects(("PMIPV6-MIB", "pmip6MagHomeTunnelEstablished"), ("PMIPV6-MIB", "pmip6MagHomeTunnelReleased"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagNotificationGroup = pmip6MagNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6MagNotificationGroup.setDescription('A collection of notifications from a home agent or correspondent node to the Manager about the tunnel status of the mobile router. ')
pmip6LmaNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 206, 2, 1, 10)).setObjects(("PMIPV6-MIB", "pmip6LmaHomeTunnelEstablished"), ("PMIPV6-MIB", "pmip6LmaHomeTunnelReleased"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaNotificationGroup = pmip6LmaNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaNotificationGroup.setDescription('A collection of notifications from a home agent or correspondent node to the Manager about the tunnel status of the mobile router. ')
pmip6CoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 1)).setObjects(("PMIPV6-MIB", "pmip6SystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6CoreCompliance = pmip6CoreCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6CoreCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6BindingHomeAddressType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- ipv6 addresses for the pmip6BindingHomeAddress -- object. -- ')
pmip6Compliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 2)).setObjects(("PMIPV6-MIB", "pmip6SystemGroup"), ("PMIPV6-MIB", "pmip6BindingCacheGroup"), ("PMIPV6-MIB", "pmip6StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6Compliance2 = pmip6Compliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6Compliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB. ')
pmip6CoreReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 3)).setObjects(("PMIPV6-MIB", "pmip6SystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6CoreReadOnlyCompliance = pmip6CoreReadOnlyCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6CoreReadOnlyCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB without support for read-write (i.e., in read-only mode). ')
pmip6ReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 4)).setObjects(("PMIPV6-MIB", "pmip6SystemGroup"), ("PMIPV6-MIB", "pmip6BindingCacheGroup"), ("PMIPV6-MIB", "pmip6StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6ReadOnlyCompliance2 = pmip6ReadOnlyCompliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6ReadOnlyCompliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB without support for read-write (i.e., in read-only mode). ')
pmip6MagCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 5)).setObjects(("PMIPV6-MIB", "pmip6MagSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagCoreCompliance = pmip6MagCoreCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6MagCoreCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6MagProxyCOAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOAType -- object. -- -- OBJECT pmip6MagProxyCOA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOA -- object. -- ')
pmip6MagCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 6)).setObjects(("PMIPV6-MIB", "pmip6MagSystemGroup"), ("PMIPV6-MIB", "pmip6MagConfigurationGroup"), ("PMIPV6-MIB", "pmip6MagRegistrationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagCompliance2 = pmip6MagCompliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6MagCompliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB for monitoring configuration- related information, registration details, and statistics on a mobile access gateway. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6MagProxyCOAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOA -- object. -- -- OBJECT pmip6MagProxyCOA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOAType -- object. -- -- OBJECT pmip6MagHomeNetworkPrefixType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6MagHomeNetworkPrefix object. -- -- OBJECT pmip6MagHomeNetworkPrefix -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6MagHomeNetworkPrefix object. -- ')
pmip6MagCoreReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 7)).setObjects(("PMIPV6-MIB", "pmip6MagSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagCoreReadOnlyCompliance = pmip6MagCoreReadOnlyCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6MagCoreReadOnlyCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB without support for read-write (i.e., in read-only mode). There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6MagProxyCOAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOA -- object. -- -- OBJECT pmip6MagProxyCOA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOAType -- object. -- -- OBJECT pmip6MagHomeNetworkPrefixType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6MagHomeNetworkPrefix object. -- ')
pmip6MagReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 8)).setObjects(("PMIPV6-MIB", "pmip6MagSystemGroup"), ("PMIPV6-MIB", "pmip6MagConfigurationGroup"), ("PMIPV6-MIB", "pmip6MagRegistrationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagReadOnlyCompliance2 = pmip6MagReadOnlyCompliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6MagReadOnlyCompliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB without support for read- write (i.e., in read-only mode) and with support for monitoring configuration-related information, registration details, and statistics on a mobile access gateway. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6MagProxyCOAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOA -- object. -- -- OBJECT pmip6MagProxyCOA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6MagProxyCOAType -- object. -- -- OBJECT pmip6MagHomeNetworkPrefixType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6MagHomeNetworkPrefix object. -- -- OBJECT pmip6MagHomeNetworkPrefix -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6MagHomeNetworkPrefix object. -- ')
pmip6LmaCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 9)).setObjects(("PMIPV6-MIB", "pmip6LmaSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaCoreCompliance = pmip6LmaCoreCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaCoreCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6LmaLMAAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaLMAA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- ')
pmip6LmaCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 10)).setObjects(("PMIPV6-MIB", "pmip6LmaSystemGroup"), ("PMIPV6-MIB", "pmip6LmaConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaCompliance2 = pmip6LmaCompliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaCompliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB for monitoring configuration- related information, registration details, and statistics on a mobile access gateway. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6LmaLMAAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaLMAA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaHomeNetworkPrefixType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6LmaHomeNetworkPrefix object. -- -- OBJECT pmip6LmaHomeNetworkPrefix -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6LmaHomeNetworkPrefix object. -- ')
pmip6LmaReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 11)).setObjects(("PMIPV6-MIB", "pmip6LmaSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaReadOnlyCompliance = pmip6LmaReadOnlyCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaReadOnlyCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6LmaLMAAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaLMAA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- ')
pmip6LmaReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 12)).setObjects(("PMIPV6-MIB", "pmip6LmaSystemGroup"), ("PMIPV6-MIB", "pmip6LmaConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaReadOnlyCompliance2 = pmip6LmaReadOnlyCompliance2.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaReadOnlyCompliance2.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB without support for read-write (i.e., in read-only mode) and for monitoring configuration-related information, registration details, and statistics on a mobile access gateway. There are a number of INDEX objects that cannot be represented in the form of OBJECT clauses in SMIv2, but for which there are compliance requirements, expressed in OBJECT clause form in this description: -- OBJECT pmip6LmaLMAAType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaLMAA -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the pmip6LmaLMAA -- object. -- -- OBJECT pmip6LmaHomeNetworkPrefixType -- SYNTAX InetAddressType { ipv6(2) } -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6LmaHomeNetworkPrefix object. -- -- OBJECT pmip6LmaHomeNetworkPrefix -- SYNTAX InetAddress (SIZE(16)) -- DESCRIPTION -- This MIB module requires support for global -- IPv6 addresses for the -- pmip6LmaHomeNetworkPrefix object. -- ')
pmip6MagNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 13)).setObjects(("PMIPV6-MIB", "pmip6MagNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6MagNotificationCompliance = pmip6MagNotificationCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6MagNotificationCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB and support notification from the mobile access gateway. ')
pmip6LmaNotificationCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 206, 2, 2, 14)).setObjects(("PMIPV6-MIB", "pmip6LmaNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmip6LmaNotificationCompliance = pmip6LmaNotificationCompliance.setStatus('current')
if mibBuilder.loadTexts: pmip6LmaNotificationCompliance.setDescription('The compliance statement for SNMP entities that implement the PMIPV6-MIB and support notification from the LMA. ')
mibBuilder.exportSymbols("PMIPV6-MIB", pmip6LmaReadOnlyCompliance2=pmip6LmaReadOnlyCompliance2, pmip6MagProfMnLocalMobilityAnchorAddressType=pmip6MagProfMnLocalMobilityAnchorAddressType, pmip6LmaStatus=pmip6LmaStatus, pmip6LmaMnIdentifierTable=pmip6LmaMnIdentifierTable, pmip6Mag=pmip6Mag, pmip6MagNotificationCompliance=pmip6MagNotificationCompliance, pmip6LmaLMAATable=pmip6LmaLMAATable, pmip6LmaCompliance2=pmip6LmaCompliance2, pmip6LmaSystem=pmip6LmaSystem, pmip6LmaMaxDelayBeforeNewBCEAssign=pmip6LmaMaxDelayBeforeNewBCEAssign, pmip6FixedMagLinkLayerAddressOnAllAccessLinks=pmip6FixedMagLinkLayerAddressOnAllAccessLinks, pmip6NotLMAForThisMobileNode=pmip6NotLMAForThisMobileNode, pmip6MagMnIdentifierEntry=pmip6MagMnIdentifierEntry, pmip6LmaNotificationCompliance=pmip6LmaNotificationCompliance, pmip6MagNotAuthorizedForProxyReg=pmip6MagNotAuthorizedForProxyReg, pmip6Notifications=pmip6Notifications, pmip6MagSystem=pmip6MagSystem, pmip6MagBLFlag=pmip6MagBLFlag, pmip6MagProxyCOAState=pmip6MagProxyCOAState, pmip6MagBLMnLLIndex=pmip6MagBLMnLLIndex, pmip6MagMnLLIdentifierEntry=pmip6MagMnLLIdentifierEntry, pmip6LmaMnIdentifier=pmip6LmaMnIdentifier, pmip6Compliances=pmip6Compliances, pmip6LmaHomeNetworkPrefixType=pmip6LmaHomeNetworkPrefixType, pmip6MissingMnIdentifierOption=pmip6MissingMnIdentifierOption, pmip6Conformance=pmip6Conformance, pmip6MagProfMnIdentifier=pmip6MagProfMnIdentifier, pmip6Compliance2=pmip6Compliance2, pmip6BindingCacheGroup=pmip6BindingCacheGroup, pmip6System=pmip6System, pmip6CoreCompliance=pmip6CoreCompliance, pmip6TimestampLowerThanPrevAccepted=pmip6TimestampLowerThanPrevAccepted, pmip6MagNotificationGroup=pmip6MagNotificationGroup, pmip6LmaHomeNetworkPrefix=pmip6LmaHomeNetworkPrefix, pmip6LmaConfigurationGroup=pmip6LmaConfigurationGroup, pmip6BindingMnLLIndex=pmip6BindingMnLLIndex, pmip6MagProxyCOA=pmip6MagProxyCOA, pmip6ProxyRegNotEnabled=pmip6ProxyRegNotEnabled, pmip6LmaTimestampValidityWindow=pmip6LmaTimestampValidityWindow, pmip6MagMnLLIdentifierTable=pmip6MagMnLLIdentifierTable, pmip6LmaHomeNetworkPrefixLifeTime=pmip6LmaHomeNetworkPrefixLifeTime, pmip6SystemGroup=pmip6SystemGroup, pmip6MagProxyCOATable=pmip6MagProxyCOATable, pmip6MagConf=pmip6MagConf, pmip6Capabilities=pmip6Capabilities, pmip6MagEnableMagLocalRouting=pmip6MagEnableMagLocalRouting, pmip6MagBLMnInterfaceATT=pmip6MagBLMnInterfaceATT, pmip6MagCoreReadOnlyCompliance=pmip6MagCoreReadOnlyCompliance, pmip6MagRegistration=pmip6MagRegistration, pmip6LmaHomeTunnelEstablished=pmip6LmaHomeTunnelEstablished, pmip6CoreReadOnlyCompliance=pmip6CoreReadOnlyCompliance, pmip6LmaLMAAState=pmip6LmaLMAAState, pmip6MagHomeNetworkPrefixEntry=pmip6MagHomeNetworkPrefixEntry, PYSNMP_MODULE_ID=pmip6MIB, pmip6LmaMinDelayBeforeBCEDelete=pmip6LmaMinDelayBeforeBCEDelete, pmip6MagMnProfileTable=pmip6MagMnProfileTable, pmip6LmaHomeNetworkPrefixLength=pmip6LmaHomeNetworkPrefixLength, pmip6LmaReadOnlyCompliance=pmip6LmaReadOnlyCompliance, pmip6MagProxyCOAEntry=pmip6MagProxyCOAEntry, pmip6MissingHandOffIndicatorOption=pmip6MissingHandOffIndicatorOption, pmip6LmaHomeNetworkPrefixTable=pmip6LmaHomeNetworkPrefixTable, pmip6MagBLTimeRecentlyAccepted=pmip6MagBLTimeRecentlyAccepted, pmip6MagProfMnLocalMobilityAnchorAddress=pmip6MagProfMnLocalMobilityAnchorAddress, pmip6MagBLTunnelIfIdentifier=pmip6MagBLTunnelIfIdentifier, pmip6Bindings=pmip6Bindings, pmip6MissingAccessTechTypeOption=pmip6MissingAccessTechTypeOption, pmip6BindingTimeRecentlyAccepted=pmip6BindingTimeRecentlyAccepted, pmip6BindingLifeTimeExtensionAfterHandOff=pmip6BindingLifeTimeExtensionAfterHandOff, pmip6BindingMagLinkLocalAddress=pmip6BindingMagLinkLocalAddress, pmip6LmaConf=pmip6LmaConf, pmip6MagConfigurationGroup=pmip6MagConfigurationGroup, pmip6LmaHomeNetworkPrefixEntry=pmip6LmaHomeNetworkPrefixEntry, pmip6MagCompliance2=pmip6MagCompliance2, pmip6LmaMnLLIdentifier=pmip6LmaMnLLIdentifier, pmip6FixedMagLinkLocalAddressOnAllAccessLinksType=pmip6FixedMagLinkLocalAddressOnAllAccessLinksType, pmip6MagHomeNetworkPrefixLength=pmip6MagHomeNetworkPrefixLength, pmip6BindingPBUFlag=pmip6BindingPBUFlag, pmip6BcePbuPrefixSetDoNotMatch=pmip6BcePbuPrefixSetDoNotMatch, pmip6MagBLMnIndex=pmip6MagBLMnIndex, pmip6Conf=pmip6Conf, pmip6BindingBindingAcks=pmip6BindingBindingAcks, pmip6MagMnLLIdentifier=pmip6MagMnLLIdentifier, pmip6MagMnProfileEntry=pmip6MagMnProfileEntry, pmip6MagMnIdentifier=pmip6MagMnIdentifier, pmip6BindingCacheTable=pmip6BindingCacheTable, pmip6MagBLEntry=pmip6MagBLEntry, pmip6NotAuthorizedForHomeNetworkPrefix=pmip6NotAuthorizedForHomeNetworkPrefix, pmip6MagRegistrationGroup=pmip6MagRegistrationGroup, pmip6Stats=pmip6Stats, pmip6MobileNodeGeneratedTimestampInUse=pmip6MobileNodeGeneratedTimestampInUse, pmip6InitialBindingRegistrations=pmip6InitialBindingRegistrations, pmip6MagProxyCOAType=pmip6MagProxyCOAType, pmip6MagProfMnIndex=pmip6MagProfMnIndex, pmip6LmaLMAAType=pmip6LmaLMAAType, pmip6BindingMnInterfaceATT=pmip6BindingMnInterfaceATT, pmip6MagHomeNetworkPrefixTable=pmip6MagHomeNetworkPrefixTable, pmip6MissingHomeNetworkPrefixOption=pmip6MissingHomeNetworkPrefixOption, pmip6Core=pmip6Core, pmip6LmaHomeTunnelReleased=pmip6LmaHomeTunnelReleased, pmip6MagHomeTunnelReleased=pmip6MagHomeTunnelReleased, pmip6MagBLMagLinkLocalAddressType=pmip6MagBLMagLinkLocalAddressType, pmip6Groups=pmip6Groups, pmip6Lma=pmip6Lma, pmip6LmaLMAAEntry=pmip6LmaLMAAEntry, pmip6MIB=pmip6MIB, pmip6MagStatus=pmip6MagStatus, pmip6ReadOnlyCompliance2=pmip6ReadOnlyCompliance2, pmip6BindingDeRegistrations=pmip6BindingDeRegistrations, pmip6MagBLMagLinkLocalAddress=pmip6MagBLMagLinkLocalAddress, pmip6MagReadOnlyCompliance2=pmip6MagReadOnlyCompliance2, pmip6LmaSystemGroup=pmip6LmaSystemGroup, pmip6Objects=pmip6Objects, pmip6MagHomeNetworkPrefixType=pmip6MagHomeNetworkPrefixType, pmip6LmaMnLLIdentifierTable=pmip6LmaMnLLIdentifierTable, pmip6BindingTunnelIfIdentifier=pmip6BindingTunnelIfIdentifier, pmip6MagHomeNetworkPrefix=pmip6MagHomeNetworkPrefix, pmip6LmaMnLLIdentifierEntry=pmip6LmaMnLLIdentifierEntry, pmip6FixedMagLinkLocalAddressOnAllAccessLinks=pmip6FixedMagLinkLocalAddressOnAllAccessLinks, pmip6MagBLMagIfIdentifierToMn=pmip6MagBLMagIfIdentifierToMn, pmip6MagSystemGroup=pmip6MagSystemGroup, pmip6BindingMnIndex=pmip6BindingMnIndex, pmip6LmaCoreCompliance=pmip6LmaCoreCompliance, pmip6LmaLMAA=pmip6LmaLMAA, pmip6BindingMagLinkLocalAddressType=pmip6BindingMagLinkLocalAddressType, pmip6LmaMnIdentifierEntry=pmip6LmaMnIdentifierEntry, pmip6MagCoreCompliance=pmip6MagCoreCompliance, pmip6MagHomeNetworkPrefixLifeTime=pmip6MagHomeNetworkPrefixLifeTime, pmip6MagHomeTunnelEstablished=pmip6MagHomeTunnelEstablished, pmip6CounterDiscontinuityTime=pmip6CounterDiscontinuityTime, pmip6BindingRegCounters=pmip6BindingRegCounters, pmip6MagBLTable=pmip6MagBLTable, pmip6BindingLifeTimeExtensionNoHandOff=pmip6BindingLifeTimeExtensionNoHandOff, pmip6TimestampMismatch=pmip6TimestampMismatch, pmip6MagMnIdentifierTable=pmip6MagMnIdentifierTable, pmip6StatsGroup=pmip6StatsGroup, pmip6BindingCacheEntry=pmip6BindingCacheEntry, pmip6LmaNotificationGroup=pmip6LmaNotificationGroup)
