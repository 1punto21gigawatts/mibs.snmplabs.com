#
# PySNMP MIB module CISCO-VPC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VPC-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:19:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, iso, Integer32, Gauge32, Counter32, NotificationType, MibIdentifier, Counter64, ObjectIdentity, Bits, TimeTicks, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Integer32", "Gauge32", "Counter32", "NotificationType", "MibIdentifier", "Counter64", "ObjectIdentity", "Bits", "TimeTicks", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, TruthValue, DisplayString, DateAndTime, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "DateAndTime", "MacAddress")
ciscoVpcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 807))
ciscoVpcMIB.setRevisions(('2013-05-09 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoVpcMIB.setRevisionsDescriptions(('Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoVpcMIB.setLastUpdated('201305090000Z')
if mibBuilder.loadTexts: ciscoVpcMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoVpcMIB.setContactInfo('Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-lan-switch-snmp@cisco.com')
if mibBuilder.loadTexts: ciscoVpcMIB.setDescription('This MIB module defines MIB objects which provide management information for configuring and monitoring of Virtual Port Channel(VPC) on Cisco devices. The following terms are used throughout this MIB: ISSU: In Service Software Upgrade ToS: Type of Service UDP: User Datagram Protocol VPC: Virtual Port Channel VRF: Virtual Routing and Forwarding')
ciscoVpcMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 0))
ciscoVpcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 1))
ciscoVpcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 2))
cVpcPeerKeepAlive = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1))
cVpcRole = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2))
cVpcStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3))
cVpcStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4))
cVpcPeerKeepAliveConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1), )
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigTable.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigTable.setDescription('The table contains the VPC peer-keepalive link and message configuration information in the managed device.')
cVpcPeerKeepAliveConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcPeerKeepAliveConfigDomainID"))
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigEntry.setDescription('An entry containing VPC peer-keepalive link and message configuration information.')
cVpcPeerKeepAliveConfigDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain on the local system. Value zero indicates no VPC management domain has been configured for this device.')
cVpcPeerKeepAliveDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveDestAddrType.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveDestAddrType.setDescription('This object specifies type of Internet address of destination address for peer device.')
cVpcPeerKeepAliveDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveDestAddr.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveDestAddr.setDescription('This object specifies destination ip address of peer device. The type of this address is determined by the cVpcPeerKeepAliveDestAddrType object.')
cVpcPeerKeepAliveSourceAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveSourceAddrType.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveSourceAddrType.setDescription('This object specifies type of Internet address of source address used for peer-keepalive hello messages.')
cVpcPeerKeepAliveSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveSourceAddr.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveSourceAddr.setDescription('This object specifies source address used in this peer-keepalive hello messages. The type of this address is determined by the cVpcPeerKeepAliveSourceAddrType object.')
cVpcPeerKeepAliveUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 6), InetPortNumber().clone(3200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveUdpPort.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveUdpPort.setDescription('This object specifies UDP Port number used for peer-keepalive hello messages.')
cVpcPeerKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 7), Unsigned32().clone(1000)).setUnits('milli-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveInterval.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveInterval.setDescription('This object specifies the interval of peer-keepalive hello messages.')
cVpcPeerKeepAliveTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 8), Unsigned32().clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveTimeout.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveTimeout.setDescription('This object specifies the timeout of peer-keepalive hello messages.')
cVpcPeerKeepAliveHoldTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 9), Unsigned32().clone(3)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveHoldTimeout.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveHoldTimeout.setDescription('This object specifies hold timeout to ignore stale peer alive messages.')
cVpcPeerKeepAliveTos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveTos.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveTos.setDescription('This object specifies the ToS value used for peer-keepalive hello messages.')
cVpcPeerKeepAlivePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAlivePrecedence.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAlivePrecedence.setDescription('This object specifies the Precedence value used for peer-keepalive hello messages.')
cVpcPeerKeepAliveTosByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveTosByte.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveTosByte.setDescription('This object specifies the ToS-Byte value used for peer-keepalive messages. Only low eight-bit byte of this double word is used. Bit 0 is reserved. Bits 1 to 5 represent the value of cVpcPeerKeepAliveTos. Bits 6 to 8 come into cVpcPeerKeepAlivePrecedence. ToS-Byte indicates the value of the whole byte including ToS, Precedence and reserved bit 0.')
cVpcPeerKeepAliveVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 1, 1, 13), SnmpAdminString().clone('management')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcPeerKeepAliveVrfName.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveVrfName.setDescription('This object specifies the VRF name to be used for peer-keepalive messages routing.')
cVpcPeerKeepAliveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2), )
if mibBuilder.loadTexts: cVpcPeerKeepAliveTable.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveTable.setDescription('The table contains the VPC peer-keepalive link status information in the managed device.')
cVpcPeerKeepAliveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcPeerKeepAliveDomainID"))
if mibBuilder.loadTexts: cVpcPeerKeepAliveEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveEntry.setDescription('An entry containing VPC peer-keepalive link status information.')
cVpcPeerKeepAliveDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcPeerKeepAliveDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain on the local system. Value zero indicates there is no VPC management domain being configured for this device.')
cVpcPeerKeepAliveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("disabled", 1), ("alive", 2), ("peerUnreachable", 3), ("aliveButDomainIdDismatch", 4), ("suspendedAsISSU", 5), ("suspendedAsDestIPUnreachable", 6), ("suspendedAsVRFUnusable", 7), ("misconfigured", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveStatus.setDescription("This object indicates VPC peer keep-alive status. disabled(1) : Peer-keepalive is disabled. alive(2) : Peer-keepalive is alive. peerUnreachable(3) : Peer is unreachable through Peer-keepalive link. aliveButDomainIdDismatch(4) : Peer-keepalive is alive, but VPC domain doesn't match with each other. suspendedAsISSU(5) : Peer-keepalive is suspended during ISSU. suspendedAsDestIPUnreachable(6) : Peer-keepalive is suspended since destination ip is unreachable. suspendedAsVRFUnusable(7) : Peer-keepalive is suspended since the current VRF is unusable. misconfigured(8) : Misconfigure Peer-keepalive feature.")
cVpcPeerKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 3), CounterBasedGauge64()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveTime.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveTime.setDescription('This object indicates the time (in msec) since the peer became alive. It will hold value 0 if peer-keepalive never becomes alive.')
cVpcPeerKeepAliveMsgSendStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgSendStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgSendStatus.setDescription('This object indicates VPC peer keep-alive message sending status.')
cVpcPeerKeepAliveMsgLastSendTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgLastSendTime.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgLastSendTime.setDescription('This object indicates date and time of VPC peer keep-alive message last send. This object contains value 0x0000010100000000, if peer-keepalive message has never been sent.')
cVpcPeerKeepAliveMsgSendInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgSendInterface.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgSendInterface.setDescription('This object indicates the ifIndex of interface of VPC peer keep-alive message sent on.')
cVpcPeerKeepAliveMsgRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("success", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgRcvrStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgRcvrStatus.setDescription('This object indicates VPC peer keep-alive message receiving status.')
cVpcPeerKeepAliveMsgLastReceiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgLastReceiveTime.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgLastReceiveTime.setDescription('This object indicates date and time of VPC peer keep-alive message last received. This object contains value 0x0000010100000000, if peer-keepalive message has never been received.')
cVpcPeerKeepAliveMsgReceiveInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 1, 2, 1, 9), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgReceiveInterface.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveMsgReceiveInterface.setDescription('This object indicates the ifIndex of interface of VPC peer keep-alive message last received.')
cVpcRoleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1), )
if mibBuilder.loadTexts: cVpcRoleTable.setStatus('current')
if mibBuilder.loadTexts: cVpcRoleTable.setDescription('The table contains the VPC role status information in the managed device.')
cVpcRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcRoleDomainID"))
if mibBuilder.loadTexts: cVpcRoleEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcRoleEntry.setDescription('An entry containing VPC role information.')
cVpcRoleDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcRoleDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcRoleDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain on the local system. Value zero indicates there is no VPC management domain being configured for this device.')
cVpcRoleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("primarySecondary", 1), ("primary", 2), ("secondaryPrimary", 3), ("secondary", 4), ("noneEstablished", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcRoleStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcRoleStatus.setDescription('This object indicates the VPC role status of the peer device. primarySecondary(1) : primary, and operational secondary. primary(2) : primary, and operational primary. secondaryPrimary(3) : secondary, and operational primary. secondary(4) : secondary, and operational secondary. noneEstabished(5) : none peer device.')
cVpcDualActiveDetectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcDualActiveDetectionStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcDualActiveDetectionStatus.setDescription('This object indicates the dual active detection status of peer device. true(1) : indicate that Dual Active is detected. false(2) : indicate that Dual Active is not detected.')
cVpcSystemAdminMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 4), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcSystemAdminMacAddress.setStatus('current')
if mibBuilder.loadTexts: cVpcSystemAdminMacAddress.setDescription('This object specifies VPC system MAC address.')
cVpcSystemOperMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcSystemOperMacAddress.setStatus('current')
if mibBuilder.loadTexts: cVpcSystemOperMacAddress.setDescription('This object indicates VPC system operational MAC address.')
cVpcLocalOperMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcLocalOperMacAddress.setStatus('current')
if mibBuilder.loadTexts: cVpcLocalOperMacAddress.setDescription('This object indicates VPC local system operational MAC address.')
cVpcSystemAdminPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcSystemAdminPriority.setStatus('current')
if mibBuilder.loadTexts: cVpcSystemAdminPriority.setDescription('This object specifies VPC system priority.')
cVpcSystemOperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcSystemOperPriority.setStatus('current')
if mibBuilder.loadTexts: cVpcSystemOperPriority.setDescription('This object indicates VPC system operational priority.')
cVpcLocalRoleAdminPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cVpcLocalRoleAdminPriority.setStatus('current')
if mibBuilder.loadTexts: cVpcLocalRoleAdminPriority.setDescription('This object specifies VPC local role priority.')
cVpcLocalRoleOperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcLocalRoleOperPriority.setStatus('current')
if mibBuilder.loadTexts: cVpcLocalRoleOperPriority.setDescription('This object indicates VPC local role operational priority.')
cVpcStatsPeerKeepAliveTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1), )
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveTable.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveTable.setDescription('The table contains the statistics of VPC peer-keepalive messages in the managed device.')
cVpcStatsPeerKeepAliveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcStatsPeerKeepAliveDomainID"))
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveEntry.setDescription('An entry containing statistics of the VPC peer-keepalive messages.')
cVpcStatsPeerKeepAliveDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain on the local system. Value zero indicates there is no VPC management domain being configured for this device.')
cVpcStatsPeerKeepAliveMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveMsgsSent.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveMsgsSent.setDescription('This object indicates the number of peer-keepalive messages sent to peer.')
cVpcStatsPeerKeepAliveMsgsRcved = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveMsgsRcved.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveMsgsRcved.setDescription('This object indicates the number of peer-keepalive messages received from peer.')
cVpcStatsPeerKeepAliveAvgInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveAvgInterval.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerKeepAliveAvgInterval.setDescription('This object indicates the average interval for the peer-keepalive messages received from peer.')
cVpcStatsPeerStatusChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatsPeerStatusChangeCount.setStatus('current')
if mibBuilder.loadTexts: cVpcStatsPeerStatusChangeCount.setDescription('This object indicates the number of times that the peer status gets changed.')
cVpcStatusPeerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 1), )
if mibBuilder.loadTexts: cVpcStatusPeerLinkTable.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusPeerLinkTable.setDescription('The table contains the list of VPC peer-links in the managed device.')
cVpcStatusPeerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcStatusPeerLinkDomainID"))
if mibBuilder.loadTexts: cVpcStatusPeerLinkEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusPeerLinkEntry.setDescription('An entry containing VPC peer-link management information applicable to a particular VPC domain.')
cVpcStatusPeerLinkDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcStatusPeerLinkDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusPeerLinkDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain.')
cVpcStatusPeerLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 1, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatusPeerLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusPeerLinkIfIndex.setDescription('The value of the ifIndex corresponding to the peer link of this VPC domain.')
cVpcStatusHostLinkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2), )
if mibBuilder.loadTexts: cVpcStatusHostLinkTable.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkTable.setDescription('The table contains the VPC host-link summary information in the managed device.')
cVpcStatusHostLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-VPC-MIB", "cVpcStatusHostLinkDomainID"), (0, "CISCO-VPC-MIB", "cVpcStatusHostLinkVpcID"))
if mibBuilder.loadTexts: cVpcStatusHostLinkEntry.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkEntry.setDescription('An entry containing VPC host-link summary information.')
cVpcStatusHostLinkDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cVpcStatusHostLinkDomainID.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkDomainID.setDescription('An arbitrary value to uniquely identify the VPC management domain.')
cVpcStatusHostLinkVpcID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cVpcStatusHostLinkVpcID.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkVpcID.setDescription('An arbitrary value to uniquely identify a VPC link between the host and the switch for a given VPC management domain.')
cVpcStatusHostLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatusHostLinkIfIndex.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkIfIndex.setDescription('The value of the ifIndex corresponding to a host-link interface.')
cVpcStatusHostLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("downStar", 2), ("up", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatusHostLinkStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkStatus.setDescription('This object indicates the current status of VPC host-link. down(1) : Host link is down. downStar(2) : Local host link is down, forwarding via vPC peer-link. up(3) : Host link is up.')
cVpcStatusHostLinkConsistencyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("success", 1), ("failed", 2), ("notApplicable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatusHostLinkConsistencyStatus.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkConsistencyStatus.setDescription('This object indicates the status of configuration consistency check of this VPC host link.')
cVpcStatusHostLinkConsistencyDetail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 807, 1, 4, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cVpcStatusHostLinkConsistencyDetail.setStatus('current')
if mibBuilder.loadTexts: cVpcStatusHostLinkConsistencyDetail.setDescription('This object indicates the reason of consistency check status change detail.')
ciscoVpcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 1))
ciscoVpcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2))
ciscoVpcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 1, 1)).setObjects(("CISCO-VPC-MIB", "cVpcPeerKeepAliveConfigInfoGroup"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveStatusInfoGroup"), ("CISCO-VPC-MIB", "cVpcMIBRoleGroup"), ("CISCO-VPC-MIB", "cVpcMIBStatisticsGroup"), ("CISCO-VPC-MIB", "cVpcMIBPeerLinkStatusGroup"), ("CISCO-VPC-MIB", "cVpcMIBHostLinkStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVpcMIBCompliance = ciscoVpcMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoVpcMIBCompliance.setDescription('The compliance statement for CISCO-VPC-MIB.')
cVpcPeerKeepAliveConfigInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 1)).setObjects(("CISCO-VPC-MIB", "cVpcPeerKeepAliveDestAddrType"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveDestAddr"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveSourceAddrType"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveSourceAddr"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveUdpPort"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveInterval"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveTimeout"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveHoldTimeout"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveTos"), ("CISCO-VPC-MIB", "cVpcPeerKeepAlivePrecedence"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveTosByte"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcPeerKeepAliveConfigInfoGroup = cVpcPeerKeepAliveConfigInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveConfigInfoGroup.setDescription('A collection of objects providing peer-keepalive link and messages configuration information.')
cVpcPeerKeepAliveStatusInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 2)).setObjects(("CISCO-VPC-MIB", "cVpcPeerKeepAliveStatus"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveTime"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgSendStatus"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgLastSendTime"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgSendInterface"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgRcvrStatus"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgLastReceiveTime"), ("CISCO-VPC-MIB", "cVpcPeerKeepAliveMsgReceiveInterface"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcPeerKeepAliveStatusInfoGroup = cVpcPeerKeepAliveStatusInfoGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcPeerKeepAliveStatusInfoGroup.setDescription('A collection of objects providing peer-keepalive status information.')
cVpcMIBRoleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 3)).setObjects(("CISCO-VPC-MIB", "cVpcRoleStatus"), ("CISCO-VPC-MIB", "cVpcDualActiveDetectionStatus"), ("CISCO-VPC-MIB", "cVpcSystemAdminMacAddress"), ("CISCO-VPC-MIB", "cVpcSystemOperMacAddress"), ("CISCO-VPC-MIB", "cVpcLocalOperMacAddress"), ("CISCO-VPC-MIB", "cVpcSystemAdminPriority"), ("CISCO-VPC-MIB", "cVpcSystemOperPriority"), ("CISCO-VPC-MIB", "cVpcLocalRoleAdminPriority"), ("CISCO-VPC-MIB", "cVpcLocalRoleOperPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcMIBRoleGroup = cVpcMIBRoleGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcMIBRoleGroup.setDescription('A collection of objects providing peer-keepalive role information.')
cVpcMIBStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 4)).setObjects(("CISCO-VPC-MIB", "cVpcStatsPeerKeepAliveMsgsSent"), ("CISCO-VPC-MIB", "cVpcStatsPeerKeepAliveMsgsRcved"), ("CISCO-VPC-MIB", "cVpcStatsPeerKeepAliveAvgInterval"), ("CISCO-VPC-MIB", "cVpcStatsPeerStatusChangeCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcMIBStatisticsGroup = cVpcMIBStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcMIBStatisticsGroup.setDescription('A collection of objects providing peer-keepalive statistics information.')
cVpcMIBPeerLinkStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 5)).setObjects(("CISCO-VPC-MIB", "cVpcStatusPeerLinkIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcMIBPeerLinkStatusGroup = cVpcMIBPeerLinkStatusGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcMIBPeerLinkStatusGroup.setDescription('A collection of objects providing peer-link status information')
cVpcMIBHostLinkStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 807, 2, 2, 6)).setObjects(("CISCO-VPC-MIB", "cVpcStatusHostLinkIfIndex"), ("CISCO-VPC-MIB", "cVpcStatusHostLinkStatus"), ("CISCO-VPC-MIB", "cVpcStatusHostLinkConsistencyStatus"), ("CISCO-VPC-MIB", "cVpcStatusHostLinkConsistencyDetail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cVpcMIBHostLinkStatusGroup = cVpcMIBHostLinkStatusGroup.setStatus('current')
if mibBuilder.loadTexts: cVpcMIBHostLinkStatusGroup.setDescription('A collection of objects providing host-link VPC status information.')
mibBuilder.exportSymbols("CISCO-VPC-MIB", cVpcRoleTable=cVpcRoleTable, ciscoVpcMIBCompliances=ciscoVpcMIBCompliances, cVpcPeerKeepAliveDestAddrType=cVpcPeerKeepAliveDestAddrType, cVpcPeerKeepAliveSourceAddr=cVpcPeerKeepAliveSourceAddr, cVpcPeerKeepAliveConfigEntry=cVpcPeerKeepAliveConfigEntry, cVpcStatsPeerKeepAliveDomainID=cVpcStatsPeerKeepAliveDomainID, cVpcStatusHostLinkConsistencyStatus=cVpcStatusHostLinkConsistencyStatus, cVpcPeerKeepAliveMsgLastReceiveTime=cVpcPeerKeepAliveMsgLastReceiveTime, cVpcPeerKeepAliveConfigDomainID=cVpcPeerKeepAliveConfigDomainID, cVpcPeerKeepAliveMsgSendStatus=cVpcPeerKeepAliveMsgSendStatus, cVpcDualActiveDetectionStatus=cVpcDualActiveDetectionStatus, cVpcSystemOperPriority=cVpcSystemOperPriority, cVpcStatusHostLinkVpcID=cVpcStatusHostLinkVpcID, cVpcStatusPeerLinkDomainID=cVpcStatusPeerLinkDomainID, cVpcStatsPeerKeepAliveMsgsSent=cVpcStatsPeerKeepAliveMsgsSent, cVpcStatsPeerKeepAliveAvgInterval=cVpcStatsPeerKeepAliveAvgInterval, cVpcStatsPeerKeepAliveMsgsRcved=cVpcStatsPeerKeepAliveMsgsRcved, cVpcStatusPeerLinkTable=cVpcStatusPeerLinkTable, cVpcStatus=cVpcStatus, cVpcStatsPeerKeepAliveEntry=cVpcStatsPeerKeepAliveEntry, ciscoVpcMIBCompliance=ciscoVpcMIBCompliance, cVpcPeerKeepAlivePrecedence=cVpcPeerKeepAlivePrecedence, cVpcPeerKeepAliveTime=cVpcPeerKeepAliveTime, cVpcPeerKeepAliveSourceAddrType=cVpcPeerKeepAliveSourceAddrType, cVpcStatusHostLinkStatus=cVpcStatusHostLinkStatus, cVpcMIBHostLinkStatusGroup=cVpcMIBHostLinkStatusGroup, ciscoVpcMIBConformance=ciscoVpcMIBConformance, cVpcRoleDomainID=cVpcRoleDomainID, ciscoVpcMIB=ciscoVpcMIB, cVpcRole=cVpcRole, ciscoVpcMIBObjects=ciscoVpcMIBObjects, cVpcPeerKeepAliveEntry=cVpcPeerKeepAliveEntry, cVpcStatusHostLinkTable=cVpcStatusHostLinkTable, cVpcMIBRoleGroup=cVpcMIBRoleGroup, cVpcPeerKeepAliveVrfName=cVpcPeerKeepAliveVrfName, cVpcStatusHostLinkDomainID=cVpcStatusHostLinkDomainID, cVpcStatusHostLinkConsistencyDetail=cVpcStatusHostLinkConsistencyDetail, cVpcPeerKeepAliveInterval=cVpcPeerKeepAliveInterval, cVpcMIBStatisticsGroup=cVpcMIBStatisticsGroup, cVpcMIBPeerLinkStatusGroup=cVpcMIBPeerLinkStatusGroup, cVpcPeerKeepAliveStatus=cVpcPeerKeepAliveStatus, cVpcStatsPeerStatusChangeCount=cVpcStatsPeerStatusChangeCount, cVpcPeerKeepAliveDestAddr=cVpcPeerKeepAliveDestAddr, cVpcPeerKeepAliveMsgRcvrStatus=cVpcPeerKeepAliveMsgRcvrStatus, cVpcPeerKeepAliveTos=cVpcPeerKeepAliveTos, cVpcPeerKeepAliveTable=cVpcPeerKeepAliveTable, cVpcStatusPeerLinkIfIndex=cVpcStatusPeerLinkIfIndex, cVpcSystemOperMacAddress=cVpcSystemOperMacAddress, cVpcPeerKeepAliveConfigTable=cVpcPeerKeepAliveConfigTable, cVpcPeerKeepAliveUdpPort=cVpcPeerKeepAliveUdpPort, cVpcStatusPeerLinkEntry=cVpcStatusPeerLinkEntry, cVpcPeerKeepAliveTosByte=cVpcPeerKeepAliveTosByte, cVpcPeerKeepAliveMsgLastSendTime=cVpcPeerKeepAliveMsgLastSendTime, cVpcLocalOperMacAddress=cVpcLocalOperMacAddress, cVpcPeerKeepAliveHoldTimeout=cVpcPeerKeepAliveHoldTimeout, cVpcStatusHostLinkEntry=cVpcStatusHostLinkEntry, cVpcRoleStatus=cVpcRoleStatus, cVpcRoleEntry=cVpcRoleEntry, cVpcPeerKeepAliveDomainID=cVpcPeerKeepAliveDomainID, cVpcPeerKeepAliveConfigInfoGroup=cVpcPeerKeepAliveConfigInfoGroup, cVpcSystemAdminMacAddress=cVpcSystemAdminMacAddress, cVpcStatsPeerKeepAliveTable=cVpcStatsPeerKeepAliveTable, cVpcPeerKeepAlive=cVpcPeerKeepAlive, ciscoVpcMIBGroups=ciscoVpcMIBGroups, cVpcPeerKeepAliveTimeout=cVpcPeerKeepAliveTimeout, cVpcLocalRoleAdminPriority=cVpcLocalRoleAdminPriority, PYSNMP_MODULE_ID=ciscoVpcMIB, cVpcSystemAdminPriority=cVpcSystemAdminPriority, cVpcPeerKeepAliveMsgSendInterface=cVpcPeerKeepAliveMsgSendInterface, cVpcLocalRoleOperPriority=cVpcLocalRoleOperPriority, cVpcStatusHostLinkIfIndex=cVpcStatusHostLinkIfIndex, ciscoVpcMIBNotifs=ciscoVpcMIBNotifs, cVpcPeerKeepAliveMsgReceiveInterface=cVpcPeerKeepAliveMsgReceiveInterface, cVpcPeerKeepAliveStatusInfoGroup=cVpcPeerKeepAliveStatusInfoGroup, cVpcStatistics=cVpcStatistics)
