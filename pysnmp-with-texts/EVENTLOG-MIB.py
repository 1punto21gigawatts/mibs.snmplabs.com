#
# PySNMP MIB module EVENTLOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EVENTLOG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:06:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
eventlog, = mibBuilder.importSymbols("CORIOLIS-MIB", "eventlog")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Integer32, IpAddress, Counter32, NotificationType, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, ObjectIdentity, TimeTicks, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "IpAddress", "Counter32", "NotificationType", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eventlogMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5812, 9, 1))
if mibBuilder.loadTexts: eventlogMIB.setLastUpdated('0010300000Z')
if mibBuilder.loadTexts: eventlogMIB.setOrganization('Coriolis Networks')
if mibBuilder.loadTexts: eventlogMIB.setContactInfo(' Srivathsan Srinivasagopalan Postal: 330 Codman Hill Road, Boxboro MA, 01719. Tel: +1 978 264 1904 Fax: +1 978 264 1929 E-mail: sri@coriolisnet.com')
if mibBuilder.loadTexts: eventlogMIB.setDescription(' The MIB module for event log ')
eventlogTable = MibTable((1, 3, 6, 1, 4, 1, 5812, 9, 2), )
if mibBuilder.loadTexts: eventlogTable.setStatus('current')
if mibBuilder.loadTexts: eventlogTable.setDescription('A table containing information about a generated event.')
eventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1), ).setIndexNames((0, "EVENTLOG-MIB", "eventlogEventID"))
if mibBuilder.loadTexts: eventlogEntry.setStatus('current')
if mibBuilder.loadTexts: eventlogEntry.setDescription('Entry in the table for a single transport channel')
eventlogName = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogName.setStatus('current')
if mibBuilder.loadTexts: eventlogName.setDescription('Name of the event being generated.')
eventlogDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogDesc.setStatus('current')
if mibBuilder.loadTexts: eventlogDesc.setDescription('Description of the event being generated.')
eventlogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogSeverity.setStatus('current')
if mibBuilder.loadTexts: eventlogSeverity.setDescription('Categoryof the event being generated. The various severities are: null severity = 0 clear event (lowest severity) = 1 informational event = 2 warning event = 3 minor error = 4 major error = 5 critical error = 6')
eventlogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogTime.setStatus('current')
if mibBuilder.loadTexts: eventlogTime.setDescription('Absolute time when the event occured.')
eventlogSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogSrcIpAddr.setStatus('current')
if mibBuilder.loadTexts: eventlogSrcIpAddr.setDescription('IP address of the source generating the event.')
eventlogCorEventIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogCorEventIpAddr.setStatus('current')
if mibBuilder.loadTexts: eventlogCorEventIpAddr.setDescription('IpAddress of the correlated event.')
eventlogEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogEventID.setStatus('current')
if mibBuilder.loadTexts: eventlogEventID.setDescription('Event ID of the event being generated.')
eventlogCorEventID = MibTableColumn((1, 3, 6, 1, 4, 1, 5812, 9, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventlogCorEventID.setStatus('current')
if mibBuilder.loadTexts: eventlogCorEventID.setDescription('Correlated event ID of the event being generated.')
mibBuilder.exportSymbols("EVENTLOG-MIB", eventlogCorEventIpAddr=eventlogCorEventIpAddr, eventlogMIB=eventlogMIB, eventlogDesc=eventlogDesc, eventlogSeverity=eventlogSeverity, eventlogEventID=eventlogEventID, eventlogSrcIpAddr=eventlogSrcIpAddr, eventlogTime=eventlogTime, eventlogCorEventID=eventlogCorEventID, eventlogTable=eventlogTable, eventlogName=eventlogName, PYSNMP_MODULE_ID=eventlogMIB, eventlogEntry=eventlogEntry)
