#
# PySNMP MIB module RFC1414-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RFC1414-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:57:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, ModuleIdentity, Counter32, Gauge32, NotificationType, Integer32, IpAddress, ObjectIdentity, mib_2, TimeTicks, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "ModuleIdentity", "Counter32", "Gauge32", "NotificationType", "Integer32", "IpAddress", "ObjectIdentity", "mib-2", "TimeTicks", "MibIdentifier", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tcpConnLocalAddress, tcpConnLocalPort, tcpConnRemAddress, tcpConnRemPort = mibBuilder.importSymbols("TCP-MIB", "tcpConnLocalAddress", "tcpConnLocalPort", "tcpConnRemAddress", "tcpConnRemPort")
ident = MibIdentifier((1, 3, 6, 1, 2, 1, 24))
identInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 24, 1))
identTable = MibTable((1, 3, 6, 1, 2, 1, 24, 1, 1), )
if mibBuilder.loadTexts: identTable.setStatus('mandatory')
if mibBuilder.loadTexts: identTable.setDescription('A table containing user information for TCP connections. Note that this table contains entries for all TCP connections on a managed system. The corresponding instance of tcpConnState (defined in MIB-II) indicates the state of a particular connection.')
identEntry = MibTableRow((1, 3, 6, 1, 2, 1, 24, 1, 1, 1), ).setIndexNames((0, "TCP-MIB", "tcpConnLocalAddress"), (0, "TCP-MIB", "tcpConnLocalPort"), (0, "TCP-MIB", "tcpConnRemAddress"), (0, "TCP-MIB", "tcpConnRemPort"))
if mibBuilder.loadTexts: identEntry.setStatus('mandatory')
if mibBuilder.loadTexts: identEntry.setDescription('User information about a particular TCP connection.')
identStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noError", 1), ("unknownError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identStatus.setStatus('mandatory')
if mibBuilder.loadTexts: identStatus.setDescription("Indicates whether user information for the associated TCP connection can be determined. A value of `noError(1)' indicates that user information is available. A value of `unknownError(2)' indicates that user information is not available.")
identOpSys = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identOpSys.setStatus('mandatory')
if mibBuilder.loadTexts: identOpSys.setDescription("Indicates the type of operating system in use. In addition to identifying an operating system, each assignment made for this purpose also (implicitly) identifies the textual format and maximum size of the corresponding identUserid and identMisc objects. The legal values for the `indentOpSys' strings are those listed in the SYSTEM NAMES section of the most recent edition of the ASSIGNED NUMBERS RFC [8].")
identCharset = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identCharset.setStatus('mandatory')
if mibBuilder.loadTexts: identCharset.setDescription("Indicates the repertoire of the corresponding identUserid and identMisc objects. The legal values for the `identCharset' strings are those listed in the CHARACTER SET section of the most recent edition of the ASSIGNED NUMBERS RFC [8].")
identUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identUserid.setStatus('mandatory')
if mibBuilder.loadTexts: identUserid.setDescription("Indicates the user's identity. Interpretation of this object requires examination of the corresponding value of the identOpSys and identCharset objects.")
identMisc = MibTableColumn((1, 3, 6, 1, 2, 1, 24, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: identMisc.setStatus('mandatory')
if mibBuilder.loadTexts: identMisc.setDescription('Indicates miscellaneous information about the user. Interpretation of this object requires examination of the corresponding value of the identOpSys and identCharset objects.')
mibBuilder.exportSymbols("RFC1414-MIB", identOpSys=identOpSys, identUserid=identUserid, identTable=identTable, identInfo=identInfo, identCharset=identCharset, identEntry=identEntry, identMisc=identMisc, ident=ident, identStatus=identStatus)
