#
# PySNMP MIB module RSERPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RSERPOOL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:58:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, Integer32, NotificationType, TimeTicks, Gauge32, MibIdentifier, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, iso, Bits, experimental, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Integer32", "NotificationType", "TimeTicks", "Gauge32", "MibIdentifier", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "iso", "Bits", "experimental", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rserpoolMIB = ModuleIdentity((1, 3, 6, 1, 3, 125))
rserpoolMIB.setRevisions(('2009-04-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rserpoolMIB.setRevisionsDescriptions(('This version of the MIB module is published as RFC 5525',))
if mibBuilder.loadTexts: rserpoolMIB.setLastUpdated('200904070000Z')
if mibBuilder.loadTexts: rserpoolMIB.setOrganization('IEM-TdR, UNIVERSITY OF DUISBURG-ESSEN')
if mibBuilder.loadTexts: rserpoolMIB.setContactInfo(' THOMAS-DREIBHOLZ Postal: University of Duisburg-Essen Institute for Experimental Mathematics Ellernstrasse 29 D-45326 Essen Germany Phone: +49-201-183-7637 Fax: +49-201-183-7673 Email: dreibh@iem.uni-due.de JAIWANT-MULIK Postal: Delaware State University CIS Department 1200 N. DuPont Hw Dover, DE USA 19904 Phone: +1-302-857-7910 Fax: +1-302-857-6552 Email: jaiwant@mulik.com')
if mibBuilder.loadTexts: rserpoolMIB.setDescription("The MIB module for managing an RSerPool implementation. Copyright (c) 2009 IETF Trust and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. - Neither the name of Internet Society, IETF or IETF Trust, nor the names of specific contributors, may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. This version of this MIB module is part of RFC 5525; see the RFC itself for full legal notices.")
class RSerPoolENRPServerIdentifierTC(TextualConvention, Unsigned32):
    description = 'The ID of an ENRP server'
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class RSerPoolOperationScopeTC(TextualConvention, OctetString):
    description = 'The ID of an operation scope'
    status = 'current'
    displayHint = '1024t'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 65535)

class RSerPoolPoolHandleTC(TextualConvention, OctetString):
    description = 'The pool handle'
    status = 'current'
    displayHint = '1024t'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 65535)

class RserpoolPoolElementIdentifierTC(TextualConvention, Unsigned32):
    description = 'The pool element ID'
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class RSerPoolPolicyIdentifierTC(TextualConvention, Unsigned32):
    description = 'The ID of the pool policy'
    status = 'current'
    displayHint = 'x'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class RSerPoolPolicyLoadTC(TextualConvention, Unsigned32):
    description = 'The load status of a pool element'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class RSerPoolPolicyWeightTC(TextualConvention, Unsigned32):
    description = 'The weight of a pool element'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class RSerPoolTransportUseTypeTC(TextualConvention, Integer32):
    description = 'The transport use of a pool element'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("dataOnly", 0), ("dataPlusControl", 1))

class RSerPoolOpaqueAddressTC(TextualConvention, OctetString):
    description = 'Opaque address'
    status = 'current'
    displayHint = '1024t'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 65535)

rserpoolMIBObjects = MibIdentifier((1, 3, 6, 1, 3, 125, 1))
rserpoolMIBConformance = MibIdentifier((1, 3, 6, 1, 3, 125, 2))
rserpoolENRPServers = MibIdentifier((1, 3, 6, 1, 3, 125, 1, 1))
rserpoolPoolElements = MibIdentifier((1, 3, 6, 1, 3, 125, 1, 2))
rserpoolPoolUsers = MibIdentifier((1, 3, 6, 1, 3, 125, 1, 3))
rserpoolENRPTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 1), )
if mibBuilder.loadTexts: rserpoolENRPTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPTable.setDescription('The table listing of ENRP servers.')
rserpoolENRPEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 1, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"))
if mibBuilder.loadTexts: rserpoolENRPEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPEntry.setDescription('An ENRP server entry in the table listing of ENRP servers.')
rserpoolENRPIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPIndex.setDescription('An integer to uniquely identify an ENRP server.')
rserpoolENRPOperationScope = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 2), RSerPoolOperationScopeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPOperationScope.setReference('Section 1.2 of RFC 3237 defines the term operation scope.')
if mibBuilder.loadTexts: rserpoolENRPOperationScope.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPOperationScope.setDescription('The definition of the operation scope of this ENRP server.')
rserpoolENRPIdentifier = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 3), RSerPoolENRPServerIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPIdentifier.setReference('Section 3.1 of RFC 5351 explains the ENRP server identifier.')
if mibBuilder.loadTexts: rserpoolENRPIdentifier.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPIdentifier.setDescription('The ENRP server identifier of this ENRP server.')
rserpoolENRPDescription = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolENRPDescription.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPDescription.setDescription('A textual description of this ENRP server, e.g., its location and a contact address of its administrator. This object SHOULD be maintained in a persistent manner.')
rserpoolENRPUptime = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUptime.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUptime.setDescription('The ENRP service uptime of this ENRP server.')
rserpoolENRPPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 6), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPort.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPort.setDescription('The Stream Control Transmission Protocol (SCTP) port number of the ENRP protocol endpoint of this ENRP server.')
rserpoolENRPASAPAnnouncePort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPAnnouncePort.setReference('Section 3.2 of RFC 5351 explains the server-discovery mechanism using ASAP announces.')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnouncePort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnouncePort.setDescription('The destination UDP port number to which ASAP multicast announce messages are sent.')
rserpoolENRPASAPAnnounceAddrType = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 8), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddrType.setReference('Section 3.2 of RFC 5351 explains the server-discovery mechanism using ASAP announces.')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddrType.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddrType.setDescription('The network-layer protocol over which ASAP multicast announce messages are sent.')
rserpoolENRPASAPAnnounceAddr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddr.setReference('Section 3.2 of RFC 5351 explains the server-discovery mechanism using ASAP announces.')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAnnounceAddr.setDescription('The destination IP multicast address to which ASAP multicast announce messages are sent. The type of this address is given in rserpoolENRPASAPAnnounceAddrType.')
rserpoolENRPENRPAnnouncePort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 10), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPENRPAnnouncePort.setReference('Section 3.1 of RFC 5353 explains the ENRP multicast announce mechanism.')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnouncePort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnouncePort.setDescription('The destination UDP port number to which ENRP multicast announce messages are sent.')
rserpoolENRPENRPAnnounceAddrType = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 11), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddrType.setReference('Section 3.1 of RFC 5353 explains the ENRP multicast announce mechanism.')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddrType.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddrType.setDescription('The network-layer protocol over which ENRP multicast announce messages are sent.')
rserpoolENRPENRPAnnounceAddr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 1, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddr.setReference('Section 3.1 of RFC 5353 explains the ENRP multicast announce mechanism.')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAnnounceAddr.setDescription('The destination multicast IP address to which ENRP multicast announce messages are sent. The type of this address is given in rserpoolENRPENRPAnnounceAddrType.')
rserpoolENRPPoolTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 3), )
if mibBuilder.loadTexts: rserpoolENRPPoolTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolTable.setDescription('The table listing of pools.')
rserpoolENRPPoolEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 3, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolIndex"))
if mibBuilder.loadTexts: rserpoolENRPPoolEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolEntry.setDescription('The pool entry in the table listing of pools.')
rserpoolENRPPoolIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPPoolIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolIndex.setDescription('An integer to uniquely identify a pool.')
rserpoolENRPPoolHandle = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 3, 1, 2), RSerPoolPoolHandleTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPoolHandle.setReference('Section 1.2 of RFC 3237 defines the term pool handle.')
if mibBuilder.loadTexts: rserpoolENRPPoolHandle.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolHandle.setDescription('The pool handle of this pool.')
rserpoolENRPPoolElementTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 4), )
if mibBuilder.loadTexts: rserpoolENRPPoolElementTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolElementTable.setDescription('The table listing of pool elements.')
rserpoolENRPPoolElementEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 4, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolElementIndex"))
if mibBuilder.loadTexts: rserpoolENRPPoolElementEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolElementEntry.setDescription('A pool element in the table listing of pool elements.')
rserpoolENRPPoolElementIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPPoolElementIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolElementIndex.setDescription('An integer to uniquely identify a pool element. Note, that uniqueness of a pool element identifier in the pool is not enforced; therefore, this index is required here!')
rserpoolENRPPoolElementID = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 2), RserpoolPoolElementIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPoolElementID.setReference('Section 2.2 of RFC 5351 explains the pool element identifier usage.')
if mibBuilder.loadTexts: rserpoolENRPPoolElementID.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPoolElementID.setDescription('The pool element identifier of this pool element.')
rserpoolENRPASAPTransportPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 3), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPTransportPort.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the port number is given here.')
if mibBuilder.loadTexts: rserpoolENRPASAPTransportPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPTransportPort.setDescription('The SCTP port number of the ASAP endpoint of this pool element.')
rserpoolENRPUserTransportProto = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserTransportProto.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the transport protocol number is given here.')
if mibBuilder.loadTexts: rserpoolENRPUserTransportProto.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserTransportProto.setDescription('The transport protocol number of the service endpoint of this pool element.')
rserpoolENRPUserTransportPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 5), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserTransportPort.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the port number is given here.')
if mibBuilder.loadTexts: rserpoolENRPUserTransportPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserTransportPort.setDescription("The transport protocol's port number of the service endpoint of this pool element.")
rserpoolENRPUserTransportUse = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 6), RSerPoolTransportUseTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserTransportUse.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the transport use is given here.')
if mibBuilder.loadTexts: rserpoolENRPUserTransportUse.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserTransportUse.setDescription('The transport use of the service endpoint of this pool element.')
rserpoolENRPPolicyID = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 7), RSerPoolPolicyIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPolicyID.setReference('Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy identifier is given here.')
if mibBuilder.loadTexts: rserpoolENRPPolicyID.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPolicyID.setDescription('The pool policy of this pool element.')
rserpoolENRPPolicyDescription = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPolicyDescription.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPolicyDescription.setDescription('The textual description of the pool policy of this pool element.')
rserpoolENRPPolicyWeight = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 9), RSerPoolPolicyWeightTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPolicyWeight.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's weight parameter is given here.")
if mibBuilder.loadTexts: rserpoolENRPPolicyWeight.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPolicyWeight.setDescription("The pool policy's weight parameter for this pool element.")
rserpoolENRPPolicyLoad = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 10), RSerPoolPolicyLoadTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPolicyLoad.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's load parameter is given here.")
if mibBuilder.loadTexts: rserpoolENRPPolicyLoad.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPolicyLoad.setDescription("The pool policy's load status for this pool element.")
rserpoolENRPPolicyLoadDeg = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 11), RSerPoolPolicyLoadTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPolicyLoadDeg.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's load degradation parameter is given here.")
if mibBuilder.loadTexts: rserpoolENRPPolicyLoadDeg.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPolicyLoadDeg.setDescription("The pool policy's load degradation parameter for this pool element.")
rserpoolENRPRegistrationLife = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPRegistrationLife.setReference('Section 3.10 of RFC 5354 defines the Registration Life.')
if mibBuilder.loadTexts: rserpoolENRPRegistrationLife.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPRegistrationLife.setDescription('The registration life of this pool element.')
rserpoolENRPHomeENRPServer = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 4, 1, 13), RSerPoolENRPServerIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPHomeENRPServer.setReference('Section 3.10 of RFC 5354 defines the Home ENRP Server Identifier.')
if mibBuilder.loadTexts: rserpoolENRPHomeENRPServer.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPHomeENRPServer.setDescription('The ID of the Home ENRP server of this pool element.')
rserpoolENRPASAPAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 5), )
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTable.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the addresses are listed in this table.')
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTable.setDescription('A table listing of all IP addresses of the ASAP transport endpoint.')
rserpoolENRPASAPAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 5, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolElementIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPASAPAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTableEntry.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which an address is contained by this entry.')
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTableEntry.setDescription('An IP address of the ASAP transport endpoint.')
rserpoolENRPASAPAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPAddrTableIndex.setDescription('A unique identifier for the IP address of an ASAP transport endpoint.')
rserpoolENRPASAPL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 5, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPL3Type.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the network-layer protocol number is given here.')
if mibBuilder.loadTexts: rserpoolENRPASAPL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPL3Type.setDescription('The network-layer protocol (IPv4 or IPv6) of an IP address of an ASAP transport endpoint.')
rserpoolENRPASAPL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 5, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPASAPL3Addr.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the network-layer address (IPv4 or IPv6) is given here.')
if mibBuilder.loadTexts: rserpoolENRPASAPL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPASAPL3Addr.setDescription('The IP address of an ASAP transport endpoint. The type of this address is given in rserpoolENRPASAPL3Type.')
rserpoolENRPUserAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 6), )
if mibBuilder.loadTexts: rserpoolENRPUserAddrTable.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the addresses are listed in this table.')
if mibBuilder.loadTexts: rserpoolENRPUserAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserAddrTable.setDescription('A table listing of all IP addresses of the user transport endpoint.')
rserpoolENRPUserAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 6, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPoolElementIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPUserAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolENRPUserAddrTableEntry.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which an address is contained by this entry.')
if mibBuilder.loadTexts: rserpoolENRPUserAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserAddrTableEntry.setDescription('An IP address of the user transport endpoint.')
rserpoolENRPUserAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPUserAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserAddrTableIndex.setDescription('A unique identifier for the IP address of a user transport endpoint.')
rserpoolENRPUserL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 6, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserL3Type.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the network-layer protocol number is given here.')
if mibBuilder.loadTexts: rserpoolENRPUserL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserL3Type.setDescription('The network-layer protocol (IPv4 or IPv6) of an IP address of a user transport endpoint. Set to unknown for an opaque address.')
rserpoolENRPUserL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 6, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserL3Addr.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the network-layer address (IPv4 or IPv6) is given here.')
if mibBuilder.loadTexts: rserpoolENRPUserL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserL3Addr.setDescription('The IP address of a user transport endpoint. The type of this address is given in rserpoolENRPUserL3Type.')
rserpoolENRPUserL3Opaque = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 6, 1, 4), RSerPoolOpaqueAddressTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPUserL3Opaque.setReference('Section 3.16 of RFC 5354 defines the opaque transport address.')
if mibBuilder.loadTexts: rserpoolENRPUserL3Opaque.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPUserL3Opaque.setDescription('The opaque address of a user transport endpoint.')
rserpoolENRPENRPAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 7), )
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTable.setDescription('A table listing of all IP addresses of the ENRP transport endpoint.')
rserpoolENRPENRPAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 7, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPENRPAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTableEntry.setDescription('An IP address of the ENRP transport endpoint.')
rserpoolENRPENRPAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPAddrTableIndex.setDescription('A unique identifier for the IP address of an ENRP transport endpoint.')
rserpoolENRPENRPL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 7, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPENRPL3Type.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPENRPL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPL3Type.setDescription('The network-layer protocol (IPv4 or IPv6) of an IP address of an ENRP transport endpoint.')
rserpoolENRPENRPL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 7, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPENRPL3Addr.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPENRPL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPENRPL3Addr.setDescription('The IP address of an ENRP transport endpoint. The type of this address is given in rserpoolENRPENRPL3Type.')
rserpoolENRPPeerTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 8), )
if mibBuilder.loadTexts: rserpoolENRPPeerTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerTable.setDescription('The table listing of a peer table.')
rserpoolENRPPeerEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 8, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPPeerIndex"))
if mibBuilder.loadTexts: rserpoolENRPPeerEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerEntry.setDescription('A peer entry in the table listing of a peer table.')
rserpoolENRPPeerIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPPeerIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerIndex.setDescription('A unique identifier for a peer entry in the table listing of a peer table.')
rserpoolENRPPeerIdentifier = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 8, 1, 2), RSerPoolENRPServerIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPeerIdentifier.setReference('RFC 5353 explains the usage of the ENRP server identifier.')
if mibBuilder.loadTexts: rserpoolENRPPeerIdentifier.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerIdentifier.setDescription('The ENRP identifier of this peer.')
rserpoolENRPPeerPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 8, 1, 3), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPeerPort.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPPeerPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerPort.setDescription('The SCTP port number of the ENRP transport endpoint of this peer.')
rserpoolENRPPeerLastHeard = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 8, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPeerLastHeard.setReference('Section 4.1 of RFC 5353 defines the last heard value.')
if mibBuilder.loadTexts: rserpoolENRPPeerLastHeard.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerLastHeard.setDescription('The time since the reception of the last ENRP Presence message of this peer.')
rserpoolENRPPeerAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 1, 9), )
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTable.setDescription('A table listing of the peer endpoint addresses.')
rserpoolENRPPeerAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 1, 9, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolENRPPeerIndex"), (0, "RSERPOOL-MIB", "rserpoolENRPPeerAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTableEntry.setDescription('A table listing of all IP addresses of the ENRP transport endpoint of a peer referenced by rserpoolENRPPeerIndex.')
rserpoolENRPPeerAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerAddrTableIndex.setDescription('A unique identifier for the IP address of a peer ENRP transport endpoint.')
rserpoolENRPPeerL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 9, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPeerL3Type.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPPeerL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerL3Type.setDescription('The network-layer protocol (IPv4 or IPv6) of an IP address of a peer ENRP transport endpoint.')
rserpoolENRPPeerL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 1, 9, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolENRPPeerL3Addr.setReference('RFC 5353 defines the ENRP protocol.')
if mibBuilder.loadTexts: rserpoolENRPPeerL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPPeerL3Addr.setDescription('The IP address of a peer ENRP transport endpoint. The type of this address is given in rserpoolENRPPeerL3Type.')
rserpoolPETable = MibTable((1, 3, 6, 1, 3, 125, 1, 2, 1), )
if mibBuilder.loadTexts: rserpoolPETable.setStatus('current')
if mibBuilder.loadTexts: rserpoolPETable.setDescription('The table listing of pool elements.')
rserpoolPEEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 2, 1, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolPEIndex"))
if mibBuilder.loadTexts: rserpoolPEEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEEntry.setDescription('A pool element in the table listing of pool elements.')
rserpoolPEIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolPEIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEIndex.setDescription('An integer to uniquely identify a pool element. Note, that uniqueness of a pool element identifier in the pool is not enforced; therefore, this index is required here!')
rserpoolPEOperationScope = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 2), RSerPoolOperationScopeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEOperationScope.setReference('Section 1.2 of RFC 3237 defines the term operation scope.')
if mibBuilder.loadTexts: rserpoolPEOperationScope.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEOperationScope.setDescription('The operation scope of this pool element.')
rserpoolPEPoolHandle = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 3), RSerPoolPoolHandleTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEPoolHandle.setReference('Section 1.2 of RFC 3237 defines the term pool handle.')
if mibBuilder.loadTexts: rserpoolPEPoolHandle.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPoolHandle.setDescription("The pool handle of this pool element. Changing this object will update the pool element's pool handle and result in a re-registration. This object SHOULD be maintained in a persistent manner.")
rserpoolPEIdentifier = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 4), RserpoolPoolElementIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEIdentifier.setReference('Section 3.10 of RFC 5354 defines the pool element identifier.')
if mibBuilder.loadTexts: rserpoolPEIdentifier.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEIdentifier.setDescription('The pool element identifier of this pool element.')
rserpoolPEDescription = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEDescription.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEDescription.setDescription('A textual description of this pool element, e.g., its location and a contact address of its administrator. This object SHOULD be maintained in a persistent manner.')
rserpoolPEUptime = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUptime.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUptime.setDescription('The ENRP service uptime of this pool element.')
rserpoolPEASAPTransportPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEASAPTransportPort.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the port number is given here.')
if mibBuilder.loadTexts: rserpoolPEASAPTransportPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPTransportPort.setDescription('The SCTP port number of the ASAP endpoint of this pool element.')
rserpoolPEUserTransportProto = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserTransportProto.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the transport protocol number is given here.')
if mibBuilder.loadTexts: rserpoolPEUserTransportProto.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserTransportProto.setDescription('The transport protocol number of the service endpoint of this pool element.')
rserpoolPEUserTransportPort = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 9), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserTransportPort.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the port number is given here.')
if mibBuilder.loadTexts: rserpoolPEUserTransportPort.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserTransportPort.setDescription("The transport protocol's port number of the service endpoint of this pool element.")
rserpoolPEUserTransportUse = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 10), RSerPoolTransportUseTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserTransportUse.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the transport use is given here.')
if mibBuilder.loadTexts: rserpoolPEUserTransportUse.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserTransportUse.setDescription('The transport use of the service endpoint of this pool element.')
rserpoolPEPolicyID = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 11), RSerPoolPolicyIdentifierTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEPolicyID.setReference('Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy identifier is given here.')
if mibBuilder.loadTexts: rserpoolPEPolicyID.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPolicyID.setDescription("The pool policy of this pool element. Changing this object will update the pool element's policy and result in a re-registration. This object SHOULD be maintained in a persistent manner.")
rserpoolPEPolicyDescription = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEPolicyDescription.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPolicyDescription.setDescription('The textual description of the pool policy of this pool element. This object SHOULD be maintained in a persistent manner.')
rserpoolPEPolicyWeight = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 13), RSerPoolPolicyWeightTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEPolicyWeight.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's weight parameter is given here.")
if mibBuilder.loadTexts: rserpoolPEPolicyWeight.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPolicyWeight.setDescription("The pool policy's weight parameter for this pool element. Changing this object will update the pool element's policy weight setting and result in a re-registration. This object SHOULD be maintained in a persistent manner.")
rserpoolPEPolicyLoad = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 14), RSerPoolPolicyLoadTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEPolicyLoad.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's load parameter is given here.")
if mibBuilder.loadTexts: rserpoolPEPolicyLoad.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPolicyLoad.setDescription("The pool policy's load status for this pool element.")
rserpoolPEPolicyLoadDeg = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 15), RSerPoolPolicyLoadTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPEPolicyLoadDeg.setReference("Section 3.8 of RFC 5354 defines the Member Selection Policy Parameter of which the policy's load degradation parameter is given here.")
if mibBuilder.loadTexts: rserpoolPEPolicyLoadDeg.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEPolicyLoadDeg.setDescription("The pool policy's load degradation parameter for this pool element. Changing this object will update the pool element's load degradation setting and result in a re-registration. This object SHOULD be maintained in a persistent manner.")
rserpoolPERegistrationLife = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 16), TimeTicks()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPERegistrationLife.setReference('Section 3.10 of RFC 5354 defines the Registration Life.')
if mibBuilder.loadTexts: rserpoolPERegistrationLife.setStatus('current')
if mibBuilder.loadTexts: rserpoolPERegistrationLife.setDescription("The registration life of this pool element. Changing this object will update the pool element's lifetime setting and result in a re-registration. This object SHOULD be maintained in a persistent manner.")
rserpoolPEHomeENRPServer = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 1, 1, 17), RSerPoolENRPServerIdentifierTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEHomeENRPServer.setReference('Section 3.10 of RFC 5354 defines the Home ENRP Server Identifier.')
if mibBuilder.loadTexts: rserpoolPEHomeENRPServer.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEHomeENRPServer.setDescription('The ID of the Home ENRP server of this pool element.')
rserpoolPEASAPAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 2, 2), )
if mibBuilder.loadTexts: rserpoolPEASAPAddrTable.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the addresses are listed in this table.')
if mibBuilder.loadTexts: rserpoolPEASAPAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPAddrTable.setDescription('A table listing of all IP addresses of the ASAP transport endpoint.')
rserpoolPEASAPAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 2, 2, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolPEIndex"), (0, "RSERPOOL-MIB", "rserpoolPEASAPAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolPEASAPAddrTableEntry.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which an address is contained by this entry.')
if mibBuilder.loadTexts: rserpoolPEASAPAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPAddrTableEntry.setDescription('An IP address of the ASAP transport endpoint.')
rserpoolPEASAPAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolPEASAPAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPAddrTableIndex.setDescription('A unique identifier for the IP address of an ASAP transport endpoint.')
rserpoolPEASAPL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 2, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEASAPL3Type.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the network-layer protocol number is given here.')
if mibBuilder.loadTexts: rserpoolPEASAPL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPL3Type.setDescription('The network-layer protocol (IPv4 or IPv6) of an IP address of an ASAP transport endpoint.')
rserpoolPEASAPL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEASAPL3Addr.setReference('Section 3.10 of RFC 5354 defines the ASAP Transport Parameter of which the network-layer address (IPv4 or IPv6) is given here.')
if mibBuilder.loadTexts: rserpoolPEASAPL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEASAPL3Addr.setDescription('The IP address of an ASAP transport endpoint. The type of this address is given in rserpoolPEASAPL3Type.')
rserpoolPEUserAddrTable = MibTable((1, 3, 6, 1, 3, 125, 1, 2, 6), )
if mibBuilder.loadTexts: rserpoolPEUserAddrTable.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the addresses are listed in this table.')
if mibBuilder.loadTexts: rserpoolPEUserAddrTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserAddrTable.setDescription('A table listing of all IP addresses of the user transport endpoint.')
rserpoolPEUserAddrTableEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 2, 6, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolPEIndex"), (0, "RSERPOOL-MIB", "rserpoolPEUserAddrTableIndex"))
if mibBuilder.loadTexts: rserpoolPEUserAddrTableEntry.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which an address is contained by this entry.')
if mibBuilder.loadTexts: rserpoolPEUserAddrTableEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserAddrTableEntry.setDescription('An IP address of the user transport endpoint.')
rserpoolPEUserAddrTableIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolPEUserAddrTableIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserAddrTableIndex.setDescription('A unique identifier for the IP address of a user transport endpoint.')
rserpoolPEUserL3Type = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 6, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserL3Type.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the network-layer protocol number is given here.')
if mibBuilder.loadTexts: rserpoolPEUserL3Type.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserL3Type.setDescription('The network-layer protocol of an IP address of a user transport endpoint. Set to unknown for opaque address.')
rserpoolPEUserL3Addr = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 6, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserL3Addr.setReference('Section 3.10 of RFC 5354 defines the User Transport Parameter of which the network-layer address (IPv4 or IPv6) is given here.')
if mibBuilder.loadTexts: rserpoolPEUserL3Addr.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserL3Addr.setDescription('The IP address of a user transport endpoint. The type of this address is given in rserpoolPEUserL3Addr.')
rserpoolPEUserL3Opaque = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 2, 6, 1, 4), RSerPoolOpaqueAddressTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPEUserL3Opaque.setReference('Section 3.16 of RFC 5354 defines the opaque transport address.')
if mibBuilder.loadTexts: rserpoolPEUserL3Opaque.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEUserL3Opaque.setDescription('The opaque address of a user transport endpoint.')
rserpoolPUTable = MibTable((1, 3, 6, 1, 3, 125, 1, 3, 1), )
if mibBuilder.loadTexts: rserpoolPUTable.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUTable.setDescription('The table listing of pool users.')
rserpoolPUEntry = MibTableRow((1, 3, 6, 1, 3, 125, 1, 3, 1, 1), ).setIndexNames((0, "RSERPOOL-MIB", "rserpoolPUIndex"))
if mibBuilder.loadTexts: rserpoolPUEntry.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUEntry.setDescription('A pool user in the table listing of pool users.')
rserpoolPUIndex = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rserpoolPUIndex.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUIndex.setDescription('An integer to uniquely identify a pool user.')
rserpoolPUOperationScope = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 3, 1, 1, 2), RSerPoolOperationScopeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPUOperationScope.setReference('Section 1.2 of RFC 3237 defines the term operation scope.')
if mibBuilder.loadTexts: rserpoolPUOperationScope.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUOperationScope.setDescription('The operation scope of this pool user.')
rserpoolPUPoolHandle = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 3, 1, 1, 3), RSerPoolPoolHandleTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPUPoolHandle.setReference('Section 1.2 of RFC 3237 defines the term pool handle.')
if mibBuilder.loadTexts: rserpoolPUPoolHandle.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUPoolHandle.setDescription("The pool handle of this pool user. Changing this object will update the pool user's pool handle for all future sessions. This object SHOULD be maintained in a persistent manner.")
rserpoolPUDescription = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rserpoolPUDescription.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUDescription.setDescription('A textual description of this pool user, e.g., its location and a contact address of its administrator. This object SHOULD be maintained in a persistent manner.')
rserpoolPUUptime = MibTableColumn((1, 3, 6, 1, 3, 125, 1, 3, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rserpoolPUUptime.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUUptime.setDescription('The ENRP service uptime of this pool user.')
rserpoolMIBCompliances = MibIdentifier((1, 3, 6, 1, 3, 125, 2, 1))
rserpoolMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 125, 2, 2))
rserpoolMIBCompliance = ModuleCompliance((1, 3, 6, 1, 3, 125, 2, 1, 1)).setObjects(("RSERPOOL-MIB", "rserpoolENRPGroup"), ("RSERPOOL-MIB", "rserpoolPEGroup"), ("RSERPOOL-MIB", "rserpoolPUGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rserpoolMIBCompliance = rserpoolMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: rserpoolMIBCompliance.setDescription('The compliance statement for SNMP entities that implement RSerPool.')
rserpoolENRPGroup = ObjectGroup((1, 3, 6, 1, 3, 125, 2, 2, 1)).setObjects(("RSERPOOL-MIB", "rserpoolENRPOperationScope"), ("RSERPOOL-MIB", "rserpoolENRPIdentifier"), ("RSERPOOL-MIB", "rserpoolENRPDescription"), ("RSERPOOL-MIB", "rserpoolENRPUptime"), ("RSERPOOL-MIB", "rserpoolENRPPort"), ("RSERPOOL-MIB", "rserpoolENRPASAPAnnouncePort"), ("RSERPOOL-MIB", "rserpoolENRPASAPAnnounceAddr"), ("RSERPOOL-MIB", "rserpoolENRPASAPAnnounceAddrType"), ("RSERPOOL-MIB", "rserpoolENRPENRPAnnounceAddrType"), ("RSERPOOL-MIB", "rserpoolENRPENRPAnnouncePort"), ("RSERPOOL-MIB", "rserpoolENRPENRPAnnounceAddr"), ("RSERPOOL-MIB", "rserpoolENRPPoolHandle"), ("RSERPOOL-MIB", "rserpoolENRPPoolElementID"), ("RSERPOOL-MIB", "rserpoolENRPASAPTransportPort"), ("RSERPOOL-MIB", "rserpoolENRPUserTransportProto"), ("RSERPOOL-MIB", "rserpoolENRPUserTransportUse"), ("RSERPOOL-MIB", "rserpoolENRPUserTransportPort"), ("RSERPOOL-MIB", "rserpoolENRPPolicyID"), ("RSERPOOL-MIB", "rserpoolENRPPolicyDescription"), ("RSERPOOL-MIB", "rserpoolENRPPolicyWeight"), ("RSERPOOL-MIB", "rserpoolENRPPolicyLoad"), ("RSERPOOL-MIB", "rserpoolENRPPolicyLoadDeg"), ("RSERPOOL-MIB", "rserpoolENRPRegistrationLife"), ("RSERPOOL-MIB", "rserpoolENRPHomeENRPServer"), ("RSERPOOL-MIB", "rserpoolENRPASAPL3Type"), ("RSERPOOL-MIB", "rserpoolENRPASAPL3Addr"), ("RSERPOOL-MIB", "rserpoolENRPUserL3Type"), ("RSERPOOL-MIB", "rserpoolENRPUserL3Addr"), ("RSERPOOL-MIB", "rserpoolENRPUserL3Opaque"), ("RSERPOOL-MIB", "rserpoolENRPENRPL3Type"), ("RSERPOOL-MIB", "rserpoolENRPENRPL3Addr"), ("RSERPOOL-MIB", "rserpoolENRPPeerIdentifier"), ("RSERPOOL-MIB", "rserpoolENRPPeerPort"), ("RSERPOOL-MIB", "rserpoolENRPPeerLastHeard"), ("RSERPOOL-MIB", "rserpoolENRPPeerL3Type"), ("RSERPOOL-MIB", "rserpoolENRPPeerL3Addr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rserpoolENRPGroup = rserpoolENRPGroup.setStatus('current')
if mibBuilder.loadTexts: rserpoolENRPGroup.setDescription('The group contains all ENRP server instances running on the system')
rserpoolPEGroup = ObjectGroup((1, 3, 6, 1, 3, 125, 2, 2, 2)).setObjects(("RSERPOOL-MIB", "rserpoolPEOperationScope"), ("RSERPOOL-MIB", "rserpoolPEPoolHandle"), ("RSERPOOL-MIB", "rserpoolPEIdentifier"), ("RSERPOOL-MIB", "rserpoolPEDescription"), ("RSERPOOL-MIB", "rserpoolPEUptime"), ("RSERPOOL-MIB", "rserpoolPEASAPTransportPort"), ("RSERPOOL-MIB", "rserpoolPEUserTransportProto"), ("RSERPOOL-MIB", "rserpoolPEUserTransportPort"), ("RSERPOOL-MIB", "rserpoolPEUserTransportUse"), ("RSERPOOL-MIB", "rserpoolPEPolicyID"), ("RSERPOOL-MIB", "rserpoolPEPolicyDescription"), ("RSERPOOL-MIB", "rserpoolPEPolicyWeight"), ("RSERPOOL-MIB", "rserpoolPEPolicyLoad"), ("RSERPOOL-MIB", "rserpoolPEPolicyLoadDeg"), ("RSERPOOL-MIB", "rserpoolPERegistrationLife"), ("RSERPOOL-MIB", "rserpoolPEHomeENRPServer"), ("RSERPOOL-MIB", "rserpoolPEASAPL3Type"), ("RSERPOOL-MIB", "rserpoolPEASAPL3Addr"), ("RSERPOOL-MIB", "rserpoolPEUserL3Type"), ("RSERPOOL-MIB", "rserpoolPEUserL3Addr"), ("RSERPOOL-MIB", "rserpoolPEUserL3Opaque"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rserpoolPEGroup = rserpoolPEGroup.setStatus('current')
if mibBuilder.loadTexts: rserpoolPEGroup.setDescription('The group contains all pool element instances running on the system')
rserpoolPUGroup = ObjectGroup((1, 3, 6, 1, 3, 125, 2, 2, 3)).setObjects(("RSERPOOL-MIB", "rserpoolPUOperationScope"), ("RSERPOOL-MIB", "rserpoolPUPoolHandle"), ("RSERPOOL-MIB", "rserpoolPUDescription"), ("RSERPOOL-MIB", "rserpoolPUUptime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rserpoolPUGroup = rserpoolPUGroup.setStatus('current')
if mibBuilder.loadTexts: rserpoolPUGroup.setDescription('The group contains all pool user instances running on the system')
mibBuilder.exportSymbols("RSERPOOL-MIB", rserpoolENRPPeerEntry=rserpoolENRPPeerEntry, rserpoolENRPPoolElementIndex=rserpoolENRPPoolElementIndex, rserpoolPEPolicyID=rserpoolPEPolicyID, rserpoolPERegistrationLife=rserpoolPERegistrationLife, rserpoolPUUptime=rserpoolPUUptime, rserpoolENRPEntry=rserpoolENRPEntry, rserpoolPEUserAddrTable=rserpoolPEUserAddrTable, rserpoolENRPASAPL3Type=rserpoolENRPASAPL3Type, rserpoolPUTable=rserpoolPUTable, RSerPoolPoolHandleTC=RSerPoolPoolHandleTC, RSerPoolPolicyLoadTC=RSerPoolPolicyLoadTC, rserpoolENRPOperationScope=rserpoolENRPOperationScope, rserpoolPoolUsers=rserpoolPoolUsers, rserpoolPEUptime=rserpoolPEUptime, rserpoolENRPUserL3Type=rserpoolENRPUserL3Type, rserpoolENRPUserAddrTableIndex=rserpoolENRPUserAddrTableIndex, rserpoolENRPPolicyID=rserpoolENRPPolicyID, rserpoolENRPUserL3Addr=rserpoolENRPUserL3Addr, rserpoolENRPUptime=rserpoolENRPUptime, rserpoolENRPENRPL3Type=rserpoolENRPENRPL3Type, rserpoolENRPIdentifier=rserpoolENRPIdentifier, rserpoolPoolElements=rserpoolPoolElements, rserpoolENRPUserAddrTable=rserpoolENRPUserAddrTable, rserpoolENRPPeerIdentifier=rserpoolENRPPeerIdentifier, rserpoolPUEntry=rserpoolPUEntry, rserpoolPUOperationScope=rserpoolPUOperationScope, rserpoolPUDescription=rserpoolPUDescription, rserpoolENRPPolicyDescription=rserpoolENRPPolicyDescription, rserpoolPEPolicyDescription=rserpoolPEPolicyDescription, rserpoolENRPPeerLastHeard=rserpoolENRPPeerLastHeard, rserpoolENRPENRPAddrTable=rserpoolENRPENRPAddrTable, rserpoolENRPTable=rserpoolENRPTable, RSerPoolTransportUseTypeTC=RSerPoolTransportUseTypeTC, RSerPoolPolicyWeightTC=RSerPoolPolicyWeightTC, rserpoolMIBObjects=rserpoolMIBObjects, rserpoolENRPPeerL3Type=rserpoolENRPPeerL3Type, rserpoolENRPRegistrationLife=rserpoolENRPRegistrationLife, rserpoolENRPENRPAddrTableEntry=rserpoolENRPENRPAddrTableEntry, rserpoolENRPPeerIndex=rserpoolENRPPeerIndex, rserpoolPEPolicyLoad=rserpoolPEPolicyLoad, rserpoolPEASAPL3Type=rserpoolPEASAPL3Type, rserpoolENRPASAPAddrTableIndex=rserpoolENRPASAPAddrTableIndex, rserpoolPEOperationScope=rserpoolPEOperationScope, rserpoolPEGroup=rserpoolPEGroup, rserpoolENRPPoolElementID=rserpoolENRPPoolElementID, rserpoolPEUserTransportPort=rserpoolPEUserTransportPort, rserpoolENRPPolicyLoadDeg=rserpoolENRPPolicyLoadDeg, rserpoolPEUserTransportProto=rserpoolPEUserTransportProto, rserpoolENRPPeerAddrTableIndex=rserpoolENRPPeerAddrTableIndex, rserpoolENRPIndex=rserpoolENRPIndex, rserpoolPEUserTransportUse=rserpoolPEUserTransportUse, rserpoolPUGroup=rserpoolPUGroup, rserpoolPEUserL3Opaque=rserpoolPEUserL3Opaque, rserpoolENRPPeerAddrTable=rserpoolENRPPeerAddrTable, rserpoolENRPUserTransportUse=rserpoolENRPUserTransportUse, rserpoolENRPENRPL3Addr=rserpoolENRPENRPL3Addr, rserpoolENRPASAPTransportPort=rserpoolENRPASAPTransportPort, rserpoolPEASAPAddrTableEntry=rserpoolPEASAPAddrTableEntry, rserpoolPEPolicyLoadDeg=rserpoolPEPolicyLoadDeg, rserpoolPEUserL3Type=rserpoolPEUserL3Type, rserpoolENRPASAPAnnouncePort=rserpoolENRPASAPAnnouncePort, rserpoolENRPENRPAnnounceAddrType=rserpoolENRPENRPAnnounceAddrType, rserpoolPEHomeENRPServer=rserpoolPEHomeENRPServer, rserpoolPUPoolHandle=rserpoolPUPoolHandle, rserpoolPEASAPTransportPort=rserpoolPEASAPTransportPort, rserpoolPEIndex=rserpoolPEIndex, rserpoolENRPGroup=rserpoolENRPGroup, RSerPoolOperationScopeTC=RSerPoolOperationScopeTC, rserpoolENRPPoolElementEntry=rserpoolENRPPoolElementEntry, rserpoolENRPASAPAnnounceAddr=rserpoolENRPASAPAnnounceAddr, rserpoolENRPPolicyLoad=rserpoolENRPPolicyLoad, rserpoolENRPASAPAddrTable=rserpoolENRPASAPAddrTable, rserpoolENRPASAPAnnounceAddrType=rserpoolENRPASAPAnnounceAddrType, rserpoolPEPolicyWeight=rserpoolPEPolicyWeight, rserpoolPEASAPAddrTable=rserpoolPEASAPAddrTable, rserpoolMIBGroups=rserpoolMIBGroups, rserpoolENRPPort=rserpoolENRPPort, rserpoolENRPServers=rserpoolENRPServers, rserpoolENRPPeerAddrTableEntry=rserpoolENRPPeerAddrTableEntry, rserpoolPEEntry=rserpoolPEEntry, rserpoolPEUserL3Addr=rserpoolPEUserL3Addr, RSerPoolPolicyIdentifierTC=RSerPoolPolicyIdentifierTC, PYSNMP_MODULE_ID=rserpoolMIB, rserpoolENRPPoolTable=rserpoolENRPPoolTable, rserpoolENRPPeerL3Addr=rserpoolENRPPeerL3Addr, rserpoolMIBConformance=rserpoolMIBConformance, rserpoolPETable=rserpoolPETable, rserpoolPEUserAddrTableIndex=rserpoolPEUserAddrTableIndex, rserpoolENRPPoolElementTable=rserpoolENRPPoolElementTable, rserpoolENRPHomeENRPServer=rserpoolENRPHomeENRPServer, rserpoolENRPENRPAddrTableIndex=rserpoolENRPENRPAddrTableIndex, rserpoolENRPENRPAnnounceAddr=rserpoolENRPENRPAnnounceAddr, rserpoolENRPENRPAnnouncePort=rserpoolENRPENRPAnnouncePort, rserpoolMIBCompliance=rserpoolMIBCompliance, rserpoolENRPPoolIndex=rserpoolENRPPoolIndex, rserpoolPEUserAddrTableEntry=rserpoolPEUserAddrTableEntry, rserpoolENRPUserAddrTableEntry=rserpoolENRPUserAddrTableEntry, rserpoolPEASAPL3Addr=rserpoolPEASAPL3Addr, rserpoolPEPoolHandle=rserpoolPEPoolHandle, rserpoolENRPASAPL3Addr=rserpoolENRPASAPL3Addr, rserpoolENRPPeerTable=rserpoolENRPPeerTable, rserpoolENRPDescription=rserpoolENRPDescription, rserpoolENRPUserL3Opaque=rserpoolENRPUserL3Opaque, rserpoolPEASAPAddrTableIndex=rserpoolPEASAPAddrTableIndex, rserpoolMIBCompliances=rserpoolMIBCompliances, rserpoolPUIndex=rserpoolPUIndex, RserpoolPoolElementIdentifierTC=RserpoolPoolElementIdentifierTC, RSerPoolOpaqueAddressTC=RSerPoolOpaqueAddressTC, rserpoolPEDescription=rserpoolPEDescription, rserpoolENRPASAPAddrTableEntry=rserpoolENRPASAPAddrTableEntry, rserpoolPEIdentifier=rserpoolPEIdentifier, rserpoolENRPPoolEntry=rserpoolENRPPoolEntry, rserpoolMIB=rserpoolMIB, rserpoolENRPUserTransportProto=rserpoolENRPUserTransportProto, rserpoolENRPPeerPort=rserpoolENRPPeerPort, RSerPoolENRPServerIdentifierTC=RSerPoolENRPServerIdentifierTC, rserpoolENRPPoolHandle=rserpoolENRPPoolHandle, rserpoolENRPUserTransportPort=rserpoolENRPUserTransportPort, rserpoolENRPPolicyWeight=rserpoolENRPPolicyWeight)
