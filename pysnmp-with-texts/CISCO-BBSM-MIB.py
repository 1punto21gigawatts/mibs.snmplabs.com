#
# PySNMP MIB module CISCO-BBSM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-BBSM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:51:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Unsigned32, TimeTicks, ModuleIdentity, Bits, Integer32, ObjectIdentity, IpAddress, NotificationType, MibIdentifier, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "TimeTicks", "ModuleIdentity", "Bits", "Integer32", "ObjectIdentity", "IpAddress", "NotificationType", "MibIdentifier", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
ciscoBbsmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 358))
ciscoBbsmMIB.setRevisions(('2004-04-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoBbsmMIB.setRevisionsDescriptions(('Initial revision of this MIB module.',))
if mibBuilder.loadTexts: ciscoBbsmMIB.setLastUpdated('200404030000Z')
if mibBuilder.loadTexts: ciscoBbsmMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoBbsmMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-bbsm@cisco.com')
if mibBuilder.loadTexts: ciscoBbsmMIB.setDescription('This mib is designed to send BBSM specific notifications. There are variables that contain detail data that are bind to a notification. The SNMP Manager that receives the notifications should look at the binding variables for further details of the notification data. BBSM stands for Building Broadband Service Manager. It is a software-based service platform that enables customers to create, market, and operate broadband access services, such as high-speed Internet access with plug-and-play, multiple authentication and billing options and Web-based management, reporting, and configuration.')
ciscoBbsmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 0))
ciscoBbsmMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 1))
ciscoBbsmEventInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1))
cbbsmEventDescription = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cbbsmEventDescription.setStatus('current')
if mibBuilder.loadTexts: cbbsmEventDescription.setDescription("The cbbsmEventDescription binds with notification. It displays the description of an event that caused a notification to be sent. Examples of cbbsmEventDescription value would be 'Failed to connect to RADIUS server xx.yy.zz.aa' or 'Failed to connect to ICS server xx.yy.zz.aa'")
cbbsmEventSource = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1, 2), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cbbsmEventSource.setStatus('current')
if mibBuilder.loadTexts: cbbsmEventSource.setDescription("The cbbsmEventSource binds with a notification. It displays the source of an event that caused the notification to be sent. The cbbsmEventSource also binds with cbbsmEventDescription. Examples of cbbsmEventSource value would be 'BBSM_RADIUS' or 'BBSM_ICS' ")
cbbsmEventID = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cbbsmEventID.setStatus('current')
if mibBuilder.loadTexts: cbbsmEventID.setDescription('The cbbsmEventID binds with a notification. It displays event ID of an event that caused the notification to be sent. The cbbsmEventID also binds with cbbsmEventDescription. Examples of a cbbsmEventID would be 1, 2, ...')
cbbsmEventType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("error", 1), ("warning", 2), ("information", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cbbsmEventType.setStatus('current')
if mibBuilder.loadTexts: cbbsmEventType.setDescription('The cbbsmEventType binds with the notification. It displays the event type of an event that caused notification to be sent. The cbbsmEventType also binds with cbbsmEventDescription. error(1) : An Error event indicates a significant problem, such as loss of data or loss of functionality. warning(2): A Warning event is not necessarily significant, but may indicate a possible future problem. information(3): An Information event describes the successful operation of an application, driver, or service.')
cbbsmEventTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 358, 1, 1, 5), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cbbsmEventTime.setStatus('current')
if mibBuilder.loadTexts: cbbsmEventTime.setDescription('The cbbsmEventTime binds with the notification. It is a date and time string that displays the time of the event that caused notification to be sent.')
ciscoBbsmEvent = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 358, 0, 1)).setObjects(("CISCO-BBSM-MIB", "cbbsmEventDescription"), ("CISCO-BBSM-MIB", "cbbsmEventSource"), ("CISCO-BBSM-MIB", "cbbsmEventID"), ("CISCO-BBSM-MIB", "cbbsmEventType"), ("CISCO-BBSM-MIB", "cbbsmEventTime"))
if mibBuilder.loadTexts: ciscoBbsmEvent.setStatus('current')
if mibBuilder.loadTexts: ciscoBbsmEvent.setDescription("Notification of a BBSM event. The details of the event is binded in variables listed. These variables are identical to the same event logged on the Microsoft Event Viewer. For example, if BBSM had problem connecting to RADIUS server and SNMP Service on BBSM is configured to send notifications, a notification of ciscoBbsmEvent will be sent and binded variables will have following values cbbsmEventDescription = 'Failed to connect to RADIUS server xx.yy.zz.aa' cbbsmEventSource = 'BBSM_RADIUS' cbbsmEventID = '1' cbbsmEventType = 2 ")
ciscoBbsmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 2))
ciscoBbsmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 2, 1))
ciscoBbsmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 358, 2, 2))
ciscoBbsmMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 358, 2, 1, 1)).setObjects(("CISCO-BBSM-MIB", "ciscoBbsmMIBGroup"), ("CISCO-BBSM-MIB", "ciscoBbsmMIBNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBbsmMIBCompliance = ciscoBbsmMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: ciscoBbsmMIBCompliance.setDescription('The compliance statement for entities which implement the Cisco BBSM MIB')
ciscoBbsmMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 358, 2, 2, 1)).setObjects(("CISCO-BBSM-MIB", "cbbsmEventDescription"), ("CISCO-BBSM-MIB", "cbbsmEventSource"), ("CISCO-BBSM-MIB", "cbbsmEventID"), ("CISCO-BBSM-MIB", "cbbsmEventType"), ("CISCO-BBSM-MIB", "cbbsmEventTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBbsmMIBGroup = ciscoBbsmMIBGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoBbsmMIBGroup.setDescription('A set of objects providing details of a event to a Cisco agent.')
ciscoBbsmMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 358, 2, 2, 2)).setObjects(("CISCO-BBSM-MIB", "ciscoBbsmEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoBbsmMIBNotificationGroup = ciscoBbsmMIBNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: ciscoBbsmMIBNotificationGroup.setDescription('Set of notifications implemented in this module.')
mibBuilder.exportSymbols("CISCO-BBSM-MIB", ciscoBbsmEventInfo=ciscoBbsmEventInfo, cbbsmEventID=cbbsmEventID, ciscoBbsmNotifications=ciscoBbsmNotifications, ciscoBbsmMIB=ciscoBbsmMIB, PYSNMP_MODULE_ID=ciscoBbsmMIB, ciscoBbsmMIBGroups=ciscoBbsmMIBGroups, ciscoBbsmMIBCompliance=ciscoBbsmMIBCompliance, cbbsmEventSource=cbbsmEventSource, ciscoBbsmMIBObjects=ciscoBbsmMIBObjects, ciscoBbsmMIBCompliances=ciscoBbsmMIBCompliances, ciscoBbsmMIBNotificationGroup=ciscoBbsmMIBNotificationGroup, cbbsmEventTime=cbbsmEventTime, ciscoBbsmEvent=ciscoBbsmEvent, cbbsmEventType=cbbsmEventType, ciscoBbsmMIBConformance=ciscoBbsmMIBConformance, ciscoBbsmMIBGroup=ciscoBbsmMIBGroup, cbbsmEventDescription=cbbsmEventDescription)
