#
# PySNMP MIB module CISCO-PPPOE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PPPOE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:09:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
atmVclEntry, atmVclVpi, atmVclVci = mibBuilder.importSymbols("ATM-MIB", "atmVclEntry", "atmVclVpi", "atmVclVci")
AtmVcIdentifier, AtmVpIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVcIdentifier", "AtmVpIdentifier")
Percent, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Percent")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, ifDescr = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifDescr")
VlanId, VlanIndex = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId", "VlanIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, iso, NotificationType, Counter64, Integer32, Bits, Counter32, TimeTicks, ObjectIdentity, MibIdentifier, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "iso", "NotificationType", "Counter64", "Integer32", "Bits", "Counter32", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Unsigned32", "Gauge32")
TextualConvention, TruthValue, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "MacAddress", "DisplayString")
ciscoPppoeMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 194))
ciscoPppoeMIB.setRevisions(('2011-04-25 00:00', '2005-12-21 00:00', '2001-02-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ciscoPppoeMIB.setRevisionsDescriptions(('Added following new groups cPppoePerInterfaceGroup, cPppoeSystemLimitsThresholdsNotifObjectsGroup cPppoeSystemLimitsThresholdsNotifGroup and cPppoeSystemLimitsThresholdsGroup. Added a new compliance ciscoPppoeMIBBasicComplianceRev1 which deprecates ciscoPppoeMIBBasicCompliance. ', 'Updated the imports such that Unsigned32 is imported from SNMPv2-SMI instead of CISCO-TC.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: ciscoPppoeMIB.setLastUpdated('201104250000Z')
if mibBuilder.loadTexts: ciscoPppoeMIB.setOrganization('Cisco Systems, Inc.')
if mibBuilder.loadTexts: ciscoPppoeMIB.setContactInfo(' Cisco Systems Customer Service Postal: 170 W Tasman Drive San Jose, CA 95134 USA Tel: +1 800 553-NETS E-mail: cs-ppp@cisco.com')
if mibBuilder.loadTexts: ciscoPppoeMIB.setDescription('Cisco PPPoE sessions management MIB Module.')
ciscoPppoeMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1))
cPppoeSystemSessionInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1))
cPppoeVcCfgInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 2))
cPppoeVcSessionsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3))
cPppoeSessionsPerInterfaceInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4))
cPppoeSystemSessionNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5))
cPppoeSystemCurrSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 1), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeSystemCurrSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemCurrSessions.setDescription('The current number of active PPPoE sessions within this system.')
cPppoeSystemHighWaterSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeSystemHighWaterSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemHighWaterSessions.setDescription('The high water mark of the established PPPoE sessions since the system was initialized.')
cPppoeSystemMaxAllowedSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 3), Unsigned32()).setUnits('sessions').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemMaxAllowedSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemMaxAllowedSessions.setDescription('Maximum number of allowed PPPoE sessions within the system.')
cPppoeSystemThresholdSessions = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 4), Unsigned32()).setUnits('sessions').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemThresholdSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemThresholdSessions.setDescription('Threshold value of the established PPPoE sessions within the system. Default value is equal to cPppoeSystemMaxSessionsConfigurable')
cPppoeSystemExceededSessionErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeSystemExceededSessionErrors.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemExceededSessionErrors.setDescription('The accumulated number of errors for establishing PPPoE session in the system due to the cPppoeSystemCurrSessions value exceeds the cPppoeSystemMaxAllowedSessions value.')
cPppoeSystemPerMacSessionlimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerMacSessionlimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerMacSessionlimit.setDescription('This object provides limit on number of PPPoE sessions for a single client Ethernet MAC address. If the limit is reached new session request from the client would be denied')
cPppoeSystemPerMacIWFSessionlimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerMacIWFSessionlimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerMacIWFSessionlimit.setDescription('This object provides limit on number of PPPoE sessions with interworking flag(IWF) enabled, from a single client MAC address. If the limit is reached new session request would be denied.')
cPppoeSystemPerMacThrottleRatelimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerMacThrottleRatelimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerMacThrottleRatelimit.setDescription("This object provides the rate limit at which PPPoE session were created from a single client MAC address. During a configured time interval, once the number of new session requests coming from a particular client MAC address reaches this limit, it's expected to have delay in response for those clients.")
cPppoeSystemPerVLANlimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerVLANlimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerVLANlimit.setDescription('This object provides limit on number of PPPoE sessions on a particular Vlan. If the limit is reached new session request on this vlan would be denied.')
cPppoeSystemPerVLANthrottleRatelimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerVLANthrottleRatelimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerVLANthrottleRatelimit.setDescription("This object provides the rate limit at which PPPoE session were created on a Vlan. During a configured time interval once the number of new session requests coming on a particular Vlan reaches this limit, it's expected to have delay in response for client on this Vlan.")
cPppoeSystemPerVClimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerVClimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerVClimit.setDescription('This object provides limit on number of PPPoE sessions on a particular ATM-VC. If the limit is reached new session request on this VC would be denied.')
cPppoeSystemPerVCThrottleRatelimit = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemPerVCThrottleRatelimit.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemPerVCThrottleRatelimit.setDescription("This object provides the rate limit at which PPPoE session were created on an ATM-VC. During a configured time interval, once the number of new session requests coming on an ATM-VC reaches this limit, it's expected to have delay in response for those clients on this VC.")
cPppoeSystemSessionLossThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemSessionLossThreshold.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionLossThreshold.setDescription('This object is used to monitor number of active PPPoE sessions above a healthy watermark. If number of PPPoE sessions falls below this watermark then we can expect something wrong happened. So we send out trap to user indicating session loss below watermark.')
cPppoeSystemSessionLossPercent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 1, 14), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeSystemSessionLossPercent.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionLossPercent.setDescription('This object is used to monitor the percentage of PPPoE sessions going down at a configured time interval. During a time interval if percentage of PPPoE sessions lost, falls above this object value, we send trap indicating loss of sessions above percentage expected.')
cPppoeSystemSessionClientMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cPppoeSystemSessionClientMacAddress.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionClientMacAddress.setDescription('The client MAC address that is referred as a part of the notification information. Example: cPppoeSystemSessionPerMACLimitNotif')
cPppoeSystemSessionVlanID = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5, 2), VlanId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cPppoeSystemSessionVlanID.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionVlanID.setDescription('The Vlan ID of PPPoE session that is referred as a part of the notification information. Example: cPppoeSystemSessionPerVLANLimitNotif')
cPppoeSystemSessionInnerVlanID = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5, 3), VlanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cPppoeSystemSessionInnerVlanID.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionInnerVlanID.setDescription('The inner Vlan ID of PPPoE QinQ session that is referred as a part of the notification information. Example: cPppoeSystemSessionPerVLANLimitNotif')
cPppoeSystemSessionVci = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5, 4), AtmVcIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cPppoeSystemSessionVci.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionVci.setDescription('The ATM VCI of PPPoE session that is referred as a part of the notification information. Example:cPppoeSystemSessionPerVCLimitTrap')
cPppoeSystemSessionVpi = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 5, 5), AtmVpIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cPppoeSystemSessionVpi.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionVpi.setDescription('The ATM VPI of PPPoE session that is referred as a part of the notification information. Example: cPppoeSystemSessionPerVCLimitTrap')
cPppoeVcCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 2, 1), )
if mibBuilder.loadTexts: cPppoeVcCfgTable.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcCfgTable.setDescription('The table contains the PPPoE protocol related configuration for the VCLs(ATM Interface Virtual Channel Link).')
cPppoeVcCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 2, 1, 1), )
atmVclEntry.registerAugmentions(("CISCO-PPPOE-MIB", "cPppoeVcCfgEntry"))
cPppoeVcCfgEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: cPppoeVcCfgEntry.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcCfgEntry.setDescription('An entry containing additional PPPoE protocol configuration related management information applicable to a particular VCL.')
cPppoeVcEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 2, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeVcEnable.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcEnable.setDescription('This object specifies whether the PPPoE protocol should be enabled for this VCL. If the value of this object is `false`, PPPoE protocol is disabled; otherwise the PPPoE protocol is enabled.')
cPppoeVcSessionsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1), )
if mibBuilder.loadTexts: cPppoeVcSessionsTable.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcSessionsTable.setDescription('Table of configuration and statistics about the number of PPPoE sessions on a list of VCLs(ATM Interface Virtual Channel Link).')
cPppoeVcSessionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: cPppoeVcSessionsEntry.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcSessionsEntry.setDescription('An entry in the table containing PPPoE session related information on a VCL. The entry of this table is created when the value of cPppoeVcEnable object is set to `true` for the entry associated VCL. The entry of this table is deleted when the of cPppoeVcEnable object set to `false` or the entry associated VCL is deleted from atmVclTable.')
cPppoeVcCurrSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1, 1), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeVcCurrSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcCurrSessions.setDescription('The current number of active PPPoE sessions on the VCL.')
cPppoeVcHighWaterSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeVcHighWaterSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcHighWaterSessions.setDescription('The high water mark of the established PPPoE sessions on the VCL.')
cPppoeVcMaxAllowedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1, 3), Unsigned32()).setUnits('sessions').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeVcMaxAllowedSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcMaxAllowedSessions.setDescription('The maximum number of allowed PPPoE sessions on the VCL.')
cPppoeVcThresholdSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1, 4), Unsigned32()).setUnits('sessions').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPppoeVcThresholdSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcThresholdSessions.setDescription('The Threshold value of the established PPPoE sessions on the VCL. Default value is equal to cPppoeVcMaxAllowedSessions.')
cPppoeVcExceededSessionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 3, 1, 1, 5), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeVcExceededSessionErrors.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcExceededSessionErrors.setDescription('The accumulated number of errors for establishing PPPoE session in the VC due to the cPppoeVcCurrSessions value exceeds the cPppoeVcMaxAllowedSessions value.')
cPppoeSessionsPerInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1), )
if mibBuilder.loadTexts: cPppoeSessionsPerInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: cPppoeSessionsPerInterfaceTable.setDescription("A list of interfaces' PPPoE session information.")
cPppoeSessionsPerInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cPppoeSessionsPerInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: cPppoeSessionsPerInterfaceEntry.setDescription('An entry in the table containing PPPoE sessions information such as count information of various states like PPP Termination Aggregation(PTA), Forwarded(FWDED), Transient (TRANS) and TOTAL count and the configured loss threshold per given physical interface')
cPppoeTotalSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 1), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeTotalSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeTotalSessions.setDescription('The total number of PPPoE sessions which includes PPP Termination Aggregation(PTA), Forwarded(FWDED) and Transient(TRANS) state on a physical interface. ')
cPppoePtaSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 2), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoePtaSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoePtaSessions.setDescription('Number of PPPoE sessions which are in PPP Termination Aggregation(PTA) state on a particular physical interface.')
cPppoeFwdedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 3), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeFwdedSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeFwdedSessions.setDescription('Number of PPPoE sessions which are in Forwarded(FWDED) state on a particular physical interface.')
cPppoeTransSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 4), Gauge32()).setUnits('sessions').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoeTransSessions.setStatus('current')
if mibBuilder.loadTexts: cPppoeTransSessions.setDescription('Number of PPPoE sessions which are in Transient(TRANS) state on a particular physical interface.')
cPppoePerInterfaceSessionLossThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossThreshold.setStatus('current')
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossThreshold.setDescription('This object is used to monitor number of active PPPoE sessions, initiated from a particular physical interface. The sssion count is accumulation of all the pppoe session came on a physical and its sub-interfaces. If this count drops below this object water mark, we expect some problem and send out trap indicating drop of sessions below watermark.')
cPppoePerInterfaceSessionLossPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 194, 1, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossPercent.setStatus('current')
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossPercent.setDescription('This object is used to monitor the percentage of PPPoE sessions loss on a particular physical interface including all of its sub-interfaces. If during a configured interval of time, percentage of PPPoE sessions lost on a physical interface is above this object value we send a trap.')
ciscoPppoeMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 2))
ciscoPppoeMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0))
cPppoeSystemSessionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 1)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemCurrSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemMaxAllowedSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemThresholdSessions"))
if mibBuilder.loadTexts: cPppoeSystemSessionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionThresholdTrap.setDescription('A notification indicating that number of active sessions on the system exceeded system sessions threshold value. System sessions threshold value is indicated by cPppoeSystemThresholdSessions. An agent must not generate more than one cPppoeSessionThresholdTrap `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If additional `the number of PPPoE sessions exceeds threshold` condition occur within the 30 second `throttling` period, then these trap-events should be suppressed by the agent. An NMS should periodically check the value of cPppoeCurrSessions to detect any missed cPppoeVcSessionThresholdTrap trap-events, e.g. due to throttling or transmission loss. Where 30 is the `throttling` period of trap-event.')
cPppoeVcSessionThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 2)).setObjects(("CISCO-PPPOE-MIB", "cPppoeVcCurrSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcMaxAllowedSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcThresholdSessions"))
if mibBuilder.loadTexts: cPppoeVcSessionThresholdTrap.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcSessionThresholdTrap.setDescription('A notification indicating that number of active sessions on the VC exceeded vc sessions threshold value. VC sessions threshold value is indicated by cPppoeVcThresholdSessions. An agent must not generate more than one cPppoeVcSessionThresholdTrap `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If additional `the number of PPPoE sessions exceeds threshold` condition occur within the 30 second `throttling` period, then these trap-events should be suppressed by the agent. An NMS should periodically check the value of cPppoeVcCurrSessions to detect any missed cPppoeVcSessionThresholdTrap trap-events, e.g. due to throttling or transmission loss. Where 30 is the `throttling` period of trap-event.')
cPppoeSystemSessionPerMACLimitNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 3)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerMacSessionlimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionClientMacAddress"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerMACLimitNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerMACLimitNotif.setDescription("A notification indicating that number of active session from a particular client Ethernet MAC address has reached the configured per MAC limit. There won't be any more session possible from this client MAC address. An agent must not generate more than one cPppoeSystemSessionPerMACLimitNotif `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If additional `the number of PPPoE MAC sessions exceeds the allowed limit` condition occur within the 30 second `throttling` period, then these trap-events should be suppressed by the agent.")
cPppoeSystemSessionPerMACThrottleNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 4)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerMacThrottleRatelimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionClientMacAddress"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerMACThrottleNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerMACThrottleNotif.setDescription('A notification indicating that the number of new PPPoE session requests coming in over a configured time interval, from a particular client Ethernet MAC address, has crossed rate limit cPppoeSystemPerMacThrottleRatelimit. The client MAC address on which this event happened is referred through object cPppoeSystemSessionClientMacAddress An agent should generate single cPppoeSystemSessionPerMACThrottleNotif trap for configured time interval.')
cPppoeSystemSessionPerVLANLimitNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 5)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerVLANlimit"), ("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVlanID"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionInnerVlanID"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerVLANLimitNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerVLANLimitNotif.setDescription("A notification indicating that number of active session on a Vlan has reached the maximum limit. There won't be any new PPPoE session possible on this Vlan. The maximum limit can be referred through object cPppoeSystemPerVLANlimit. The Vlan ID of vlan can be referred though object cPppoeSystemSessionVlanID. If Vlan is QinQ, cPppoeSystemSessionInnerVlanID refers the inner Vlan id. In case the vlan is not QinQ cPppoeSystemSessionInnerVlanID will be zero. The interface details can be referred through ifDescr object. An agent must not generate more than one cPppoeSystemSessionPerVLANLimitNotif `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If additional `the number of PPPoE sessions on this Vlan exceeds the allowed limit` condition occur within the 30 second `throttling` period, then these trap-events should be suppressed by the agent.")
cPppoeSystemSessionPerVLANThrottleNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 6)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerVLANthrottleRatelimit"), ("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVlanID"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionInnerVlanID"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerVLANThrottleNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerVLANThrottleNotif.setDescription('A notification indicating that the number of new PPPoE session request coming on a particular Vlan, over a configured time interval has reached rate limit. The rate limit is referred through object cPppoeSystemPerVLANthrottleRatelimit. The Vlan ID of vlan can be referred though object cPppoeSystemSessionVlanID. If Vlan is QinQ, cPppoeSystemSessionInnerVlanID refers the inner Vlan Id. In case the vlan is not QinQ cPppoeSystemSessionInnerVlanID will be zero. The interface details can be referred through ifDescr object. An agent should generate single cPppoeSystemSessionPerVLANThrottleNotif trap for the configured time interval')
cPppoeSystemSessionPerVCLimitNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 7)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerVClimit"), ("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVci"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVpi"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerVCLimitNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerVCLimitNotif.setDescription('A notification indicating that number of active sessions for a ATM VCI/VPI has crossed the configured maximum limit. No more session would be possible on this VC interface. The maximum limit can be referred through object cPppoeSystemPerVClimit, The ATM VC details are referred via objects cPppoeSystemSessionVci, and cPppoeSystemSessionVpi. The Interface details can be referred via ifDescr object. An agent must not generate more than one cPppoeSystemSessionPerVCLimitTrap `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If additional `the number of PPPoE sessions on this VC exceeds the allowed limit` condition occur within the 30 second `throttling` period, then these trap-events should be suppressed by the agent.')
cPppoeSystemSessionPerVCThrottleNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 8)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerVCThrottleRatelimit"), ("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVci"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVpi"))
if mibBuilder.loadTexts: cPppoeSystemSessionPerVCThrottleNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionPerVCThrottleNotif.setDescription('A notification indicating that the number of new PPPoE session request coming on a particular ATM VC, over a configured time interval has reached rate limit. The rate limit referred is referred through object cPppoeSystemPerVLANthrottleRatelimit. The ATM VC details are referred via objects cPppoeSystemSessionVci and cPppoeSystemSessionVpi. The Interface details can be referred via ifDescr object. An agent should generate single cPppoeSystemSessionPerVLANThrottleNotif trap for the configured time interval')
cPppoeSystemSessionLossThresholdNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 9)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossThreshold"))
if mibBuilder.loadTexts: cPppoeSystemSessionLossThresholdNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionLossThresholdNotif.setDescription("A notification indicating that number of PPPoE session count dropped below configured global threshold watermark. There will be only one trap send whenever count drops, further low count won't generate trap. Number of PPPoE sessions count need to cross the watermark and drop below watermark to generate trap again. The configured watermark can be referred through object cPppoeSystemSessionLossThreshold. An agent must not generate more than one cPppoeSystemSessionLossThresholdTrap `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If the PPPoE session count keep on fluctuating around the watermark during 30 seconds, then these trap-events should be suppressed by agent.")
cPppoePerInterfaceSessionLossThresholdNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 10)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossThreshold"))
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossThresholdNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossThresholdNotif.setDescription("A notification indicating that number of PPPoE session initiated via a particular interface has dropped below the configured value for that interface. The interface details can be referred via ifDescr object, and the configured watermark can be referred through cPppoePerInterfaceSessionLossThreshold object. There will be only one trap send whenever count drops, further low count won't generate trap. Number of PPPoE sessions count need to cross the watermark and drop below watermark to generate trap again. An agent must not generate more than one cPppoePerInterfaceSessionLossThresholdTrap `trap-event` in a 30 second period, where a `trap-event` is the transmission of a single trap PDU to a list of trap destinations. If the PPPoE session count keep on fluctuating around the watermark during 30 seconds, then these trap-events should be suppressed by agent.")
cPppoeSystemSessionLossPercentNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 11)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossPercent"))
if mibBuilder.loadTexts: cPppoeSystemSessionLossPercentNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemSessionLossPercentNotif.setDescription('A notification indicating that percentage of PPPoE session lost globally over a duration of time has crossed the configured threshold. The configured percentage water mark can be referred through cPppoeSystemSessionLossPercent object.')
cPppoePerInterfaceSessionLossPercentNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 194, 2, 0, 12)).setObjects(("IF-MIB", "ifDescr"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossPercent"))
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossPercentNotif.setStatus('current')
if mibBuilder.loadTexts: cPppoePerInterfaceSessionLossPercentNotif.setDescription('A notification indicating that percentage of PPPoE sessions lost has crossed configured threshold value for a particular interface. The interface details can be referred through ifDescr object, and the configured threshold for the interface can be referred through cPppoePerInterfaceSessionLossPercent.')
ciscoPppoeMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 3))
ciscoPppoeMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 1))
ciscoPppoeMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2))
ciscoPppoeMIBBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 1, 1)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemGroup"), ("CISCO-PPPOE-MIB", "cPppoeVcCfgGroup"), ("CISCO-PPPOE-MIB", "cPppoeVcSessionsGroup"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceGroup"), ("CISCO-PPPOE-MIB", "cPppoeNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPppoeMIBBasicCompliance = ciscoPppoeMIBBasicCompliance.setStatus('deprecated')
if mibBuilder.loadTexts: ciscoPppoeMIBBasicCompliance.setDescription('The compliance statement for entities which implement the Cisco Basic PPPoE MIB. ')
ciscoPppoeMIBBasicComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 1, 2)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemGroup"), ("CISCO-PPPOE-MIB", "cPppoeVcCfgGroup"), ("CISCO-PPPOE-MIB", "cPppoeVcSessionsGroup"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceGroup"), ("CISCO-PPPOE-MIB", "cPppoeNotificationsGroup"), ("CISCO-PPPOE-MIB", "cPppoeSystemLimitsThresholdsGroup"), ("CISCO-PPPOE-MIB", "cPppoeSystemLimitsThresholdsNotifObjectsGroup"), ("CISCO-PPPOE-MIB", "cPppoeSystemLimitsThresholdsNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoPppoeMIBBasicComplianceRev1 = ciscoPppoeMIBBasicComplianceRev1.setStatus('current')
if mibBuilder.loadTexts: ciscoPppoeMIBBasicComplianceRev1.setDescription('The compliance statement for entities which implement the Cisco Basic PPPoE MIB. ')
cPppoeSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 1)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemCurrSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemHighWaterSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemMaxAllowedSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemThresholdSessions"), ("CISCO-PPPOE-MIB", "cPppoeSystemExceededSessionErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeSystemGroup = cPppoeSystemGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemGroup.setDescription('A collection of objects providing information about the PPPoE sessions on a system.')
cPppoeVcCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 2)).setObjects(("CISCO-PPPOE-MIB", "cPppoeVcEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeVcCfgGroup = cPppoeVcCfgGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcCfgGroup.setDescription('A collection of objects specifying PPPoE protocol related configuration on the VCL.')
cPppoeVcSessionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 3)).setObjects(("CISCO-PPPOE-MIB", "cPppoeVcCurrSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcHighWaterSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcMaxAllowedSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcThresholdSessions"), ("CISCO-PPPOE-MIB", "cPppoeVcExceededSessionErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeVcSessionsGroup = cPppoeVcSessionsGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeVcSessionsGroup.setDescription('A collection of objects providing information about the number of sessions on the VCL.')
cPppoeNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 4)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemSessionThresholdTrap"), ("CISCO-PPPOE-MIB", "cPppoeVcSessionThresholdTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeNotificationsGroup = cPppoeNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeNotificationsGroup.setDescription('The collection of notifications used to indicate high PPPoE session volume information(e.g, the number of current PPPoE sessions exceeds threshold setting for the system or a VCL).')
cPppoePerInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 5)).setObjects(("CISCO-PPPOE-MIB", "cPppoeTotalSessions"), ("CISCO-PPPOE-MIB", "cPppoePtaSessions"), ("CISCO-PPPOE-MIB", "cPppoeFwdedSessions"), ("CISCO-PPPOE-MIB", "cPppoeTransSessions"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossThreshold"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoePerInterfaceGroup = cPppoePerInterfaceGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoePerInterfaceGroup.setDescription(' A collection of objects providing PPPoE per-interface session state counts and configured threshold informations.')
cPppoeSystemLimitsThresholdsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 6)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemPerMacSessionlimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerMacIWFSessionlimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerMacThrottleRatelimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerVLANlimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerVLANthrottleRatelimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerVClimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemPerVCThrottleRatelimit"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossThreshold"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeSystemLimitsThresholdsGroup = cPppoeSystemLimitsThresholdsGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemLimitsThresholdsGroup.setDescription('A collection of objects providing the session limit or throttling configuration. There are various Limitation we can impose on PPPoE Sessions it may be limit based on client-MAC or VLAN When ever the limitation is crossed we send out traps. ')
cPppoeSystemLimitsThresholdsNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 7)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemSessionClientMacAddress"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVlanID"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionInnerVlanID"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVci"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionVpi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeSystemLimitsThresholdsNotifObjectsGroup = cPppoeSystemLimitsThresholdsNotifObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemLimitsThresholdsNotifObjectsGroup.setDescription('This group is collection of notify objects which are used to carry notify information along with certain traps which implements Session restriction such as limit or throttling.')
cPppoeSystemLimitsThresholdsNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 194, 3, 2, 8)).setObjects(("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerMACLimitNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerMACThrottleNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerVLANLimitNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerVLANThrottleNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerVCLimitNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionPerVCThrottleNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossThresholdNotif"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossThresholdNotif"), ("CISCO-PPPOE-MIB", "cPppoeSystemSessionLossPercentNotif"), ("CISCO-PPPOE-MIB", "cPppoePerInterfaceSessionLossPercentNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPppoeSystemLimitsThresholdsNotifGroup = cPppoeSystemLimitsThresholdsNotifGroup.setStatus('current')
if mibBuilder.loadTexts: cPppoeSystemLimitsThresholdsNotifGroup.setDescription('This group is collection of notify objects used to send traps on various session restriction crossed.')
mibBuilder.exportSymbols("CISCO-PPPOE-MIB", cPppoeSystemSessionVpi=cPppoeSystemSessionVpi, ciscoPppoeMIBConformance=ciscoPppoeMIBConformance, cPppoeSystemPerVClimit=cPppoeSystemPerVClimit, cPppoePerInterfaceSessionLossThreshold=cPppoePerInterfaceSessionLossThreshold, cPppoeVcSessionThresholdTrap=cPppoeVcSessionThresholdTrap, cPppoeSystemPerVLANlimit=cPppoeSystemPerVLANlimit, cPppoeSystemSessionPerMACThrottleNotif=cPppoeSystemSessionPerMACThrottleNotif, cPppoeVcCfgGroup=cPppoeVcCfgGroup, cPppoeSystemPerVCThrottleRatelimit=cPppoeSystemPerVCThrottleRatelimit, cPppoeVcSessionsGroup=cPppoeVcSessionsGroup, cPppoeSystemSessionPerVCThrottleNotif=cPppoeSystemSessionPerVCThrottleNotif, cPppoeSystemGroup=cPppoeSystemGroup, cPppoeVcSessionsInfo=cPppoeVcSessionsInfo, cPppoeSessionsPerInterfaceEntry=cPppoeSessionsPerInterfaceEntry, cPppoeSystemSessionNotifyObjects=cPppoeSystemSessionNotifyObjects, cPppoeVcEnable=cPppoeVcEnable, cPppoeVcCfgInfo=cPppoeVcCfgInfo, cPppoeSystemPerVLANthrottleRatelimit=cPppoeSystemPerVLANthrottleRatelimit, cPppoeSystemSessionPerVLANLimitNotif=cPppoeSystemSessionPerVLANLimitNotif, cPppoeSystemSessionPerVLANThrottleNotif=cPppoeSystemSessionPerVLANThrottleNotif, ciscoPppoeMIBObjects=ciscoPppoeMIBObjects, ciscoPppoeMIBGroups=ciscoPppoeMIBGroups, cPppoeSessionsPerInterfaceInfo=cPppoeSessionsPerInterfaceInfo, cPppoeVcHighWaterSessions=cPppoeVcHighWaterSessions, cPppoeSystemSessionClientMacAddress=cPppoeSystemSessionClientMacAddress, cPppoeVcThresholdSessions=cPppoeVcThresholdSessions, cPppoeTotalSessions=cPppoeTotalSessions, PYSNMP_MODULE_ID=ciscoPppoeMIB, cPppoeVcSessionsTable=cPppoeVcSessionsTable, cPppoePtaSessions=cPppoePtaSessions, ciscoPppoeMIBNotification=ciscoPppoeMIBNotification, ciscoPppoeMIBBasicCompliance=ciscoPppoeMIBBasicCompliance, cPppoeSystemSessionLossPercent=cPppoeSystemSessionLossPercent, cPppoeTransSessions=cPppoeTransSessions, cPppoeSystemSessionLossThreshold=cPppoeSystemSessionLossThreshold, cPppoeSystemSessionInfo=cPppoeSystemSessionInfo, cPppoeSystemCurrSessions=cPppoeSystemCurrSessions, cPppoeSystemThresholdSessions=cPppoeSystemThresholdSessions, cPppoeVcSessionsEntry=cPppoeVcSessionsEntry, cPppoeVcCfgEntry=cPppoeVcCfgEntry, cPppoeVcMaxAllowedSessions=cPppoeVcMaxAllowedSessions, cPppoeSystemSessionLossPercentNotif=cPppoeSystemSessionLossPercentNotif, cPppoeSystemSessionThresholdTrap=cPppoeSystemSessionThresholdTrap, cPppoeSystemSessionInnerVlanID=cPppoeSystemSessionInnerVlanID, cPppoeSystemHighWaterSessions=cPppoeSystemHighWaterSessions, cPppoeVcExceededSessionErrors=cPppoeVcExceededSessionErrors, cPppoeSystemLimitsThresholdsNotifObjectsGroup=cPppoeSystemLimitsThresholdsNotifObjectsGroup, ciscoPppoeMIBBasicComplianceRev1=ciscoPppoeMIBBasicComplianceRev1, cPppoeSystemExceededSessionErrors=cPppoeSystemExceededSessionErrors, ciscoPppoeMIB=ciscoPppoeMIB, cPppoeSystemPerMacSessionlimit=cPppoeSystemPerMacSessionlimit, cPppoeNotificationsGroup=cPppoeNotificationsGroup, cPppoeVcCurrSessions=cPppoeVcCurrSessions, cPppoeSystemSessionVci=cPppoeSystemSessionVci, ciscoPppoeMIBCompliances=ciscoPppoeMIBCompliances, cPppoeSystemPerMacIWFSessionlimit=cPppoeSystemPerMacIWFSessionlimit, cPppoeFwdedSessions=cPppoeFwdedSessions, cPppoeSystemLimitsThresholdsGroup=cPppoeSystemLimitsThresholdsGroup, cPppoeSystemMaxAllowedSessions=cPppoeSystemMaxAllowedSessions, cPppoePerInterfaceSessionLossPercentNotif=cPppoePerInterfaceSessionLossPercentNotif, cPppoeSystemLimitsThresholdsNotifGroup=cPppoeSystemLimitsThresholdsNotifGroup, cPppoeSystemSessionVlanID=cPppoeSystemSessionVlanID, cPppoePerInterfaceSessionLossPercent=cPppoePerInterfaceSessionLossPercent, cPppoeVcCfgTable=cPppoeVcCfgTable, cPppoePerInterfaceSessionLossThresholdNotif=cPppoePerInterfaceSessionLossThresholdNotif, cPppoePerInterfaceGroup=cPppoePerInterfaceGroup, cPppoeSystemSessionPerVCLimitNotif=cPppoeSystemSessionPerVCLimitNotif, cPppoeSystemPerMacThrottleRatelimit=cPppoeSystemPerMacThrottleRatelimit, cPppoeSystemSessionPerMACLimitNotif=cPppoeSystemSessionPerMACLimitNotif, ciscoPppoeMIBNotificationPrefix=ciscoPppoeMIBNotificationPrefix, cPppoeSystemSessionLossThresholdNotif=cPppoeSystemSessionLossThresholdNotif, cPppoeSessionsPerInterfaceTable=cPppoeSessionsPerInterfaceTable)
