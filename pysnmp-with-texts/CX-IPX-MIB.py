#
# PySNMP MIB module CX-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CX-IPX-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:32:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
cxIpx, = mibBuilder.importSymbols("CXProduct-SMI", "cxIpx")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, iso, Counter32, ModuleIdentity, TimeTicks, NotificationType, ObjectIdentity, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "iso", "Counter32", "ModuleIdentity", "TimeTicks", "NotificationType", "ObjectIdentity", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ipxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2), )
if mibBuilder.loadTexts: ipxStatsTable.setStatus('mandatory')
if mibBuilder.loadTexts: ipxStatsTable.setDescription('Provides a set of statistics for each IPX port. Each row (entry) of the table corresponds to a particular IPX port. Values in this table are read-only.')
ipxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1), ).setIndexNames((0, "CX-IPX-MIB", "ipxSysIndex"))
if mibBuilder.loadTexts: ipxStatsEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ipxStatsEntry.setDescription('Provides a set of statistics for a particular IPX port.')
ipxSysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysIndex.setDescription('Identifies the number of an IPX port. This number is used as an index for this and the cxCfgIpxPortTable. Range of Values: 1 to 34 Default Value: None')
ipxSysInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInReceives.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysInReceives.setDescription('Identifies the total number of IPX packets that have been received by this port. The sum includes those received in error. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInHdrErrors.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysInHdrErrors.setDescription('Identifies the number of IPX packets discarded due to errors in their headers. This number includes any IPX packet with a size less than the minimum of 30 bytes. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInFiltered.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysInFiltered.setDescription('Identifies the number of incoming packets that have been discarded due to filtering. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysInDiscards.setDescription('Identifies the number of non-IPX packets received and discarded. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysForwPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysForwPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysForwPackets.setDescription('Identifies the total number of IPX packets that have been forwarded by the port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutFiltered.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysOutFiltered.setDescription('Identifies the number of outgoing IPX packets that have been discarded due to filtering. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutDiscards.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysOutDiscards.setDescription('Identifies the number of outgoing IPX packets discarded due to a formatting error. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysOutPackets.setDescription('Identifies the total number of IPX packets transmitted by the port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysResourceFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysResourceFailures.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysResourceFailures.setDescription('Identifies the number of times the IPX port has been unable to obtain needed resources, such as memory. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ripsapSysRIPIncorrectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapSysRIPIncorrectPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapSysRIPIncorrectPackets.setDescription('Identifies the number of times that the Port received an incorrectly formatted RIP packet Range of Values: 0 to 4,x294,x967,x295 Default Value: 0')
ripsapSysSAPIncorrectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapSysSAPIncorrectPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapSysSAPIncorrectPackets.setDescription('Identifies the number of times that the IPX port received an incorrectly formatted SAP packet. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ripsapCircRIPOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircRIPOutPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapCircRIPOutPackets.setDescription('Identifies the number of RIP packets sent by this IPX port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ripsapCircRIPInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircRIPInPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapCircRIPInPackets.setDescription('Identifies the number of RIP packets received by this IPX port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ripsapCircSAPOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircSAPOutPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapCircSAPOutPackets.setDescription('Identifies the number of SAP packets sent by this IPX port Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ripsapCircSAPInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircSAPInPackets.setStatus('mandatory')
if mibBuilder.loadTexts: ripsapCircSAPInPackets.setDescription('Identifies the number of SAP packets received by this IPX port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysWatchReq = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysWatchReq.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysWatchReq.setDescription('Identifies the number of IPX Watchdog Request packets received on this port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysWatchRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysWatchRsp.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysWatchRsp.setDescription('Identifies the number of Ipx Watchdog Response packets received on this port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
ipxSysSerRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysSerRcv.setStatus('mandatory')
if mibBuilder.loadTexts: ipxSysSerRcv.setDescription('Identifies the number of IPX Serialization packets received on this port. Range of Values: 0 to 4, 294, 967, 295 Default Value: 0')
mibBuilder.exportSymbols("CX-IPX-MIB", ipxSysResourceFailures=ipxSysResourceFailures, ipxStatsEntry=ipxStatsEntry, ripsapSysSAPIncorrectPackets=ripsapSysSAPIncorrectPackets, ipxSysWatchReq=ipxSysWatchReq, ripsapCircRIPOutPackets=ripsapCircRIPOutPackets, ipxSysSerRcv=ipxSysSerRcv, ipxStatsTable=ipxStatsTable, ripsapSysRIPIncorrectPackets=ripsapSysRIPIncorrectPackets, ipxSysInReceives=ipxSysInReceives, ipxSysInDiscards=ipxSysInDiscards, ripsapCircSAPInPackets=ripsapCircSAPInPackets, ipxSysOutPackets=ipxSysOutPackets, ipxSysOutDiscards=ipxSysOutDiscards, ipxSysWatchRsp=ipxSysWatchRsp, ipxSysIndex=ipxSysIndex, ipxSysOutFiltered=ipxSysOutFiltered, ripsapCircRIPInPackets=ripsapCircRIPInPackets, ripsapCircSAPOutPackets=ripsapCircSAPOutPackets, ipxSysInHdrErrors=ipxSysInHdrErrors, ipxSysInFiltered=ipxSysInFiltered, ipxSysForwPackets=ipxSysForwPackets)
