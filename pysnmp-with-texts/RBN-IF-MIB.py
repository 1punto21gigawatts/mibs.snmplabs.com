#
# PySNMP MIB module RBN-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-IF-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:52:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ifEntry, = mibBuilder.importSymbols("IF-MIB", "ifEntry")
rbnMgmt, = mibBuilder.importSymbols("RBN-SMI", "rbnMgmt")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, Integer32, TimeTicks, IpAddress, iso, Counter32, MibIdentifier, ObjectIdentity, NotificationType, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "TimeTicks", "IpAddress", "iso", "Counter32", "MibIdentifier", "ObjectIdentity", "NotificationType", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rbnIfMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 2, 57))
rbnIfMib.setRevisions(('2012-07-18 18:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: rbnIfMib.setRevisionsDescriptions(('Initial version - defines rbnIfMIB',))
if mibBuilder.loadTexts: rbnIfMib.setLastUpdated('201207181800Z')
if mibBuilder.loadTexts: rbnIfMib.setOrganization('ERICSSON AM')
if mibBuilder.loadTexts: rbnIfMib.setContactInfo(' Ericsson AB. Postal: 100 Headquarters Dr San Jose, CA 95134 USA Phone: +1 408 750 5000 Fax: +1 408 750 5599 ')
if mibBuilder.loadTexts: rbnIfMib.setDescription("This MIB defines rbnIfTable which extends IF-MIB's ifTable")
rbnIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0))
rbnIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 57, 1))
rbnIfTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1), )
if mibBuilder.loadTexts: rbnIfTable.setStatus('current')
if mibBuilder.loadTexts: rbnIfTable.setDescription('A list of interface entries. The number of entries is given by the value of rbnIfNumber. This table contains extension objects for the ifTable interface table.')
rbnIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1), )
ifEntry.registerAugmentions(("RBN-IF-MIB", "rbnIfEntry"))
rbnIfEntry.setIndexNames(*ifEntry.getIndexNames())
if mibBuilder.loadTexts: rbnIfEntry.setStatus('current')
if mibBuilder.loadTexts: rbnIfEntry.setDescription('An entry containing additional management information applicable to a particular interface.')
rbnIfHCInIPv4Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCInIPv4Octets.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCInIPv4Octets.setDescription('The total number of IPv4 octets received on the interface, including framing characters. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCOutIPv4Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCOutIPv4Octets.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCOutIPv4Octets.setDescription('The total number of IPv4 octets transmitted out of the interface, including framing characters. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCInIPv4MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCInIPv4MulticastPkts.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCInIPv4MulticastPkts.setDescription('The number of IPv4 packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast address at this sub-layer. For a MAC layer protocol, this includes both Group and Functional addresses. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCOutIPv4MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCOutIPv4MulticastPkts.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCOutIPv4MulticastPkts.setDescription('The total number of IPv4 packets that higher-level protocols requested be transmitted, and which were addressed to a multicast address at this sub-layer, including those that were discarded or not sent. For a MAC layer protocol, this includes both Group and Functional addresses. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCInIPv6Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCInIPv6Octets.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCInIPv6Octets.setDescription('The total number of IPv6 octets received on the interface, including framing characters. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCOutIPv6Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCOutIPv6Octets.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCOutIPv6Octets.setDescription('The total number of IPv6 octets transmitted out of the interface, including framing characters. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCInIPv6MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCInIPv6MulticastPkts.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCInIPv6MulticastPkts.setDescription('The number of IPv6 packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast address at this sub-layer. For a MAC layer protocol, this includes both Group and Functional addresses. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfHCOutIPv6MulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 57, 0, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnIfHCOutIPv6MulticastPkts.setStatus('current')
if mibBuilder.loadTexts: rbnIfHCOutIPv6MulticastPkts.setDescription('The total number of IPv6 packets that higher-level protocols requested be transmitted, and which were addressed to a multicast address at this sub-layer, including those that were discarded or not sent. For a MAC layer protocol, this includes both Group and Functional addresses. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime in ifXTable in IF-MIB.')
rbnIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 57, 1, 1))
rbnIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 57, 1, 2))
rbnIfCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 57, 1, 1, 1)).setObjects(("RBN-IF-MIB", "rbnIfMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnIfCompliance = rbnIfCompliance.setStatus('current')
if mibBuilder.loadTexts: rbnIfCompliance.setDescription('The compliance statement for RBN-IF-MIB')
rbnIfMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 57, 1, 2, 1)).setObjects(("RBN-IF-MIB", "rbnIfHCInIPv4Octets"), ("RBN-IF-MIB", "rbnIfHCOutIPv4Octets"), ("RBN-IF-MIB", "rbnIfHCInIPv4MulticastPkts"), ("RBN-IF-MIB", "rbnIfHCOutIPv4MulticastPkts"), ("RBN-IF-MIB", "rbnIfHCInIPv6Octets"), ("RBN-IF-MIB", "rbnIfHCOutIPv6Octets"), ("RBN-IF-MIB", "rbnIfHCInIPv6MulticastPkts"), ("RBN-IF-MIB", "rbnIfHCOutIPv6MulticastPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnIfMIBGroup = rbnIfMIBGroup.setStatus('current')
if mibBuilder.loadTexts: rbnIfMIBGroup.setDescription('Conformance group for RBN-IF-MIB objects.')
mibBuilder.exportSymbols("RBN-IF-MIB", rbnIfHCInIPv6MulticastPkts=rbnIfHCInIPv6MulticastPkts, rbnIfEntry=rbnIfEntry, rbnIfHCOutIPv6MulticastPkts=rbnIfHCOutIPv6MulticastPkts, rbnIfMIBObjects=rbnIfMIBObjects, rbnIfHCInIPv4MulticastPkts=rbnIfHCInIPv4MulticastPkts, rbnIfHCOutIPv6Octets=rbnIfHCOutIPv6Octets, rbnIfHCOutIPv4MulticastPkts=rbnIfHCOutIPv4MulticastPkts, rbnIfHCInIPv4Octets=rbnIfHCInIPv4Octets, rbnIfMIBCompliances=rbnIfMIBCompliances, rbnIfMIBGroups=rbnIfMIBGroups, rbnIfHCInIPv6Octets=rbnIfHCInIPv6Octets, rbnIfHCOutIPv4Octets=rbnIfHCOutIPv4Octets, rbnIfMIBConformance=rbnIfMIBConformance, rbnIfCompliance=rbnIfCompliance, rbnIfMIBGroup=rbnIfMIBGroup, rbnIfMib=rbnIfMib, PYSNMP_MODULE_ID=rbnIfMib, rbnIfTable=rbnIfTable)
