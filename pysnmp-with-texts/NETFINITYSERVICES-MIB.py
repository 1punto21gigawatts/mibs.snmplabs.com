#
# PySNMP MIB module NETFINITYSERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETFINITYSERVICES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, Unsigned32, TimeTicks, Bits, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, ModuleIdentity, ObjectIdentity, IpAddress, Counter32, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Unsigned32", "TimeTicks", "Bits", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "ModuleIdentity", "ObjectIdentity", "IpAddress", "Counter32", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DmiInteger(Integer32):
    pass

class DmiDisplaystring(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(100, 100)
    fixedLength = 100

class DmiDate(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(28, 28)
    fixedLength = 28

class DmiComponentIndex(Integer32):
    pass

ibm = MibIdentifier((1, 3, 6, 1, 4, 1, 2))
ibmProd = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6))
netFinity = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 71))
dmiMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 71, 200))
netFinityServicesMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2))
dmtfGroups3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1))
tComponentid3 = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1), )
if mibBuilder.loadTexts: tComponentid3.setStatus('mandatory')
if mibBuilder.loadTexts: tComponentid3.setDescription('This group defines attributes common to all components.This group is required.')
eComponentid3 = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1, 1), ).setIndexNames((0, "NETFINITYSERVICES-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eComponentid3.setStatus('mandatory')
if mibBuilder.loadTexts: eComponentid3.setDescription('')
a1Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Manufacturer.setStatus('mandatory')
if mibBuilder.loadTexts: a1Manufacturer.setDescription('The name of the manufacturer that produces this component.')
a1Product = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Product.setStatus('mandatory')
if mibBuilder.loadTexts: a1Product.setDescription('The name of the component.')
a1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Version.setStatus('mandatory')
if mibBuilder.loadTexts: a1Version.setDescription('The version for the component.')
a1SerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 1, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1SerialNumber.setStatus('mandatory')
if mibBuilder.loadTexts: a1SerialNumber.setDescription('The serial number for this instance of this component.')
tNetfinityAlert = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2), )
if mibBuilder.loadTexts: tNetfinityAlert.setStatus('mandatory')
if mibBuilder.loadTexts: tNetfinityAlert.setDescription('NetFinity Alert data fields.')
eNetfinityAlert = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1), ).setIndexNames((0, "NETFINITYSERVICES-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eNetfinityAlert.setStatus('mandatory')
if mibBuilder.loadTexts: eNetfinityAlert.setDescription('')
a2AlertText = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2AlertText.setStatus('mandatory')
if mibBuilder.loadTexts: a2AlertText.setDescription('Text associated with the NetFinity Alert.')
a2Severity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2Severity.setStatus('mandatory')
if mibBuilder.loadTexts: a2Severity.setDescription('Alert severity level (0 = highest, 7 = lowest).')
a2AlertType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2AlertType.setStatus('mandatory')
if mibBuilder.loadTexts: a2AlertType.setDescription('Standard alert ID and type.')
a2ApplicationId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2ApplicationId.setStatus('mandatory')
if mibBuilder.loadTexts: a2ApplicationId.setDescription('Identity of the application which issued the alert.')
a2ApplicationAlertType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2ApplicationAlertType.setStatus('mandatory')
if mibBuilder.loadTexts: a2ApplicationAlertType.setDescription('Application-specific alert ID.')
a2AlertTimeAndDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 6), DmiDate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2AlertTimeAndDate.setStatus('mandatory')
if mibBuilder.loadTexts: a2AlertTimeAndDate.setDescription('Time and date when alert was issued.')
a2AlertSender = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 7), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2AlertSender.setStatus('mandatory')
if mibBuilder.loadTexts: a2AlertSender.setDescription('Network path to system which created alert, if not local system.')
a2AlertSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 2, 1, 8), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2AlertSystemName.setStatus('mandatory')
if mibBuilder.loadTexts: a2AlertSystemName.setDescription('System name of system which created alert.')
tNetfinityMonitorAttributes = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3), )
if mibBuilder.loadTexts: tNetfinityMonitorAttributes.setStatus('mandatory')
if mibBuilder.loadTexts: tNetfinityMonitorAttributes.setDescription('Current values of NetFinity Monitor Attributes.')
eNetfinityMonitorAttributes = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1), ).setIndexNames((0, "NETFINITYSERVICES-MIB", "DmiComponentIndex"), (0, "NETFINITYSERVICES-MIB", "a3AttributeId"))
if mibBuilder.loadTexts: eNetfinityMonitorAttributes.setStatus('mandatory')
if mibBuilder.loadTexts: eNetfinityMonitorAttributes.setDescription('')
a3AttributeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3AttributeId.setStatus('mandatory')
if mibBuilder.loadTexts: a3AttributeId.setDescription('Unique ID for monitored attribute.')
a3AttributeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3AttributeName.setStatus('mandatory')
if mibBuilder.loadTexts: a3AttributeName.setDescription('Textual name of the monitored attribute.')
a3CurrentValueInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 3), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3CurrentValueInteger.setStatus('mandatory')
if mibBuilder.loadTexts: a3CurrentValueInteger.setDescription('Integral portion of current value of attribute.')
a3CurrentValueThousandths = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3CurrentValueThousandths.setStatus('mandatory')
if mibBuilder.loadTexts: a3CurrentValueThousandths.setDescription('Fraction portion of current value of attribute, in units of 1/1000th')
a3CurrentValueString = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3CurrentValueString.setStatus('mandatory')
if mibBuilder.loadTexts: a3CurrentValueString.setDescription('Current value of attribute, as display string.')
a3ValueUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 6), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ValueUnits.setStatus('mandatory')
if mibBuilder.loadTexts: a3ValueUnits.setDescription('Textual label for value units.')
a3NetfinityValueGroup = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: a3NetfinityValueGroup.setStatus('mandatory')
if mibBuilder.loadTexts: a3NetfinityValueGroup.setDescription('Current values of NetFinity Value Parms. Had to make this up b/c IBM had no such features in their MIBS')
tNetfinityAttributeGroups = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4), )
if mibBuilder.loadTexts: tNetfinityAttributeGroups.setStatus('mandatory')
if mibBuilder.loadTexts: tNetfinityAttributeGroups.setDescription('Current values of NetFinity Attribute Groups.')
eNetfinityAttributeGroups = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1), ).setIndexNames((0, "NETFINITYSERVICES-MIB", "DmiComponentIndex"), (0, "NETFINITYSERVICES-MIB", "a4AttributeGroupId"), (0, "NETFINITYSERVICES-MIB", "a4AttributeId"))
if mibBuilder.loadTexts: eNetfinityAttributeGroups.setStatus('mandatory')
if mibBuilder.loadTexts: eNetfinityAttributeGroups.setDescription('')
a4AttributeGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AttributeGroupId.setStatus('mandatory')
if mibBuilder.loadTexts: a4AttributeGroupId.setDescription('Unique ID for attribute group.')
a4AttributeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AttributeId.setStatus('mandatory')
if mibBuilder.loadTexts: a4AttributeId.setDescription('Unique ID for attribute within attribute group.')
a4AttributeGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AttributeGroupName.setStatus('mandatory')
if mibBuilder.loadTexts: a4AttributeGroupName.setDescription('Textual name of the attribute group.')
a4AttributeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4AttributeName.setStatus('mandatory')
if mibBuilder.loadTexts: a4AttributeName.setDescription('Textual name of the attribute within the attribute group.')
a4CurrentValueTextual = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4CurrentValueTextual.setStatus('mandatory')
if mibBuilder.loadTexts: a4CurrentValueTextual.setDescription('Current value of attribute, as text.')
a4CurrentValueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 71, 200, 2, 1, 4, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4CurrentValueIndex.setStatus('mandatory')
if mibBuilder.loadTexts: a4CurrentValueIndex.setDescription("Index of current value of attribute. Index = -1 if attribute's value is not indexed.")
mibBuilder.exportSymbols("NETFINITYSERVICES-MIB", a3AttributeId=a3AttributeId, a3CurrentValueInteger=a3CurrentValueInteger, a3CurrentValueThousandths=a3CurrentValueThousandths, a4AttributeGroupId=a4AttributeGroupId, a3AttributeName=a3AttributeName, eNetfinityAttributeGroups=eNetfinityAttributeGroups, DmiInteger=DmiInteger, a3ValueUnits=a3ValueUnits, a2Severity=a2Severity, eNetfinityAlert=eNetfinityAlert, a2ApplicationAlertType=a2ApplicationAlertType, ibm=ibm, a1SerialNumber=a1SerialNumber, a1Manufacturer=a1Manufacturer, eNetfinityMonitorAttributes=eNetfinityMonitorAttributes, a4AttributeName=a4AttributeName, a4AttributeId=a4AttributeId, a2AlertText=a2AlertText, a4CurrentValueTextual=a4CurrentValueTextual, DmiDate=DmiDate, tNetfinityMonitorAttributes=tNetfinityMonitorAttributes, a4CurrentValueIndex=a4CurrentValueIndex, tNetfinityAttributeGroups=tNetfinityAttributeGroups, a2ApplicationId=a2ApplicationId, tComponentid3=tComponentid3, netFinityServicesMIB=netFinityServicesMIB, a1Product=a1Product, netFinity=netFinity, eComponentid3=eComponentid3, a2AlertSender=a2AlertSender, DmiDisplaystring=DmiDisplaystring, dmiMibs=dmiMibs, a4AttributeGroupName=a4AttributeGroupName, a3CurrentValueString=a3CurrentValueString, dmtfGroups3=dmtfGroups3, DmiComponentIndex=DmiComponentIndex, a1Version=a1Version, a3NetfinityValueGroup=a3NetfinityValueGroup, a2AlertTimeAndDate=a2AlertTimeAndDate, a2AlertType=a2AlertType, tNetfinityAlert=tNetfinityAlert, a2AlertSystemName=a2AlertSystemName, ibmProd=ibmProd)
