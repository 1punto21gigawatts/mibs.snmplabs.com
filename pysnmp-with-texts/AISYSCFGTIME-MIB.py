#
# PySNMP MIB module AISYSCFGTIME-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AISYSCFGTIME-MIB
# Produced by pysmi-0.3.4 at Wed May  1 11:16:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, enterprises, Counter64, MibIdentifier, TimeTicks, Unsigned32, Gauge32, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, NotificationType, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "enterprises", "Counter64", "MibIdentifier", "TimeTicks", "Unsigned32", "Gauge32", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "NotificationType", "iso", "Integer32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
aii = MibIdentifier((1, 3, 6, 1, 4, 1, 539))
aiSysCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 539, 32))
aiSysCfgTime = ModuleIdentity((1, 3, 6, 1, 4, 1, 539, 32, 2))
aiSysCfgTime.setRevisions(('2001-04-30 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: aiSysCfgTime.setRevisionsDescriptions(('The initial revision of this module.',))
if mibBuilder.loadTexts: aiSysCfgTime.setLastUpdated('200104301700Z')
if mibBuilder.loadTexts: aiSysCfgTime.setOrganization('Applied Innovation Inc.')
if mibBuilder.loadTexts: aiSysCfgTime.setContactInfo(' Engineering MIB Administrator Postal: Applied Innovation Inc. 5800 Innovation Drive Dublin, Ohio 43017-3271 Tel: 614-798-2000 Fax: 614-798-1770 Email: snmp@aiinet.com')
if mibBuilder.loadTexts: aiSysCfgTime.setDescription('MIB module for timekeeping.')
aiSCTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTimeZone.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeZone.setDescription("The current Time Zone of the system in the following format: <+|->HH:MM, where HH is the number of hours and MM is the number of minutes. <+/-> specifies the East/West direction. For example, EST would be displayed as: -05:00. The ':' is optional, making this variable conform to ISO-8601")
aiSCDaylightSavingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 2, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCDaylightSavingEnabled.setStatus('current')
if mibBuilder.loadTexts: aiSCDaylightSavingEnabled.setDescription('Indicates whether Daylight saving is enabled.')
aiSCDaylightSavingStatus = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCDaylightSavingStatus.setStatus('current')
if mibBuilder.loadTexts: aiSCDaylightSavingStatus.setDescription('If aiSCDaylightSavingEnabled is disabled(1), then that is also the value of this object. Otherwise, aiSCDaylightSavingStatus is active(2) if we are currently observing Daylight Savings Time and inactive(3) otherwise.')
aiSCTimeSntpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 2, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTimeSntpEnabled.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeSntpEnabled.setDescription('Indicates whether the SNTP client is enabled on this system.')
aiSCTimeSntpPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 539, 32, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTimeSntpPollInterval.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeSntpPollInterval.setDescription('SNTP poll interval in minutes')
aiSCTimeNtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 539, 32, 2, 6), )
if mibBuilder.loadTexts: aiSCTimeNtpServerTable.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeNtpServerTable.setDescription('A table of information on each NTP server.')
aiSCTimeNtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 539, 32, 2, 6, 1), ).setIndexNames((0, "AISYSCFGTIME-MIB", "aiSCTimeNtpServerIndex"))
if mibBuilder.loadTexts: aiSCTimeNtpServerEntry.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeNtpServerEntry.setDescription('Information on a given NTP server.')
aiSCTimeNtpServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiSCTimeNtpServerIndex.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeNtpServerIndex.setDescription('Self referential index in this table.')
aiSCTimeNtpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 539, 32, 2, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiSCTimeNtpServerAddress.setStatus('current')
if mibBuilder.loadTexts: aiSCTimeNtpServerAddress.setDescription('IP address of the primary NTP Server')
mibBuilder.exportSymbols("AISYSCFGTIME-MIB", aiSCTimeZone=aiSCTimeZone, aiSCDaylightSavingStatus=aiSCDaylightSavingStatus, PYSNMP_MODULE_ID=aiSysCfgTime, aiSCTimeNtpServerIndex=aiSCTimeNtpServerIndex, aiSCTimeSntpEnabled=aiSCTimeSntpEnabled, aiSCTimeNtpServerEntry=aiSCTimeNtpServerEntry, aiSCTimeNtpServerAddress=aiSCTimeNtpServerAddress, aiSCDaylightSavingEnabled=aiSCDaylightSavingEnabled, aii=aii, aiSCTimeNtpServerTable=aiSCTimeNtpServerTable, aiSCTimeSntpPollInterval=aiSCTimeSntpPollInterval, aiSysCfg=aiSysCfg, aiSysCfgTime=aiSysCfgTime)
