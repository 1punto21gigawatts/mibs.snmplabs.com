#
# PySNMP MIB module LC-PRODUCT-IDENTIFIERS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LC-PRODUCT-IDENTIFIERS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:06:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
lancastMibModulesA, = mibBuilder.importSymbols("LANCAST-MIB", "lancastMibModulesA")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, Bits, iso, Counter32, Counter64, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, IpAddress, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "Bits", "iso", "Counter32", "Counter64", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "IpAddress", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
productIdentifiers = ModuleIdentity((1, 3, 6, 1, 4, 1, 2745, 1, 4))
productIdentifiers.setRevisions(('1999-07-16 12:00', '1999-07-08 12:00', '1999-03-03 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: productIdentifiers.setRevisionsDescriptions(('REV 2.0 added fixedPortIdentifier group to moduleIdentifiers and added objects 1-5. added protocolIndependent group to moduleIdentifiers', 'REV 2.0 added rateAdapterIdentifier group to moduleIdentifiers moved mib to lancast.lancastV2MibModules node added oem17500Chassis group to chassisIdentifiers added singleTwister object 28', 'REV 1.0 original Draft',))
if mibBuilder.loadTexts: productIdentifiers.setLastUpdated('9907081200Z')
if mibBuilder.loadTexts: productIdentifiers.setOrganization('Lancast Inc')
if mibBuilder.loadTexts: productIdentifiers.setContactInfo('Contact: Customer Service Tel: 1-800-952-6227 ext 136 Fax: 1-603-594-2887 Web: info@lancast.com')
if mibBuilder.loadTexts: productIdentifiers.setDescription('This is the enterprise MIB definition file for the Product Identifiers of Lancast Managed products. Copyright 1999 Lancast Inc.')
chassisIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2))
lc7500Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1))
oem17500Chassis = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 2))
powerSupplyIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 3))
lc7500PowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 3, 1))
moduleIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4))
mgmntModuleIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 1))
singleTwisterIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2))
dualTwisterIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 3))
redundantTwisterIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4))
displayModuleIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 5))
rateAdapterIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6))
fixedPortIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7))
protocolIndependentIdentifiers = MibIdentifier((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 8))
twelveSlot2PS750012 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: twelveSlot2PS750012.setStatus('current')
if mibBuilder.loadTexts: twelveSlot2PS750012.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
thirteenSlotTelco2PS750013 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: thirteenSlotTelco2PS750013.setStatus('current')
if mibBuilder.loadTexts: thirteenSlotTelco2PS750013.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
seventeenSlot1PSFixed75001701 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1, 3), ObjectIdentifier())
if mibBuilder.loadTexts: seventeenSlot1PSFixed75001701.setStatus('current')
if mibBuilder.loadTexts: seventeenSlot1PSFixed75001701.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
seventeenSlot2PSFixed75001702 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1, 4), ObjectIdentifier())
if mibBuilder.loadTexts: seventeenSlot2PSFixed75001702.setStatus('current')
if mibBuilder.loadTexts: seventeenSlot2PSFixed75001702.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
seventeenSlot2PSHotSwapSwitch750017DX = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 1, 5), ObjectIdentifier())
if mibBuilder.loadTexts: seventeenSlot2PSHotSwapSwitch750017DX.setStatus('current')
if mibBuilder.loadTexts: seventeenSlot2PSHotSwapSwitch750017DX.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
oem1TwelveSlot2PS750012 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 2, 1), ObjectIdentifier())
if mibBuilder.loadTexts: oem1TwelveSlot2PS750012.setStatus('current')
if mibBuilder.loadTexts: oem1TwelveSlot2PS750012.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
oem1SeventeenSlot1PSFixed75001701 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 2, 2), ObjectIdentifier())
if mibBuilder.loadTexts: oem1SeventeenSlot1PSFixed75001701.setStatus('current')
if mibBuilder.loadTexts: oem1SeventeenSlot1PSFixed75001701.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
oem1SeventeenSlot2PSFixed75001702 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 2, 3), ObjectIdentifier())
if mibBuilder.loadTexts: oem1SeventeenSlot2PSFixed75001702.setStatus('current')
if mibBuilder.loadTexts: oem1SeventeenSlot2PSFixed75001702.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
oem1SeventeenSlot2PSHotSwapSwitch750017DX = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 2, 2, 4), ObjectIdentifier())
if mibBuilder.loadTexts: oem1SeventeenSlot2PSHotSwapSwitch750017DX.setStatus('current')
if mibBuilder.loadTexts: oem1SeventeenSlot2PSHotSwapSwitch750017DX.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
acPowerSupply7500AC = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 3, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: acPowerSupply7500AC.setStatus('current')
if mibBuilder.loadTexts: acPowerSupply7500AC.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
dcPowerSupply7500DC = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 3, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: dcPowerSupply7500DC.setStatus('current')
if mibBuilder.loadTexts: dcPowerSupply7500DC.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
singleEthernetMgmntModule7501M = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 1, 1), ObjectIdentifier())
if mibBuilder.loadTexts: singleEthernetMgmntModule7501M.setStatus('current')
if mibBuilder.loadTexts: singleEthernetMgmntModule7501M.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
dualEthernetMgmntModule7502M = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 1, 2), ObjectIdentifier())
if mibBuilder.loadTexts: dualEthernetMgmntModule7502M.setStatus('current')
if mibBuilder.loadTexts: dualEthernetMgmntModule7502M.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
redundantMgmntModule7501RM = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 1, 3), ObjectIdentifier())
if mibBuilder.loadTexts: redundantMgmntModule7501RM.setStatus('current')
if mibBuilder.loadTexts: redundantMgmntModule7501RM.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToBnc10MSingleTwisterModule71111275 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 1), ObjectIdentifier())
if mibBuilder.loadTexts: tpToBnc10MSingleTwisterModule71111275.setStatus('current')
if mibBuilder.loadTexts: tpToBnc10MSingleTwisterModule71111275.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToFlMmSt10MSingleTwisterModule71111575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 2), ObjectIdentifier())
if mibBuilder.loadTexts: tpToFlMmSt10MSingleTwisterModule71111575.setStatus('current')
if mibBuilder.loadTexts: tpToFlMmSt10MSingleTwisterModule71111575.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToFlSmSt10MSingleTwisterModule71111675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 3), ObjectIdentifier())
if mibBuilder.loadTexts: tpToFlSmSt10MSingleTwisterModule71111675.setStatus('current')
if mibBuilder.loadTexts: tpToFlSmSt10MSingleTwisterModule71111675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToSmaMm10MSingleTwisterModule71111875 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 4), ObjectIdentifier())
if mibBuilder.loadTexts: tpToSmaMm10MSingleTwisterModule71111875.setStatus('current')
if mibBuilder.loadTexts: tpToSmaMm10MSingleTwisterModule71111875.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToFxMmSc100MSingleTwisterModule71311375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 5), ObjectIdentifier())
if mibBuilder.loadTexts: txToFxMmSc100MSingleTwisterModule71311375.setStatus('current')
if mibBuilder.loadTexts: txToFxMmSc100MSingleTwisterModule71311375.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToFxMmSt100MSingleTwisterModule71311575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 6), ObjectIdentifier())
if mibBuilder.loadTexts: txToFxMmSt100MSingleTwisterModule71311575.setStatus('current')
if mibBuilder.loadTexts: txToFxMmSt100MSingleTwisterModule71311575.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToFxSmSc100MSingleTwisterModule71311475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 7), ObjectIdentifier())
if mibBuilder.loadTexts: txToFxSmSc100MSingleTwisterModule71311475.setStatus('current')
if mibBuilder.loadTexts: txToFxSmSc100MSingleTwisterModule71311475.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToFxSmSc40Km100MSingleTwisterModule71311775 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 8), ObjectIdentifier())
if mibBuilder.loadTexts: txToFxSmSc40Km100MSingleTwisterModule71311775.setStatus('current')
if mibBuilder.loadTexts: txToFxSmSc40Km100MSingleTwisterModule71311775.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
fxMmScToFxSmSc100MSingleTwisterModule71313475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 9), ObjectIdentifier())
if mibBuilder.loadTexts: fxMmScToFxSmSc100MSingleTwisterModule71313475.setStatus('current')
if mibBuilder.loadTexts: fxMmScToFxSmSc100MSingleTwisterModule71313475.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
fxMmStToFxSmSc100MSingleTwisterModule71315475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 10), ObjectIdentifier())
if mibBuilder.loadTexts: fxMmStToFxSmSc100MSingleTwisterModule71315475.setStatus('current')
if mibBuilder.loadTexts: fxMmStToFxSmSc100MSingleTwisterModule71315475.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToFxSmSt100MSingleTwisterModule71311675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 11), ObjectIdentifier())
if mibBuilder.loadTexts: txToFxSmSt100MSingleTwisterModule71311675.setStatus('current')
if mibBuilder.loadTexts: txToFxSmSt100MSingleTwisterModule71311675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
fxMmScToFxSmSt100MSingleTwisterModule71313675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 12), ObjectIdentifier())
if mibBuilder.loadTexts: fxMmScToFxSmSt100MSingleTwisterModule71313675.setStatus('current')
if mibBuilder.loadTexts: fxMmScToFxSmSt100MSingleTwisterModule71313675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
fxMmStToFxSmSt100MSingleTwisterModule71315675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 13), ObjectIdentifier())
if mibBuilder.loadTexts: fxMmStToFxSmSt100MSingleTwisterModule71315675.setStatus('current')
if mibBuilder.loadTexts: fxMmStToFxSmSt100MSingleTwisterModule71315675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToTp10MSingleTwisterModule78111175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 14), ObjectIdentifier())
if mibBuilder.loadTexts: tpToTp10MSingleTwisterModule78111175.setStatus('current')
if mibBuilder.loadTexts: tpToTp10MSingleTwisterModule78111175.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToMmSc10MSingleTwisterModule71111375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 15), ObjectIdentifier())
if mibBuilder.loadTexts: tpToMmSc10MSingleTwisterModule71111375.setStatus('current')
if mibBuilder.loadTexts: tpToMmSc10MSingleTwisterModule71111375.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToTx10MSingleTwisterModule78311175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 16), ObjectIdentifier())
if mibBuilder.loadTexts: txToTx10MSingleTwisterModule78311175.setStatus('current')
if mibBuilder.loadTexts: txToTx10MSingleTwisterModule78311175.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmScToMmSc100MSingleTwisterModule78313375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 17), ObjectIdentifier())
if mibBuilder.loadTexts: mmScToMmSc100MSingleTwisterModule78313375.setStatus('current')
if mibBuilder.loadTexts: mmScToMmSc100MSingleTwisterModule78313375.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmStToMmSt100MSingleTwisterModule78315575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 18), ObjectIdentifier())
if mibBuilder.loadTexts: mmStToMmSt100MSingleTwisterModule78315575.setStatus('current')
if mibBuilder.loadTexts: mmStToMmSt100MSingleTwisterModule78315575.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToMmScSx100MSingleTwisterModule71311A75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 19), ObjectIdentifier())
if mibBuilder.loadTexts: txToMmScSx100MSingleTwisterModule71311A75.setStatus('current')
if mibBuilder.loadTexts: txToMmScSx100MSingleTwisterModule71311A75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToMmStSx100MSingleTwisterModule71311B75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 20), ObjectIdentifier())
if mibBuilder.loadTexts: txToMmStSx100MSingleTwisterModule71311B75.setStatus('current')
if mibBuilder.loadTexts: txToMmStSx100MSingleTwisterModule71311B75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToMmMtrj100MSingleTwisterModule71311E75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 21), ObjectIdentifier())
if mibBuilder.loadTexts: tpToMmMtrj100MSingleTwisterModule71311E75.setStatus('current')
if mibBuilder.loadTexts: tpToMmMtrj100MSingleTwisterModule71311E75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToSmMtrj100MSingleTwisterModule71311F75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 22), ObjectIdentifier())
if mibBuilder.loadTexts: tpToSmMtrj100MSingleTwisterModule71311F75.setStatus('current')
if mibBuilder.loadTexts: tpToSmMtrj100MSingleTwisterModule71311F75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToMmVf45100MSingleTwisterModule71311G75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 23), ObjectIdentifier())
if mibBuilder.loadTexts: tpToMmVf45100MSingleTwisterModule71311G75.setStatus('current')
if mibBuilder.loadTexts: tpToMmVf45100MSingleTwisterModule71311G75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjToScSm100MSingleTwisterModule7131E475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 24), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjToScSm100MSingleTwisterModule7131E475.setStatus('current')
if mibBuilder.loadTexts: mmMtrjToScSm100MSingleTwisterModule7131E475.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjToStSm100MSingleTwisterModule7131E675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 25), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjToStSm100MSingleTwisterModule7131E675.setStatus('current')
if mibBuilder.loadTexts: mmMtrjToStSm100MSingleTwisterModule7131E675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjToMmMtrj100MSingleTwisterModule7831EE75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 26), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjToMmMtrj100MSingleTwisterModule7831EE75.setStatus('current')
if mibBuilder.loadTexts: mmMtrjToMmMtrj100MSingleTwisterModule7831EE75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjToSmMtrj100MSingleTwisterModule7131EF75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 27), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjToSmMtrj100MSingleTwisterModule7131EF75.setStatus('current')
if mibBuilder.loadTexts: mmMtrjToSmMtrj100MSingleTwisterModule7131EF75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToScSm100MSingleTwisterModuleExLongHaul71311J75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 2, 28), ObjectIdentifier())
if mibBuilder.loadTexts: txToScSm100MSingleTwisterModuleExLongHaul71311J75.setStatus('current')
if mibBuilder.loadTexts: txToScSm100MSingleTwisterModuleExLongHaul71311J75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpDualTwisterModule72111175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 3, 1), ObjectIdentifier())
if mibBuilder.loadTexts: tpDualTwisterModule72111175.setStatus('current')
if mibBuilder.loadTexts: tpDualTwisterModule72111175.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
flMmScDualTwisterModule72113375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 3, 2), ObjectIdentifier())
if mibBuilder.loadTexts: flMmScDualTwisterModule72113375.setStatus('current')
if mibBuilder.loadTexts: flMmScDualTwisterModule72113375.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
flMmStDualTwisterModule72115575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 3, 3), ObjectIdentifier())
if mibBuilder.loadTexts: flMmStDualTwisterModule72115575.setStatus('current')
if mibBuilder.loadTexts: flMmStDualTwisterModule72115575.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
flSmStDualTwisterModule72116675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 3, 4), ObjectIdentifier())
if mibBuilder.loadTexts: flSmStDualTwisterModule72116675.setStatus('current')
if mibBuilder.loadTexts: flSmStDualTwisterModule72116675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToDualTx100MRedundantTwisterModule77311175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 1), ObjectIdentifier())
if mibBuilder.loadTexts: txToDualTx100MRedundantTwisterModule77311175.setStatus('current')
if mibBuilder.loadTexts: txToDualTx100MRedundantTwisterModule77311175.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToDualFxMmSc100MRedundantTwisterModule77311375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 2), ObjectIdentifier())
if mibBuilder.loadTexts: txToDualFxMmSc100MRedundantTwisterModule77311375.setStatus('current')
if mibBuilder.loadTexts: txToDualFxMmSc100MRedundantTwisterModule77311375.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToDualfxSmSc100MRedundantTwisterModule77311475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 3), ObjectIdentifier())
if mibBuilder.loadTexts: txToDualfxSmSc100MRedundantTwisterModule77311475.setStatus('current')
if mibBuilder.loadTexts: txToDualfxSmSc100MRedundantTwisterModule77311475.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToDualFxMmSt100MRedundantTwisterModule77311575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 4), ObjectIdentifier())
if mibBuilder.loadTexts: txToDualFxMmSt100MRedundantTwisterModule77311575.setStatus('current')
if mibBuilder.loadTexts: txToDualFxMmSt100MRedundantTwisterModule77311575.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
txToDualFxSmSt100MRedundantTwisterModule77311675 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 5), ObjectIdentifier())
if mibBuilder.loadTexts: txToDualFxSmSt100MRedundantTwisterModule77311675.setStatus('current')
if mibBuilder.loadTexts: txToDualFxSmSt100MRedundantTwisterModule77311675.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tpToDualTp10MRedundantTwisterModule77111175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 4, 6), ObjectIdentifier())
if mibBuilder.loadTexts: tpToDualTp10MRedundantTwisterModule77111175.setStatus('current')
if mibBuilder.loadTexts: tpToDualTp10MRedundantTwisterModule77111175.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
displayModule7500D = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 5, 1), ObjectIdentifier())
if mibBuilder.loadTexts: displayModule7500D.setStatus('current')
if mibBuilder.loadTexts: displayModule7500D.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
tx10M100MToTx10M100MRateAdapterModule76211175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 1), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToTx10M100MRateAdapterModule76211175.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToTx10M100MRateAdapterModule76211175.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To TX 10/100M. ')
tx10M100MToFxMmSc10M100MRateAdapterModule76411375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 2), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxMmSc10M100MRateAdapterModule76411375.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxMmSc10M100MRateAdapterModule76411375.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX MM SC 10/100M. ')
tx10M100MToFxMmSt10M100MRateAdapterModule76411575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 3), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxMmSt10M100MRateAdapterModule76411575.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxMmSt10M100MRateAdapterModule76411575.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX MM ST 10/100M. ')
tx10M100MToFxMmMt10M100MRateAdapterModule76411E75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 4), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxMmMt10M100MRateAdapterModule76411E75.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxMmMt10M100MRateAdapterModule76411E75.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX MM MT 10/100M. ')
tx10M100MToFxMmVf10M100MRateAdapterModule76411G75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 5), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxMmVf10M100MRateAdapterModule76411G75.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxMmVf10M100MRateAdapterModule76411G75.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX MM VF 10/100M. ')
tx10M100MToFxScSm100MRateAdapterModule76411475 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 6), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxScSm100MRateAdapterModule76411475.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxScSm100MRateAdapterModule76411475.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX SC SM 10/100M. ')
tx10M100MToFxScSMLongHaul100MRateAdapterModule76411775 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 7), ObjectIdentifier())
if mibBuilder.loadTexts: tx10M100MToFxScSMLongHaul100MRateAdapterModule76411775.setStatus('current')
if mibBuilder.loadTexts: tx10M100MToFxScSMLongHaul100MRateAdapterModule76411775.setDescription('An indication of the vendor-specific hardware type of physical entity. TX 10/100M To FX SC SM Long Haul 100M. ')
flMmSt10MToTx10M100MRateAdapterModule76115175 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 8), ObjectIdentifier())
if mibBuilder.loadTexts: flMmSt10MToTx10M100MRateAdapterModule76115175.setStatus('current')
if mibBuilder.loadTexts: flMmSt10MToTx10M100MRateAdapterModule76115175.setDescription('An indication of the vendor-specific hardware type of physical entity. FL MM ST 10M to TX 10M/100M. ')
flMmSt10MToFxMmSc100MRateAdapterModule76415375 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 9), ObjectIdentifier())
if mibBuilder.loadTexts: flMmSt10MToFxMmSc100MRateAdapterModule76415375.setStatus('current')
if mibBuilder.loadTexts: flMmSt10MToFxMmSc100MRateAdapterModule76415375.setDescription('An indication of the vendor-specific hardware type of physical entity. FL MM ST 10M TO FX MM SC 100M. ')
flMmSt10MToFxMmSt100MRateAdapterModule76415575 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 6, 10), ObjectIdentifier())
if mibBuilder.loadTexts: flMmSt10MToFxMmSt100MRateAdapterModule76415575.setStatus('current')
if mibBuilder.loadTexts: flMmSt10MToFxMmSt100MRateAdapterModule76415575.setDescription('An indication of the vendor-specific hardware type of physical entity. FL MM ST 10M TO FX MM ST 100M. ')
twelvePort10MTelcoToFlMmStModule371295M = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7, 1), ObjectIdentifier())
if mibBuilder.loadTexts: twelvePort10MTelcoToFlMmStModule371295M.setStatus('current')
if mibBuilder.loadTexts: twelvePort10MTelcoToFlMmStModule371295M.setDescription('An indication of the vendor-specific hardware type of physical entity. ')
twelvePort10MTelcoToFlVf45Module37129GM = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7, 2), ObjectIdentifier())
if mibBuilder.loadTexts: twelvePort10MTelcoToFlVf45Module37129GM.setStatus('current')
if mibBuilder.loadTexts: twelvePort10MTelcoToFlVf45Module37129GM.setDescription('An indication of the vendor-specific hardware type of physical entity. ')
sixPort10MTelcoToFlMmStModule370615M = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7, 3), ObjectIdentifier())
if mibBuilder.loadTexts: sixPort10MTelcoToFlMmStModule370615M.setStatus('current')
if mibBuilder.loadTexts: sixPort10MTelcoToFlMmStModule370615M.setDescription('An indication of the vendor-specific hardware type of physical entity. ')
sixPort10MTelcoToFlSmStModule370616M = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7, 4), ObjectIdentifier())
if mibBuilder.loadTexts: sixPort10MTelcoToFlSmStModule370616M.setStatus('current')
if mibBuilder.loadTexts: sixPort10MTelcoToFlSmStModule370616M.setDescription('An indication of the vendor-specific hardware type of physical entity. ')
sixPort10MTelcoToFlMmVf45Module37061GM = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 7, 5), ObjectIdentifier())
if mibBuilder.loadTexts: sixPort10MTelcoToFlMmVf45Module37061GM.setStatus('current')
if mibBuilder.loadTexts: sixPort10MTelcoToFlMmVf45Module37061GM.setDescription('An indication of the vendor-specific hardware type of physical entity. ')
mmSCSXToScSmLX1000MGigTwisterModule7151AD75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 8, 1), ObjectIdentifier())
if mibBuilder.loadTexts: mmSCSXToScSmLX1000MGigTwisterModule7151AD75.setStatus('current')
if mibBuilder.loadTexts: mmSCSXToScSmLX1000MGigTwisterModule7151AD75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmSCSXToMtrjSmLX1000MGigTwisterModule7151AF75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 8, 2), ObjectIdentifier())
if mibBuilder.loadTexts: mmSCSXToMtrjSmLX1000MGigTwisterModule7151AF75.setStatus('current')
if mibBuilder.loadTexts: mmSCSXToMtrjSmLX1000MGigTwisterModule7151AF75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjSXToScSmLX1000MGigTwisterModule7151ED75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 8, 3), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjSXToScSmLX1000MGigTwisterModule7151ED75.setStatus('current')
if mibBuilder.loadTexts: mmMtrjSXToScSmLX1000MGigTwisterModule7151ED75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mmMtrjSXToMtrjSmLX1000MGigTwisterModule7151EF75 = MibScalar((1, 3, 6, 1, 4, 1, 2745, 1, 4, 4, 8, 4), ObjectIdentifier())
if mibBuilder.loadTexts: mmMtrjSXToMtrjSmLX1000MGigTwisterModule7151EF75.setStatus('current')
if mibBuilder.loadTexts: mmMtrjSXToMtrjSmLX1000MGigTwisterModule7151EF75.setDescription('An indication of the vendor-specific hardware type of the physical entity.')
mibBuilder.exportSymbols("LC-PRODUCT-IDENTIFIERS-MIB", sixPort10MTelcoToFlMmStModule370615M=sixPort10MTelcoToFlMmStModule370615M, acPowerSupply7500AC=acPowerSupply7500AC, fxMmScToFxSmSt100MSingleTwisterModule71313675=fxMmScToFxSmSt100MSingleTwisterModule71313675, flSmStDualTwisterModule72116675=flSmStDualTwisterModule72116675, moduleIdentifiers=moduleIdentifiers, seventeenSlot2PSHotSwapSwitch750017DX=seventeenSlot2PSHotSwapSwitch750017DX, tx10M100MToFxScSm100MRateAdapterModule76411475=tx10M100MToFxScSm100MRateAdapterModule76411475, twelvePort10MTelcoToFlMmStModule371295M=twelvePort10MTelcoToFlMmStModule371295M, tpToFlMmSt10MSingleTwisterModule71111575=tpToFlMmSt10MSingleTwisterModule71111575, mgmntModuleIdentifiers=mgmntModuleIdentifiers, dualTwisterIdentifiers=dualTwisterIdentifiers, txToMmScSx100MSingleTwisterModule71311A75=txToMmScSx100MSingleTwisterModule71311A75, tpToFlSmSt10MSingleTwisterModule71111675=tpToFlSmSt10MSingleTwisterModule71111675, lc7500Chassis=lc7500Chassis, txToTx10MSingleTwisterModule78311175=txToTx10MSingleTwisterModule78311175, productIdentifiers=productIdentifiers, mmMtrjSXToScSmLX1000MGigTwisterModule7151ED75=mmMtrjSXToScSmLX1000MGigTwisterModule7151ED75, singleTwisterIdentifiers=singleTwisterIdentifiers, fxMmStToFxSmSc100MSingleTwisterModule71315475=fxMmStToFxSmSc100MSingleTwisterModule71315475, txToFxSmSc100MSingleTwisterModule71311475=txToFxSmSc100MSingleTwisterModule71311475, tpToDualTp10MRedundantTwisterModule77111175=tpToDualTp10MRedundantTwisterModule77111175, displayModule7500D=displayModule7500D, tpToSmaMm10MSingleTwisterModule71111875=tpToSmaMm10MSingleTwisterModule71111875, tpToMmMtrj100MSingleTwisterModule71311E75=tpToMmMtrj100MSingleTwisterModule71311E75, flMmSt10MToFxMmSc100MRateAdapterModule76415375=flMmSt10MToFxMmSc100MRateAdapterModule76415375, twelveSlot2PS750012=twelveSlot2PS750012, tpToTp10MSingleTwisterModule78111175=tpToTp10MSingleTwisterModule78111175, twelvePort10MTelcoToFlVf45Module37129GM=twelvePort10MTelcoToFlVf45Module37129GM, mmMtrjSXToMtrjSmLX1000MGigTwisterModule7151EF75=mmMtrjSXToMtrjSmLX1000MGigTwisterModule7151EF75, fxMmStToFxSmSt100MSingleTwisterModule71315675=fxMmStToFxSmSt100MSingleTwisterModule71315675, rateAdapterIdentifiers=rateAdapterIdentifiers, redundantTwisterIdentifiers=redundantTwisterIdentifiers, txToDualFxSmSt100MRedundantTwisterModule77311675=txToDualFxSmSt100MRedundantTwisterModule77311675, txToFxMmSc100MSingleTwisterModule71311375=txToFxMmSc100MSingleTwisterModule71311375, tx10M100MToTx10M100MRateAdapterModule76211175=tx10M100MToTx10M100MRateAdapterModule76211175, lc7500PowerSupply=lc7500PowerSupply, txToDualFxMmSc100MRedundantTwisterModule77311375=txToDualFxMmSc100MRedundantTwisterModule77311375, flMmSt10MToTx10M100MRateAdapterModule76115175=flMmSt10MToTx10M100MRateAdapterModule76115175, tpToSmMtrj100MSingleTwisterModule71311F75=tpToSmMtrj100MSingleTwisterModule71311F75, txToDualfxSmSc100MRedundantTwisterModule77311475=txToDualfxSmSc100MRedundantTwisterModule77311475, singleEthernetMgmntModule7501M=singleEthernetMgmntModule7501M, txToScSm100MSingleTwisterModuleExLongHaul71311J75=txToScSm100MSingleTwisterModuleExLongHaul71311J75, txToMmStSx100MSingleTwisterModule71311B75=txToMmStSx100MSingleTwisterModule71311B75, mmStToMmSt100MSingleTwisterModule78315575=mmStToMmSt100MSingleTwisterModule78315575, oem17500Chassis=oem17500Chassis, oem1SeventeenSlot1PSFixed75001701=oem1SeventeenSlot1PSFixed75001701, PYSNMP_MODULE_ID=productIdentifiers, txToDualFxMmSt100MRedundantTwisterModule77311575=txToDualFxMmSt100MRedundantTwisterModule77311575, displayModuleIdentifiers=displayModuleIdentifiers, mmMtrjToSmMtrj100MSingleTwisterModule7131EF75=mmMtrjToSmMtrj100MSingleTwisterModule7131EF75, fixedPortIdentifiers=fixedPortIdentifiers, oem1SeventeenSlot2PSFixed75001702=oem1SeventeenSlot2PSFixed75001702, redundantMgmntModule7501RM=redundantMgmntModule7501RM, sixPort10MTelcoToFlSmStModule370616M=sixPort10MTelcoToFlSmStModule370616M, txToDualTx100MRedundantTwisterModule77311175=txToDualTx100MRedundantTwisterModule77311175, mmMtrjToStSm100MSingleTwisterModule7131E675=mmMtrjToStSm100MSingleTwisterModule7131E675, mmMtrjToScSm100MSingleTwisterModule7131E475=mmMtrjToScSm100MSingleTwisterModule7131E475, mmSCSXToMtrjSmLX1000MGigTwisterModule7151AF75=mmSCSXToMtrjSmLX1000MGigTwisterModule7151AF75, tx10M100MToFxMmSt10M100MRateAdapterModule76411575=tx10M100MToFxMmSt10M100MRateAdapterModule76411575, protocolIndependentIdentifiers=protocolIndependentIdentifiers, oem1TwelveSlot2PS750012=oem1TwelveSlot2PS750012, dualEthernetMgmntModule7502M=dualEthernetMgmntModule7502M, oem1SeventeenSlot2PSHotSwapSwitch750017DX=oem1SeventeenSlot2PSHotSwapSwitch750017DX, tx10M100MToFxScSMLongHaul100MRateAdapterModule76411775=tx10M100MToFxScSMLongHaul100MRateAdapterModule76411775, txToFxMmSt100MSingleTwisterModule71311575=txToFxMmSt100MSingleTwisterModule71311575, tx10M100MToFxMmMt10M100MRateAdapterModule76411E75=tx10M100MToFxMmMt10M100MRateAdapterModule76411E75, mmScToMmSc100MSingleTwisterModule78313375=mmScToMmSc100MSingleTwisterModule78313375, flMmScDualTwisterModule72113375=flMmScDualTwisterModule72113375, flMmStDualTwisterModule72115575=flMmStDualTwisterModule72115575, tx10M100MToFxMmVf10M100MRateAdapterModule76411G75=tx10M100MToFxMmVf10M100MRateAdapterModule76411G75, flMmSt10MToFxMmSt100MRateAdapterModule76415575=flMmSt10MToFxMmSt100MRateAdapterModule76415575, fxMmScToFxSmSc100MSingleTwisterModule71313475=fxMmScToFxSmSc100MSingleTwisterModule71313475, thirteenSlotTelco2PS750013=thirteenSlotTelco2PS750013, txToFxSmSt100MSingleTwisterModule71311675=txToFxSmSt100MSingleTwisterModule71311675, tpToMmVf45100MSingleTwisterModule71311G75=tpToMmVf45100MSingleTwisterModule71311G75, powerSupplyIdentifiers=powerSupplyIdentifiers, chassisIdentifiers=chassisIdentifiers, tpToMmSc10MSingleTwisterModule71111375=tpToMmSc10MSingleTwisterModule71111375, seventeenSlot2PSFixed75001702=seventeenSlot2PSFixed75001702, seventeenSlot1PSFixed75001701=seventeenSlot1PSFixed75001701, txToFxSmSc40Km100MSingleTwisterModule71311775=txToFxSmSc40Km100MSingleTwisterModule71311775, tpDualTwisterModule72111175=tpDualTwisterModule72111175, dcPowerSupply7500DC=dcPowerSupply7500DC, sixPort10MTelcoToFlMmVf45Module37061GM=sixPort10MTelcoToFlMmVf45Module37061GM, mmSCSXToScSmLX1000MGigTwisterModule7151AD75=mmSCSXToScSmLX1000MGigTwisterModule7151AD75, tx10M100MToFxMmSc10M100MRateAdapterModule76411375=tx10M100MToFxMmSc10M100MRateAdapterModule76411375, mmMtrjToMmMtrj100MSingleTwisterModule7831EE75=mmMtrjToMmMtrj100MSingleTwisterModule7831EE75, tpToBnc10MSingleTwisterModule71111275=tpToBnc10MSingleTwisterModule71111275)
