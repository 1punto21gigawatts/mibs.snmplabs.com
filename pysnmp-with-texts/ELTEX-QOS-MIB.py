#
# PySNMP MIB module ELTEX-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-QOS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:02:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Integer32, Bits, Counter32, iso, ObjectIdentity, IpAddress, Counter64, Unsigned32, ModuleIdentity, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Integer32", "Bits", "Counter32", "iso", "ObjectIdentity", "IpAddress", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eltQos = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 20))
eltQos.setRevisions(('2015-04-23 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: eltQos.setRevisionsDescriptions(('',))
if mibBuilder.loadTexts: eltQos.setLastUpdated('201504230000Z')
if mibBuilder.loadTexts: eltQos.setOrganization('ELTEX')
if mibBuilder.loadTexts: eltQos.setContactInfo('eltex@eltex.nsk.ru')
if mibBuilder.loadTexts: eltQos.setDescription('ELTEX Quality of Service')
eltQosPolicyStats = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 20, 1))
eltQosPolicyStatsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1), )
if mibBuilder.loadTexts: eltQosPolicyStatsTable.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsTable.setDescription('This table specifies Police Action related Statistical information.')
eltQosPolicyStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1), ).setIndexNames((0, "ELTEX-QOS-MIB", "eltQosPolicyStatsPolicyIndex"))
if mibBuilder.loadTexts: eltQosPolicyStatsEntry.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsEntry.setDescription('An entry containing management information applicable to a particular interface.')
eltQosPolicyStatsPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsPolicyIndex.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsPolicyIndex.setDescription('A unique value, greater than zero, for each policy.')
eltQosPolicyStatsifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsifDescr.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsifDescr.setDescription('A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.')
eltQosPolicyStatsPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsPolicy.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsPolicy.setDescription('Name of the policy map.')
eltQosPolicyStatsBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsBytes.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsBytes.setDescription('The count of octets treated as conforming by the policing feature.')
eltQosPolicyStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsPkts.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsPkts.setDescription('The count of packets treated as conforming by the policing feature.')
eltQosPolicyStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosPolicyStatsDrops.setStatus('current')
if mibBuilder.loadTexts: eltQosPolicyStatsDrops.setDescription('The count of packets dropped as conforming by the policing feature.')
eltQosClassStats = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 20, 2))
eltQosClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1), )
if mibBuilder.loadTexts: eltQosClassStatsTable.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsTable.setDescription('This table specifies Class Action related Statistical information.')
eltQosClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1), ).setIndexNames((0, "ELTEX-QOS-MIB", "eltQosClassStatsClassIndex"))
if mibBuilder.loadTexts: eltQosClassStatsEntry.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsEntry.setDescription('An entry containing management information applicable to a particular interface.')
eltQosClassStatsClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsClassIndex.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsClassIndex.setDescription('A unique value, greater than zero, for each class.')
eltQosClassStatsifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsifDescr.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsifDescr.setDescription('A textual string containing information about the interface. This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.')
eltQosClassStatsClass = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsClass.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsClass.setDescription('Name of the class map.')
eltQosClassStatsPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsPolicy.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsPolicy.setDescription('Name of the policy map.')
eltQosClassStatsBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsBytes.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsBytes.setDescription('The count of octets treated as conforming by the class feature.')
eltQosClassStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsPkts.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsPkts.setDescription('The count of packets treated as conforming by the class feature.')
eltQosClassStatsDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 20, 2, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltQosClassStatsDrops.setStatus('current')
if mibBuilder.loadTexts: eltQosClassStatsDrops.setDescription('The count of packets dropped as conforming by the class feature.')
mibBuilder.exportSymbols("ELTEX-QOS-MIB", eltQosPolicyStatsEntry=eltQosPolicyStatsEntry, eltQosClassStatsDrops=eltQosClassStatsDrops, eltQosClassStatsTable=eltQosClassStatsTable, PYSNMP_MODULE_ID=eltQos, eltQosPolicyStats=eltQosPolicyStats, eltQosPolicyStatsDrops=eltQosPolicyStatsDrops, eltQos=eltQos, eltQosClassStatsEntry=eltQosClassStatsEntry, eltQosPolicyStatsPkts=eltQosPolicyStatsPkts, eltQosClassStatsPkts=eltQosClassStatsPkts, eltQosPolicyStatsTable=eltQosPolicyStatsTable, eltQosClassStatsifDescr=eltQosClassStatsifDescr, eltQosClassStatsClass=eltQosClassStatsClass, eltQosClassStatsPolicy=eltQosClassStatsPolicy, eltQosPolicyStatsBytes=eltQosPolicyStatsBytes, eltQosClassStatsClassIndex=eltQosClassStatsClassIndex, eltQosPolicyStatsPolicyIndex=eltQosPolicyStatsPolicyIndex, eltQosClassStatsBytes=eltQosClassStatsBytes, eltQosPolicyStatsifDescr=eltQosPolicyStatsifDescr, eltQosClassStats=eltQosClassStats, eltQosPolicyStatsPolicy=eltQosPolicyStatsPolicy)
