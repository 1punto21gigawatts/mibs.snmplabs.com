#
# PySNMP MIB module SONOMASYSTEMS-SONOMA-SLIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMASYSTEMS-SONOMA-SLIP-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, ModuleIdentity, ObjectIdentity, Integer32, MibIdentifier, Unsigned32, IpAddress, Counter32, Counter64, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "ModuleIdentity", "ObjectIdentity", "Integer32", "MibIdentifier", "Unsigned32", "IpAddress", "Counter32", "Counter64", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonomaApplications, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaApplications")
slip = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2))
slipSpeed = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sp2400", 1), ("sp4800", 2), ("sp9600", 3), ("sp19200", 4), ("sp38400", 5), ("sp57600", 6), ("sp115200", 7))).clone('sp9600')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slipSpeed.setStatus('mandatory')
if mibBuilder.loadTexts: slipSpeed.setDescription('Specify the desired speed of your connection.')
slipDataBits = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("db8", 3))).clone('db8')).setMaxAccess("readonly")
if mibBuilder.loadTexts: slipDataBits.setStatus('mandatory')
if mibBuilder.loadTexts: slipDataBits.setDescription('Specify the number of data bits in the data packets sent between the two computers.')
slipParity = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("none", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: slipParity.setStatus('mandatory')
if mibBuilder.loadTexts: slipParity.setDescription('Specify the parity type. Parity is an error-checking procedure on the transmitted data bits.')
slipStopBits = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sb1", 1), ("sb2", 2))).clone('sb1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slipStopBits.setStatus('mandatory')
if mibBuilder.loadTexts: slipStopBits.setDescription('Specify the time that elapses between transmitted characters.')
slipFlowControl = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("none", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: slipFlowControl.setStatus('mandatory')
if mibBuilder.loadTexts: slipFlowControl.setDescription('Indicate what Terminal should do if the buffer becomes too full to receive more data from the remote computer.')
slipType = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uncompressed", 1), ("compressed", 2))).clone('uncompressed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slipType.setStatus('mandatory')
if mibBuilder.loadTexts: slipType.setDescription('Specify whether Van Jacobson TCP/IP header compression is performed on the SLIP interface.')
slipMtu = MibScalar((1, 3, 6, 1, 4, 1, 2926, 25, 8, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1518)).clone(1006)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slipMtu.setStatus('mandatory')
if mibBuilder.loadTexts: slipMtu.setDescription('The size of the largest datagram which can be sent/received on the interface.')
mibBuilder.exportSymbols("SONOMASYSTEMS-SONOMA-SLIP-MIB", slipFlowControl=slipFlowControl, slipMtu=slipMtu, slipDataBits=slipDataBits, slipParity=slipParity, slip=slip, slipStopBits=slipStopBits, slipType=slipType, slipSpeed=slipSpeed)
