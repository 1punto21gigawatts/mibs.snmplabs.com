#
# PySNMP MIB module ZyXEL-COE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZyXEL-COE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:52:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, enterprises, ModuleIdentity, Integer32, IpAddress, NotificationType, Counter32, Gauge32, TimeTicks, MibIdentifier, iso, ObjectIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "enterprises", "ModuleIdentity", "Integer32", "IpAddress", "NotificationType", "Counter32", "Gauge32", "TimeTicks", "MibIdentifier", "iso", "ObjectIdentity", "Unsigned32")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
class DisplayString(OctetString):
    pass

zyxel = MibIdentifier((1, 3, 6, 1, 4, 1, 890))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1))
prestige = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 2))
mtu = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3))
dslam = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 4))
systemTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 999))
aes_100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 1)).setLabel("aes-100")
pes_100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 2)).setLabel("pes-100")
ves_100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 3)).setLabel("ves-100")
shes_100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 4)).setLabel("shes-100")
p1600 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 5))
p1400 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 6))
p2100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 7))
aes_100_1 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 3, 8)).setLabel("aes-100-1")
zysam_1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 4, 1)).setLabel("zysam-1000")
zysam_1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 4, 2)).setLabel("zysam-1100")
zysam_1200 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 4, 3)).setLabel("zysam-1200")
zysam_2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 4, 4)).setLabel("zysam-2000")
problemCause = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 999, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: problemCause.setStatus('mandatory')
if mibBuilder.loadTexts: problemCause.setDescription('The variable is the description of sytsem problem.')
systemTemperature = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 999, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTemperature.setStatus('mandatory')
if mibBuilder.loadTexts: systemTemperature.setDescription('The variable is the current temperature in Celsius of the system.')
reboot = NotificationType((1, 3, 6, 1, 4, 1, 890) + (0,1)).setObjects(("ZyXEL-COE-MIB", "problemCause"))
if mibBuilder.loadTexts: reboot.setDescription('Send a message to the manager that the system is going to reboot. The variable is the reason why the system reboots.')
systemShutdown = NotificationType((1, 3, 6, 1, 4, 1, 890) + (0,2)).setObjects(("ZyXEL-COE-MIB", "problemCause"))
if mibBuilder.loadTexts: systemShutdown.setDescription('Send a message to the manager that the system is going to shutdown. The variable is the reason that causes the system to shutdown.')
overheat = NotificationType((1, 3, 6, 1, 4, 1, 890) + (0,3)).setObjects(("ZyXEL-COE-MIB", "systemTemperature"))
if mibBuilder.loadTexts: overheat.setDescription('Send a message to the manager that the system is overheated. The variable in the binding list is the current temperature in Celsius of the system.')
overheatOver = NotificationType((1, 3, 6, 1, 4, 1, 890) + (0,4)).setObjects(("ZyXEL-COE-MIB", "systemTemperature"))
if mibBuilder.loadTexts: overheatOver.setDescription('Send a message to the manager that the overheated condition is over. The variable in the binding list is the current temperature in Celsius of the system.')
mibBuilder.exportSymbols("ZyXEL-COE-MIB", aes_100_1=aes_100_1, zysam_1200=zysam_1200, overheat=overheat, zysam_1000=zysam_1000, mtu=mtu, overheatOver=overheatOver, pes_100=pes_100, reboot=reboot, ves_100=ves_100, p2100=p2100, zyxel=zyxel, p1600=p1600, systemTemperature=systemTemperature, systemShutdown=systemShutdown, prestige=prestige, shes_100=shes_100, dslam=dslam, p1400=p1400, systemTraps=systemTraps, products=products, zysam_1100=zysam_1100, DisplayString=DisplayString, aes_100=aes_100, problemCause=problemCause, zysam_2000=zysam_2000)
