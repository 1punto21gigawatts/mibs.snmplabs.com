#
# PySNMP MIB module DELL-NETWORKING-SYSTEM-COMPONENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DELL-NETWORKING-SYSTEM-COMPONENT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:38:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dellNetMgmt, = mibBuilder.importSymbols("DELL-NETWORKING-SMI", "dellNetMgmt")
DellNetCamPartitionType, = mibBuilder.importSymbols("DELL-NETWORKING-TC", "DellNetCamPartitionType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, TimeTicks, iso, NotificationType, ObjectIdentity, Counter32, Integer32, Unsigned32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "TimeTicks", "iso", "NotificationType", "ObjectIdentity", "Counter32", "Integer32", "Unsigned32", "ModuleIdentity", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dellNetSysComponentMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 7))
if mibBuilder.loadTexts: dellNetSysComponentMib.setLastUpdated('201108020000Z')
if mibBuilder.loadTexts: dellNetSysComponentMib.setOrganization('Dell Inc')
if mibBuilder.loadTexts: dellNetSysComponentMib.setContactInfo('http://www.dell.com/support')
if mibBuilder.loadTexts: dellNetSysComponentMib.setDescription('Dell Networking OS System component MIB. Dell Networking OS System component allow user to view the SW information of a component in the system. Currently, the available component information that are avaibale are 1) CAM Entries on linecard - Overall system CAM usage table - L2 Ingress or Egress CAM Usage - L3 Ingress or Egress CAM Usage - L3Ext Table CAM Usage (Specific to S-series L3 tables-Broadcom pltforms) ')
dellNetSysComponentObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1))
dellNetCamEntries = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1))
dellNetSysComponentTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2))
camUsageTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1), )
if mibBuilder.loadTexts: camUsageTable.setStatus('current')
if mibBuilder.loadTexts: camUsageTable.setDescription('A table of general CAM usages table.')
camUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1), ).setIndexNames((0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageSlot"), (0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsagePipeNum"), (0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsagePartId"))
if mibBuilder.loadTexts: camUsageEntry.setStatus('current')
if mibBuilder.loadTexts: camUsageEntry.setDescription('A table of CAM usage table. The table show the different partition of CAM ')
camUsageSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: camUsageSlot.setStatus('current')
if mibBuilder.loadTexts: camUsageSlot.setDescription(' The slot number of linecard where the CAM is located ')
camUsagePipeNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: camUsagePipeNum.setStatus('current')
if mibBuilder.loadTexts: camUsagePipeNum.setDescription(' The port pipe number on the linecard where the CAM is located ')
camUsagePartId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 3), DellNetCamPartitionType())
if mibBuilder.loadTexts: camUsagePartId.setStatus('current')
if mibBuilder.loadTexts: camUsagePartId.setDescription(' The partition id of the CAM on the line card. ')
camUsagePartDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsagePartDesc.setStatus('current')
if mibBuilder.loadTexts: camUsagePartDesc.setDescription('The description of the CAM partition id.')
camUsageTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageTotal.setDescription(' The total cam size allocated to this CAM partition ')
camUsageUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageUsed.setDescription(' The total cam used or configured to this CAM partition ')
camUsageL2Table = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2), )
if mibBuilder.loadTexts: camUsageL2Table.setStatus('current')
if mibBuilder.loadTexts: camUsageL2Table.setDescription('A table of Layer 2 or switch layer CAM usages table.')
camUsageL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1), ).setIndexNames((0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL2Slot"), (0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL2PipeId"))
if mibBuilder.loadTexts: camUsageL2Entry.setStatus('current')
if mibBuilder.loadTexts: camUsageL2Entry.setDescription('A table of Layer 2 (switch layer ) CAM usage table. The table show the different partition of CAM and if the cam is used in the Ingress or Egress. ')
camUsageL2Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: camUsageL2Slot.setStatus('current')
if mibBuilder.loadTexts: camUsageL2Slot.setDescription(' The slot number of linecard where the CAM is located ')
camUsageL2PipeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: camUsageL2PipeId.setStatus('current')
if mibBuilder.loadTexts: camUsageL2PipeId.setDescription(' The port pipe number on the linecard where the CAM is located ')
camUsageL2IngAclTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2IngAclTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL2IngAclTotal.setDescription(' The total cam size allocated to layer 2 ingress ACL ')
camUsageL2IngAclUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2IngAclUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL2IngAclUsed.setDescription(' The total cam used or configured in layer 2 ingress ACL ')
camUsageL2IngFibTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2IngFibTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL2IngFibTotal.setDescription(' The total cam size allocated to layer 2 ingress FIB ')
camUsageL2IngFibUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2IngFibUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL2IngFibUsed.setDescription(' The total cam used or configured in layer 2 ingress FIB ')
camUsageL2EgrAclTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2EgrAclTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL2EgrAclTotal.setDescription(' The total cam size allocated to layer 2 Egress ACL ')
camUsageL2EgrAclUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL2EgrAclUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL2EgrAclUsed.setDescription(' The total cam used or configured in layer 2 Egress Acl ')
camUsageL3Table = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3), )
if mibBuilder.loadTexts: camUsageL3Table.setStatus('current')
if mibBuilder.loadTexts: camUsageL3Table.setDescription('A table of Layer 3 or router layer CAM usages table.')
camUsageL3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1), ).setIndexNames((0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL3Slot"), (0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL3PipeId"))
if mibBuilder.loadTexts: camUsageL3Entry.setStatus('current')
if mibBuilder.loadTexts: camUsageL3Entry.setDescription('A table of Layer 3 (router layer ) CAM usage table. The table show the different partition of CAM and if the cam is used in the Ingress or Egress. ')
camUsageL3Slot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: camUsageL3Slot.setStatus('current')
if mibBuilder.loadTexts: camUsageL3Slot.setDescription(' The slot number of linecard where the CAM is located ')
camUsageL3PipeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: camUsageL3PipeId.setStatus('current')
if mibBuilder.loadTexts: camUsageL3PipeId.setDescription(' The port pipe number on the linecard where the CAM is located ')
camUsageL3IngFibTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngFibTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngFibTotal.setDescription(' The total cam size allocated to layer 3 ingress FIB ')
camUsageL3IngFibUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngFibUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngFibUsed.setDescription(' The total cam used or configured in layer 3 ingress FIB ')
camUsageL3IngSysFlowTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngSysFlowTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngSysFlowTotal.setDescription(' The total cam size allocated to layer 3 ingress system flow ')
camUsageL3IngSysFlowUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngSysFlowUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngSysFlowUsed.setDescription(' The total cam used or configured in layer 3 ingress system flow ')
camUsageL3IngTrcListTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngTrcListTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngTrcListTotal.setDescription(' The total cam size allocated to layer 3 ingress trace list ')
camUsageL3IngTrcListUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngTrcListUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngTrcListUsed.setDescription(' The total cam used or configured in layer 3 ingress trace list ')
camUsageL3IngMcastFibTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngMcastFibTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngMcastFibTotal.setDescription(' The total cam size allocated to layer 3 ingress multicast FIB ')
camUsageL3IngMcastFibUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngMcastFibUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngMcastFibUsed.setDescription(' The total cam used or configured in layer 3 ingress multicast FIB ')
camUsageL3IngQosTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngQosTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngQosTotal.setDescription(' The total cam size allocated to layer 3 ingress QOS ')
camUsageL3IngQosUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngQosUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngQosUsed.setDescription(' The total cam used or configured in layer 3 ingress QOS ')
camUsageL3IngPbrTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngPbrTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngPbrTotal.setDescription(' The total cam size allocated to layer 3 ingress PBR ')
camUsageL3IngPbrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngPbrUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngPbrUsed.setDescription(' The total cam used or configured in layer 3 ingress QOS ')
camUsageL3IngAclTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngAclTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngAclTotal.setDescription(' The total cam size allocated to layer 3 ingress ACL ')
camUsageL3IngAclUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3IngAclUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3IngAclUsed.setDescription(' The total cam used or configured in layer 3 ingress ACL ')
camUsageL3EgrAclTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3EgrAclTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3EgrAclTotal.setDescription(' The total cam size allocated to layer 3 egress ACL ')
camUsageL3EgrAclUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3EgrAclUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3EgrAclUsed.setDescription(' The total cam used or configured in layer 3 egress ACL ')
camUsageL3ExtTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4), )
if mibBuilder.loadTexts: camUsageL3ExtTable.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtTable.setDescription('A table of Layer 3 or router layer CAM usages table based on BCM pltform.')
camUsageL3ExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1), ).setIndexNames((0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL3ExtSlot"), (0, "DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "camUsageL3ExtPipeId"))
if mibBuilder.loadTexts: camUsageL3ExtEntry.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtEntry.setDescription('A table of Layer 3 (router layer ) CAM usage table. The table show the different partition of CAM/Table based on BCM architecture. ')
camUsageL3ExtSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: camUsageL3ExtSlot.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtSlot.setDescription(' The slot number of linecard where the CAM is located ')
camUsageL3ExtPipeId = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: camUsageL3ExtPipeId.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtPipeId.setDescription(' The port pipe number on the linecard where the CAM is located ')
camUsageL3ExtHostTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3ExtHostTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtHostTotal.setDescription(' The total cam size allocated to layer 3 Host table. Host table is shared by IPv4,IPv6 unicast host route entries (ARP) and IPv4,IPv6 Multicast entries. The usage reflects sum of all these entries ')
camUsageL3ExtHostUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3ExtHostUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtHostUsed.setDescription(' The total cam used in layer 3 Host table. As Host table is shared by IPv4,Ipv6 unicast host route entries and IPv4,IPv6 Multicast entries. The usage reflects sum of all these entries. ')
camUsageL3ExtLPMTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3ExtLPMTotal.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtLPMTotal.setDescription(' The total cam size allocated to layer 3 Longest Prefix Match table. The LPM table is shared by IPv4,IPv6 unicast route entries. ')
camUsageL3ExtLPMUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: camUsageL3ExtLPMUsed.setStatus('current')
if mibBuilder.loadTexts: camUsageL3ExtLPMUsed.setDescription(' The total cam size used in layer 3 Longest Prefix Match table. The LPM table is shared by IPv4,Ipv6 unicast route entries.The usage reflects sum of IPv4 and v6 unicast route entries. ')
sysCompAlarmMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 0))
sysCompAlarmVariable = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1))
sysCompAlarmLevel = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sysCompAlarmLevel.setStatus('current')
if mibBuilder.loadTexts: sysCompAlarmLevel.setDescription('the message warning level')
sysCompAlarmVarString = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sysCompAlarmVarString.setStatus('current')
if mibBuilder.loadTexts: sysCompAlarmVarString.setDescription('An generic string value in the TRAP object')
sysCompSlotId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sysCompSlotId.setStatus('current')
if mibBuilder.loadTexts: sysCompSlotId.setDescription('The associated LineCard in the TRAP object')
sysCompPortPipe = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sysCompPortPipe.setStatus('current')
if mibBuilder.loadTexts: sysCompPortPipe.setDescription('The associated port pipe in the TRAP object')
sysCompCamPartId = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 1, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: sysCompCamPartId.setStatus('current')
if mibBuilder.loadTexts: sysCompCamPartId.setDescription('The associated CAM partion name in the TRAP object')
camUsageThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 0, 1)).setObjects(("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmLevel"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmVarString"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompSlotId"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompPortPipe"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompCamPartId"))
if mibBuilder.loadTexts: camUsageThresholdExceed.setStatus('current')
if mibBuilder.loadTexts: camUsageThresholdExceed.setDescription('The agent generate this trap when the cam usage for a partition is exceeded.')
camIsFull = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 0, 2)).setObjects(("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmLevel"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmVarString"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompSlotId"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompPortPipe"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompCamPartId"))
if mibBuilder.loadTexts: camIsFull.setStatus('current')
if mibBuilder.loadTexts: camIsFull.setDescription('The agent generate this trap when the cam is fully used.')
camAuditError = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 7, 1, 2, 0, 3)).setObjects(("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmLevel"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompAlarmVarString"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompSlotId"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompPortPipe"), ("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", "sysCompCamPartId"))
if mibBuilder.loadTexts: camAuditError.setStatus('current')
if mibBuilder.loadTexts: camAuditError.setDescription('The agent generate this trap when a cam entry mismatches with the Software entry.')
mibBuilder.exportSymbols("DELL-NETWORKING-SYSTEM-COMPONENT-MIB", camUsageL3EgrAclTotal=camUsageL3EgrAclTotal, dellNetSysComponentMib=dellNetSysComponentMib, camUsagePipeNum=camUsagePipeNum, camUsageL2PipeId=camUsageL2PipeId, camUsageThresholdExceed=camUsageThresholdExceed, dellNetSysComponentTrap=dellNetSysComponentTrap, camUsageL3IngPbrUsed=camUsageL3IngPbrUsed, camUsageL3Table=camUsageL3Table, camUsageL3IngPbrTotal=camUsageL3IngPbrTotal, sysCompAlarmVarString=sysCompAlarmVarString, camUsageTable=camUsageTable, camIsFull=camIsFull, camUsageL3IngFibTotal=camUsageL3IngFibTotal, camUsageL3IngTrcListUsed=camUsageL3IngTrcListUsed, camUsageL3ExtEntry=camUsageL3ExtEntry, camUsageL2EgrAclTotal=camUsageL2EgrAclTotal, camUsageSlot=camUsageSlot, camUsageL3ExtHostUsed=camUsageL3ExtHostUsed, sysCompAlarmMibNotifications=sysCompAlarmMibNotifications, camUsageTotal=camUsageTotal, camUsageL3Slot=camUsageL3Slot, sysCompPortPipe=sysCompPortPipe, camUsageL3ExtSlot=camUsageL3ExtSlot, sysCompAlarmLevel=sysCompAlarmLevel, camUsageL2Table=camUsageL2Table, camUsageL3IngMcastFibUsed=camUsageL3IngMcastFibUsed, camUsageL3IngSysFlowTotal=camUsageL3IngSysFlowTotal, camUsageL3IngAclTotal=camUsageL3IngAclTotal, camUsageL3IngQosTotal=camUsageL3IngQosTotal, camUsageL3IngAclUsed=camUsageL3IngAclUsed, camUsageL3ExtLPMTotal=camUsageL3ExtLPMTotal, camUsageL2IngAclUsed=camUsageL2IngAclUsed, camUsageL3IngFibUsed=camUsageL3IngFibUsed, camUsageUsed=camUsageUsed, camUsageL3Entry=camUsageL3Entry, camUsageL2Slot=camUsageL2Slot, camUsageL3ExtHostTotal=camUsageL3ExtHostTotal, camUsageL3IngQosUsed=camUsageL3IngQosUsed, camUsageL3EgrAclUsed=camUsageL3EgrAclUsed, camUsageL2IngFibTotal=camUsageL2IngFibTotal, camUsageL3PipeId=camUsageL3PipeId, camUsageL3IngTrcListTotal=camUsageL3IngTrcListTotal, camUsageL3IngMcastFibTotal=camUsageL3IngMcastFibTotal, sysCompAlarmVariable=sysCompAlarmVariable, sysCompSlotId=sysCompSlotId, camAuditError=camAuditError, dellNetSysComponentObjects=dellNetSysComponentObjects, camUsageEntry=camUsageEntry, camUsagePartId=camUsagePartId, camUsageL2EgrAclUsed=camUsageL2EgrAclUsed, camUsageL3ExtLPMUsed=camUsageL3ExtLPMUsed, camUsageL3ExtPipeId=camUsageL3ExtPipeId, camUsageL2IngAclTotal=camUsageL2IngAclTotal, camUsageL2Entry=camUsageL2Entry, camUsageL3IngSysFlowUsed=camUsageL3IngSysFlowUsed, camUsageL2IngFibUsed=camUsageL2IngFibUsed, sysCompCamPartId=sysCompCamPartId, dellNetCamEntries=dellNetCamEntries, camUsagePartDesc=camUsagePartDesc, camUsageL3ExtTable=camUsageL3ExtTable, PYSNMP_MODULE_ID=dellNetSysComponentMib)
