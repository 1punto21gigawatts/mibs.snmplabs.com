#
# PySNMP MIB module CL-PKTC-EUE-PROV-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CL-PKTC-EUE-PROV-MGMT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:24:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
pktcEUEMibs, = mibBuilder.importSymbols("CLAB-DEF-MIB", "pktcEUEMibs")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Bits, Unsigned32, MibIdentifier, iso, ObjectIdentity, IpAddress, TimeTicks, Counter64, NotificationType, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Unsigned32", "MibIdentifier", "iso", "ObjectIdentity", "IpAddress", "TimeTicks", "Counter64", "NotificationType", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pktcEUEProvMgmtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4))
if mibBuilder.loadTexts: pktcEUEProvMgmtMIB.setLastUpdated('200708220000Z')
if mibBuilder.loadTexts: pktcEUEProvMgmtMIB.setOrganization('Cable Television Laboratories, Inc.')
if mibBuilder.loadTexts: pktcEUEProvMgmtMIB.setContactInfo('Sumanth Channabasappa Postal: Cable Television Laboratories, Inc 858 Coal Creek Circle Louisville, CO 80027 U.S.A. Phone: +1 303 661 9100 Fax: +1 303 661 9199 E-mail:mibs@cablelabs.com Acknowledgements: Eugene Nechamkin, Broadcom Thomas Clack, Broadcom - Primary author Josh Littlefield, Cisco , and members of the PacketCable PACM Focus Team. ')
if mibBuilder.loadTexts: pktcEUEProvMgmtMIB.setDescription('This MIB module provides the provisioning and management MIB module for the E-UE Provisioning Framework.')
pktcEUEProvMgmtNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 0))
pktcEUEProvMgmtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1))
pktcEUEProvMgmtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 2))
pktcEUEProvMgmtVersion = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEProvMgmtVersion.setStatus('current')
if mibBuilder.loadTexts: pktcEUEProvMgmtVersion.setDescription(" This MIB Object represents the Provisioning and Management Module version. The eUE MUST set this MIB Object to value of '1.0'.")
pktcEUEDhcpv6ServerId1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerId1.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerId1.setDescription(" This MIB Object contains the primary DHCP Server identifier the EUE was provided with, during provisioning. The eUE MUST populate this MIB Object with the first thirty-two bytes of the DHCPv6 Server identifier provided within the eCM's CL_OPTION_CCCV6, sub-option 1.")
pktcEUEDhcpv6ServerId2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerId2.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerId2.setDescription(" This MIB Object contains the secondary DHCP Server identifier the EUE was provided with, during provisioning. The eUE MUST populate this MIB Object with the first thirty-two bytes of the DHCPv6 Server identifier provided within the eCM's CL_OPTION_CCCV6, sub-option 2.")
pktcEUEDhcpv6ServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerAddressType.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerAddressType.setDescription("This MIB Object contains the DHCP Server Address type contained in the MIB Object 'pktcEUEDhcpv6ServerAddress'. Valid values are 'ipv6(2)' and 'unknown(0)'.")
pktcEUEDhcpv6ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerAddress.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDhcpv6ServerAddress.setDescription('This MIB Object contains the DHCPv6 Server address from which the eUE obtained its IPv6 address, if the eUE is in IPv6 mode, and can obtain the information.')
pktcEUEDnsv6ServerAddressType = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddressType.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddressType.setDescription("This MIB Object contains the DHCP Server Address type contained in the MIB Object 'pktcEUEDhcpv6ServerAddress'. Valid values are 'ipv6(2)' and 'unknown(0)'.")
pktcEUEDnsv6ServerAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 7), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddress1.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddress1.setDescription('This MIB Object contains the primary DNSv6 Server address which the eUE obtained via DHCPv6, when the eUE is in IPv6 mode.')
pktcEUEDnsv6ServerAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 1, 8), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddress2.setStatus('current')
if mibBuilder.loadTexts: pktcEUEDnsv6ServerAddress2.setDescription('This MIB Object contains the secondary DNSv6 Server address which the eUE obtained via DHCPv6, when the eUE is in IPv6 mode.')
pktcEUEProvMgmtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 2, 1))
pktcEUEProvMgmtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 2, 2))
pktcEUEProvMgmtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 2, 1, 1)).setObjects(("PKTC-IETF-MTA-MIB", "pktcMtaGroup"), ("PKTC-IETF-MTA-MIB", "pktcMtaNotificationGroup"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEProvMgmtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEProvMgmtCompliance = pktcEUEProvMgmtCompliance.setStatus('current')
if mibBuilder.loadTexts: pktcEUEProvMgmtCompliance.setDescription("The compliance statement for PacketCable eUE devices that implement the PacketCable eUE Provisioning Framework. This compliance statement specifies, for the PacketCable eUE Provisioning framework, the required objects from the 'Multimedia Terminal Adapter(MTA)Management Information Base for PacketCable and IPCablecom-Compliant Devices'(RFC 4682)MIB. Some objects from RFC4682 have been enhanced for applicability to eUEs. Similarly, inapplicable objects are clearly indicated. As indicated in the eUE Provisioning specification, references to E-MTA and eMTA in RFC4682 are to be understood to be applicable to E-UE and eUE, respectively. ")
if mibBuilder.loadTexts: pktcEUEProvMgmtCompliance.setReference('PacketCable E-UE Provisioning Framework Specification')
pktcEUEProvMgmtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 2, 10, 4, 2, 2, 1)).setObjects(("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEProvMgmtVersion"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDhcpv6ServerId1"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDhcpv6ServerId2"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDhcpv6ServerAddressType"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDhcpv6ServerAddress"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDnsv6ServerAddressType"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDnsv6ServerAddress1"), ("CL-PKTC-EUE-PROV-MGMT-MIB", "pktcEUEDnsv6ServerAddress2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pktcEUEProvMgmtGroup = pktcEUEProvMgmtGroup.setStatus('current')
if mibBuilder.loadTexts: pktcEUEProvMgmtGroup.setDescription('The eUE Operator Group.')
mibBuilder.exportSymbols("CL-PKTC-EUE-PROV-MGMT-MIB", pktcEUEProvMgmtNotifications=pktcEUEProvMgmtNotifications, pktcEUEDhcpv6ServerAddressType=pktcEUEDhcpv6ServerAddressType, pktcEUEProvMgmtCompliance=pktcEUEProvMgmtCompliance, pktcEUEProvMgmtCompliances=pktcEUEProvMgmtCompliances, pktcEUEDhcpv6ServerAddress=pktcEUEDhcpv6ServerAddress, pktcEUEDnsv6ServerAddressType=pktcEUEDnsv6ServerAddressType, pktcEUEProvMgmtGroup=pktcEUEProvMgmtGroup, pktcEUEDnsv6ServerAddress1=pktcEUEDnsv6ServerAddress1, pktcEUEProvMgmtGroups=pktcEUEProvMgmtGroups, pktcEUEProvMgmtObjects=pktcEUEProvMgmtObjects, pktcEUEProvMgmtVersion=pktcEUEProvMgmtVersion, pktcEUEDhcpv6ServerId1=pktcEUEDhcpv6ServerId1, PYSNMP_MODULE_ID=pktcEUEProvMgmtMIB, pktcEUEDhcpv6ServerId2=pktcEUEDhcpv6ServerId2, pktcEUEProvMgmtMIB=pktcEUEProvMgmtMIB, pktcEUEProvMgmtConformance=pktcEUEProvMgmtConformance, pktcEUEDnsv6ServerAddress2=pktcEUEDnsv6ServerAddress2)
