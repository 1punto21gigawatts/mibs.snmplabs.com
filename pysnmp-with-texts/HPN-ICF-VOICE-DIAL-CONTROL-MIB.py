#
# PySNMP MIB module HPN-ICF-VOICE-DIAL-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-VOICE-DIAL-CONTROL-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:41:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
AbsoluteCounter32, = mibBuilder.importSymbols("DIAL-CONTROL-MIB", "AbsoluteCounter32")
hpnicfVoice, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfVoice")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, IpAddress, Bits, Counter64, Unsigned32, NotificationType, Counter32, Integer32, MibIdentifier, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "IpAddress", "Bits", "Counter64", "Unsigned32", "NotificationType", "Counter32", "Integer32", "MibIdentifier", "iso")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
hpnicfVoiceEntityControl = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14))
hpnicfVoiceEntityControl.setRevisions(('2009-04-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hpnicfVoiceEntityControl.setRevisionsDescriptions(('The initial version of this MIB file.',))
if mibBuilder.loadTexts: hpnicfVoiceEntityControl.setLastUpdated('200904160000Z')
if mibBuilder.loadTexts: hpnicfVoiceEntityControl.setOrganization('')
if mibBuilder.loadTexts: hpnicfVoiceEntityControl.setContactInfo('')
if mibBuilder.loadTexts: hpnicfVoiceEntityControl.setDescription('This MIB file is to provide the definition of voice dial control configuration.')
class HpnicfCodecType(TextualConvention, Integer32):
    description = 'Type of Codec.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("g711a", 1), ("g711u", 2), ("g723r53", 3), ("g723r63", 4), ("g729r8", 5), ("g729a", 6), ("g726r16", 7), ("g726r24", 8), ("g726r32", 9), ("g726r40", 10), ("unknown", 11), ("g729br8", 12))

class HpnicfOutBandMode(TextualConvention, Integer32):
    description = 'Type of OutBandMode.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("voice", 1), ("h245AlphaNumeric", 2), ("h225", 3), ("sip", 4), ("nte", 5), ("vofr", 6))

class HpnicfFaxProtocolType(TextualConvention, Integer32):
    description = 'Type of FaxProtocol.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("t38", 1), ("standardt38", 2), ("pcmG711alaw", 3), ("pcmG711ulaw", 4))

class HpnicfFaxBaudrateType(TextualConvention, Integer32):
    description = 'Type of FaxBaudrate.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("disable", 1), ("voice", 2), ("b2400", 3), ("b4800", 4), ("b9600", 5), ("b14400", 6))

class HpnicfFaxTrainMode(TextualConvention, Integer32):
    description = 'Type of FaxTrainMode.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("local", 1), ("ppp", 2))

class HpnicfRegisterdStatus(TextualConvention, Integer32):
    description = 'Type of Registerd Status.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("offline", 2), ("online", 3), ("login", 4), ("logout", 5))

hpnicfVoEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1))
hpnicfVoEntityCreateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 1), )
if mibBuilder.loadTexts: hpnicfVoEntityCreateTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCreateTable.setDescription('The table contains the voice entity information that is used to create an ifIndexed row.')
hpnicfVoEntityCreateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-VOICE-DIAL-CONTROL-MIB", "hpnicfVoEntityIndex"))
if mibBuilder.loadTexts: hpnicfVoEntityCreateEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCreateEntry.setDescription('The entry of hpnicfVoEntityCreateTable.')
hpnicfVoEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfVoEntityIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityIndex.setDescription('An arbitrary index that uniquely identifies a voice entity.')
hpnicfVoEntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("pots", 1), ("voip", 2), ("vofr", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVoEntityType.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityType.setDescription('Specify the type of voice related encapsulation.')
hpnicfVoEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVoEntityRowStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityRowStatus.setDescription(' This object is used to create, delete or modify a row in this table. The hpnicfVoEntityType object should not be modified once the new row has been created.')
hpnicfVoEntityCommonConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2), )
if mibBuilder.loadTexts: hpnicfVoEntityCommonConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCommonConfigTable.setDescription('This table contains the general voice entity information.')
hpnicfVoEntityCommonConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-VOICE-DIAL-CONTROL-MIB", "hpnicfVoEntityCfgIndex"))
if mibBuilder.loadTexts: hpnicfVoEntityCommonConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCommonConfigEntry.setDescription('The entry of hpnicfVoEntityCommonConfigTable.')
hpnicfVoEntityCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfVoEntityCfgIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgIndex.setDescription('An arbitrary index that uniquely identifies a voice entity.')
hpnicfVoEntityCfgCodec1st = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 2), HpnicfCodecType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec1st.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec1st.setDescription('This object indicates the first desirable CODEC of speech of this dial entity.')
hpnicfVoEntityCfgCodec2nd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 3), HpnicfCodecType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec2nd.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec2nd.setDescription('This object indicates the second desirable CODEC of speech of this dial entity.')
hpnicfVoEntityCfgCodec3rd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 4), HpnicfCodecType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec3rd.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec3rd.setDescription('This object indicates the third desirable CODEC of speech of this dial entity.')
hpnicfVoEntityCfgCodec4th = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 5), HpnicfCodecType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec4th.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgCodec4th.setDescription('This object indicates the forth desirable CODEC of speech of this dial entity.')
hpnicfVoEntityCfgDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgDSCP.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgDSCP.setDescription('This object indicates the DSCP(Different Service Code Point) value of voice packets.')
hpnicfVoEntityCfgVADEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgVADEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgVADEnable.setDescription('This object indicates whether the VAD(Voice Activity Detection) is enabled.')
hpnicfVoEntityCfgOutbandMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 8), HpnicfOutBandMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgOutbandMode.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgOutbandMode.setDescription('This object indicates the DTMF(Dual Tone Multi-Frequency) outband type of this dial entity.')
hpnicfVoEntityCfgFaxLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-60, -3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLevel.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLevel.setDescription('This object indicates the fax level of this dial entity.')
hpnicfVoEntityCfgFaxBaudrate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 10), HpnicfFaxBaudrateType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxBaudrate.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxBaudrate.setDescription('This object indicates the fax baudrate of this dial entity.')
hpnicfVoEntityCfgFaxLocalTrainPara = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLocalTrainPara.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLocalTrainPara.setDescription('This object indicates the fax local train threshold of this dial entity.')
hpnicfVoEntityCfgFaxProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 12), HpnicfFaxProtocolType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxProtocol.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxProtocol.setDescription('This object indicates the fax protocol of this dial entity.')
hpnicfVoEntityCfgFaxHRPackNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxHRPackNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxHRPackNum.setDescription('This object indicates the high speed redundancy packet numbers of t38 and standard-t38.')
hpnicfVoEntityCfgFaxLRPackNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLRPackNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxLRPackNum.setDescription('This object indicates the low speed redundancy packet numbers of t38 and standard-t38.')
hpnicfVoEntityCfgFaxSendNSFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 15), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxSendNSFEnable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxSendNSFEnable.setDescription('This object indicates whether sends NSF(Non-Standard Faculty) to fax of this dial entity.')
hpnicfVoEntityCfgFaxTrainMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 16), HpnicfFaxTrainMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxTrainMode.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxTrainMode.setDescription('This object indicates the fax train mode of this dial entity.')
hpnicfVoEntityCfgFaxEcm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxEcm.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgFaxEcm.setDescription('This object indicates whether the ECM(Error Correct Mode) is enabled.')
hpnicfVoEntityCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgPriority.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgPriority.setDescription('This object indicates the priority of this dial entity.')
hpnicfVoEntityCfgDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 2, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityCfgDescription.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityCfgDescription.setDescription('This object indicates the textual description of this dial entity.')
hpnicfVoPOTSEntityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3), )
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigTable.setDescription('This table contains the POTS(Public Switched Telephone Network) entity information.')
hpnicfVoPOTSEntityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-VOICE-DIAL-CONTROL-MIB", "hpnicfVoPOTSEntityConfigIndex"))
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigEntry.setDescription('The entry of hpnicfVoPOTSEntityConfigTable.')
hpnicfVoPOTSEntityConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigIndex.setDescription('An arbitrary index that uniquely identifies a voice entity.')
hpnicfVoPOTSEntityConfigPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigPrefix.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigPrefix.setDescription('This object indicates the prefix which is added to the called number.')
hpnicfVoPOTSEntityConfigSubLine = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigSubLine.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigSubLine.setDescription('This object indicates the voice subscriber line of this dial entity.')
hpnicfVoPOTSEntityConfigSendNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 31), ValueRangeConstraint(65534, 65534), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigSendNum.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoPOTSEntityConfigSendNum.setDescription('This object indicates the digit of phone number to be sent to the destination. 0..31: Number of digits (that are extracted from the end of a number) to be sent, in the range of 0 to 31. It is not greater than the total number of digits of the called number. 65534: Sends all digits of a called number. 65535: Sends a truncated called number.')
hpnicfVoVoIPEntityConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4), )
if mibBuilder.loadTexts: hpnicfVoVoIPEntityConfigTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityConfigTable.setDescription('This table contains the VoIP entity information.')
hpnicfVoVoIPEntityConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-VOICE-DIAL-CONTROL-MIB", "hpnicfVoVoIPEntityCfgIndex"))
if mibBuilder.loadTexts: hpnicfVoVoIPEntityConfigEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityConfigEntry.setDescription('The entry of hpnicfVoVoIPEntityConfigTable.')
hpnicfVoVoIPEntityCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgIndex.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgIndex.setDescription('An arbitrary index that uniquely identifies a voice entity.')
hpnicfVoVoIPEntityCfgTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("ras", 2), ("h323IpAddress", 3), ("sipIpAddress", 4), ("sipProxy", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetType.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetType.setDescription('This object indicates the type of the session target of this entity.')
hpnicfVoVoIPEntityCfgTargetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetAddrType.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetAddrType.setDescription('The IP address type of object hpnicfVoVoIPEntityCfgTargetAddr.')
hpnicfVoVoIPEntityCfgTargetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 4, 1, 4), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetAddr.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoVoIPEntityCfgTargetAddr.setDescription('This object indicates the target IP address.')
hpnicfVoEntityNumberTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5), )
if mibBuilder.loadTexts: hpnicfVoEntityNumberTable.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberTable.setDescription('The table contains the number management information.')
hpnicfVoEntityNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1), ).setIndexNames((0, "HPN-ICF-VOICE-DIAL-CONTROL-MIB", "hpnicfVoEntityIndex"))
if mibBuilder.loadTexts: hpnicfVoEntityNumberEntry.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberEntry.setDescription('The entry of hpnicfVoEntityNumberTable. HpnicfVoEntityIndex is used to uniquely identify these numbers registered on the server. The same value of hpnicfVoEntityIndex used in the corresponding HPN-ICFVoEntityCommonConfigTable is used here.')
hpnicfVoEntityNumberAuthUser = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityNumberAuthUser.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberAuthUser.setDescription('This object indicates the username of the entity number to authorize.')
hpnicfVoEntityNumberPasswordType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityNumberPasswordType.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberPasswordType.setDescription('This object indicates the password type of the entity number to authorize. The encrypting type of password: 0 : password simple, means password is clean text. 1 : password cipher, means password is encrypted text. default is 65535.')
hpnicfVoEntityNumberPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 16), ValueSizeConstraint(24, 24), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVoEntityNumberPassword.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberPassword.setDescription('This object indicates the password of the entity number to authorize.')
hpnicfVoEntityNumberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1, 4), HpnicfRegisterdStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVoEntityNumberStatus.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberStatus.setDescription('This object indicates the current state of the entity number.')
hpnicfVoEntityNumberExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 39, 14, 1, 5, 1, 5), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVoEntityNumberExpires.setStatus('current')
if mibBuilder.loadTexts: hpnicfVoEntityNumberExpires.setDescription('This is the interval time for entity number updating registered message.')
mibBuilder.exportSymbols("HPN-ICF-VOICE-DIAL-CONTROL-MIB", hpnicfVoEntityNumberStatus=hpnicfVoEntityNumberStatus, hpnicfVoEntityCreateTable=hpnicfVoEntityCreateTable, hpnicfVoEntityCfgFaxProtocol=hpnicfVoEntityCfgFaxProtocol, hpnicfVoEntityNumberAuthUser=hpnicfVoEntityNumberAuthUser, hpnicfVoEntityCreateEntry=hpnicfVoEntityCreateEntry, hpnicfVoEntityCfgCodec3rd=hpnicfVoEntityCfgCodec3rd, hpnicfVoVoIPEntityCfgTargetType=hpnicfVoVoIPEntityCfgTargetType, hpnicfVoEntityCfgFaxTrainMode=hpnicfVoEntityCfgFaxTrainMode, hpnicfVoEntityNumberTable=hpnicfVoEntityNumberTable, hpnicfVoEntityNumberExpires=hpnicfVoEntityNumberExpires, hpnicfVoEntityCfgDescription=hpnicfVoEntityCfgDescription, hpnicfVoPOTSEntityConfigIndex=hpnicfVoPOTSEntityConfigIndex, hpnicfVoPOTSEntityConfigSubLine=hpnicfVoPOTSEntityConfigSubLine, HpnicfRegisterdStatus=HpnicfRegisterdStatus, hpnicfVoEntityCfgVADEnable=hpnicfVoEntityCfgVADEnable, hpnicfVoVoIPEntityCfgTargetAddr=hpnicfVoVoIPEntityCfgTargetAddr, hpnicfVoEntityCfgIndex=hpnicfVoEntityCfgIndex, hpnicfVoPOTSEntityConfigPrefix=hpnicfVoPOTSEntityConfigPrefix, hpnicfVoEntityCfgPriority=hpnicfVoEntityCfgPriority, hpnicfVoVoIPEntityConfigEntry=hpnicfVoVoIPEntityConfigEntry, hpnicfVoVoIPEntityCfgIndex=hpnicfVoVoIPEntityCfgIndex, hpnicfVoVoIPEntityConfigTable=hpnicfVoVoIPEntityConfigTable, hpnicfVoEntityCfgFaxEcm=hpnicfVoEntityCfgFaxEcm, hpnicfVoEntityCfgFaxHRPackNum=hpnicfVoEntityCfgFaxHRPackNum, PYSNMP_MODULE_ID=hpnicfVoiceEntityControl, hpnicfVoPOTSEntityConfigSendNum=hpnicfVoPOTSEntityConfigSendNum, HpnicfFaxBaudrateType=HpnicfFaxBaudrateType, HpnicfFaxTrainMode=HpnicfFaxTrainMode, hpnicfVoEntityRowStatus=hpnicfVoEntityRowStatus, hpnicfVoVoIPEntityCfgTargetAddrType=hpnicfVoVoIPEntityCfgTargetAddrType, hpnicfVoEntityCfgFaxSendNSFEnable=hpnicfVoEntityCfgFaxSendNSFEnable, HpnicfOutBandMode=HpnicfOutBandMode, hpnicfVoEntityCfgCodec1st=hpnicfVoEntityCfgCodec1st, hpnicfVoEntityCfgFaxLRPackNum=hpnicfVoEntityCfgFaxLRPackNum, hpnicfVoPOTSEntityConfigEntry=hpnicfVoPOTSEntityConfigEntry, hpnicfVoiceEntityControl=hpnicfVoiceEntityControl, hpnicfVoEntityIndex=hpnicfVoEntityIndex, hpnicfVoEntityCfgCodec4th=hpnicfVoEntityCfgCodec4th, hpnicfVoEntityCfgDSCP=hpnicfVoEntityCfgDSCP, hpnicfVoEntityCfgOutbandMode=hpnicfVoEntityCfgOutbandMode, hpnicfVoEntityCfgFaxLocalTrainPara=hpnicfVoEntityCfgFaxLocalTrainPara, hpnicfVoEntityNumberPassword=hpnicfVoEntityNumberPassword, hpnicfVoEntityNumberPasswordType=hpnicfVoEntityNumberPasswordType, hpnicfVoEntityCommonConfigEntry=hpnicfVoEntityCommonConfigEntry, HpnicfFaxProtocolType=HpnicfFaxProtocolType, hpnicfVoEntityNumberEntry=hpnicfVoEntityNumberEntry, hpnicfVoEntityCfgFaxLevel=hpnicfVoEntityCfgFaxLevel, hpnicfVoEntityCfgFaxBaudrate=hpnicfVoEntityCfgFaxBaudrate, hpnicfVoPOTSEntityConfigTable=hpnicfVoPOTSEntityConfigTable, hpnicfVoEntityCfgCodec2nd=hpnicfVoEntityCfgCodec2nd, hpnicfVoEntityObjects=hpnicfVoEntityObjects, hpnicfVoEntityType=hpnicfVoEntityType, hpnicfVoEntityCommonConfigTable=hpnicfVoEntityCommonConfigTable, HpnicfCodecType=HpnicfCodecType)
