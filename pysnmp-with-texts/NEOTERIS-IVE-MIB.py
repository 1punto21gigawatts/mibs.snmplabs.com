#
# PySNMP MIB module NEOTERIS-IVE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NEOTERIS-IVE-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:18:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Unsigned32, MibIdentifier, ObjectIdentity, TimeTicks, NotificationType, iso, Bits, Integer32, Gauge32, Counter64, Counter32, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Unsigned32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "NotificationType", "iso", "Bits", "Integer32", "Gauge32", "Counter64", "Counter32", "IpAddress", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
neoteris = ModuleIdentity((1, 3, 6, 1, 4, 1, 12532))
neoteris.setRevisions(('2002-03-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: neoteris.setRevisionsDescriptions(('Initial Version',))
if mibBuilder.loadTexts: neoteris.setLastUpdated('200203250000Z')
if mibBuilder.loadTexts: neoteris.setOrganization('Juniper')
if mibBuilder.loadTexts: neoteris.setContactInfo('Internet: https://www.juniper.net/cm/index.jsp')
if mibBuilder.loadTexts: neoteris.setDescription('This file defines the private Juniper Networks MIB extensions.')
logFullPercent = MibScalar((1, 3, 6, 1, 4, 1, 12532, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFullPercent.setStatus('current')
if mibBuilder.loadTexts: logFullPercent.setDescription('Percentage of log file full')
signedInWebUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInWebUsers.setStatus('current')
if mibBuilder.loadTexts: signedInWebUsers.setDescription('Number of Signed-In Web Users')
signedInMailUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: signedInMailUsers.setStatus('current')
if mibBuilder.loadTexts: signedInMailUsers.setDescription('Number of Signed-In Mail Users')
blockedIP = MibScalar((1, 3, 6, 1, 4, 1, 12532, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: blockedIP.setStatus('current')
if mibBuilder.loadTexts: blockedIP.setDescription('IP Address that is blocked due to consecutive failed login attempts')
authServerName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: authServerName.setStatus('current')
if mibBuilder.loadTexts: authServerName.setDescription('Name of an external authentication server')
productName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productName.setStatus('current')
if mibBuilder.loadTexts: productName.setDescription('IVE Licensed Product Name')
productVersion = MibScalar((1, 3, 6, 1, 4, 1, 12532, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: productVersion.setStatus('current')
if mibBuilder.loadTexts: productVersion.setDescription('IVE System Software Version')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 12532, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fileName.setStatus('current')
if mibBuilder.loadTexts: fileName.setDescription('File name')
meetingUserCount = MibScalar((1, 3, 6, 1, 4, 1, 12532, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: meetingUserCount.setStatus('current')
if mibBuilder.loadTexts: meetingUserCount.setDescription('the number of concurrent meeting users')
iveCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveCpuUtil.setStatus('current')
if mibBuilder.loadTexts: iveCpuUtil.setDescription('The CPU Utilization of the IVE system')
iveMemoryUtil = MibScalar((1, 3, 6, 1, 4, 1, 12532, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveMemoryUtil.setStatus('current')
if mibBuilder.loadTexts: iveMemoryUtil.setDescription('The Memory Utilization of the IVE system')
iveConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveConcurrentUsers.setStatus('current')
if mibBuilder.loadTexts: iveConcurrentUsers.setDescription('The Total number of Users Logged In for the IVE Node')
clusterConcurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 12532, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clusterConcurrentUsers.setStatus('current')
if mibBuilder.loadTexts: clusterConcurrentUsers.setDescription('The Total number of Users Logged In for the Cluster')
iveTotalHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveTotalHits.setStatus('current')
if mibBuilder.loadTexts: iveTotalHits.setDescription('The Total number of hits to the IVE since last reboot')
iveFileHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveFileHits.setStatus('current')
if mibBuilder.loadTexts: iveFileHits.setDescription('The Total number of File hits to the IVE since last reboot')
iveWebHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveWebHits.setStatus('current')
if mibBuilder.loadTexts: iveWebHits.setDescription('The Total number of hits via the Web Interface since the last reboot')
iveAppletHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveAppletHits.setStatus('current')
if mibBuilder.loadTexts: iveAppletHits.setDescription('The Total number of applet hits to the IVE since last reboot')
ivetermHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ivetermHits.setStatus('current')
if mibBuilder.loadTexts: ivetermHits.setDescription('The Total number of terminal hits to the IVE since last reboot')
iveSAMHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveSAMHits.setStatus('current')
if mibBuilder.loadTexts: iveSAMHits.setDescription('The Total number of SAM(Secure Application manager)hits of since last reboot')
iveNCHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iveNCHits.setStatus('current')
if mibBuilder.loadTexts: iveNCHits.setDescription('The Total number of NC(Network Connect) hits of since last reboot')
meetingHits = MibScalar((1, 3, 6, 1, 4, 1, 12532, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: meetingHits.setStatus('current')
if mibBuilder.loadTexts: meetingHits.setDescription('The Total number of Meeting hits of since last reboot')
iveTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 12532, 251))
iveLogNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 4)).setObjects(("NEOTERIS-IVE-MIB", "logFullPercent"))
if mibBuilder.loadTexts: iveLogNearlyFull.setStatus('current')
if mibBuilder.loadTexts: iveLogNearlyFull.setDescription('Log file nearly full')
iveLogFull = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 5))
if mibBuilder.loadTexts: iveLogFull.setStatus('current')
if mibBuilder.loadTexts: iveLogFull.setDescription('Log file full')
iveMaxConcurrentUsersSignedIn = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 6))
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setStatus('current')
if mibBuilder.loadTexts: iveMaxConcurrentUsersSignedIn.setDescription('Maximum number of concurrent users signed in')
iveTooManyFailedLoginAttempts = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 7)).setObjects(("NEOTERIS-IVE-MIB", "blockedIP"))
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setStatus('current')
if mibBuilder.loadTexts: iveTooManyFailedLoginAttempts.setDescription('Too many failed login attempts')
externalAuthServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 8)).setObjects(("NEOTERIS-IVE-MIB", "authServerName"))
if mibBuilder.loadTexts: externalAuthServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: externalAuthServerUnreachable.setDescription('External authentication server is not responding')
iveStart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 9))
if mibBuilder.loadTexts: iveStart.setStatus('current')
if mibBuilder.loadTexts: iveStart.setDescription('IVE startup')
iveShutdown = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 10))
if mibBuilder.loadTexts: iveShutdown.setStatus('current')
if mibBuilder.loadTexts: iveShutdown.setDescription('IVE shutdown')
iveReboot = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 11))
if mibBuilder.loadTexts: iveReboot.setStatus('current')
if mibBuilder.loadTexts: iveReboot.setDescription('IVE reboot')
archiveServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 12))
if mibBuilder.loadTexts: archiveServerUnreachable.setStatus('current')
if mibBuilder.loadTexts: archiveServerUnreachable.setDescription('Archive server is not responding')
archiveServerLoginFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 13))
if mibBuilder.loadTexts: archiveServerLoginFailed.setStatus('current')
if mibBuilder.loadTexts: archiveServerLoginFailed.setDescription('Could not login into archive server. Verify FTP username and password.')
archiveFileTransferFailed = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 14)).setObjects(("NEOTERIS-IVE-MIB", "fileName"))
if mibBuilder.loadTexts: archiveFileTransferFailed.setStatus('current')
if mibBuilder.loadTexts: archiveFileTransferFailed.setDescription('Could not store file on archive server')
meetingUserLimit = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 15)).setObjects(("NEOTERIS-IVE-MIB", "meetingUserCount"))
if mibBuilder.loadTexts: meetingUserLimit.setStatus('current')
if mibBuilder.loadTexts: meetingUserLimit.setDescription('Concurrent user count over license limit')
iveRestart = NotificationType((1, 3, 6, 1, 4, 1, 12532, 251, 16))
if mibBuilder.loadTexts: iveRestart.setStatus('current')
if mibBuilder.loadTexts: iveRestart.setDescription("IVE has restarted under administrator's instruction.")
mibBuilder.exportSymbols("NEOTERIS-IVE-MIB", archiveServerUnreachable=archiveServerUnreachable, iveWebHits=iveWebHits, fileName=fileName, iveSAMHits=iveSAMHits, productName=productName, meetingUserCount=meetingUserCount, iveMemoryUtil=iveMemoryUtil, PYSNMP_MODULE_ID=neoteris, iveTooManyFailedLoginAttempts=iveTooManyFailedLoginAttempts, iveRestart=iveRestart, authServerName=authServerName, archiveServerLoginFailed=archiveServerLoginFailed, blockedIP=blockedIP, iveLogNearlyFull=iveLogNearlyFull, iveStart=iveStart, externalAuthServerUnreachable=externalAuthServerUnreachable, iveCpuUtil=iveCpuUtil, iveAppletHits=iveAppletHits, meetingUserLimit=meetingUserLimit, ivetermHits=ivetermHits, iveShutdown=iveShutdown, logFullPercent=logFullPercent, meetingHits=meetingHits, archiveFileTransferFailed=archiveFileTransferFailed, iveFileHits=iveFileHits, iveReboot=iveReboot, iveLogFull=iveLogFull, signedInMailUsers=signedInMailUsers, productVersion=productVersion, iveTraps=iveTraps, signedInWebUsers=signedInWebUsers, iveNCHits=iveNCHits, iveConcurrentUsers=iveConcurrentUsers, iveMaxConcurrentUsersSignedIn=iveMaxConcurrentUsersSignedIn, neoteris=neoteris, iveTotalHits=iveTotalHits, clusterConcurrentUsers=clusterConcurrentUsers)
