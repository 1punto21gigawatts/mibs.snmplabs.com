#
# PySNMP MIB module SYNSO-ENMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SYNSO-ENMIB
# Produced by pysmi-0.3.4 at Wed May  1 15:14:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Bits, Gauge32, Unsigned32, Integer32, TimeTicks, Counter64, ObjectIdentity, IpAddress, Counter32, ModuleIdentity, NotificationType, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Bits", "Gauge32", "Unsigned32", "Integer32", "TimeTicks", "Counter64", "ObjectIdentity", "IpAddress", "Counter32", "ModuleIdentity", "NotificationType", "iso", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
synso = MibIdentifier((1, 3, 6, 1, 4, 1, 9557))
synsoMeasure = MibIdentifier((1, 3, 6, 1, 4, 1, 9557, 2))
syupsEnvironTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 9557, 2, 1))
syupsEnvironTemperatureNumber = MibScalar((1, 3, 6, 1, 4, 1, 9557, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironTemperatureNumber.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureNumber.setDescription('The number of temperature sensor.')
syupsEnvironTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2), )
if mibBuilder.loadTexts: syupsEnvironTemperatureTable.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureTable.setDescription('A table containing the supported temperature entry.')
syupsEnvironTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1), ).setIndexNames((0, "SYNSO-ENMIB", "syupsEnvironTemperatureIndex"))
if mibBuilder.loadTexts: syupsEnvironTemperatureEntry.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureEntry.setDescription('An entry representing the information for a temperature port.')
syupsEnvironTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironTemperatureIndex.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureIndex.setDescription('An index identifying the temperature sensor.')
syupsEnvironTemperatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironTemperatureDescription.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureDescription.setDescription('The string containing the description for the temperature sensor.')
syupsEnvironTemperatureLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironTemperatureLow.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureLow.setDescription('The low temperature to indicate abnormal status.')
syupsEnvironTemperatureHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironTemperatureHigh.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureHigh.setDescription('The high temperature to indicate abnormal status.')
syupsEnvironTemperatureCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironTemperatureCurrent.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironTemperatureCurrent.setDescription('The current temperature from the temperature sensor.')
syupsEnvironHumidity = MibIdentifier((1, 3, 6, 1, 4, 1, 9557, 2, 2))
syupsEnvironHumidityNumber = MibScalar((1, 3, 6, 1, 4, 1, 9557, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironHumidityNumber.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityNumber.setDescription('The number of Humidity sensor.')
syupsEnvironHumidityTable = MibTable((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2), )
if mibBuilder.loadTexts: syupsEnvironHumidityTable.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityTable.setDescription('A table containing the supported Humidity entry.')
syupsEnvironHumidityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1), ).setIndexNames((0, "SYNSO-ENMIB", "syupsEnvironHumidityIndex"))
if mibBuilder.loadTexts: syupsEnvironHumidityEntry.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityEntry.setDescription('An entry representing the information for a Humidity port.')
syupsEnvironHumidityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironHumidityIndex.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityIndex.setDescription('An index identifying the Humidity sensor.')
syupsEnvironHumidityDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironHumidityDescription.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityDescription.setDescription('The string containing the description for the Humidity sensor.')
syupsEnvironHumidityLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironHumidityLow.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityLow.setDescription('The low humidity to indicate abnormal status.')
syupsEnvironHumidityHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsEnvironHumidityHigh.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityHigh.setDescription('The high Humidity to indicate abnormal status.')
syupsEnvironHumidityCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsEnvironHumidityCurrent.setStatus('mandatory')
if mibBuilder.loadTexts: syupsEnvironHumidityCurrent.setDescription('The current humidity from the humidity sensor.')
syupsContact = MibIdentifier((1, 3, 6, 1, 4, 1, 9557, 2, 3))
syupsContactNumber = MibScalar((1, 3, 6, 1, 4, 1, 9557, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsContactNumber.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactNumber.setDescription('The number of contacts supported by the measure unit.')
syupsContactTable = MibTable((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2), )
if mibBuilder.loadTexts: syupsContactTable.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactTable.setDescription('A table containing the supported contacts.')
syupsContactEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1), ).setIndexNames((0, "SYNSO-ENMIB", "syupsContactIndex"))
if mibBuilder.loadTexts: syupsContactEntry.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactEntry.setDescription('An entry representing the information for a contact.')
syupsContactIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsContactIndex.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactIndex.setDescription('An index identifying the contact.')
syupsContactDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsContactDescription.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactDescription.setDescription('The string containing the description for the contact.')
syupsContactNormalState = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("closed", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsContactNormalState.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactNormalState.setDescription('The normal operating position of the contact.')
syupsContactMonitoringStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syupsContactMonitoringStatus.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactMonitoringStatus.setDescription('A flag indicating whether this contact is monitored, or not.')
syupsContactCurrentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9557, 2, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("noFault", 2), ("fault", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syupsContactCurrentStatus.setStatus('mandatory')
if mibBuilder.loadTexts: syupsContactCurrentStatus.setDescription('This value indicates the current state of the contact. If the contact is not in its normal state. This value is set to fault(2).')
mibBuilder.exportSymbols("SYNSO-ENMIB", syupsContactNumber=syupsContactNumber, syupsEnvironHumidityIndex=syupsEnvironHumidityIndex, syupsEnvironTemperatureCurrent=syupsEnvironTemperatureCurrent, syupsEnvironTemperatureNumber=syupsEnvironTemperatureNumber, syupsContactCurrentStatus=syupsContactCurrentStatus, syupsContactIndex=syupsContactIndex, syupsEnvironHumidityTable=syupsEnvironHumidityTable, syupsContactMonitoringStatus=syupsContactMonitoringStatus, syupsContact=syupsContact, syupsEnvironHumidityHigh=syupsEnvironHumidityHigh, syupsEnvironHumidity=syupsEnvironHumidity, syupsEnvironTemperatureIndex=syupsEnvironTemperatureIndex, syupsContactNormalState=syupsContactNormalState, syupsEnvironTemperature=syupsEnvironTemperature, syupsContactTable=syupsContactTable, syupsEnvironTemperatureLow=syupsEnvironTemperatureLow, synso=synso, syupsEnvironHumidityEntry=syupsEnvironHumidityEntry, synsoMeasure=synsoMeasure, syupsEnvironTemperatureDescription=syupsEnvironTemperatureDescription, syupsEnvironTemperatureHigh=syupsEnvironTemperatureHigh, syupsEnvironHumidityLow=syupsEnvironHumidityLow, syupsEnvironHumidityDescription=syupsEnvironHumidityDescription, syupsContactEntry=syupsContactEntry, syupsEnvironTemperatureTable=syupsEnvironTemperatureTable, syupsEnvironHumidityCurrent=syupsEnvironHumidityCurrent, syupsContactDescription=syupsContactDescription, syupsEnvironHumidityNumber=syupsEnvironHumidityNumber, syupsEnvironTemperatureEntry=syupsEnvironTemperatureEntry)
