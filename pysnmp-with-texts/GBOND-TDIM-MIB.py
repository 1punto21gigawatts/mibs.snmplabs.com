#
# PySNMP MIB module GBOND-TDIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBOND-TDIM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:18:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
gBondMIB, = mibBuilder.importSymbols("GBOND-MIB", "gBondMIB")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, ObjectIdentity, Integer32, TimeTicks, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Gauge32, ModuleIdentity, MibIdentifier, Bits, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ObjectIdentity", "Integer32", "TimeTicks", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Gauge32", "ModuleIdentity", "MibIdentifier", "Bits", "iso")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
gBondTdimMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 211, 3))
gBondTdimMIB.setRevisions(('2007-04-29 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: gBondTdimMIB.setRevisionsDescriptions(('Initial version, published as RFC XXXX.',))
if mibBuilder.loadTexts: gBondTdimMIB.setLastUpdated('200704290000Z')
if mibBuilder.loadTexts: gBondTdimMIB.setOrganization('IETF ADSL MIB Working Group')
if mibBuilder.loadTexts: gBondTdimMIB.setContactInfo('WG charter: http://www.ietf.org/html.charters/adslmib-charter.html Mailing Lists: General Discussion: adslmib@ietf.org To Subscribe: adslmib-request@ietf.org In Body: subscribe your_email_address Chair: Menachem Dodge Postal: ECI Telecom, Ltd. 30 Hasivim St., Petach-Tikva 49517 Israel Phone: +972-3-926-8421 EMail: menachem.dodge@ecitele.com Editor: Edward Beili Postal: Actelis Networks, Inc. 25 Bazel St., P.O.B. 10173 Petach-Tikva 10173 Israel Phone: +972-3-924-3491 EMail: edward.beili@actelis.com Editor: Narendranath Nair Postal: Wipro Technologies Keonics Electronics City Bangalore 560 100 India Phone: +91-80-2852-0408 x85338 EMail: narendranath.nair@wipro.com')
if mibBuilder.loadTexts: gBondTdimMIB.setDescription("The objects in this MIB module are used to manage the multi-pair bonded xDSL Interfaces using time-division inverse multiplexing (TDIM), defined in ITU-T recommendation G.998.3 (G.Bond/TDIM). This MIB module MUST be used in conjunction with GBOND-MIB module, common to all G.Bond technologies. The following references are used throughout this MIB module: [G.998.3] refers to: ITU-T Recommendation G.998.1: 'Multi-pair bonding using time-division inverse multiplexing', January 2005. [WT-159] refers to: DSL Forum Technical Report: 'Management Framework for xDSL Bonding', January 2007. Naming Conventions: BCE - Bonding Channel Entity CO - Central Office CPE - Customer Premises Equipment GBS - Generic Bonding Sublayer SNR - Signal to Noise Ratio Copyright (C) The Internet Society (2007). This version of this MIB module is part of RFC XXXX; see the RFC itself for full legal notices.")
gBondTdimObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 1))
gBondTdimConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 2))
gBondTdimPort = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 1, 1))
class GBondTdimServiceIndex(TextualConvention, Unsigned32):
    description = "A unique value, greater than zero, for each Service defined in the managed G.Bond TDIM port, showing its relative position inside the G.Bond/TDIM frame. It is RECOMMENDED that values are assigned contiguously starting from 1. The value for each Service MUST remain constant at least from one re-initialization of the entity's network management system to the next re-initialization."
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 60)

gBondTdimPortNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 0))
gBondTdimServiceUp = NotificationType((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 0, 1)).setObjects(("GBOND-TDIM-MIB", "gBondTdimServiceIfIdx"), ("GBOND-TDIM-MIB", "gBondTdimServiceOperState"))
if mibBuilder.loadTexts: gBondTdimServiceUp.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceUp.setDescription("This notification indicates that a service indicated by the gBondTdimServiceIfIdx in a particular G.Bond TDIM port' is passing traffic. This notification MAY be send for the G.Bond TDIM port, while the port is Up, when the gBondTdimServiceOperState object has left the Down state. Generation of this notification is controlled by the gBondTdimServiceUpDownEnable object.")
gBondTdimServiceDown = NotificationType((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 0, 2)).setObjects(("GBOND-TDIM-MIB", "gBondTdimServiceIfIdx"), ("GBOND-TDIM-MIB", "gBondTdimServiceOperState"))
if mibBuilder.loadTexts: gBondTdimServiceDown.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceDown.setDescription("This notification indicates that a service indicated by the gBondTdimServiceIfIdx in a particular G.Bond TDIM port' has stopped passing the traffic. This notification MAY be send for the G.Bond TDIM port, while the port is Up, when the gBondTdimServiceOperState object has entered the Down state. Generation of this notification is controlled by the gBondTdimServiceUpDownEnable object.")
gBondTdimPortConfTable = MibTable((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1), )
if mibBuilder.loadTexts: gBondTdimPortConfTable.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortConfTable.setDescription('Table for Configuration of G.Bond TDIM ports. Entries in this table MUST be maintained in a persistent manner')
gBondTdimPortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondTdimPortConfEntry.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortConfEntry.setDescription('An entry in the G.Bond TDIM Port Configuration table. Each entry represents an G.Bond TDIM port indexed by the ifIndex. Additional conifguration parameters are available via the gBondPortConfEntry of GBOND-MIB. Note that an G.Bond TDIM port runs on top of a single or multiple BCE port(s), which are also indexed by ifIndex.')
gBondTdimFecAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimFecAdminState.setReference('[G.998.3] Appendix II, B-X')
if mibBuilder.loadTexts: gBondTdimFecAdminState.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecAdminState.setDescription("A desired state of the OPTIONAL Forward Error Correction (FEC) function of the G.Bond TDIM port. A value of 'false' indicates that the FEC function is disabled. A value of 'true' indicates that the FEC SHALL be enabled, if supported by the G.Bond TDIM port, as indicated by the gBondTdimFecSupported object. For the GBS-R ports, the value of this object cannot be changed directly. This value may be changed as a result of writing operation on the gBondTdimFecSupported object of a remote GBS-C. Modifications of this object MUST be performed when the link is Down. Attempts to change this object MUST be rejected (in case of SNMP with the error inconsistentValue), if the link is Up or Initializing or if it is an GBS-R. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aFECAdminState")
gBondTdimFecWordSize = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimFecWordSize.setReference('[G.998.3] Appendix II, B-XI')
if mibBuilder.loadTexts: gBondTdimFecWordSize.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecWordSize.setDescription('A FEC code word size in octets for the G.Bond TDIM ports supporting FEC function. This object is read-write for the GBS-C ports and read-only for the GBS-R. A value of zero SHALL be returned if the FEC is disabled (via gBondTdimFecAdminState) or not supported. Changing of the FEC code word size MUST be performed when the FEC enabled link is Down. Attempts to change this object MUST be rejected (In case of SNMP with the error inconsistentValue), if the link is Up or Initializing or the FEC function is disabled/not supported. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aFECWordSize')
gBondTdimFecRedundancySize = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimFecRedundancySize.setReference('[G.998.3] Appendix II, B-XII')
if mibBuilder.loadTexts: gBondTdimFecRedundancySize.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecRedundancySize.setDescription('A FEC redundancy word size in octets for the G.Bond TDIM ports supporting FEC function. This object is read-write for the GBS-C ports and read-only for the GBS-R. A value of zero SHALL be returned if the FEC is disabled (via gBondTdimFecAdminState) or not supported. Changing of the FEC redundancy word size MUST be performed when the FEC enabled link is Down. Attempts to change this object MUST be rejected (In case of SNMP with the error inconsistentValue), if the link is Up or Initializing or the FEC function is disabled/not supported. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aFECRedundancySize')
gBondTdimFecInterleaverType = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("block", 1), ("convolution", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimFecInterleaverType.setReference('[G.998.3] Appendix II, B-XIII')
if mibBuilder.loadTexts: gBondTdimFecInterleaverType.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecInterleaverType.setDescription('An Interleaver type for the G.Bond TDIM ports supporting FEC function. This object is read-write for the GBS-C ports and read-only for the GBS-R. A value of none(0) SHALL be returned if the FEC is disabled (via gBondTdimFecAdminState) or not supported. Changing of the Interleaver type MUST be performed when the FEC enabled link is Down. Attempts to change this object MUST be rejected (In case of SNMP with the error inconsistentValue), if the link is Up or Initializing or the FEC function is disabled/not supported. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aFECInterleaverType')
gBondTdimFecInterleaverDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(24, 24), ValueRangeConstraint(32, 32), ValueRangeConstraint(48, 48), ValueRangeConstraint(96, 96), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimFecInterleaverDepth.setReference('[G.998.3] Appendix II, B-XIV')
if mibBuilder.loadTexts: gBondTdimFecInterleaverDepth.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecInterleaverDepth.setDescription('An Interleaver Depth for the G.Bond TDIM ports supporting FEC function. This object is read-write for the GBS-C ports and read-only for the GBS-R. A value of zero SHALL be returned if the FEC is disabled (via gBondTdimFecAdminState) or not supported. Changing of the Interleaver Depth MUST be performed when the FEC enabled link is Down. Attempts to change this object MUST be rejected (In case of SNMP with the error inconsistentValue), if the link is Up or Initializing or the FEC function is disabled/not supported. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aFECInterleaverDepth')
gBondTdimServiceUpDownEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimServiceUpDownEnable.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceUpDownEnable.setDescription('Indicates whether gBondTdimServiceUp and gBondTdimServiceDown notifications should be generated for this interface. Value of true(1) indicates that the notifications are enabled. Value of false(2) indicates that the notifications are disabled. This object MUST be maintained in a persistent manner.')
gBondTdimPortCapabilityTable = MibTable((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2), )
if mibBuilder.loadTexts: gBondTdimPortCapabilityTable.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortCapabilityTable.setDescription('Table for Capabilities of G.Bond TDIM ports. Entries in this table MUST be maintained in a persistent manner')
gBondTdimPortCapabilityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondTdimPortCapabilityEntry.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortCapabilityEntry.setDescription('An entry in the G.Bond TDIM port Capability table. Each entry represents an G.Bond TDIM port indexed by the ifIndex. Additional capabilities are available via the gBondPortCapabilityEntry of GBOND-MIB. Note that a G.Bond TDIM port runs on top of a single or multiple BCE port(s), which are also indexed by ifIndex.')
gBondTdimFecSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFecSupported.setReference('[G.998.3] Appendix II, B-VI')
if mibBuilder.loadTexts: gBondTdimFecSupported.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecSupported.setDescription('FEC and Interleaver Capability of the G.Bond/TDIM port. This object has a value of true(1) when the port supports the FEC and Interleaver function. A value of false(2) is returned when the port does not support the FEC and Interleaver function. This object maps to the G.998.3 attribute aFECSupported.')
gBondTdimFecMaxWordSize = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFecMaxWordSize.setReference('[G.998.3] Appendix II, B-XI')
if mibBuilder.loadTexts: gBondTdimFecMaxWordSize.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecMaxWordSize.setDescription('A Maximum supported FEC code word size in octets for the G.Bond TDIM ports with FEC function. A value of zero SHALL be returned if the FEC is not supported. This object partially maps to G.998.3 attribute aFECWordSize')
gBondTdimFecMaxRedundancySize = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(20, 20), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFecMaxRedundancySize.setReference('[G.998.3] Appendix II, B-XII')
if mibBuilder.loadTexts: gBondTdimFecMaxRedundancySize.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecMaxRedundancySize.setDescription('A Maximum supported FEC redundancy word size in octets for the G.Bond TDIM ports with FEC function. A value of zero SHALL be returned if the FEC is not supported. This object partially maps to G.998.3 attribute aFECRedundancySize')
gBondTdimFecInterleaverTypeSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("block", 1), ("convolution", 2), ("blockConvolution", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFecInterleaverTypeSupported.setReference('[G.998.3] Appendix II, B-XIII')
if mibBuilder.loadTexts: gBondTdimFecInterleaverTypeSupported.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecInterleaverTypeSupported.setDescription('Suported Interleaver types for the G.Bond TDIM ports with FEC function. Possible values are: none - the port does not support interleaving block - the port supports Block Interleaver convolution - the port supports Convolution Interleaver blockConvolution - the port supports both Block and Convolution Interleaver This object partially maps to G.998.3 attribute aFECInterleaverType')
gBondTdimFecMaxInterleaverDepth = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(6, 6), ValueRangeConstraint(8, 8), ValueRangeConstraint(12, 12), ValueRangeConstraint(16, 16), ValueRangeConstraint(24, 24), ValueRangeConstraint(32, 32), ValueRangeConstraint(48, 48), ValueRangeConstraint(96, 96), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFecMaxInterleaverDepth.setReference('[G.998.3] Appendix II, B-XIV')
if mibBuilder.loadTexts: gBondTdimFecMaxInterleaverDepth.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecMaxInterleaverDepth.setDescription('A Maximum Interleaver Depth for the G.Bond TDIM ports with FEC function. A value of zero SHALL be returned if the Interleaver is not supported. This object partially maps to G.998.3 attribute aFECInterleaverDepth')
gBondTdimPortStatusTable = MibTable((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3), )
if mibBuilder.loadTexts: gBondTdimPortStatusTable.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortStatusTable.setDescription('This table provides overall status information of G.Bond TDIM ports, complementing the generic status information from the ifTable of IF-MIB and gBondFltStatus of GBOND-MIB. Additional status information about connected BCEs is available from the relevant line MIBs This table contains live data from the equibcent. As such, it is NOT persistent.')
gBondTdimPortStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondTdimPortStatusEntry.setStatus('current')
if mibBuilder.loadTexts: gBondTdimPortStatusEntry.setDescription('An entry in the G.Bond TDIM port Status table. Each entry represents a G.Bond TDIM port indexed by the ifIndex. Note that an G.Bond GBS port runs on top of a single or multiple BCE port(s), which are also indexed by ifIndex.')
gBondTdimCrc4Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimCrc4Errors.setReference('[G.998.3] Appendix II, B-VII')
if mibBuilder.loadTexts: gBondTdimCrc4Errors.setStatus('current')
if mibBuilder.loadTexts: gBondTdimCrc4Errors.setDescription('The total number of CRC-4 errors (frame header error) on all pairs in the G.Bond TDIM port. Simultaneous errors on M lines SHOULD be counted M times. This object maps to G.998.3 attribute aCRC4Errors. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime, defined in IF-MIB.')
gBondTdimCrc6Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimCrc6Errors.setReference('[G.998.3] Appendix II, B-VIII')
if mibBuilder.loadTexts: gBondTdimCrc6Errors.setStatus('current')
if mibBuilder.loadTexts: gBondTdimCrc6Errors.setDescription('The total number of CRC-6 errors (super-frame error) on all pairs in the G.Bond TDIM port. Simultaneous errors on M lines SHOULD be counted 1 time. This object maps to G.998.3 attribute aCRC6Errors. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime, defined in IF-MIB.')
gBondTdimCrc8Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimCrc8Errors.setReference('[G.998.3] Appendix II, B-IX')
if mibBuilder.loadTexts: gBondTdimCrc8Errors.setStatus('current')
if mibBuilder.loadTexts: gBondTdimCrc8Errors.setDescription('The total number of CRC-8 errors (event/message error) on all pairs in the G.Bond TDIM port. Simultaneous errors on M lines SHOULD be counted M times. This object maps to G.998.3 attribute aCRC8Errors. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime, defined in IF-MIB.')
gBondTdimFltStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 3, 1, 4), Bits().clone(namedValues=NamedValues(("serviceDown", 0), ("wrongConfig", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimFltStatus.setReference('G.998.3 Section 6.3; IF-MIB, ifOperStatus; GBOND-MIB, gBondFltStatus')
if mibBuilder.loadTexts: gBondTdimFltStatus.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFltStatus.setDescription('G.Bond TDIM port Fault Status. This is a bitmap of possible conditions. The various bit positions are: serviceDown - at least one of the services defined for this aggregation group is down (due to low rate). wrongConfig - at least one BCE at the remote GBS-R is already connected to another GBS. This object is intended to supplement ifOperStatus object in IF-MIB and gBondFltStatus in GBOND-MIB.')
gBondTdimServiceTable = MibTable((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4), )
if mibBuilder.loadTexts: gBondTdimServiceTable.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceTable.setDescription('Table of Services in G.Bond TDIM ports. Entries in this table MUST be maintained in a persistent manner')
gBondTdimServiceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1), ).setIndexNames((0, "GBOND-TDIM-MIB", "gBondTdimServiceIdx"))
if mibBuilder.loadTexts: gBondTdimServiceEntry.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceEntry.setDescription('An entry in the G.Bond TDIM Port Service table, containing the management information applicable to a particular Service in a G.Bond TDIM port, indexed by the gBondTdimServiceIdx.')
gBondTdimServiceIdx = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1, 1), GBondTdimServiceIndex())
if mibBuilder.loadTexts: gBondTdimServiceIdx.setReference('[G.998.3] Appendix II, C-I')
if mibBuilder.loadTexts: gBondTdimServiceIdx.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceIdx.setDescription('G.Bond TDIM Service index - a unique index associated with a particular service entry, indicating relative placement of the service inside the G.Bond/TDIM frame. There can be up to 60 services defined over TDIM bonded facility. Services with lower indices have higher priority in case of bandwidth degradation. This objects maps to G.998.3 attribute aServiceID.')
gBondTdimServiceIfIdx = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimServiceIfIdx.setReference('[WT-159] ZZZ')
if mibBuilder.loadTexts: gBondTdimServiceIfIdx.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceIfIdx.setDescription('This is a unique index within the ifTable. It represents the interface index of a service to be transmitted over the G.Bond/TDIM service instance. This objects maps to WT-159 attribute aServiceIfIndex.')
gBondTdimServiceType = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("ds1", 0), ("e1", 1), ("nxds0", 2), ("nxe0", 3), ("ds3", 4), ("e3", 5), ("clock", 6), ("ethernet", 7), ("atm", 8), ("gfpNoFCS", 9), ("gfp", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimServiceType.setReference('[G.998.3] Appendix II, C-II')
if mibBuilder.loadTexts: gBondTdimServiceType.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceType.setDescription('G.Bond TDIM Service Type. Possible values are: ds1 - Clear Channel DS1 (synchronous) e1 - Clear Channel E1 (synchronous) nxds0 - Fractional DS1 (synchronous) nxe0 - Fractional E1 (synchronous) ds3 - DS3 (synchronous) e3 - E3 (synchronous) clock - Clock transfer (synchronous) ethernet - Ethernet (asynchronous) atm - ATM (asynchronous) gfpNoFCS - GFP encapsulated without FCS (asynchronous) gfp - GFP encapsulated with FCS (asynchronous) For the GBS-R ports, the value of this object cannot be changed directly. This value may be changed as a result of writing operation on the gBondTdimServiceType object of a remote GBS-C. Modifications of this object MUST be performed when the link is Down. Attempts to change this object MUST be rejected (in case of SNMP with the error inconsistentValue), if the link is Up or Initializing or if it is an GBS-R. This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aServiceType')
gBondTdimServiceSize = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(20, 255), ))).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondTdimServiceSize.setReference('[G.998.3] Appendix II, C-III')
if mibBuilder.loadTexts: gBondTdimServiceSize.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceSize.setDescription('Service size in octets per bonding sub-block for a specific service identified by gBondTdimServiceIdx. For TDM (synchronous) services with variable size e.g. fractional DS1/E1 - this object represents the number of DS0/E0 channels. For asynchronous services (Ethernet, ATM, GFPnoFCS or GFP) - this object represents max. number of octets. A GET operation returns current value. A SET operation, allowed on GBS-C only when the link is Down, changes the service size to the indicated value. If the link is not down or the service type is fixed rate TDM service (gBondTdimServiceType is NxDS0, NxE0, DS1, E1, DS3, E3 or Clock), the operation MUST be rejected (in case of SNMP with the error inconsistentValue). This object MUST be maintained in a persistent manner. This object maps to G.998.3 attribute aServiceSize')
gBondTdimServiceOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 3, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondTdimServiceOperState.setReference('[G.998.3] 10.2.3')
if mibBuilder.loadTexts: gBondTdimServiceOperState.setStatus('current')
if mibBuilder.loadTexts: gBondTdimServiceOperState.setDescription('G.Bond TDIM Service Operation State. Possible values are: up - Service is up passing traffic. down - Service is down, due to a variety of reasons, e.g. G.Bond TDIM port is down, current link bandwidth is too low to support a particular service, etc.')
gBondTdimGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 2, 1))
gBondTdimCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 3, 2, 2))
gBondTdimBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 3, 2, 1, 1)).setObjects(("GBOND-TDIM-MIB", "gBondTdimCrc4Errors"), ("GBOND-TDIM-MIB", "gBondTdimCrc6Errors"), ("GBOND-TDIM-MIB", "gBondTdimCrc8Errors"), ("GBOND-TDIM-MIB", "gBondTdimFecSupported"), ("GBOND-TDIM-MIB", "gBondTdimServiceIfIdx"), ("GBOND-TDIM-MIB", "gBondTdimServiceType"), ("GBOND-TDIM-MIB", "gBondTdimServiceSize"), ("GBOND-TDIM-MIB", "gBondTdimServiceOperState"), ("GBOND-TDIM-MIB", "gBondTdimServiceUpDownEnable"), ("GBOND-TDIM-MIB", "gBondTdimFltStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTdimBasicGroup = gBondTdimBasicGroup.setStatus('current')
if mibBuilder.loadTexts: gBondTdimBasicGroup.setDescription('A collection of objects representing management information for G.Bond TDIM ports.')
gBondTdimFecGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 3, 2, 1, 2)).setObjects(("GBOND-TDIM-MIB", "gBondTdimFecSupported"), ("GBOND-TDIM-MIB", "gBondTdimFecAdminState"), ("GBOND-TDIM-MIB", "gBondTdimFecWordSize"), ("GBOND-TDIM-MIB", "gBondTdimFecRedundancySize"), ("GBOND-TDIM-MIB", "gBondTdimFecInterleaverType"), ("GBOND-TDIM-MIB", "gBondTdimFecInterleaverDepth"), ("GBOND-TDIM-MIB", "gBondTdimFecMaxWordSize"), ("GBOND-TDIM-MIB", "gBondTdimFecMaxRedundancySize"), ("GBOND-TDIM-MIB", "gBondTdimFecInterleaverTypeSupported"), ("GBOND-TDIM-MIB", "gBondTdimFecMaxInterleaverDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTdimFecGroup = gBondTdimFecGroup.setStatus('current')
if mibBuilder.loadTexts: gBondTdimFecGroup.setDescription('A collection of objects supporting OPTIONAL Forward Error Correction (FEC) and Interleaver function in G.Bond TDIM ports.')
gBondTdimAlarmConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 3, 2, 1, 3)).setObjects(("GBOND-TDIM-MIB", "gBondTdimServiceUpDownEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTdimAlarmConfGroup = gBondTdimAlarmConfGroup.setStatus('current')
if mibBuilder.loadTexts: gBondTdimAlarmConfGroup.setDescription('A collection of objects required for configuration of alarm thresholds and notifications in G.Bond TDIM ports.')
gBondTdimNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 211, 3, 2, 1, 4)).setObjects(("GBOND-TDIM-MIB", "gBondTdimServiceUp"), ("GBOND-TDIM-MIB", "gBondTdimServiceDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTdimNotificationGroup = gBondTdimNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: gBondTdimNotificationGroup.setDescription('This group supports notifications of significant conditions associated with G.Bond TDIM ports.')
gBondTdimCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 211, 3, 2, 2, 1)).setObjects(("GBOND-TDIM-MIB", "gBondTdimBasicGroup"), ("GBOND-TDIM-MIB", "gBondTdimAlarmConfGroup"), ("GBOND-TDIM-MIB", "gBondTdimNotificationGroup"), ("GBOND-TDIM-MIB", "gBondTdimFecGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTdimCompliance = gBondTdimCompliance.setStatus('current')
if mibBuilder.loadTexts: gBondTdimCompliance.setDescription('The compliance statement for G.Bond TDIM interfaces. Compliance with the following external compliance statements is REQUIRED: MIB Module Compliance Statement ---------- -------------------- IF-MIB ifCompliance3 GBOND-MIB gBondCompliance')
mibBuilder.exportSymbols("GBOND-TDIM-MIB", PYSNMP_MODULE_ID=gBondTdimMIB, gBondTdimFecGroup=gBondTdimFecGroup, gBondTdimGroups=gBondTdimGroups, gBondTdimObjects=gBondTdimObjects, gBondTdimServiceOperState=gBondTdimServiceOperState, gBondTdimNotificationGroup=gBondTdimNotificationGroup, gBondTdimFecMaxRedundancySize=gBondTdimFecMaxRedundancySize, gBondTdimServiceUp=gBondTdimServiceUp, gBondTdimFecRedundancySize=gBondTdimFecRedundancySize, gBondTdimFecMaxWordSize=gBondTdimFecMaxWordSize, gBondTdimServiceIfIdx=gBondTdimServiceIfIdx, gBondTdimPortCapabilityTable=gBondTdimPortCapabilityTable, gBondTdimFecInterleaverDepth=gBondTdimFecInterleaverDepth, gBondTdimFecMaxInterleaverDepth=gBondTdimFecMaxInterleaverDepth, gBondTdimFecSupported=gBondTdimFecSupported, gBondTdimServiceTable=gBondTdimServiceTable, gBondTdimMIB=gBondTdimMIB, gBondTdimServiceEntry=gBondTdimServiceEntry, gBondTdimServiceDown=gBondTdimServiceDown, gBondTdimConformance=gBondTdimConformance, gBondTdimServiceType=gBondTdimServiceType, gBondTdimFecAdminState=gBondTdimFecAdminState, gBondTdimCrc8Errors=gBondTdimCrc8Errors, gBondTdimBasicGroup=gBondTdimBasicGroup, gBondTdimAlarmConfGroup=gBondTdimAlarmConfGroup, gBondTdimServiceSize=gBondTdimServiceSize, gBondTdimCompliances=gBondTdimCompliances, gBondTdimPortConfTable=gBondTdimPortConfTable, gBondTdimPortCapabilityEntry=gBondTdimPortCapabilityEntry, gBondTdimPortStatusEntry=gBondTdimPortStatusEntry, gBondTdimServiceIdx=gBondTdimServiceIdx, gBondTdimFecWordSize=gBondTdimFecWordSize, gBondTdimCrc4Errors=gBondTdimCrc4Errors, gBondTdimFecInterleaverTypeSupported=gBondTdimFecInterleaverTypeSupported, gBondTdimFltStatus=gBondTdimFltStatus, gBondTdimFecInterleaverType=gBondTdimFecInterleaverType, GBondTdimServiceIndex=GBondTdimServiceIndex, gBondTdimPort=gBondTdimPort, gBondTdimCrc6Errors=gBondTdimCrc6Errors, gBondTdimCompliance=gBondTdimCompliance, gBondTdimPortConfEntry=gBondTdimPortConfEntry, gBondTdimPortNotifications=gBondTdimPortNotifications, gBondTdimServiceUpDownEnable=gBondTdimServiceUpDownEnable, gBondTdimPortStatusTable=gBondTdimPortStatusTable)
