#
# PySNMP MIB module NETI-PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETI-PM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:19:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
netiExperimentalGeneric, = mibBuilder.importSymbols("NETI-COMMON-MIB", "netiExperimentalGeneric")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, Integer32, TimeTicks, MibIdentifier, NotificationType, Bits, iso, Unsigned32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "Integer32", "TimeTicks", "MibIdentifier", "NotificationType", "Bits", "iso", "Unsigned32", "IpAddress", "Counter64")
DateAndTime, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TruthValue", "TextualConvention")
netiPMMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17))
netiPMMIB.setRevisions(('2008-12-12 12:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: netiPMMIB.setRevisionsDescriptions(('Added tables for 24 hour current data. These tables are: pmTif24hCurrentTable, pmAif24hCurrentTable and mDch24hCurrentTable. Fixed imports. Changed index of type Integer32 to Unsigned32.',))
if mibBuilder.loadTexts: netiPMMIB.setLastUpdated('200812121200Z')
if mibBuilder.loadTexts: netiPMMIB.setOrganization('Net Insight AB')
if mibBuilder.loadTexts: netiPMMIB.setContactInfo('Net Insight AB Box 42093 SE-126 14 Stockholm Sweden Tel +46-8-685 0400 info@netinsight.net')
if mibBuilder.loadTexts: netiPMMIB.setDescription('The Net Insight PM (Performance Monitoring) MIB. The MIB implements objects for monitoring the performance of trunk interfaces, access interfaces and channels according to G.826.')
netiPMMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1))
pmTifGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1))
pmAifGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2))
pmDchGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3))
pmConformanceGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 4))
class Counter15m(TextualConvention, Unsigned32):
    description = ''
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 910)

class Counter24h(TextualConvention, Unsigned32):
    description = ''
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 86410)

pmTifTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1), )
if mibBuilder.loadTexts: pmTifTable.setStatus('current')
if mibBuilder.loadTexts: pmTifTable.setDescription('Table of Performance Monitored trunk interfaces')
pmTifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmTifIndex"))
if mibBuilder.loadTexts: pmTifEntry.setStatus('current')
if mibBuilder.loadTexts: pmTifEntry.setDescription('One entry for each trunk interface')
pmTifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmTifIndex.setStatus('current')
if mibBuilder.loadTexts: pmTifIndex.setDescription('The index uniquely identifying this trunk interface.')
pmTifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifAdminStatus.setStatus('current')
if mibBuilder.loadTexts: pmTifAdminStatus.setDescription('The desired state of the PM function. Affects the operative state of the PM object')
pmTifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifOperStatus.setStatus('current')
if mibBuilder.loadTexts: pmTifOperStatus.setDescription('PM operative state.')
pmTifFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifFailure.setStatus('current')
if mibBuilder.loadTexts: pmTifFailure.setDescription('Shows current failure state. An empty string indicates no failure')
pmTifDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifDataSource.setStatus('current')
if mibBuilder.loadTexts: pmTifDataSource.setDescription('The PM Data Source object')
pmTifDataSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifDataSourceName.setStatus('current')
if mibBuilder.loadTexts: pmTifDataSourceName.setDescription('The name of the PM Data Source')
pmTifUatAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifUatAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmTifUatAlarmsEnabled.setDescription("If set to `true(1)' then UAT alarms will be sent. Unavailable time (UAT) defines a state where a service is unable to perform its normal task due to severe errors for a longer period. It begins at detection of ten consecutive SES events and ends at detection of ten consecutive non-SES events. In both cases, the 10s are considered part of unavailable respective available time and effects the visibility of G.826 PM events (they are delayed 10s) Entry and exit of UAT is declared by raising and clearing an UAT alarm (if enabled)")
pmTifTresholdAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifTresholdAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmTifTresholdAlarmsEnabled.setDescription("If set to `true(1)' then threshold alarms will be sent. Each 15m and 24h current register counter can be assigned a threshold value. When crossed, a threshold crossing alarm will be sent for the interval if enabled. Raised alarm will be cleared at end of a following fault free interval i.e. one with all interval counter values below their threshold values and with no UAT. Only one TC alarm per interval can be raised, regardless of how many thresholds have been crossed.")
pmTifPeriodicEventsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifPeriodicEventsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmTifPeriodicEventsEnabled.setDescription("If set to `true(1)' then History Periodic Events will be sent.")
pmTifZeroSuppressionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifZeroSuppressionEnabled.setStatus('current')
if mibBuilder.loadTexts: pmTifZeroSuppressionEnabled.setDescription("If set to `true(1)' then Zero Suppression mode is enabled Zero Suppression mode tells whether intervals with all current counters equal to zero shall be stored in the history log or not. If enabled, once a faulty interval is found, its current register content including a zero suppressed interval counter will be stored in the history log. The additional counter specifies how many fault free intervals have preceded the faulty one. In such way, history for a larger measurement period can be logged than would otherwise be possible")
pmTifHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("small", 2), ("large", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTifHistorySize.setStatus('current')
if mibBuilder.loadTexts: pmTifHistorySize.setDescription('The size of the history log')
pmTif15mTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 12), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif15mTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTresholdES.setDescription('15 minute threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif15mTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 13), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif15mTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTresholdSES.setDescription('15 minute threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif15mTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif15mTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTresholdBBE.setDescription('15 minute threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif15mTresholdSS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 15), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif15mTresholdSS.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTresholdSS.setDescription('15 minute threshold value for SS. Current SS value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif24hTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 16), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif24hTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTresholdES.setDescription('24 hour threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif24hTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 17), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif24hTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTresholdSES.setDescription('24 hour threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif24hTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 18), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif24hTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTresholdBBE.setDescription('24 hour threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTif24hTresholdSS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 1, 1, 19), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmTif24hTresholdSS.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTresholdSS.setDescription('24 hour threshold value for SS. Current SS value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmTifCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2), )
if mibBuilder.loadTexts: pmTifCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentTable.setDescription('Table of PM data for the current 15 minute period')
pmTifCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmTifIndex"))
if mibBuilder.loadTexts: pmTifCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentEntry.setDescription('One entry for each monitored object')
pmTifCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentTime.setDescription('Elapsed time in seconds for the current 15 minute period.')
pmTifCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 15 minute measurement period has unreliable measurement data.")
pmTifCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmTifCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmTifCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmTifCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmTifCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmTifCurrentSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 2, 1, 9), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTifCurrentSSs.setStatus('current')
if mibBuilder.loadTexts: pmTifCurrentSSs.setDescription('Number of SLIP Second (SS) for the current 15 minute period. SS is defined as one second containing one or more SLIPs')
pmTif15mTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3), )
if mibBuilder.loadTexts: pmTif15mTable.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTable.setDescription('Table of 15 minute PM log history')
pmTif15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmTifIndex"), (0, "NETI-PM-MIB", "pmTif15mIndex"))
if mibBuilder.loadTexts: pmTif15mEntry.setStatus('current')
if mibBuilder.loadTexts: pmTif15mEntry.setDescription('One entry for each 15 minute PM interval')
pmTif15mIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmTif15mIndex.setStatus('current')
if mibBuilder.loadTexts: pmTif15mIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmTif15mTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mTime.setStatus('current')
if mibBuilder.loadTexts: pmTif15mTime.setDescription('Time stamp for this 15 minute interval')
pmTif15mSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mSuspect.setStatus('current')
if mibBuilder.loadTexts: pmTif15mSuspect.setDescription('Suspect flag for this 15 minute interval')
pmTif15mZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mZS.setStatus('current')
if mibBuilder.loadTexts: pmTif15mZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmTif15mESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mESs.setStatus('current')
if mibBuilder.loadTexts: pmTif15mESs.setDescription('Number of Errored Seconds (ES) for this 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmTif15mSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mSESs.setStatus('current')
if mibBuilder.loadTexts: pmTif15mSESs.setDescription('Number of Severe Errored Seconds (SES) for this 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmTif15mBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mBBEs.setStatus('current')
if mibBuilder.loadTexts: pmTif15mBBEs.setDescription('Number of Background Block Error (BBE) for this 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmTif15mUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mUASs.setStatus('current')
if mibBuilder.loadTexts: pmTif15mUASs.setDescription('Number of Unavailable Second (UAS) for this 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmTif15mSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 3, 1, 9), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif15mSSs.setStatus('current')
if mibBuilder.loadTexts: pmTif15mSSs.setDescription('Number of SLIP Second (SS) for this 15 minute period. SS is defined as one second containing one or more SLIPs')
pmTif24hTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4), )
if mibBuilder.loadTexts: pmTif24hTable.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTable.setDescription('Table of 24 hour PM log history')
pmTif24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmTifIndex"), (0, "NETI-PM-MIB", "pmTif24hIndex"))
if mibBuilder.loadTexts: pmTif24hEntry.setStatus('current')
if mibBuilder.loadTexts: pmTif24hEntry.setDescription('One entry for each 24 hour PM interval')
pmTif24hIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmTif24hIndex.setStatus('current')
if mibBuilder.loadTexts: pmTif24hIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmTif24hTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hTime.setStatus('current')
if mibBuilder.loadTexts: pmTif24hTime.setDescription('Time stamp for this 24 hour interval')
pmTif24hSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hSuspect.setStatus('current')
if mibBuilder.loadTexts: pmTif24hSuspect.setDescription('Suspect flag for this 24 hour interval')
pmTif24hZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hZS.setStatus('current')
if mibBuilder.loadTexts: pmTif24hZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmTif24hESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 5), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hESs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hESs.setDescription('Number of Errored Seconds (ES) for this 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmTif24hSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 6), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hSESs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hSESs.setDescription('Number of Severe Errored Seconds (SES) for this 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmTif24hBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hBBEs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hBBEs.setDescription('Number of Background Block Error (BBE) for this 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmTif24hUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 8), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hUASs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hUASs.setDescription('Number of Unavailable Second (UAS) for this 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmTif24hSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 4, 1, 9), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hSSs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hSSs.setDescription('Number of SLIP Second (SS) for this 24 hour period. SS is defined as one second containing one or more SLIPs')
pmTif24hCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5), )
if mibBuilder.loadTexts: pmTif24hCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentTable.setDescription('Table of PM data for the current 24 hour period')
pmTif24hCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmTifIndex"))
if mibBuilder.loadTexts: pmTif24hCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentEntry.setDescription('One entry for each monitored object')
pmTif24hCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentTime.setDescription('Elapsed time in seconds for the current 24 hour period.')
pmTif24hCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 24 hour measurement period has unreliable measurement data.")
pmTif24hCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmTif24hCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmTif24hCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmTif24hCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmTif24hCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmTif24hCurrentSSs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 1, 5, 1, 9), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmTif24hCurrentSSs.setStatus('current')
if mibBuilder.loadTexts: pmTif24hCurrentSSs.setDescription('Number of SLIP Second (SS) for the current 24 hour period. SS is defined as one second containing one or more SLIPs')
pmAifTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1), )
if mibBuilder.loadTexts: pmAifTable.setStatus('current')
if mibBuilder.loadTexts: pmAifTable.setDescription('Table of Performance Monitored access interfaces')
pmAifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmAifIndex"))
if mibBuilder.loadTexts: pmAifEntry.setStatus('current')
if mibBuilder.loadTexts: pmAifEntry.setDescription('One entry for each access interface')
pmAifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmAifIndex.setStatus('current')
if mibBuilder.loadTexts: pmAifIndex.setDescription('The index uniquely identifying this access interface.')
pmAifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifAdminStatus.setStatus('current')
if mibBuilder.loadTexts: pmAifAdminStatus.setDescription('The desired state of the PM function. Affects the operative state of the PM object')
pmAifOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifOperStatus.setStatus('current')
if mibBuilder.loadTexts: pmAifOperStatus.setDescription('PM operative state.')
pmAifFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifFailure.setStatus('current')
if mibBuilder.loadTexts: pmAifFailure.setDescription('Shows current failure state. An empty string indicates no failure')
pmAifDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifDataSource.setStatus('current')
if mibBuilder.loadTexts: pmAifDataSource.setDescription('The PM Data Source object')
pmAifDataSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifDataSourceName.setStatus('current')
if mibBuilder.loadTexts: pmAifDataSourceName.setDescription('The name of the PM Data Source')
pmAifUatAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifUatAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmAifUatAlarmsEnabled.setDescription("If set to `true(1)' then UAT alarms will be sent. Unavailable time (UAT) defines a state where a service is unable to perform its normal task due to severe errors for a longer period. It begins at detection of ten consecutive SES events and ends at detection of ten consecutive non-SES events. In both cases, the 10s are considered part of unavailable respective available time and effects the visibility of G.826 PM events (they are delayed 10s) Entry and exit of UAT is declared by raising and clearing an UAT alarm (if enabled)")
pmAifTresholdAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifTresholdAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmAifTresholdAlarmsEnabled.setDescription("If set to `true(1)' then threshold alarms will be sent. Each 15m and 24h current register counter can be assigned a threshold value. When crossed, a threshold crossing alarm will be sent for the interval if enabled. Raised alarm will be cleared at end of a following fault free interval i.e. one with all interval counter values below their threshold values and with no UAT. Only one TC alarm per interval can be raised, regardless of how many thresholds have been crossed.")
pmAifPeriodicEventsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifPeriodicEventsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmAifPeriodicEventsEnabled.setDescription("If set to `true(1)' then History Periodic Events will be sent.")
pmAifZeroSuppressionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifZeroSuppressionEnabled.setStatus('current')
if mibBuilder.loadTexts: pmAifZeroSuppressionEnabled.setDescription("If set to `true(1)' then Zero Suppression mode is enabled Zero Suppression mode tells whether intervals with all current counters equal to zero shall be stored in the history log or not. If enabled, once a faulty interval is found, its current register content including a zero suppressed interval counter will be stored in the history log. The additional counter specifies how many fault free intervals have preceded the faulty one. In such way, history for a larger measurement period can be logged than would otherwise be possible")
pmAifHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("small", 2), ("large", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAifHistorySize.setStatus('current')
if mibBuilder.loadTexts: pmAifHistorySize.setDescription('The size of the history log')
pmAif15mTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 12), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif15mTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmAif15mTresholdES.setDescription('15 minute threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAif15mTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 13), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif15mTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmAif15mTresholdSES.setDescription('15 minute threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAif15mTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif15mTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmAif15mTresholdBBE.setDescription('15 minute threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAif24hTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 15), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif24hTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmAif24hTresholdES.setDescription('24 hour threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAif24hTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 16), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif24hTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmAif24hTresholdSES.setDescription('24 hour threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAif24hTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 1, 1, 17), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmAif24hTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmAif24hTresholdBBE.setDescription('24 hour threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmAifCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2), )
if mibBuilder.loadTexts: pmAifCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentTable.setDescription('Table of PM data for the current 15 minute period')
pmAifCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmAifIndex"))
if mibBuilder.loadTexts: pmAifCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentEntry.setDescription('One entry for each monitored object')
pmAifCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentTime.setDescription('Elapsed time in seconds for the current 15 minute period.')
pmAifCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 15 minute measurement period has unreliable measurement data.")
pmAifCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmAifCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmAifCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmAifCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmAifCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 2, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAifCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmAifCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmAif15mTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3), )
if mibBuilder.loadTexts: pmAif15mTable.setStatus('current')
if mibBuilder.loadTexts: pmAif15mTable.setDescription('Table of 15 minute PM interval history')
pmAif15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmAifIndex"), (0, "NETI-PM-MIB", "pmAif15mIndex"))
if mibBuilder.loadTexts: pmAif15mEntry.setStatus('current')
if mibBuilder.loadTexts: pmAif15mEntry.setDescription('One entry for each 15 minute PM interval')
pmAif15mIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmAif15mIndex.setStatus('current')
if mibBuilder.loadTexts: pmAif15mIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmAif15mTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mTime.setStatus('current')
if mibBuilder.loadTexts: pmAif15mTime.setDescription('Time stamp for this 15 minute interval')
pmAif15mSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mSuspect.setStatus('current')
if mibBuilder.loadTexts: pmAif15mSuspect.setDescription('Suspect flag for this 15 minute interval')
pmAif15mZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mZS.setStatus('current')
if mibBuilder.loadTexts: pmAif15mZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmAif15mESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mESs.setStatus('current')
if mibBuilder.loadTexts: pmAif15mESs.setDescription('Number of Errored Seconds (ES) for this 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmAif15mSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mSESs.setStatus('current')
if mibBuilder.loadTexts: pmAif15mSESs.setDescription('Number of Severe Errored Seconds (SES) for this 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmAif15mBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mBBEs.setStatus('current')
if mibBuilder.loadTexts: pmAif15mBBEs.setDescription('Number of Background Block Error (BBE) for this 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmAif15mUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 3, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif15mUASs.setStatus('current')
if mibBuilder.loadTexts: pmAif15mUASs.setDescription('Number of Unavailable Second (UAS) for this 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmAif24hTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4), )
if mibBuilder.loadTexts: pmAif24hTable.setStatus('current')
if mibBuilder.loadTexts: pmAif24hTable.setDescription('Table of 24 hour PM log history')
pmAif24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmAifIndex"), (0, "NETI-PM-MIB", "pmAif24hIndex"))
if mibBuilder.loadTexts: pmAif24hEntry.setStatus('current')
if mibBuilder.loadTexts: pmAif24hEntry.setDescription('One entry for each 24 hour PM interval')
pmAif24hIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmAif24hIndex.setStatus('current')
if mibBuilder.loadTexts: pmAif24hIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmAif24hTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hTime.setStatus('current')
if mibBuilder.loadTexts: pmAif24hTime.setDescription('Time stamp for this 24 hour interval')
pmAif24hSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hSuspect.setStatus('current')
if mibBuilder.loadTexts: pmAif24hSuspect.setDescription('Suspect flag for this 24 hour interval')
pmAif24hZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hZS.setStatus('current')
if mibBuilder.loadTexts: pmAif24hZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmAif24hESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 5), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hESs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hESs.setDescription('Number of Errored Seconds (ES) for this 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmAif24hSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 6), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hSESs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hSESs.setDescription('Number of Severe Errored Seconds (SES) for this 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmAif24hBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hBBEs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hBBEs.setDescription('Number of Background Block Error (BBE) for this 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmAif24hUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 4, 1, 8), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hUASs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hUASs.setDescription('Number of Unavailable Second (UAS) for this 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmAif24hCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5), )
if mibBuilder.loadTexts: pmAif24hCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentTable.setDescription('Table of PM data for the current 24 hour period')
pmAif24hCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmAifIndex"))
if mibBuilder.loadTexts: pmAif24hCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentEntry.setDescription('One entry for each monitored object')
pmAif24hCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentTime.setDescription('Elapsed time in seconds for the current 24 hour period.')
pmAif24hCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 24 hour measurement period has unreliable measurement data.")
pmAif24hCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmAif24hCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmAif24hCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmAif24hCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmAif24hCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 2, 5, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmAif24hCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmAif24hCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmDchTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1), )
if mibBuilder.loadTexts: pmDchTable.setStatus('current')
if mibBuilder.loadTexts: pmDchTable.setDescription('Table of Performance Monitored DTM channel')
pmDchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmDchIndex"))
if mibBuilder.loadTexts: pmDchEntry.setStatus('current')
if mibBuilder.loadTexts: pmDchEntry.setDescription('One entry for each DTM channel')
pmDchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmDchIndex.setStatus('current')
if mibBuilder.loadTexts: pmDchIndex.setDescription('The index uniquely identifying this DTM channel.')
pmDchAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchAdminStatus.setStatus('current')
if mibBuilder.loadTexts: pmDchAdminStatus.setDescription('The desired state of the PM function. Affects the operative state of the PM object')
pmDchOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchOperStatus.setStatus('current')
if mibBuilder.loadTexts: pmDchOperStatus.setDescription('PM operative state.')
pmDchFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchFailure.setStatus('current')
if mibBuilder.loadTexts: pmDchFailure.setDescription('Shows current failure state. An empty string indicates no failure')
pmDchDataSource = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchDataSource.setStatus('current')
if mibBuilder.loadTexts: pmDchDataSource.setDescription('The PM Data Source object')
pmDchDataSourceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchDataSourceName.setStatus('current')
if mibBuilder.loadTexts: pmDchDataSourceName.setDescription('The name of the PM Data Source')
pmDchUatAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchUatAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmDchUatAlarmsEnabled.setDescription("If set to `true(1)' then UAT alarms will be sent. Unavailable time (UAT) defines a state where a service is unable to perform its normal task due to severe errors for a longer period. It begins at detection of ten consecutive SES events and ends at detection of ten consecutive non-SES events. In both cases, the 10s are considered part of unavailable respective available time and effects the visibility of G.826 PM events (they are delayed 10s) Entry and exit of UAT is declared by raising and clearing an UAT alarm (if enabled)")
pmDchTresholdAlarmsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchTresholdAlarmsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmDchTresholdAlarmsEnabled.setDescription("If set to `true(1)' then threshold alarms will be sent. Each 15m and 24h current register counter can be assigned a threshold value. When crossed, a threshold crossing alarm will be sent for the interval if enabled. Raised alarm will be cleared at end of a following fault free interval i.e. one with all interval counter values below their threshold values and with no UAT. Only one TC alarm per interval can be raised, regardless of how many thresholds have been crossed.")
pmDchPeriodicEventsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchPeriodicEventsEnabled.setStatus('current')
if mibBuilder.loadTexts: pmDchPeriodicEventsEnabled.setDescription("If set to `true(1)' then History Periodic Events will be sent.")
pmDchZeroSuppressionEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchZeroSuppressionEnabled.setStatus('current')
if mibBuilder.loadTexts: pmDchZeroSuppressionEnabled.setDescription("If set to `true(1)' then Zero Suppression mode is enabled Zero Suppression mode tells whether intervals with all current counters equal to zero shall be stored in the history log or not. If enabled, once a faulty interval is found, its current register content including a zero suppressed interval counter will be stored in the history log. The additional counter specifies how many fault free intervals have preceded the faulty one. In such way, history for a larger measurement period can be logged than would otherwise be possible")
pmDchHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("small", 2), ("large", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDchHistorySize.setStatus('current')
if mibBuilder.loadTexts: pmDchHistorySize.setDescription('The size of the history log')
pmDch15mTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 12), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch15mTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmDch15mTresholdES.setDescription('15 minute threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDch15mTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 13), Counter15m()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch15mTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmDch15mTresholdSES.setDescription('15 minute threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDch15mTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch15mTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmDch15mTresholdBBE.setDescription('15 minute threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDch24hTresholdES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 15), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch24hTresholdES.setStatus('current')
if mibBuilder.loadTexts: pmDch24hTresholdES.setDescription('24 hour threshold value for ES. Current ES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDch24hTresholdSES = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 16), Counter24h()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch24hTresholdSES.setStatus('current')
if mibBuilder.loadTexts: pmDch24hTresholdSES.setDescription('24 hour threshold value for SES. Current SES value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDch24hTresholdBBE = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 1, 1, 17), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pmDch24hTresholdBBE.setStatus('current')
if mibBuilder.loadTexts: pmDch24hTresholdBBE.setDescription('24 hour threshold value for BBE. Current BBE value equal to or above this threshold will raise a threshold alarm if enabled. A value of zero will disable threshold check.')
pmDchCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2), )
if mibBuilder.loadTexts: pmDchCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentTable.setDescription('Table of PM data for the current 15 minute period')
pmDchCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmDchIndex"))
if mibBuilder.loadTexts: pmDchCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentEntry.setDescription('One entry for each monitored object')
pmDchCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentTime.setDescription('Elapsed time in seconds for the current 15 minute period.')
pmDchCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 15 minute measurement period has unreliable measurement data.")
pmDchCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmDchCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmDchCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmDchCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmDchCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 2, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDchCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmDchCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmDch15mTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3), )
if mibBuilder.loadTexts: pmDch15mTable.setStatus('current')
if mibBuilder.loadTexts: pmDch15mTable.setDescription('Table of 15 minute PM interval history')
pmDch15mEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmDchIndex"), (0, "NETI-PM-MIB", "pmDch15mIndex"))
if mibBuilder.loadTexts: pmDch15mEntry.setStatus('current')
if mibBuilder.loadTexts: pmDch15mEntry.setDescription('One entry for each 15 minute PM interval')
pmDch15mIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmDch15mIndex.setStatus('current')
if mibBuilder.loadTexts: pmDch15mIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmDch15mTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mTime.setStatus('current')
if mibBuilder.loadTexts: pmDch15mTime.setDescription('Time stamp for this 15 minute interval')
pmDch15mSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mSuspect.setStatus('current')
if mibBuilder.loadTexts: pmDch15mSuspect.setDescription('Suspect flag for this 15 minute interval')
pmDch15mZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mZS.setStatus('current')
if mibBuilder.loadTexts: pmDch15mZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmDch15mESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mESs.setStatus('current')
if mibBuilder.loadTexts: pmDch15mESs.setDescription('Number of Errored Seconds (ES) for this 15 minute period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmDch15mSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mSESs.setStatus('current')
if mibBuilder.loadTexts: pmDch15mSESs.setDescription('Number of Severe Errored Seconds (SES) for this 15 minute period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmDch15mBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mBBEs.setStatus('current')
if mibBuilder.loadTexts: pmDch15mBBEs.setDescription('Number of Background Block Error (BBE) for this 15 minute period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmDch15mUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 3, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch15mUASs.setStatus('current')
if mibBuilder.loadTexts: pmDch15mUASs.setDescription('Number of Unavailable Second (UAS) for this 15 minute period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmDch24hTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4), )
if mibBuilder.loadTexts: pmDch24hTable.setStatus('current')
if mibBuilder.loadTexts: pmDch24hTable.setDescription('Table of 24 hour PM interval history')
pmDch24hEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmDchIndex"), (0, "NETI-PM-MIB", "pmDch24hIndex"))
if mibBuilder.loadTexts: pmDch24hEntry.setStatus('current')
if mibBuilder.loadTexts: pmDch24hEntry.setDescription('One entry for each 24 hour PM interval')
pmDch24hIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: pmDch24hIndex.setStatus('current')
if mibBuilder.loadTexts: pmDch24hIndex.setDescription("The index that identifies the interval for which the set of statistics is available. Index of '0' indicates the most recently completed interval, and the index is increased by one for each interval back in time.")
pmDch24hTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hTime.setStatus('current')
if mibBuilder.loadTexts: pmDch24hTime.setDescription('Time stamp for this 24 hour interval')
pmDch24hSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hSuspect.setStatus('current')
if mibBuilder.loadTexts: pmDch24hSuspect.setDescription('Suspect flag for this 24 hour interval')
pmDch24hZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hZS.setStatus('current')
if mibBuilder.loadTexts: pmDch24hZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmDch24hESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 5), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hESs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hESs.setDescription('Number of Errored Seconds (ES) for this 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmDch24hSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 6), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hSESs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hSESs.setDescription('Number of Severe Errored Seconds (SES) for this 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmDch24hBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hBBEs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hBBEs.setDescription('Number of Background Block Error (BBE) for this 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmDch24hUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 4, 1, 8), Counter24h()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hUASs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hUASs.setDescription('Number of Unavailable Second (UAS) for this 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmDch24hCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5), )
if mibBuilder.loadTexts: pmDch24hCurrentTable.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentTable.setDescription('Table of PM data for the current 24 hour period')
pmDch24hCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1), ).setIndexNames((0, "NETI-PM-MIB", "pmDchIndex"))
if mibBuilder.loadTexts: pmDch24hCurrentEntry.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentEntry.setDescription('One entry for each monitored object')
pmDch24hCurrentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 2), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentTime.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentTime.setDescription('Elapsed time in seconds for the current 24 hour period.')
pmDch24hCurrentSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentSuspect.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentSuspect.setDescription("Is Suspect flag, if set to `true(1)' the current 24 hour measurement period has unreliable measurement data.")
pmDch24hCurrentZS = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentZS.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentZS.setDescription('Zero Suppression Counter. If the performance monitoring uses zero suppression, this counter specifies how many fault free intervals have preceded the faulty one.')
pmDch24hCurrentESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 5), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentESs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentESs.setDescription('Number of Errored Seconds (ES) for the current 24 hour period. ES is defined as one second of available time containing one or more Errored Blocks (EB) or at least one defect')
pmDch24hCurrentSESs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 6), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentSESs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentSESs.setDescription('Number of Severe Errored Seconds (SES) for the current 24 hour period. SES is defined as one second of available time containing more than 30% Errored Blocks (EB) or at least one defect.')
pmDch24hCurrentBBEs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentBBEs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentBBEs.setDescription('Number of Background Block Error (BBE) for the current 24 hour period. BBE is defined as the number of Errored Blocks (EB) during one second of available time not part of SES')
pmDch24hCurrentUASs = MibTableColumn((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 3, 5, 1, 8), Counter15m()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pmDch24hCurrentUASs.setStatus('current')
if mibBuilder.loadTexts: pmDch24hCurrentUASs.setDescription('Number of Unavailable Second (UAS) for the current 24 hour period. UAS is defined as one second of UAT (Unavailable Time). During UAT calculations of BBE, ES and SES are inhibited and no data collection of them is performed')
pmTifConformanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 4, 1)).setObjects(("NETI-PM-MIB", "pmTifAdminStatus"), ("NETI-PM-MIB", "pmTifOperStatus"), ("NETI-PM-MIB", "pmTifFailure"), ("NETI-PM-MIB", "pmTifDataSource"), ("NETI-PM-MIB", "pmTifDataSourceName"), ("NETI-PM-MIB", "pmTifUatAlarmsEnabled"), ("NETI-PM-MIB", "pmTifTresholdAlarmsEnabled"), ("NETI-PM-MIB", "pmTifPeriodicEventsEnabled"), ("NETI-PM-MIB", "pmTifZeroSuppressionEnabled"), ("NETI-PM-MIB", "pmTifHistorySize"), ("NETI-PM-MIB", "pmTif15mTresholdES"), ("NETI-PM-MIB", "pmTif15mTresholdSES"), ("NETI-PM-MIB", "pmTif15mTresholdBBE"), ("NETI-PM-MIB", "pmTif15mTresholdSS"), ("NETI-PM-MIB", "pmTif24hTresholdES"), ("NETI-PM-MIB", "pmTif24hTresholdSES"), ("NETI-PM-MIB", "pmTif24hTresholdBBE"), ("NETI-PM-MIB", "pmTif24hTresholdSS"), ("NETI-PM-MIB", "pmTifCurrentTime"), ("NETI-PM-MIB", "pmTifCurrentSuspect"), ("NETI-PM-MIB", "pmTifCurrentZS"), ("NETI-PM-MIB", "pmTifCurrentESs"), ("NETI-PM-MIB", "pmTifCurrentSESs"), ("NETI-PM-MIB", "pmTifCurrentBBEs"), ("NETI-PM-MIB", "pmTifCurrentUASs"), ("NETI-PM-MIB", "pmTifCurrentSSs"), ("NETI-PM-MIB", "pmTif15mTime"), ("NETI-PM-MIB", "pmTif15mSuspect"), ("NETI-PM-MIB", "pmTif15mZS"), ("NETI-PM-MIB", "pmTif15mESs"), ("NETI-PM-MIB", "pmTif15mSESs"), ("NETI-PM-MIB", "pmTif15mBBEs"), ("NETI-PM-MIB", "pmTif15mUASs"), ("NETI-PM-MIB", "pmTif15mSSs"), ("NETI-PM-MIB", "pmTif24hTime"), ("NETI-PM-MIB", "pmTif24hSuspect"), ("NETI-PM-MIB", "pmTif24hZS"), ("NETI-PM-MIB", "pmTif24hESs"), ("NETI-PM-MIB", "pmTif24hSESs"), ("NETI-PM-MIB", "pmTif24hBBEs"), ("NETI-PM-MIB", "pmTif24hUASs"), ("NETI-PM-MIB", "pmTif24hSSs"), ("NETI-PM-MIB", "pmTif24hCurrentTime"), ("NETI-PM-MIB", "pmTif24hCurrentSuspect"), ("NETI-PM-MIB", "pmTif24hCurrentZS"), ("NETI-PM-MIB", "pmTif24hCurrentESs"), ("NETI-PM-MIB", "pmTif24hCurrentSESs"), ("NETI-PM-MIB", "pmTif24hCurrentBBEs"), ("NETI-PM-MIB", "pmTif24hCurrentUASs"), ("NETI-PM-MIB", "pmTif24hCurrentSSs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmTifConformanceGroup = pmTifConformanceGroup.setStatus('current')
if mibBuilder.loadTexts: pmTifConformanceGroup.setDescription('The PM Trunk Interface Conformance Group.')
pmAifConformanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 4, 2)).setObjects(("NETI-PM-MIB", "pmAifAdminStatus"), ("NETI-PM-MIB", "pmAifOperStatus"), ("NETI-PM-MIB", "pmAifFailure"), ("NETI-PM-MIB", "pmAifDataSource"), ("NETI-PM-MIB", "pmAifDataSourceName"), ("NETI-PM-MIB", "pmAifUatAlarmsEnabled"), ("NETI-PM-MIB", "pmAifTresholdAlarmsEnabled"), ("NETI-PM-MIB", "pmAifPeriodicEventsEnabled"), ("NETI-PM-MIB", "pmAifZeroSuppressionEnabled"), ("NETI-PM-MIB", "pmAifHistorySize"), ("NETI-PM-MIB", "pmAif15mTresholdES"), ("NETI-PM-MIB", "pmAif15mTresholdSES"), ("NETI-PM-MIB", "pmAif15mTresholdBBE"), ("NETI-PM-MIB", "pmAif24hTresholdES"), ("NETI-PM-MIB", "pmAif24hTresholdSES"), ("NETI-PM-MIB", "pmAif24hTresholdBBE"), ("NETI-PM-MIB", "pmAifCurrentTime"), ("NETI-PM-MIB", "pmAifCurrentSuspect"), ("NETI-PM-MIB", "pmAifCurrentZS"), ("NETI-PM-MIB", "pmAifCurrentESs"), ("NETI-PM-MIB", "pmAifCurrentSESs"), ("NETI-PM-MIB", "pmAifCurrentBBEs"), ("NETI-PM-MIB", "pmAifCurrentUASs"), ("NETI-PM-MIB", "pmAif15mTime"), ("NETI-PM-MIB", "pmAif15mSuspect"), ("NETI-PM-MIB", "pmAif15mZS"), ("NETI-PM-MIB", "pmAif15mESs"), ("NETI-PM-MIB", "pmAif15mSESs"), ("NETI-PM-MIB", "pmAif15mBBEs"), ("NETI-PM-MIB", "pmAif15mUASs"), ("NETI-PM-MIB", "pmAif24hTime"), ("NETI-PM-MIB", "pmAif24hSuspect"), ("NETI-PM-MIB", "pmAif24hZS"), ("NETI-PM-MIB", "pmAif24hESs"), ("NETI-PM-MIB", "pmAif24hSESs"), ("NETI-PM-MIB", "pmAif24hBBEs"), ("NETI-PM-MIB", "pmAif24hUASs"), ("NETI-PM-MIB", "pmAif24hCurrentTime"), ("NETI-PM-MIB", "pmAif24hCurrentSuspect"), ("NETI-PM-MIB", "pmAif24hCurrentZS"), ("NETI-PM-MIB", "pmAif24hCurrentESs"), ("NETI-PM-MIB", "pmAif24hCurrentSESs"), ("NETI-PM-MIB", "pmAif24hCurrentBBEs"), ("NETI-PM-MIB", "pmAif24hCurrentUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmAifConformanceGroup = pmAifConformanceGroup.setStatus('current')
if mibBuilder.loadTexts: pmAifConformanceGroup.setDescription('The PM Access Interface Conformance Group.')
pmDchConformanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2928, 6, 2, 17, 1, 4, 3)).setObjects(("NETI-PM-MIB", "pmDchAdminStatus"), ("NETI-PM-MIB", "pmDchOperStatus"), ("NETI-PM-MIB", "pmDchFailure"), ("NETI-PM-MIB", "pmDchDataSource"), ("NETI-PM-MIB", "pmDchDataSourceName"), ("NETI-PM-MIB", "pmDchUatAlarmsEnabled"), ("NETI-PM-MIB", "pmDchTresholdAlarmsEnabled"), ("NETI-PM-MIB", "pmDchPeriodicEventsEnabled"), ("NETI-PM-MIB", "pmDchZeroSuppressionEnabled"), ("NETI-PM-MIB", "pmDchHistorySize"), ("NETI-PM-MIB", "pmDch15mTresholdES"), ("NETI-PM-MIB", "pmDch15mTresholdSES"), ("NETI-PM-MIB", "pmDch15mTresholdBBE"), ("NETI-PM-MIB", "pmDch24hTresholdES"), ("NETI-PM-MIB", "pmDch24hTresholdSES"), ("NETI-PM-MIB", "pmDch24hTresholdBBE"), ("NETI-PM-MIB", "pmDchCurrentTime"), ("NETI-PM-MIB", "pmDchCurrentSuspect"), ("NETI-PM-MIB", "pmDchCurrentZS"), ("NETI-PM-MIB", "pmDchCurrentESs"), ("NETI-PM-MIB", "pmDchCurrentSESs"), ("NETI-PM-MIB", "pmDchCurrentBBEs"), ("NETI-PM-MIB", "pmDchCurrentUASs"), ("NETI-PM-MIB", "pmDch15mTime"), ("NETI-PM-MIB", "pmDch15mSuspect"), ("NETI-PM-MIB", "pmDch15mZS"), ("NETI-PM-MIB", "pmDch15mESs"), ("NETI-PM-MIB", "pmDch15mSESs"), ("NETI-PM-MIB", "pmDch15mBBEs"), ("NETI-PM-MIB", "pmDch15mUASs"), ("NETI-PM-MIB", "pmDch24hTime"), ("NETI-PM-MIB", "pmDch24hSuspect"), ("NETI-PM-MIB", "pmDch24hZS"), ("NETI-PM-MIB", "pmDch24hESs"), ("NETI-PM-MIB", "pmDch24hSESs"), ("NETI-PM-MIB", "pmDch24hBBEs"), ("NETI-PM-MIB", "pmDch24hUASs"), ("NETI-PM-MIB", "pmDch24hCurrentTime"), ("NETI-PM-MIB", "pmDch24hCurrentSuspect"), ("NETI-PM-MIB", "pmDch24hCurrentZS"), ("NETI-PM-MIB", "pmDch24hCurrentESs"), ("NETI-PM-MIB", "pmDch24hCurrentSESs"), ("NETI-PM-MIB", "pmDch24hCurrentBBEs"), ("NETI-PM-MIB", "pmDch24hCurrentUASs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pmDchConformanceGroup = pmDchConformanceGroup.setStatus('current')
if mibBuilder.loadTexts: pmDchConformanceGroup.setDescription('The PM Channel Conformance Group.')
mibBuilder.exportSymbols("NETI-PM-MIB", pmTifCurrentESs=pmTifCurrentESs, pmTif15mSuspect=pmTif15mSuspect, pmDchTable=pmDchTable, pmTifEntry=pmTifEntry, pmDchCurrentEntry=pmDchCurrentEntry, pmDch24hCurrentEntry=pmDch24hCurrentEntry, pmDch15mUASs=pmDch15mUASs, pmAifDataSource=pmAifDataSource, netiPMMIBObjects=netiPMMIBObjects, pmAif24hCurrentUASs=pmAif24hCurrentUASs, pmDchFailure=pmDchFailure, pmDch24hTresholdES=pmDch24hTresholdES, pmDch24hSESs=pmDch24hSESs, pmAif24hZS=pmAif24hZS, pmTif15mTime=pmTif15mTime, pmDch15mZS=pmDch15mZS, pmDchIndex=pmDchIndex, pmTif24hSSs=pmTif24hSSs, pmDch15mESs=pmDch15mESs, pmTifUatAlarmsEnabled=pmTifUatAlarmsEnabled, pmTif15mTresholdSS=pmTif15mTresholdSS, pmTif24hTime=pmTif24hTime, pmAifHistorySize=pmAifHistorySize, pmAif24hCurrentBBEs=pmAif24hCurrentBBEs, pmTifCurrentTable=pmTifCurrentTable, pmTifCurrentTime=pmTifCurrentTime, pmTifTable=pmTifTable, pmDchCurrentESs=pmDchCurrentESs, pmTif24hBBEs=pmTif24hBBEs, pmAif15mTresholdSES=pmAif15mTresholdSES, pmAifCurrentSuspect=pmAifCurrentSuspect, pmAifOperStatus=pmAifOperStatus, pmTif24hCurrentTime=pmTif24hCurrentTime, pmDch15mTresholdES=pmDch15mTresholdES, pmDchUatAlarmsEnabled=pmDchUatAlarmsEnabled, pmTif15mSSs=pmTif15mSSs, pmTifDataSourceName=pmTifDataSourceName, pmTif24hCurrentSSs=pmTif24hCurrentSSs, pmAifEntry=pmAifEntry, pmTif24hCurrentEntry=pmTif24hCurrentEntry, pmDch15mTime=pmDch15mTime, pmAifZeroSuppressionEnabled=pmAifZeroSuppressionEnabled, pmAif15mTable=pmAif15mTable, pmTif24hSuspect=pmTif24hSuspect, pmAifPeriodicEventsEnabled=pmAifPeriodicEventsEnabled, pmTif24hTresholdES=pmTif24hTresholdES, pmDch24hCurrentSuspect=pmDch24hCurrentSuspect, pmAifConformanceGroup=pmAifConformanceGroup, pmAif24hSuspect=pmAif24hSuspect, pmTifCurrentSSs=pmTifCurrentSSs, pmTifCurrentEntry=pmTifCurrentEntry, pmAif24hEntry=pmAif24hEntry, pmTifOperStatus=pmTifOperStatus, pmTif15mTresholdBBE=pmTif15mTresholdBBE, pmAif24hUASs=pmAif24hUASs, pmDchZeroSuppressionEnabled=pmDchZeroSuppressionEnabled, pmTifDataSource=pmTifDataSource, pmTifCurrentZS=pmTifCurrentZS, pmAifAdminStatus=pmAifAdminStatus, pmDch15mIndex=pmDch15mIndex, pmDch24hCurrentZS=pmDch24hCurrentZS, pmAif24hCurrentTable=pmAif24hCurrentTable, pmDch24hCurrentUASs=pmDch24hCurrentUASs, pmDch24hEntry=pmDch24hEntry, pmDchDataSource=pmDchDataSource, pmDchCurrentTable=pmDchCurrentTable, pmDchOperStatus=pmDchOperStatus, pmDch24hUASs=pmDch24hUASs, pmDchConformanceGroup=pmDchConformanceGroup, pmDch24hBBEs=pmDch24hBBEs, pmAif24hSESs=pmAif24hSESs, pmAifCurrentESs=pmAifCurrentESs, pmAif15mZS=pmAif15mZS, pmAif24hCurrentTime=pmAif24hCurrentTime, pmTif24hESs=pmTif24hESs, pmAifCurrentSESs=pmAifCurrentSESs, pmAifCurrentZS=pmAifCurrentZS, pmAifUatAlarmsEnabled=pmAifUatAlarmsEnabled, pmTifCurrentBBEs=pmTifCurrentBBEs, pmDchCurrentSESs=pmDchCurrentSESs, pmDch15mBBEs=pmDch15mBBEs, pmAif24hCurrentZS=pmAif24hCurrentZS, netiPMMIB=netiPMMIB, pmTif24hTresholdBBE=pmTif24hTresholdBBE, pmAifCurrentUASs=pmAifCurrentUASs, pmDch15mEntry=pmDch15mEntry, pmTif24hCurrentBBEs=pmTif24hCurrentBBEs, pmAif24hTime=pmAif24hTime, pmDch24hIndex=pmDch24hIndex, pmDch24hCurrentBBEs=pmDch24hCurrentBBEs, pmTif24hSESs=pmTif24hSESs, pmTifAdminStatus=pmTifAdminStatus, pmAif24hTable=pmAif24hTable, pmTif15mUASs=pmTif15mUASs, pmTif15mBBEs=pmTif15mBBEs, pmAifTresholdAlarmsEnabled=pmAifTresholdAlarmsEnabled, pmAifIndex=pmAifIndex, pmTifPeriodicEventsEnabled=pmTifPeriodicEventsEnabled, pmAifTable=pmAifTable, pmTif24hIndex=pmTif24hIndex, pmDch15mTresholdBBE=pmDch15mTresholdBBE, pmAifCurrentTable=pmAifCurrentTable, pmDch15mSESs=pmDch15mSESs, pmTif24hCurrentUASs=pmTif24hCurrentUASs, pmDchCurrentBBEs=pmDchCurrentBBEs, pmTif15mSESs=pmTif15mSESs, pmAif15mIndex=pmAif15mIndex, pmTif24hTresholdSES=pmTif24hTresholdSES, pmTif15mTable=pmTif15mTable, pmAif15mTime=pmAif15mTime, pmDchPeriodicEventsEnabled=pmDchPeriodicEventsEnabled, pmAifCurrentEntry=pmAifCurrentEntry, pmAif15mSuspect=pmAif15mSuspect, pmDch24hSuspect=pmDch24hSuspect, pmDchGroup=pmDchGroup, pmDch24hTresholdSES=pmDch24hTresholdSES, pmTifCurrentSuspect=pmTifCurrentSuspect, pmTif24hCurrentSESs=pmTif24hCurrentSESs, pmConformanceGroups=pmConformanceGroups, pmTifGroup=pmTifGroup, pmTif24hCurrentZS=pmTif24hCurrentZS, pmAif15mBBEs=pmAif15mBBEs, pmAif24hCurrentEntry=pmAif24hCurrentEntry, pmDch15mTable=pmDch15mTable, pmTifIndex=pmTifIndex, pmTif15mESs=pmTif15mESs, pmDch24hCurrentTime=pmDch24hCurrentTime, pmAifCurrentTime=pmAifCurrentTime, pmTif24hCurrentESs=pmTif24hCurrentESs, pmTif24hCurrentTable=pmTif24hCurrentTable, pmTif24hEntry=pmTif24hEntry, pmAif15mESs=pmAif15mESs, pmDchAdminStatus=pmDchAdminStatus, pmDch24hTable=pmDch24hTable, pmDch15mSuspect=pmDch15mSuspect, pmAif15mTresholdBBE=pmAif15mTresholdBBE, pmAif15mSESs=pmAif15mSESs, pmDchCurrentZS=pmDchCurrentZS, pmDch24hTresholdBBE=pmDch24hTresholdBBE, pmTif15mTresholdES=pmTif15mTresholdES, pmDchCurrentSuspect=pmDchCurrentSuspect, pmTifTresholdAlarmsEnabled=pmTifTresholdAlarmsEnabled, pmAif24hTresholdBBE=pmAif24hTresholdBBE, pmDch24hCurrentTable=pmDch24hCurrentTable, pmTif24hTable=pmTif24hTable, pmTifZeroSuppressionEnabled=pmTifZeroSuppressionEnabled, pmAif24hTresholdSES=pmAif24hTresholdSES, pmAif24hCurrentESs=pmAif24hCurrentESs, pmAifGroup=pmAifGroup, pmTif24hCurrentSuspect=pmTif24hCurrentSuspect, pmAif24hTresholdES=pmAif24hTresholdES, pmAifCurrentBBEs=pmAifCurrentBBEs, pmAif24hCurrentSESs=pmAif24hCurrentSESs, pmDch24hESs=pmDch24hESs, pmTif15mTresholdSES=pmTif15mTresholdSES, pmDch24hZS=pmDch24hZS, pmDchEntry=pmDchEntry, pmTifCurrentSESs=pmTifCurrentSESs, pmTif24hZS=pmTif24hZS, pmTifConformanceGroup=pmTifConformanceGroup, pmDchHistorySize=pmDchHistorySize, pmDchDataSourceName=pmDchDataSourceName, pmTif15mZS=pmTif15mZS, pmAif15mEntry=pmAif15mEntry, pmDch15mTresholdSES=pmDch15mTresholdSES, pmAifFailure=pmAifFailure, pmAif24hESs=pmAif24hESs, Counter24h=Counter24h, pmDchCurrentTime=pmDchCurrentTime, pmDch24hCurrentSESs=pmDch24hCurrentSESs, pmTifHistorySize=pmTifHistorySize, pmTif24hUASs=pmTif24hUASs, pmTif15mEntry=pmTif15mEntry, pmAif24hCurrentSuspect=pmAif24hCurrentSuspect, pmDch24hTime=pmDch24hTime, pmAif15mTresholdES=pmAif15mTresholdES, pmTif24hTresholdSS=pmTif24hTresholdSS, pmTifCurrentUASs=pmTifCurrentUASs, pmAif24hBBEs=pmAif24hBBEs, pmAif24hIndex=pmAif24hIndex, pmDchCurrentUASs=pmDchCurrentUASs, pmTifFailure=pmTifFailure, Counter15m=Counter15m, pmDch24hCurrentESs=pmDch24hCurrentESs, PYSNMP_MODULE_ID=netiPMMIB, pmTif15mIndex=pmTif15mIndex, pmAifDataSourceName=pmAifDataSourceName, pmDchTresholdAlarmsEnabled=pmDchTresholdAlarmsEnabled, pmAif15mUASs=pmAif15mUASs)
