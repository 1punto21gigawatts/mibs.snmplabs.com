#
# PySNMP MIB module WWP-LEOS-COMMUNITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-COMMUNITY-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:37:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Gauge32, IpAddress, MibIdentifier, ObjectIdentity, TimeTicks, Bits, ModuleIdentity, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "IpAddress", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Bits", "ModuleIdentity", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Unsigned32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosCommunityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22))
wwpLeosCommunityMIB.setRevisions(('2001-04-03 17:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: wwpLeosCommunityMIB.setRevisionsDescriptions(('Initial creation.',))
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setOrganization('World Wide Packets, Inc')
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setContactInfo(' Mib Meister Postal: World Wide Packets P.O. Box 950 Veradale, WA 99037 USA Phone: +1 509 242 9000 Email: mib.meister@worldwidepackets.com')
if mibBuilder.loadTexts: wwpLeosCommunityMIB.setDescription('The MIB module for the WWP Community specific information.')
wwpLeosCommunityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1))
wwpLeosCommunity = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1))
wwpLeosCommunityMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 2))
wwpLeosCommunityMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 2, 0))
wwpLeosCommunityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3))
wwpLeosCommunityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3, 1))
wwpLeosCommunityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 3, 2))
wwpLeosCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1), )
if mibBuilder.loadTexts: wwpLeosCommunityTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityTable.setDescription('Table of read/write Community entries. Multiple Set Operation must be used to create entries in the table. Following objects must be set to valid values to create entry wwpLeosCommunityRights, wwpLeosCommunityStatus. If wwpLeosCommunityName is not set to anything then device will set it to public. If wwpLeosCommunityAddr is not set to anything then device will set it to 0.0.0.0. While deleting entry if this is the last entry with read-only or read-write permission then device will not allow to delete entry.')
wwpLeosCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1), ).setIndexNames((0, "WWP-LEOS-COMMUNITY-MIB", "wwpLeosCommunityIndex"))
if mibBuilder.loadTexts: wwpLeosCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityEntry.setDescription('An entry for each read/write community. Multiple Set Operation must be used to create entries in the table.')
wwpLeosCommunityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosCommunityIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityIndex.setDescription('The index used in the table.')
wwpLeosCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityName.setDescription('The Name of Community String. This is mandatory object that needs to be set to create entry.')
wwpLeosCommunityAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityAddr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityAddr.setDescription('The IP Address of the host(s) or the host name with access rights. A value of 0 means that access is allowed to any host. This is mandatory object that needs to be set to create entry.')
wwpLeosCommunityResolvedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosCommunityResolvedIp.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityResolvedIp.setDescription('This object is set to resolved IP address when wwpLeosCommunityAddr is set to host name. If wwpLeosCommunityAddr is set to ip address then this object will contain same IP as wwpLeosCommunityAddr.')
wwpLeosCommunityRights = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityRights.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityRights.setDescription("Rights associated with the Community Strings. The community Name associated with 'readOnly' community Rights will not have any access (read\\write) to the readWrite communities.")
wwpLeosCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosCommunityStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosCommunityStatus.setDescription("To create a row in this table, a manager must set this object to 'createAndGo'. wwpLeosCommunityRights must be valid prior to creating entry. The Agent should not let all the comunities to be deleted as this will cause isolation of the device. At least one readOnly community and one readWrite community should always be present.")
wwpLeosNotifCommunityTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2), )
if mibBuilder.loadTexts: wwpLeosNotifCommunityTable.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityTable.setDescription('Table of Notification Community entries. Multiple set operation must be used to create entries in the table.')
wwpLeosNotifCommunityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1), ).setIndexNames((0, "WWP-LEOS-COMMUNITY-MIB", "wwpLeosNotifIndex"))
if mibBuilder.loadTexts: wwpLeosNotifCommunityEntry.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityEntry.setDescription('An entry for each notification community. Multiple set operation must be used to create entries in the table.')
wwpLeosNotifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNotifIndex.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifIndex.setDescription('The index used in the table.')
wwpLeosNotifCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityName.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityName.setDescription('The Community String to be used for the notifications. This is mandatory object that needs to be set to create entry.')
wwpLeosNotifCommunityDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityDestAddr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityDestAddr.setDescription('The IP address or host names of the host to which notification is to be sent. This is mandatory object that needs to be set to create entry.')
wwpLeosNotifCommunityResolvedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosNotifCommunityResolvedIpAddr.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityResolvedIpAddr.setDescription('This object is set to resolved IP address of host name if wwpLeosNotifCommunityName is set to hostname. If wwpLeosNotifCommunityName is set to ipv4 then this object will contain same IP as wwpLeosNotifCommunityDestAddr.')
wwpLeosNotifCommunityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 22, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosNotifCommunityStatus.setStatus('current')
if mibBuilder.loadTexts: wwpLeosNotifCommunityStatus.setDescription("To create a row in this table, a manager must set this object to 'createAndGo'. This table uses")
mibBuilder.exportSymbols("WWP-LEOS-COMMUNITY-MIB", wwpLeosNotifCommunityStatus=wwpLeosNotifCommunityStatus, wwpLeosCommunityMIB=wwpLeosCommunityMIB, wwpLeosCommunityTable=wwpLeosCommunityTable, wwpLeosCommunityMIBNotifications=wwpLeosCommunityMIBNotifications, wwpLeosNotifCommunityName=wwpLeosNotifCommunityName, wwpLeosNotifCommunityResolvedIpAddr=wwpLeosNotifCommunityResolvedIpAddr, wwpLeosNotifCommunityEntry=wwpLeosNotifCommunityEntry, wwpLeosNotifIndex=wwpLeosNotifIndex, wwpLeosCommunityResolvedIp=wwpLeosCommunityResolvedIp, wwpLeosCommunityMIBGroups=wwpLeosCommunityMIBGroups, wwpLeosNotifCommunityTable=wwpLeosNotifCommunityTable, PYSNMP_MODULE_ID=wwpLeosCommunityMIB, wwpLeosCommunityAddr=wwpLeosCommunityAddr, wwpLeosCommunityStatus=wwpLeosCommunityStatus, wwpLeosCommunityEntry=wwpLeosCommunityEntry, wwpLeosCommunityMIBConformance=wwpLeosCommunityMIBConformance, wwpLeosCommunityName=wwpLeosCommunityName, wwpLeosCommunityMIBObjects=wwpLeosCommunityMIBObjects, wwpLeosCommunityMIBNotificationPrefix=wwpLeosCommunityMIBNotificationPrefix, wwpLeosCommunityMIBCompliances=wwpLeosCommunityMIBCompliances, wwpLeosCommunityIndex=wwpLeosCommunityIndex, wwpLeosNotifCommunityDestAddr=wwpLeosNotifCommunityDestAddr, wwpLeosCommunity=wwpLeosCommunity, wwpLeosCommunityRights=wwpLeosCommunityRights)
