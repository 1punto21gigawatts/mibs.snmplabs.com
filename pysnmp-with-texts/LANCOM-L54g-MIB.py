#
# PySNMP MIB module LANCOM-L54g-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LANCOM-L54g-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:05:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysDescr, sysName = mibBuilder.importSymbols("SNMPv2-MIB", "sysDescr", "sysName")
Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, enterprises, Unsigned32, TimeTicks, iso, ObjectIdentity, MibIdentifier, Counter32, Integer32, IpAddress, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "enterprises", "Unsigned32", "TimeTicks", "iso", "ObjectIdentity", "MibIdentifier", "Counter32", "Integer32", "IpAddress", "ModuleIdentity")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
lancom_systems = MibIdentifier((1, 3, 6, 1, 4, 1, 2356)).setLabel("lancom-systems")
wlan_systems = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600)).setLabel("wlan-systems")
lan_router = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2)).setLabel("lan-router")
lancom_l54g = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54)).setLabel("lancom-l54g")
sta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1))
set = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2))
fir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3))
oth = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4))
staOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staOpera.setStatus('current')
if mibBuilder.loadTexts: staOpera.setDescription('Operating-Time')
staWlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3))
staWlanInterfTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51), )
if mibBuilder.loadTexts: staWlanInterfTable.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfTable.setDescription('Interfaces')
staWlanInterfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: staWlanInterfEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfEntry.setDescription('entry in table')
staWlanInterfIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfIfc.setDescription('Ifc')
staWlanInterfOperatin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfOperatin.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfOperatin.setDescription('Operating')
staWlanInterfOperatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("access-point", 1), ("managed-ap", 4), ("station", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfOperatio.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfOperatio.setDescription('Operation-Mode')
staWlanInterfCardid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfCardid.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfCardid.setDescription('Card-Id')
staWlanInterfSerialnu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfSerialnu.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfSerialnu.setDescription('Serial-Number')
staWlanInterfFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfFirmware.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfFirmware.setDescription('Firmware-Version')
staWlanInterfMacaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfMacaddre.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfMacaddre.setDescription('MAC-Address')
staWlanInterfNumstati = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfNumstati.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfNumstati.setDescription('Num-Stations')
staWlanInterfQueuepac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 51, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterfQueuepac.setStatus('current')
if mibBuilder.loadTexts: staWlanInterfQueuepac.setDescription('Queue-Packets')
staWlanNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56), )
if mibBuilder.loadTexts: staWlanNetworTable.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworTable.setDescription('Networks')
staWlanNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanNetworIfc"))
if mibBuilder.loadTexts: staWlanNetworEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworEntry.setDescription('entry in table')
staWlanNetworIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworIfc.setDescription('Ifc')
staWlanNetworOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworOpe.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworOpe.setDescription('Operating')
staWlanNetworNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworNet.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworNet.setDescription('Network-Name')
staWlanNetworBss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworBss.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworBss.setDescription('BSSID')
staWlanNetworVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworVla.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworVla.setDescription('VLAN-Id')
staWlanNetworNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworNum.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworNum.setDescription('Num-Stations')
staWlanNetworMca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 56, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanNetworMca.setStatus('current')
if mibBuilder.loadTexts: staWlanNetworMca.setDescription('MCast-Pwr-Save')
staWlanBytetrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52), )
if mibBuilder.loadTexts: staWlanBytetrTable.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrTable.setDescription('Byte-Transport')
staWlanBytetrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanBytetrIfc"))
if mibBuilder.loadTexts: staWlanBytetrEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrEntry.setDescription('entry in table')
staWlanBytetrIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrIfc.setDescription('Ifc')
staWlanBytetrTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrTxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrTxbyte.setDescription('Tx-Bytes')
staWlanBytetrRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrRxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrRxbyte.setDescription('Rx-Bytes')
staWlanBytetrThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrThroug.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrThroug.setDescription('Throughput')
staWlanBytetrMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrMaxthr.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrMaxthr.setDescription('Max.-Throughput')
staWlanBytetrBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrBytest.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrBytest.setDescription('Bytes-Throughput')
staWlanBytetrBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanBytetrBytesm.setStatus('current')
if mibBuilder.loadTexts: staWlanBytetrBytesm.setDescription('Bytes-Max.-Throughput')
staWlanPacketTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53), )
if mibBuilder.loadTexts: staWlanPacketTable.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTable.setDescription('Packet-Transport')
staWlanPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanPacketIfc"))
if mibBuilder.loadTexts: staWlanPacketEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketEntry.setDescription('entry in table')
staWlanPacketIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketIfc.setDescription('Ifc')
staWlanPacketRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxp.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketRxp.setDescription('Rx-Packets')
staWlanPacketTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxp.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTxp.setDescription('Tx-Packets')
staWlanPacketRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxb.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketRxb.setDescription('Rx-Broadcasts')
staWlanPacketRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxm.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketRxm.setDescription('Rx-Multicasts')
staWlanPacketRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxu.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketRxu.setDescription('Rx-Unicasts')
staWlanPacketRxc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketRxc.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketRxc.setDescription('Rx-Compressed')
staWlanPacketTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxb.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTxb.setDescription('Tx-Broadcasts')
staWlanPacketTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxm.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTxm.setDescription('Tx-Multicasts')
staWlanPacketTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxu.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTxu.setDescription('Tx-Unicasts')
staWlanPacketTxc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 53, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPacketTxc.setStatus('current')
if mibBuilder.loadTexts: staWlanPacketTxc.setDescription('Tx-Compressed')
staWlanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54), )
if mibBuilder.loadTexts: staWlanErrorsTable.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsTable.setDescription('Errors')
staWlanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanErrorsIfc"))
if mibBuilder.loadTexts: staWlanErrorsEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsEntry.setDescription('entry in table')
staWlanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsIfc.setDescription('Ifc')
staWlanErrorsRxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRxerro.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsRxerro.setDescription('Rx-Errors')
staWlanErrorsTxerro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsTxerro.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsTxerro.setDescription('Tx-Errors')
staWlanErrorsStacke = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsStacke.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsStacke.setDescription('Stack-Errors')
staWlanErrorsNicerr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsNicerr.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsNicerr.setDescription('NIC-Errors')
staWlanErrorsQueuee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsQueuee.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsQueuee.setDescription('Queue-Errors')
staWlanErrorsTxdisc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsTxdisc.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsTxdisc.setDescription('Tx-Discarded')
staWlanErrorsRetrie = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRetrie.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsRetrie.setDescription('Retries')
staWlanErrorsMultip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsMultip.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsMultip.setDescription('Multiple-Retries')
staWlanErrorsSoftre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsSoftre.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsSoftre.setDescription('Soft-Retries')
staWlanErrorsDupedi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsDupedi.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsDupedi.setDescription('Dupe-Discarded')
staWlanErrorsUndecr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsUndecr.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsUndecr.setDescription('Undecryptables')
staWlanErrorsUndeco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsUndeco.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsUndeco.setDescription('Undecompressables')
staWlanErrorsAged = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsAged.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsAged.setDescription('Aged')
staWlanErrorsMichae = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsMichae.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsMichae.setDescription('Michael-Errors')
staWlanErrorsIvsequ = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsIvsequ.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsIvsequ.setDescription('IV-Sequence-Errors')
staWlanErrorsRxcrce = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 54, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanErrorsRxcrce.setStatus('current')
if mibBuilder.loadTexts: staWlanErrorsRxcrce.setDescription('Rx-CRC-Errors')
staWlanWlanpaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55), )
if mibBuilder.loadTexts: staWlanWlanpaTable.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaTable.setDescription('WLAN-Parameter')
staWlanWlanpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanWlanpaIfc"))
if mibBuilder.loadTexts: staWlanWlanpaEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaEntry.setDescription('entry in table')
staWlanWlanpaIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaIfc.setDescription('Ifc')
staWlanWlanpaRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRadioband.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaRadioband.setDescription('Radio-Band')
staWlanWlanpaRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRadiochannel.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaRadiochannel.setDescription('Radio-Channel')
staWlanWlanpa108mbpsmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpa108mbpsmode.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpa108mbpsmode.setDescription('108Mbps-Mode')
staWlanWlanpaNoiselevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaNoiselevel.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaNoiselevel.setDescription('Noise-Level')
staWlanWlanpaModemload = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaModemload.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaModemload.setDescription('Modem-Load')
staWlanWlanpaTransmitpower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTransmitpower.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaTransmitpower.setDescription('Transmit-Power')
staWlanWlanpaEirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaEirp.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaEirp.setDescription('EIRP')
staWlanWlanpaExceirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaExceirp.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaExceirp.setDescription('Exc.-EIRP')
staWlanWlanpaBeaconperiod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaBeaconperiod.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaBeaconperiod.setDescription('Beacon-Period')
staWlanWlanpaRegulatorydoma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16, 32, 48, 49, 50, 64, 65, 80, 96))).clone(namedValues=NamedValues(("undefined", 0), ("fcc", 16), ("canada", 32), ("eu-etsi", 48), ("spain", 49), ("france", 50), ("mkk-japan", 64), ("mkk2-japan", 65), ("israel", 80), ("world", 96)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaRegulatorydoma.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaRegulatorydoma.setDescription('Regulatory-Domain')
staWlanWlanpaPhytype = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 254))).clone(namedValues=NamedValues(("proprietary", 0), ("fhss", 1), ("dsss", 2), ("infrared", 3), ("ofdm", 4), ("hr-dsss", 5), ("erp", 6), ("ht", 7), ("pbcc", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaPhytype.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaPhytype.setDescription('PHY-Type')
staWlanWlanpaWepsupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("yes-40-bits", 1), ("yes-104-bits", 2), ("yes-128-bits", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaWepsupport.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaWepsupport.setDescription('WEP-Support')
staWlanWlanpaTkipsupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTkipsupport.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaTkipsupport.setDescription('TKIP-Support')
staWlanWlanpaAessupport = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("ocb", 1), ("ccm", 2), ("ocb-plus-ccm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaAessupport.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaAessupport.setDescription('AES-Support')
staWlanWlanpaMinimumrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaMinimumrate.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaMinimumrate.setDescription('Minimum-Rate')
staWlanWlanpaMaximumrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaMaximumrate.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaMaximumrate.setDescription('Maximum-Rate')
staWlanWlanpaTemperatureran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("commercial-0-plus-40-degree-c", 1), ("industrial-minus-30-plus-70-degree-c", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaTemperatureran.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaTemperatureran.setDescription('Temperature-Range')
staWlanWlanpaPhyvariant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaPhyvariant.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaPhyvariant.setDescription('PHY-Variant')
staWlanWlanpaSupportedbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportedbands.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaSupportedbands.setDescription('Supported-Bands')
staWlanWlanpaSupports108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupports108mbp.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaSupports108mbp.setDescription('Supports-108Mbps-Mode')
staWlanWlanpaSupportsshortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportsshortp.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaSupportsshortp.setDescription('Supports-Short-Preamble')
staWlanWlanpaSupportsshorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportsshorts.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaSupportsshorts.setDescription('Supports-Short-Slot-Time')
staWlanWlanpaSupportscompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 55, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanWlanpaSupportscompre.setStatus('current')
if mibBuilder.loadTexts: staWlanWlanpaSupportscompre.setDescription('Supports-Compression')
staWlanRadiosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57), )
if mibBuilder.loadTexts: staWlanRadiosTable.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosTable.setDescription('Radios')
staWlanRadiosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanRadiosIfc"))
if mibBuilder.loadTexts: staWlanRadiosEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosEntry.setDescription('entry in table')
staWlanRadiosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosIfc.setDescription('Ifc')
staWlanRadiosRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosRadioband.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosRadioband.setDescription('Radio-Band')
staWlanRadiosRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosRadiochannel.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosRadiochannel.setDescription('Radio-Channel')
staWlanRadios108mbpsmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadios108mbpsmode.setStatus('current')
if mibBuilder.loadTexts: staWlanRadios108mbpsmode.setDescription('108Mbps-Mode')
staWlanRadiosExtchannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosExtchannel.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosExtchannel.setDescription('Ext.-Channel')
staWlanRadiosNoiselevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosNoiselevel.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosNoiselevel.setDescription('Noise-Level')
staWlanRadiosModemload = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosModemload.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosModemload.setDescription('Modem-Load')
staWlanRadiosTransmitpower = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosTransmitpower.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosTransmitpower.setDescription('Transmit-Power')
staWlanRadiosEirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosEirp.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosEirp.setDescription('EIRP')
staWlanRadiosExceirp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosExceirp.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosExceirp.setDescription('Exc.-EIRP')
staWlanRadiosBackgroundscan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosBackgroundscan.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosBackgroundscan.setDescription('Background-Scan')
staWlanRadiosBackgroundscanu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 57, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("seconds", 0), ("milliseconds", 1), ("microseconds", 2), ("minutes", 3), ("hours", 4), ("days", 5), ("weeks", 6), ("fortnights", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiosBackgroundscanu.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiosBackgroundscanu.setDescription('Background-Scan-Unit')
staWlanScanreTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34), )
if mibBuilder.loadTexts: staWlanScanreTable.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreTable.setDescription('Scan-Results')
staWlanScanreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanScanreBssid"), (0, "LANCOM-L54g-MIB", "staWlanScanreInterf"))
if mibBuilder.loadTexts: staWlanScanreEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreEntry.setDescription('entry in table')
staWlanScanreBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreBssid.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreBssid.setDescription('BSSID')
staWlanScanreInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreInterf.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreInterf.setDescription('Interface')
staWlanScanreNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNetwor.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreNetwor.setDescription('Network-Name')
staWlanScanreOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreOperat.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreOperat.setDescription('Operation-Mode')
staWlanScanreEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("aes-plus-tkip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreEncryp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreEncryp.setDescription('Encryption')
staWlanScanreBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreBeacon.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreBeacon.setDescription('Beacon-Period')
staWlanScanreDtimpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreDtimpe.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreDtimpe.setDescription('DTIM-Period')
staWlanScanrePcffun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("delivery", 1), ("delivery-plus-polling", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanrePcffun.setStatus('current')
if mibBuilder.loadTexts: staWlanScanrePcffun.setDescription('PCF-Functionality')
staWlanScanreQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreQos.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreQos.setDescription('QoS')
staWlanScanreMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreMaxamp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreMaxamp.setDescription('Max-A-MPDU-Len')
staWlanScanreMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreMaxams.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreMaxams.setDescription('Max-A-MSDU-Len')
staWlanScanreRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRadiob.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreRadiob.setDescription('Radio-Band')
staWlanScanreRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRadioc.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreRadioc.setDescription('Radio-Channel')
staWlanScanre108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre108mbp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanre108mbp.setDescription('108Mbps-Mode')
staWlanScanreExtcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreExtcha.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreExtcha.setDescription('Ext.-Channel')
staWlanScanrePhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanrePhysig.setStatus('current')
if mibBuilder.loadTexts: staWlanScanrePhysig.setDescription('Phy-Signal')
staWlanScanreSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreSignal.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreSignal.setDescription('Signal-Level')
staWlanScanreNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNoisel.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreNoisel.setDescription('Noise-Level')
staWlanScanreLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreLoad.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreLoad.setDescription('Load')
staWlanScanreShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShortp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreShortp.setDescription('Short-Preamble')
staWlanScanreShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShorts.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreShorts.setDescription('Short-Slot-Time')
staWlanScanre40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre40mhzm.setStatus('current')
if mibBuilder.loadTexts: staWlanScanre40mhzm.setDescription('40MHz-Mode')
staWlanScanre40mhzi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanre40mhzi.setStatus('current')
if mibBuilder.loadTexts: staWlanScanre40mhzi.setDescription('40MHz-Intolerant')
staWlanScanreShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreShortg.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreShortg.setDescription('Short-Guard-Interval')
staWlanScanreCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreCompre.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreCompre.setDescription('Compression')
staWlanScanreAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreAge.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreAge.setDescription('Age')
staWlanScanreRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreRate.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreRate.setDescription('Rate')
staWlanScanreNonerp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreNonerp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreNonerp.setDescription('NonERP-Present')
staWlanScanreIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreIdenti.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreIdenti.setDescription('Identification')
staWlanScanreInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 34, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanScanreInterp.setStatus('current')
if mibBuilder.loadTexts: staWlanScanreInterp.setDescription('Interpoint-Peer-Name')
staWlanInterp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36))
staWlanInterpAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1), )
if mibBuilder.loadTexts: staWlanInterpAccTable.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccTable.setDescription('Accesspoint-List')
staWlanInterpAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanInterpAccIndex"))
if mibBuilder.loadTexts: staWlanInterpAccEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccEntry.setDescription('entry in table')
staWlanInterpAccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccIndex.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccIndex.setDescription('Index')
staWlanInterpAccMacadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMacadd.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccMacadd.setDescription('MAC-Address')
staWlanInterpAccRxphys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxphys.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccRxphys.setDescription('Rx-Phy-Signal')
staWlanInterpAccTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccTxrate.setDescription('Tx-Rate')
staWlanInterpAccRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccRxrate.setDescription('Rx-Rate')
staWlanInterpAccLinkph = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccLinkph.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccLinkph.setDescription('Link-Phy-Signal')
staWlanInterpAccAntenn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccAntenn.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccAntenn.setDescription('Antenna')
staWlanInterpAccIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccIdenti.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccIdenti.setDescription('Identification')
staWlanInterpAccInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccInterp.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccInterp.setDescription('Interpoint-Peer-Name')
staWlanInterpAccQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccQos.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccQos.setDescription('QoS')
staWlanInterpAccShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccShortp.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccShortp.setDescription('Short-Preamble')
staWlanInterpAccCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccCompre.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccCompre.setDescription('Compression')
staWlanInterpAccKeyhan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("supplicant", 1), ("authenticator", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccKeyhan.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccKeyhan.setDescription('Key-Handshake-Role')
staWlanInterpAccKeying = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("pending", 1), ("done", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccKeying.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccKeying.setDescription('Keying-State')
staWlanInterpAccWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccWpaver.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccWpaver.setDescription('WPA-Version')
staWlanInterpAccTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccTxbyte.setDescription('Tx-Bytes')
staWlanInterpAccRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccRxbyte.setDescription('Rx-Bytes')
staWlanInterpAccThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccThroug.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccThroug.setDescription('Throughput')
staWlanInterpAccMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccMaxthr.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccMaxthr.setDescription('Max.-Throughput')
staWlanInterpAccBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccBytest.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccBytest.setDescription('Bytes-Throughput')
staWlanInterpAccBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccBytesm.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccBytesm.setDescription('Bytes-Max.-Throughput')
staWlanInterpAccTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccTxpack.setDescription('Tx-Packets')
staWlanInterpAccRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccRxpack.setDescription('Rx-Packets')
staWlanInterpAccTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccTxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccTxlimi.setDescription('Tx-Limit')
staWlanInterpAccRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpAccRxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpAccRxlimi.setDescription('Rx-Limit')
staWlanInterpKeyTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3), )
if mibBuilder.loadTexts: staWlanInterpKeyTable.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyTable.setDescription('Key-List')
staWlanInterpKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanInterpKeyInde"))
if mibBuilder.loadTexts: staWlanInterpKeyEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyEntry.setDescription('entry in table')
staWlanInterpKeyInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyInde.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyInde.setDescription('Index')
staWlanInterpKeySour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeySour.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeySour.setDescription('Source')
staWlanInterpKeyKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyKeyt.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyKeyt.setDescription('Key-Type')
staWlanInterpKeyKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyKeyv.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyKeyv.setDescription('Key-Value')
staWlanInterpKeyTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyTsc.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyTsc.setDescription('TSC')
staWlanInterpKeyRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 36, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanInterpKeyRsc.setStatus('current')
if mibBuilder.loadTexts: staWlanInterpKeyRsc.setDescription('RSC')
staWlanIapptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38), )
if mibBuilder.loadTexts: staWlanIapptaTable.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaTable.setDescription('IAPP-Table')
staWlanIapptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanIapptaBssid"), (0, "LANCOM-L54g-MIB", "staWlanIapptaIpadd"), (0, "LANCOM-L54g-MIB", "staWlanIapptaNetwo"))
if mibBuilder.loadTexts: staWlanIapptaEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaEntry.setDescription('entry in table')
staWlanIapptaBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaBssid.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaBssid.setDescription('BSSID')
staWlanIapptaIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaIpadd.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaIpadd.setDescription('IP-Address')
staWlanIapptaNetwo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaNetwo.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaNetwo.setDescription('Network-name')
staWlanIapptaTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaTimer.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaTimer.setDescription('Timer')
staWlanIapptaTimeo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaTimeo.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaTimeo.setDescription('Timeout')
staWlanIapptaCapab = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 38, 1, 5), Bits().clone(namedValues=NamedValues(("wep", 32), ("forward", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanIapptaCapab.setStatus('current')
if mibBuilder.loadTexts: staWlanIapptaCapab.setDescription('Capabilities')
staWlanForeigTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 40), )
if mibBuilder.loadTexts: staWlanForeigTable.setStatus('current')
if mibBuilder.loadTexts: staWlanForeigTable.setDescription('Foreign-Stations')
staWlanForeigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 40, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanForeigMac"))
if mibBuilder.loadTexts: staWlanForeigEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanForeigEntry.setDescription('entry in table')
staWlanForeigMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 40, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanForeigMac.setStatus('current')
if mibBuilder.loadTexts: staWlanForeigMac.setDescription('MAC-Address')
staWlanGroupeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41), )
if mibBuilder.loadTexts: staWlanGroupeTable.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeTable.setDescription('Group-Encryption-Keys')
staWlanGroupeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanGroupeInde"))
if mibBuilder.loadTexts: staWlanGroupeEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeEntry.setDescription('entry in table')
staWlanGroupeInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeInde.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeInde.setDescription('Index')
staWlanGroupeSour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeSour.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeSour.setDescription('Source')
staWlanGroupeKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeKeyt.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeKeyt.setDescription('Key-Type')
staWlanGroupeKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeKeyv.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeKeyv.setDescription('Key-Value')
staWlanGroupeTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeTsc.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeTsc.setDescription('TSC')
staWlanGroupeRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 41, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanGroupeRsc.setStatus('current')
if mibBuilder.loadTexts: staWlanGroupeRsc.setDescription('RSC')
staWlanChanneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42), )
if mibBuilder.loadTexts: staWlanChanneTable.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneTable.setDescription('Channel-Scan-Results')
staWlanChanneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanChanneRadiob"), (0, "LANCOM-L54g-MIB", "staWlanChanneRadioc"))
if mibBuilder.loadTexts: staWlanChanneEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneEntry.setDescription('entry in table')
staWlanChanneRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadiob.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneRadiob.setDescription('Radio-Band')
staWlanChanneRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadioc.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneRadioc.setDescription('Radio-Channel')
staWlanChanne108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanne108mbp.setStatus('current')
if mibBuilder.loadTexts: staWlanChanne108mbp.setDescription('108Mbps-Mode')
staWlanChanneInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneInterf.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneInterf.setDescription('Interface')
staWlanChanneDfssta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 0, 1))).clone(namedValues=NamedValues(("unknown", 2), ("clear", 0), ("blocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneDfssta.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneDfssta.setDescription('DFS-State')
staWlanChanneRemtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRemtim.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneRemtim.setDescription('Rem.-Time')
staWlanChanneScanne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneScanne.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneScanne.setDescription('Scanned')
staWlanChanneNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneNoisel.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneNoisel.setDescription('Noise-Level')
staWlanChanneNumbss = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneNumbss.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneNumbss.setDescription('Num-BSS')
staWlanChannePulsec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChannePulsec.setStatus('current')
if mibBuilder.loadTexts: staWlanChannePulsec.setDescription('Pulse-Count')
staWlanChanneRadard = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadard.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneRadard.setDescription('Radar-Detected')
staWlanChanneRadarp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 42, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanChanneRadarp.setStatus('current')
if mibBuilder.loadTexts: staWlanChanneRadarp.setDescription('Radar-Pattern')
staWlanClient = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43))
staWlanClientIptranTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 1), )
if mibBuilder.loadTexts: staWlanClientIptranTable.setStatus('current')
if mibBuilder.loadTexts: staWlanClientIptranTable.setDescription('IP-Translation-Table')
staWlanClientIptranEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanClientIptranIpa"))
if mibBuilder.loadTexts: staWlanClientIptranEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanClientIptranEntry.setDescription('entry in table')
staWlanClientIptranIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranIpa.setStatus('current')
if mibBuilder.loadTexts: staWlanClientIptranIpa.setDescription('IP-Address')
staWlanClientIptranMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranMac.setStatus('current')
if mibBuilder.loadTexts: staWlanClientIptranMac.setDescription('MAC-Address')
staWlanClientIptranAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientIptranAge.setStatus('current')
if mibBuilder.loadTexts: staWlanClientIptranAge.setDescription('Age')
staWlanClientPppoeiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 10), )
if mibBuilder.loadTexts: staWlanClientPppoeiTable.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeiTable.setDescription('PPPoE-ID-Translation-Table')
staWlanClientPppoeiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanClientPppoeiSes"))
if mibBuilder.loadTexts: staWlanClientPppoeiEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeiEntry.setDescription('entry in table')
staWlanClientPppoeiSes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiSes.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeiSes.setDescription('Session-Id')
staWlanClientPppoeiMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiMac.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeiMac.setDescription('MAC-Address')
staWlanClientPppoeiAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeiAge.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeiAge.setDescription('Age')
staWlanClientPppoeuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11), )
if mibBuilder.loadTexts: staWlanClientPppoeuTable.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuTable.setDescription('PPPoE-Uniq-Translation-Table')
staWlanClientPppoeuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanClientPppoeuHostuniql"), (0, "LANCOM-L54g-MIB", "staWlanClientPppoeuHostuniq"))
if mibBuilder.loadTexts: staWlanClientPppoeuEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuEntry.setDescription('entry in table')
staWlanClientPppoeuHostuniql = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniql.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniql.setDescription('Host-Uniq-Len')
staWlanClientPppoeuHostuniq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniq.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuHostuniq.setDescription('Host-Uniq')
staWlanClientPppoeuMacaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuMacaddres.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuMacaddres.setDescription('MAC-Address')
staWlanClientPppoeuAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientPppoeuAge.setStatus('current')
if mibBuilder.loadTexts: staWlanClientPppoeuAge.setDescription('Age')
staWlanClientInterfTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51), )
if mibBuilder.loadTexts: staWlanClientInterfTable.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfTable.setDescription('Interfaces')
staWlanClientInterfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanClientInterfIfc"))
if mibBuilder.loadTexts: staWlanClientInterfEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfEntry.setDescription('entry in table')
staWlanClientInterfIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfIfc.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfIfc.setDescription('Ifc')
staWlanClientInterfState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 6, 5, 7, 2, 9, 10, 8, 3))).clone(namedValues=NamedValues(("none", 0), ("scanning", 6), ("joined", 5), ("challenge", 7), ("authenticated", 2), ("associated", 9), ("e1x-negotiation", 10), ("key-handshake", 8), ("connected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfState.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfState.setDescription('State')
staWlanClientInterfStatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfStatio.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfStatio.setDescription('Station-Mode')
staWlanClientInterfConnec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfConnec.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfConnec.setDescription('Connect-Time')
staWlanClientInterfAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfAid.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfAid.setDescription('AID')
staWlanClientInterfPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfPhysig.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfPhysig.setDescription('Phy-Signal')
staWlanClientInterfLinkph = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfLinkph.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfLinkph.setDescription('Link-Phy-Signal')
staWlanClientInterfLinksi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfLinksi.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfLinksi.setDescription('Link-Signal-Level')
staWlanClientInterfAntenn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfAntenn.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfAntenn.setDescription('Antenna')
staWlanClientInterfIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfIdenti.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfIdenti.setDescription('Identification')
staWlanClientInterfTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfTxrate.setDescription('Tx-Rate')
staWlanClientInterfRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfRxrate.setDescription('Rx-Rate')
staWlanClientInterfTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfTxbyte.setDescription('Tx-Bytes')
staWlanClientInterfRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfRxbyte.setDescription('Rx-Bytes')
staWlanClientInterfThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfThroug.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfThroug.setDescription('Throughput')
staWlanClientInterfMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfMaxthr.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfMaxthr.setDescription('Max.-Throughput')
staWlanClientInterfBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfBytest.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfBytest.setDescription('Bytes-Throughput')
staWlanClientInterfBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfBytesm.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfBytesm.setDescription('Bytes-Max.-Throughput')
staWlanClientInterfTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfTxpack.setDescription('Tx-Packets')
staWlanClientInterfRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfRxpack.setDescription('Rx-Packets')
staWlanClientInterfTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfTxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfTxlimi.setDescription('Tx-Limit')
staWlanClientInterfRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfRxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfRxlimi.setDescription('Rx-Limit')
staWlanClientInterfCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfCompre.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfCompre.setDescription('Compression')
staWlanClientInterfClbrgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfClbrgs.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfClbrgs.setDescription('Cl.-Brg.-Support')
staWlanClientInterfWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfWpaver.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfWpaver.setDescription('WPA-Version')
staWlanClientInterfQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 43, 51, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanClientInterfQos.setStatus('current')
if mibBuilder.loadTexts: staWlanClientInterfQos.setDescription('QoS')
staWlanSeenclTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45), )
if mibBuilder.loadTexts: staWlanSeenclTable.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclTable.setDescription('Seen-Clients')
staWlanSeenclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanSeenclMac"), (0, "LANCOM-L54g-MIB", "staWlanSeenclInt"))
if mibBuilder.loadTexts: staWlanSeenclEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclEntry.setDescription('entry in table')
staWlanSeenclMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclMac.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclMac.setDescription('MAC-Address')
staWlanSeenclInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclInt.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclInt.setDescription('Interface')
staWlanSeenclSig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclSig.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclSig.setDescription('Signal-Level')
staWlanSeenclRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclRxp.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclRxp.setDescription('Rx-Phy-Signal')
staWlanSeenclAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclAge.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclAge.setDescription('Age')
staWlanSeenclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclNum.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclNum.setDescription('Num-Probes')
staWlanSeenclNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 45, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanSeenclNet.setStatus('current')
if mibBuilder.loadTexts: staWlanSeenclNet.setDescription('Network-Name')
staWlanLogtabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46), )
if mibBuilder.loadTexts: staWlanLogtabTable.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabTable.setDescription('Log-Table')
staWlanLogtabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanLogtabInd"))
if mibBuilder.loadTexts: staWlanLogtabEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabEntry.setDescription('entry in table')
staWlanLogtabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabInd.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabInd.setDescription('Index')
staWlanLogtabTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabTim.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabTim.setDescription('Time')
staWlanLogtabInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabInt.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabInt.setDescription('Interface')
staWlanLogtabEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabEve.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabEve.setDescription('Event')
staWlanLogtabAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabAdd.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabAdd.setDescription('Address')
staWlanLogtabRea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 46, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanLogtabRea.setStatus('current')
if mibBuilder.loadTexts: staWlanLogtabRea.setDescription('Reason')
staWlanDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWlanDelete.setStatus('current')
if mibBuilder.loadTexts: staWlanDelete.setDescription('Delete-Values')
staWlanPairwiTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47), )
if mibBuilder.loadTexts: staWlanPairwiTable.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiTable.setDescription('Pairwise-Keys')
staWlanPairwiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanPairwiInde"))
if mibBuilder.loadTexts: staWlanPairwiEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiEntry.setDescription('entry in table')
staWlanPairwiInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiInde.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiInde.setDescription('Index')
staWlanPairwiKeyt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiKeyt.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiKeyt.setDescription('Key-Type')
staWlanPairwiKeyv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiKeyv.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiKeyv.setDescription('Key-Value')
staWlanPairwiTsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiTsc.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiTsc.setDescription('TSC')
staWlanPairwiRsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 47, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanPairwiRsc.setStatus('current')
if mibBuilder.loadTexts: staWlanPairwiRsc.setDescription('RSC')
staWlanStatioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32), )
if mibBuilder.loadTexts: staWlanStatioTable.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioTable.setDescription('Station-Table')
staWlanStatioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanStatioIndex"))
if mibBuilder.loadTexts: staWlanStatioEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioEntry.setDescription('entry in table')
staWlanStatioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIndex.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioIndex.setDescription('Index')
staWlanStatioAid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioAid.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioAid.setDescription('AID')
staWlanStatioInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioInterf.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioInterf.setDescription('Interface')
staWlanStatioNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("e1", 0), ("e2", 1), ("e3", 2), ("e4", 3), ("e5", 4), ("e6", 5), ("e7", 6), ("e8", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioNetwor.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioNetwor.setDescription('Network')
staWlanStatioVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioVlanid.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioVlanid.setDescription('VLAN-Id')
staWlanStatioIdleti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIdleti.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioIdleti.setDescription('Idle-Timeout')
staWlanStatioPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioPhysig.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioPhysig.setDescription('Phy-Signal')
staWlanStatioMacadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMacadd.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioMacadd.setDescription('MAC-Address')
staWlanStatioUserna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioUserna.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioUserna.setDescription('User-Name')
staWlanStatioIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIdenti.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioIdenti.setDescription('Identification')
staWlanStatioTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioTxbyte.setDescription('Tx-Bytes')
staWlanStatioRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxbyte.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioRxbyte.setDescription('Rx-Bytes')
staWlanStatioThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioThroug.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioThroug.setDescription('Throughput')
staWlanStatioMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMaxthr.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioMaxthr.setDescription('Max.-Throughput')
staWlanStatioBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioBytest.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioBytest.setDescription('Bytes-Throughput')
staWlanStatioBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioBytesm.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioBytesm.setDescription('Bytes-Max.-Throughput')
staWlanStatioTxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioTxpack.setDescription('Tx-Packets')
staWlanStatioRxpack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxpack.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioRxpack.setDescription('Rx-Packets')
staWlanStatioTxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioTxlimi.setDescription('Tx-Limit')
staWlanStatioRxlimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxlimi.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioRxlimi.setDescription('Rx-Limit')
staWlanStatioState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 9, 4, 10, 8))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("authenticated", 2), ("connected", 3), ("associated", 9), ("mac-check", 4), ("e1x-negotiation", 10), ("key-handshake", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioState.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioState.setDescription('State')
staWlanStatioMacche = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("local", 1), ("radius", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioMacche.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioMacche.setDescription('MAC-Check')
staWlanStatioLastev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("auth-success", 1), ("deauth", 2), ("assoc-success", 3), ("reassoc-success", 4), ("disassoc", 5), ("radius-success", 6), ("auth-reject", 7), ("assoc-reject", 8), ("keyhandshake-success", 9), ("keyhandshake-timeout", 10), ("keyhandshake-failure", 11), ("radius-reject", 12), ("supervision", 13), ("e802-1x-success", 14), ("e802-1x-failure", 15), ("idle-timeout", 16), ("admin-deassoc", 17), ("roamed", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioLastev.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioLastev.setDescription('Last-Event')
staWlanStatioLaster = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 0), ("auth-success", 1), ("deauth", 2), ("assoc-success", 3), ("reassoc-success", 4), ("disassoc", 5), ("radius-success", 6), ("auth-reject", 7), ("assoc-reject", 8), ("keyhandshake-success", 9), ("keyhandshake-timeout", 10), ("keyhandshake-failure", 11), ("radius-reject", 12), ("supervision", 13), ("e802-1x-success", 14), ("e802-1x-failure", 15), ("idle-timeout", 16), ("admin-deassoc", 17), ("roamed", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioLaster.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioLaster.setDescription('Last-Error')
staWlanStatioTxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioTxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioTxrate.setDescription('Tx-Rate')
staWlanStatioRxrate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioRxrate.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioRxrate.setDescription('Rx-Rate')
staWlanStatioAntenn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioAntenn.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioAntenn.setDescription('Antenna')
staWlanStatioWpaver = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("wpa1", 1), ("wpa2", 2), ("none", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioWpaver.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioWpaver.setDescription('WPA-Version')
staWlanStatioQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioQos.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioQos.setDescription('QoS')
staWlanStatioKeytyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 13, 16, 64, 65, 66))).clone(namedValues=NamedValues(("none", 0), ("unknown", 1), ("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16), ("tkip", 64), ("aes-ocb", 65), ("aes-ccm", 66)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioKeytyp.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioKeytyp.setDescription('Key-Type')
staWlanStatioPowers = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioPowers.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioPowers.setDescription('Power-Saving')
staWlanStatioListen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioListen.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioListen.setDescription('Listen-Interval')
staWlanStatioConnec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioConnec.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioConnec.setDescription('Connect-Time')
staWlanStatioShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioShortp.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioShortp.setDescription('Short-Preamble')
staWlanStatioShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioShorts.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioShorts.setDescription('Short-Slot-Time')
staWlanStatioCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioCompre.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioCompre.setDescription('Compression')
staWlanStatioClbrgs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioClbrgs.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioClbrgs.setDescription('Cl.-Brg.-Support')
staWlanStatioIpaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 32, 1, 27), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanStatioIpaddr.setStatus('current')
if mibBuilder.loadTexts: staWlanStatioIpaddr.setDescription('IP-Address')
staWlanDeasso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWlanDeasso.setStatus('current')
if mibBuilder.loadTexts: staWlanDeasso.setDescription('Deassoc-Station')
staWlanCompetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44), )
if mibBuilder.loadTexts: staWlanCompetTable.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetTable.setDescription('Competing-Networks')
staWlanCompetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanCompetBssid"), (0, "LANCOM-L54g-MIB", "staWlanCompetInterf"))
if mibBuilder.loadTexts: staWlanCompetEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetEntry.setDescription('entry in table')
staWlanCompetBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetBssid.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetBssid.setDescription('BSSID')
staWlanCompetInterf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wlan-1", 0), ("wlan-2", 1), ("wlan-3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetInterf.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetInterf.setDescription('Interface')
staWlanCompetNetwor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNetwor.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetNetwor.setDescription('Network-Name')
staWlanCompetOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("adhoc", 1), ("infrastructure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetOperat.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetOperat.setDescription('Operation-Mode')
staWlanCompetEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("wep", 1), ("tkip", 2), ("aes", 3), ("aes-plus-tkip", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetEncryp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetEncryp.setDescription('Encryption')
staWlanCompetBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetBeacon.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetBeacon.setDescription('Beacon-Period')
staWlanCompetDtimpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetDtimpe.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetDtimpe.setDescription('DTIM-Period')
staWlanCompetPcffun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("delivery", 1), ("delivery-plus-polling", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetPcffun.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetPcffun.setDescription('PCF-Functionality')
staWlanCompetQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetQos.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetQos.setDescription('QoS')
staWlanCompetMaxamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetMaxamp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetMaxamp.setDescription('Max-A-MPDU-Len')
staWlanCompetMaxams = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetMaxams.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetMaxams.setDescription('Max-A-MSDU-Len')
staWlanCompetRadiob = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("e2-4ghz-5ghz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRadiob.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetRadiob.setDescription('Radio-Band')
staWlanCompetRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRadioc.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetRadioc.setDescription('Radio-Channel')
staWlanCompet108mbp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet108mbp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompet108mbp.setDescription('108Mbps-Mode')
staWlanCompetExtcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("above", 1), ("below", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetExtcha.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetExtcha.setDescription('Ext.-Channel')
staWlanCompetPhysig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetPhysig.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetPhysig.setDescription('Phy-Signal')
staWlanCompetSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetSignal.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetSignal.setDescription('Signal-Level')
staWlanCompetNoisel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNoisel.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetNoisel.setDescription('Noise-Level')
staWlanCompetLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetLoad.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetLoad.setDescription('Load')
staWlanCompetShortp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShortp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetShortp.setDescription('Short-Preamble')
staWlanCompetShorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShorts.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetShorts.setDescription('Short-Slot-Time')
staWlanCompet40mhzm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet40mhzm.setStatus('current')
if mibBuilder.loadTexts: staWlanCompet40mhzm.setDescription('40MHz-Mode')
staWlanCompet40mhzi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompet40mhzi.setStatus('current')
if mibBuilder.loadTexts: staWlanCompet40mhzi.setDescription('40MHz-Intolerant')
staWlanCompetShortg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("no", 0), ("e20mhz", 1), ("e40mhz", 2), ("e20-40mhz", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetShortg.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetShortg.setDescription('Short-Guard-Interval')
staWlanCompetCompre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetCompre.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetCompre.setDescription('Compression')
staWlanCompetAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetAge.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetAge.setDescription('Age')
staWlanCompetRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43))).clone(namedValues=NamedValues(("unknown", 0), ("e1m", 1), ("e2m", 2), ("e5m", 3), ("e5-5m", 4), ("e8m", 5), ("e11m", 6), ("e6m", 12), ("e9m", 13), ("e12m", 14), ("e18m", 15), ("e24m", 16), ("e36m", 17), ("e48m", 18), ("e54m", 19), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27), ("ht-1-6-5m", 28), ("ht-1-13m", 29), ("ht-1-19-5m", 30), ("ht-1-26m", 31), ("ht-1-39m", 32), ("ht-1-52m", 33), ("ht-1-58-5m", 34), ("ht-1-65m", 35), ("ht-2-13m", 36), ("ht-2-26m", 37), ("ht-2-39m", 38), ("ht-2-52m", 39), ("ht-2-78m", 40), ("ht-2-104m", 41), ("ht-2-117m", 42), ("ht-2-130m", 43)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetRate.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetRate.setDescription('Rate')
staWlanCompetNonerp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetNonerp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetNonerp.setDescription('NonERP-Present')
staWlanCompetIdenti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetIdenti.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetIdenti.setDescription('Identification')
staWlanCompetInterp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 44, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanCompetInterp.setStatus('current')
if mibBuilder.loadTexts: staWlanCompetInterp.setDescription('Interpoint-Peer-Name')
staWlanRadiusTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 48), )
if mibBuilder.loadTexts: staWlanRadiusTable.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiusTable.setDescription('RADIUS-Cache')
staWlanRadiusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 48, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanRadiusMac"))
if mibBuilder.loadTexts: staWlanRadiusEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiusEntry.setDescription('entry in table')
staWlanRadiusMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 48, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusMac.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiusMac.setDescription('MAC-Address')
staWlanRadiusAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 48, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusAll.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiusAll.setDescription('Allowed')
staWlanRadiusAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 3, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanRadiusAge.setStatus('current')
if mibBuilder.loadTexts: staWlanRadiusAge.setDescription('Age')
staWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4))
staWanBytetransTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1), )
if mibBuilder.loadTexts: staWanBytetransTable.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransTable.setDescription('Byte-Transport')
staWanBytetransEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanBytetransIfc"))
if mibBuilder.loadTexts: staWanBytetransEntry.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransEntry.setDescription('entry in table')
staWanBytetransIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransIfc.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransIfc.setDescription('Ifc')
staWanBytetransCrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCrx.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransCrx.setDescription('CRx-Bytes')
staWanBytetransRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransRxb.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransRxb.setDescription('Rx-Bytes')
staWanBytetransTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransTxb.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransTxb.setDescription('Tx-Bytes')
staWanBytetransCtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanBytetransCtx.setStatus('current')
if mibBuilder.loadTexts: staWanBytetransCtx.setDescription('CTx-Bytes')
staWanPackettraTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2), )
if mibBuilder.loadTexts: staWanPackettraTable.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTable.setDescription('Packet-Transport')
staWanPackettraEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanPackettraIfc"))
if mibBuilder.loadTexts: staWanPackettraEntry.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraEntry.setDescription('entry in table')
staWanPackettraIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraIfc.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraIfc.setDescription('Ifc')
staWanPackettraRx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraRx.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraRx.setDescription('Rx')
staWanPackettraTxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxt.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxt.setDescription('Tx-total')
staWanPackettraTxn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxn.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxn.setDescription('Tx-normal')
staWanPackettraTxr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxr.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxr.setDescription('Tx-reliable')
staWanPackettraTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanPackettraTxu.setStatus('current')
if mibBuilder.loadTexts: staWanPackettraTxu.setDescription('Tx-urgent')
staWanErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3), )
if mibBuilder.loadTexts: staWanErrorsTable.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsTable.setDescription('Errors')
staWanErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanErrorsIfc"))
if mibBuilder.loadTexts: staWanErrorsEntry.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsEntry.setDescription('entry in table')
staWanErrorsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsIfc.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsIfc.setDescription('Ifc')
staWanErrorsRxl1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl1.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl1.setDescription('Rx-l1-Error')
staWanErrorsRxl2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl2.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl2.setDescription('Rx-l2-Error')
staWanErrorsRxl3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsRxl3.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsRxl3.setDescription('Rx-l3-Error')
staWanErrorsStac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsStac.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsStac.setDescription('Stack-Error')
staWanErrorsTxer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanErrorsTxer.setStatus('current')
if mibBuilder.loadTexts: staWanErrorsTxer.setDescription('Tx-Error')
staWanWantxdisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWantxdisc.setStatus('current')
if mibBuilder.loadTexts: staWanWantxdisc.setDescription('WAN-Tx-Discarded')
staWanWanheappa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanheappa.setStatus('current')
if mibBuilder.loadTexts: staWanWanheappa.setDescription('WAN-Heap-Packets')
staWanWanqueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuep.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuep.setDescription('WAN-Queue-Packets')
staWanWanqueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuee.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuee.setDescription('WAN-Queue-Errors')
staWanWanqueuem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanWanqueuem.setStatus('current')
if mibBuilder.loadTexts: staWanWanqueuem.setDescription('WAN-Queue-Mgt-Drop')
staWanThroughpuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8), )
if mibBuilder.loadTexts: staWanThroughpuTable.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTable.setDescription('Throughput')
staWanThroughpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanThroughpuIfc"))
if mibBuilder.loadTexts: staWanThroughpuEntry.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuEntry.setDescription('entry in table')
staWanThroughpuIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuIfc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuIfc.setDescription('Ifc')
staWanThroughpuRxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuRxsc.setDescription('Rx/s current')
staWanThroughpuTxsc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsc.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTxsc.setDescription('Tx/s current')
staWanThroughpuRxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuRxsa.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuRxsa.setDescription('Rx/s average')
staWanThroughpuTxsa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanThroughpuTxsa.setStatus('current')
if mibBuilder.loadTexts: staWanThroughpuTxsa.setDescription('Tx/s average')
staWanDeleteval = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanDeleteval.setStatus('current')
if mibBuilder.loadTexts: staWanDeleteval.setDescription('Delete-Values')
staWanConnectio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanConnectio.setStatus('current')
if mibBuilder.loadTexts: staWanConnectio.setDescription('Connections')
staWanMtuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 11), )
if mibBuilder.loadTexts: staWanMtuTable.setStatus('current')
if mibBuilder.loadTexts: staWanMtuTable.setDescription('MTU')
staWanMtuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanMtuPee"))
if mibBuilder.loadTexts: staWanMtuEntry.setStatus('current')
if mibBuilder.loadTexts: staWanMtuEntry.setDescription('entry in table')
staWanMtuPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuPee.setStatus('current')
if mibBuilder.loadTexts: staWanMtuPee.setDescription('Peer')
staWanMtuMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staWanMtuMtu.setStatus('current')
if mibBuilder.loadTexts: staWanMtuMtu.setDescription('MTU')
staWanActions = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20))
staWanActionsActTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 1), )
if mibBuilder.loadTexts: staWanActionsActTable.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActTable.setDescription('Action-Table')
staWanActionsActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanActionsActTim"))
if mibBuilder.loadTexts: staWanActionsActEntry.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActEntry.setDescription('entry in table')
staWanActionsActTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActTim.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActTim.setDescription('Time')
staWanActionsActAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActAct.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActAct.setDescription('Action')
staWanActionsActRes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsActRes.setStatus('current')
if mibBuilder.loadTexts: staWanActionsActRes.setDescription('Result')
staWanActionsLocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 2), )
if mibBuilder.loadTexts: staWanActionsLocTable.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocTable.setDescription('Lock-Table')
staWanActionsLocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWanActionsLocInd"))
if mibBuilder.loadTexts: staWanActionsLocEntry.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocEntry.setDescription('entry in table')
staWanActionsLocInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocInd.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocInd.setDescription('Index')
staWanActionsLocRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 4, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWanActionsLocRem.setStatus('current')
if mibBuilder.loadTexts: staWanActionsLocRem.setDescription('Remaining-Locktime')
staLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5))
staLanLanh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanh.setStatus('current')
if mibBuilder.loadTexts: staLanLanh.setDescription('LAN-Heap-Packets')
staLanDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLanDele.setStatus('current')
if mibBuilder.loadTexts: staLanDele.setDescription('Delete-Values')
staLanLanq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanLanq.setStatus('current')
if mibBuilder.loadTexts: staLanLanq.setDescription('LAN-Queue-Mgt-Drop')
staLanIeee = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80))
staLanIeeeSupTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1), )
if mibBuilder.loadTexts: staLanIeeeSupTable.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupTable.setDescription('Supplicant-Ifc-State')
staLanIeeeSupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanIeeeSupIfc"))
if mibBuilder.loadTexts: staLanIeeeSupEntry.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupEntry.setDescription('entry in table')
staLanIeeeSupIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupIfc.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupIfc.setDescription('Ifc')
staLanIeeeSupMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1024, 3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("none", 0), ("md5", 1024), ("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupMet.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupMet.setDescription('Method')
staLanIeeeSupSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("unauthorized", 1), ("authorized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupSta.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupSta.setDescription('State')
staLanIeeeSupAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 80, 1, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanIeeeSupAut.setStatus('current')
if mibBuilder.loadTexts: staLanIeeeSupAut.setDescription('Authenticator-Address')
staLanInteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51), )
if mibBuilder.loadTexts: staLanInteTable.setStatus('current')
if mibBuilder.loadTexts: staLanInteTable.setDescription('Interfaces')
staLanInteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanInteIfc"))
if mibBuilder.loadTexts: staLanInteEntry.setStatus('current')
if mibBuilder.loadTexts: staLanInteEntry.setDescription('entry in table')
staLanInteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteIfc.setStatus('current')
if mibBuilder.loadTexts: staLanInteIfc.setDescription('Ifc')
staLanInteQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteQue.setStatus('current')
if mibBuilder.loadTexts: staLanInteQue.setDescription('Queue-Packets')
staLanInteLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteLin.setStatus('current')
if mibBuilder.loadTexts: staLanInteLin.setDescription('Link-Active')
staLanInteCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 33, 34, 1, 2, 3, 4, 6, 255))).clone(namedValues=NamedValues(("none", 0), ("e10b-2", 33), ("e10b-5", 34), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4), ("fd1000b-tx", 6), ("power-down", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteCon.setStatus('current')
if mibBuilder.loadTexts: staLanInteCon.setDescription('Connector')
staLanInteNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteNeg.setStatus('current')
if mibBuilder.loadTexts: staLanInteNeg.setDescription('Negotiation-Done')
staLanInteFlo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteFlo.setStatus('current')
if mibBuilder.loadTexts: staLanInteFlo.setDescription('Flow-Control')
staLanInteMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 51, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("mdi", 1), ("mdix", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanInteMdi.setStatus('current')
if mibBuilder.loadTexts: staLanInteMdi.setDescription('MDI-Mode')
staLanByteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52), )
if mibBuilder.loadTexts: staLanByteTable.setStatus('current')
if mibBuilder.loadTexts: staLanByteTable.setDescription('Byte-Transport')
staLanByteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanByteIfc"))
if mibBuilder.loadTexts: staLanByteEntry.setStatus('current')
if mibBuilder.loadTexts: staLanByteEntry.setDescription('entry in table')
staLanByteIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteIfc.setStatus('current')
if mibBuilder.loadTexts: staLanByteIfc.setDescription('Ifc')
staLanByteTxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteTxbyte.setStatus('current')
if mibBuilder.loadTexts: staLanByteTxbyte.setDescription('Tx-Bytes')
staLanByteRxbyte = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteRxbyte.setStatus('current')
if mibBuilder.loadTexts: staLanByteRxbyte.setDescription('Rx-Bytes')
staLanByteThroug = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteThroug.setStatus('current')
if mibBuilder.loadTexts: staLanByteThroug.setDescription('Throughput')
staLanByteMaxthr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteMaxthr.setStatus('current')
if mibBuilder.loadTexts: staLanByteMaxthr.setDescription('Max.-Throughput')
staLanByteBytest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytest.setStatus('current')
if mibBuilder.loadTexts: staLanByteBytest.setDescription('Bytes-Throughput')
staLanByteBytesm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 52, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanByteBytesm.setStatus('current')
if mibBuilder.loadTexts: staLanByteBytesm.setDescription('Bytes-Max.-Throughput')
staLanPackTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53), )
if mibBuilder.loadTexts: staLanPackTable.setStatus('current')
if mibBuilder.loadTexts: staLanPackTable.setDescription('Packet-Transport')
staLanPackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanPackIfc"))
if mibBuilder.loadTexts: staLanPackEntry.setStatus('current')
if mibBuilder.loadTexts: staLanPackEntry.setDescription('entry in table')
staLanPackIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackIfc.setStatus('current')
if mibBuilder.loadTexts: staLanPackIfc.setDescription('Ifc')
staLanPackRxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxp.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxp.setDescription('Rx-Packets')
staLanPackTxp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxp.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxp.setDescription('Tx-Packets')
staLanPackRxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxb.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxb.setDescription('Rx-Broadcasts')
staLanPackRxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxm.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxm.setDescription('Rx-Multicasts')
staLanPackRxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackRxu.setStatus('current')
if mibBuilder.loadTexts: staLanPackRxu.setDescription('Rx-Unicasts')
staLanPackTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxb.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxb.setDescription('Tx-Broadcasts')
staLanPackTxm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxm.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxm.setDescription('Tx-Multicasts')
staLanPackTxu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanPackTxu.setStatus('current')
if mibBuilder.loadTexts: staLanPackTxu.setDescription('Tx-Unicasts')
staLanErroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54), )
if mibBuilder.loadTexts: staLanErroTable.setStatus('current')
if mibBuilder.loadTexts: staLanErroTable.setDescription('Errors')
staLanErroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanErroIfc"))
if mibBuilder.loadTexts: staLanErroEntry.setStatus('current')
if mibBuilder.loadTexts: staLanErroEntry.setDescription('entry in table')
staLanErroIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroIfc.setStatus('current')
if mibBuilder.loadTexts: staLanErroIfc.setDescription('Ifc')
staLanErroRxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxe.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxe.setDescription('Rx-Errors')
staLanErroTxe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroTxe.setStatus('current')
if mibBuilder.loadTexts: staLanErroTxe.setDescription('Tx-Errors')
staLanErroSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroSta.setStatus('current')
if mibBuilder.loadTexts: staLanErroSta.setDescription('Stack-Errors')
staLanErroNic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroNic.setStatus('current')
if mibBuilder.loadTexts: staLanErroNic.setDescription('NIC-Errors')
staLanErroQue = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroQue.setStatus('current')
if mibBuilder.loadTexts: staLanErroQue.setDescription('Queue-Errors')
staLanErroRxc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroRxc.setStatus('current')
if mibBuilder.loadTexts: staLanErroRxc.setDescription('Rx-CRC-Errors')
staLanErroCol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 5, 54, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanErroCol.setStatus('current')
if mibBuilder.loadTexts: staLanErroCol.setDescription('Collisions')
staPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6))
staPppPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1), )
if mibBuilder.loadTexts: staPppPppTable.setStatus('current')
if mibBuilder.loadTexts: staPppPppTable.setDescription('PPP-Phases')
staPppPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppPppIfc"))
if mibBuilder.loadTexts: staPppPppEntry.setStatus('current')
if mibBuilder.loadTexts: staPppPppEntry.setDescription('entry in table')
staPppPppIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIfc.setStatus('current')
if mibBuilder.loadTexts: staPppPppIfc.setDescription('Ifc')
staPppPppPha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("dead", 1), ("establish", 2), ("terminate", 3), ("authenticate", 4), ("callback", 5), ("network", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppPha.setStatus('current')
if mibBuilder.loadTexts: staPppPppPha.setDescription('Phase to')
staPppPppLcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppLcp.setStatus('current')
if mibBuilder.loadTexts: staPppPppLcp.setDescription('LCP')
staPppPppIpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppIpc.setStatus('current')
if mibBuilder.loadTexts: staPppPppIpc.setDescription('IPCP')
staPppPppCcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("initial", 1), ("startng", 2), ("closed", 3), ("stopped", 4), ("closing", 5), ("stoppng", 6), ("reqsent", 7), ("ackrcvd", 8), ("acksent", 9), ("opened", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPppCcp.setStatus('current')
if mibBuilder.loadTexts: staPppPppCcp.setDescription('CCP')
staPppLcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2))
staPppLcpRxerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxerrors.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxerrors.setDescription('Rx-Errors')
staPppLcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxdiscarded.setDescription('Rx-Discarded')
staPppLcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigrequ.setDescription('Rx-Config-Request')
staPppLcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigack.setDescription('Rx-Config-Ack.')
staPppLcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfignak.setDescription('Rx-Config-Nak.')
staPppLcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxconfigreje.setDescription('Rx-Config-Reject')
staPppLcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxterminater.setDescription('Rx-Terminate-Request')
staPppLcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppLcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxcodereject.setDescription('Rx-Code-Reject')
staPppLcpRxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxprotocolre.setDescription('Rx-Protocol-Reject')
staPppLcpRxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreques.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxechoreques.setDescription('Rx-Echo-Request')
staPppLcpRxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxechoreply.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxechoreply.setDescription('Rx-Echo-Reply')
staPppLcpRxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setStatus('current')
if mibBuilder.loadTexts: staPppLcpRxdiscardreq.setDescription('Rx-Discard-Request')
staPppLcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigrequ.setDescription('Tx-Config-Request')
staPppLcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigack.setDescription('Tx-Config-Ack.')
staPppLcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfignak.setDescription('Tx-Config-Nak.')
staPppLcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxconfigreje.setDescription('Tx-Config-Reject')
staPppLcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxterminater.setDescription('Tx-Terminate-Request')
staPppLcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppLcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxcodereject.setDescription('Tx-Code-Reject')
staPppLcpTxprotocolre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxprotocolre.setDescription('Tx-Protocol-Reject')
staPppLcpTxechoreques = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreques.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxechoreques.setDescription('Tx-Echo-Request')
staPppLcpTxechoreply = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxechoreply.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxechoreply.setDescription('Tx-Echo-Reply')
staPppLcpTxdiscardreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setStatus('current')
if mibBuilder.loadTexts: staPppLcpTxdiscardreq.setDescription('Tx-Discard-Request')
staPppLcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 2, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppLcpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppLcpDeletevalues.setDescription('Delete-Values')
staPppPap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3))
staPppPapRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxdis.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxdis.setDescription('Rx-Discarded')
staPppPapRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxreq.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxreq.setDescription('Rx-Request')
staPppPapRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxsuc.setDescription('Rx-Success')
staPppPapRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapRxfai.setStatus('current')
if mibBuilder.loadTexts: staPppPapRxfai.setDescription('Rx-Failure')
staPppPapTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxret.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxret.setDescription('Tx-Retry')
staPppPapTxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxreq.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxreq.setDescription('Tx-Request')
staPppPapTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxsuc.setDescription('Tx-Success')
staPppPapTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppPapTxfai.setStatus('current')
if mibBuilder.loadTexts: staPppPapTxfai.setDescription('Tx-Failure')
staPppPapDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppPapDelet.setStatus('current')
if mibBuilder.loadTexts: staPppPapDelet.setDescription('Delete-Values')
staPppCha = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4))
staPppChaRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxdis.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxdis.setDescription('Rx-Discarded')
staPppChaRxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxcha.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxcha.setDescription('Rx-Challenge')
staPppChaRxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxres.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxres.setDescription('Rx-Response')
staPppChaRxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxsuc.setDescription('Rx-Success')
staPppChaRxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaRxfai.setStatus('current')
if mibBuilder.loadTexts: staPppChaRxfai.setDescription('Rx-Failure')
staPppChaTxret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxret.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxret.setDescription('Tx-Retry')
staPppChaTxcha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxcha.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxcha.setDescription('Tx-Challenge')
staPppChaTxres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxres.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxres.setDescription('Tx-Response')
staPppChaTxsuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxsuc.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxsuc.setDescription('Tx-Success')
staPppChaTxfai = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppChaTxfai.setStatus('current')
if mibBuilder.loadTexts: staPppChaTxfai.setDescription('Tx-Failure')
staPppChaDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 4, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppChaDelet.setStatus('current')
if mibBuilder.loadTexts: staPppChaDelet.setDescription('Delete-Values')
staPppIpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6))
staPppIpcRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxdiscarded.setDescription('Rx-Discarded')
staPppIpcRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigrequ.setDescription('Rx-Config-Request')
staPppIpcRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigack.setDescription('Rx-Config-Ack.')
staPppIpcRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfignak.setDescription('Rx-Config-Nak.')
staPppIpcRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxconfigreje.setDescription('Rx-Config-Reject')
staPppIpcRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxterminater.setDescription('Rx-Terminate-Request')
staPppIpcRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppIpcRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppIpcRxcodereject.setDescription('Rx-Code-Reject')
staPppIpcTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigrequ.setDescription('Tx-Config-Request')
staPppIpcTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigack.setDescription('Tx-Config-Ack.')
staPppIpcTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfignak.setDescription('Tx-Config-Nak.')
staPppIpcTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxconfigreje.setDescription('Tx-Config-Reject')
staPppIpcTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxterminater.setDescription('Tx-Terminate-Request')
staPppIpcTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppIpcTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppIpcTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppIpcTxcodereject.setDescription('Tx-Code-Reject')
staPppIpcDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 6, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppIpcDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppIpcDeletevalues.setDescription('Delete-Values')
staPppCcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10))
staPppCcpRxdiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxdiscarded.setDescription('Rx-Discarded')
staPppCcpRxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigrequ.setDescription('Rx-Config-Request')
staPppCcpRxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigack.setDescription('Rx-Config-Ack.')
staPppCcpRxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfignak.setDescription('Rx-Config-Nak.')
staPppCcpRxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxconfigreje.setDescription('Rx-Config-Reject')
staPppCcpRxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxterminater.setDescription('Rx-Terminate-Request')
staPppCcpRxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxterminatea.setDescription('Rx-Terminate-Ack.')
staPppCcpRxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxcodereject.setDescription('Rx-Code-Reject')
staPppCcpRxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetreque.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxresetreque.setDescription('Rx-Reset-Request')
staPppCcpRxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpRxresetack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpRxresetack.setDescription('Rx-Reset-Ack')
staPppCcpTxconfigrequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigrequ.setDescription('Tx-Config-Request')
staPppCcpTxconfigack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigack.setDescription('Tx-Config-Ack.')
staPppCcpTxconfignak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfignak.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfignak.setDescription('Tx-Config-Nak.')
staPppCcpTxconfigreje = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxconfigreje.setDescription('Tx-Config-Reject')
staPppCcpTxterminater = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminater.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxterminater.setDescription('Tx-Terminate-Request')
staPppCcpTxterminatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxterminatea.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxterminatea.setDescription('Tx-Terminate-Ack.')
staPppCcpTxcodereject = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxcodereject.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxcodereject.setDescription('Tx-Code-Reject')
staPppCcpTxresetreque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetreque.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxresetreque.setDescription('Tx-Reset-Request')
staPppCcpTxresetack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpTxresetack.setStatus('current')
if mibBuilder.loadTexts: staPppCcpTxresetack.setDescription('Tx-Reset-Ack')
staPppCcpCompressione = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppCcpCompressione.setStatus('current')
if mibBuilder.loadTexts: staPppCcpCompressione.setDescription('Compression-Errors')
staPppCcpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppCcpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staPppCcpDeletevalues.setDescription('Delete-Values')
staPppRxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8))
staPppRxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1), )
if mibBuilder.loadTexts: staPppRxoLcpTable.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpTable.setDescription('LCP')
staPppRxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppRxoLcpIfc"))
if mibBuilder.loadTexts: staPppRxoLcpEntry.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpEntry.setDescription('entry in table')
staPppRxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpIfc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpIfc.setDescription('Ifc')
staPppRxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMru.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpMru.setDescription('MRU')
staPppRxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpAut.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpAut.setDescription('Authent.')
staPppRxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoLcpMag.setStatus('current')
if mibBuilder.loadTexts: staPppRxoLcpMag.setDescription('Magic-Num')
staPppRxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3), )
if mibBuilder.loadTexts: staPppRxoIpcTable.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcTable.setDescription('IPCP')
staPppRxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppRxoIpcIfc"))
if mibBuilder.loadTexts: staPppRxoIpcEntry.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcEntry.setDescription('entry in table')
staPppRxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIfc.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcIfc.setDescription('Ifc')
staPppRxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcIpadd.setDescription('IP-Address')
staPppRxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcDnsde.setDescription('DNS-Default')
staPppRxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcDnsba.setDescription('DNS-Backup')
staPppRxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcNbnsd.setDescription('NBNS-Default')
staPppRxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 8, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPppRxoIpcNbnsb.setDescription('NBNS-Backup')
staPppTxo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9))
staPppTxoLcpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1), )
if mibBuilder.loadTexts: staPppTxoLcpTable.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpTable.setDescription('LCP')
staPppTxoLcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppTxoLcpIfc"))
if mibBuilder.loadTexts: staPppTxoLcpEntry.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpEntry.setDescription('entry in table')
staPppTxoLcpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpIfc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpIfc.setDescription('Ifc')
staPppTxoLcpMru = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMru.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpMru.setDescription('MRU')
staPppTxoLcpAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpAut.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpAut.setDescription('Authent.')
staPppTxoLcpMag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoLcpMag.setStatus('current')
if mibBuilder.loadTexts: staPppTxoLcpMag.setDescription('Magic-Num')
staPppTxoIpcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3), )
if mibBuilder.loadTexts: staPppTxoIpcTable.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcTable.setDescription('IPCP')
staPppTxoIpcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppTxoIpcIfc"))
if mibBuilder.loadTexts: staPppTxoIpcEntry.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcEntry.setDescription('entry in table')
staPppTxoIpcIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIfc.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcIfc.setDescription('Ifc')
staPppTxoIpcIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcIpadd.setDescription('IP-Address')
staPppTxoIpcDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcDnsde.setDescription('DNS-Default')
staPppTxoIpcDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcDnsba.setDescription('DNS-Backup')
staPppTxoIpcNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcNbnsd.setDescription('NBNS-Default')
staPppTxoIpcNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 9, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPppTxoIpcNbnsb.setDescription('NBNS-Backup')
staPppDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppDel.setStatus('current')
if mibBuilder.loadTexts: staPppDel.setDescription('Delete-Values')
staTcpip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9))
staTcpipArp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1))
staTcpipArpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpLanr.setDescription('LAN-Rx')
staTcpipArpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLant.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpLant.setDescription('LAN-Tx')
staTcpipArpLane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpLane.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpLane.setDescription('LAN-Errors')
staTcpipArpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpWanr.setDescription('WAN-Rx')
staTcpipArpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWant.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpWant.setDescription('WAN-Tx')
staTcpipArpWane = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpWane.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpWane.setDescription('WAN-Errors')
staTcpipArpTablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7), )
if mibBuilder.loadTexts: staTcpipArpTablTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablTable.setDescription('Table-ARP')
staTcpipArpTablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipArpTablIpa"))
if mibBuilder.loadTexts: staTcpipArpTablEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablEntry.setDescription('entry in table')
staTcpipArpTablIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablIpa.setDescription('IP-Address')
staTcpipArpTablMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablMac.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablMac.setDescription('MAC-Address')
staTcpipArpTablLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablLas.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablLas.setDescription('Last-access')
staTcpipArpTablCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("wan", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablCon.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablCon.setDescription('Connect')
staTcpipArpTablVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablVla.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablVla.setDescription('VLAN-ID')
staTcpipArpTablPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipArpTablPee.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpTablPee.setDescription('Peer')
staTcpipArpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipArpDele.setStatus('current')
if mibBuilder.loadTexts: staTcpipArpDele.setDescription('Delete-Values')
staTcpipIp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2))
staTcpipIpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanrx.setDescription('LAN-Rx')
staTcpipIpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLantx.setDescription('LAN-Tx')
staTcpipIpLanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanchecksumerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanchecksumerrors.setDescription('LAN-Checksum-Errors')
staTcpipIpLanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanserviceerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanserviceerrors.setDescription('LAN-Service-Errors')
staTcpipIpLanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentationer.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanfragmentationer.setDescription('LAN-Fragmentation-Errors')
staTcpipIpLanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentations.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanfragmentations.setDescription('LAN-Fragmentations')
staTcpipIpLanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLanfragmentationsf.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLanfragmentationsf.setDescription('LAN-Fragmentations-Forced')
staTcpipIpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanrx.setDescription('WAN-Rx')
staTcpipIpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWantx.setDescription('WAN-Tx')
staTcpipIpWanchecksumerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanchecksumerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanchecksumerrors.setDescription('WAN-Checksum-Errors')
staTcpipIpWanserviceerrors = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanserviceerrors.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanserviceerrors.setDescription('WAN-Service-Errors')
staTcpipIpWanfragmentationer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentationer.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanfragmentationer.setDescription('WAN-Fragmentation-Errors')
staTcpipIpWanfragmentations = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentations.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanfragmentations.setDescription('WAN-Fragmentations')
staTcpipIpWanfragmentationsf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanfragmentationsf.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanfragmentationsf.setDescription('WAN-Fragmentations-Forced')
staTcpipIpWanrxdisconnect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpWanrxdisconnect.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpWanrxdisconnect.setDescription('WAN-Rx-Disconnect')
staTcpipIpLooperror = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIpLooperror.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpLooperror.setDescription('Loop-Error')
staTcpipIpDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 2, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipIpDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staTcpipIpDeletevalues.setDescription('Delete-Values')
staTcpipIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3))
staTcpipIcmpLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpLanr.setDescription('LAN-Rx')
staTcpipIcmpLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLant.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpLant.setDescription('LAN-Tx')
staTcpipIcmpLanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLanc.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpLanc.setDescription('LAN-Checksum-Errors')
staTcpipIcmpLans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpLans.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpLans.setDescription('LAN-Service-Errors')
staTcpipIcmpWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpWanr.setDescription('WAN-Rx')
staTcpipIcmpWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWant.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpWant.setDescription('WAN-Tx')
staTcpipIcmpWanc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWanc.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpWanc.setDescription('WAN-Checksum-Errors')
staTcpipIcmpWans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipIcmpWans.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpWans.setDescription('WAN-Service-Errors')
staTcpipIcmpDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipIcmpDele.setStatus('current')
if mibBuilder.loadTexts: staTcpipIcmpDele.setDescription('Delete-Values')
staTcpipTftp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4))
staTcpipTftpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrx.setDescription('LAN-Rx')
staTcpipTftpLanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxr.setDescription('LAN-Rx-Read-Request')
staTcpipTftpLanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxw.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxw.setDescription('LAN-Rx-Write-Request')
staTcpipTftpLanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxd.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxd.setDescription('LAN-Rx-Data')
staTcpipTftpLanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxa.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxa.setDescription('LAN-Rx-Ack.')
staTcpipTftpLanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxo.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxo.setDescription('LAN-Rx-Option-Ack.')
staTcpipTftpLanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxe.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxe.setDescription('LAN-Rx-Errors')
staTcpipTftpLanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLanrxb.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLanrxb.setDescription('LAN-Rx-Bad-Packets')
staTcpipTftpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantx.setDescription('LAN-Tx')
staTcpipTftpLantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxd.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantxd.setDescription('LAN-Tx-Data')
staTcpipTftpLantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxa.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantxa.setDescription('LAN-Tx-Ack.')
staTcpipTftpLantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxo.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantxo.setDescription('LAN-Tx-Option-Ack.')
staTcpipTftpLantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxe.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantxe.setDescription('LAN-Tx-Errors')
staTcpipTftpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLantxr.setDescription('LAN-Tx-Repeats')
staTcpipTftpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpLancon.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpLancon.setDescription('LAN-Connections')
staTcpipTftpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrx.setDescription('WAN-Rx')
staTcpipTftpWanrxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxr.setDescription('WAN-Rx-Read-Request')
staTcpipTftpWanrxw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxw.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxw.setDescription('WAN-Rx-Write-Request')
staTcpipTftpWanrxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxd.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxd.setDescription('WAN-Rx-Data')
staTcpipTftpWanrxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxa.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxa.setDescription('WAN-Rx-Ack.')
staTcpipTftpWanrxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxo.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxo.setDescription('WAN-Rx-Option-Ack.')
staTcpipTftpWanrxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxe.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxe.setDescription('WAN-Rx-Errors')
staTcpipTftpWanrxb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWanrxb.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWanrxb.setDescription('WAN-Rx-Bad-Packets')
staTcpipTftpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantx.setDescription('WAN-Tx')
staTcpipTftpWantxd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxd.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantxd.setDescription('WAN-Tx-Data')
staTcpipTftpWantxa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxa.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantxa.setDescription('WAN-Tx-Ack.')
staTcpipTftpWantxo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxo.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantxo.setDescription('WAN-Tx-Option-Ack.')
staTcpipTftpWantxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxe.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantxe.setDescription('WAN-Tx-Errors')
staTcpipTftpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWantxr.setDescription('WAN-Tx-Repeats')
staTcpipTftpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTftpWancon.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpWancon.setDescription('WAN-Connections')
staTcpipTftpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 4, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipTftpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpipTftpDelete.setDescription('Delete-Values')
staTcpipTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5))
staTcpipTcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLanrx.setDescription('LAN-Rx')
staTcpipTcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLantx.setDescription('LAN-Tx')
staTcpipTcpLantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLantxr.setDescription('LAN-Tx-Repeats')
staTcpipTcpLanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanche.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLanche.setDescription('LAN-Checksum-Errors')
staTcpipTcpLanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLanser.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLanser.setDescription('LAN-Service-Errors')
staTcpipTcpLancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpLancon.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpLancon.setDescription('LAN-Connections')
staTcpipTcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWanrx.setDescription('WAN-Rx')
staTcpipTcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWantx.setDescription('WAN-Tx')
staTcpipTcpWantxr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWantxr.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWantxr.setDescription('WAN-Tx-Repeats')
staTcpipTcpWanche = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanche.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWanche.setDescription('WAN-Checksum-Errors')
staTcpipTcpWanser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWanser.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWanser.setDescription('WAN-Service-Errors')
staTcpipTcpWancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipTcpWancon.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpWancon.setDescription('WAN-Connections')
staTcpipTcpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipTcpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpipTcpDelete.setDescription('Delete-Values')
staTcpipDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6))
staTcpipDhcpLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpLanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpLanrx.setDescription('LAN-Rx')
staTcpipDhcpLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpLantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpLantx.setDescription('LAN-Tx')
staTcpipDhcpWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpWanrx.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpWanrx.setDescription('WAN-Rx')
staTcpipDhcpWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpWantx.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpWantx.setDescription('WAN-Tx')
staTcpipDhcpDisca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDisca.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDisca.setDescription('Discard')
staTcpipDhcpRxdis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxdis.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpRxdis.setDescription('Rx-Discover')
staTcpipDhcpRxreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpRxreq.setDescription('Rx-Request')
staTcpipDhcpRxdec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxdec.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpRxdec.setDescription('Rx-Decline')
staTcpipDhcpRxinf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxinf.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpRxinf.setDescription('Rx-Inform')
staTcpipDhcpRxrel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpRxrel.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpRxrel.setDescription('Rx-Release')
staTcpipDhcpTxoff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxoff.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpTxoff.setDescription('Tx-Offer')
staTcpipDhcpTxack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxack.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpTxack.setDescription('Tx-Ack.')
staTcpipDhcpTxnak = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpTxnak.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpTxnak.setDescription('Tx-Nak.')
staTcpipDhcpServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpServe.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpServe.setDescription('Server-Error')
staTcpipDhcpAssig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpAssig.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpAssig.setDescription('Assigned')
staTcpipDhcpMacco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpMacco.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpMacco.setDescription('MAC-Conflicts')
staTcpipDhcpNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20), )
if mibBuilder.loadTexts: staTcpipDhcpNetwoTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoTable.setDescription('Network-list')
staTcpipDhcpNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipDhcpNetwoNetworknam"))
if mibBuilder.loadTexts: staTcpipDhcpNetwoEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoEntry.setDescription('entry in table')
staTcpipDhcpNetwoNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetworknam.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetworknam.setDescription('Network-name')
staTcpipDhcpNetwoStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoStartaddre.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoStartaddre.setDescription('Start-Address-Pool')
staTcpipDhcpNetwoEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoEndaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoEndaddress.setDescription('End-Address-Pool')
staTcpipDhcpNetwoNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetmask.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoNetmask.setDescription('Netmask')
staTcpipDhcpNetwoBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcasta.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcasta.setDescription('Broadcast-Address')
staTcpipDhcpNetwoGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoGatewayadd.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoGatewayadd.setDescription('Gateway-Address')
staTcpipDhcpNetwoDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsdefault.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsdefault.setDescription('DNS-Default')
staTcpipDhcpNetwoDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsbackup.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoDnsbackup.setDescription('DNS-Backup')
staTcpipDhcpNetwoNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsdefaul.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsdefaul.setDescription('NBNS-Default')
staTcpipDhcpNetwoNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsbackup.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoNbnsbackup.setDescription('NBNS-Backup')
staTcpipDhcpNetwoServerflag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerflag.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerflag.setDescription('Server-Flags')
staTcpipDhcpNetwoBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcastb.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoBroadcastb.setDescription('Broadcast-Bit')
staTcpipDhcpNetwoServerid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerid.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoServerid.setDescription('Server-ID')
staTcpipDhcpNetwoLanifc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoLanifc.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoLanifc.setDescription('LAN-Ifc')
staTcpipDhcpNetwoVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoVlanid.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoVlanid.setDescription('VLAN-ID')
staTcpipDhcpNetwoMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoMasterserv.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoMasterserv.setDescription('Master-Server')
staTcpipDhcpNetwoCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoCache.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoCache.setDescription('Cache')
staTcpipDhcpNetwoAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 20, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpNetwoAdaption.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpNetwoAdaption.setDescription('Adaption')
staTcpipDhcpDhcptTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16), )
if mibBuilder.loadTexts: staTcpipDhcpDhcptTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptTable.setDescription('DHCP-Table')
staTcpipDhcpDhcptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipDhcpDhcptIpa"), (0, "LANCOM-L54g-MIB", "staTcpipDhcpDhcptNet"))
if mibBuilder.loadTexts: staTcpipDhcpDhcptEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptEntry.setDescription('entry in table')
staTcpipDhcpDhcptIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptIpa.setDescription('IP-Address')
staTcpipDhcpDhcptMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptMac.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptMac.setDescription('MAC-Address')
staTcpipDhcpDhcptTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptTim.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptTim.setDescription('Timeout')
staTcpipDhcpDhcptHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptHos.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptHos.setDescription('Hostname')
staTcpipDhcpDhcptTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 5), Bits().clone(namedValues=NamedValues(("new", 1), ("new", 2), ("dyn", 16), ("unkn", 4), ("stat", 8), ("bootp", 32), ("relay", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptTyp.setDescription('Type')
staTcpipDhcpDhcptLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptLan.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptLan.setDescription('LAN-Ifc')
staTcpipDhcpDhcptVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptVla.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptVla.setDescription('VLAN-ID')
staTcpipDhcpDhcptNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 16, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDhcpDhcptNet.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDhcptNet.setDescription('Network-name')
staTcpipDhcpDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 6, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDhcpDelet.setStatus('current')
if mibBuilder.loadTexts: staTcpipDhcpDelet.setDescription('Delete-Values')
staTcpipDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDeletev.setStatus('current')
if mibBuilder.loadTexts: staTcpipDeletev.setDescription('Delete-Values')
staTcpipNetbios = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8))
staTcpipNetbiosLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosLanr.setDescription('LAN-Rx')
staTcpipNetbiosLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosLant.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosLant.setDescription('LAN-Tx')
staTcpipNetbiosWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosWanr.setDescription('WAN-Rx')
staTcpipNetbiosWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWant.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosWant.setDescription('WAN-Tx')
staTcpipNetbiosRegi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRegi.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosRegi.setDescription('Registers')
staTcpipNetbiosConf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosConf.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosConf.setDescription('Conflicts')
staTcpipNetbiosRele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRele.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosRele.setDescription('Releases')
staTcpipNetbiosRefr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosRefr.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosRefr.setDescription('Refreshs')
staTcpipNetbiosTime = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosTime.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosTime.setDescription('Timeouts')
staTcpipNetbiosHost = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosHost.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosHost.setDescription('Hosts')
staTcpipNetbiosGrou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosGrou.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosGrou.setDescription('Groups')
staTcpipNetbiosBnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosBnod.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosBnod.setDescription('B-Nodes')
staTcpipNetbiosPnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPnod.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPnod.setDescription('P-Nodes')
staTcpipNetbiosMnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosMnod.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosMnod.setDescription('M-Nodes')
staTcpipNetbiosWnod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosWnod.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosWnod.setDescription('W-Nodes')
staTcpipNetbiosPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16), )
if mibBuilder.loadTexts: staTcpipNetbiosPeerTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerTable.setDescription('Peers')
staTcpipNetbiosPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipNetbiosPeerNam"))
if mibBuilder.loadTexts: staTcpipNetbiosPeerEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerEntry.setDescription('entry in table')
staTcpipNetbiosPeerNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerNam.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerNam.setDescription('Name')
staTcpipNetbiosPeerTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerTyp.setDescription('Type')
staTcpipNetbiosPeerBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerBac.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerBac.setDescription('Backoff')
staTcpipNetbiosPeerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosPeerTim.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosPeerTim.setDescription('Time')
staTcpipNetbiosNetwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18), )
if mibBuilder.loadTexts: staTcpipNetbiosNetwTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwTable.setDescription('Networks')
staTcpipNetbiosNetwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipNetbiosNetwNet"))
if mibBuilder.loadTexts: staTcpipNetbiosNetwEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwEntry.setDescription('entry in table')
staTcpipNetbiosNetwNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwNet.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwNet.setDescription('Network-name')
staTcpipNetbiosNetwNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwNtd.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwNtd.setDescription('NT-Domain')
staTcpipNetbiosNetwRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwRtg.setDescription('Rtg-tag')
staTcpipNetbiosNetwInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwInt.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwInt.setDescription('Interface')
staTcpipNetbiosNetwVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetbiosNetwVla.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosNetwVla.setDescription('VLAN-ID')
staTcpipNetbiosDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 8, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipNetbiosDele.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetbiosDele.setDescription('Delete-Values')
staTcpipDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9))
staTcpipDnsLanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsLanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsLanr.setDescription('LAN-Rx')
staTcpipDnsLant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsLant.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsLant.setDescription('LAN-Tx')
staTcpipDnsWanr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsWanr.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsWanr.setDescription('WAN-Rx')
staTcpipDnsWant = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsWant.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsWant.setDescription('WAN-Tx')
staTcpipDnsForw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsForw.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsForw.setDescription('Forwarded')
staTcpipDnsErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsErro.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsErro.setDescription('Errors')
staTcpipDnsDnsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsDnsa.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsDnsa.setDescription('DNS-Access')
staTcpipDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsDhcp.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsDhcp.setDescription('DHCP-Access')
staTcpipDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsNetb.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsNetb.setDescription('NetBIOS-Access')
staTcpipDnsFilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsFilt.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsFilt.setDescription('Filter')
staTcpipDnsHitlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11), )
if mibBuilder.loadTexts: staTcpipDnsHitlTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlTable.setDescription('Hit-List')
staTcpipDnsHitlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipDnsHitlDom"))
if mibBuilder.loadTexts: staTcpipDnsHitlEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlEntry.setDescription('entry in table')
staTcpipDnsHitlDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlDom.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlDom.setDescription('Domain')
staTcpipDnsHitlReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlReq.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlReq.setDescription('Requests')
staTcpipDnsHitlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlTim.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlTim.setDescription('Time')
staTcpipDnsHitlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipDnsHitlIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsHitlIpa.setDescription('IP-Address')
staTcpipDnsDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipDnsDele.setStatus('current')
if mibBuilder.loadTexts: staTcpipDnsDele.setDescription('Delete-Values')
staTcpipHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10))
staTcpipHttpHttpac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpac.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpHttpac.setDescription('HTTP-Accesses')
staTcpipHttpHttpsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpsa.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpHttpsa.setDescription('HTTPS-Accesses')
staTcpipHttpHttpno = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpno.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpHttpno.setDescription('HTTP-Notfound-Errors')
staTcpipHttpHttpau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttpau.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpHttpau.setDescription('HTTP-Authentication-Errors')
staTcpipHttpHttppr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpHttppr.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpHttppr.setDescription('HTTP-Protocol-Errors')
staTcpipHttpAgentlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 7), )
if mibBuilder.loadTexts: staTcpipHttpAgentlTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpAgentlTable.setDescription('Agent-List')
staTcpipHttpAgentlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipHttpAgentlAge"))
if mibBuilder.loadTexts: staTcpipHttpAgentlEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpAgentlEntry.setDescription('entry in table')
staTcpipHttpAgentlAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 67))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpAgentlAge.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpAgentlAge.setDescription('Agent-Name')
staTcpipHttpAgentlAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpAgentlAcc.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpAgentlAcc.setDescription('Accesses')
staTcpipHttpDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipHttpDelete.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpDelete.setDescription('Delete-Values')
staTcpipHttpActiveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8), )
if mibBuilder.loadTexts: staTcpipHttpActiveTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveTable.setDescription('Active-Tunnels')
staTcpipHttpActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipHttpActiveIndex"))
if mibBuilder.loadTexts: staTcpipHttpActiveEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveEntry.setDescription('entry in table')
staTcpipHttpActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveIndex.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveIndex.setDescription('Index')
staTcpipHttpActiveRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveRemotea.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveRemotea.setDescription('Remote-Address')
staTcpipHttpActiveRemotep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveRemotep.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveRemotep.setDescription('Remote-Port')
staTcpipHttpActiveLocalho = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalho.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveLocalho.setDescription('Local-Host')
staTcpipHttpActiveLocalpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalpo.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveLocalpo.setDescription('Local-Port')
staTcpipHttpActiveLocalrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveLocalrt.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveLocalrt.setDescription('Local-Rtg-Tag')
staTcpipHttpActiveIdletim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveIdletim.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveIdletim.setDescription('Idle-Time')
staTcpipHttpActiveNumconn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipHttpActiveNumconn.setStatus('current')
if mibBuilder.loadTexts: staTcpipHttpActiveNumconn.setDescription('Num-Connections')
staTcpipNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20), )
if mibBuilder.loadTexts: staTcpipNetworkTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkTable.setDescription('Network-list')
staTcpipNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipNetworkNet"))
if mibBuilder.loadTexts: staTcpipNetworkEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkEntry.setDescription('entry in table')
staTcpipNetworkNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkNet.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkNet.setDescription('Network-name')
staTcpipNetworkIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkIpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkIpa.setDescription('IP-Address')
staTcpipNetworkIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkIpn.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkIpn.setDescription('IP-Netmask')
staTcpipNetworkVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkVla.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkVla.setDescription('VLAN-ID')
staTcpipNetworkInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkInt.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkInt.setDescription('Interface')
staTcpipNetworkSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkSrc.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkSrc.setDescription('Src-check')
staTcpipNetworkTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkTyp.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkTyp.setDescription('Type')
staTcpipNetworkRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 20, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipNetworkRtg.setStatus('current')
if mibBuilder.loadTexts: staTcpipNetworkRtg.setDescription('Rtg-tag')
staTcpipSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11))
staTcpipSyslogLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11), )
if mibBuilder.loadTexts: staTcpipSyslogLasTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasTable.setDescription('Last-Messages')
staTcpipSyslogLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipSyslogLasIdx"))
if mibBuilder.loadTexts: staTcpipSyslogLasEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasEntry.setDescription('entry in table')
staTcpipSyslogLasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasIdx.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasIdx.setDescription('Idx.')
staTcpipSyslogLasTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasTim.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasTim.setDescription('Time')
staTcpipSyslogLasSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasSou.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasSou.setDescription('Source')
staTcpipSyslogLasLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alarm", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasLev.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasLev.setDescription('Level')
staTcpipSyslogLasMes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 11, 11, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipSyslogLasMes.setStatus('current')
if mibBuilder.loadTexts: staTcpipSyslogLasMes.setDescription('Message')
staTcpipRadiusc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13))
staTcpipRadiuscInvalidau = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscInvalidau.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscInvalidau.setDescription('Invalid-Auth.-Address-Responses')
staTcpipRadiuscAuthenticTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2), )
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTable.setDescription('Authentication-Servers')
staTcpipRadiuscAuthenticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiuscAuthenticIpaddress"), (0, "LANCOM-L54g-MIB", "staTcpipRadiuscAuthenticPort"))
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticEntry.setDescription('entry in table')
staTcpipRadiuscAuthenticIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticIpaddress.setDescription('IP-Address')
staTcpipRadiuscAuthenticPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPort.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPort.setDescription('Port')
staTcpipRadiuscAuthenticLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticLastreque.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticLastreque.setDescription('Last-Request')
staTcpipRadiuscAuthenticRoundtrip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticRoundtrip.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticRoundtrip.setDescription('Round-Trip-Time')
staTcpipRadiuscAuthenticAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessreq.setDescription('Access-Requests')
staTcpipRadiuscAuthenticAccessret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessret.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessret.setDescription('Access-Retransmits')
staTcpipRadiuscAuthenticAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessacc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessacc.setDescription('Access-Accepts')
staTcpipRadiuscAuthenticAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessrej.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccessrej.setDescription('Access-Rejects')
staTcpipRadiuscAuthenticAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccesscha.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticAccesscha.setDescription('Access-Challenges')
staTcpipRadiuscAuthenticMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticMalformed.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticMalformed.setDescription('Malformed-Access-Responses')
staTcpipRadiuscAuthenticBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticBadauthen.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticBadauthen.setDescription('Bad-Authenticators')
staTcpipRadiuscAuthenticPendingre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPendingre.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticPendingre.setDescription('Pending-Requests')
staTcpipRadiuscAuthenticTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTimeouts.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticTimeouts.setDescription('Timeouts')
staTcpipRadiuscAuthenticUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticUnknownty.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticUnknownty.setDescription('Unknown-Types')
staTcpipRadiuscAuthenticDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAuthenticDropped.setDescription('Dropped')
staTcpipRadiuscInvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscInvalidac.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscInvalidac.setDescription('Invalid-Accnt.-Address-Responses')
staTcpipRadiuscAccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12), )
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTable.setDescription('Accounting-Servers')
staTcpipRadiuscAccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiuscAccountinIpaddress"), (0, "LANCOM-L54g-MIB", "staTcpipRadiuscAccountinPort"))
if mibBuilder.loadTexts: staTcpipRadiuscAccountinEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinEntry.setDescription('entry in table')
staTcpipRadiuscAccountinIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinIpaddress.setDescription('IP-Address')
staTcpipRadiuscAccountinPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPort.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPort.setDescription('Port')
staTcpipRadiuscAccountinLastrequest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinLastrequest.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinLastrequest.setDescription('Last-Request')
staTcpipRadiuscAccountinRoundtriptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinRoundtriptime.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinRoundtriptime.setDescription('Round-Trip-Time')
staTcpipRadiuscAccountinAccountingreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingreq.setDescription('Accounting-Requests')
staTcpipRadiuscAccountinAccountingret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingret.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingret.setDescription('Accounting-Retransmits')
staTcpipRadiuscAccountinAccountingres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingres.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinAccountingres.setDescription('Accounting-Responses')
staTcpipRadiuscAccountinMalformedacco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinMalformedacco.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinMalformedacco.setDescription('Malformed-Accounting-Responses')
staTcpipRadiuscAccountinBadauthentica = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinBadauthentica.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinBadauthentica.setDescription('Bad-Authenticators')
staTcpipRadiuscAccountinPendingreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPendingreques.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinPendingreques.setDescription('Pending-Requests')
staTcpipRadiuscAccountinTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTimeouts.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinTimeouts.setDescription('Timeouts')
staTcpipRadiuscAccountinUnknowntypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinUnknowntypes.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinUnknowntypes.setDescription('Unknown-Types')
staTcpipRadiuscAccountinDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 13, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiuscAccountinDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiuscAccountinDropped.setDescription('Dropped')
staTcpipRadiuss = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12))
staTcpipRadiussAcce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1))
staTcpipRadiussAcceDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussAcceDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceDeletevalues.setDescription('Delete-Values')
staTcpipRadiussAcceClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15), )
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsTable.setDescription('Clients')
staTcpipRadiussAcceClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiussAcceClientsIpaddress"))
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsEntry.setDescription('entry in table')
staTcpipRadiussAcceClientsIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsIpaddress.setDescription('IP-Address')
staTcpipRadiussAcceClientsLastreque = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsLastreque.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsLastreque.setDescription('Last-Request')
staTcpipRadiussAcceClientsNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsNasident.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsNasident.setDescription('NAS-Ident')
staTcpipRadiussAcceClientsAccessreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessreq.setDescription('Access-Requests')
staTcpipRadiussAcceClientsDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDuplicate.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDuplicate.setDescription('Duplicate-Requests')
staTcpipRadiussAcceClientsAccessacc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessacc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessacc.setDescription('Access-Accepts')
staTcpipRadiussAcceClientsAccessrej = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessrej.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccessrej.setDescription('Access-Rejects')
staTcpipRadiussAcceClientsAccesscha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccesscha.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsAccesscha.setDescription('Access-Challenges')
staTcpipRadiussAcceClientsMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsMalformed.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsMalformed.setDescription('Malformed-Access-Requests')
staTcpipRadiussAcceClientsBadauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsBadauthen.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsBadauthen.setDescription('Bad-Authenticator')
staTcpipRadiussAcceClientsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsDropped.setDescription('Dropped')
staTcpipRadiussAcceClientsUnknownty = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsUnknownty.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceClientsUnknownty.setDescription('Unknown-Type')
staTcpipRadiussAcceTotalaccessreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessreq.setDescription('Total-Access-Requests')
staTcpipRadiussAcceTotalinvalidac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalinvalidac.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalinvalidac.setDescription('Total-Invalid-Access-Requests')
staTcpipRadiussAcceTotalduplicate = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalduplicate.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalduplicate.setDescription('Total-Duplicate-Access-Requests')
staTcpipRadiussAcceTotalaccessacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessacc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessacc.setDescription('Total-Access-Accepts')
staTcpipRadiussAcceTotalaccessrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessrej.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessrej.setDescription('Total-Access-Rejects')
staTcpipRadiussAcceTotalaccesscha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccesscha.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccesscha.setDescription('Total-Access-Challenges')
staTcpipRadiussAcceTotalmalformed = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalmalformed.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalmalformed.setDescription('Total-Malformed-Access-Requests')
staTcpipRadiussAcceTotalaccessbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessbad.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessbad.setDescription('Total-Access-Bad-Authenticator')
staTcpipRadiussAcceTotalaccessdro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessdro.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessdro.setDescription('Total-Access-Dropped')
staTcpipRadiussAcceTotalaccessunk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessunk.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAcceTotalaccessunk.setDescription('Total-Access-Unknown-Type')
staTcpipRadiussAcco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2))
staTcpipRadiussAccoDeletevalues = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussAccoDeletevalues.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoDeletevalues.setDescription('Delete-Values')
staTcpipRadiussAccoClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15), )
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsTable.setDescription('Clients')
staTcpipRadiussAccoClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiussAccoClientsIpaddress"))
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsEntry.setDescription('entry in table')
staTcpipRadiussAccoClientsIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsIpaddress.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsIpaddress.setDescription('IP-Address')
staTcpipRadiussAccoClientsLastreques = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsLastreques.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsLastreques.setDescription('Last-Request')
staTcpipRadiussAccoClientsNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsNasident.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsNasident.setDescription('NAS-Ident')
staTcpipRadiussAccoClientsAccountreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountreq.setDescription('Account-Requests')
staTcpipRadiussAccoClientsDuplicater = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDuplicater.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDuplicater.setDescription('Duplicate-Requests')
staTcpipRadiussAccoClientsAccountres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountres.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountres.setDescription('Account-Responses')
staTcpipRadiussAccoClientsAccountnor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountnor.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsAccountnor.setDescription('Account-NoRecords')
staTcpipRadiussAccoClientsMalformeda = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsMalformeda.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsMalformeda.setDescription('Malformed-Access-Requests')
staTcpipRadiussAccoClientsBadauthent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsBadauthent.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsBadauthent.setDescription('Bad-Authenticator')
staTcpipRadiussAccoClientsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDropped.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsDropped.setDescription('Dropped')
staTcpipRadiussAccoClientsUnknowntyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 15, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsUnknowntyp.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoClientsUnknowntyp.setDescription('Unknown-Type')
staTcpipRadiussAccoActiveaccountinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16), )
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinTable.setDescription('Active-Accounting-Sessions')
staTcpipRadiussAccoActiveaccountinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiussAccoActiveaccountinIndex"))
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinEntry.setDescription('entry in table')
staTcpipRadiussAccoActiveaccountinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIndex.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIndex.setDescription('Index')
staTcpipRadiussAccoActiveaccountinStarttim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinStarttim.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinStarttim.setDescription('Start-Time')
staTcpipRadiussAccoActiveaccountinLastupda = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinLastupda.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinLastupda.setDescription('Last-Update')
staTcpipRadiussAccoActiveaccountinUpdatede = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUpdatede.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUpdatede.setDescription('Update-Delta')
staTcpipRadiussAccoActiveaccountinNasipadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasipadd.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasipadd.setDescription('NAS-IP-Address')
staTcpipRadiussAccoActiveaccountinNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasident.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasident.setDescription('NAS-Ident')
staTcpipRadiussAccoActiveaccountinNasportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1))).clone(namedValues=NamedValues(("async", 0), ("sync", 1), ("isdn-sync", 2), ("v-120", 3), ("v-110", 4), ("virtual", 5), ("piafs", 6), ("hdlc-clear-channel", 7), ("x-25", 8), ("x-75", 9), ("g-3-fax", 10), ("sdsl", 11), ("adsl-cap", 12), ("adsl-dmt", 13), ("idsl", 14), ("ethernet", 15), ("xdsl", 16), ("cable", 17), ("wireless-other", 18), ("wireless-802-11", 19), ("token-ring", 20), ("fddi", 21), ("wireless-cdma2000", 22), ("wireless-umts", 23), ("wireless-1x-ev", 24), ("iapp", 25), ("fttp", 26), ("wireless-802-16", 27), ("wireless-802-20", 28), ("wireless-802-22", 29), ("pppoa", 30), ("pppoeoa", 31), ("pppoeoe", 32), ("pppoeovlan", 33), ("pppoeoqinq", 34), ("xpon", 35), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasportt.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasportt.setDescription('NAS-Port-Type')
staTcpipRadiussAccoActiveaccountinNasporti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasporti.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinNasporti.setDescription('NAS-Port-Id')
staTcpipRadiussAccoActiveaccountinSessioni = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessioni.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessioni.setDescription('Session-ID')
staTcpipRadiussAccoActiveaccountinCalledst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCalledst.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCalledst.setDescription('Called-Station-Id')
staTcpipRadiussAccoActiveaccountinCallings = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCallings.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinCallings.setDescription('Calling-Station-Id')
staTcpipRadiussAccoActiveaccountinUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUsername.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinUsername.setDescription('User-Name')
staTcpipRadiussAccoActiveaccountinSessiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessiont.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinSessiont.setDescription('Session-Time')
staTcpipRadiussAccoActiveaccountinInputpac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputpac.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputpac.setDescription('Input-Packets')
staTcpipRadiussAccoActiveaccountinOutputpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputpa.setDescription('Output-Packets')
staTcpipRadiussAccoActiveaccountinInputoct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputoct.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinInputoct.setDescription('Input-Octets')
staTcpipRadiussAccoActiveaccountinOutputoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputoc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinOutputoc.setDescription('Output-Octets')
staTcpipRadiussAccoActiveaccountinIpaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 16, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIpaddres.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoActiveaccountinIpaddres.setDescription('IP-Address')
staTcpipRadiussAccoCompletedaccounTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17), )
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTable.setDescription('Completed-Accounting-Sessions')
staTcpipRadiussAccoCompletedaccounEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiussAccoCompletedaccounIndex"))
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounEntry.setDescription('entry in table')
staTcpipRadiussAccoCompletedaccounIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIndex.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIndex.setDescription('Index')
staTcpipRadiussAccoCompletedaccounStarttim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStarttim.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStarttim.setDescription('Start-Time')
staTcpipRadiussAccoCompletedaccounStoptime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStoptime.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounStoptime.setDescription('Stop-Time')
staTcpipRadiussAccoCompletedaccounTerminat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("user-request", 1), ("lost-carrier", 2), ("lost-service", 3), ("idle-timeout", 4), ("session-timeout", 5), ("admin-reset", 6), ("admin-reboot", 7), ("port-error", 8), ("nas-error", 9), ("nas-request", 10), ("nas-reboot", 11), ("port-unneeded", 12), ("port-preempted", 13), ("port-suspended", 14), ("service-unavailable", 15), ("callback", 16), ("user-error", 17), ("host-request", 18), ("supplicant-restart", 19), ("reauthentication-failure", 20), ("port-reinit", 21), ("port-admin-disabled", 22)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTerminat.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounTerminat.setDescription('Terminate-Cause')
staTcpipRadiussAccoCompletedaccounNasipadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasipadd.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasipadd.setDescription('NAS-IP-Address')
staTcpipRadiussAccoCompletedaccounNasident = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasident.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasident.setDescription('NAS-Ident')
staTcpipRadiussAccoCompletedaccounNasportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1))).clone(namedValues=NamedValues(("async", 0), ("sync", 1), ("isdn-sync", 2), ("v-120", 3), ("v-110", 4), ("virtual", 5), ("piafs", 6), ("hdlc-clear-channel", 7), ("x-25", 8), ("x-75", 9), ("g-3-fax", 10), ("sdsl", 11), ("adsl-cap", 12), ("adsl-dmt", 13), ("idsl", 14), ("ethernet", 15), ("xdsl", 16), ("cable", 17), ("wireless-other", 18), ("wireless-802-11", 19), ("token-ring", 20), ("fddi", 21), ("wireless-cdma2000", 22), ("wireless-umts", 23), ("wireless-1x-ev", 24), ("iapp", 25), ("fttp", 26), ("wireless-802-16", 27), ("wireless-802-20", 28), ("wireless-802-22", 29), ("pppoa", 30), ("pppoeoa", 31), ("pppoeoe", 32), ("pppoeovlan", 33), ("pppoeoqinq", 34), ("xpon", 35), ("unknown", -1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasportt.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasportt.setDescription('NAS-Port-Type')
staTcpipRadiussAccoCompletedaccounNasporti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasporti.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounNasporti.setDescription('NAS-Port-Id')
staTcpipRadiussAccoCompletedaccounSessioni = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessioni.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessioni.setDescription('Session-ID')
staTcpipRadiussAccoCompletedaccounCalledst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCalledst.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCalledst.setDescription('Called-Station-Id')
staTcpipRadiussAccoCompletedaccounCallings = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCallings.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounCallings.setDescription('Calling-Station-Id')
staTcpipRadiussAccoCompletedaccounUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounUsername.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounUsername.setDescription('User-Name')
staTcpipRadiussAccoCompletedaccounSessiont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessiont.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounSessiont.setDescription('Session-Time')
staTcpipRadiussAccoCompletedaccounInputpac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputpac.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputpac.setDescription('Input-Packets')
staTcpipRadiussAccoCompletedaccounOutputpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputpa.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputpa.setDescription('Output-Packets')
staTcpipRadiussAccoCompletedaccounInputoct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputoct.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounInputoct.setDescription('Input-Octets')
staTcpipRadiussAccoCompletedaccounOutputoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputoc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounOutputoc.setDescription('Output-Octets')
staTcpipRadiussAccoCompletedaccounIpaddres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 17, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIpaddres.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoCompletedaccounIpaddres.setDescription('IP-Address')
staTcpipRadiussAccoTotalaccountreq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountreq.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountreq.setDescription('Total-Account-Requests')
staTcpipRadiussAccoTotalinvalidacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalinvalidacc.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalinvalidacc.setDescription('Total-Invalid-Account-Requests')
staTcpipRadiussAccoTotalduplicatea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalduplicatea.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalduplicatea.setDescription('Total-Duplicate-Account-Requests')
staTcpipRadiussAccoTotalaccountres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountres.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountres.setDescription('Total-Account-Responses')
staTcpipRadiussAccoTotalmalformeda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalmalformeda.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalmalformeda.setDescription('Total-Malformed-Account-Requests')
staTcpipRadiussAccoTotalaccountbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountbad.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountbad.setDescription('Total-Account-Bad-Authenticator')
staTcpipRadiussAccoTotalaccountdro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountdro.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountdro.setDescription('Total-Account-Dropped')
staTcpipRadiussAccoTotalaccountnor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountnor.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountnor.setDescription('Total-Account-NoRecord')
staTcpipRadiussAccoTotalaccountunk = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountunk.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussAccoTotalaccountunk.setDescription('Total-Account-Unknown-Type')
staTcpipRadiussLogtTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 10), )
if mibBuilder.loadTexts: staTcpipRadiussLogtTable.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussLogtTable.setDescription('Log-Table')
staTcpipRadiussLogtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTcpipRadiussLogtInd"))
if mibBuilder.loadTexts: staTcpipRadiussLogtEntry.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussLogtEntry.setDescription('entry in table')
staTcpipRadiussLogtInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtInd.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussLogtInd.setDescription('Index')
staTcpipRadiussLogtTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtTim.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussLogtTim.setDescription('Time')
staTcpipRadiussLogtEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 10, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTcpipRadiussLogtEve.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussLogtEve.setDescription('Event')
staTcpipRadiussDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 9, 12, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTcpipRadiussDele.setStatus('current')
if mibBuilder.loadTexts: staTcpipRadiussDele.setDescription('Delete-Values')
staIprou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10))
staIprouLanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanrx.setStatus('current')
if mibBuilder.loadTexts: staIprouLanrx.setDescription('LAN-Rx')
staIprouLantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLantx.setStatus('current')
if mibBuilder.loadTexts: staIprouLantx.setDescription('LAN-Tx')
staIprouLanloca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanloca.setStatus('current')
if mibBuilder.loadTexts: staIprouLanloca.setDescription('LAN-Local-Routings')
staIprouLannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLannetw.setStatus('current')
if mibBuilder.loadTexts: staIprouLannetw.setDescription('LAN-Network-Errors')
staIprouLanrout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanrout.setStatus('current')
if mibBuilder.loadTexts: staIprouLanrout.setDescription('LAN-Routing-Errors')
staIprouLanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanttle.setStatus('current')
if mibBuilder.loadTexts: staIprouLanttle.setDescription('LAN-TTL-Errors')
staIprouLanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLanfilt.setStatus('current')
if mibBuilder.loadTexts: staIprouLanfilt.setDescription('LAN-Filters')
staIprouLandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLandisc.setStatus('current')
if mibBuilder.loadTexts: staIprouLandisc.setDescription('LAN-Discards')
staIprouWanrx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanrx.setStatus('current')
if mibBuilder.loadTexts: staIprouWanrx.setDescription('WAN-Rx')
staIprouWantx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWantx.setStatus('current')
if mibBuilder.loadTexts: staIprouWantx.setDescription('WAN-Tx')
staIprouWannetw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWannetw.setStatus('current')
if mibBuilder.loadTexts: staIprouWannetw.setDescription('WAN-Network-Errors')
staIprouWanttle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanttle.setStatus('current')
if mibBuilder.loadTexts: staIprouWanttle.setDescription('WAN-TTL-Errors')
staIprouWanfilt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWanfilt.setStatus('current')
if mibBuilder.loadTexts: staIprouWanfilt.setDescription('WAN-Filters')
staIprouWandisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWandisc.setStatus('current')
if mibBuilder.loadTexts: staIprouWandisc.setDescription('WAN-Discards')
staIprouWantype = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouWantype.setStatus('current')
if mibBuilder.loadTexts: staIprouWantype.setDescription('WAN-Type-Errors')
staIprouArperro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouArperro.setStatus('current')
if mibBuilder.loadTexts: staIprouArperro.setDescription('ARP-Errors')
staIprouEstabliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17), )
if mibBuilder.loadTexts: staIprouEstabliTable.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliTable.setDescription('Establish-Table')
staIprouEstabliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouEstabliTim"), (0, "LANCOM-L54g-MIB", "staIprouEstabliCou"))
if mibBuilder.loadTexts: staIprouEstabliEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliEntry.setDescription('entry in table')
staIprouEstabliTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliTim.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliTim.setDescription('Time')
staIprouEstabliDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliDes.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliDes.setDescription('Dest.-Address')
staIprouEstabliSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliSrc.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliSrc.setDescription('Src.-Address')
staIprouEstabliPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliPro.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliPro.setDescription('Prot.')
staIprouEstabliDpo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliDpo.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliDpo.setDescription('D-port-from')
staIprouEstabliSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliSou.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliSou.setDescription('Source-Port')
staIprouEstabliCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouEstabliCou.setStatus('current')
if mibBuilder.loadTexts: staIprouEstabliCou.setDescription('Counter')
staIprouProtocoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 18), )
if mibBuilder.loadTexts: staIprouProtocoTable.setStatus('current')
if mibBuilder.loadTexts: staIprouProtocoTable.setDescription('Protocol-Table')
staIprouProtocoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 18, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouProtocoPro"))
if mibBuilder.loadTexts: staIprouProtocoEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouProtocoEntry.setDescription('entry in table')
staIprouProtocoPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 8, 17, 47, 50, 51, 62, 108, 112, 119))).clone(namedValues=NamedValues(("icmp", 1), ("igmp", 2), ("ggt", 3), ("ipip", 4), ("tcp", 6), ("egp", 8), ("udp", 17), ("gre", 47), ("esp", 50), ("ah", 51), ("cftp", 62), ("ipcomp", 108), ("vrrp", 112), ("srp", 119)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtocoPro.setStatus('current')
if mibBuilder.loadTexts: staIprouProtocoPro.setDescription('Prot.')
staIprouProtocoLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtocoLan.setStatus('current')
if mibBuilder.loadTexts: staIprouProtocoLan.setDescription('LAN-Tx')
staIprouProtocoWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouProtocoWan.setStatus('current')
if mibBuilder.loadTexts: staIprouProtocoWan.setDescription('WAN-Tx')
staIprouRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19))
staIprouRipRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipRx.setStatus('current')
if mibBuilder.loadTexts: staIprouRipRx.setDescription('Rx')
staIprouRipRequ = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipRequ.setStatus('current')
if mibBuilder.loadTexts: staIprouRipRequ.setDescription('Requests')
staIprouRipResp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipResp.setStatus('current')
if mibBuilder.loadTexts: staIprouRipResp.setDescription('Response')
staIprouRipDisc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDisc.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDisc.setDescription('Discards')
staIprouRipErro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipErro.setStatus('current')
if mibBuilder.loadTexts: staIprouRipErro.setDescription('Errors')
staIprouRipEntr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipEntr.setStatus('current')
if mibBuilder.loadTexts: staIprouRipEntr.setDescription('Entry-Errors')
staIprouRipTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipTx.setStatus('current')
if mibBuilder.loadTexts: staIprouRipTx.setDescription('Tx')
staIprouRipIpriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8), )
if mibBuilder.loadTexts: staIprouRipIpriTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriTable.setDescription('IP-RIP-Table')
staIprouRipIpriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipIpriIpa"), (0, "LANCOM-L54g-MIB", "staIprouRipIpriIpn"), (0, "LANCOM-L54g-MIB", "staIprouRipIpriRtg"))
if mibBuilder.loadTexts: staIprouRipIpriEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriEntry.setDescription('entry in table')
staIprouRipIpriIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriIpa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriIpa.setDescription('IP-Address')
staIprouRipIpriIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriIpn.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriIpn.setDescription('IP-Netmask')
staIprouRipIpriRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriRtg.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriRtg.setDescription('Rtg-tag')
staIprouRipIpriTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriTim.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriTim.setDescription('Time')
staIprouRipIpriDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriDis.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriDis.setDescription('Distance')
staIprouRipIpriGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriGat.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriGat.setDescription('Gateway')
staIprouRipIpriPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriPee.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriPee.setDescription('Peer')
staIprouRipIpriPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriPor.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriPor.setDescription('Port')
staIprouRipIpriVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriVla.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriVla.setDescription('VLAN-ID')
staIprouRipIpriNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 8, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipIpriNet.setStatus('current')
if mibBuilder.loadTexts: staIprouRipIpriNet.setDescription('Network-name')
staIprouRipDele = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouRipDele.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDele.setDescription('Delete-Values')
staIprouRipLansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10), )
if mibBuilder.loadTexts: staIprouRipLansTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansTable.setDescription('LAN-Sites')
staIprouRipLansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipLansNetw"))
if mibBuilder.loadTexts: staIprouRipLansEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansEntry.setDescription('entry in table')
staIprouRipLansNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansNetw.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansNetw.setDescription('Network-name')
staIprouRipLansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRipt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansRipt.setDescription('RIP-Type')
staIprouRipLansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRipa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansRipa.setDescription('RIP-Accept')
staIprouRipLansProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansProp.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansProp.setDescription('Propagate')
staIprouRipLansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansPois.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansPois.setDescription('Poisoned-Reverse')
staIprouRipLansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansDftr.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansDftr.setDescription('Dft-Rtg-Tag')
staIprouRipLansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansRtgt.setDescription('Rtg-Tag-List')
staIprouRipLansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansRxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansRxfi.setDescription('Rx-Filter')
staIprouRipLansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansTxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansTxfi.setDescription('Tx-Filter')
staIprouRipLansPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansPort.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansPort.setDescription('Port')
staIprouRipLansVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipLansVlan.setStatus('current')
if mibBuilder.loadTexts: staIprouRipLansVlan.setDescription('VLAN-ID')
staIprouRipVrrpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 12), )
if mibBuilder.loadTexts: staIprouRipVrrpTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipVrrpTable.setDescription('VRRP-Sites')
staIprouRipVrrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipVrrpNet"), (0, "LANCOM-L54g-MIB", "staIprouRipVrrpRou"))
if mibBuilder.loadTexts: staIprouRipVrrpEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipVrrpEntry.setDescription('entry in table')
staIprouRipVrrpNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpNet.setStatus('current')
if mibBuilder.loadTexts: staIprouRipVrrpNet.setDescription('Network-name')
staIprouRipVrrpRip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpRip.setStatus('current')
if mibBuilder.loadTexts: staIprouRipVrrpRip.setDescription('RIP-Type')
staIprouRipVrrpRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipVrrpRou.setStatus('current')
if mibBuilder.loadTexts: staIprouRipVrrpRou.setDescription('Router-ID')
staIprouRipWansTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11), )
if mibBuilder.loadTexts: staIprouRipWansTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansTable.setDescription('WAN-Sites')
staIprouRipWansEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipWansPeer"))
if mibBuilder.loadTexts: staIprouRipWansEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansEntry.setDescription('entry in table')
staIprouRipWansPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansPeer.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansPeer.setDescription('Peer')
staIprouRipWansRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRipt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansRipt.setDescription('RIP-Type')
staIprouRipWansRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRipa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansRipa.setDescription('RIP-Accept')
staIprouRipWansMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansMasq.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansMasq.setDescription('Masquerade')
staIprouRipWansPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansPois.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansPois.setDescription('Poisoned-Reverse')
staIprouRipWansRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRfc2.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansRfc2.setDescription('RFC2091')
staIprouRipWansGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansGate.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansGate.setDescription('Gateway')
staIprouRipWansDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansDftr.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansDftr.setDescription('Dft-Rtg-Tag')
staIprouRipWansRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansRtgt.setDescription('Rtg-Tag-List')
staIprouRipWansRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansRxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansRxfi.setDescription('Rx-Filter')
staIprouRipWansTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 11, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipWansTxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipWansTxfi.setDescription('Tx-Filter')
staIprouRipDynlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13), )
if mibBuilder.loadTexts: staIprouRipDynlTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlTable.setDescription('Dyn.-LAN-Sites')
staIprouRipDynlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipDynlGate"))
if mibBuilder.loadTexts: staIprouRipDynlEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlEntry.setDescription('entry in table')
staIprouRipDynlGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlGate.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlGate.setDescription('Gateway')
staIprouRipDynlRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRipt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlRipt.setDescription('RIP-Type')
staIprouRipDynlRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRipa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlRipa.setDescription('RIP-Accept')
staIprouRipDynlPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlPois.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlPois.setDescription('Poisoned-Reverse')
staIprouRipDynlDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlDftr.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlDftr.setDescription('Dft-Rtg-Tag')
staIprouRipDynlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlRtgt.setDescription('Rtg-Tag-List')
staIprouRipDynlRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlRxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlRxfi.setDescription('Rx-Filter')
staIprouRipDynlTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlTxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlTxfi.setDescription('Tx-Filter')
staIprouRipDynlPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlPort.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlPort.setDescription('Port')
staIprouRipDynlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynlVlan.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynlVlan.setDescription('VLAN-ID')
staIprouRipDynwTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14), )
if mibBuilder.loadTexts: staIprouRipDynwTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwTable.setDescription('Dyn.-WAN-Sites')
staIprouRipDynwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipDynwPeer"))
if mibBuilder.loadTexts: staIprouRipDynwEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwEntry.setDescription('entry in table')
staIprouRipDynwPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwPeer.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwPeer.setDescription('Peer')
staIprouRipDynwRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRipt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwRipt.setDescription('RIP-Type')
staIprouRipDynwRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRipa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwRipa.setDescription('RIP-Accept')
staIprouRipDynwMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwMasq.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwMasq.setDescription('Masquerade')
staIprouRipDynwPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwPois.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwPois.setDescription('Poisoned-Reverse')
staIprouRipDynwRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRfc2.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwRfc2.setDescription('RFC2091')
staIprouRipDynwGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwGate.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwGate.setDescription('Gateway')
staIprouRipDynwDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwDftr.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwDftr.setDescription('Dft-Rtg-Tag')
staIprouRipDynwRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwRtgt.setDescription('Rtg-Tag-List')
staIprouRipDynwRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwRxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwRxfi.setDescription('Rx-Filter')
staIprouRipDynwTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 14, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipDynwTxfi.setStatus('current')
if mibBuilder.loadTexts: staIprouRipDynwTxfi.setDescription('Tx-Filter')
staIprouRipFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15), )
if mibBuilder.loadTexts: staIprouRipFiltTable.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltTable.setDescription('Filter')
staIprouRipFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouRipFiltIdx"))
if mibBuilder.loadTexts: staIprouRipFiltEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltEntry.setDescription('entry in table')
staIprouRipFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIdx.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltIdx.setDescription('Idx.')
staIprouRipFiltNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltNam.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltNam.setDescription('Name')
staIprouRipFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIpa.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltIpa.setDescription('IP-Address')
staIprouRipFiltIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltIpn.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltIpn.setDescription('IP-Netmask')
staIprouRipFiltTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 19, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("positive", 1), ("negative", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRipFiltTyp.setStatus('current')
if mibBuilder.loadTexts: staIprouRipFiltTyp.setDescription('Type')
staIprouDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouDeletev.setStatus('current')
if mibBuilder.loadTexts: staIprouDeletev.setDescription('Delete-Values')
staIprouServiceTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21), )
if mibBuilder.loadTexts: staIprouServiceTable.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceTable.setDescription('Service-Table')
staIprouServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouServiceService"))
if mibBuilder.loadTexts: staIprouServiceEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceEntry.setDescription('entry in table')
staIprouServiceService = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("icmp", 1), ("ftp", 2), ("http", 3), ("smtp", 4), ("dns", 5), ("telnet", 6), ("tftp", 7), ("dhcp", 8), ("pop3", 9), ("netbios", 10), ("imap2", 11), ("news", 12), ("irc", 13), ("snmp", 14), ("other", 15), ("total", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiceService.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceService.setDescription('Service')
staIprouServicePacketrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServicePacketrx.setStatus('current')
if mibBuilder.loadTexts: staIprouServicePacketrx.setDescription('Packet-Rx')
staIprouServicePackettx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServicePackettx.setStatus('current')
if mibBuilder.loadTexts: staIprouServicePackettx.setDescription('Packet-Tx')
staIprouServicePacketre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServicePacketre.setStatus('current')
if mibBuilder.loadTexts: staIprouServicePacketre.setDescription('Packet-Rel')
staIprouServiceKbytesrx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiceKbytesrx.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceKbytesrx.setDescription('KBytes-Rx')
staIprouServiceKbytestx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiceKbytestx.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceKbytestx.setDescription('KBytes-Tx')
staIprouServiceKbytesre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 21, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouServiceKbytesre.setStatus('current')
if mibBuilder.loadTexts: staIprouServiceKbytesre.setDescription('KBytes-Rel')
staIprouFilterlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22), )
if mibBuilder.loadTexts: staIprouFilterlTable.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlTable.setDescription('Filter-List')
staIprouFilterlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouFilterlIdx"))
if mibBuilder.loadTexts: staIprouFilterlEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlEntry.setDescription('entry in table')
staIprouFilterlIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlIdx.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlIdx.setDescription('Idx.')
staIprouFilterlProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlProt.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlProt.setDescription('Prot.')
staIprouFilterlSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlSrcm.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlSrcm.setDescription('Src-MAC')
staIprouFilterlSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlSrca.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlSrca.setDescription('Src-Address')
staIprouFilterlSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlSrcn.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlSrcn.setDescription('Src-Netmask')
staIprouFilterlSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlSst.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlSst.setDescription('S-St.')
staIprouFilterlSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlSend.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlSend.setDescription('S-End')
staIprouFilterlDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlDstm.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlDstm.setDescription('Dst-MAC')
staIprouFilterlDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlDsta.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlDsta.setDescription('Dst-Address')
staIprouFilterlDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlDstn.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlDstn.setDescription('Dst-Netmask')
staIprouFilterlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlDst.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlDst.setDescription('D-St.')
staIprouFilterlDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlDend.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlDend.setDescription('D-End')
staIprouFilterlActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlActi.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlActi.setDescription('Action')
staIprouFilterlLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlLink.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlLink.setDescription('Linked')
staIprouFilterlPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlPrio.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlPrio.setDescription('Prio')
staIprouFilterlRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 22, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilterlRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouFilterlRtgt.setDescription('Rtg-tag')
staIprouConnectTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23), )
if mibBuilder.loadTexts: staIprouConnectTable.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectTable.setDescription('Connection-List')
staIprouConnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouConnectSrca"), (0, "LANCOM-L54g-MIB", "staIprouConnectDsta"), (0, "LANCOM-L54g-MIB", "staIprouConnectProt"), (0, "LANCOM-L54g-MIB", "staIprouConnectSrcp"), (0, "LANCOM-L54g-MIB", "staIprouConnectDstp"))
if mibBuilder.loadTexts: staIprouConnectEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectEntry.setDescription('entry in table')
staIprouConnectSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectSrca.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectSrca.setDescription('Src-Address')
staIprouConnectDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectDsta.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectDsta.setDescription('Dst-Address')
staIprouConnectProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectProt.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectProt.setDescription('Prot.')
staIprouConnectSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectSrcp.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectSrcp.setDescription('Src-Port')
staIprouConnectDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectDstp.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectDstp.setDescription('Dst-Port')
staIprouConnectRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectRtgt.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectRtgt.setDescription('Rtg-tag')
staIprouConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectTime.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectTime.setDescription('Timeout')
staIprouConnectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectFlag.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectFlag.setDescription('Flags')
staIprouConnectFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectFilt.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectFilt.setDescription('Filter-Rule')
staIprouConnectSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectSrcr.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectSrcr.setDescription('Src-Route')
staIprouConnectDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 23, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouConnectDest.setStatus('current')
if mibBuilder.loadTexts: staIprouConnectDest.setDescription('Dest-Route')
staIprouOpenporTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29), )
if mibBuilder.loadTexts: staIprouOpenporTable.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporTable.setDescription('Open-Port-List')
staIprouOpenporEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouOpenporSrca"), (0, "LANCOM-L54g-MIB", "staIprouOpenporDsta"), (0, "LANCOM-L54g-MIB", "staIprouOpenporProt"), (0, "LANCOM-L54g-MIB", "staIprouOpenporDstp"))
if mibBuilder.loadTexts: staIprouOpenporEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporEntry.setDescription('entry in table')
staIprouOpenporSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporSrca.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporSrca.setDescription('Src-Address')
staIprouOpenporDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporDsta.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporDsta.setDescription('Dst-Address')
staIprouOpenporProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporProt.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporProt.setDescription('Prot.')
staIprouOpenporDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporDstp.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporDstp.setDescription('Dst-Port')
staIprouOpenporTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporTime.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporTime.setDescription('Timeout')
staIprouOpenporFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporFilt.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporFilt.setDescription('Filter-Rule')
staIprouOpenporSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 29, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouOpenporSrcr.setStatus('current')
if mibBuilder.loadTexts: staIprouOpenporSrcr.setDescription('Src-Route')
staIprouHostbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 24), )
if mibBuilder.loadTexts: staIprouHostbloTable.setStatus('current')
if mibBuilder.loadTexts: staIprouHostbloTable.setDescription('Host-Block-List')
staIprouHostbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 24, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouHostbloSrc"))
if mibBuilder.loadTexts: staIprouHostbloEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouHostbloEntry.setDescription('entry in table')
staIprouHostbloSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 24, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbloSrc.setStatus('current')
if mibBuilder.loadTexts: staIprouHostbloSrc.setDescription('Src-Address')
staIprouHostbloTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 24, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbloTim.setStatus('current')
if mibBuilder.loadTexts: staIprouHostbloTim.setDescription('Timeout')
staIprouHostbloFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 24, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHostbloFil.setStatus('current')
if mibBuilder.loadTexts: staIprouHostbloFil.setDescription('Filter-Rule')
staIprouPortbloTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25), )
if mibBuilder.loadTexts: staIprouPortbloTable.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloTable.setDescription('Port-Block-List')
staIprouPortbloEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouPortbloDsta"))
if mibBuilder.loadTexts: staIprouPortbloEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloEntry.setDescription('entry in table')
staIprouPortbloDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbloDsta.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloDsta.setDescription('Dst-Address')
staIprouPortbloProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbloProt.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloProt.setDescription('Prot.')
staIprouPortbloDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbloDstp.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloDstp.setDescription('Dst-Port')
staIprouPortbloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbloTime.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloTime.setDescription('Timeout')
staIprouPortbloFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 25, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouPortbloFilt.setStatus('current')
if mibBuilder.loadTexts: staIprouPortbloFilt.setDescription('Filter-Rule')
staIprouLogtablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26), )
if mibBuilder.loadTexts: staIprouLogtablTable.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablTable.setDescription('Log-Table')
staIprouLogtablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouLogtablIdx"))
if mibBuilder.loadTexts: staIprouLogtablEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablEntry.setDescription('entry in table')
staIprouLogtablIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablIdx.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablIdx.setDescription('Idx.')
staIprouLogtablSyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablSyst.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablSyst.setDescription('System-time')
staIprouLogtablSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablSrca.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablSrca.setDescription('Src-Address')
staIprouLogtablDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablDsta.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablDsta.setDescription('Dst-Address')
staIprouLogtablProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablProt.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablProt.setDescription('Prot.')
staIprouLogtablSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablSrcp.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablSrcp.setDescription('Src-Port')
staIprouLogtablDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablDstp.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablDstp.setDescription('Dst-Port')
staIprouLogtablFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablFilt.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablFilt.setDescription('Filter-Rule')
staIprouLogtablLimi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablLimi.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablLimi.setDescription('Limit')
staIprouLogtablThre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablThre.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablThre.setDescription('Threshold')
staIprouLogtablActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 26, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouLogtablActi.setStatus('current')
if mibBuilder.loadTexts: staIprouLogtablActi.setDescription('Action')
staIprouHoconnlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 27), )
if mibBuilder.loadTexts: staIprouHoconnlTable.setStatus('current')
if mibBuilder.loadTexts: staIprouHoconnlTable.setDescription('HO-Conn.-List')
staIprouHoconnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 27, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouHoconnlDst"))
if mibBuilder.loadTexts: staIprouHoconnlEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouHoconnlEntry.setDescription('entry in table')
staIprouHoconnlDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 27, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconnlDst.setStatus('current')
if mibBuilder.loadTexts: staIprouHoconnlDst.setDescription('Dst-Address')
staIprouHoconnlNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 27, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconnlNum.setStatus('current')
if mibBuilder.loadTexts: staIprouHoconnlNum.setDescription('Num-HO-Conn.')
staIprouHoconnlTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 27, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouHoconnlTim.setStatus('current')
if mibBuilder.loadTexts: staIprouHoconnlTim.setDescription('Timeout')
staIprouQosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28), )
if mibBuilder.loadTexts: staIprouQosTable.setStatus('current')
if mibBuilder.loadTexts: staIprouQosTable.setDescription('QoS')
staIprouQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouQosIfc"))
if mibBuilder.loadTexts: staIprouQosEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouQosEntry.setDescription('entry in table')
staIprouQosIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosIfc.setStatus('current')
if mibBuilder.loadTexts: staIprouQosIfc.setDescription('Ifc')
staIprouQosPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosPeer.setStatus('current')
if mibBuilder.loadTexts: staIprouQosPeer.setDescription('Peer')
staIprouQosUpstr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosUpstr.setStatus('current')
if mibBuilder.loadTexts: staIprouQosUpstr.setDescription('Upstream-Rate')
staIprouQosDowns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosDowns.setStatus('current')
if mibBuilder.loadTexts: staIprouQosDowns.setDescription('Downstream-Rate')
staIprouQosRxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxres.setStatus('current')
if mibBuilder.loadTexts: staIprouQosRxres.setDescription('Rx-reserved')
staIprouQosRxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxreq.setStatus('current')
if mibBuilder.loadTexts: staIprouQosRxreq.setDescription('Rx-requested')
staIprouQosRxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosRxblo.setStatus('current')
if mibBuilder.loadTexts: staIprouQosRxblo.setDescription('Rx-blocks-pending')
staIprouQosTxres = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxres.setStatus('current')
if mibBuilder.loadTexts: staIprouQosTxres.setDescription('Tx-reserved')
staIprouQosTxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxreq.setStatus('current')
if mibBuilder.loadTexts: staIprouQosTxreq.setDescription('Tx-requested')
staIprouQosTxfav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxfav.setStatus('current')
if mibBuilder.loadTexts: staIprouQosTxfav.setDescription('Tx-favoured')
staIprouQosTxblo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosTxblo.setStatus('current')
if mibBuilder.loadTexts: staIprouQosTxblo.setDescription('Tx-blocks-pending')
staIprouQosFragm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosFragm.setStatus('current')
if mibBuilder.loadTexts: staIprouQosFragm.setDescription('Fragment-size')
staIprouQosPmtus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouQosPmtus.setStatus('current')
if mibBuilder.loadTexts: staIprouQosPmtus.setDescription('PMTU-size')
staIprouRules = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouRules.setStatus('current')
if mibBuilder.loadTexts: staIprouRules.setDescription('Rules')
staIprouFilter = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouFilter.setStatus('current')
if mibBuilder.loadTexts: staIprouFilter.setDescription('Filter')
staIprouL4error = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouL4error.setStatus('current')
if mibBuilder.loadTexts: staIprouL4error.setDescription('L4-Errors')
staIprouVrrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33))
staIprouVrrpOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpOpe.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpOpe.setDescription('Operating')
staIprouVrrpRx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpRx.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpRx.setDescription('Rx')
staIprouVrrpTx = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpTx.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpTx.setDescription('Tx')
staIprouVrrpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpErr.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpErr.setDescription('Error')
staIprouVrrpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpDro.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpDro.setDescription('Drop')
staIprouVrrpInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpInt.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpInt.setDescription('Internal-Services')
staIprouVrrpVirTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10), )
if mibBuilder.loadTexts: staIprouVrrpVirTable.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirTable.setDescription('Virtual-Router')
staIprouVrrpVirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouVrrpVirRou"))
if mibBuilder.loadTexts: staIprouVrrpVirEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirEntry.setDescription('entry in table')
staIprouVrrpVirRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirRou.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirRou.setDescription('Router-ID')
staIprouVrrpVirVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirVir.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirVir.setDescription('virt.-Address')
staIprouVrrpVirPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPri.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirPri.setDescription('Prio')
staIprouVrrpVirBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirBpr.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirBpr.setDescription('B-Prio')
staIprouVrrpVirPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPee.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirPee.setDescription('Peer')
staIprouVrrpVirSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("init", 0), ("listen", 1), ("standby", 2), ("master", 3), ("down", 4), ("reconnect", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirSta.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirSta.setDescription('State')
staIprouVrrpVirBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirBac.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirBac.setDescription('Backup')
staIprouVrrpVirMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirMas.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirMas.setDescription('Master')
staIprouVrrpVirPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirPor.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirPor.setDescription('Port')
staIprouVrrpVirVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirVla.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirVla.setDescription('VLAN-ID')
staIprouVrrpVirNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 10, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpVirNet.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpVirNet.setDescription('Network-name')
staIprouVrrpMacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 11), )
if mibBuilder.loadTexts: staIprouVrrpMacTable.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpMacTable.setDescription('MAC-List')
staIprouVrrpMacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouVrrpMacVir"))
if mibBuilder.loadTexts: staIprouVrrpMacEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpMacEntry.setDescription('entry in table')
staIprouVrrpMacVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacVir.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpMacVir.setDescription('virt.-Address')
staIprouVrrpMacMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 11, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacMac.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpMacMac.setDescription('MAC-Address')
staIprouVrrpMacRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpMacRou.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpMacRou.setDescription('Router-ID')
staIprouVrrpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12), )
if mibBuilder.loadTexts: staIprouVrrpEveTable.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveTable.setDescription('Event-Log')
staIprouVrrpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouVrrpEveIdx"))
if mibBuilder.loadTexts: staIprouVrrpEveEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveEntry.setDescription('entry in table')
staIprouVrrpEveIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveIdx.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveIdx.setDescription('Idx.')
staIprouVrrpEveSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveSys.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveSys.setDescription('System-time')
staIprouVrrpEveSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveSrc.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveSrc.setDescription('Src-Address')
staIprouVrrpEveVri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveVri.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveVri.setDescription('VRID')
staIprouVrrpEveEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("invalid-ttl", 1), ("invalid-version", 2), ("bad-number-of-virtual-addresses", 3), ("bad-authentication-type", 4), ("bad-advertisement-interval", 5), ("invalid-vrid", 6), ("invalid-router-address", 7), ("invalid-priority", 8), ("virtual-router-stopped", 9), ("virtual-router-started", 10), ("link-up", 11), ("link-down", 12), ("new-master", 13), ("backup-started", 14), ("backup-ended", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveEve.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveEve.setDescription('Event')
staIprouVrrpEveInf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouVrrpEveInf.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpEveInf.setDescription('Info')
staIprouVrrpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 33, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staIprouVrrpDel.setStatus('current')
if mibBuilder.loadTexts: staIprouVrrpDel.setDescription('Delete-Values')
staIprouActiproTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30), )
if mibBuilder.loadTexts: staIprouActiproTable.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproTable.setDescription('Act.-IP-Routing-Tab.')
staIprouActiproEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIprouActiproIpa"), (0, "LANCOM-L54g-MIB", "staIprouActiproIpn"), (0, "LANCOM-L54g-MIB", "staIprouActiproRtg"))
if mibBuilder.loadTexts: staIprouActiproEntry.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproEntry.setDescription('entry in table')
staIprouActiproIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproIpa.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproIpa.setDescription('IP-Address')
staIprouActiproIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproIpn.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproIpn.setDescription('IP-Netmask')
staIprouActiproRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproRtg.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproRtg.setDescription('Rtg-tag')
staIprouActiproGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproGat.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproGat.setDescription('Gateway')
staIprouActiproPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproPee.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproPee.setDescription('Peer')
staIprouActiproDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproDis.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproDis.setDescription('Distance')
staIprouActiproMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproMas.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproMas.setDescription('Masquerade')
staIprouActiproTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 10, 30, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("static", 1), ("rip", 2), ("vpn", 3), ("capwap", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIprouActiproTyp.setStatus('current')
if mibBuilder.loadTexts: staIprouActiproTyp.setDescription('Type')
staConfi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11))
staConfiLanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLanactiv.setStatus('current')
if mibBuilder.loadTexts: staConfiLanactiv.setDescription('LAN-Active-Connections')
staConfiLantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLantotal.setStatus('current')
if mibBuilder.loadTexts: staConfiLantotal.setDescription('LAN-Total-Connections')
staConfiWanactiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiWanactiv.setStatus('current')
if mibBuilder.loadTexts: staConfiWanactiv.setDescription('WAN-Active-Connections')
staConfiWantotal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiWantotal.setStatus('current')
if mibBuilder.loadTexts: staConfiWantotal.setDescription('WAN-Total-Connections')
staConfiOutbanda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbanda.setStatus('current')
if mibBuilder.loadTexts: staConfiOutbanda.setDescription('Outband-Active-Connections')
staConfiOutbandt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbandt.setStatus('current')
if mibBuilder.loadTexts: staConfiOutbandt.setDescription('Outband-total-Connections')
staConfiOutbandb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiOutbandb.setStatus('current')
if mibBuilder.loadTexts: staConfiOutbandb.setDescription('Outband-Bitrate')
staConfiLoginerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginerr.setStatus('current')
if mibBuilder.loadTexts: staConfiLoginerr.setDescription('Login-Errors')
staConfiLoginloc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginloc.setStatus('current')
if mibBuilder.loadTexts: staConfiLoginloc.setDescription('Login-Locks')
staConfiLoginrej = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiLoginrej.setStatus('current')
if mibBuilder.loadTexts: staConfiLoginrej.setDescription('Login-Rejects')
staConfiStartsca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfiStartsca.setStatus('current')
if mibBuilder.loadTexts: staConfiStartsca.setDescription('Start-Scan')
staConfiScanresuTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14), )
if mibBuilder.loadTexts: staConfiScanresuTable.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuTable.setDescription('Scan-Results')
staConfiScanresuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staConfiScanresuIpadd"), (0, "LANCOM-L54g-MIB", "staConfiScanresuRtgta"))
if mibBuilder.loadTexts: staConfiScanresuEntry.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuEntry.setDescription('entry in table')
staConfiScanresuIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuIpadd.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuIpadd.setDescription('IP-Address')
staConfiScanresuRtgta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuRtgta.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuRtgta.setDescription('Rtg-tag')
staConfiScanresuName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuName.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuName.setDescription('Name')
staConfiScanresuDevic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuDevic.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuDevic.setDescription('Device-Type')
staConfiScanresuVersi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuVersi.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuVersi.setDescription('Version')
staConfiScanresuCapip = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuCapip.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuCapip.setDescription('CAPI-Port')
staConfiScanresuHttpp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuHttpp.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuHttpp.setDescription('HTTP-Port')
staConfiScanresuHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuHttps.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuHttps.setDescription('HTTPS-Port')
staConfiScanresuState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("scanning", 0), ("ready", 1), ("error", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiScanresuState.setStatus('current')
if mibBuilder.loadTexts: staConfiScanresuState.setDescription('State')
staConfiFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 16), )
if mibBuilder.loadTexts: staConfiFeaturesTable.setStatus('current')
if mibBuilder.loadTexts: staConfiFeaturesTable.setDescription('Features')
staConfiFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staConfiFeaturesFea"))
if mibBuilder.loadTexts: staConfiFeaturesEntry.setStatus('current')
if mibBuilder.loadTexts: staConfiFeaturesEntry.setDescription('entry in table')
staConfiFeaturesFea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("ipx", 1), ("lan-bridge", 2), ("lancapi", 3), ("leased-line", 4), ("switched-line", 5), ("dsl-interface", 6), ("fax", 7), ("modem", 8), ("vpn-5", 9), ("vpn-25", 10), ("vpn-25-old", 11), ("vpn-50-old", 12), ("vpn-100", 13), ("wlc-4025-100", 14), ("wlan-point-to-point", 15), ("public-spot", 16), ("vpn-200", 17), ("vpn-500", 18), ("vpn-1000", 19), ("hermes1-wpa", 20), ("vpn-3", 21), ("umts", 22), ("dynamic-vpn", 23), ("wlan-5ghz", 24), ("wlan-no-encryption", 25), ("voip-advanced-32", 26), ("voip-basic", 27), ("wlan-fcc-restrictions", 28), ("wlc-4025-50", 29), ("wlc-4006-12", 30), ("voip-advanced-8", 31), ("unused", 32), ("unused", 33), ("utm-antivirus-small", 34), ("utm-antispam-small", 35), ("utm-contentfilter-small", 36), ("wlc-public-spot", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiFeaturesFea.setStatus('current')
if mibBuilder.loadTexts: staConfiFeaturesFea.setDescription('Feature')
staConfiFeaturesExp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiFeaturesExp.setStatus('current')
if mibBuilder.loadTexts: staConfiFeaturesExp.setDescription('Expire')
staConfiDeleteva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staConfiDeleteva.setStatus('current')
if mibBuilder.loadTexts: staConfiDeleteva.setDescription('Delete-Values')
staConfiEventlogTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12), )
if mibBuilder.loadTexts: staConfiEventlogTable.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogTable.setDescription('Event-Log')
staConfiEventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staConfiEventlogIdx"))
if mibBuilder.loadTexts: staConfiEventlogEntry.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogEntry.setDescription('entry in table')
staConfiEventlogIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogIdx.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogIdx.setDescription('Idx.')
staConfiEventlogSyste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogSyste.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogSyste.setDescription('System-time')
staConfiEventlogEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogEvent.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogEvent.setDescription('Event')
staConfiEventlogAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 254, 255))).clone(namedValues=NamedValues(("outband", 0), ("telnet", 1), ("tftp", 2), ("http", 3), ("snmp", 4), ("https", 5), ("telnet-ssl", 6), ("ssh", 7), ("ppp", 254), ("unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogAcces.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogAcces.setDescription('Access')
staConfiEventlogIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogIpadd.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogIpadd.setDescription('IP-Address')
staConfiEventlogInfo1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogInfo1.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogInfo1.setDescription('Info1')
staConfiEventlogInfo2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 11, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConfiEventlogInfo2.setStatus('current')
if mibBuilder.loadTexts: staConfiEventlogInfo2.setDescription('Info2')
staQueue = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12))
staQueueLanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueLanheap.setStatus('current')
if mibBuilder.loadTexts: staQueueLanheap.setDescription('LAN-Heap-Packets')
staQueueWanheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWanheap.setStatus('current')
if mibBuilder.loadTexts: staQueueWanheap.setDescription('WAN-Heap-Packets')
staQueueWanqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWanqueu.setStatus('current')
if mibBuilder.loadTexts: staQueueWanqueu.setDescription('WAN-Queue-Packets')
staQueueArpquer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueArpquer.setStatus('current')
if mibBuilder.loadTexts: staQueueArpquer.setDescription('ARP-query-Queue-Packets')
staQueueArpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueArpqueu.setStatus('current')
if mibBuilder.loadTexts: staQueueArpqueu.setDescription('ARP-Queue-Packets')
staQueueIpqueue = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIpqueue.setStatus('current')
if mibBuilder.loadTexts: staQueueIpqueue.setDescription('IP-Queue-Packets')
staQueueIpurgen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIpurgen.setStatus('current')
if mibBuilder.loadTexts: staQueueIpurgen.setDescription('IP-urgent-Queue-Packets')
staQueueIcmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIcmpque.setStatus('current')
if mibBuilder.loadTexts: staQueueIcmpque.setDescription('ICMP-Queue-Packets')
staQueueTcpqueu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueTcpqueu.setStatus('current')
if mibBuilder.loadTexts: staQueueTcpqueu.setDescription('TCP-Queue-Packets')
staQueueTftpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueTftpser.setStatus('current')
if mibBuilder.loadTexts: staQueueTftpser.setDescription('TFTP-server-Queue-Packets')
staQueueSnmpque = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueSnmpque.setStatus('current')
if mibBuilder.loadTexts: staQueueSnmpque.setDescription('SNMP-Queue-Packets')
staQueueProthea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueProthea.setStatus('current')
if mibBuilder.loadTexts: staQueueProthea.setDescription('PROT-Heap-Packets')
staQueueDhcpser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDhcpser.setStatus('current')
if mibBuilder.loadTexts: staQueueDhcpser.setDescription('DHCP-server-Queue-Packets')
staQueueDhcpcli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDhcpcli.setStatus('current')
if mibBuilder.loadTexts: staQueueDhcpcli.setDescription('DHCP-client-Queue-Packets')
staQueueIprripq = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueIprripq.setStatus('current')
if mibBuilder.loadTexts: staQueueIprripq.setDescription('IPR-RIP-Queue-Packets')
staQueueDnstxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDnstxqu.setStatus('current')
if mibBuilder.loadTexts: staQueueDnstxqu.setDescription('DNS-TX-Queue-Packets')
staQueueDnsrxqu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueDnsrxqu.setStatus('current')
if mibBuilder.loadTexts: staQueueDnsrxqu.setDescription('DNS-RX-Queue-Packets')
staQueueWlanman = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 12, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staQueueWlanman.setStatus('current')
if mibBuilder.loadTexts: staQueueWlanman.setDescription('WLAN-Management-Heap-Packets')
staConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13), )
if mibBuilder.loadTexts: staConneTable.setStatus('current')
if mibBuilder.loadTexts: staConneTable.setDescription('Connection')
staConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staConneIfc"))
if mibBuilder.loadTexts: staConneEntry.setStatus('current')
if mibBuilder.loadTexts: staConneEntry.setDescription('entry in table')
staConneIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneIfc.setStatus('current')
if mibBuilder.loadTexts: staConneIfc.setDescription('Ifc')
staConneConn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneConn.setStatus('current')
if mibBuilder.loadTexts: staConneConn.setDescription('Connections')
staConneActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneActi.setStatus('current')
if mibBuilder.loadTexts: staConneActi.setDescription('active')
staConnePass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConnePass.setStatus('current')
if mibBuilder.loadTexts: staConnePass.setDescription('passive')
staConneErro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneErro.setStatus('current')
if mibBuilder.loadTexts: staConneErro.setDescription('Errors')
staConneCont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneCont.setStatus('current')
if mibBuilder.loadTexts: staConneCont.setDescription('Con.-Time')
staConneChar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staConneChar.setStatus('current')
if mibBuilder.loadTexts: staConneChar.setDescription('Charge')
staInfocTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14), )
if mibBuilder.loadTexts: staInfocTable.setStatus('current')
if mibBuilder.loadTexts: staInfocTable.setDescription('Info-Connection')
staInfocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staInfocIfc"))
if mibBuilder.loadTexts: staInfocEntry.setStatus('current')
if mibBuilder.loadTexts: staInfocEntry.setDescription('entry in table')
staInfocIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocIfc.setStatus('current')
if mibBuilder.loadTexts: staInfocIfc.setDescription('Ifc')
staInfocSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocSta.setStatus('current')
if mibBuilder.loadTexts: staInfocSta.setDescription('Status')
staInfocMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocMod.setStatus('current')
if mibBuilder.loadTexts: staInfocMod.setDescription('Mode')
staInfocDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocDia.setStatus('current')
if mibBuilder.loadTexts: staInfocDia.setDescription('Dialup-remote')
staInfocPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocPee.setStatus('current')
if mibBuilder.loadTexts: staInfocPee.setDescription('Peer')
staInfocB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocB1d.setStatus('current')
if mibBuilder.loadTexts: staInfocB1d.setDescription('B1-DT')
staInfocB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staInfocB2d.setStatus('current')
if mibBuilder.loadTexts: staInfocB2d.setDescription('B2-DT')
staLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15), )
if mibBuilder.loadTexts: staLayerTable.setStatus('current')
if mibBuilder.loadTexts: staLayerTable.setDescription('Layer-Connection')
staLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLayerIfc"))
if mibBuilder.loadTexts: staLayerEntry.setStatus('current')
if mibBuilder.loadTexts: staLayerEntry.setDescription('entry in table')
staLayerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerIfc.setStatus('current')
if mibBuilder.loadTexts: staLayerIfc.setDescription('Ifc')
staLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerWanl.setStatus('current')
if mibBuilder.loadTexts: staLayerWanl.setDescription('WAN-layer')
staLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerEnca.setStatus('current')
if mibBuilder.loadTexts: staLayerEnca.setDescription('Encaps.')
staLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("trans", 0), ("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay3.setStatus('current')
if mibBuilder.loadTexts: staLayerLay3.setDescription('Lay-3')
staLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 5, 0, 1))).clone(namedValues=NamedValues(("sscop", 6), ("pppoe", 5), ("x-75lapb", 0), ("trans", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay2.setStatus('current')
if mibBuilder.loadTexts: staLayerLay2.setDescription('Lay-2')
staLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 2))).clone(namedValues=NamedValues(("none", 255), ("compr", 0), ("bundle", 1), ("bnd-plus-cmpr", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerL2op.setStatus('current')
if mibBuilder.loadTexts: staLayerL2op.setDescription('L2-Opt.')
staLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 0, 1, 5))).clone(namedValues=NamedValues(("aal-5", 2), ("eth", 4), ("hdlc64k", 0), ("hdlc56k", 1), ("modem", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerLay1.setStatus('current')
if mibBuilder.loadTexts: staLayerLay1.setDescription('Lay-1')
staLayerL1pa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("none", 0), ("v-21-300", 1), ("v-23-600", 2), ("v-23-1200", 3), ("v-22-1200", 4), ("v-22bis-2400", 5), ("v-32qam-4800", 6), ("v-32qam-9600", 7), ("v-32bis-7200", 8), ("v-32tcm-9600", 9), ("v-32bis-12000", 10), ("v-32bis-14400", 11), ("v-34-2400", 12), ("v-34-4800", 13), ("v-34-7200", 14), ("v-34-9600", 15), ("v-34-12000", 16), ("v-34-14400", 17), ("v-34-16800", 18), ("v-34-19200", 19), ("v-34-21600", 20), ("v-34-24000", 21), ("v-34-26400", 22), ("v-34-28800", 23), ("v-34-31200", 24), ("v-34-33600", 25), ("v-90-28000", 26), ("v-90-29333", 27), ("v-90-30667", 28), ("v-90-32000", 29), ("v-90-33333", 30), ("v-90-34667", 31), ("v-90-36000", 32), ("v-90-37333", 33), ("v-90-38667", 34), ("v-90-40000", 35), ("v-90-41333", 36), ("v-90-42667", 37), ("v-90-44000", 38), ("v-90-45333", 39), ("v-90-46667", 40), ("v-90-48000", 41), ("v-90-49333", 42), ("v-90-50667", 43), ("v-90-52000", 44), ("v-90-53333", 45), ("v-90-54667", 46), ("v-90-56000", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLayerL1pa.setStatus('current')
if mibBuilder.loadTexts: staLayerL1pa.setDescription('L1-Parameter')
staCalliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16), )
if mibBuilder.loadTexts: staCalliTable.setStatus('current')
if mibBuilder.loadTexts: staCalliTable.setDescription('Call-Information')
staCalliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staCalliSys"), (0, "LANCOM-L54g-MIB", "staCalliCou"))
if mibBuilder.loadTexts: staCalliEntry.setStatus('current')
if mibBuilder.loadTexts: staCalliEntry.setDescription('entry in table')
staCalliSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliSys.setStatus('current')
if mibBuilder.loadTexts: staCalliSys.setDescription('System-time')
staCalliIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliIfc.setStatus('current')
if mibBuilder.loadTexts: staCalliIfc.setDescription('Ifc')
staCalliCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCli.setStatus('current')
if mibBuilder.loadTexts: staCalliCli.setDescription('CLIP-Caller')
staCalliDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliDia.setStatus('current')
if mibBuilder.loadTexts: staCalliDia.setDescription('Dial-Caller')
staCalliCap = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0, 1, 3, 67, 131, 5, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 255), ("hdlc64k", 0), ("hdlc56k", 1), ("v110-9k6", 3), ("v110-19k2", 67), ("v110-38k4", 131), ("modem", 5), ("a-3-1khz", 13), ("speech", 14), ("fax-g2-3", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCap.setStatus('current')
if mibBuilder.loadTexts: staCalliCap.setDescription('Capab.')
staCalliBch = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliBch.setStatus('current')
if mibBuilder.loadTexts: staCalliBch.setDescription('B-chan.')
staCalliCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCalliCou.setStatus('current')
if mibBuilder.loadTexts: staCalliCou.setDescription('Counter')
staRemotTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17), )
if mibBuilder.loadTexts: staRemotTable.setStatus('current')
if mibBuilder.loadTexts: staRemotTable.setDescription('Remote-Connections')
staRemotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staRemotConns"), (0, "LANCOM-L54g-MIB", "staRemotCount"))
if mibBuilder.loadTexts: staRemotEntry.setStatus('current')
if mibBuilder.loadTexts: staRemotEntry.setDescription('entry in table')
staRemotConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotConns.setStatus('current')
if mibBuilder.loadTexts: staRemotConns.setDescription('Conn.-start')
staRemotRemot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotRemot.setStatus('current')
if mibBuilder.loadTexts: staRemotRemot.setDescription('Remote-ID')
staRemotMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 9))).clone(namedValues=NamedValues(("unknown", 0), ("active", 4), ("passive", 5), ("callback", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotMode.setStatus('current')
if mibBuilder.loadTexts: staRemotMode.setDescription('Mode')
staRemotIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotIfc.setStatus('current')
if mibBuilder.loadTexts: staRemotIfc.setDescription('Ifc')
staRemotConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotConnt.setStatus('current')
if mibBuilder.loadTexts: staRemotConnt.setDescription('Conn.-time')
staRemotCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotCharg.setStatus('current')
if mibBuilder.loadTexts: staRemotCharg.setDescription('Charge')
staRemotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staRemotCount.setStatus('current')
if mibBuilder.loadTexts: staRemotCount.setDescription('Counter')
staCurre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCurre.setStatus('current')
if mibBuilder.loadTexts: staCurre.setDescription('Current-Time')
staTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21))
staTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeCur.setStatus('current')
if mibBuilder.loadTexts: staTimeCur.setDescription('Current-Time')
staTimeSou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 9, 10, 8, 0))).clone(namedValues=NamedValues(("manual", 1), ("lan", 3), ("ram", 4), ("ntp", 9), ("capwap", 10), ("lanconfig", 8), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSou.setStatus('current')
if mibBuilder.loadTexts: staTimeSou.setDescription('Source')
staTimeSet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeSet.setStatus('current')
if mibBuilder.loadTexts: staTimeSet.setDescription('Set-Count')
staTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeTim.setStatus('current')
if mibBuilder.loadTexts: staTimeTim.setDescription('Timezone')
staTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDay.setStatus('current')
if mibBuilder.loadTexts: staTimeDay.setDescription('Daylight-saving-time')
staTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12), )
if mibBuilder.loadTexts: staTimeDstTable.setStatus('current')
if mibBuilder.loadTexts: staTimeDstTable.setDescription('DST-clock-changes')
staTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staTimeDstEve"))
if mibBuilder.loadTexts: staTimeDstEntry.setStatus('current')
if mibBuilder.loadTexts: staTimeDstEntry.setDescription('entry in table')
staTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staTimeDstEve.setStatus('current')
if mibBuilder.loadTexts: staTimeDstEve.setDescription('Event')
staTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstInd.setStatus('current')
if mibBuilder.loadTexts: staTimeDstInd.setDescription('Index')
staTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstDay.setStatus('current')
if mibBuilder.loadTexts: staTimeDstDay.setDescription('Day')
staTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMon.setStatus('current')
if mibBuilder.loadTexts: staTimeDstMon.setDescription('Month')
staTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstHou.setStatus('current')
if mibBuilder.loadTexts: staTimeDstHou.setDescription('Hour')
staTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstMin.setStatus('current')
if mibBuilder.loadTexts: staTimeDstMin.setDescription('Minute')
staTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 21, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staTimeDstTim.setStatus('current')
if mibBuilder.loadTexts: staTimeDstTim.setDescription('Time-type')
staLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22))
staLcrTot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrTot.setStatus('current')
if mibBuilder.loadTexts: staLcrTot.setDescription('Total-Calls')
staLcrFou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrFou.setStatus('current')
if mibBuilder.loadTexts: staLcrFou.setDescription('Found-Events')
staLcrNot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrNot.setStatus('current')
if mibBuilder.loadTexts: staLcrNot.setDescription('Notfound-Errors')
staLcrMis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrMis.setStatus('current')
if mibBuilder.loadTexts: staLcrMis.setDescription('Missingtime-Errors')
staLcrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 6), )
if mibBuilder.loadTexts: staLcrProTable.setStatus('current')
if mibBuilder.loadTexts: staLcrProTable.setDescription('Provider')
staLcrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLcrProPro"))
if mibBuilder.loadTexts: staLcrProEntry.setStatus('current')
if mibBuilder.loadTexts: staLcrProEntry.setDescription('entry in table')
staLcrProPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProPro.setStatus('current')
if mibBuilder.loadTexts: staLcrProPro.setDescription('Provider')
staLcrProFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProFai.setStatus('current')
if mibBuilder.loadTexts: staLcrProFai.setDescription('Failures')
staLcrProSuc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLcrProSuc.setStatus('current')
if mibBuilder.loadTexts: staLcrProSuc.setDescription('Successes')
staLcrDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 22, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staLcrDel.setStatus('current')
if mibBuilder.loadTexts: staLcrDel.setDescription('Delete-Values')
staCharg = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24))
staChargSpareda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpareda.setStatus('current')
if mibBuilder.loadTexts: staChargSpareda.setDescription('Spare-Days-per-Period')
staChargSpservere = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpservere.setStatus('current')
if mibBuilder.loadTexts: staChargSpservere.setDescription('Spare-Serial-Minutes')
staChargRouters = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargRouters.setStatus('current')
if mibBuilder.loadTexts: staChargRouters.setDescription('Router-Serial-Minutes-Active')
staChargSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargSpareds.setStatus('current')
if mibBuilder.loadTexts: staChargSpareds.setDescription('Spare-DSL-Broadband-Minutes')
staChargRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargRouterd.setStatus('current')
if mibBuilder.loadTexts: staChargRouterd.setDescription('Router-DSL-Broadband-Minutes-Active')
staChargTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2), )
if mibBuilder.loadTexts: staChargTimetabTable.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabTable.setDescription('Time-Table')
staChargTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staChargTimetabIfc"))
if mibBuilder.loadTexts: staChargTimetabEntry.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabEntry.setDescription('entry in table')
staChargTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabIfc.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabIfc.setDescription('Ifc')
staChargTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabBudgetmi.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabBudgetmi.setDescription('Budget-minutes')
staChargTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabSparemin.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabSparemin.setDescription('Spare-minutes')
staChargTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabMinutesa.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabMinutesa.setDescription('Minutes-active')
staChargTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChargTimetabMinutesp.setStatus('current')
if mibBuilder.loadTexts: staChargTimetabMinutesp.setDescription('Minutes-passive')
staChargDeletev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 24, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChargDeletev.setStatus('current')
if mibBuilder.loadTexts: staChargDeletev.setDescription('Delete-Values')
staDsl = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25))
staDslRxpack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxpack.setStatus('current')
if mibBuilder.loadTexts: staDslRxpack.setDescription('Rx-Packets')
staDslTxpack = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxpack.setStatus('current')
if mibBuilder.loadTexts: staDslTxpack.setDescription('Tx-Packets')
staDslRxerro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxerro.setStatus('current')
if mibBuilder.loadTexts: staDslRxerro.setDescription('Rx-Errors')
staDslTxerro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxerro.setStatus('current')
if mibBuilder.loadTexts: staDslTxerro.setDescription('Tx-Errors')
staDslRxnoco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxnoco.setStatus('current')
if mibBuilder.loadTexts: staDslRxnoco.setDescription('Rx-No-Connection')
staDslNicerr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslNicerr.setStatus('current')
if mibBuilder.loadTexts: staDslNicerr.setDescription('NIC-Errors')
staDslQueuep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslQueuep.setStatus('current')
if mibBuilder.loadTexts: staDslQueuep.setDescription('Queue-Packets')
staDslQueuee = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslQueuee.setStatus('current')
if mibBuilder.loadTexts: staDslQueuee.setDescription('Queue-Errors')
staDslRxbyte = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxbyte.setStatus('current')
if mibBuilder.loadTexts: staDslRxbyte.setDescription('Rx-Bytes')
staDslTxbyte = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxbyte.setStatus('current')
if mibBuilder.loadTexts: staDslTxbyte.setDescription('Tx-Bytes')
staDslRxunic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslRxunic.setStatus('current')
if mibBuilder.loadTexts: staDslRxunic.setDescription('Rx-Unicasts')
staDslTxbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxbroa.setStatus('current')
if mibBuilder.loadTexts: staDslTxbroa.setDescription('Tx-Broadcasts')
staDslTxunic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslTxunic.setStatus('current')
if mibBuilder.loadTexts: staDslTxunic.setDescription('Tx-Unicasts')
staDslLinkac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslLinkac.setStatus('current')
if mibBuilder.loadTexts: staDslLinkac.setDescription('Link-Active')
staDslPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23))
staDslPppoeTxpadi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadi.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeTxpadi.setDescription('Tx-PADI')
staDslPppoeRxpado = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpado.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxpado.setDescription('Rx-PADO')
staDslPppoeTxpadr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadr.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeTxpadr.setDescription('Tx-PADR')
staDslPppoeRxpads = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpads.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxpads.setDescription('Rx-PADS')
staDslPppoeTxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxpadt.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeTxpadt.setDescription('Tx-PADT')
staDslPppoeRxpadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxpadt.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxpadt.setDescription('Rx-PADT')
staDslPppoeTxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxprot.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeTxprot.setDescription('Tx-Protocol')
staDslPppoeRxprot = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxprot.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxprot.setDescription('Rx-Protocol')
staDslPppoeTxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeTxdata.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeTxdata.setDescription('Tx-Data')
staDslPppoeRxdata = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxdata.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxdata.setDescription('Rx-Data')
staDslPppoeRxbad = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeRxbad.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeRxbad.setDescription('Rx-Bad')
staDslPppoeAcname = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeAcname.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeAcname.setDescription('AC-Name')
staDslPppoeServic = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslPppoeServic.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeServic.setDescription('Service')
staDslPppoeDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 23, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslPppoeDelete.setStatus('current')
if mibBuilder.loadTexts: staDslPppoeDelete.setDescription('Delete-Values')
staDslDslol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24))
staDslDslolIpconfig = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpconfig.setStatus('current')
if mibBuilder.loadTexts: staDslDslolIpconfig.setDescription('IP-Configuration')
staDslDslolIpnetwor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpnetwor.setStatus('current')
if mibBuilder.loadTexts: staDslDslolIpnetwor.setDescription('IP-Network')
staDslDslolIpnetmas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolIpnetmas.setStatus('current')
if mibBuilder.loadTexts: staDslDslolIpnetmas.setDescription('IP-Netmask')
staDslDslolGatewayi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolGatewayi.setStatus('current')
if mibBuilder.loadTexts: staDslDslolGatewayi.setDescription('Gateway-IP')
staDslDslolGatewaym = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolGatewaym.setStatus('current')
if mibBuilder.loadTexts: staDslDslolGatewaym.setDescription('Gateway-MAC')
staDslDslolCatchdhc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolCatchdhc.setStatus('current')
if mibBuilder.loadTexts: staDslDslolCatchdhc.setDescription('Catch-DHCP')
staDslDslolExclusiv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 24, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDslDslolExclusiv.setStatus('current')
if mibBuilder.loadTexts: staDslDslolExclusiv.setDescription('Exclusive-Mode')
staDslDelete = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 25, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDslDelete.setStatus('current')
if mibBuilder.loadTexts: staDslDelete.setDescription('Delete-Values')
staPptp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27))
staPptpRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxp.setStatus('current')
if mibBuilder.loadTexts: staPptpRxp.setDescription('Rx-Packets')
staPptpTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTxp.setStatus('current')
if mibBuilder.loadTexts: staPptpTxp.setDescription('Tx-Packets')
staPptpEch = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpEch.setStatus('current')
if mibBuilder.loadTexts: staPptpEch.setDescription('Echo-Retries')
staPptpAck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpAck.setStatus('current')
if mibBuilder.loadTexts: staPptpAck.setDescription('Ack-Timeouts')
staPptpDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpDro.setStatus('current')
if mibBuilder.loadTexts: staPptpDro.setDescription('Dropped-Packets')
staPptpRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpRxe.setStatus('current')
if mibBuilder.loadTexts: staPptpRxe.setDescription('Rx-Errors')
staPptpTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTcp.setStatus('current')
if mibBuilder.loadTexts: staPptpTcp.setDescription('Tcp-Errors')
staPptpCal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpCal.setStatus('current')
if mibBuilder.loadTexts: staPptpCal.setDescription('Call-Errors')
staPptpConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9), )
if mibBuilder.loadTexts: staPptpConTable.setStatus('current')
if mibBuilder.loadTexts: staPptpConTable.setDescription('Connections')
staPptpConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPptpConChann"))
if mibBuilder.loadTexts: staPptpConEntry.setStatus('current')
if mibBuilder.loadTexts: staPptpConEntry.setDescription('entry in table')
staPptpConChann = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConChann.setStatus('current')
if mibBuilder.loadTexts: staPptpConChann.setDescription('Channel')
staPptpConState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConState.setStatus('current')
if mibBuilder.loadTexts: staPptpConState.setDescription('State')
staPptpConLaste = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpConLaste.setStatus('current')
if mibBuilder.loadTexts: staPptpConLaste.setDescription('Last-Error')
staPptpConMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(128, 0))).clone(namedValues=NamedValues(("active", 128), ("passive", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConMode.setStatus('current')
if mibBuilder.loadTexts: staPptpConMode.setDescription('Mode')
staPptpConShtim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConShtim.setStatus('current')
if mibBuilder.loadTexts: staPptpConShtim.setDescription('SH-Time')
staPptpConPhysc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPhysc.setStatus('current')
if mibBuilder.loadTexts: staPptpConPhysc.setDescription('Phys.-connection')
staPptpConPeera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConPeera.setStatus('current')
if mibBuilder.loadTexts: staPptpConPeera.setDescription('Peer-Address')
staPptpConIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConIpadd.setStatus('current')
if mibBuilder.loadTexts: staPptpConIpadd.setDescription('IP-Address')
staPptpConDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsde.setStatus('current')
if mibBuilder.loadTexts: staPptpConDnsde.setDescription('DNS-Default')
staPptpConDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConDnsba.setStatus('current')
if mibBuilder.loadTexts: staPptpConDnsba.setDescription('DNS-Backup')
staPptpConNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsd.setStatus('current')
if mibBuilder.loadTexts: staPptpConNbnsd.setDescription('NBNS-Default')
staPptpConNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConNbnsb.setStatus('current')
if mibBuilder.loadTexts: staPptpConNbnsb.setDescription('NBNS-Backup')
staPptpConConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpConConnt.setStatus('current')
if mibBuilder.loadTexts: staPptpConConnt.setDescription('Conn.-time')
staPptpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpTun.setStatus('current')
if mibBuilder.loadTexts: staPptpTun.setDescription('Tunnel')
staPptpDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPptpDel.setStatus('current')
if mibBuilder.loadTexts: staPptpDel.setDescription('Delete-Values')
staPptpFlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 27, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPptpFlo.setStatus('current')
if mibBuilder.loadTexts: staPptpFlo.setDescription('Flow-Control-Queue')
staLanbr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31))
staLanbrAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1), )
if mibBuilder.loadTexts: staLanbrAddTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddTable.setDescription('Address-Table')
staLanbrAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrAddInd"))
if mibBuilder.loadTexts: staLanbrAddEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddEntry.setDescription('entry in table')
staLanbrAddInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddInd.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddInd.setDescription('Index')
staLanbrAddAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddAge.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddAge.setDescription('Age')
staLanbrAddMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddMac.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddMac.setDescription('MAC-Address')
staLanbrAddVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddVla.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddVla.setDescription('VLAN-Id')
staLanbrAddBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("brg-1", 0), ("brg-2", 1), ("brg-3", 2), ("brg-4", 3), ("brg-5", 4), ("brg-6", 5), ("brg-7", 6), ("brg-8", 7), ("none", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddBri.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddBri.setDescription('Bridge-Group')
staLanbrAddPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddPor.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddPor.setDescription('Port')
staLanbrAddBrg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrAddBrg.setStatus('current')
if mibBuilder.loadTexts: staLanbrAddBrg.setDescription('Brg.-Addr.')
staLanbrPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 11), )
if mibBuilder.loadTexts: staLanbrPorTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrPorTable.setDescription('Port-Data')
staLanbrPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrPorPor"))
if mibBuilder.loadTexts: staLanbrPorEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrPorEntry.setDescription('entry in table')
staLanbrPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorPor.setStatus('current')
if mibBuilder.loadTexts: staLanbrPorPor.setDescription('Port')
staLanbrPorOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("not-present", 6), ("lower-layer-down", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorOpe.setStatus('current')
if mibBuilder.loadTexts: staLanbrPorOpe.setDescription('Operating-State')
staLanbrPorPoi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrPorPoi.setStatus('current')
if mibBuilder.loadTexts: staLanbrPorPoi.setDescription('Point-To-Point-Port')
staLanbrConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9), )
if mibBuilder.loadTexts: staLanbrConTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrConTable.setDescription('Connection-Table')
staLanbrConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrConIndex"))
if mibBuilder.loadTexts: staLanbrConEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrConEntry.setDescription('entry in table')
staLanbrConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConIndex.setStatus('current')
if mibBuilder.loadTexts: staLanbrConIndex.setDescription('Index')
staLanbrConInterfa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConInterfa.setStatus('current')
if mibBuilder.loadTexts: staLanbrConInterfa.setDescription('Interface')
staLanbrConProtoco = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConProtoco.setStatus('current')
if mibBuilder.loadTexts: staLanbrConProtoco.setDescription('Protocol')
staLanbrConSubprot = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSubprot.setStatus('current')
if mibBuilder.loadTexts: staLanbrConSubprot.setDescription('Sub-Protocol')
staLanbrConSourcea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSourcea.setStatus('current')
if mibBuilder.loadTexts: staLanbrConSourcea.setDescription('Source-Address')
staLanbrConSourcep = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConSourcep.setStatus('current')
if mibBuilder.loadTexts: staLanbrConSourcep.setDescription('Source-Port')
staLanbrConDestpor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestpor.setStatus('current')
if mibBuilder.loadTexts: staLanbrConDestpor.setDescription('Dest-Port')
staLanbrConDestadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestadd.setStatus('current')
if mibBuilder.loadTexts: staLanbrConDestadd.setDescription('Dest-Address')
staLanbrConDestmac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConDestmac.setStatus('current')
if mibBuilder.loadTexts: staLanbrConDestmac.setDescription('Dest-MAC')
staLanbrConAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 9, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrConAge.setStatus('current')
if mibBuilder.loadTexts: staLanbrConAge.setDescription('Age')
staLanbrDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10), )
if mibBuilder.loadTexts: staLanbrDhcTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcTable.setDescription('DHCP-Table')
staLanbrDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrDhcMac"))
if mibBuilder.loadTexts: staLanbrDhcEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcEntry.setDescription('entry in table')
staLanbrDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcMac.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcMac.setDescription('MAC-Address')
staLanbrDhcPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcPor.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcPor.setDescription('Port')
staLanbrDhcSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcSrc.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcSrc.setDescription('Src-Port')
staLanbrDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrDhcIpa.setStatus('current')
if mibBuilder.loadTexts: staLanbrDhcIpa.setDescription('IP-Address')
staLanbrSpa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20))
staLanbrSpaOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaOperati.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaOperati.setDescription('Operating')
staLanbrSpaBridgei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaBridgei.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaBridgei.setDescription('Bridge-ID')
staLanbrSpaRootbri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootbri.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRootbri.setDescription('Root-Bridge')
staLanbrSpaRootpor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("is-root-bridge", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootpor.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRootpor.setDescription('Root-Port')
staLanbrSpaRootpat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRootpat.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRootpat.setDescription('Root-Path-Cost')
staLanbrSpaPorttabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6), )
if mibBuilder.loadTexts: staLanbrSpaPorttabTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabTable.setDescription('Port-Table')
staLanbrSpaPorttabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrSpaPorttabDes"))
if mibBuilder.loadTexts: staLanbrSpaPorttabEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabEntry.setDescription('entry in table')
staLanbrSpaPorttabDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabDes.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabDes.setDescription('Description')
staLanbrSpaPorttabPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabPri.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabPri.setDescription('Priority')
staLanbrSpaPorttabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 0), ("listening", 1), ("learning", 2), ("forwarding", 3), ("blocking", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabSta.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabSta.setDescription('State')
staLanbrSpaPorttabRoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabRoo.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabRoo.setDescription('Root')
staLanbrSpaPorttabBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabBri.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabBri.setDescription('Bridge')
staLanbrSpaPorttabPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPorttabPat.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPorttabPat.setDescription('Path-Cost')
staLanbrSpaProtoco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaProtoco.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaProtoco.setDescription('Protocol-Version')
staLanbrSpaPathcos = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaPathcos.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaPathcos.setDescription('Path-Cost-Computation')
staLanbrSpaBridgep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaBridgep.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaBridgep.setDescription('Bridge-Priority')
staLanbrSpaRstpporTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10), )
if mibBuilder.loadTexts: staLanbrSpaRstpporTable.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporTable.setDescription('RSTP-Port-Table')
staLanbrSpaRstpporEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staLanbrSpaRstpporDes"))
if mibBuilder.loadTexts: staLanbrSpaRstpporEntry.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporEntry.setDescription('entry in table')
staLanbrSpaRstpporDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporDes.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporDes.setDescription('Description')
staLanbrSpaRstpporRol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("root", 0), ("designated", 1), ("alternate", 2), ("backup", 3), ("disabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporRol.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporRol.setDescription('Role')
staLanbrSpaRstpporLea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporLea.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporLea.setDescription('Learning')
staLanbrSpaRstpporFor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporFor.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporFor.setDescription('Forwarding')
staLanbrSpaRstpporEdg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporEdg.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporEdg.setDescription('Edge-Port')
staLanbrSpaRstpporPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporPro.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporPro.setDescription('Protocol-Version')
staLanbrSpaRstpporPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 31, 20, 10, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staLanbrSpaRstpporPat.setStatus('current')
if mibBuilder.loadTexts: staLanbrSpaRstpporPat.setDescription('Path-Cost')
staDhcpc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32))
staDhcpcWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20), )
if mibBuilder.loadTexts: staDhcpcWanTable.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanTable.setDescription('WAN-IP-List')
staDhcpcWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staDhcpcWanIfc"))
if mibBuilder.loadTexts: staDhcpcWanEntry.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanEntry.setDescription('entry in table')
staDhcpcWanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-ch-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIfc.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanIfc.setDescription('Ifc')
staDhcpcWanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIpadd.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanIpadd.setDescription('IP-Address')
staDhcpcWanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanIpnet.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanIpnet.setDescription('IP-Netmask')
staDhcpcWanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanGatew.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanGatew.setDescription('Gateway')
staDhcpcWanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDnsde.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanDnsde.setDescription('DNS-Default')
staDhcpcWanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDnsba.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanDnsba.setDescription('DNS-Backup')
staDhcpcWanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanNbnsd.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanNbnsd.setDescription('NBNS-Default')
staDhcpcWanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanNbnsb.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanNbnsb.setDescription('NBNS-Backup')
staDhcpcWanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDomai.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanDomai.setDescription('Domain')
staDhcpcWanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 20, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcWanDhcps.setStatus('current')
if mibBuilder.loadTexts: staDhcpcWanDhcps.setDescription('DHCP-server')
staDhcpcLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21), )
if mibBuilder.loadTexts: staDhcpcLanTable.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanTable.setDescription('LAN-IP-List')
staDhcpcLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staDhcpcLanIfc"))
if mibBuilder.loadTexts: staDhcpcLanEntry.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanEntry.setDescription('entry in table')
staDhcpcLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIfc.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanIfc.setDescription('Ifc')
staDhcpcLanIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIpadd.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanIpadd.setDescription('IP-Address')
staDhcpcLanIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanIpnet.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanIpnet.setDescription('IP-Netmask')
staDhcpcLanGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanGatew.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanGatew.setDescription('Gateway')
staDhcpcLanDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDnsde.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanDnsde.setDescription('DNS-Default')
staDhcpcLanDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDnsba.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanDnsba.setDescription('DNS-Backup')
staDhcpcLanNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanNbnsd.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanNbnsd.setDescription('NBNS-Default')
staDhcpcLanNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanNbnsb.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanNbnsb.setDescription('NBNS-Backup')
staDhcpcLanDomai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDomai.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanDomai.setDescription('Domain')
staDhcpcLanDhcps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 32, 21, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staDhcpcLanDhcps.setStatus('current')
if mibBuilder.loadTexts: staDhcpcLanDhcps.setDescription('DHCP-server')
staSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35))
staSnmpEveTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35, 1), )
if mibBuilder.loadTexts: staSnmpEveTable.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveTable.setDescription('Event')
staSnmpEveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staSnmpEveTra"), (0, "LANCOM-L54g-MIB", "staSnmpEveVen"))
if mibBuilder.loadTexts: staSnmpEveEntry.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveEntry.setDescription('entry in table')
staSnmpEveTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("coldstart", 255), ("warmstart", 1), ("linkdown", 2), ("linkup", 3), ("authfail", 4), ("epgnloss", 5), ("enterprise", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveTra.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveTra.setDescription('Trap-Name')
staSnmpEveVen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 28, 39, 2000, 2001, 26, 41, 14, 15, 16, 22, 25, 33, 55, 56, 57, 59, 58, 42, 17, 18, 19, 20, 21, 52, 54, 53, 46, 35, 47, 1000, 1002, 1001, 1))).clone(namedValues=NamedValues(("fwuplstart", 4), ("uplsucc", 5), ("uplfailto", 6), ("uplfailincl", 7), ("uplfailbaddev", 8), ("login", 9), ("logout", 10), ("cnfuplstart", 11), ("cnfdnlstart", 12), ("cnfdnlsucc", 13), ("errlogin", 29), ("pptpconn", 28), ("pppoesconn", 39), ("http-tunnel-open", 2000), ("http-tunnel-close", 2001), ("ipfwflt", 26), ("vrrp", 41), ("bssscan", 14), ("bssstart", 15), ("bssjoin", 16), ("assrej", 22), ("cardhung", 25), ("keyhandshake-timeout", 33), ("cl-lostconn", 55), ("cl-authfail", 56), ("cl-assocfail", 57), ("cl-802-1x-fail", 59), ("cl-connected", 58), ("exceirp", 42), ("authstation", 17), ("deauthstation", 18), ("assstation", 19), ("reassstation", 20), ("disassstation", 21), ("macchkfail", 52), ("connected", 54), ("roamed", 53), ("idle-timeout", 46), ("supervision", 35), ("admin-deassoc", 47), ("spgtree-portstatchg", 1000), ("spgtree-rootportchg", 1002), ("spgtree-rstpstatchg", 1001), ("statchan", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveVen.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveVen.setDescription('Vendor-Name')
staSnmpEveCou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 35, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staSnmpEveCou.setStatus('current')
if mibBuilder.loadTexts: staSnmpEveCou.setDescription('Count')
staMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43))
staMailBuf = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailBuf.setStatus('current')
if mibBuilder.loadTexts: staMailBuf.setDescription('Buffered-Mails')
staMailSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailSen.setStatus('current')
if mibBuilder.loadTexts: staMailSen.setDescription('Sent-Mails')
staMailDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staMailDis.setStatus('current')
if mibBuilder.loadTexts: staMailDis.setDescription('Discarded-Mails')
staMailCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailCle.setStatus('current')
if mibBuilder.loadTexts: staMailCle.setDescription('Clear-Buffer')
staMailDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 43, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staMailDel.setStatus('current')
if mibBuilder.loadTexts: staMailDel.setDescription('Delete-Statistics')
staIeee8 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46))
staIeee8StaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1), )
if mibBuilder.loadTexts: staIeee8StaTable.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaTable.setDescription('Station-Table')
staIeee8StaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staIeee8StaMacad"))
if mibBuilder.loadTexts: staIeee8StaEntry.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaEntry.setDescription('entry in table')
staIeee8StaMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaMacad.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaMacad.setDescription('MAC-Address')
staIeee8StaAuthi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaAuthi.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaAuthi.setDescription('Auth-Ifc')
staIeee8StaCommi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaCommi.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaCommi.setDescription('Comm-Ifc')
staIeee8StaSessi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaSessi.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaSessi.setDescription('Session-Id')
staIeee8StaPortm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("force-unauth", 0), ("force-auth", 1), ("auto", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaPortm.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaPortm.setDescription('Port-Mode')
staIeee8StaPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unauthorized", 0), ("authorized", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaPorts.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaPorts.setDescription('Port-Status')
staIeee8StaUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaUsern.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaUsern.setDescription('User-Name')
staIeee8StaReply = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 46, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staIeee8StaReply.setStatus('current')
if mibBuilder.loadTexts: staIeee8StaReply.setDescription('Reply-Msg')
staHardw = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47))
staHardwMode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwMode.setStatus('current')
if mibBuilder.loadTexts: staHardwMode.setDescription('Model-Number')
staHardwSeri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwSeri.setStatus('current')
if mibBuilder.loadTexts: staHardwSeri.setDescription('Serial-Number')
staHardwBoar = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwBoar.setStatus('current')
if mibBuilder.loadTexts: staHardwBoar.setDescription('Board-Revision')
staHardwCput = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCput.setStatus('current')
if mibBuilder.loadTexts: staHardwCput.setDescription('CPU-Type')
staHardwCpuc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCpuc.setStatus('current')
if mibBuilder.loadTexts: staHardwCpuc.setDescription('CPU-Clock-MHz')
staHardwCpul = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwCpul.setStatus('current')
if mibBuilder.loadTexts: staHardwCpul.setDescription('CPU-Load-Percent')
staHardwTota = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwTota.setStatus('current')
if mibBuilder.loadTexts: staHardwTota.setDescription('Total-Memory-KBytes')
staHardwFree = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwFree.setStatus('current')
if mibBuilder.loadTexts: staHardwFree.setDescription('Free-Memory-KBytes')
staHardwSwve = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwSwve.setStatus('current')
if mibBuilder.loadTexts: staHardwSwve.setDescription('SW-Version')
staHardwPcidTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30), )
if mibBuilder.loadTexts: staHardwPcidTable.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidTable.setDescription('PCI-Device-List')
staHardwPcidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staHardwPcidIndex"))
if mibBuilder.loadTexts: staHardwPcidEntry.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidEntry.setDescription('entry in table')
staHardwPcidIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidIndex.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidIndex.setDescription('Index')
staHardwPcidBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidBus.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidBus.setDescription('Bus')
staHardwPcidDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidDevice.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidDevice.setDescription('Device')
staHardwPcidFunctio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidFunctio.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidFunctio.setDescription('Function')
staHardwPcidDevicei = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidDevicei.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidDevicei.setDescription('Device-ID')
staHardwPcidSubsyst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidSubsyst.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidSubsyst.setDescription('Subsystem-ID')
staHardwPcidClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 47, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(131072, 131328, 163840, 395008, 393472, 787200, 787216, 787232, 786448))).clone(namedValues=NamedValues(("ethernet", 131072), ("token-ring", 131328), ("network", 163840), ("cardbus-bridge", 395008), ("isa-bridge", 393472), ("usb-uhci", 787200), ("usb-ohci", 787216), ("usb-ehci", 787232), ("ohci1394", 786448)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staHardwPcidClass.setStatus('current')
if mibBuilder.loadTexts: staHardwPcidClass.setDescription('Class')
staChannTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48), )
if mibBuilder.loadTexts: staChannTable.setStatus('current')
if mibBuilder.loadTexts: staChannTable.setDescription('Channel')
staChannEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staChannChan"))
if mibBuilder.loadTexts: staChannEntry.setStatus('current')
if mibBuilder.loadTexts: staChannEntry.setDescription('entry in table')
staChannChan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dsl-err", 1), ("dsl-line", 2), ("ext-err", 3), ("ext", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannChan.setStatus('current')
if mibBuilder.loadTexts: staChannChan.setDescription('Chan.')
staChannPhcha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPhcha.setStatus('current')
if mibBuilder.loadTexts: staChannPhcha.setDescription('Ph.-Chan.')
staChannPlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPlci.setStatus('current')
if mibBuilder.loadTexts: staChannPlci.setDescription('PLCI')
staChannBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannBus.setStatus('current')
if mibBuilder.loadTexts: staChannBus.setDescription('Bus')
staChannState = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannState.setStatus('current')
if mibBuilder.loadTexts: staChannState.setDescription('State')
staChannApp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 255))).clone(namedValues=NamedValues(("none", 0), ("router", 1), ("capi", 2), ("a-b", 3), ("time-module", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannApp.setStatus('current')
if mibBuilder.loadTexts: staChannApp.setDescription('App')
staChannMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unk", 0), ("act", 1), ("pas", 2), ("perm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannMode.setStatus('current')
if mibBuilder.loadTexts: staChannMode.setDescription('Mode')
staChannCause = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staChannCause.setStatus('current')
if mibBuilder.loadTexts: staChannCause.setDescription('Cause')
staChannNumbe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannNumbe.setStatus('current')
if mibBuilder.loadTexts: staChannNumbe.setDescription('Number')
staChannSubad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannSubad.setStatus('current')
if mibBuilder.loadTexts: staChannSubad.setDescription('Subaddress')
staChannCharg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannCharg.setStatus('current')
if mibBuilder.loadTexts: staChannCharg.setDescription('Charge')
staChannConns = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannConns.setStatus('current')
if mibBuilder.loadTexts: staChannConns.setDescription('Conn.-start')
staChannConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannConnt.setStatus('current')
if mibBuilder.loadTexts: staChannConnt.setDescription('Conn.-time')
staChannExtra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannExtra.setStatus('current')
if mibBuilder.loadTexts: staChannExtra.setDescription('Extra')
staChannIsdnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannIsdnd.setStatus('current')
if mibBuilder.loadTexts: staChannIsdnd.setDescription('ISDN-display')
staChannPptpc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 48, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staChannPptpc.setStatus('current')
if mibBuilder.loadTexts: staChannPptpc.setDescription('PPTP-Conns.')
staUmtsm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49))
staUmtsmOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("modem", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmOpe.setStatus('current')
if mibBuilder.loadTexts: staUmtsmOpe.setDescription('Operating')
staUmtsmMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmMod.setStatus('current')
if mibBuilder.loadTexts: staUmtsmMod.setDescription('Modem-Info')
staUmtsmCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmCon.setStatus('current')
if mibBuilder.loadTexts: staUmtsmCon.setDescription('Connect-Info')
staUmtsmSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("wait-for-device", 15), ("deactivated", 0), ("device-detection", 1), ("reset", 2), ("initializing", 3), ("modem-id", 4), ("ready", 5), ("connecting", 6), ("pass-connecting", 7), ("data-mode", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmSta.setStatus('current')
if mibBuilder.loadTexts: staUmtsmSta.setDescription('State')
staUmtsmDat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmDat.setStatus('current')
if mibBuilder.loadTexts: staUmtsmDat.setDescription('Data-Rate')
staUmtsmDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmDro.setStatus('current')
if mibBuilder.loadTexts: staUmtsmDro.setDescription('Dropped-Tx-packets')
staUmtsmRxt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 49, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staUmtsmRxt.setStatus('current')
if mibBuilder.loadTexts: staUmtsmRxt.setDescription('Rx-Timeouts')
staFiles = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 50))
staFilesConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 50, 1), )
if mibBuilder.loadTexts: staFilesConTable.setStatus('current')
if mibBuilder.loadTexts: staFilesConTable.setDescription('Contents')
staFilesConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 50, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staFilesConNam"))
if mibBuilder.loadTexts: staFilesConEntry.setStatus('current')
if mibBuilder.loadTexts: staFilesConEntry.setDescription('entry in table')
staFilesConNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 50, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFilesConNam.setStatus('current')
if mibBuilder.loadTexts: staFilesConNam.setDescription('Name')
staFilesConSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 50, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staFilesConSiz.setStatus('current')
if mibBuilder.loadTexts: staFilesConSiz.setDescription('Size')
staPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52))
staPppoeRxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeRxp.setStatus('current')
if mibBuilder.loadTexts: staPppoeRxp.setDescription('Rx-Packets')
staPppoeTxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeTxp.setStatus('current')
if mibBuilder.loadTexts: staPppoeTxp.setDescription('Tx-Packets')
staPppoeDro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeDro.setStatus('current')
if mibBuilder.loadTexts: staPppoeDro.setDescription('Dropped-Packets')
staPppoeRxe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeRxe.setStatus('current')
if mibBuilder.loadTexts: staPppoeRxe.setDescription('Rx-Errors')
staPppoeSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeSes.setStatus('current')
if mibBuilder.loadTexts: staPppoeSes.setDescription('Session-Errors')
staPppoeConTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9), )
if mibBuilder.loadTexts: staPppoeConTable.setStatus('current')
if mibBuilder.loadTexts: staPppoeConTable.setDescription('Connections')
staPppoeConEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staPppoeConCha"), (0, "LANCOM-L54g-MIB", "staPppoeConMac"))
if mibBuilder.loadTexts: staPppoeConEntry.setStatus('current')
if mibBuilder.loadTexts: staPppoeConEntry.setDescription('entry in table')
staPppoeConCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConCha.setStatus('current')
if mibBuilder.loadTexts: staPppoeConCha.setDescription('Channel')
staPppoeConMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConMac.setStatus('current')
if mibBuilder.loadTexts: staPppoeConMac.setDescription('MAC-Address')
staPppoeConSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("init", 0), ("setup-wan", 1), ("ready", 2), ("wait-for-cb", 3), ("dial", 4), ("incoming-call", 5), ("protocol", 6), ("connection", 7), ("disconnecting", 8), ("call-back", 9), ("bundle-connect", 10), ("protocol-2", 11), ("reserved", 12), ("bundle", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConSta.setStatus('current')
if mibBuilder.loadTexts: staPppoeConSta.setDescription('State')
staPppoeConLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160, 267, 275, 277, 278, 279, 280, 513, 514, 515, 516, 517, 518, 32768, 32769, 32770, 32771, 32784, 32785, 32786, 32787, 32788, 32789, 32800, 32801, 32802, 32803, 32804, 32805, 32816, 32817, 32818, 32819, 32832, 32848, 33008))).clone(namedValues=NamedValues(("none", 0), ("remote-disconnected", 17153), ("manual-disconnect", 17154), ("shorthold-expired", 17155), ("physical-disconnected", 17156), ("invalid-physical-channel", 17157), ("dynamic-vpn-reconnect", 17158), ("configuration-changed", 17159), ("removed-from-config", 17160), ("remote-doubled", 267), ("icmp-conn-error", 275), ("dhcp-timeout", 277), ("pptp-no-response", 278), ("vpn-no-response", 279), ("arp-no-response", 280), ("pptp-no-channel", 513), ("pptp-bad-format", 514), ("pptp-bad-value", 515), ("pptp-no-ressource", 516), ("pptp-bad-call-id", 517), ("pptp-gen-error", 518), ("lcp-rejected", 32768), ("auth-error", 32769), ("auth-rejected", 32770), ("lcp-conn-error", 32771), ("pap-rejected", 32784), ("pap-rx-timeout", 32785), ("pap-tx-timeout", 32786), ("wrong-pap-req", 32787), ("pap-nak-received", 32788), ("unkn-pap-peer", 32789), ("chap-rejected", 32800), ("chap-rx-timeout", 32801), ("chap-tx-timeout", 32802), ("wrong-chap-resp", 32803), ("chap-fail-recvd", 32804), ("unkn-chap-peer", 32805), ("ipxcp-rejected", 32816), ("wrong-ipxcp-net", 32817), ("ipxcp-net-reject", 32818), ("ipxcp-route-unkn", 32819), ("ipcp-rejected", 32832), ("ccp-rejected", 32848), ("no-ncp-available", 33008)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoeConLas.setStatus('current')
if mibBuilder.loadTexts: staPppoeConLas.setDescription('Last-Error')
staPppoeConSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConSht.setStatus('current')
if mibBuilder.loadTexts: staPppoeConSht.setDescription('SH-Time')
staPppoeConPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConPee.setStatus('current')
if mibBuilder.loadTexts: staPppoeConPee.setDescription('Peer-Address')
staPppoeConCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeConCon.setStatus('current')
if mibBuilder.loadTexts: staPppoeConCon.setDescription('Conn.-time')
staPppoeNum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staPppoeNum.setStatus('current')
if mibBuilder.loadTexts: staPppoeNum.setDescription('Num.-Connections')
staPppoeDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 52, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staPppoeDel.setStatus('current')
if mibBuilder.loadTexts: staPppoeDel.setDescription('Delete-Values')
staAccou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56))
staAccouCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1), )
if mibBuilder.loadTexts: staAccouCurTable.setStatus('current')
if mibBuilder.loadTexts: staAccouCurTable.setDescription('Current-User')
staAccouCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staAccouCurUsern"), (0, "LANCOM-L54g-MIB", "staAccouCurMacad"), (0, "LANCOM-L54g-MIB", "staAccouCurPeer"), (0, "LANCOM-L54g-MIB", "staAccouCurConnt"))
if mibBuilder.loadTexts: staAccouCurEntry.setStatus('current')
if mibBuilder.loadTexts: staAccouCurEntry.setDescription('entry in table')
staAccouCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurUsern.setStatus('current')
if mibBuilder.loadTexts: staAccouCurUsern.setDescription('Username')
staAccouCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurMacad.setStatus('current')
if mibBuilder.loadTexts: staAccouCurMacad.setDescription('MAC-Address')
staAccouCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurPeer.setStatus('current')
if mibBuilder.loadTexts: staAccouCurPeer.setDescription('Peer')
staAccouCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurConnt.setStatus('current')
if mibBuilder.loadTexts: staAccouCurConnt.setDescription('Conn.-Type')
staAccouCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouCurRxkby.setDescription('Rx-KBytes')
staAccouCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouCurTxkby.setDescription('Tx-KBytes')
staAccouCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurTotal.setStatus('current')
if mibBuilder.loadTexts: staAccouCurTotal.setDescription('Total-Time')
staAccouCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouCurConne.setStatus('current')
if mibBuilder.loadTexts: staAccouCurConne.setDescription('Connections')
staAccouAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2), )
if mibBuilder.loadTexts: staAccouAccTable.setStatus('current')
if mibBuilder.loadTexts: staAccouAccTable.setDescription('Accounting-List')
staAccouAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staAccouAccUsern"), (0, "LANCOM-L54g-MIB", "staAccouAccMacad"), (0, "LANCOM-L54g-MIB", "staAccouAccPeer"), (0, "LANCOM-L54g-MIB", "staAccouAccConnt"))
if mibBuilder.loadTexts: staAccouAccEntry.setStatus('current')
if mibBuilder.loadTexts: staAccouAccEntry.setDescription('entry in table')
staAccouAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccUsern.setStatus('current')
if mibBuilder.loadTexts: staAccouAccUsern.setDescription('Username')
staAccouAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccMacad.setStatus('current')
if mibBuilder.loadTexts: staAccouAccMacad.setDescription('MAC-Address')
staAccouAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccPeer.setStatus('current')
if mibBuilder.loadTexts: staAccouAccPeer.setDescription('Peer')
staAccouAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccConnt.setStatus('current')
if mibBuilder.loadTexts: staAccouAccConnt.setDescription('Conn.-Type')
staAccouAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouAccRxkby.setDescription('Rx-KBytes')
staAccouAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouAccTxkby.setDescription('Tx-KBytes')
staAccouAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccTotal.setStatus('current')
if mibBuilder.loadTexts: staAccouAccTotal.setDescription('Total-Time')
staAccouAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouAccConne.setStatus('current')
if mibBuilder.loadTexts: staAccouAccConne.setDescription('Connections')
staAccouLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3), )
if mibBuilder.loadTexts: staAccouLasTable.setStatus('current')
if mibBuilder.loadTexts: staAccouLasTable.setDescription('Last-Snapshot')
staAccouLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staAccouLasUsern"), (0, "LANCOM-L54g-MIB", "staAccouLasMacad"), (0, "LANCOM-L54g-MIB", "staAccouLasPeer"), (0, "LANCOM-L54g-MIB", "staAccouLasConnt"))
if mibBuilder.loadTexts: staAccouLasEntry.setStatus('current')
if mibBuilder.loadTexts: staAccouLasEntry.setDescription('entry in table')
staAccouLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasUsern.setStatus('current')
if mibBuilder.loadTexts: staAccouLasUsern.setDescription('Username')
staAccouLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasMacad.setStatus('current')
if mibBuilder.loadTexts: staAccouLasMacad.setDescription('MAC-Address')
staAccouLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasPeer.setStatus('current')
if mibBuilder.loadTexts: staAccouLasPeer.setDescription('Peer')
staAccouLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasConnt.setStatus('current')
if mibBuilder.loadTexts: staAccouLasConnt.setDescription('Conn.-Type')
staAccouLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasRxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouLasRxkby.setDescription('Rx-KBytes')
staAccouLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasTxkby.setStatus('current')
if mibBuilder.loadTexts: staAccouLasTxkby.setDescription('Tx-KBytes')
staAccouLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasTotal.setStatus('current')
if mibBuilder.loadTexts: staAccouLasTotal.setDescription('Total-Time')
staAccouLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouLasConne.setStatus('current')
if mibBuilder.loadTexts: staAccouLasConne.setDescription('Connections')
staAccouTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 5), )
if mibBuilder.loadTexts: staAccouTimTable.setStatus('current')
if mibBuilder.loadTexts: staAccouTimTable.setDescription('Time-Last-Snapshot')
staAccouTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staAccouTimSys"))
if mibBuilder.loadTexts: staAccouTimEntry.setStatus('current')
if mibBuilder.loadTexts: staAccouTimEntry.setDescription('entry in table')
staAccouTimSys = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staAccouTimSys.setStatus('current')
if mibBuilder.loadTexts: staAccouTimSys.setDescription('System-time')
staAccouDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 56, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staAccouDel.setStatus('current')
if mibBuilder.loadTexts: staAccouDel.setDescription('Delete-Values')
staWlanm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59))
staWlanmApconnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1), )
if mibBuilder.loadTexts: staWlanmApconnTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnTable.setDescription('AP-Connections')
staWlanmApconnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmApconnId"))
if mibBuilder.loadTexts: staWlanmApconnEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnEntry.setDescription('entry in table')
staWlanmApconnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnId.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnId.setDescription('ID')
staWlanmApconnIpad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnIpad.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnIpad.setDescription('IP-Address')
staWlanmApconnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnPort.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnPort.setDescription('Port')
staWlanmApconnPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unspec", 0), ("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnPrio.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnPrio.setDescription('Priority')
staWlanmApconnResu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 300, 301, 302))).clone(namedValues=NamedValues(("success", 0), ("failure", 1), ("success-nat", 2), ("join-fail-unspecified", 3), ("join-fail-resource-depletion", 4), ("join-fail-unknwn-src", 5), ("join-fail-incorrect-data", 6), ("join-fail-session-id-in-use", 7), ("join-fail-wtp-not-supported", 8), ("join-fail-binding-not-supp", 9), ("reset-fail-unable-to-reset", 10), ("reset-fail-firmw-write-err", 11), ("fail-missing-mand-msg-elem", 20), ("fail-unrecognized-msg-elem", 21), ("unsupported-loader-version", 300), ("unsupported-firmware-version", 301), ("minus-minus", 302)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnResu.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnResu.setDescription('Result')
staWlanmApconnResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnResp.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnResp.setDescription('RespTime')
staWlanmApconnUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnUtil.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnUtil.setDescription('Utilisation')
staWlanmApconnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnName.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnName.setDescription('Name')
staWlanmApconnStat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 100))).clone(namedValues=NamedValues(("unknown", 0), ("idle", 5), ("discovery", 10), ("dtls-setup", 15), ("join", 20), ("configure", 25), ("image-data", 30), ("reset", 35), ("dtls-teardown", 40), ("sulking", 45), ("run", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmApconnStat.setStatus('current')
if mibBuilder.loadTexts: staWlanmApconnStat.setDescription('State')
staWlanmGserverlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99), )
if mibBuilder.loadTexts: staWlanmGserverlTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlTable.setDescription('GserverlConfig')
staWlanmGserverlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmGserverlVersion"))
if mibBuilder.loadTexts: staWlanmGserverlEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlEntry.setDescription('entry in table')
staWlanmGserverlVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlVersion.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlVersion.setDescription('Version')
staWlanmGserverlIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlIpaddress.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlIpaddress.setDescription('IP-Address')
staWlanmGserverlNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlNetmask.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlNetmask.setDescription('Net-Mask')
staWlanmGserverlGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlGateway.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlGateway.setDescription('Gateway')
staWlanmGserverlDns1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlDns1.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlDns1.setDescription('DNS1')
staWlanmGserverlDns2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlDns2.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlDns2.setDescription('DNS2')
staWlanmGserverlMgmtvlani = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlMgmtvlani.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlMgmtvlani.setDescription('Mgmt-VLanId')
staWlanmGserverlMgmtvlant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 99, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmGserverlMgmtvlant.setStatus('current')
if mibBuilder.loadTexts: staWlanmGserverlMgmtvlant.setDescription('Mgmt-VLanTrunk')
staWlanmLastwlTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100), )
if mibBuilder.loadTexts: staWlanmLastwlTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlTable.setDescription('Last-WLC')
staWlanmLastwlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmLastwlIpa"))
if mibBuilder.loadTexts: staWlanmLastwlEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlEntry.setDescription('entry in table')
staWlanmLastwlIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlIpa.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlIpa.setDescription('IP-Address')
staWlanmLastwlPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlPor.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlPor.setDescription('Port')
staWlanmLastwlNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlNam.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlNam.setDescription('Name')
staWlanmLastwlMgm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlMgm.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlMgm.setDescription('Mgmt-VLAN-Id')
staWlanmLastwlRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlRou.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlRou.setDescription('RouteTag')
staWlanmLastwlTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 100, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLastwlTyp.setStatus('current')
if mibBuilder.loadTexts: staWlanmLastwlTyp.setDescription('Type')
staWlanmRadiopTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101), )
if mibBuilder.loadTexts: staWlanmRadiopTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopTable.setDescription('Radioprofiles')
staWlanmRadiopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmRadiopName"))
if mibBuilder.loadTexts: staWlanmRadiopEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopEntry.setDescription('entry in table')
staWlanmRadiopName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopName.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopName.setDescription('Name')
staWlanmRadiopCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 32, 36, 40, 48, 50, 112, 56, 70, 76, 96, 100, 124, 152, 156, 170, 188, 191, 196, 203, 208, 218, 999, 818, 233, 246, 250, 276, 288, 300, 320, 340, 344, 348, 352, 356, 360, 372, 376, 380, 392, 400, 410, 414, 428, 422, 438, 440, 442, 446, 807, 458, 470, 484, 498, 504, 528, 554, 558, 578, 512, 586, 591, 600, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 705, 710, 724, 752, 756, 158, 834, 764, 788, 792, 800, 804, 784, 826, 840, 858, 862))).clone(namedValues=NamedValues(("default", 0), ("albania", 8), ("argentina", 32), ("australia", 36), ("austria", 40), ("bahrain", 48), ("bangladesh", 50), ("belarus", 112), ("belgium", 56), ("bosnia-herzegovina", 70), ("brazil", 76), ("brunei-darussalam", 96), ("bulgaria", 100), ("canada", 124), ("chile", 152), ("china", 156), ("colombia", 170), ("costa-rica", 188), ("croatia", 191), ("cyprus", 196), ("czech", 203), ("denmark", 208), ("ecuador", 218), ("egalistan", 999), ("egypt", 818), ("estonia", 233), ("finland", 246), ("france", 250), ("germany", 276), ("ghana", 288), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hong-kong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("ireland", 372), ("israel", 376), ("italy", 380), ("japan", 392), ("jordan", 400), ("south-korea", 410), ("kuwait", 414), ("latvia", 428), ("lebanon", 422), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("macedonia", 807), ("malaysia", 458), ("malta", 470), ("mexico", 484), ("moldavia", 498), ("morocco", 504), ("netherlands", 528), ("new-zealand", 554), ("nicaragua", 558), ("norway", 578), ("oman", 512), ("pakistan", 586), ("panama", 591), ("paraguay", 600), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puerto-rico", 630), ("qatar", 634), ("romania", 642), ("russia", 643), ("saudi-arabia", 682), ("singapore", 702), ("slovak", 703), ("slovenia", 705), ("south-africa", 710), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("taiwan", 158), ("tanzania", 834), ("thailand", 764), ("tunisia", 788), ("turkey", 792), ("uganda", 800), ("ukraine", 804), ("united-arab-emirates", 784), ("united-kingdom", 826), ("united-states-fcc", 840), ("uruguay", 858), ("venezuela", 862)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopCountry.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopCountry.setDescription('Country')
staWlanmRadiop24ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 3))).clone(namedValues=NamedValues(("e11bg-mixed", 0), ("e11b-only", 2), ("e11g-only", 1), ("e108mbps", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiop24ghzmode.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiop24ghzmode.setDescription('2.4GHz-Mode')
staWlanmRadiop5ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("normal", 0), ("e108mbps", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiop5ghzmode.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiop5ghzmode.setDescription('5GHz-Mode')
staWlanmRadiopSubbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("band-1", 1), ("band-2", 2), ("band-3", 3), ("band-1-plus-2", 4), ("band-1-plus-3", 5), ("band-2-plus-3", 6), ("band-1-plus-2-plus-3", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopSubbands.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopSubbands.setDescription('Subbands')
staWlanmRadiopQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopQos.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopQos.setDescription('QoS')
staWlanmRadiopDtimperio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopDtimperio.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopDtimperio.setDescription('DTIM-Period')
staWlanmRadiopBackgroun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopBackgroun.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopBackgroun.setDescription('Background-Scan')
staWlanmRadiopAntennaga = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopAntennaga.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopAntennaga.setDescription('Antenna-Gain')
staWlanmRadiopTxpowerre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopTxpowerre.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopTxpowerre.setDescription('Tx-Power-Reduction')
staWlanmRadiopMgmtvlani = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlani.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlani.setDescription('Mgmt-VLAN-Id')
staWlanmRadiopMgmtvlant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlant.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopMgmtvlant.setDescription('Mgmt-VLAN-Trunk')
staWlanmRadiopIndooronl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 101, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiopIndooronl.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiopIndooronl.setDescription('Indoor-Only-Operation')
staWlanmRadiomTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102), )
if mibBuilder.loadTexts: staWlanmRadiomTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomTable.setDescription('Radio-Mode')
staWlanmRadiomEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmRadiomIndex"))
if mibBuilder.loadTexts: staWlanmRadiomEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomEntry.setDescription('entry in table')
staWlanmRadiomIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomIndex.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomIndex.setDescription('Index')
staWlanmRadiomRadiom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("e2-4ghz", 1), ("e5ghz", 2), ("off", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomRadiom.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomRadiom.setDescription('Radio-Mode')
staWlanmRadiomOperat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomOperat.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomOperat.setDescription('Operating')
staWlanmRadiomRadioc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("auto", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomRadioc.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomRadioc.setDescription('Radio-Channel')
staWlanmRadiomChanne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 102, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmRadiomChanne.setStatus('current')
if mibBuilder.loadTexts: staWlanmRadiomChanne.setDescription('Channel-List')
staWlanmNetworTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103), )
if mibBuilder.loadTexts: staWlanmNetworTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworTable.setDescription('Networkprofiles')
staWlanmNetworEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmNetworName"))
if mibBuilder.loadTexts: staWlanmNetworEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworEntry.setDescription('entry in table')
staWlanmNetworName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworName.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworName.setDescription('Name')
staWlanmNetworSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworSsid.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworSsid.setDescription('SSID')
staWlanmNetworOpera = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworOpera.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworOpera.setDescription('Operating')
staWlanmNetworVlani = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworVlani.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworVlani.setDescription('VLAN-Id')
staWlanmNetworEncry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("e802-11i-wpa-psk", 0), ("e802-11i-wpa-802-1x", 1), ("wep-104-bits", 2), ("wep-40-bits", 3), ("wep-104-bits-802-1x", 4), ("wep-40-bits-802-1x", 5), ("none", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworEncry.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworEncry.setDescription('Encryption')
staWlanmNetworWpa1s = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tkip-aes", 0), ("aes", 1), ("tkip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworWpa1s.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworWpa1s.setDescription('WPA1-Session-Keytypes')
staWlanmNetworWpa2s = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tkip-aes", 0), ("aes", 1), ("tkip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworWpa2s.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworWpa2s.setDescription('WPA2-Session-Keytypes')
staWlanmNetworWpave = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wpa1-2", 0), ("wpa1", 1), ("wpa2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworWpave.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworWpave.setDescription('WPA-Version')
staWlanmNetworKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworKey.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworKey.setDescription('Key')
staWlanmNetworRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("e2-4ghz-5ghz", 0), ("e2-4ghz", 1), ("e5ghz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworRadio.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworRadio.setDescription('Radio-Band')
staWlanmNetworConti = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworConti.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworConti.setDescription('Continuation')
staWlanmNetworMintx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMintx.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworMintx.setDescription('Min-Tx-Rate')
staWlanmNetworMaxtx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxtx.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworMaxtx.setDescription('Max-Tx-Rate')
staWlanmNetworBasic = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("e1m", 1), ("e2m", 0), ("e5-5m", 3), ("e11m", 4), ("e6m", 5), ("e9m", 6), ("e12m", 7), ("e18m", 8), ("e24m", 9), ("e36m", 10), ("e48m", 11), ("e54m", 12), ("t-72m", 13), ("t-96m", 14), ("t-108m", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworBasic.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworBasic.setDescription('Basic-Rate')
staWlanmNetwor11bpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("long", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetwor11bpr.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetwor11bpr.setDescription('11b-Preamble')
staWlanmNetworMacfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMacfi.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworMacfi.setDescription('MAC-Filter')
staWlanmNetworClbrg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworClbrg.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworClbrg.setDescription('Cl.-Brg.-Support')
staWlanmNetworMaxst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworMaxst.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworMaxst.setDescription('Max-Stations')
staWlanmNetworSsidb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworSsidb.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworSsidb.setDescription('SSID-Broadcast')
staWlanmNetworVlant = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 103, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmNetworVlant.setStatus('current')
if mibBuilder.loadTexts: staWlanmNetworVlant.setDescription('VLAN-Trunk')
staWlanmLogtabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 120), )
if mibBuilder.loadTexts: staWlanmLogtabTable.setStatus('current')
if mibBuilder.loadTexts: staWlanmLogtabTable.setDescription('Log-Table')
staWlanmLogtabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 120, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staWlanmLogtabInd"))
if mibBuilder.loadTexts: staWlanmLogtabEntry.setStatus('current')
if mibBuilder.loadTexts: staWlanmLogtabEntry.setDescription('entry in table')
staWlanmLogtabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 120, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLogtabInd.setStatus('current')
if mibBuilder.loadTexts: staWlanmLogtabInd.setDescription('Index')
staWlanmLogtabTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 120, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLogtabTim.setStatus('current')
if mibBuilder.loadTexts: staWlanmLogtabTim.setDescription('Time')
staWlanmLogtabEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 59, 120, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staWlanmLogtabEve.setStatus('current')
if mibBuilder.loadTexts: staWlanmLogtabEve.setDescription('Event')
staCerti = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61))
staCertiSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1))
staCertiSceNumca = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumca.setStatus('current')
if mibBuilder.loadTexts: staCertiSceNumca.setDescription('NumCAs')
staCertiSceNumra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumra.setStatus('current')
if mibBuilder.loadTexts: staCertiSceNumra.setDescription('NumRAs')
staCertiSceNumce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceNumce.setStatus('current')
if mibBuilder.loadTexts: staCertiSceNumce.setDescription('NumCerts')
staCertiSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4), )
if mibBuilder.loadTexts: staCertiSceCasTable.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasTable.setDescription('CAs')
staCertiSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staCertiSceCasIdx"))
if mibBuilder.loadTexts: staCertiSceCasEntry.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasEntry.setDescription('entry in table')
staCertiSceCasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIdx.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasIdx.setDescription('Idx.')
staCertiSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasName.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasName.setDescription('Name')
staCertiSceCasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasExpire.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasExpire.setDescription('Expires')
staCertiSceCasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIssued.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasIssued.setDescription('Issued')
staCertiSceCasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasKeyusa.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasKeyusa.setDescription('Key-Usage')
staCertiSceCasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasIssuer.setDescription('Issuer')
staCertiSceCasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasSubjec.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasSubjec.setDescription('Subject')
staCertiSceCasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasStatus.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasStatus.setDescription('Status')
staCertiSceCasMd5fin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasMd5fin.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasMd5fin.setDescription('md5-Fingerprint')
staCertiSceCasSha1fi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasSha1fi.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasSha1fi.setDescription('sha1-Fingerprint')
staCertiSceCasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasExpsnm.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasExpsnm.setDescription('Exp-SNMP')
staCertiSceCasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCasIsssnm.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCasIsssnm.setDescription('Iss-SNMP')
staCertiSceRasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5), )
if mibBuilder.loadTexts: staCertiSceRasTable.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasTable.setDescription('RAs')
staCertiSceRasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staCertiSceRasIdx"))
if mibBuilder.loadTexts: staCertiSceRasEntry.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasEntry.setDescription('entry in table')
staCertiSceRasIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIdx.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasIdx.setDescription('Idx.')
staCertiSceRasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasName.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasName.setDescription('Name')
staCertiSceRasExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasExpire.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasExpire.setDescription('Expires')
staCertiSceRasIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIssued.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasIssued.setDescription('Issued')
staCertiSceRasKeyusa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasKeyusa.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasKeyusa.setDescription('Key-Usage')
staCertiSceRasIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasIssuer.setDescription('Issuer')
staCertiSceRasSubjec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasSubjec.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasSubjec.setDescription('Subject')
staCertiSceRasStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasStatus.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasStatus.setDescription('Status')
staCertiSceRasExpsnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasExpsnm.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasExpsnm.setDescription('Exp-SNMP')
staCertiSceRasIsssnm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceRasIsssnm.setStatus('current')
if mibBuilder.loadTexts: staCertiSceRasIsssnm.setDescription('Iss-SNMP')
staCertiSceCertsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6), )
if mibBuilder.loadTexts: staCertiSceCertsTable.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsTable.setDescription('Certs')
staCertiSceCertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staCertiSceCertsIdx"))
if mibBuilder.loadTexts: staCertiSceCertsEntry.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsEntry.setDescription('entry in table')
staCertiSceCertsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIdx.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsIdx.setDescription('Idx.')
staCertiSceCertsName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsName.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsName.setDescription('Name')
staCertiSceCertsExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExpires.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsExpires.setDescription('Expires')
staCertiSceCertsIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIssued.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsIssued.setDescription('Issued')
staCertiSceCertsKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsKeyusage.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsKeyusage.setDescription('Key-Usage')
staCertiSceCertsExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExtended.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsExtended.setDescription('Extended-KeyUsage')
staCertiSceCertsSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsSubjecta.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsSubjecta.setDescription('SubjectAltName')
staCertiSceCertsIssuer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIssuer.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsIssuer.setDescription('Issuer')
staCertiSceCertsSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsSubject.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsSubject.setDescription('Subject')
staCertiSceCertsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47))).clone(namedValues=NamedValues(("status-unknown", 0), ("enroll-requested", 1), ("enroll-received", 2), ("enroll-ok", 3), ("enroll-bad", 4), ("enroll-bad-config", 5), ("enroll-pending", 6), ("enroll-rejected", 7), ("enroll-rejected-badalg", 8), ("enroll-rejected-badmsgchk", 9), ("enroll-rejected-badreq", 10), ("enroll-rejected-badtime", 11), ("enroll-rejected-badcertid", 12), ("enroll-ca-missing", 13), ("enroll-exp-unknown", 14), ("enroll-key-missing", 15), ("enroll-req-missing", 16), ("enroll-bad-reply", 17), ("ca-ra-requested", 18), ("ca-ra-received", 19), ("ca-ra-ok", 20), ("ca-ra-need-update", 21), ("ca-ra-bad", 22), ("ca-ra-bad-config", 23), ("not-a-ca-cert", 24), ("fingerprint-check-failed", 25), ("job-busy", 26), ("job-timeout", 27), ("job-scep-not-free", 28), ("job-no-url", 29), ("job-no-scep-msg", 30), ("utc-err", 31), ("mem-err", 32), ("msg-len-err", 33), ("selfsigned-err", 34), ("pkcs7-wrap-err", 35), ("pkcs7-unwrap-err", 36), ("gen-err", 37), ("job-httpc-err", 38), ("job-httpc-con-err", 39), ("job-httpc-dns-err", 40), ("job-httpc-prot-err", 41), ("job-httpc-mem-err", 42), ("job-wdog-err", 43), ("ok", 44), ("dn-normalization-failed", 45), ("io-err", 46), ("disabled", 47)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsStatus.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsStatus.setDescription('Status')
staCertiSceCertsExpsnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsExpsnmp.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsExpsnmp.setDescription('Exp-SNMP')
staCertiSceCertsIsssnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staCertiSceCertsIsssnmp.setStatus('current')
if mibBuilder.loadTexts: staCertiSceCertsIsssnmp.setDescription('Iss-SNMP')
staCertiSceDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 61, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staCertiSceDelet.setStatus('current')
if mibBuilder.loadTexts: staCertiSceDelet.setDescription('Delete-Values')
staVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62))
staVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanOpe.setStatus('current')
if mibBuilder.loadTexts: staVlanOpe.setDescription('Operating')
staVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 1), )
if mibBuilder.loadTexts: staVlanNetTable.setStatus('current')
if mibBuilder.loadTexts: staVlanNetTable.setDescription('Networks')
staVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staVlanNetVla"))
if mibBuilder.loadTexts: staVlanNetEntry.setStatus('current')
if mibBuilder.loadTexts: staVlanNetEntry.setDescription('entry in table')
staVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetVla.setStatus('current')
if mibBuilder.loadTexts: staVlanNetVla.setDescription('VLAN-ID')
staVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanNetPor.setStatus('current')
if mibBuilder.loadTexts: staVlanNetPor.setDescription('Ports')
staVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 2), )
if mibBuilder.loadTexts: staVlanPorTable.setStatus('current')
if mibBuilder.loadTexts: staVlanPorTable.setDescription('Port-Table')
staVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "staVlanPorPor"))
if mibBuilder.loadTexts: staVlanPorEntry.setStatus('current')
if mibBuilder.loadTexts: staVlanPorEntry.setDescription('entry in table')
staVlanPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorPor.setStatus('current')
if mibBuilder.loadTexts: staVlanPorPor.setDescription('Port')
staVlanPorTag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 62, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: staVlanPorTag.setStatus('current')
if mibBuilder.loadTexts: staVlanPorTag.setDescription('Tagging-Mode')
staDelet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 1, 100), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: staDelet.setStatus('current')
if mibBuilder.loadTexts: staDelet.setDescription('Delete-Values')
setName = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setName.setStatus('current')
if mibBuilder.loadTexts: setName.setDescription('Name')
setWan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2))
setWanDialuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2), )
if mibBuilder.loadTexts: setWanDialuppTable.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppTable.setDescription('Dialup-Peers')
setWanDialuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanDialuppPee"))
if mibBuilder.loadTexts: setWanDialuppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppEntry.setDescription('entry in table')
setWanDialuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppPee.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppPee.setDescription('Peer')
setWanDialuppDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppDia.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppDia.setDescription('Dialup-remote')
setWanDialuppB1d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB1d.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppB1d.setDescription('B1-DT')
setWanDialuppB2d = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppB2d.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppB2d.setDescription('B2-DT')
setWanDialuppWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppWan.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppWan.setDescription('WAN-layer')
setWanDialuppCal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5, 9, 2))).clone(namedValues=NamedValues(("no", 0), ("auto", 1), ("name", 5), ("fast", 9), ("looser", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDialuppCal.setStatus('current')
if mibBuilder.loadTexts: setWanDialuppCal.setDescription('Callback')
setWanRoundroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 3), )
if mibBuilder.loadTexts: setWanRoundroTable.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroTable.setDescription('RoundRobin')
setWanRoundroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanRoundroPee"))
if mibBuilder.loadTexts: setWanRoundroEntry.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroEntry.setDescription('entry in table')
setWanRoundroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroPee.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroPee.setDescription('Peer')
setWanRoundroRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroRou.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroRou.setDescription('Round-Robin')
setWanRoundroHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRoundroHea.setStatus('current')
if mibBuilder.loadTexts: setWanRoundroHea.setDescription('Head')
setWanLayerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4), )
if mibBuilder.loadTexts: setWanLayerTable.setStatus('current')
if mibBuilder.loadTexts: setWanLayerTable.setDescription('Layer')
setWanLayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanLayerWanl"))
if mibBuilder.loadTexts: setWanLayerEntry.setStatus('current')
if mibBuilder.loadTexts: setWanLayerEntry.setDescription('entry in table')
setWanLayerWanl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerWanl.setStatus('current')
if mibBuilder.loadTexts: setWanLayerWanl.setDescription('WAN-layer')
setWanLayerEnca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 255))).clone(namedValues=NamedValues(("ether", 0), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerEnca.setStatus('current')
if mibBuilder.loadTexts: setWanLayerEnca.setDescription('Encaps.')
setWanLayerLay3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5, 6, 7, 8, 9, 255))).clone(namedValues=NamedValues(("ppp", 4), ("appp", 5), ("scppp", 6), ("scappp", 7), ("sctrans", 8), ("dhcp", 9), ("trans", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay3.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay3.setDescription('Lay-3')
setWanLayerLay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 1))).clone(namedValues=NamedValues(("pppoe", 5), ("trans", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay2.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay2.setDescription('Lay-2')
setWanLayerL2op = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(255, 0))).clone(namedValues=NamedValues(("none", 255), ("compr", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerL2op.setStatus('current')
if mibBuilder.loadTexts: setWanLayerL2op.setDescription('L2-Opt.')
setWanLayerLay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 6))).clone(namedValues=NamedValues(("eth", 4), ("serial", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanLayerLay1.setStatus('current')
if mibBuilder.loadTexts: setWanLayerLay1.setDescription('Lay-1')
setWanPppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5), )
if mibBuilder.loadTexts: setWanPppTable.setStatus('current')
if mibBuilder.loadTexts: setWanPppTable.setDescription('PPP')
setWanPppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanPppPee"))
if mibBuilder.loadTexts: setWanPppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPppEntry.setDescription('entry in table')
setWanPppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppPee.setStatus('current')
if mibBuilder.loadTexts: setWanPppPee.setDescription('Peer')
setWanPppAut = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 4))).clone(namedValues=NamedValues(("none", 0), ("chap", 8), ("pap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppAut.setStatus('current')
if mibBuilder.loadTexts: setWanPppAut.setDescription('Authent.')
setWanPppKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppKey.setStatus('current')
if mibBuilder.loadTexts: setWanPppKey.setDescription('Key')
setWanPppTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTim.setStatus('current')
if mibBuilder.loadTexts: setWanPppTim.setDescription('Time')
setWanPppTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTry.setStatus('current')
if mibBuilder.loadTexts: setWanPppTry.setDescription('Try')
setWanPppCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppCon.setStatus('current')
if mibBuilder.loadTexts: setWanPppCon.setDescription('Conf')
setWanPppFai = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppFai.setStatus('current')
if mibBuilder.loadTexts: setWanPppFai.setDescription('Fail')
setWanPppTer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppTer.setStatus('current')
if mibBuilder.loadTexts: setWanPppTer.setDescription('Term')
setWanPppUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppUse.setStatus('current')
if mibBuilder.loadTexts: setWanPppUse.setDescription('Username')
setWanPppRig = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("none", 0), ("ip", 1), ("ip-plus-nbt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPppRig.setStatus('current')
if mibBuilder.loadTexts: setWanPppRig.setDescription('Rights')
setWanDslbroaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19), )
if mibBuilder.loadTexts: setWanDslbroaTable.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaTable.setDescription('DSL-Broadband-Peers')
setWanDslbroaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanDslbroaPee"))
if mibBuilder.loadTexts: setWanDslbroaEntry.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaEntry.setDescription('entry in table')
setWanDslbroaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaPee.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaPee.setDescription('Peer')
setWanDslbroaSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSht.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaSht.setDescription('SH-Time')
setWanDslbroaAcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaAcn.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaAcn.setDescription('AC-name')
setWanDslbroaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaSer.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaSer.setDescription('Servicename')
setWanDslbroaWan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaWan.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaWan.setDescription('WAN-layer')
setWanDslbroaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("gserverl", 1), ("local", 0), ("user-def", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaMac.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaMac.setDescription('MAC-Type')
setWanDslbroaUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 13), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaUse.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaUse.setDescription('user-def.-MAC')
setWanDslbroaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 19, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanDslbroaVla.setStatus('current')
if mibBuilder.loadTexts: setWanDslbroaVla.setDescription('VLAN-ID')
setWanMtulistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 26), )
if mibBuilder.loadTexts: setWanMtulistTable.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistTable.setDescription('MTU-List')
setWanMtulistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 26, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanMtulistPee"))
if mibBuilder.loadTexts: setWanMtulistEntry.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistEntry.setDescription('entry in table')
setWanMtulistPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 26, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistPee.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistPee.setDescription('Peer')
setWanMtulistMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanMtulistMtu.setStatus('current')
if mibBuilder.loadTexts: setWanMtulistMtu.setDescription('MTU')
setWanIplistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20), )
if mibBuilder.loadTexts: setWanIplistTable.setStatus('current')
if mibBuilder.loadTexts: setWanIplistTable.setDescription('IP-List')
setWanIplistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanIplistPeer"))
if mibBuilder.loadTexts: setWanIplistEntry.setStatus('current')
if mibBuilder.loadTexts: setWanIplistEntry.setDescription('entry in table')
setWanIplistPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistPeer.setStatus('current')
if mibBuilder.loadTexts: setWanIplistPeer.setDescription('Peer')
setWanIplistIpadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpadd.setStatus('current')
if mibBuilder.loadTexts: setWanIplistIpadd.setDescription('IP-Address')
setWanIplistIpnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistIpnet.setStatus('current')
if mibBuilder.loadTexts: setWanIplistIpnet.setDescription('IP-Netmask')
setWanIplistMasqi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistMasqi.setStatus('current')
if mibBuilder.loadTexts: setWanIplistMasqi.setDescription('Masq.-IP-Addr.')
setWanIplistGatew = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistGatew.setStatus('current')
if mibBuilder.loadTexts: setWanIplistGatew.setDescription('Gateway')
setWanIplistDnsde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsde.setStatus('current')
if mibBuilder.loadTexts: setWanIplistDnsde.setDescription('DNS-Default')
setWanIplistDnsba = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistDnsba.setStatus('current')
if mibBuilder.loadTexts: setWanIplistDnsba.setDescription('DNS-Backup')
setWanIplistNbnsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsd.setStatus('current')
if mibBuilder.loadTexts: setWanIplistNbnsd.setDescription('NBNS-Default')
setWanIplistNbnsb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIplistNbnsb.setStatus('current')
if mibBuilder.loadTexts: setWanIplistNbnsb.setDescription('NBNS-Backup')
setWanPptppeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21), )
if mibBuilder.loadTexts: setWanPptppeeTable.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeTable.setDescription('PPTP-Peers')
setWanPptppeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanPptppeePee"))
if mibBuilder.loadTexts: setWanPptppeeEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeEntry.setDescription('entry in table')
setWanPptppeePee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePee.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeePee.setDescription('Peer')
setWanPptppeeIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeIpa.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeIpa.setDescription('IP-Address')
setWanPptppeeRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeRtg.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeRtg.setDescription('Rtg-tag')
setWanPptppeePor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeePor.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeePor.setDescription('Port')
setWanPptppeeSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPptppeeSht.setStatus('current')
if mibBuilder.loadTexts: setWanPptppeeSht.setDescription('SH-Time')
setWanRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22))
setWanRadiusOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusOpera.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusOpera.setDescription('Operating')
setWanRadiusServe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusServe.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusServe.setDescription('Server-Address')
setWanRadiusAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusAuthp.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusAuthp.setDescription('Auth.-Port')
setWanRadiusLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusLoopb.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusLoopb.setDescription('Loopback-Addr.')
setWanRadiusProto = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusProto.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusProto.setDescription('Protocol')
setWanRadiusSecre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusSecre.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusSecre.setDescription('Secret')
setWanRadiusPppop = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusPppop.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusPppop.setDescription('PPP-Operation')
setWanRadiusClipo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipo.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusClipo.setDescription('CLIP-Operation')
setWanRadiusClipp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 22, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRadiusClipp.setStatus('current')
if mibBuilder.loadTexts: setWanRadiusClipp.setDescription('CLIP-Password')
setWanPollingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23), )
if mibBuilder.loadTexts: setWanPollingTable.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTable.setDescription('Polling-Table')
setWanPollingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanPollingPeer"))
if mibBuilder.loadTexts: setWanPollingEntry.setStatus('current')
if mibBuilder.loadTexts: setWanPollingEntry.setDescription('entry in table')
setWanPollingPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingPeer.setStatus('current')
if mibBuilder.loadTexts: setWanPollingPeer.setDescription('Peer')
setWanPollingIpaddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress1.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress1.setDescription('IP-Address-1')
setWanPollingIpaddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress2.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress2.setDescription('IP-Address-2')
setWanPollingIpaddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress3.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress3.setDescription('IP-Address-3')
setWanPollingIpaddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingIpaddress4.setStatus('current')
if mibBuilder.loadTexts: setWanPollingIpaddress4.setDescription('IP-Address-4')
setWanPollingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTime.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTime.setDescription('Time')
setWanPollingTry = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingTry.setStatus('current')
if mibBuilder.loadTexts: setWanPollingTry.setDescription('Try')
setWanPollingLoopbackad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 23, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanPollingLoopbackad.setStatus('current')
if mibBuilder.loadTexts: setWanPollingLoopbackad.setDescription('Loopback-Addr.')
setWanBackuppTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 24), )
if mibBuilder.loadTexts: setWanBackuppTable.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppTable.setDescription('Backup-Peers')
setWanBackuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 24, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanBackuppPee"))
if mibBuilder.loadTexts: setWanBackuppEntry.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppEntry.setDescription('entry in table')
setWanBackuppPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 24, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppPee.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppPee.setDescription('Peer')
setWanBackuppAlt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 24, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 53))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppAlt.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppAlt.setDescription('Alternative-Peers')
setWanBackuppHea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("last", 0), ("first", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackuppHea.setStatus('current')
if mibBuilder.loadTexts: setWanBackuppHea.setDescription('Head')
setWanActiontTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25), )
if mibBuilder.loadTexts: setWanActiontTable.setStatus('current')
if mibBuilder.loadTexts: setWanActiontTable.setDescription('Action-Table')
setWanActiontEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanActiontIndex"))
if mibBuilder.loadTexts: setWanActiontEntry.setStatus('current')
if mibBuilder.loadTexts: setWanActiontEntry.setDescription('entry in table')
setWanActiontIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontIndex.setStatus('current')
if mibBuilder.loadTexts: setWanActiontIndex.setDescription('Index')
setWanActiontActiv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActiv.setStatus('current')
if mibBuilder.loadTexts: setWanActiontActiv.setDescription('Active')
setWanActiontHostn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontHostn.setStatus('current')
if mibBuilder.loadTexts: setWanActiontHostn.setDescription('Host-Name')
setWanActiontPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontPeer.setStatus('current')
if mibBuilder.loadTexts: setWanActiontPeer.setDescription('Peer')
setWanActiontLockt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontLockt.setStatus('current')
if mibBuilder.loadTexts: setWanActiontLockt.setDescription('Lock-Time')
setWanActiontCondi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("establish", 0), ("disconnect", 1), ("broken", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCondi.setStatus('current')
if mibBuilder.loadTexts: setWanActiontCondi.setDescription('Condition')
setWanActiontActio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontActio.setStatus('current')
if mibBuilder.loadTexts: setWanActiontActio.setDescription('Action')
setWanActiontCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontCheck.setStatus('current')
if mibBuilder.loadTexts: setWanActiontCheck.setDescription('Check-For')
setWanActiontOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 25, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanActiontOwner.setStatus('current')
if mibBuilder.loadTexts: setWanActiontOwner.setDescription('Owner')
setWanBackupd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanBackupd.setStatus('current')
if mibBuilder.loadTexts: setWanBackupd.setDescription('Backup-Delay-Seconds')
setWanIncominTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 6), )
if mibBuilder.loadTexts: setWanIncominTable.setStatus('current')
if mibBuilder.loadTexts: setWanIncominTable.setDescription('Incoming-Calling-Numbers')
setWanIncominEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanIncominDia"))
if mibBuilder.loadTexts: setWanIncominEntry.setStatus('current')
if mibBuilder.loadTexts: setWanIncominEntry.setDescription('entry in table')
setWanIncominDia = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominDia.setStatus('current')
if mibBuilder.loadTexts: setWanIncominDia.setDescription('Dialup-remote')
setWanIncominPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanIncominPee.setStatus('current')
if mibBuilder.loadTexts: setWanIncominPee.setDescription('Peer')
setWanScriptsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 8), )
if mibBuilder.loadTexts: setWanScriptsTable.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsTable.setDescription('Scripts')
setWanScriptsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanScriptsPee"))
if mibBuilder.loadTexts: setWanScriptsEntry.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsEntry.setDescription('entry in table')
setWanScriptsPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsPee.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsPee.setDescription('Peer')
setWanScriptsScr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 58))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanScriptsScr.setStatus('current')
if mibBuilder.loadTexts: setWanScriptsScr.setDescription('Script')
setWanProtect = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 4))).clone(namedValues=NamedValues(("none", 0), ("number", 2), ("screened", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanProtect.setStatus('current')
if mibBuilder.loadTexts: setWanProtect.setDescription('Protect')
setWanCallbac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanCallbac.setStatus('current')
if mibBuilder.loadTexts: setWanCallbac.setDescription('Callback-Attempts')
setWanManuald = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 13))
setWanManualdCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 13, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdCon.setStatus('current')
if mibBuilder.loadTexts: setWanManualdCon.setDescription('Connect')
setWanManualdDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 13, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanManualdDis.setStatus('current')
if mibBuilder.loadTexts: setWanManualdDis.setDescription('Disconnect')
setWanRouteriTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11), )
if mibBuilder.loadTexts: setWanRouteriTable.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriTable.setDescription('Router-Interface')
setWanRouteriEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWanRouteriIfc"))
if mibBuilder.loadTexts: setWanRouteriEntry.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriEntry.setDescription('entry in table')
setWanRouteriIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriIfc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriIfc.setDescription('Ifc')
setWanRouteriMsn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriMsn.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriMsn.setDescription('MSN/EAZ')
setWanRouteriYc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriYc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriYc.setDescription('YC.')
setWanRouteriCli = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriCli.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriCli.setDescription('CLIP')
setWanRouteriAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 128))).clone(namedValues=NamedValues(("all", 0), ("none", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWanRouteriAcc.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriAcc.setDescription('Accept-calls')
setWanRouteriTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWanRouteriTyp.setStatus('current')
if mibBuilder.loadTexts: setWanRouteriTyp.setDescription('Type-of-interface')
setWanDialpre = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8)))
if mibBuilder.loadTexts: setWanDialpre.setStatus('current')
if mibBuilder.loadTexts: setWanDialpre.setDescription('Dial-Prefix')
setAccou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18))
setAccouOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouOpe.setStatus('current')
if mibBuilder.loadTexts: setAccouOpe.setDescription('Operating')
setAccouSav = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouSav.setStatus('current')
if mibBuilder.loadTexts: setAccouSav.setDescription('Save-to-Flashrom')
setAccouDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("ip-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouDis.setStatus('current')
if mibBuilder.loadTexts: setAccouDis.setDescription('Discriminator')
setAccouSor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("time", 0), ("data", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouSor.setStatus('current')
if mibBuilder.loadTexts: setAccouSor.setDescription('Sort-by')
setAccouCurTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4), )
if mibBuilder.loadTexts: setAccouCurTable.setStatus('current')
if mibBuilder.loadTexts: setAccouCurTable.setDescription('Current-User')
setAccouCurEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setAccouCurUsern"), (0, "LANCOM-L54g-MIB", "setAccouCurMacad"), (0, "LANCOM-L54g-MIB", "setAccouCurPeer"), (0, "LANCOM-L54g-MIB", "setAccouCurConnt"))
if mibBuilder.loadTexts: setAccouCurEntry.setStatus('current')
if mibBuilder.loadTexts: setAccouCurEntry.setDescription('entry in table')
setAccouCurUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurUsern.setStatus('current')
if mibBuilder.loadTexts: setAccouCurUsern.setDescription('Username')
setAccouCurMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurMacad.setStatus('current')
if mibBuilder.loadTexts: setAccouCurMacad.setDescription('MAC-Address')
setAccouCurPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurPeer.setStatus('current')
if mibBuilder.loadTexts: setAccouCurPeer.setDescription('Peer')
setAccouCurConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurConnt.setStatus('current')
if mibBuilder.loadTexts: setAccouCurConnt.setDescription('Conn.-Type')
setAccouCurRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouCurRxkby.setDescription('Rx-KBytes')
setAccouCurTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouCurTxkby.setDescription('Tx-KBytes')
setAccouCurTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurTotal.setStatus('current')
if mibBuilder.loadTexts: setAccouCurTotal.setDescription('Total-Time')
setAccouCurConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouCurConne.setStatus('current')
if mibBuilder.loadTexts: setAccouCurConne.setDescription('Connections')
setAccouAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5), )
if mibBuilder.loadTexts: setAccouAccTable.setStatus('current')
if mibBuilder.loadTexts: setAccouAccTable.setDescription('Accounting-List')
setAccouAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setAccouAccUsern"), (0, "LANCOM-L54g-MIB", "setAccouAccMacad"), (0, "LANCOM-L54g-MIB", "setAccouAccPeer"), (0, "LANCOM-L54g-MIB", "setAccouAccConnt"))
if mibBuilder.loadTexts: setAccouAccEntry.setStatus('current')
if mibBuilder.loadTexts: setAccouAccEntry.setDescription('entry in table')
setAccouAccUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccUsern.setStatus('current')
if mibBuilder.loadTexts: setAccouAccUsern.setDescription('Username')
setAccouAccMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccMacad.setStatus('current')
if mibBuilder.loadTexts: setAccouAccMacad.setDescription('MAC-Address')
setAccouAccPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccPeer.setStatus('current')
if mibBuilder.loadTexts: setAccouAccPeer.setDescription('Peer')
setAccouAccConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccConnt.setStatus('current')
if mibBuilder.loadTexts: setAccouAccConnt.setDescription('Conn.-Type')
setAccouAccRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouAccRxkby.setDescription('Rx-KBytes')
setAccouAccTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouAccTxkby.setDescription('Tx-KBytes')
setAccouAccTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccTotal.setStatus('current')
if mibBuilder.loadTexts: setAccouAccTotal.setDescription('Total-Time')
setAccouAccConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouAccConne.setStatus('current')
if mibBuilder.loadTexts: setAccouAccConne.setDescription('Connections')
setAccouDel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouDel.setStatus('current')
if mibBuilder.loadTexts: setAccouDel.setDescription('Delete-Accounting-List')
setAccouTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8), )
if mibBuilder.loadTexts: setAccouTimTable.setStatus('current')
if mibBuilder.loadTexts: setAccouTimTable.setDescription('Time-Snapshot')
setAccouTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setAccouTimInde"))
if mibBuilder.loadTexts: setAccouTimEntry.setStatus('current')
if mibBuilder.loadTexts: setAccouTimEntry.setDescription('entry in table')
setAccouTimInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouTimInde.setStatus('current')
if mibBuilder.loadTexts: setAccouTimInde.setDescription('Index')
setAccouTimActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimActi.setStatus('current')
if mibBuilder.loadTexts: setAccouTimActi.setDescription('Active')
setAccouTimType = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monthly", 0), ("weekly", 1), ("daily", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimType.setStatus('current')
if mibBuilder.loadTexts: setAccouTimType.setDescription('Type')
setAccouTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimDay.setStatus('current')
if mibBuilder.loadTexts: setAccouTimDay.setDescription('Day')
setAccouTimDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 0), ("sunday", 1), ("monday", 2), ("tuesday", 3), ("wednesday", 4), ("thursday", 5), ("friday", 6), ("saturday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimDayo.setStatus('current')
if mibBuilder.loadTexts: setAccouTimDayo.setDescription('DayOfWeek')
setAccouTimHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimHour.setStatus('current')
if mibBuilder.loadTexts: setAccouTimHour.setDescription('Hour')
setAccouTimMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setAccouTimMinu.setStatus('current')
if mibBuilder.loadTexts: setAccouTimMinu.setDescription('Minute')
setAccouLasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9), )
if mibBuilder.loadTexts: setAccouLasTable.setStatus('current')
if mibBuilder.loadTexts: setAccouLasTable.setDescription('Last-Snapshot')
setAccouLasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setAccouLasUsern"), (0, "LANCOM-L54g-MIB", "setAccouLasMacad"), (0, "LANCOM-L54g-MIB", "setAccouLasPeer"), (0, "LANCOM-L54g-MIB", "setAccouLasConnt"))
if mibBuilder.loadTexts: setAccouLasEntry.setStatus('current')
if mibBuilder.loadTexts: setAccouLasEntry.setDescription('entry in table')
setAccouLasUsern = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 28))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasUsern.setStatus('current')
if mibBuilder.loadTexts: setAccouLasUsern.setDescription('Username')
setAccouLasMacad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasMacad.setStatus('current')
if mibBuilder.loadTexts: setAccouLasMacad.setDescription('MAC-Address')
setAccouLasPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasPeer.setStatus('current')
if mibBuilder.loadTexts: setAccouLasPeer.setDescription('Peer')
setAccouLasConnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("dial-up", 1), ("leased-line", 2), ("dsl-line", 4), ("vpn-conn", 7), ("pptp-conn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasConnt.setStatus('current')
if mibBuilder.loadTexts: setAccouLasConnt.setDescription('Conn.-Type')
setAccouLasRxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasRxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouLasRxkby.setDescription('Rx-KBytes')
setAccouLasTxkby = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasTxkby.setStatus('current')
if mibBuilder.loadTexts: setAccouLasTxkby.setDescription('Tx-KBytes')
setAccouLasTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasTotal.setStatus('current')
if mibBuilder.loadTexts: setAccouLasTotal.setDescription('Total-Time')
setAccouLasConne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 18, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setAccouLasConne.setStatus('current')
if mibBuilder.loadTexts: setAccouLasConne.setDescription('Connections')
setCharg = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3))
setChargDaysper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargDaysper.setStatus('current')
if mibBuilder.loadTexts: setChargDaysper.setDescription('Days-per-Period')
setChargSerialm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargSerialm.setStatus('current')
if mibBuilder.loadTexts: setChargSerialm.setDescription('Serial-minutes-Budget')
setChargSpservere = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargSpservere.setStatus('current')
if mibBuilder.loadTexts: setChargSpservere.setDescription('Spare-Serial-Minutes')
setChargRouters = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargRouters.setStatus('current')
if mibBuilder.loadTexts: setChargRouters.setDescription('Router-Serial-Minutes-Active')
setChargTimetabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7), )
if mibBuilder.loadTexts: setChargTimetabTable.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabTable.setDescription('Time-Table')
setChargTimetabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setChargTimetabIfc"))
if mibBuilder.loadTexts: setChargTimetabEntry.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabEntry.setDescription('entry in table')
setChargTimetabIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("router-dsl-broadband", 1), ("router-serial", 2), ("lancapi", 3), ("ab-1", 4), ("ab-2", 5), ("ab-3", 6), ("ab-4", 7), ("time-modul", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabIfc.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabIfc.setDescription('Ifc')
setChargTimetabBudgetmi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabBudgetmi.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabBudgetmi.setDescription('Budget-minutes')
setChargTimetabSparemin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabSparemin.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabSparemin.setDescription('Spare-minutes')
setChargTimetabMinutesa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabMinutesa.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabMinutesa.setDescription('Minutes-active')
setChargTimetabMinutesp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargTimetabMinutesp.setStatus('current')
if mibBuilder.loadTexts: setChargTimetabMinutesp.setDescription('Minutes-passive')
setChargDslbroa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargDslbroa.setStatus('current')
if mibBuilder.loadTexts: setChargDslbroa.setDescription('DSL-Broadband-Minutes-Budget')
setChargAdditio = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargAdditio.setStatus('current')
if mibBuilder.loadTexts: setChargAdditio.setDescription('Additional-DSL-Broadband-Budget')
setChargSpareds = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargSpareds.setStatus('current')
if mibBuilder.loadTexts: setChargSpareds.setDescription('Spare-DSL-Broadband-Minutes')
setChargRouterd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setChargRouterd.setStatus('current')
if mibBuilder.loadTexts: setChargRouterd.setDescription('Router-DSL-Broadband-Minutes-Active')
setChargActivat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargActivat.setStatus('current')
if mibBuilder.loadTexts: setChargActivat.setDescription('Activate-Additional-Budget')
setChargResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 3, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setChargResetbu.setStatus('current')
if mibBuilder.loadTexts: setChargResetbu.setDescription('Reset-Budgets')
setLan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4))
setLanMacadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanMacadd.setStatus('current')
if mibBuilder.loadTexts: setLanMacadd.setDescription('MAC-Address')
setLanSpareh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanSpareh.setStatus('current')
if mibBuilder.loadTexts: setLanSpareh.setDescription('Spare-Heap')
setLanTracem = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 8), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracem.setStatus('current')
if mibBuilder.loadTexts: setLanTracem.setDescription('Trace-MAC')
setLanTracel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanTracel.setStatus('current')
if mibBuilder.loadTexts: setLanTracel.setDescription('Trace-Level')
setLanIeee80 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10))
setLanIeee80SupTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10, 1), )
if mibBuilder.loadTexts: setLanIeee80SupTable.setStatus('current')
if mibBuilder.loadTexts: setLanIeee80SupTable.setDescription('Supplicant-Ifc-Setup')
setLanIeee80SupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLanIeee80SupIfc"))
if mibBuilder.loadTexts: setLanIeee80SupEntry.setStatus('current')
if mibBuilder.loadTexts: setLanIeee80SupEntry.setDescription('entry in table')
setLanIeee80SupIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanIeee80SupIfc.setStatus('current')
if mibBuilder.loadTexts: setLanIeee80SupIfc.setDescription('Ifc')
setLanIeee80SupMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1024, 3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("none", 0), ("md5", 1024), ("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanIeee80SupMet.setStatus('current')
if mibBuilder.loadTexts: setLanIeee80SupMet.setDescription('Method')
setLanIeee80SupCre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 4, 10, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanIeee80SupCre.setStatus('current')
if mibBuilder.loadTexts: setLanIeee80SupCre.setDescription('Credentials')
setTcpip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7))
setTcpipOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipOpera.setStatus('current')
if mibBuilder.loadTexts: setTcpipOpera.setDescription('Operating')
setTcpipNetwoTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30), )
if mibBuilder.loadTexts: setTcpipNetwoTable.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoTable.setDescription('Network-list')
setTcpipNetwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setTcpipNetwoNet"))
if mibBuilder.loadTexts: setTcpipNetwoEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoEntry.setDescription('entry in table')
setTcpipNetwoNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoNet.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoNet.setDescription('Network-name')
setTcpipNetwoIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoIpa.setDescription('IP-Address')
setTcpipNetwoIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoIpn.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoIpn.setDescription('IP-Netmask')
setTcpipNetwoVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoVla.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoVla.setDescription('VLAN-ID')
setTcpipNetwoInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoInt.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoInt.setDescription('Interface')
setTcpipNetwoSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("strict", 1), ("loose", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoSrc.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoSrc.setDescription('Src-check')
setTcpipNetwoTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("intranet", 1), ("dmz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoTyp.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoTyp.setDescription('Type')
setTcpipNetwoRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoRtg.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoRtg.setDescription('Rtg-tag')
setTcpipNetwoCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 30, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNetwoCom.setStatus('current')
if mibBuilder.loadTexts: setTcpipNetwoCom.setDescription('Comment')
setTcpipLoopbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 17), )
if mibBuilder.loadTexts: setTcpipLoopbTable.setStatus('current')
if mibBuilder.loadTexts: setTcpipLoopbTable.setDescription('Loopback-List')
setTcpipLoopbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 17, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setTcpipLoopbNam"))
if mibBuilder.loadTexts: setTcpipLoopbEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpipLoopbEntry.setDescription('entry in table')
setTcpipLoopbNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbNam.setStatus('current')
if mibBuilder.loadTexts: setTcpipLoopbNam.setDescription('Name')
setTcpipLoopbLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 17, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbLoo.setStatus('current')
if mibBuilder.loadTexts: setTcpipLoopbLoo.setDescription('Loopback-Addr.')
setTcpipLoopbRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 17, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipLoopbRtg.setStatus('current')
if mibBuilder.loadTexts: setTcpipLoopbRtg.setDescription('Rtg-tag')
setTcpipAccesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 6), )
if mibBuilder.loadTexts: setTcpipAccesTable.setStatus('current')
if mibBuilder.loadTexts: setTcpipAccesTable.setDescription('Access-List')
setTcpipAccesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setTcpipAccesIpa"))
if mibBuilder.loadTexts: setTcpipAccesEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpipAccesEntry.setDescription('entry in table')
setTcpipAccesIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAccesIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpipAccesIpa.setDescription('IP-Address')
setTcpipAccesIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAccesIpn.setStatus('current')
if mibBuilder.loadTexts: setTcpipAccesIpn.setDescription('IP-Netmask')
setTcpipDnsde = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipDnsde.setStatus('current')
if mibBuilder.loadTexts: setTcpipDnsde.setDescription('DNS-Default')
setTcpipDnsba = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipDnsba.setStatus('current')
if mibBuilder.loadTexts: setTcpipDnsba.setDescription('DNS-Backup')
setTcpipNbnsd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNbnsd.setStatus('current')
if mibBuilder.loadTexts: setTcpipNbnsd.setDescription('NBNS-Default')
setTcpipNbnsb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNbnsb.setStatus('current')
if mibBuilder.loadTexts: setTcpipNbnsb.setDescription('NBNS-Backup')
setTcpipArptaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16), )
if mibBuilder.loadTexts: setTcpipArptaTable.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaTable.setDescription('ARP-Table')
setTcpipArptaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setTcpipArptaIpa"))
if mibBuilder.loadTexts: setTcpipArptaEntry.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaEntry.setDescription('entry in table')
setTcpipArptaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaIpa.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaIpa.setDescription('IP-Address')
setTcpipArptaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaMac.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaMac.setDescription('MAC-Address')
setTcpipArptaLas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaLas.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaLas.setDescription('Last-access')
setTcpipArptaCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("wan", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaCon.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaCon.setDescription('Connect')
setTcpipArptaVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaVla.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaVla.setDescription('VLAN-ID')
setTcpipArptaPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 16, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTcpipArptaPee.setStatus('current')
if mibBuilder.loadTexts: setTcpipArptaPee.setDescription('Peer')
setTcpipNonlo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipNonlo.setStatus('current')
if mibBuilder.loadTexts: setTcpipNonlo.setDescription('Non-Loc.-ARP-Replies')
setTcpipIcmpo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipIcmpo.setStatus('current')
if mibBuilder.loadTexts: setTcpipIcmpo.setDescription('ICMP-On-ARP-Timeout')
setTcpipArpag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipArpag.setStatus('current')
if mibBuilder.loadTexts: setTcpipArpag.setDescription('ARP-Aging-Minutes')
setTcpipAlive = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21))
setTcpipAliveTarget = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveTarget.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveTarget.setDescription('Target-Address')
setTcpipAliveTestin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveTestin.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveTestin.setDescription('Test-Interval')
setTcpipAliveRetryc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveRetryc.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveRetryc.setDescription('Retry-Count')
setTcpipAliveRetryi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveRetryi.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveRetryi.setDescription('Retry-Interval')
setTcpipAliveFailli = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveFailli.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveFailli.setDescription('Fail-Limit')
setTcpipAliveBootty = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 7, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("warm-boot", 0), ("cold-boot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTcpipAliveBootty.setStatus('current')
if mibBuilder.loadTexts: setTcpipAliveBootty.setDescription('Boot-Type')
setIprou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8))
setIprouOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouOpe.setStatus('current')
if mibBuilder.loadTexts: setIprouOpe.setDescription('Operating')
setIprouIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2), )
if mibBuilder.loadTexts: setIprouIprTable.setStatus('current')
if mibBuilder.loadTexts: setIprouIprTable.setDescription('IP-Routing-Table')
setIprouIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouIprIpa"), (0, "LANCOM-L54g-MIB", "setIprouIprIpn"), (0, "LANCOM-L54g-MIB", "setIprouIprRtg"))
if mibBuilder.loadTexts: setIprouIprEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouIprEntry.setDescription('entry in table')
setIprouIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprIpa.setStatus('current')
if mibBuilder.loadTexts: setIprouIprIpa.setDescription('IP-Address')
setIprouIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprIpn.setStatus('current')
if mibBuilder.loadTexts: setIprouIprIpn.setDescription('IP-Netmask')
setIprouIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprRtg.setStatus('current')
if mibBuilder.loadTexts: setIprouIprRtg.setDescription('Rtg-tag')
setIprouIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprPee.setStatus('current')
if mibBuilder.loadTexts: setIprouIprPee.setDescription('Peer-or-IP')
setIprouIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprDis.setStatus('current')
if mibBuilder.loadTexts: setIprouIprDis.setDescription('Distance')
setIprouIprMas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprMas.setStatus('current')
if mibBuilder.loadTexts: setIprouIprMas.setDescription('Masquerade')
setIprouIprAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 0), ("semi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprAct.setStatus('current')
if mibBuilder.loadTexts: setIprouIprAct.setDescription('Active')
setIprouIprCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouIprCom.setStatus('current')
if mibBuilder.loadTexts: setIprouIprCom.setDescription('Comment')
setIprouDefTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13), )
if mibBuilder.loadTexts: setIprouDefTable.setStatus('current')
if mibBuilder.loadTexts: setIprouDefTable.setDescription('Default-Time-List')
setIprouDefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouDefInd"))
if mibBuilder.loadTexts: setIprouDefEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouDefEntry.setDescription('entry in table')
setIprouDefInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefInd.setStatus('current')
if mibBuilder.loadTexts: setIprouDefInd.setDescription('Index')
setIprouDefDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1, 2), Bits().clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 4), ("thursday", 8), ("friday", 16), ("saturday", 32), ("sunday", 64), ("holiday", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefDay.setStatus('current')
if mibBuilder.loadTexts: setIprouDefDay.setDescription('Days')
setIprouDefSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefSta.setStatus('current')
if mibBuilder.loadTexts: setIprouDefSta.setDescription('Start')
setIprouDefSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefSto.setStatus('current')
if mibBuilder.loadTexts: setIprouDefSto.setDescription('Stop')
setIprouDefPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouDefPee.setStatus('current')
if mibBuilder.loadTexts: setIprouDefPee.setDescription('Peer')
setIprouUsa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouUsa.setStatus('current')
if mibBuilder.loadTexts: setIprouUsa.setDescription('Usage-Default-Timetable')
setIprouPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouPro.setStatus('current')
if mibBuilder.loadTexts: setIprouPro.setDescription('Proxy-ARP')
setIprouSen = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouSen.setStatus('current')
if mibBuilder.loadTexts: setIprouSen.setDescription('Send-ICMP-Redirect')
setIprouSta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouSta.setStatus('current')
if mibBuilder.loadTexts: setIprouSta.setDescription('Start-WAN-Pool')
setIprouEnd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouEnd.setStatus('current')
if mibBuilder.loadTexts: setIprouEnd.setDescription('End-WAN-Pool')
setIprouRou = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7))
setIprouRouRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("type-of-service", 1), ("diffserv", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouRou.setStatus('current')
if mibBuilder.loadTexts: setIprouRouRou.setDescription('Routing-Method')
setIprouRouIcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("reliable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouIcm.setStatus('current')
if mibBuilder.loadTexts: setIprouRouIcm.setDescription('ICMP-Routing-Method')
setIprouRouSyn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouSyn.setStatus('current')
if mibBuilder.loadTexts: setIprouRouSyn.setDescription('SYN/ACK-Speedup')
setIprouRouL2l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouL2l.setStatus('current')
if mibBuilder.loadTexts: setIprouRouL2l.setDescription('L2-L3-Tagging')
setIprouRouL3l = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 7, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRouL3l.setStatus('current')
if mibBuilder.loadTexts: setIprouRouL3l.setDescription('L3-L2-Tagging')
setIprouRip = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8))
setIprouRipLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5), )
if mibBuilder.loadTexts: setIprouRipLanTable.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanTable.setDescription('LAN-Sites')
setIprouRipLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouRipLanNetw"))
if mibBuilder.loadTexts: setIprouRipLanEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanEntry.setDescription('entry in table')
setIprouRipLanNetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanNetw.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanNetw.setDescription('Network-name')
setIprouRipLanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRipt.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanRipt.setDescription('RIP-Type')
setIprouRipLanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRipa.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanRipa.setDescription('RIP-Accept')
setIprouRipLanProp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanProp.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanProp.setDescription('Propagate')
setIprouRipLanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanPois.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanPois.setDescription('Poisoned-Reverse')
setIprouRipLanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanDftr.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanDftr.setDescription('Dft-Rtg-Tag')
setIprouRipLanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRtgt.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanRtgt.setDescription('Rtg-Tag-List')
setIprouRipLanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanRxfi.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanRxfi.setDescription('Rx-Filter')
setIprouRipLanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 5, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipLanTxfi.setStatus('current')
if mibBuilder.loadTexts: setIprouRipLanTxfi.setDescription('Tx-Filter')
setIprouRipR1m = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("class", 0), ("address", 1), ("cl-plus-addr", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipR1m.setStatus('current')
if mibBuilder.loadTexts: setIprouRipR1m.setDescription('R1-Mask')
setIprouRipIprTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3), )
if mibBuilder.loadTexts: setIprouRipIprTable.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprTable.setDescription('IP-RIP-Table')
setIprouRipIprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouRipIprIpa"), (0, "LANCOM-L54g-MIB", "setIprouRipIprIpn"), (0, "LANCOM-L54g-MIB", "setIprouRipIprRtg"))
if mibBuilder.loadTexts: setIprouRipIprEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprEntry.setDescription('entry in table')
setIprouRipIprIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprIpa.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprIpa.setDescription('IP-Address')
setIprouRipIprIpn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprIpn.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprIpn.setDescription('IP-Netmask')
setIprouRipIprRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprRtg.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprRtg.setDescription('Rtg-tag')
setIprouRipIprTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprTim.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprTim.setDescription('Time')
setIprouRipIprDis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprDis.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprDis.setDescription('Distance')
setIprouRipIprGat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprGat.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprGat.setDescription('Gateway')
setIprouRipIprPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprPee.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprPee.setDescription('Peer')
setIprouRipIprPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprPor.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprPor.setDescription('Port')
setIprouRipIprVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprVla.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprVla.setDescription('VLAN-ID')
setIprouRipIprNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouRipIprNet.setStatus('current')
if mibBuilder.loadTexts: setIprouRipIprNet.setDescription('Network-name')
setIprouRipWanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4), )
if mibBuilder.loadTexts: setIprouRipWanTable.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanTable.setDescription('WAN-Sites')
setIprouRipWanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouRipWanPeer"))
if mibBuilder.loadTexts: setIprouRipWanEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanEntry.setDescription('entry in table')
setIprouRipWanPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanPeer.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanPeer.setDescription('Peer')
setIprouRipWanRipt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("rip-1", 1), ("r1-comp", 2), ("rip-2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRipt.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanRipt.setDescription('RIP-Type')
setIprouRipWanRipa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRipa.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanRipa.setDescription('RIP-Accept')
setIprouRipWanMasq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("on", 1), ("intranet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanMasq.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanMasq.setDescription('Masquerade')
setIprouRipWanPois = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanPois.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanPois.setDescription('Poisoned-Reverse')
setIprouRipWanRfc2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRfc2.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanRfc2.setDescription('RFC2091')
setIprouRipWanGate = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanGate.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanGate.setDescription('Gateway')
setIprouRipWanDftr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanDftr.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanDftr.setDescription('Dft-Rtg-Tag')
setIprouRipWanRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 33))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRtgt.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanRtgt.setDescription('Rtg-Tag-List')
setIprouRipWanRxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanRxfi.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanRxfi.setDescription('Rx-Filter')
setIprouRipWanTxfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipWanTxfi.setStatus('current')
if mibBuilder.loadTexts: setIprouRipWanTxfi.setDescription('Tx-Filter')
setIprouRipFilTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 7), )
if mibBuilder.loadTexts: setIprouRipFilTable.setStatus('current')
if mibBuilder.loadTexts: setIprouRipFilTable.setDescription('Filter')
setIprouRipFilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouRipFilNam"))
if mibBuilder.loadTexts: setIprouRipFilEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouRipFilEntry.setDescription('entry in table')
setIprouRipFilNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipFilNam.setStatus('current')
if mibBuilder.loadTexts: setIprouRipFilNam.setDescription('Name')
setIprouRipFilFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipFilFil.setStatus('current')
if mibBuilder.loadTexts: setIprouRipFilFil.setDescription('Filter')
setIprouRipPar = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6))
setIprouRipParUpda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParUpda.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParUpda.setDescription('Update')
setIprouRipParHold = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParHold.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParHold.setDescription('Holddown')
setIprouRipParInva = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParInva.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParInva.setDescription('Invalidate')
setIprouRipParFlus = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParFlus.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParFlus.setDescription('Flush')
setIprouRipParUpdd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParUpdd.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParUpdd.setDescription('Upd-Delay')
setIprouRipParMaxh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParMaxh.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParMaxh.setDescription('Max-Hopcount')
setIprouRipParRout = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 8, 6, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouRipParRout.setStatus('current')
if mibBuilder.loadTexts: setIprouRipParRout.setDescription('Routes-per-Frame')
setIprou1nn = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9))
setIprou1nnTcpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnTcpagings.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTcpagings.setDescription('TCP-Aging-Seconds')
setIprou1nnUdpagings = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnUdpagings.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnUdpagings.setDescription('UDP-Aging-Seconds')
setIprou1nnIcmpaging = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIcmpaging.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIcmpaging.setDescription('ICMP-Aging-Seconds')
setIprou1nnServicetaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4), )
if mibBuilder.loadTexts: setIprou1nnServicetaTable.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaTable.setDescription('Service-Table')
setIprou1nnServicetaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprou1nnServicetaDportf"), (0, "LANCOM-L54g-MIB", "setIprou1nnServicetaDportt"), (0, "LANCOM-L54g-MIB", "setIprou1nnServicetaProtoc"), (0, "LANCOM-L54g-MIB", "setIprou1nnServicetaPeer"), (0, "LANCOM-L54g-MIB", "setIprou1nnServicetaWanadd"))
if mibBuilder.loadTexts: setIprou1nnServicetaEntry.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaEntry.setDescription('entry in table')
setIprou1nnServicetaDportf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaDportf.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaDportf.setDescription('D-port-from')
setIprou1nnServicetaDportt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaDportt.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaDportt.setDescription('D-port-to')
setIprou1nnServicetaProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 0))).clone(namedValues=NamedValues(("tcp", 1), ("udp", 2), ("tcp-plus-udp", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaProtoc.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaProtoc.setDescription('Protocol')
setIprou1nnServicetaPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaPeer.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaPeer.setDescription('Peer')
setIprou1nnServicetaWanadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaWanadd.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaWanadd.setDescription('WAN-Address')
setIprou1nnServicetaIntran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaIntran.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaIntran.setDescription('Intranet-Address')
setIprou1nnServicetaMappor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaMappor.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaMappor.setDescription('Map-Port')
setIprou1nnServicetaActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaActive.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaActive.setDescription('Active')
setIprou1nnServicetaCommen = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnServicetaCommen.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnServicetaCommen.setDescription('Comment')
setIprou1nnTable1nnaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5), )
if mibBuilder.loadTexts: setIprou1nnTable1nnaTable.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaTable.setDescription('Table-1-N-NAT')
setIprou1nnTable1nnaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprou1nnTable1nnaInt"))
if mibBuilder.loadTexts: setIprou1nnTable1nnaEntry.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaEntry.setDescription('entry in table')
setIprou1nnTable1nnaInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaInt.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaInt.setDescription('Intranet-Address')
setIprou1nnTable1nnaSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaSou.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaSou.setDescription('Source-Port')
setIprou1nnTable1nnaPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 17, 1))).clone(namedValues=NamedValues(("tcp", 6), ("udp", 17), ("icmp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaPro.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaPro.setDescription('Protocol')
setIprou1nnTable1nnaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaTim.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaTim.setDescription('Timeout')
setIprou1nnTable1nnaHan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaHan.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaHan.setDescription('Handler')
setIprou1nnTable1nnaRem = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnTable1nnaRem.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnTable1nnaRem.setDescription('remote-Address')
setIprou1nnFragments = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("filter", 0), ("route", 1), ("reassemble", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnFragments.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnFragments.setDescription('Fragments')
setIprou1nnFragmenta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnFragmenta.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnFragmenta.setDescription('Fragment-Aging-Seconds')
setIprou1nnIpsecagin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIpsecagin.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsecagin.setDescription('IPSec-Aging-Seconds')
setIprou1nnIpsectablTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9), )
if mibBuilder.loadTexts: setIprou1nnIpsectablTable.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablTable.setDescription('IPSec-Table')
setIprou1nnIpsectablEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprou1nnIpsectablRemotea"))
if mibBuilder.loadTexts: setIprou1nnIpsectablEntry.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablEntry.setDescription('entry in table')
setIprou1nnIpsectablRemotea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotea.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotea.setDescription('remote-Address')
setIprou1nnIpsectablLocalad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalad.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalad.setDescription('local-Address')
setIprou1nnIpsectablRchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRchi.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablRchi.setDescription('rc-hi')
setIprou1nnIpsectablRclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRclo.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablRclo.setDescription('rc-lo')
setIprou1nnIpsectablLchi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLchi.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablLchi.setDescription('lc-hi')
setIprou1nnIpsectablLclo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLclo.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablLclo.setDescription('lc-lo')
setIprou1nnIpsectablRemotes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotes.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablRemotes.setDescription('remote-SPI')
setIprou1nnIpsectablLocalsp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalsp.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablLocalsp.setDescription('local-SPI')
setIprou1nnIpsectablTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablTimeout.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablTimeout.setDescription('Timeout')
setIprou1nnIpsectablCo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablCo.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablCo.setDescription('CO')
setIprou1nnIpsectablNl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablNl.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablNl.setDescription('NL')
setIprou1nnIpsectablNr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablNr.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablNr.setDescription('NR')
setIprou1nnIpsectablDp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablDp.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablDp.setDescription('DP')
setIprou1nnIpsectablFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprou1nnIpsectablFlags.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIpsectablFlags.setDescription('Flags')
setIprou1nnIdspoofin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprou1nnIdspoofin.setStatus('current')
if mibBuilder.loadTexts: setIprou1nnIdspoofin.setDescription('ID-Spoofing')
setIprouFir = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10))
setIprouFirOpera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirOpera.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpera.setDescription('Operating')
setIprouFirActioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 4), )
if mibBuilder.loadTexts: setIprouFirActioTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirActioTable.setDescription('Actions')
setIprouFirActioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirActioNam"))
if mibBuilder.loadTexts: setIprouFirActioEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirActioEntry.setDescription('entry in table')
setIprouFirActioNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirActioNam.setStatus('current')
if mibBuilder.loadTexts: setIprouFirActioNam.setDescription('Name')
setIprouFirActioDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirActioDes.setStatus('current')
if mibBuilder.loadTexts: setIprouFirActioDes.setDescription('Description')
setIprouFirObjecTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 1), )
if mibBuilder.loadTexts: setIprouFirObjecTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirObjecTable.setDescription('Objects')
setIprouFirObjecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirObjecNam"))
if mibBuilder.loadTexts: setIprouFirObjecEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirObjecEntry.setDescription('entry in table')
setIprouFirObjecNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirObjecNam.setStatus('current')
if mibBuilder.loadTexts: setIprouFirObjecNam.setDescription('Name')
setIprouFirObjecDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirObjecDes.setStatus('current')
if mibBuilder.loadTexts: setIprouFirObjecDes.setDescription('Description')
setIprouFirRulesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2), )
if mibBuilder.loadTexts: setIprouFirRulesTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesTable.setDescription('Rules')
setIprouFirRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirRulesNam"))
if mibBuilder.loadTexts: setIprouFirRulesEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesEntry.setDescription('entry in table')
setIprouFirRulesNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesNam.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesNam.setDescription('Name')
setIprouFirRulesPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesPro.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesPro.setDescription('Prot.')
setIprouFirRulesSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesSou.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesSou.setDescription('Source')
setIprouFirRulesDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesDes.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesDes.setDescription('Destination')
setIprouFirRulesAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesAct.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesAct.setDescription('Action')
setIprouFirRulesLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesLin.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesLin.setDescription('Linked')
setIprouFirRulesPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesPri.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesPri.setDescription('Prio')
setIprouFirRulesFir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesFir.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesFir.setDescription('Firewall-Rule')
setIprouFirRulesSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesSta.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesSta.setDescription('Stateful')
setIprouFirRulesRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesRtg.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesRtg.setDescription('Rtg-tag')
setIprouFirRulesCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirRulesCom.setStatus('current')
if mibBuilder.loadTexts: setIprouFirRulesCom.setDescription('Comment')
setIprouFirFilteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3), )
if mibBuilder.loadTexts: setIprouFirFilteTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteTable.setDescription('Filter-List')
setIprouFirFilteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirFilteIdx"))
if mibBuilder.loadTexts: setIprouFirFilteEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteEntry.setDescription('entry in table')
setIprouFirFilteIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteIdx.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteIdx.setDescription('Idx.')
setIprouFirFilteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteProt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteProt.setDescription('Prot.')
setIprouFirFilteSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrcm.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteSrcm.setDescription('Src-MAC')
setIprouFirFilteSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrca.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteSrca.setDescription('Src-Address')
setIprouFirFilteSrcn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSrcn.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteSrcn.setDescription('Src-Netmask')
setIprouFirFilteSst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSst.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteSst.setDescription('S-St.')
setIprouFirFilteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteSend.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteSend.setDescription('S-End')
setIprouFirFilteDstm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDstm.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteDstm.setDescription('Dst-MAC')
setIprouFirFilteDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDsta.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteDsta.setDescription('Dst-Address')
setIprouFirFilteDstn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDstn.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteDstn.setDescription('Dst-Netmask')
setIprouFirFilteDst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDst.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteDst.setDescription('D-St.')
setIprouFirFilteDend = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteDend.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteDend.setDescription('D-End')
setIprouFirFilteActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteActi.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteActi.setDescription('Action')
setIprouFirFilteLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteLink.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteLink.setDescription('Linked')
setIprouFirFiltePrio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFiltePrio.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFiltePrio.setDescription('Prio')
setIprouFirFilteRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirFilteRtgt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirFilteRtgt.setDescription('Rtg-tag')
setIprouFirConneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5), )
if mibBuilder.loadTexts: setIprouFirConneTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneTable.setDescription('Connection-List')
setIprouFirConneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirConneSrca"), (0, "LANCOM-L54g-MIB", "setIprouFirConneDsta"), (0, "LANCOM-L54g-MIB", "setIprouFirConneProt"), (0, "LANCOM-L54g-MIB", "setIprouFirConneSrcp"), (0, "LANCOM-L54g-MIB", "setIprouFirConneDstp"))
if mibBuilder.loadTexts: setIprouFirConneEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneEntry.setDescription('entry in table')
setIprouFirConneSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrca.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneSrca.setDescription('Src-Address')
setIprouFirConneDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDsta.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneDsta.setDescription('Dst-Address')
setIprouFirConneProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneProt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneProt.setDescription('Prot.')
setIprouFirConneSrcp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrcp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneSrcp.setDescription('Src-Port')
setIprouFirConneDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDstp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneDstp.setDescription('Dst-Port')
setIprouFirConneRtgt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneRtgt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneRtgt.setDescription('Rtg-tag')
setIprouFirConneTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneTime.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneTime.setDescription('Timeout')
setIprouFirConneFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneFlag.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneFlag.setDescription('Flags')
setIprouFirConneFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneFilt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneFilt.setDescription('Filter-Rule')
setIprouFirConneSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneSrcr.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneSrcr.setDescription('Src-Route')
setIprouFirConneDest = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 5, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirConneDest.setStatus('current')
if mibBuilder.loadTexts: setIprouFirConneDest.setDescription('Dest-Route')
setIprouFirOpenpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19), )
if mibBuilder.loadTexts: setIprouFirOpenpTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpTable.setDescription('Open-Port-List')
setIprouFirOpenpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirOpenpSrca"), (0, "LANCOM-L54g-MIB", "setIprouFirOpenpDsta"), (0, "LANCOM-L54g-MIB", "setIprouFirOpenpProt"), (0, "LANCOM-L54g-MIB", "setIprouFirOpenpDstp"))
if mibBuilder.loadTexts: setIprouFirOpenpEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpEntry.setDescription('entry in table')
setIprouFirOpenpSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpSrca.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpSrca.setDescription('Src-Address')
setIprouFirOpenpDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpDsta.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpDsta.setDescription('Dst-Address')
setIprouFirOpenpProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpProt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpProt.setDescription('Prot.')
setIprouFirOpenpDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpDstp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpDstp.setDescription('Dst-Port')
setIprouFirOpenpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpTime.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpTime.setDescription('Timeout')
setIprouFirOpenpFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpFilt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpFilt.setDescription('Filter-Rule')
setIprouFirOpenpSrcr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 19, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirOpenpSrcr.setStatus('current')
if mibBuilder.loadTexts: setIprouFirOpenpSrcr.setDescription('Src-Route')
setIprouFirHostbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 6), )
if mibBuilder.loadTexts: setIprouFirHostbTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirHostbTable.setDescription('Host-Block-List')
setIprouFirHostbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirHostbSrc"))
if mibBuilder.loadTexts: setIprouFirHostbEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirHostbEntry.setDescription('entry in table')
setIprouFirHostbSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbSrc.setStatus('current')
if mibBuilder.loadTexts: setIprouFirHostbSrc.setDescription('Src-Address')
setIprouFirHostbTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbTim.setStatus('current')
if mibBuilder.loadTexts: setIprouFirHostbTim.setDescription('Timeout')
setIprouFirHostbFil = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirHostbFil.setStatus('current')
if mibBuilder.loadTexts: setIprouFirHostbFil.setDescription('Filter-Rule')
setIprouFirPortbTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7), )
if mibBuilder.loadTexts: setIprouFirPortbTable.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbTable.setDescription('Port-Block-List')
setIprouFirPortbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouFirPortbDsta"))
if mibBuilder.loadTexts: setIprouFirPortbEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbEntry.setDescription('entry in table')
setIprouFirPortbDsta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbDsta.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbDsta.setDescription('Dst-Address')
setIprouFirPortbProt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbProt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbProt.setDescription('Prot.')
setIprouFirPortbDstp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbDstp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbDstp.setDescription('Dst-Port')
setIprouFirPortbTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbTime.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbTime.setDescription('Timeout')
setIprouFirPortbFilt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIprouFirPortbFilt.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPortbFilt.setDescription('Filter-Rule')
setIprouFirMaxha = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirMaxha.setStatus('current')
if mibBuilder.loadTexts: setIprouFirMaxha.setDescription('Max.-Half-Open-Conns.')
setIprouFirDosac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirDosac.setStatus('current')
if mibBuilder.loadTexts: setIprouFirDosac.setDescription('DoS-Action')
setIprouFirPorts = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirPorts.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPorts.setDescription('Port-Scan-Threshold')
setIprouFirIdsac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirIdsac.setStatus('current')
if mibBuilder.loadTexts: setIprouFirIdsac.setDescription('IDS-Action')
setIprouFirAdmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAdmin.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAdmin.setDescription('Admin.-Email')
setIprouFirPingb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirPingb.setStatus('current')
if mibBuilder.loadTexts: setIprouFirPingb.setDescription('Ping-Block')
setIprouFirSteal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirSteal.setStatus('current')
if mibBuilder.loadTexts: setIprouFirSteal.setDescription('Stealth-Mode')
setIprouFirAuthp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("closed", 0), ("stealth", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAuthp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAuthp.setDescription('Auth-Port')
setIprouFirDenys = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirDenys.setStatus('current')
if mibBuilder.loadTexts: setIprouFirDenys.setDescription('Deny-Session-Recover')
setIprouFirAppli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20))
setIprouFirAppliFtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1))
setIprouFirAppliFtpFtp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpFtp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliFtpFtp.setDescription('FTP-Block')
setIprouFirAppliFtpAct = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpAct.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliFtpAct.setDescription('Active-FTP-Block')
setIprouFirAppliFtpMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpMin.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliFtpMin.setDescription('Min-Port')
setIprouFirAppliFtpChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpChe.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliFtpChe.setDescription('Check-Host-IP')
setIprouFirAppliFtpFxp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliFtpFxp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliFtpFxp.setDescription('FXP-Block')
setIprouFirAppliIrc = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 2))
setIprouFirAppliIrcIrc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcIrc.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliIrcIrc.setDescription('IRC-Block')
setIprouFirAppliIrcDdc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcDdc.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliIrcDdc.setDescription('DDC-Block')
setIprouFirAppliIrcMin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 2, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcMin.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliIrcMin.setDescription('Min-Port')
setIprouFirAppliIrcChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("allways", 1), ("wan", 2), ("default-route", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliIrcChe.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliIrcChe.setDescription('Check-Host-IP')
setIprouFirAppliApp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 10, 20, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouFirAppliApp.setStatus('current')
if mibBuilder.loadTexts: setIprouFirAppliApp.setDescription('Appl.-Action')
setIprouNnnTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19), )
if mibBuilder.loadTexts: setIprouNnnTable.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnTable.setDescription('N-N-NAT')
setIprouNnnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouNnnIdx"))
if mibBuilder.loadTexts: setIprouNnnEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnEntry.setDescription('entry in table')
setIprouNnnIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnIdx.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnIdx.setDescription('Idx.')
setIprouNnnSrca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnSrca.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnSrca.setDescription('Src-Address')
setIprouNnnSrcm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnSrcm.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnSrcm.setDescription('Src-Mask')
setIprouNnnDsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnDsts.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnDsts.setDescription('Dst-Station')
setIprouNnnMapp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 19, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouNnnMapp.setStatus('current')
if mibBuilder.loadTexts: setIprouNnnMapp.setDescription('Mapped-Network')
setIprouVrr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21))
setIprouVrrOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrOpe.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrOpe.setDescription('Operating')
setIprouVrrVrrTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2), )
if mibBuilder.loadTexts: setIprouVrrVrrTable.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrTable.setDescription('VRRP-List')
setIprouVrrVrrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIprouVrrVrrRou"))
if mibBuilder.loadTexts: setIprouVrrVrrEntry.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrEntry.setDescription('entry in table')
setIprouVrrVrrRou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrRou.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrRou.setDescription('Router-ID')
setIprouVrrVrrVir = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrVir.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrVir.setDescription('virt.-Address')
setIprouVrrVrrPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrPri.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrPri.setDescription('Prio')
setIprouVrrVrrBpr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrBpr.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrBpr.setDescription('B-Prio')
setIprouVrrVrrPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrPee.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrPee.setDescription('Peer')
setIprouVrrVrrCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrVrrCom.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrVrrCom.setDescription('Comment')
setIprouVrrRec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrRec.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrRec.setDescription('Reconnect-Delay')
setIprouVrrAdv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrAdv.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrAdv.setDescription('Advert.-Intervall')
setIprouVrrInt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 8, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIprouVrrInt.setStatus('current')
if mibBuilder.loadTexts: setIprouVrrInt.setDescription('Internal-Services')
setSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9))
setSnmpSendtrap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpSendtrap.setStatus('current')
if mibBuilder.loadTexts: setSnmpSendtrap.setDescription('Send-Traps')
setSnmpIptrapsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 2), )
if mibBuilder.loadTexts: setSnmpIptrapsTable.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsTable.setDescription('IP-Traps')
setSnmpIptrapsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setSnmpIptrapsTra"))
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsEntry.setDescription('entry in table')
setSnmpIptrapsTra = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsTra.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsTra.setDescription('Trap-IP')
setSnmpIptrapsLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setStatus('current')
if mibBuilder.loadTexts: setSnmpIptrapsLoo.setDescription('Loopback-Addr.')
setSnmpAdminist = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpAdminist.setStatus('current')
if mibBuilder.loadTexts: setSnmpAdminist.setDescription('Administrator')
setSnmpLocation = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpLocation.setStatus('current')
if mibBuilder.loadTexts: setSnmpLocation.setDescription('Location')
setSnmpRegister = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpRegister.setStatus('current')
if mibBuilder.loadTexts: setSnmpRegister.setDescription('Register-Monitor')
setSnmpDeletemo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpDeletemo.setStatus('current')
if mibBuilder.loadTexts: setSnmpDeletemo.setDescription('Delete-Monitor')
setSnmpMonitortTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7), )
if mibBuilder.loadTexts: setSnmpMonitortTable.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortTable.setDescription('Monitor-Table')
setSnmpMonitortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setSnmpMonitortIpa"), (0, "LANCOM-L54g-MIB", "setSnmpMonitortPor"))
if mibBuilder.loadTexts: setSnmpMonitortEntry.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortEntry.setDescription('entry in table')
setSnmpMonitortIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortIpa.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortIpa.setDescription('IP-Address')
setSnmpMonitortPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPor.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortPor.setDescription('Port')
setSnmpMonitortMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortMac.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortMac.setDescription('MAC-Address')
setSnmpMonitortVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortVla.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortVla.setDescription('VLAN-ID')
setSnmpMonitortTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortTim.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortTim.setDescription('Timeout')
setSnmpMonitortPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortPee.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortPee.setDescription('Peer')
setSnmpMonitortLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLoo.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortLoo.setDescription('Loopback-Addr.')
setSnmpMonitortLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSnmpMonitortLan.setStatus('current')
if mibBuilder.loadTexts: setSnmpMonitortLan.setDescription('LAN-Ifc')
setSnmpPassword = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpPassword.setStatus('current')
if mibBuilder.loadTexts: setSnmpPassword.setDescription('Password-Required-for-SNMP-Read-Access')
setSnmpComment1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment1.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment1.setDescription('Comment-1')
setSnmpComment2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment2.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment2.setDescription('Comment-2')
setSnmpComment3 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment3.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment3.setDescription('Comment-3')
setSnmpComment4 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSnmpComment4.setStatus('current')
if mibBuilder.loadTexts: setSnmpComment4.setDescription('Comment-4')
setDhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10))
setDhcpNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20), )
if mibBuilder.loadTexts: setDhcpNetTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetTable.setDescription('Network-list')
setDhcpNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpNetNetworknam"))
if mibBuilder.loadTexts: setDhcpNetEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetEntry.setDescription('entry in table')
setDhcpNetNetworknam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetworknam.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNetworknam.setDescription('Network-name')
setDhcpNetStartaddre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetStartaddre.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetStartaddre.setDescription('Start-Address-Pool')
setDhcpNetEndaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetEndaddress.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetEndaddress.setDescription('End-Address-Pool')
setDhcpNetNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNetmask.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNetmask.setDescription('Netmask')
setDhcpNetBroadcasta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetBroadcasta.setDescription('Broadcast-Address')
setDhcpNetGatewayadd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetGatewayadd.setDescription('Gateway-Address')
setDhcpNetDnsdefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetDnsdefault.setDescription('DNS-Default')
setDhcpNetDnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetDnsbackup.setDescription('DNS-Backup')
setDhcpNetNbnsdefaul = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNbnsdefaul.setDescription('NBNS-Default')
setDhcpNetNbnsbackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetNbnsbackup.setDescription('NBNS-Backup')
setDhcpNetOperating = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 16, 4))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("auto", 2), ("relay", 16), ("client", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetOperating.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetOperating.setDescription('Operating')
setDhcpNetBroadcastb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetBroadcastb.setDescription('Broadcast-Bit')
setDhcpNetMasterserv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetMasterserv.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetMasterserv.setDescription('Master-Server')
setDhcpNetCache = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetCache.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetCache.setDescription('Cache')
setDhcpNetAdaption = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpNetAdaption.setStatus('current')
if mibBuilder.loadTexts: setDhcpNetAdaption.setDescription('Adaption')
setDhcpPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 18), )
if mibBuilder.loadTexts: setDhcpPorTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorTable.setDescription('Ports')
setDhcpPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 18, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpPorPor"))
if mibBuilder.loadTexts: setDhcpPorEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorEntry.setDescription('entry in table')
setDhcpPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpPorPor.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorPor.setDescription('Port')
setDhcpPorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpPorEna.setStatus('current')
if mibBuilder.loadTexts: setDhcpPorEna.setDescription('Enable-DHCP')
setDhcpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpMax.setStatus('current')
if mibBuilder.loadTexts: setDhcpMax.setDescription('Max.-Lease-Time-Minutes')
setDhcpDef = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpDef.setStatus('current')
if mibBuilder.loadTexts: setDhcpDef.setDescription('Default-Lease-Time-Minutes')
setDhcpDhcTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8), )
if mibBuilder.loadTexts: setDhcpDhcTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTable.setDescription('DHCP-Table')
setDhcpDhcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpDhcIpa"), (0, "LANCOM-L54g-MIB", "setDhcpDhcNet"))
if mibBuilder.loadTexts: setDhcpDhcEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcEntry.setDescription('entry in table')
setDhcpDhcIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcIpa.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcIpa.setDescription('IP-Address')
setDhcpDhcMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcMac.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcMac.setDescription('MAC-Address')
setDhcpDhcTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTim.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTim.setDescription('Timeout')
setDhcpDhcHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcHos.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcHos.setDescription('Hostname')
setDhcpDhcTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 5), Bits().clone(namedValues=NamedValues(("new", 1), ("new", 2), ("dyn", 16), ("unkn", 4), ("stat", 8), ("bootp", 32), ("relay", 2048)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcTyp.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcTyp.setDescription('Type')
setDhcpDhcLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 255))).clone(namedValues=NamedValues(("lan-1", 0), ("wlan-1", 1), ("p2p-1-1", 2), ("p2p-1-2", 3), ("p2p-1-3", 4), ("p2p-1-4", 5), ("p2p-1-5", 6), ("p2p-1-6", 7), ("wlan-1-2", 8), ("wlan-1-3", 9), ("wlan-1-4", 10), ("wlan-1-5", 11), ("wlan-1-6", 12), ("wlan-1-7", 13), ("wlan-1-8", 14), ("brg-1", 15), ("brg-2", 16), ("brg-3", 17), ("brg-4", 18), ("brg-5", 19), ("brg-6", 20), ("brg-7", 21), ("brg-8", 22), ("any", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcLan.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcLan.setDescription('LAN-Ifc')
setDhcpDhcVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcVla.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcVla.setDescription('VLAN-ID')
setDhcpDhcNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 8, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDhcpDhcNet.setStatus('current')
if mibBuilder.loadTexts: setDhcpDhcNet.setDescription('Network-name')
setDhcpHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9), )
if mibBuilder.loadTexts: setDhcpHosTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosTable.setDescription('Hosts')
setDhcpHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpHosMac"))
if mibBuilder.loadTexts: setDhcpHosEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosEntry.setDescription('entry in table')
setDhcpHosMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosMac.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosMac.setDescription('MAC-Address')
setDhcpHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIpa.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosIpa.setDescription('IP-Address')
setDhcpHosHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosHos.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosHos.setDescription('Hostname')
setDhcpHosIma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpHosIma.setStatus('current')
if mibBuilder.loadTexts: setDhcpHosIma.setDescription('Image-alias')
setDhcpAliTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 10), )
if mibBuilder.loadTexts: setDhcpAliTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliTable.setDescription('Alias-List')
setDhcpAliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpAliImagea"))
if mibBuilder.loadTexts: setDhcpAliEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliEntry.setDescription('entry in table')
setDhcpAliImagea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagea.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImagea.setDescription('Image-alias')
setDhcpAliImages = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 10, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImages.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImages.setDescription('Image-Server')
setDhcpAliImagef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAliImagef.setStatus('current')
if mibBuilder.loadTexts: setDhcpAliImagef.setDescription('Image-file')
setDhcpAddTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 21), )
if mibBuilder.loadTexts: setDhcpAddTable.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddTable.setDescription('Additional-Options')
setDhcpAddEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDhcpAddOptionn"), (0, "LANCOM-L54g-MIB", "setDhcpAddNetwork"))
if mibBuilder.loadTexts: setDhcpAddEntry.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddEntry.setDescription('entry in table')
setDhcpAddOptionn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionn.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddOptionn.setDescription('Option-Number')
setDhcpAddNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddNetwork.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddNetwork.setDescription('Network-name')
setDhcpAddOptionv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 21, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpAddOptionv.setStatus('current')
if mibBuilder.loadTexts: setDhcpAddOptionv.setDescription('Option-Value')
setDhcpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 10, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDhcpUse.setStatus('current')
if mibBuilder.loadTexts: setDhcpUse.setDescription('User-Class-Identifer')
setDns = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17))
setDnsOper = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsOper.setStatus('current')
if mibBuilder.loadTexts: setDnsOper.setDescription('Operating')
setDnsDoma = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDoma.setStatus('current')
if mibBuilder.loadTexts: setDnsDoma.setDescription('Domain')
setDnsSubdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 13), )
if mibBuilder.loadTexts: setDnsSubdTable.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdTable.setDescription('Sub-Domains')
setDnsSubdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 13, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsSubdNet"))
if mibBuilder.loadTexts: setDnsSubdEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdEntry.setDescription('entry in table')
setDnsSubdNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdNet.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdNet.setDescription('Network-name')
setDnsSubdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsSubdSub.setStatus('current')
if mibBuilder.loadTexts: setDnsSubdSub.setDescription('Sub-Domain')
setDnsReso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsReso.setStatus('current')
if mibBuilder.loadTexts: setDnsReso.setDescription('Resolve-Domain')
setDnsDhcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDhcp.setStatus('current')
if mibBuilder.loadTexts: setDnsDhcp.setDescription('DHCP-Usage')
setDnsNetb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsNetb.setStatus('current')
if mibBuilder.loadTexts: setDnsNetb.setDescription('NetBIOS-Usage')
setDnsDnslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 5), )
if mibBuilder.loadTexts: setDnsDnslTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslTable.setDescription('DNS-List')
setDnsDnslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsDnslHos"))
if mibBuilder.loadTexts: setDnsDnslEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslEntry.setDescription('entry in table')
setDnsDnslHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslHos.setDescription('Host-name')
setDnsDnslIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnslIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsDnslIpa.setDescription('IP-Address')
setDnsFiltTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6), )
if mibBuilder.loadTexts: setDnsFiltTable.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltTable.setDescription('Filter-List')
setDnsFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsFiltIdx"))
if mibBuilder.loadTexts: setDnsFiltEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltEntry.setDescription('entry in table')
setDnsFiltIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIdx.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltIdx.setDescription('Idx.')
setDnsFiltDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltDom.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltDom.setDescription('Domain')
setDnsFiltIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltIpa.setDescription('IP-Address')
setDnsFiltNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 6, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsFiltNet.setStatus('current')
if mibBuilder.loadTexts: setDnsFiltNet.setDescription('Netmask')
setDnsDyndTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 8), )
if mibBuilder.loadTexts: setDnsDyndTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndTable.setDescription('Dyn.-DNS-List')
setDnsDyndEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsDyndHos"))
if mibBuilder.loadTexts: setDnsDyndEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndEntry.setDescription('entry in table')
setDnsDyndHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndHos.setDescription('Host-name')
setDnsDyndIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndIpa.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndIpa.setDescription('IP-Address')
setDnsDyndTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDyndTim.setStatus('current')
if mibBuilder.loadTexts: setDnsDyndTim.setDescription('Timeout')
setDnsDnsdTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 9), )
if mibBuilder.loadTexts: setDnsDnsdTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdTable.setDescription('DNS-Destinations')
setDnsDnsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsDnsdDom"))
if mibBuilder.loadTexts: setDnsDnsdEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdEntry.setDescription('entry in table')
setDnsDnsdDom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 9, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDom.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdDom.setDescription('Domain-name')
setDnsDnsdDes = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsDnsdDes.setStatus('current')
if mibBuilder.loadTexts: setDnsDnsdDes.setDescription('Destination')
setDnsLeas = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsLeas.setStatus('current')
if mibBuilder.loadTexts: setDnsLeas.setDescription('Leasetime')
setDnsServTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 10), )
if mibBuilder.loadTexts: setDnsServTable.setStatus('current')
if mibBuilder.loadTexts: setDnsServTable.setDescription('Service-Location-List')
setDnsServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsServSer"))
if mibBuilder.loadTexts: setDnsServEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsServEntry.setDescription('entry in table')
setDnsServSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServSer.setStatus('current')
if mibBuilder.loadTexts: setDnsServSer.setDescription('Service-Name')
setDnsServHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServHos.setStatus('current')
if mibBuilder.loadTexts: setDnsServHos.setDescription('Host-name')
setDnsServPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setDnsServPor.setStatus('current')
if mibBuilder.loadTexts: setDnsServPor.setDescription('Port')
setDnsDynaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 11), )
if mibBuilder.loadTexts: setDnsDynaTable.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaTable.setDescription('Dynamic-SRV-List')
setDnsDynaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setDnsDynaSer"))
if mibBuilder.loadTexts: setDnsDynaEntry.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaEntry.setDescription('entry in table')
setDnsDynaSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaSer.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaSer.setDescription('Service-Name')
setDnsDynaHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaHos.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaHos.setDescription('Host-name')
setDnsDynaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 17, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setDnsDynaPor.setStatus('current')
if mibBuilder.loadTexts: setDnsDynaPor.setDescription('Port')
setLanbr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20))
setLanbrIso = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrIso.setStatus('current')
if mibBuilder.loadTexts: setLanbrIso.setDescription('Isolated-Mode')
setLanbrPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11), )
if mibBuilder.loadTexts: setLanbrPorTable.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorTable.setDescription('Port-Data')
setLanbrPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLanbrPorPor"))
if mibBuilder.loadTexts: setLanbrPorEntry.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorEntry.setDescription('entry in table')
setLanbrPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanbrPorPor.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorPor.setDescription('Port')
setLanbrPorAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorAct.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorAct.setDescription('Active')
setLanbrPorBri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("brg-1", 0), ("brg-2", 1), ("brg-3", 2), ("brg-4", 3), ("brg-5", 4), ("brg-6", 5), ("brg-7", 6), ("brg-8", 7), ("none", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorBri.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorBri.setDescription('Bridge-Group')
setLanbrPorDhc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorDhc.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorDhc.setDescription('DHCP-Limit')
setLanbrPorPoi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("force-true", 1), ("force-false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrPorPoi.setStatus('current')
if mibBuilder.loadTexts: setLanbrPorPoi.setDescription('Point-To-Point-Port')
setLanbrAgi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrAgi.setStatus('current')
if mibBuilder.loadTexts: setLanbrAgi.setDescription('Aging-Time')
setLanbrEncTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 4), )
if mibBuilder.loadTexts: setLanbrEncTable.setStatus('current')
if mibBuilder.loadTexts: setLanbrEncTable.setDescription('Encapsulation-Table')
setLanbrEncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLanbrEncPro"))
if mibBuilder.loadTexts: setLanbrEncEntry.setStatus('current')
if mibBuilder.loadTexts: setLanbrEncEntry.setDescription('entry in table')
setLanbrEncPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrEncPro.setStatus('current')
if mibBuilder.loadTexts: setLanbrEncPro.setDescription('Protocol')
setLanbrEncEnc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("eth-ii", 0), ("snap", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrEncEnc.setStatus('current')
if mibBuilder.loadTexts: setLanbrEncEnc.setDescription('Encapsulation')
setLanbrProTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10), )
if mibBuilder.loadTexts: setLanbrProTable.setStatus('current')
if mibBuilder.loadTexts: setLanbrProTable.setDescription('Protocol-Table')
setLanbrProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLanbrProName"))
if mibBuilder.loadTexts: setLanbrProEntry.setStatus('current')
if mibBuilder.loadTexts: setLanbrProEntry.setDescription('entry in table')
setLanbrProName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProName.setStatus('current')
if mibBuilder.loadTexts: setLanbrProName.setDescription('Name')
setLanbrProDhcpsr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("irrelevant", 0), ("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProDhcpsr.setStatus('current')
if mibBuilder.loadTexts: setLanbrProDhcpsr.setDescription('DHCP-Src-MAC')
setLanbrProDestma = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 9), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProDestma.setStatus('current')
if mibBuilder.loadTexts: setLanbrProDestma.setDescription('Dest-MAC-Addr.')
setLanbrProProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProProtoc.setStatus('current')
if mibBuilder.loadTexts: setLanbrProProtoc.setDescription('Protocol')
setLanbrProIpnetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIpnetw.setStatus('current')
if mibBuilder.loadTexts: setLanbrProIpnetw.setDescription('IP-Network')
setLanbrProIpnetm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIpnetm.setStatus('current')
if mibBuilder.loadTexts: setLanbrProIpnetm.setDescription('IP-Netmask')
setLanbrProSubpro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProSubpro.setStatus('current')
if mibBuilder.loadTexts: setLanbrProSubpro.setDescription('Sub-Protocol')
setLanbrProPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProPort.setStatus('current')
if mibBuilder.loadTexts: setLanbrProPort.setDescription('Port')
setLanbrProPorten = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProPorten.setStatus('current')
if mibBuilder.loadTexts: setLanbrProPorten.setDescription('Port-End')
setLanbrProIfclis = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProIfclis.setStatus('current')
if mibBuilder.loadTexts: setLanbrProIfclis.setDescription('Ifc-List')
setLanbrProAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("drop", 0), ("pass", 1), ("redirect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProAction.setStatus('current')
if mibBuilder.loadTexts: setLanbrProAction.setDescription('Action')
setLanbrProRedire = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 10, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrProRedire.setStatus('current')
if mibBuilder.loadTexts: setLanbrProRedire.setDescription('Redirect-IP-Address')
setLanbrSpa = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20))
setLanbrSpaOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaOpe.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaOpe.setDescription('Operating')
setLanbrSpaPro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPro.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPro.setDescription('Protocol-Version')
setLanbrSpaPat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("classic", 0), ("rapid", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPat.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPat.setDescription('Path-Cost-Computation')
setLanbrSpaBri = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaBri.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaBri.setDescription('Bridge-Priority')
setLanbrSpaPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11), )
if mibBuilder.loadTexts: setLanbrSpaPorTable.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorTable.setDescription('Port-Data')
setLanbrSpaPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLanbrSpaPorPor"))
if mibBuilder.loadTexts: setLanbrSpaPorEntry.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorEntry.setDescription('entry in table')
setLanbrSpaPorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setLanbrSpaPorPor.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorPor.setDescription('Port')
setLanbrSpaPorPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorPri.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorPri.setDescription('Priority')
setLanbrSpaPorEdg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorEdg.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorEdg.setDescription('Edge-Port')
setLanbrSpaPorPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaPorPat.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaPorPat.setDescription('Path-Cost-Override')
setLanbrSpaMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaMax.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaMax.setDescription('Max-Age')
setLanbrSpaHel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaHel.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaHel.setDescription('Hello-Time')
setLanbrSpaFor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaFor.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaFor.setDescription('Forward-Delay')
setLanbrSpaTra = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 20, 20, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLanbrSpaTra.setStatus('current')
if mibBuilder.loadTexts: setLanbrSpaTra.setDescription('Transmit-Hold-Count')
setHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21))
setHttpDoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpDoc.setStatus('current')
if mibBuilder.loadTexts: setHttpDoc.setDescription('Document-Root')
setHttpUse = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpUse.setStatus('current')
if mibBuilder.loadTexts: setHttpUse.setDescription('Use-CSS')
setHttpFon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 39))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpFon.setStatus('current')
if mibBuilder.loadTexts: setHttpFon.setDescription('Font-Family')
setHttpPag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("images", 0), ("texts", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPag.setStatus('current')
if mibBuilder.loadTexts: setHttpPag.setDescription('Page-Headers')
setHttpErr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("nifty", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpErr.setStatus('current')
if mibBuilder.loadTexts: setHttpErr.setDescription('Error-Page-Style')
setHttpPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpPor.setStatus('current')
if mibBuilder.loadTexts: setHttpPor.setDescription('Port')
setHttpSsl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpSsl.setStatus('current')
if mibBuilder.loadTexts: setHttpSsl.setDescription('SSL-Port')
setHttpMax = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpMax.setStatus('current')
if mibBuilder.loadTexts: setHttpMax.setDescription('Max-Tunnel-Connections')
setHttpTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpTun.setStatus('current')
if mibBuilder.loadTexts: setHttpTun.setDescription('Tunnel-Idle-Timeout')
setHttpRol = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20))
setHttpRolOperating = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolOperating.setStatus('current')
if mibBuilder.loadTexts: setHttpRolOperating.setDescription('Operating')
setHttpRolTitle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolTitle.setStatus('current')
if mibBuilder.loadTexts: setHttpRolTitle.setDescription('Title')
setHttpRolVariablesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3), )
if mibBuilder.loadTexts: setHttpRolVariablesTable.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTable.setDescription('Variables')
setHttpRolVariablesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setHttpRolVariablesInd"))
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesEntry.setDescription('entry in table')
setHttpRolVariablesInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesInd.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesInd.setDescription('Index')
setHttpRolVariablesIde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesIde.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesIde.setDescription('Ident')
setHttpRolVariablesTit = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTit.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTit.setDescription('Title')
setHttpRolVariablesTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("label", 0), ("integer", 1), ("string", 2), ("password", 3), ("checkmark", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesTyp.setDescription('Type')
setHttpRolVariablesMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMin.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesMin.setDescription('Min-Value')
setHttpRolVariablesMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesMax.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesMax.setDescription('Max-Value')
setHttpRolVariablesDef = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolVariablesDef.setStatus('current')
if mibBuilder.loadTexts: setHttpRolVariablesDef.setDescription('Default-Value')
setHttpRolRenumberv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumberv.setStatus('current')
if mibBuilder.loadTexts: setHttpRolRenumberv.setDescription('Renumber-Variables')
setHttpRolActionsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 4), )
if mibBuilder.loadTexts: setHttpRolActionsTable.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsTable.setDescription('Actions')
setHttpRolActionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setHttpRolActionsInd"))
if mibBuilder.loadTexts: setHttpRolActionsEntry.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsEntry.setDescription('entry in table')
setHttpRolActionsInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsInd.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsInd.setDescription('Index')
setHttpRolActionsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolActionsAct.setStatus('current')
if mibBuilder.loadTexts: setHttpRolActionsAct.setDescription('Action')
setHttpRolRenumbera = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 21, 20, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setHttpRolRenumbera.setStatus('current')
if mibBuilder.loadTexts: setHttpRolRenumbera.setDescription('Renumber-Actions')
setSyslo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22))
setSysloOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloOpe.setStatus('current')
if mibBuilder.loadTexts: setSysloOpe.setDescription('Operating')
setSysloSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2), )
if mibBuilder.loadTexts: setSysloSerTable.setStatus('current')
if mibBuilder.loadTexts: setSysloSerTable.setDescription('Server')
setSysloSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setSysloSerIdx"))
if mibBuilder.loadTexts: setSysloSerEntry.setStatus('current')
if mibBuilder.loadTexts: setSysloSerEntry.setDescription('entry in table')
setSysloSerIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerIdx.setStatus('current')
if mibBuilder.loadTexts: setSysloSerIdx.setDescription('Idx.')
setSysloSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerIpa.setStatus('current')
if mibBuilder.loadTexts: setSysloSerIpa.setDescription('IP-Address')
setSysloSerSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerSou.setStatus('current')
if mibBuilder.loadTexts: setSysloSerSou.setDescription('Source')
setSysloSerLev = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerLev.setStatus('current')
if mibBuilder.loadTexts: setSysloSerLev.setDescription('Level')
setSysloSerLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloSerLoo.setStatus('current')
if mibBuilder.loadTexts: setSysloSerLoo.setDescription('Loopback-Addr.')
setSysloFacTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 3), )
if mibBuilder.loadTexts: setSysloFacTable.setStatus('current')
if mibBuilder.loadTexts: setSysloFacTable.setDescription('Facility-Mapper')
setSysloFacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setSysloFacSou"))
if mibBuilder.loadTexts: setSysloFacEntry.setStatus('current')
if mibBuilder.loadTexts: setSysloFacEntry.setDescription('entry in table')
setSysloFacSou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128))).clone(namedValues=NamedValues(("system", 1), ("login", 2), ("systemtime", 4), ("console-login", 8), ("connections", 16), ("accounting", 32), ("administration", 64), ("router", 128)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setSysloFacSou.setStatus('current')
if mibBuilder.loadTexts: setSysloFacSou.setDescription('Source')
setSysloFacFac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloFacFac.setStatus('current')
if mibBuilder.loadTexts: setSysloFacFac.setDescription('Facility')
setSysloPor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 22, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setSysloPor.setStatus('current')
if mibBuilder.loadTexts: setSysloPor.setDescription('Port')
setNetbi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16))
setNetbiOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiOpe.setStatus('current')
if mibBuilder.loadTexts: setNetbiOpe.setDescription('Operating')
setNetbiNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 12), )
if mibBuilder.loadTexts: setNetbiNetTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiNetTable.setDescription('Networks')
setNetbiNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiNetNet"))
if mibBuilder.loadTexts: setNetbiNetEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiNetEntry.setDescription('entry in table')
setNetbiNetNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetNet.setStatus('current')
if mibBuilder.loadTexts: setNetbiNetNet.setDescription('Network-name')
setNetbiNetOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetOpe.setStatus('current')
if mibBuilder.loadTexts: setNetbiNetOpe.setDescription('Operating')
setNetbiNetNtd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiNetNtd.setStatus('current')
if mibBuilder.loadTexts: setNetbiNetNtd.setDescription('NT-Domain')
setNetbiSco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiSco.setStatus('current')
if mibBuilder.loadTexts: setNetbiSco.setDescription('Scope-ID')
setNetbiPeeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 4), )
if mibBuilder.loadTexts: setNetbiPeeTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiPeeTable.setDescription('Peers')
setNetbiPeeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiPeeNam"))
if mibBuilder.loadTexts: setNetbiPeeEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiPeeEntry.setDescription('entry in table')
setNetbiPeeNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiPeeNam.setStatus('current')
if mibBuilder.loadTexts: setNetbiPeeNam.setDescription('Name')
setNetbiPeeTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("workstation", 1), ("router", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiPeeTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbiPeeTyp.setDescription('Type')
setNetbiGroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5), )
if mibBuilder.loadTexts: setNetbiGroTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroTable.setDescription('Group-List')
setNetbiGroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiGroGro"), (0, "LANCOM-L54g-MIB", "setNetbiGroTyp"), (0, "LANCOM-L54g-MIB", "setNetbiGroIpa"), (0, "LANCOM-L54g-MIB", "setNetbiGroRtg"))
if mibBuilder.loadTexts: setNetbiGroEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroEntry.setDescription('entry in table')
setNetbiGroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroGro.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroGro.setDescription('Group/Domain')
setNetbiGroTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroTyp.setDescription('Type')
setNetbiGroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroIpa.setDescription('IP-Address')
setNetbiGroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroRtg.setDescription('Rtg-tag')
setNetbiGroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroPee.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroPee.setDescription('Peer')
setNetbiGroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroNet.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroNet.setDescription('Network-name')
setNetbiGroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroTim.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroTim.setDescription('Timeout')
setNetbiGroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiGroFla.setStatus('current')
if mibBuilder.loadTexts: setNetbiGroFla.setDescription('Flags')
setNetbiHosTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6), )
if mibBuilder.loadTexts: setNetbiHosTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosTable.setDescription('Host-List')
setNetbiHosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiHosNam"), (0, "LANCOM-L54g-MIB", "setNetbiHosTyp"), (0, "LANCOM-L54g-MIB", "setNetbiHosIpa"), (0, "LANCOM-L54g-MIB", "setNetbiHosRtg"))
if mibBuilder.loadTexts: setNetbiHosEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosEntry.setDescription('entry in table')
setNetbiHosNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosNam.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosNam.setDescription('Name')
setNetbiHosTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosTyp.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosTyp.setDescription('Type')
setNetbiHosIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosIpa.setDescription('IP-Address')
setNetbiHosRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosRtg.setDescription('Rtg-tag')
setNetbiHosPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosPee.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosPee.setDescription('Peer')
setNetbiHosNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosNet.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosNet.setDescription('Network-name')
setNetbiHosTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosTim.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosTim.setDescription('Timeout')
setNetbiHosFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiHosFla.setStatus('current')
if mibBuilder.loadTexts: setNetbiHosFla.setDescription('Flags')
setNetbiSerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7), )
if mibBuilder.loadTexts: setNetbiSerTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerTable.setDescription('Server-List')
setNetbiSerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiSerHos"), (0, "LANCOM-L54g-MIB", "setNetbiSerGro"), (0, "LANCOM-L54g-MIB", "setNetbiSerIpa"), (0, "LANCOM-L54g-MIB", "setNetbiSerRtg"))
if mibBuilder.loadTexts: setNetbiSerEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerEntry.setDescription('entry in table')
setNetbiSerHos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerHos.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerHos.setDescription('Host')
setNetbiSerGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerGro.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerGro.setDescription('Group/Domain')
setNetbiSerIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerIpa.setDescription('IP-Address')
setNetbiSerRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerRtg.setDescription('Rtg-tag')
setNetbiSerOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerOsv.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerOsv.setDescription('OS-Ver.')
setNetbiSerSmb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerSmb.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerSmb.setDescription('SMB-Ver.')
setNetbiSerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerSer.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerSer.setDescription('Server-Typ')
setNetbiSerPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerPee.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerPee.setDescription('Peer')
setNetbiSerNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerNet.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerNet.setDescription('Network-name')
setNetbiSerTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerTim.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerTim.setDescription('Timeout')
setNetbiSerFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 7, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiSerFla.setStatus('current')
if mibBuilder.loadTexts: setNetbiSerFla.setDescription('Flags')
setNetbiBroTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13), )
if mibBuilder.loadTexts: setNetbiBroTable.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroTable.setDescription('Browser-List')
setNetbiBroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNetbiBroBro"), (0, "LANCOM-L54g-MIB", "setNetbiBroGro"), (0, "LANCOM-L54g-MIB", "setNetbiBroIpa"), (0, "LANCOM-L54g-MIB", "setNetbiBroRtg"))
if mibBuilder.loadTexts: setNetbiBroEntry.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroEntry.setDescription('entry in table')
setNetbiBroBro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroBro.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroBro.setDescription('Browser')
setNetbiBroGro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroGro.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroGro.setDescription('Group/Domain')
setNetbiBroIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroIpa.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroIpa.setDescription('IP-Address')
setNetbiBroRtg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroRtg.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroRtg.setDescription('Rtg-tag')
setNetbiBroOsv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroOsv.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroOsv.setDescription('OS-Ver.')
setNetbiBroSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroSer.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroSer.setDescription('Server-Typ')
setNetbiBroPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroPee.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroPee.setDescription('Peer')
setNetbiBroNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroNet.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroNet.setDescription('Network-name')
setNetbiBroTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroTim.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroTim.setDescription('Timeout')
setNetbiBroFla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 13, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setNetbiBroFla.setStatus('current')
if mibBuilder.loadTexts: setNetbiBroFla.setDescription('Flags')
setNetbiSup = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiSup.setStatus('current')
if mibBuilder.loadTexts: setNetbiSup.setDescription('Support-Browsing')
setNetbiWat = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("spoof", 1), ("route", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiWat.setStatus('current')
if mibBuilder.loadTexts: setNetbiWat.setDescription('Watchdogs')
setNetbiUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pback", 0), ("trig", 1), ("time", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiUpd.setStatus('current')
if mibBuilder.loadTexts: setNetbiUpd.setDescription('Update')
setNetbiWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiWan.setStatus('current')
if mibBuilder.loadTexts: setNetbiWan.setDescription('WAN-Update-Minutes')
setNetbiLea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 16, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNetbiLea.setStatus('current')
if mibBuilder.loadTexts: setNetbiLea.setDescription('Leasetime')
setConfi = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11))
setConfiPasswor = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiPasswor.setStatus('current')
if mibBuilder.loadTexts: setConfiPasswor.setDescription('Password-Required-for-SNMP-Read-Access')
setConfiMaximum = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiMaximum.setStatus('current')
if mibBuilder.loadTexts: setConfiMaximum.setDescription('Maximum-Connections')
setConfiConfiga = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiConfiga.setStatus('current')
if mibBuilder.loadTexts: setConfiConfiga.setDescription('Config-Aging-Minutes')
setConfiOutband = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiOutband.setStatus('current')
if mibBuilder.loadTexts: setConfiOutband.setDescription('Outband-Aging-Minutes')
setConfiLoginer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLoginer.setStatus('current')
if mibBuilder.loadTexts: setConfiLoginer.setDescription('Login-Errors')
setConfiLockmin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLockmin.setStatus('current')
if mibBuilder.loadTexts: setConfiLockmin.setDescription('Lock-Minutes')
setConfiLanguag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("english", 1), ("deutsch", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLanguag.setStatus('current')
if mibBuilder.loadTexts: setConfiLanguag.setDescription('Language')
setConfiTftpcli = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13))
setConfiTftpcliConfigadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliConfigadd.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliConfigadd.setDescription('Config-Address')
setConfiTftpcliConfigfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliConfigfil.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliConfigfil.setDescription('Config-Filename')
setConfiTftpcliFirmwarea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliFirmwarea.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliFirmwarea.setDescription('Firmware-Address')
setConfiTftpcliFirmwaref = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliFirmwaref.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliFirmwaref.setDescription('Firmware-Filename')
setConfiTftpcliScriptadd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliScriptadd.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliScriptadd.setDescription('Script-Address')
setConfiTftpcliScriptfil = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliScriptfil.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliScriptfil.setDescription('Script-Filename')
setConfiTftpcliBytesperh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 13, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTftpcliBytesperh.setStatus('current')
if mibBuilder.loadTexts: setConfiTftpcliBytesperh.setDescription('Bytes-per-Hashmark')
setConfiAccesstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15), )
if mibBuilder.loadTexts: setConfiAccesstTable.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstTable.setDescription('Access-Table')
setConfiAccesstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setConfiAccesstIfc"))
if mibBuilder.loadTexts: setConfiAccesstEntry.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstEntry.setDescription('entry in table')
setConfiAccesstIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2), ("wlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiAccesstIfc.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstIfc.setDescription('Ifc.')
setConfiAccesstTelnet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTelnet.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstTelnet.setDescription('Telnet')
setConfiAccesstTftp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTftp.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstTftp.setDescription('TFTP')
setConfiAccesstHttp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstHttp.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstHttp.setDescription('HTTP')
setConfiAccesstSnmp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstSnmp.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstSnmp.setDescription('SNMP')
setConfiAccesstHttps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstHttps.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstHttps.setDescription('HTTPS')
setConfiAccesstTelnets = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstTelnets.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstTelnets.setDescription('Telnet-SSL')
setConfiAccesstSsh = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("yes", 1), ("read", 4), ("no", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAccesstSsh.setStatus('current')
if mibBuilder.loadTexts: setConfiAccesstSsh.setDescription('SSH')
setConfiScreenh = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiScreenh.setStatus('current')
if mibBuilder.loadTexts: setConfiScreenh.setDescription('Screen-Height')
setConfiCrashme = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrashme.setStatus('current')
if mibBuilder.loadTexts: setConfiCrashme.setDescription('Crash-Message')
setConfiAdminge = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("male", 1), ("female", 2), ("geek", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminge.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminge.setDescription('Admin-Gender')
setConfiAsserta = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("log-only", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAsserta.setStatus('current')
if mibBuilder.loadTexts: setConfiAsserta.setDescription('Assert-Action')
setConfiPrompt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiPrompt.setStatus('current')
if mibBuilder.loadTexts: setConfiPrompt.setDescription('Prompt')
setConfiLedtest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 1, 3, 255))).clone(namedValues=NamedValues(("off", 0), ("green", 2), ("red", 1), ("orange", 3), ("no-test", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiLedtest.setStatus('current')
if mibBuilder.loadTexts: setConfiLedtest.setDescription('LED-Test')
setConfiCrontabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20), )
if mibBuilder.loadTexts: setConfiCrontabTable.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabTable.setDescription('Cron-Table')
setConfiCrontabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setConfiCrontabInde"))
if mibBuilder.loadTexts: setConfiCrontabEntry.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabEntry.setDescription('entry in table')
setConfiCrontabInde = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabInde.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabInde.setDescription('Index')
setConfiCrontabActi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabActi.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabActi.setDescription('Active')
setConfiCrontabBase = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("real-time", 0), ("operation-time", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabBase.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabBase.setDescription('Base')
setConfiCrontabVari = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabVari.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabVari.setDescription('Variation')
setConfiCrontabMinu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabMinu.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabMinu.setDescription('Minute')
setConfiCrontabHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabHour.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabHour.setDescription('Hour')
setConfiCrontabDayo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabDayo.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabDayo.setDescription('DayOfWeek')
setConfiCrontabDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabDay.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabDay.setDescription('Day')
setConfiCrontabMont = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabMont.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabMont.setDescription('Month')
setConfiCrontabComm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabComm.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabComm.setDescription('Command')
setConfiCrontabOwne = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 20, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiCrontabOwne.setStatus('current')
if mibBuilder.loadTexts: setConfiCrontabOwne.setDescription('Owner')
setConfiAdminsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21), )
if mibBuilder.loadTexts: setConfiAdminsTable.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsTable.setDescription('Admins')
setConfiAdminsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setConfiAdminsAdm"))
if mibBuilder.loadTexts: setConfiAdminsEntry.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsEntry.setDescription('entry in table')
setConfiAdminsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAdm.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsAdm.setDescription('Administrator')
setConfiAdminsPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsPas.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsPas.setDescription('Password')
setConfiAdminsAct = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("no", 1), ("yes", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAct.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsAct.setDescription('Active')
setConfiAdminsAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8388608, 16777216, 16777472, -1))).clone(namedValues=NamedValues(("none", 0), ("admin-ro-limit", 8388608), ("admin-ro", 16777216), ("admin-rw", 16777472), ("supervisor", -1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsAcc.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsAcc.setDescription('Access-Rights')
setConfiAdminsFun = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 21, 1, 3), Bits().clone(namedValues=NamedValues(("basic-wizard", 1), ("security-wizard", 2), ("internet-wizard", 4), ("ras-wizard", 16), ("provider-selection", 8), ("lanlan-wizard", 32), ("time-setting", 64), ("device-search", 128), ("wlan-linktest", 256), ("rollout-wizard", 8192), ("wlan-wizard", 4096)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiAdminsFun.setStatus('current')
if mibBuilder.loadTexts: setConfiAdminsFun.setDescription('Function-Rights')
setConfiPredefaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 27), )
if mibBuilder.loadTexts: setConfiPredefaTable.setStatus('current')
if mibBuilder.loadTexts: setConfiPredefaTable.setDescription('Predef.-Admins')
setConfiPredefaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 27, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setConfiPredefaNam"))
if mibBuilder.loadTexts: setConfiPredefaEntry.setStatus('current')
if mibBuilder.loadTexts: setConfiPredefaEntry.setDescription('entry in table')
setConfiPredefaNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 27, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiPredefaNam.setStatus('current')
if mibBuilder.loadTexts: setConfiPredefaNam.setDescription('Name')
setConfiLan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 1), Integer32())
if mibBuilder.loadTexts: setConfiLan.setStatus('current')
if mibBuilder.loadTexts: setConfiLan.setDescription('LAN')
setConfiWlancon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 11), Integer32())
if mibBuilder.loadTexts: setConfiWlancon.setStatus('current')
if mibBuilder.loadTexts: setConfiWlancon.setDescription('WLAN-Config')
setConfiWan = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 2), Integer32())
if mibBuilder.loadTexts: setConfiWan.setStatus('current')
if mibBuilder.loadTexts: setConfiWan.setDescription('WAN')
setConfiTelnetp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTelnetp.setStatus('current')
if mibBuilder.loadTexts: setConfiTelnetp.setDescription('Telnet-Port')
setConfiTelnets = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiTelnets.setStatus('current')
if mibBuilder.loadTexts: setConfiTelnets.setDescription('Telnet-SSL-Port')
setConfiResetbu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ignore", 0), ("boot-only", 1), ("reset-or-boot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiResetbu.setStatus('current')
if mibBuilder.loadTexts: setConfiResetbu.setDescription('Reset-button')
setConfiMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 35))
setConfiMonitorTracemask1 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 35, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiMonitorTracemask1.setStatus('current')
if mibBuilder.loadTexts: setConfiMonitorTracemask1.setDescription('Tracemask1')
setConfiMonitorTracemask2 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 35, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiMonitorTracemask2.setStatus('current')
if mibBuilder.loadTexts: setConfiMonitorTracemask2.setDescription('Tracemask2')
setConfiUpdatec = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30))
setConfiUpdatecOperati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecOperati.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecOperati.setDescription('Operating')
setConfiUpdatecServern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecServern.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecServern.setDescription('Server-Name')
setConfiUpdatecServerp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecServerp.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecServerp.setDescription('Server-Port')
setConfiUpdatecRespons = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRespons.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecRespons.setDescription('Response-Timeout')
setConfiUpdatecRetryfa = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRetryfa.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecRetryfa.setDescription('Retry-Failure')
setConfiUpdatecRetryok = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiUpdatecRetryok.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecRetryok.setDescription('Retry-Ok')
setConfiUpdatecLastfir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiUpdatecLastfir.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecLastfir.setDescription('Last-Firmware-Update')
setConfiUpdatecLastcon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 30, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiUpdatecLastcon.setStatus('current')
if mibBuilder.loadTexts: setConfiUpdatecLastcon.setDescription('Last-Config-Update')
setConfiSshport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiSshport.setStatus('current')
if mibBuilder.loadTexts: setConfiSshport.setDescription('SSH-Port')
setConfiSshauthTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 26), )
if mibBuilder.loadTexts: setConfiSshauthTable.setStatus('current')
if mibBuilder.loadTexts: setConfiSshauthTable.setDescription('SSH-Authentication-Methods')
setConfiSshauthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 26, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setConfiSshauthIfc"))
if mibBuilder.loadTexts: setConfiSshauthEntry.setStatus('current')
if mibBuilder.loadTexts: setConfiSshauthEntry.setDescription('entry in table')
setConfiSshauthIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2), ("wlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setConfiSshauthIfc.setStatus('current')
if mibBuilder.loadTexts: setConfiSshauthIfc.setDescription('Ifc.')
setConfiSshauthMet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 11, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("public-key", 1), ("password", 2), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setConfiSshauthMet.setStatus('current')
if mibBuilder.loadTexts: setConfiSshauthMet.setDescription('Methods')
setWlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12))
setWlanBrokenlink = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanBrokenlink.setStatus('current')
if mibBuilder.loadTexts: setWlanBrokenlink.setDescription('Broken-Link-Detection')
setWlanSpareheap = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSpareheap.setStatus('current')
if mibBuilder.loadTexts: setWlanSpareheap.setDescription('Spare-Heap')
setWlanIappprotoc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIappprotoc.setStatus('current')
if mibBuilder.loadTexts: setWlanIappprotoc.setDescription('IAPP-Protocol')
setWlanIappannoun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIappannoun.setStatus('current')
if mibBuilder.loadTexts: setWlanIappannoun.setDescription('IAPP-Announce-Interval')
setWlanIapphandov = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIapphandov.setStatus('current')
if mibBuilder.loadTexts: setWlanIapphandov.setDescription('IAPP-Handover-Timeout')
setWlanCountry = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 32, 36, 40, 48, 50, 112, 56, 70, 76, 96, 100, 124, 152, 156, 170, 188, 191, 196, 203, 208, 218, 999, 818, 233, 246, 250, 276, 288, 300, 320, 340, 344, 348, 352, 356, 360, 372, 376, 380, 392, 400, 410, 414, 428, 422, 438, 440, 442, 446, 807, 458, 470, 484, 498, 504, 528, 554, 558, 578, 512, 586, 591, 600, 604, 608, 616, 620, 630, 634, 642, 643, 682, 702, 703, 705, 710, 724, 752, 756, 158, 834, 764, 788, 792, 800, 804, 784, 826, 840, 858, 862))).clone(namedValues=NamedValues(("unknown", 0), ("albania", 8), ("argentina", 32), ("australia", 36), ("austria", 40), ("bahrain", 48), ("bangladesh", 50), ("belarus", 112), ("belgium", 56), ("bosnia-herzegovina", 70), ("brazil", 76), ("brunei-darussalam", 96), ("bulgaria", 100), ("canada", 124), ("chile", 152), ("china", 156), ("colombia", 170), ("costa-rica", 188), ("croatia", 191), ("cyprus", 196), ("czech", 203), ("denmark", 208), ("ecuador", 218), ("egalistan", 999), ("egypt", 818), ("estonia", 233), ("finland", 246), ("france", 250), ("germany", 276), ("ghana", 288), ("greece", 300), ("guatemala", 320), ("honduras", 340), ("hong-kong", 344), ("hungary", 348), ("iceland", 352), ("india", 356), ("indonesia", 360), ("ireland", 372), ("israel", 376), ("italy", 380), ("japan", 392), ("jordan", 400), ("south-korea", 410), ("kuwait", 414), ("latvia", 428), ("lebanon", 422), ("liechtenstein", 438), ("lithuania", 440), ("luxembourg", 442), ("macau", 446), ("macedonia", 807), ("malaysia", 458), ("malta", 470), ("mexico", 484), ("moldavia", 498), ("morocco", 504), ("netherlands", 528), ("new-zealand", 554), ("nicaragua", 558), ("norway", 578), ("oman", 512), ("pakistan", 586), ("panama", 591), ("paraguay", 600), ("peru", 604), ("philippines", 608), ("poland", 616), ("portugal", 620), ("puerto-rico", 630), ("qatar", 634), ("romania", 642), ("russia", 643), ("saudi-arabia", 682), ("singapore", 702), ("slovak", 703), ("slovenia", 705), ("south-africa", 710), ("spain", 724), ("sweden", 752), ("switzerland", 756), ("taiwan", 158), ("tanzania", 834), ("thailand", 764), ("tunisia", 788), ("turkey", 792), ("uganda", 800), ("ukraine", 804), ("united-arab-emirates", 784), ("united-kingdom", 826), ("united-states-fcc", 840), ("uruguay", 858), ("venezuela", 862)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanCountry.setStatus('current')
if mibBuilder.loadTexts: setWlanCountry.setDescription('Country')
setWlanIndooronly = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIndooronly.setStatus('current')
if mibBuilder.loadTexts: setWlanIndooronly.setDescription('Indoor-Only-Operation')
setWlanMailaddres = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanMailaddres.setStatus('current')
if mibBuilder.loadTexts: setWlanMailaddres.setDescription('Mail-Address')
setWlanCardreinit = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 100), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanCardreinit.setStatus('current')
if mibBuilder.loadTexts: setWlanCardreinit.setDescription('Card-Reinit-Cycle')
setWlanNoisecalib = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 101), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoisecalib.setStatus('current')
if mibBuilder.loadTexts: setWlanNoisecalib.setDescription('Noise-Calibration-Cycle')
setWlanNoiseoffseTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109), )
if mibBuilder.loadTexts: setWlanNoiseoffseTable.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseTable.setDescription('Noise-Offsets')
setWlanNoiseoffseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWlanNoiseoffseBan"), (0, "LANCOM-L54g-MIB", "setWlanNoiseoffseCha"), (0, "LANCOM-L54g-MIB", "setWlanNoiseoffseInt"))
if mibBuilder.loadTexts: setWlanNoiseoffseEntry.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseEntry.setDescription('entry in table')
setWlanNoiseoffseBan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("e2-4ghz", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseBan.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseBan.setDescription('Band')
setWlanNoiseoffseCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseCha.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseCha.setDescription('Channel')
setWlanNoiseoffseInt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseInt.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseInt.setDescription('Interface')
setWlanNoiseoffseVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 109, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseoffseVal.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseoffseVal.setDescription('Value')
setWlanThermrecal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 105), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanThermrecal.setStatus('current')
if mibBuilder.loadTexts: setWlanThermrecal.setDescription('Therm.-Recal.-Cycle')
setWlanTracemac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 103), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanTracemac.setStatus('current')
if mibBuilder.loadTexts: setWlanTracemac.setDescription('Trace-MAC')
setWlanTracelevel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 110), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanTracelevel.setStatus('current')
if mibBuilder.loadTexts: setWlanTracelevel.setDescription('Trace-Level')
setWlanNoiseimmun = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111))
setWlanNoiseimmunNoi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunNoi.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseimmunNoi.setDescription('Noise-Immunity-Level')
setWlanNoiseimmunOfd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunOfd.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseimmunOfd.setDescription('OFDM-Weak-Signal-Detection')
setWlanNoiseimmunCck = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunCck.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseimmunCck.setDescription('CCK-Weak-Signal-Detection-Threshold')
setWlanNoiseimmunFir = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunFir.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseimmunFir.setDescription('Fir-Step-Level')
setWlanNoiseimmunSpu = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 111, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanNoiseimmunSpu.setStatus('current')
if mibBuilder.loadTexts: setWlanNoiseimmunSpu.setDescription('Spurious-Immunity-Level')
setWlanInterstati = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0, 2))).clone(namedValues=NamedValues(("yes", 1), ("locally-off", 0), ("gserverlly-off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanInterstati.setStatus('current')
if mibBuilder.loadTexts: setWlanInterstati.setDescription('Inter-Station-Traffic')
setWlanIdletimeou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 43), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanIdletimeou.setStatus('current')
if mibBuilder.loadTexts: setWlanIdletimeou.setDescription('Idle-Timeout')
setWlanSupervises = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSupervises.setStatus('current')
if mibBuilder.loadTexts: setWlanSupervises.setDescription('Supervise-Stations')
setWlanArphandlin = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanArphandlin.setStatus('current')
if mibBuilder.loadTexts: setWlanArphandlin.setDescription('ARP-Handling')
setWlanAllowilleg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAllowilleg.setStatus('current')
if mibBuilder.loadTexts: setWlanAllowilleg.setDescription('Allow-Illegal-Association-Without-Authentication')
setWlanAccesslistTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7), )
if mibBuilder.loadTexts: setWlanAccesslistTable.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistTable.setDescription('Access-List')
setWlanAccesslistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWlanAccesslistMac"))
if mibBuilder.loadTexts: setWlanAccesslistEntry.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistEntry.setDescription('entry in table')
setWlanAccesslistMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistMac.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistMac.setDescription('MAC-Address')
setWlanAccesslistNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistNam.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistNam.setDescription('Name')
setWlanAccesslistWpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistWpa.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistWpa.setDescription('WPA-Passphrase')
setWlanAccesslistTxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistTxl.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistTxl.setDescription('Tx-Limit')
setWlanAccesslistRxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistRxl.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistRxl.setDescription('Rx-Limit')
setWlanAccesslistVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistVla.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistVla.setDescription('VLAN-Id')
setWlanAccesslistCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccesslistCom.setStatus('current')
if mibBuilder.loadTexts: setWlanAccesslistCom.setDescription('Comment')
setWlanAccessmode = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("negative", 0), ("positive", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanAccessmode.setStatus('current')
if mibBuilder.loadTexts: setWlanAccessmode.setDescription('Access-Mode')
setWlanRadiusacce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29))
setWlanRadiusacceServeradd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceServeradd.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceServeradd.setDescription('Server-Address')
setWlanRadiusacceAuthport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceAuthport.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceAuthport.setDescription('Auth.-Port')
setWlanRadiusacceSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceSecret.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceSecret.setDescription('Secret')
setWlanRadiusacceLoopbacka = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceLoopbacka.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceLoopbacka.setDescription('Loopback-Address')
setWlanRadiusacceProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceProtocol.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceProtocol.setDescription('Protocol')
setWlanRadiusacceBackupser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupser.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceBackupser.setDescription('Backup-Server-IP-Address')
setWlanRadiusacceBackupaut = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupaut.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceBackupaut.setDescription('Backup-Auth.-Port')
setWlanRadiusacceBackupsec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackupsec.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceBackupsec.setDescription('Backup-Secret')
setWlanRadiusacceBackuploo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackuploo.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceBackuploo.setDescription('Backup-Loopback-Address')
setWlanRadiusacceBackuppro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceBackuppro.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceBackuppro.setDescription('Backup-Protocol')
setWlanRadiusacceResponsel = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceResponsel.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceResponsel.setDescription('Response-Lifetime')
setWlanRadiusaccePasswords = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("secret", 0), ("mac-address", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccePasswords.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccePasswords.setDescription('Password-Source')
setWlanRadiusacceRecheckcy = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceRecheckcy.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceRecheckcy.setDescription('Recheck-Cycle')
setWlanRadiusacceProvidese = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 29, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusacceProvidese.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusacceProvidese.setDescription('Provide-Server-Database')
setWlanRadiusacco = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45))
setWlanRadiusaccoServeradd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoServeradd.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoServeradd.setDescription('Server-Address')
setWlanRadiusaccoAccntport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoAccntport.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoAccntport.setDescription('Accnt.-Port')
setWlanRadiusaccoSecret = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoSecret.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoSecret.setDescription('Secret')
setWlanRadiusaccoLoopbacka = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoLoopbacka.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoLoopbacka.setDescription('Loopback-Address')
setWlanRadiusaccoProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoProtocol.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoProtocol.setDescription('Protocol')
setWlanRadiusaccoBackupser = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupser.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoBackupser.setDescription('Backup-Server-IP-Address')
setWlanRadiusaccoBackupacc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupacc.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoBackupacc.setDescription('Backup-Accnt.-Port')
setWlanRadiusaccoBackupsec = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackupsec.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoBackupsec.setDescription('Backup-Secret')
setWlanRadiusaccoBackuploo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackuploo.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoBackuploo.setDescription('Backup-Loopback-Address')
setWlanRadiusaccoBackuppro = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoBackuppro.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoBackuppro.setDescription('Backup-Protocol')
setWlanRadiusaccoClientbrg = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("all-traffic", 0), ("bridge-traffic-only", 1), ("client-traffic-only", 2), ("separate-accounting", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoClientbrg.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoClientbrg.setDescription('Client-Brg.-Handling')
setWlanRadiusaccoInterimup = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoInterimup.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoInterimup.setDescription('Interim-Update-Period')
setWlanRadiusaccoExcludedv = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 45, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadiusaccoExcludedv.setStatus('current')
if mibBuilder.loadTexts: setWlanRadiusaccoExcludedv.setDescription('Excluded-VLAN')
setWlanRadarpatteTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 107), )
if mibBuilder.loadTexts: setWlanRadarpatteTable.setStatus('current')
if mibBuilder.loadTexts: setWlanRadarpatteTable.setDescription('Radar-Pattern-Thresholds')
setWlanRadarpatteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 107, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWlanRadarpattePat"))
if mibBuilder.loadTexts: setWlanRadarpatteEntry.setStatus('current')
if mibBuilder.loadTexts: setWlanRadarpatteEntry.setDescription('entry in table')
setWlanRadarpattePat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 107, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarpattePat.setStatus('current')
if mibBuilder.loadTexts: setWlanRadarpattePat.setDescription('Pattern-pps')
setWlanRadarpatteThr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 107, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarpatteThr.setStatus('current')
if mibBuilder.loadTexts: setWlanRadarpatteThr.setDescription('Threshold')
setWlanRadarloadt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 108), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanRadarloadt.setStatus('current')
if mibBuilder.loadTexts: setWlanRadarloadt.setDescription('Radar-Load-Threshold')
setWlanSignalaver = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50))
setWlanSignalaverMet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("filtered", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverMet.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverMet.setDescription('Method')
setWlanSignalaverSta = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 2))
setWlanSignalaverStaFac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverStaFac.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverStaFac.setDescription('Factor')
setWlanSignalaverFil = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3))
setWlanSignalaverFilCt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverFilCt.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverFilCt.setDescription('Ct')
setWlanSignalaverFilCoeTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3, 2), )
if mibBuilder.loadTexts: setWlanSignalaverFilCoeTable.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverFilCoeTable.setDescription('Coefficients')
setWlanSignalaverFilCoeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWlanSignalaverFilCoeInd"))
if mibBuilder.loadTexts: setWlanSignalaverFilCoeEntry.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverFilCoeEntry.setDescription('entry in table')
setWlanSignalaverFilCoeInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setWlanSignalaverFilCoeInd.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverFilCoeInd.setDescription('Index')
setWlanSignalaverFilCoeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 12, 50, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanSignalaverFilCoeVal.setStatus('current')
if mibBuilder.loadTexts: setWlanSignalaverFilCoeVal.setDescription('Value')
setLcr = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15))
setLcrRou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrRou.setStatus('current')
if mibBuilder.loadTexts: setLcrRou.setDescription('Router-Usage')
setLcrTimTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4), )
if mibBuilder.loadTexts: setLcrTimTable.setStatus('current')
if mibBuilder.loadTexts: setLcrTimTable.setDescription('Time-List')
setLcrTimEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLcrTimInd"))
if mibBuilder.loadTexts: setLcrTimEntry.setStatus('current')
if mibBuilder.loadTexts: setLcrTimEntry.setDescription('entry in table')
setLcrTimInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimInd.setStatus('current')
if mibBuilder.loadTexts: setLcrTimInd.setDescription('Index')
setLcrTimPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimPre.setStatus('current')
if mibBuilder.loadTexts: setLcrTimPre.setDescription('Prefix')
setLcrTimDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 3), Bits().clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 4), ("thursday", 8), ("friday", 16), ("saturday", 32), ("sunday", 64), ("holiday", 128)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimDay.setStatus('current')
if mibBuilder.loadTexts: setLcrTimDay.setDescription('Days')
setLcrTimSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSta.setStatus('current')
if mibBuilder.loadTexts: setLcrTimSta.setDescription('Start')
setLcrTimSto = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimSto.setStatus('current')
if mibBuilder.loadTexts: setLcrTimSto.setDescription('Stop')
setLcrTimNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimNum.setStatus('current')
if mibBuilder.loadTexts: setLcrTimNum.setDescription('Number-List')
setLcrTimFal = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrTimFal.setStatus('current')
if mibBuilder.loadTexts: setLcrTimFal.setDescription('Fallback')
setLcrHolTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 5), )
if mibBuilder.loadTexts: setLcrHolTable.setStatus('current')
if mibBuilder.loadTexts: setLcrHolTable.setDescription('Holidays')
setLcrHolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setLcrHolInd"))
if mibBuilder.loadTexts: setLcrHolEntry.setStatus('current')
if mibBuilder.loadTexts: setLcrHolEntry.setDescription('entry in table')
setLcrHolInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolInd.setStatus('current')
if mibBuilder.loadTexts: setLcrHolInd.setDescription('Index')
setLcrHolDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 15, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setLcrHolDat.setStatus('current')
if mibBuilder.loadTexts: setLcrHolDat.setDescription('Date')
setTime = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14))
setTimeFet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("none", 0), ("ntp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeFet.setStatus('current')
if mibBuilder.loadTexts: setTimeFet.setDescription('Fetch-Method')
setTimeCur = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeCur.setStatus('current')
if mibBuilder.loadTexts: setTimeCur.setDescription('Current-Time')
setTimeUtc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeUtc.setStatus('current')
if mibBuilder.loadTexts: setTimeUtc.setDescription('UTC-in-Seconds')
setTimeTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244))).clone(namedValues=NamedValues(("e0", 0), ("plus-1", 1), ("plus-2", 2), ("plus-3", 3), ("plus-4", 4), ("plus-5", 5), ("plus-6", 6), ("plus-7", 7), ("plus-8", 8), ("plus-9", 9), ("plus-10", 10), ("plus-11", 11), ("plus-12", 12), ("plus-13", 13), ("plus-14", 14), ("minus-1", 255), ("minus-2", 254), ("minus-3", 253), ("minus-4", 252), ("minus-5", 251), ("minus-6", 250), ("minus-7", 249), ("minus-8", 248), ("minus-9", 247), ("minus-10", 246), ("minus-11", 245), ("minus-12", 244)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeTim.setStatus('current')
if mibBuilder.loadTexts: setTimeTim.setDescription('Timezone')
setTimeDay = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("europe-eu", 2), ("russia", 3), ("usa", 4), ("user-defined", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDay.setStatus('current')
if mibBuilder.loadTexts: setTimeDay.setDescription('Daylight-saving-time')
setTimeDstTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12), )
if mibBuilder.loadTexts: setTimeDstTable.setStatus('current')
if mibBuilder.loadTexts: setTimeDstTable.setDescription('DST-clock-changes')
setTimeDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setTimeDstEve"))
if mibBuilder.loadTexts: setTimeDstEntry.setStatus('current')
if mibBuilder.loadTexts: setTimeDstEntry.setDescription('entry in table')
setTimeDstEve = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setTimeDstEve.setStatus('current')
if mibBuilder.loadTexts: setTimeDstEve.setDescription('Event')
setTimeDstInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(252, 253, 254, 255, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e4-last", 252), ("e3-last", 253), ("e2-last", 254), ("last", 255), ("first", 1), ("second", 2), ("third", 3), ("fourth", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstInd.setStatus('current')
if mibBuilder.loadTexts: setTimeDstInd.setDescription('Index')
setTimeDstDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 0))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstDay.setStatus('current')
if mibBuilder.loadTexts: setTimeDstDay.setDescription('Day')
setTimeDstMon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstMon.setStatus('current')
if mibBuilder.loadTexts: setTimeDstMon.setDescription('Month')
setTimeDstHou = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstHou.setStatus('current')
if mibBuilder.loadTexts: setTimeDstHou.setDescription('Hour')
setTimeDstMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstMin.setStatus('current')
if mibBuilder.loadTexts: setTimeDstMin.setDescription('Minute')
setTimeDstTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("utc", 1), ("lst", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeDstTim.setStatus('current')
if mibBuilder.loadTexts: setTimeDstTim.setDescription('Time-type')
setTimeGet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 14, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setTimeGet.setStatus('current')
if mibBuilder.loadTexts: setTimeGet.setDescription('Get-Time')
setInter = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23))
setInterMod = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40))
setInterModRingcou = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModRingcou.setStatus('current')
if mibBuilder.loadTexts: setInterModRingcou.setDescription('Ring-Count')
setInterModEchooff = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEchooff.setStatus('current')
if mibBuilder.loadTexts: setInterModEchooff.setDescription('Echo-Off-Command')
setInterModResetco = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModResetco.setStatus('current')
if mibBuilder.loadTexts: setInterModResetco.setDescription('Reset-Command')
setInterModInitcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitcom.setStatus('current')
if mibBuilder.loadTexts: setInterModInitcom.setDescription('Init-Command')
setInterModRequest = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModRequest.setStatus('current')
if mibBuilder.loadTexts: setInterModRequest.setDescription('Request-ID')
setInterModInitdia = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitdia.setStatus('current')
if mibBuilder.loadTexts: setInterModInitdia.setDescription('Init.-Dial')
setInterModDialcom = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModDialcom.setStatus('current')
if mibBuilder.loadTexts: setInterModDialcom.setDescription('Dial-Command')
setInterModInitans = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModInitans.setStatus('current')
if mibBuilder.loadTexts: setInterModInitans.setDescription('Init.-Answer')
setInterModAnswerc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModAnswerc.setStatus('current')
if mibBuilder.loadTexts: setInterModAnswerc.setDescription('Answer-Command')
setInterModDisconn = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModDisconn.setStatus('current')
if mibBuilder.loadTexts: setInterModDisconn.setDescription('Disconnect-Command')
setInterModEscapes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEscapes.setStatus('current')
if mibBuilder.loadTexts: setInterModEscapes.setDescription('Escape-Sequence')
setInterModEscapep = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModEscapep.setStatus('current')
if mibBuilder.loadTexts: setInterModEscapep.setDescription('Escape-Promt-Delay-(ms)')
setInterModCycleti = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModCycleti.setStatus('current')
if mibBuilder.loadTexts: setInterModCycleti.setDescription('Cycletime-AT-Poll-(s)')
setInterModAtpollc = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 40, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterModAtpollc.setStatus('current')
if mibBuilder.loadTexts: setInterModAtpollc.setDescription('AT-Poll-Count')
setInterWla = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20))
setInterWlaOperationalTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7), )
if mibBuilder.loadTexts: setInterWlaOperationalTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalTable.setDescription('Operational')
setInterWlaOperationalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaOperationalIfc"))
if mibBuilder.loadTexts: setInterWlaOperationalEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalEntry.setDescription('entry in table')
setInterWlaOperationalIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalIfc.setDescription('Ifc')
setInterWlaOperationalOperatin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalOperatin.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalOperatin.setDescription('Operating')
setInterWlaOperationalOperatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 0))).clone(namedValues=NamedValues(("access-point", 1), ("managed-ap", 4), ("station", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalOperatio.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalOperatio.setDescription('Operation-Mode')
setInterWlaOperationalLinkledf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("normal", 0), ("client-mode-strength", 1), ("p2p-1-strength", 8), ("p2p-2-strength", 9), ("p2p-3-strength", 10), ("p2p-4-strength", 11), ("p2p-5-strength", 12), ("p2p-6-strength", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaOperationalLinkledf.setStatus('current')
if mibBuilder.loadTexts: setInterWlaOperationalLinkledf.setDescription('Link-LED-Function')
setInterWlaNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1), )
if mibBuilder.loadTexts: setInterWlaNetworkTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkTable.setDescription('Network')
setInterWlaNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaNetworkIfc"))
if mibBuilder.loadTexts: setInterWlaNetworkEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkEntry.setDescription('entry in table')
setInterWlaNetworkIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkIfc.setDescription('Ifc')
setInterWlaNetworkOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkOpe.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkOpe.setDescription('Operating')
setInterWlaNetworkNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkNet.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkNet.setDescription('Network-Name')
setInterWlaNetworkMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkMac.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkMac.setDescription('MAC-Filter')
setInterWlaNetworkRad = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkRad.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkRad.setDescription('RADIUS-Accounting')
setInterWlaNetworkClo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkClo.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkClo.setDescription('Closed-Network')
setInterWlaNetworkMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkMax.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkMax.setDescription('Max-Stations')
setInterWlaNetworkClb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaNetworkClb.setStatus('current')
if mibBuilder.loadTexts: setInterWlaNetworkClb.setDescription('Cl.-Brg.-Support')
setInterWlaRadiosettinTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8), )
if mibBuilder.loadTexts: setInterWlaRadiosettinTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinTable.setDescription('Radio-Settings')
setInterWlaRadiosettinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaRadiosettinIfc"))
if mibBuilder.loadTexts: setInterWlaRadiosettinEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinEntry.setDescription('entry in table')
setInterWlaRadiosettinIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinIfc.setDescription('Ifc')
setInterWlaRadiosettinRadioband = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("e2-4ghz", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinRadioband.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinRadioband.setDescription('Radio-Band')
setInterWlaRadiosettinSubbands = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 3, 5, 6, 7))).clone(namedValues=NamedValues(("band-1", 1), ("band-2", 2), ("band-3", 4), ("band-1-plus-2", 3), ("band-1-plus-3", 5), ("band-2-plus-3", 6), ("band-1-plus-2-plus-3", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinSubbands.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinSubbands.setDescription('Subbands')
setInterWlaRadiosettinRadiochannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinRadiochannel.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinRadiochannel.setDescription('Radio-Channel')
setInterWlaRadiosettinChannellist = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinChannellist.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinChannellist.setDescription('Channel-List')
setInterWlaRadiosettin24ghzmode = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e11bg-mixed", 0), ("e11g-only", 1), ("e11b-only", 2), ("e2m-mixed", 3), ("e108mbps", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettin24ghzmode.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettin24ghzmode.setDescription('2.4GHz-Mode')
setInterWlaRadiosettinAntennagain = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinAntennagain.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinAntennagain.setDescription('Antenna-Gain')
setInterWlaRadiosettinTxpowerreductio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinTxpowerreductio.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinTxpowerreductio.setDescription('Tx-Power-Reduction')
setInterWlaRadiosettinMaximumdistance = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinMaximumdistance.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinMaximumdistance.setDescription('Maximum-Distance')
setInterWlaRadiosettinDiversity = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("rx-only", 0), ("tx-rx", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinDiversity.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinDiversity.setDescription('Diversity')
setInterWlaRadiosettinApdensity = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 0))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3), ("minicell", 4), ("microcell", 5), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinApdensity.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinApdensity.setDescription('AP-Density')
setInterWlaRadiosettinBackgroundscan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscan.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscan.setDescription('Background-Scan')
setInterWlaRadiosettinBackgroundscanu = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("seconds", 0), ("milliseconds", 1), ("microseconds", 2), ("minutes", 3), ("hours", 4), ("days", 5), ("weeks", 6), ("fortnights", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscanu.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinBackgroundscanu.setDescription('Background-Scan-Unit')
setInterWlaRadiosettinDfsrescanhours = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 8, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRadiosettinDfsrescanhours.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRadiosettinDfsrescanhours.setDescription('DFS-Rescan-Hours')
setInterWlaTransmissioTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2), )
if mibBuilder.loadTexts: setInterWlaTransmissioTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioTable.setDescription('Transmission')
setInterWlaTransmissioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaTransmissioIfc"))
if mibBuilder.loadTexts: setInterWlaTransmissioEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioEntry.setDescription('entry in table')
setInterWlaTransmissioIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioIfc.setDescription('Ifc')
setInterWlaTransmissioPack = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioPack.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioPack.setDescription('Packet-Size')
setInterWlaTransmissioMint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMint.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioMint.setDescription('Min-Tx-Rate')
setInterWlaTransmissioMaxt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("auto", 0), ("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMaxt.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioMaxt.setDescription('Max-Tx-Rate')
setInterWlaTransmissioBasi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27))).clone(namedValues=NamedValues(("e1m", 1), ("e2m", 2), ("e5-5m", 4), ("e11m", 6), ("e6m", 8), ("e9m", 9), ("e12m", 10), ("e18m", 11), ("e24m", 12), ("e36m", 13), ("e48m", 14), ("e54m", 15), ("t-12m", 20), ("t-18m", 21), ("t-24m", 22), ("t-36m", 23), ("t-48m", 24), ("t-72m", 25), ("t-96m", 26), ("t-108m", 27)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioBasi.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioBasi.setDescription('Basic-Rate')
setInterWlaTransmissioHard = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioHard.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioHard.setDescription('Hard-Retries')
setInterWlaTransmissioSoft = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioSoft.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioSoft.setDescription('Soft-Retries')
setInterWlaTransmissio11bp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("long", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissio11bp.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissio11bp.setDescription('11b-Preamble')
setInterWlaTransmissioRtst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioRtst.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioRtst.setDescription('RTS-Threshold')
setInterWlaTransmissioMinf = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaTransmissioMinf.setStatus('current')
if mibBuilder.loadTexts: setInterWlaTransmissioMinf.setDescription('Min-Frag-Len')
setInterWlaPerformanceTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9), )
if mibBuilder.loadTexts: setInterWlaPerformanceTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceTable.setDescription('Performance')
setInterWlaPerformanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaPerformanceIfc"))
if mibBuilder.loadTexts: setInterWlaPerformanceEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceEntry.setDescription('entry in table')
setInterWlaPerformanceIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceIfc.setDescription('Ifc')
setInterWlaPerformanceQos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceQos.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceQos.setDescription('QoS')
setInterWlaPerformanceTxb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceTxb.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceTxb.setDescription('Tx-Bursting')
setInterWlaPerformanceCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaPerformanceCom.setStatus('current')
if mibBuilder.loadTexts: setInterWlaPerformanceCom.setDescription('Compression')
setInterWlaEncryptionTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3), )
if mibBuilder.loadTexts: setInterWlaEncryptionTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionTable.setDescription('Encryption')
setInterWlaEncryptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaEncryptionIfc"))
if mibBuilder.loadTexts: setInterWlaEncryptionEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionEntry.setDescription('entry in table')
setInterWlaEncryptionIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("wlan-1", 1), ("wlan-1-2", 16), ("wlan-1-3", 17), ("wlan-1-4", 18), ("wlan-1-5", 19), ("wlan-1-6", 20), ("wlan-1-7", 21), ("wlan-1-8", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionIfc.setDescription('Ifc')
setInterWlaEncryptionEncr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionEncr.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionEncr.setDescription('Encryption')
setInterWlaEncryptionDefa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionDefa.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionDefa.setDescription('Default-Key')
setInterWlaEncryptionMeth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(32, 16, 13, 5, 33, 36, 35, 34))).clone(namedValues=NamedValues(("e802-11i-wpa-psk", 32), ("wep-128-bits", 16), ("wep-104-bits", 13), ("wep-40-bits", 5), ("e802-11i-wpa-802-1x", 33), ("wep-128-bits-802-1x", 36), ("wep-104-bits-802-1x", 35), ("wep-40-bits-802-1x", 34)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionMeth.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionMeth.setDescription('Method')
setInterWlaEncryptionKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionKey.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionKey.setDescription('Key')
setInterWlaEncryptionWpav = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4, 6))).clone(namedValues=NamedValues(("wpa1", 2), ("wpa2", 4), ("wpa1-2", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpav.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionWpav.setDescription('WPA-Version')
setInterWlaEncryptionWpa1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2), ("tkip-aes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpa1.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionWpa1.setDescription('WPA1-Session-Keytypes')
setInterWlaEncryptionWpa2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tkip", 1), ("aes", 2), ("tkip-aes", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpa2.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionWpa2.setDescription('WPA2-Session-Keytypes')
setInterWlaEncryptionWpar = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionWpar.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionWpar.setDescription('WPA-Rekeying-Cycle')
setInterWlaEncryptionClie = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3328, 5383, 5384, 5567, 5402, 5380, 6426, 6406))).clone(namedValues=NamedValues(("tls", 3328), ("ttls-pap", 5383), ("ttls-chap", 5384), ("ttls-mschap", 5567), ("ttls-mschapv2", 5402), ("ttls-md5", 5380), ("peap-mschapv2", 6426), ("peap-gtc", 6406)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionClie.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionClie.setDescription('Client-EAP-Method')
setInterWlaEncryptionAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open-system", 0), ("shared-key", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaEncryptionAuth.setStatus('current')
if mibBuilder.loadTexts: setInterWlaEncryptionAuth.setDescription('Authentication')
setInterWlaGroupencrypTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4), )
if mibBuilder.loadTexts: setInterWlaGroupencrypTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypTable.setDescription('Group-Encryption-Keys')
setInterWlaGroupencrypEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaGroupencrypIfc"))
if mibBuilder.loadTexts: setInterWlaGroupencrypEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypEntry.setDescription('entry in table')
setInterWlaGroupencrypIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypIfc.setDescription('Ifc')
setInterWlaGroupencrypKeytype2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype2.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype2.setDescription('Keytype-2')
setInterWlaGroupencrypKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey2.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKey2.setDescription('Key-2')
setInterWlaGroupencrypKeytype3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype3.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype3.setDescription('Keytype-3')
setInterWlaGroupencrypKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey3.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKey3.setDescription('Key-3')
setInterWlaGroupencrypKeytype4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 13, 16))).clone(namedValues=NamedValues(("wep-40-bits", 5), ("wep-104-bits", 13), ("wep-128-bits", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype4.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKeytype4.setDescription('Keytype-4')
setInterWlaGroupencrypKey4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaGroupencrypKey4.setStatus('current')
if mibBuilder.loadTexts: setInterWlaGroupencrypKey4.setDescription('Key-4')
setInterWlaInterpointsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5), )
if mibBuilder.loadTexts: setInterWlaInterpointsTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsTable.setDescription('Interpoint-Settings')
setInterWlaInterpointsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaInterpointsIfc"))
if mibBuilder.loadTexts: setInterWlaInterpointsEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsEntry.setDescription('entry in table')
setInterWlaInterpointsIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsIfc.setDescription('Ifc')
setInterWlaInterpointsEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("no", 0), ("yes", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsEna.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsEna.setDescription('Enable')
setInterWlaInterpointsLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsLoc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsLoc.setDescription('Local-Name')
setInterWlaInterpointsIso = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsIso.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsIso.setDescription('Isolated-Mode')
setInterWlaInterpointsCha = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("master", 0), ("slave", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsCha.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsCha.setDescription('Channel-Selection-Scheme')
setInterWlaInterpointsKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("default", 0), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsKey.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsKey.setDescription('Key-Handshake-Role')
setInterWlaInterpointsLin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointsLin.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointsLin.setDescription('Link-Loss-Timeout')
setInterWlaInterpointpTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12), )
if mibBuilder.loadTexts: setInterWlaInterpointpTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpTable.setDescription('Interpoint-Peers')
setInterWlaInterpointpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaInterpointpIfc"))
if mibBuilder.loadTexts: setInterWlaInterpointpEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpEntry.setDescription('entry in table')
setInterWlaInterpointpIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("p2p-1-1", 1), ("p2p-1-2", 2), ("p2p-1-3", 3), ("p2p-1-4", 4), ("p2p-1-5", 5), ("p2p-1-6", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpIfc.setDescription('Ifc')
setInterWlaInterpointpOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpOpe.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpOpe.setDescription('Operating')
setInterWlaInterpointpRec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("mac-address", 0), ("name", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpRec.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpRec.setDescription('Recognize-By')
setInterWlaInterpointpMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1, 3), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpMac.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpMac.setDescription('MAC-Address')
setInterWlaInterpointpPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaInterpointpPee.setStatus('current')
if mibBuilder.loadTexts: setInterWlaInterpointpPee.setDescription('Peer-Name')
setInterWlaBeaconingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10), )
if mibBuilder.loadTexts: setInterWlaBeaconingTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingTable.setDescription('Beaconing')
setInterWlaBeaconingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaBeaconingIfc"))
if mibBuilder.loadTexts: setInterWlaBeaconingEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingEntry.setDescription('entry in table')
setInterWlaBeaconingIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingIfc.setDescription('Ifc')
setInterWlaBeaconingBeaconp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingBeaconp.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingBeaconp.setDescription('Beacon-Period')
setInterWlaBeaconingDtimper = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingDtimper.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingDtimper.setDescription('DTIM-Period')
setInterWlaBeaconingBeacono = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("cyclic", 0), ("staggered", 1), ("simple-burst", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaBeaconingBeacono.setStatus('current')
if mibBuilder.loadTexts: setInterWlaBeaconingBeacono.setDescription('Beacon-Order')
setInterWlaClientmodesTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6), )
if mibBuilder.loadTexts: setInterWlaClientmodesTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesTable.setDescription('Client-Modes')
setInterWlaClientmodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaClientmodesIfc"))
if mibBuilder.loadTexts: setInterWlaClientmodesEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesEntry.setDescription('entry in table')
setInterWlaClientmodesIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesIfc.setDescription('Ifc')
setInterWlaClientmodesCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesCon.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesCon.setDescription('Connection-Keepalive')
setInterWlaClientmodesNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4))).clone(namedValues=NamedValues(("infrastructure", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesNet.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesNet.setDescription('Network-Types')
setInterWlaClientmodesSca = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("e2-4ghz", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesSca.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesSca.setDescription('Scan-Bands')
setInterWlaClientmodesPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesPre.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesPre.setDescription('Preferred-BSS')
setInterWlaClientmodesAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesAdd.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesAdd.setDescription('Address-Adaption')
setInterWlaClientmodesClb = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesClb.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesClb.setDescription('Cl.-Brg.-Support')
setInterWlaClientmodesTxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesTxl.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesTxl.setDescription('Tx-Limit')
setInterWlaClientmodesRxl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaClientmodesRxl.setStatus('current')
if mibBuilder.loadTexts: setInterWlaClientmodesRxl.setDescription('Rx-Limit')
setInterWlaRoamingTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11), )
if mibBuilder.loadTexts: setInterWlaRoamingTable.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingTable.setDescription('Roaming')
setInterWlaRoamingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterWlaRoamingIfc"))
if mibBuilder.loadTexts: setInterWlaRoamingEntry.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingEntry.setDescription('entry in table')
setInterWlaRoamingIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("wlan-1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingIfc.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingIfc.setDescription('Ifc')
setInterWlaRoamingSoftroaming = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingSoftroaming.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingSoftroaming.setDescription('Soft-Roaming')
setInterWlaRoamingBeaconmisst = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingBeaconmisst.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingBeaconmisst.setDescription('Beacon-Miss-Threshold')
setInterWlaRoamingRoamingthre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingRoamingthre.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingRoamingthre.setDescription('Roaming-Threshold')
setInterWlaRoamingNoroamingth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingNoroamingth.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingNoroamingth.setDescription('No-Roaming-Threshold')
setInterWlaRoamingForceroamin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingForceroamin.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingForceroamin.setDescription('Force-Roaming-Threshold')
setInterWlaRoamingConnectthre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingConnectthre.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingConnectthre.setDescription('Connect-Threshold')
setInterWlaRoamingConnecthold = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingConnecthold.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingConnecthold.setDescription('Connect-Hold-Threshold')
setInterWlaRoamingMinconnects = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingMinconnects.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingMinconnects.setDescription('Min-Connect-Signal-Level')
setInterWlaRoamingMinconnecth = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 20, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterWlaRoamingMinconnecth.setStatus('current')
if mibBuilder.loadTexts: setInterWlaRoamingMinconnecth.setDescription('Min-Connect-Hold-Signal-Level')
setInterLanTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 21), )
if mibBuilder.loadTexts: setInterLanTable.setStatus('current')
if mibBuilder.loadTexts: setInterLanTable.setDescription('LAN-Interfaces')
setInterLanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 21, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterLanIfc"))
if mibBuilder.loadTexts: setInterLanEntry.setStatus('current')
if mibBuilder.loadTexts: setInterLanEntry.setDescription('entry in table')
setInterLanIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-1", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterLanIfc.setStatus('current')
if mibBuilder.loadTexts: setInterLanIfc.setDescription('Ifc')
setInterLanCon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 255))).clone(namedValues=NamedValues(("auto", 0), ("e10b-t", 1), ("fd10b-tx", 2), ("e100b-tx", 3), ("fd100b-tx", 4), ("power-down", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterLanCon.setStatus('current')
if mibBuilder.loadTexts: setInterLanCon.setDescription('Connector')
setInterLanMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("mdi", 1), ("mdix", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterLanMdi.setStatus('current')
if mibBuilder.loadTexts: setInterLanMdi.setDescription('MDI-Mode')
setInterDslTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4), )
if mibBuilder.loadTexts: setInterDslTable.setStatus('current')
if mibBuilder.loadTexts: setInterDslTable.setDescription('DSLoL-Interface')
setInterDslEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterDslIfc"))
if mibBuilder.loadTexts: setInterDslEntry.setStatus('current')
if mibBuilder.loadTexts: setInterDslEntry.setDescription('entry in table')
setInterDslIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterDslIfc.setStatus('current')
if mibBuilder.loadTexts: setInterDslIfc.setDescription('Ifc')
setInterDslOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("no", 0), ("yes", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslOpe.setStatus('current')
if mibBuilder.loadTexts: setInterDslOpe.setDescription('Operating')
setInterDslMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("auto", 0), ("exclusive", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslMod.setStatus('current')
if mibBuilder.loadTexts: setInterDslMod.setDescription('Mode')
setInterDslUps = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslUps.setStatus('current')
if mibBuilder.loadTexts: setInterDslUps.setDescription('Upstream-Rate')
setInterDslExt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslExt.setStatus('current')
if mibBuilder.loadTexts: setInterDslExt.setDescription('Ext.-Overhead')
setInterDslDow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslDow.setStatus('current')
if mibBuilder.loadTexts: setInterDslDow.setDescription('Downstream-Rate')
setInterDslTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterDslTyp.setStatus('current')
if mibBuilder.loadTexts: setInterDslTyp.setDescription('Type-of-interface')
setInterDslLan = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 4, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 512, 768, 769, 770, 771, 772, 773, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 65535))).clone(namedValues=NamedValues(("lan-1", 256), ("wlan-1", 512), ("p2p-1-1", 768), ("p2p-1-2", 769), ("p2p-1-3", 770), ("p2p-1-4", 771), ("p2p-1-5", 772), ("p2p-1-6", 773), ("wlan-1-2", 1024), ("wlan-1-3", 1025), ("wlan-1-4", 1026), ("wlan-1-5", 1027), ("wlan-1-6", 1028), ("wlan-1-7", 1029), ("wlan-1-8", 1030), ("brg-1", 1536), ("brg-2", 1537), ("brg-3", 1538), ("brg-4", 1539), ("brg-5", 1540), ("brg-6", 1541), ("brg-7", 1542), ("brg-8", 1543), ("any", 65535)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterDslLan.setStatus('current')
if mibBuilder.loadTexts: setInterDslLan.setDescription('LAN-Ifc')
setInterUmtTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7), )
if mibBuilder.loadTexts: setInterUmtTable.setStatus('current')
if mibBuilder.loadTexts: setInterUmtTable.setDescription('UMTS-Modem')
setInterUmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setInterUmtIfc"))
if mibBuilder.loadTexts: setInterUmtEntry.setStatus('current')
if mibBuilder.loadTexts: setInterUmtEntry.setDescription('entry in table')
setInterUmtIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dsl-1", 1), ("ext", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterUmtIfc.setStatus('current')
if mibBuilder.loadTexts: setInterUmtIfc.setDescription('Ifc')
setInterUmtOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("modem", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterUmtOpe.setStatus('current')
if mibBuilder.loadTexts: setInterUmtOpe.setDescription('Operating')
setInterUmtTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setInterUmtTyp.setStatus('current')
if mibBuilder.loadTexts: setInterUmtTyp.setDescription('Type-of-interface')
setInterUmtDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 23, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("e19200", 19200), ("e38400", 38400), ("e57600", 57600), ("e115200", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setInterUmtDat.setStatus('current')
if mibBuilder.loadTexts: setInterUmtDat.setDescription('Data-Rate')
setRadiu = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25))
setRadiuAutht = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuAutht.setStatus('current')
if mibBuilder.loadTexts: setRadiuAutht.setDescription('Auth.-Timeout')
setRadiuAuthr = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuAuthr.setStatus('current')
if mibBuilder.loadTexts: setRadiuAuthr.setDescription('Auth.-Retry')
setRadiuBacku = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("block", 0), ("cyclic", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuBacku.setStatus('current')
if mibBuilder.loadTexts: setRadiuBacku.setDescription('Backup-Query-Strategy')
setRadiuServe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10))
setRadiuServeAuthentific = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAuthentific.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeAuthentific.setDescription('Authentification-Port')
setRadiuServeAccountingp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAccountingp.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeAccountingp.setDescription('Accounting-Port')
setRadiuServeRadsecport = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeRadsecport.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeRadsecport.setDescription('RADSEC-Port')
setRadiuServeClientsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2), )
if mibBuilder.loadTexts: setRadiuServeClientsTable.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsTable.setDescription('Clients')
setRadiuServeClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setRadiuServeClientsIpnetw"), (0, "LANCOM-L54g-MIB", "setRadiuServeClientsIpnetm"))
if mibBuilder.loadTexts: setRadiuServeClientsEntry.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsEntry.setDescription('entry in table')
setRadiuServeClientsIpnetw = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsIpnetw.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsIpnetw.setDescription('IP-Network')
setRadiuServeClientsIpnetm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsIpnetm.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsIpnetm.setDescription('IP-Netmask')
setRadiuServeClientsProtoc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 255))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1), ("all", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsProtoc.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsProtoc.setDescription('Protocols')
setRadiuServeClientsSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeClientsSecret.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeClientsSecret.setDescription('Secret')
setRadiuServeUsersTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 7), )
if mibBuilder.loadTexts: setRadiuServeUsersTable.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeUsersTable.setDescription('Users')
setRadiuServeUsersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setRadiuServeUsersUse"))
if mibBuilder.loadTexts: setRadiuServeUsersEntry.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeUsersEntry.setDescription('entry in table')
setRadiuServeUsersUse = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersUse.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeUsersUse.setDescription('User-Name')
setRadiuServeUsersPas = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersPas.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeUsersPas.setDescription('Password')
setRadiuServeUsersLim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 7, 1, 3), Bits().clone(namedValues=NamedValues(("pap", 1), ("chap", 2), ("mschap", 4), ("mschapv2", 8), ("eap", 16), ("all", 32768)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeUsersLim.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeUsersLim.setDescription('Limit-Auth-Methods')
setRadiuServeForwardservTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3), )
if mibBuilder.loadTexts: setRadiuServeForwardservTable.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservTable.setDescription('Forward-Servers')
setRadiuServeForwardservEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setRadiuServeForwardservRea"))
if mibBuilder.loadTexts: setRadiuServeForwardservEntry.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservEntry.setDescription('entry in table')
setRadiuServeForwardservRea = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservRea.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservRea.setDescription('Realm')
setRadiuServeForwardservIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservIpa.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservIpa.setDescription('IP-Address')
setRadiuServeForwardservPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservPor.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservPor.setDescription('Port')
setRadiuServeForwardservSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservSec.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservSec.setDescription('Secret')
setRadiuServeForwardservLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservLoo.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservLoo.setDescription('Loopback-Addr.')
setRadiuServeForwardservPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservPro.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservPro.setDescription('Protocol')
setRadiuServeForwardservBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeForwardservBac.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeForwardservBac.setDescription('Backup')
setRadiuServeDefaultreal = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeDefaultreal.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeDefaultreal.setDescription('Default-Realm')
setRadiuServeEmptyrealm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEmptyrealm.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEmptyrealm.setDescription('Empty-Realm')
setRadiuServeAccountingi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeAccountingi.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeAccountingi.setDescription('Accounting-Interim-Interval')
setRadiuServeEap = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10))
setRadiuServeEapTun = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTun.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapTun.setDescription('Tunnel-Server')
setRadiuServeEapTls = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTls.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapTls.setDescription('TLS-Check-Username')
setRadiuServeEapTtl = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 18, 23, 26))).clone(namedValues=NamedValues(("none", 0), ("md5", 4), ("otp", 5), ("gtc", 6), ("sim", 18), ("aka", 23), ("mschapv2", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapTtl.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapTtl.setDescription('TTLS-Default-Tunnel-Method')
setRadiuServeEapPea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 5, 6, 18, 23, 26))).clone(namedValues=NamedValues(("none", 0), ("md5", 4), ("otp", 5), ("gtc", 6), ("sim", 18), ("aka", 23), ("mschapv2", 26)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapPea.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapPea.setDescription('PEAP-Default-Tunnel-Method')
setRadiuServeEapRea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapRea.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapRea.setDescription('Reauth-Period')
setRadiuServeEapRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 25, 10, 10, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setRadiuServeEapRet.setStatus('current')
if mibBuilder.loadTexts: setRadiuServeEapRet.setDescription('Retransmit-Timeout')
setNtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26))
setNtpSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpSer.setStatus('current')
if mibBuilder.loadTexts: setNtpSer.setDescription('Server-Operating')
setNtpBcm = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBcm.setStatus('current')
if mibBuilder.loadTexts: setNtpBcm.setDescription('BC-Mode')
setNtpBci = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpBci.setStatus('current')
if mibBuilder.loadTexts: setNtpBci.setDescription('BC-Interval')
setNtpRqi = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqi.setStatus('current')
if mibBuilder.loadTexts: setNtpRqi.setDescription('RQ-Interval')
setNtpRqt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqt.setStatus('current')
if mibBuilder.loadTexts: setNtpRqt.setDescription('RQ-Tries')
setNtpRqaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 11), )
if mibBuilder.loadTexts: setNtpRqaTable.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaTable.setDescription('RQ-Address')
setNtpRqaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 11, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setNtpRqaRqa"))
if mibBuilder.loadTexts: setNtpRqaEntry.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaEntry.setDescription('entry in table')
setNtpRqaRqa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaRqa.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaRqa.setDescription('RQ-Address')
setNtpRqaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setNtpRqaLoo.setStatus('current')
if mibBuilder.loadTexts: setNtpRqaLoo.setDescription('Loopback-Addr.')
setNtpC0 = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 26, 8), IpAddress())
if mibBuilder.loadTexts: setNtpC0.setStatus('current')
if mibBuilder.loadTexts: setNtpC0.setDescription('C0')
setMail = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27))
setMailSmtps = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtps.setStatus('current')
if mibBuilder.loadTexts: setMailSmtps.setDescription('SMTP-Server')
setMailSmtpp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSmtpp.setStatus('current')
if mibBuilder.loadTexts: setMailSmtpp.setDescription('SMTP-Port')
setMailPop3s = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3s.setStatus('current')
if mibBuilder.loadTexts: setMailPop3s.setDescription('POP3-Server')
setMailPop3p = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPop3p.setStatus('current')
if mibBuilder.loadTexts: setMailPop3p.setDescription('POP3-Port')
setMailLoopb = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailLoopb.setStatus('current')
if mibBuilder.loadTexts: setMailLoopb.setDescription('Loopback-Addr.')
setMailUsern = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailUsern.setStatus('current')
if mibBuilder.loadTexts: setMailUsern.setDescription('User-Name')
setMailPassw = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailPassw.setStatus('current')
if mibBuilder.loadTexts: setMailPassw.setDescription('Password')
setMailEmail = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailEmail.setStatus('current')
if mibBuilder.loadTexts: setMailEmail.setDescription('E-Mail-Sender')
setMailSenda = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailSenda.setStatus('current')
if mibBuilder.loadTexts: setMailSenda.setDescription('Send-Again-(min.)')
setMailHoldt = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailHoldt.setStatus('current')
if mibBuilder.loadTexts: setMailHoldt.setDescription('Hold-Time-(hrs.)')
setMailBuffe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 27, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setMailBuffe.setStatus('current')
if mibBuilder.loadTexts: setMailBuffe.setDescription('Buffers')
setPppoe = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31))
setPppoeOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeOpe.setStatus('current')
if mibBuilder.loadTexts: setPppoeOpe.setDescription('Operating')
setPppoeNamTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 2), )
if mibBuilder.loadTexts: setPppoeNamTable.setStatus('current')
if mibBuilder.loadTexts: setPppoeNamTable.setDescription('Name-List')
setPppoeNamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setPppoeNamPee"))
if mibBuilder.loadTexts: setPppoeNamEntry.setStatus('current')
if mibBuilder.loadTexts: setPppoeNamEntry.setDescription('entry in table')
setPppoeNamPee = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamPee.setStatus('current')
if mibBuilder.loadTexts: setPppoeNamPee.setDescription('Peer')
setPppoeNamSht = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamSht.setStatus('current')
if mibBuilder.loadTexts: setPppoeNamSht.setDescription('SH-Time')
setPppoeNamMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeNamMac.setStatus('current')
if mibBuilder.loadTexts: setPppoeNamMac.setDescription('MAC-Address')
setPppoeSer = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeSer.setStatus('current')
if mibBuilder.loadTexts: setPppoeSer.setDescription('Service')
setPppoeSes = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoeSes.setStatus('current')
if mibBuilder.loadTexts: setPppoeSes.setDescription('Session-Limit')
setPppoePorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 5), )
if mibBuilder.loadTexts: setPppoePorTable.setStatus('current')
if mibBuilder.loadTexts: setPppoePorTable.setDescription('Ports')
setPppoePorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 5, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setPppoePorPor"))
if mibBuilder.loadTexts: setPppoePorEntry.setStatus('current')
if mibBuilder.loadTexts: setPppoePorEntry.setDescription('entry in table')
setPppoePorPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPppoePorPor.setStatus('current')
if mibBuilder.loadTexts: setPppoePorPor.setDescription('Port')
setPppoePorEna = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 31, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPppoePorEna.setStatus('current')
if mibBuilder.loadTexts: setPppoePorEna.setDescription('Enable-PPPoE')
setVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32))
setVlanOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanOpe.setStatus('current')
if mibBuilder.loadTexts: setVlanOpe.setDescription('Operating')
setVlanNetTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 1), )
if mibBuilder.loadTexts: setVlanNetTable.setStatus('current')
if mibBuilder.loadTexts: setVlanNetTable.setDescription('Networks')
setVlanNetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setVlanNetNam"))
if mibBuilder.loadTexts: setVlanNetEntry.setStatus('current')
if mibBuilder.loadTexts: setVlanNetEntry.setDescription('entry in table')
setVlanNetNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetNam.setStatus('current')
if mibBuilder.loadTexts: setVlanNetNam.setDescription('Name')
setVlanNetVla = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetVla.setStatus('current')
if mibBuilder.loadTexts: setVlanNetVla.setDescription('VLAN-ID')
setVlanNetPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanNetPor.setStatus('current')
if mibBuilder.loadTexts: setVlanNetPor.setDescription('Ports')
setVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanTag.setStatus('current')
if mibBuilder.loadTexts: setVlanTag.setDescription('Tag-Value')
setVlanPorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2), )
if mibBuilder.loadTexts: setVlanPorTable.setStatus('current')
if mibBuilder.loadTexts: setVlanPorTable.setDescription('Port-Table')
setVlanPorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setVlanPorPort"))
if mibBuilder.loadTexts: setVlanPorEntry.setStatus('current')
if mibBuilder.loadTexts: setVlanPorEntry.setDescription('entry in table')
setVlanPorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setVlanPorPort.setStatus('current')
if mibBuilder.loadTexts: setVlanPorPort.setDescription('Port')
setVlanPorTaggi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ingress-mixed", 0), ("never", 1), ("mixed", 2), ("always", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorTaggi.setStatus('current')
if mibBuilder.loadTexts: setVlanPorTaggi.setDescription('Tagging-Mode')
setVlanPorAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorAllow.setStatus('current')
if mibBuilder.loadTexts: setVlanPorAllow.setDescription('Allow-All-VLANs')
setVlanPorPortv = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 32, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setVlanPorPortv.setStatus('current')
if mibBuilder.loadTexts: setVlanPorPortv.setDescription('Port-VLAN-Id')
setIeee8 = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30))
setIeee8PorTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4), )
if mibBuilder.loadTexts: setIeee8PorTable.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorTable.setDescription('Ports')
setIeee8PorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIeee8PorPort"))
if mibBuilder.loadTexts: setIeee8PorEntry.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorEntry.setDescription('entry in table')
setIeee8PorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setIeee8PorPort.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorPort.setDescription('Port')
setIeee8PorPortcon = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("force-unauth", 0), ("force-auth", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorPortcon.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorPortcon.setDescription('Port-Control')
setIeee8PorReauthm = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthm.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorReauthm.setDescription('Re-Auth-Max')
setIeee8PorMaxreq = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorMaxreq.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorMaxreq.setDescription('Max-Req')
setIeee8PorTxperio = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorTxperio.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorTxperio.setDescription('Tx-Period')
setIeee8PorSupptim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorSupptim.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorSupptim.setDescription('Supp-Timeout')
setIeee8PorServert = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorServert.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorServert.setDescription('Server-Timeout')
setIeee8PorQuietpe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorQuietpe.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorQuietpe.setDescription('Quiet-Period')
setIeee8PorReauthe = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthe.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorReauthe.setDescription('Re-Authentication')
setIeee8PorReauthi = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorReauthi.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorReauthi.setDescription('Re-Auth-Interval')
setIeee8PorKeytran = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorKeytran.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorKeytran.setDescription('Key-Transmission')
setIeee8PorKeytxin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8PorKeytxin.setStatus('current')
if mibBuilder.loadTexts: setIeee8PorKeytxin.setDescription('Key-Tx-Interval')
setIeee8RadTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3), )
if mibBuilder.loadTexts: setIeee8RadTable.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadTable.setDescription('RADIUS-Server')
setIeee8RadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setIeee8RadNam"))
if mibBuilder.loadTexts: setIeee8RadEntry.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadEntry.setDescription('entry in table')
setIeee8RadNam = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadNam.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadNam.setDescription('Name')
setIeee8RadIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadIpa.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadIpa.setDescription('IP-Address')
setIeee8RadPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadPor.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadPor.setDescription('Port')
setIeee8RadSec = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadSec.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadSec.setDescription('Secret')
setIeee8RadLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadLoo.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadLoo.setDescription('Loopback-Addr.')
setIeee8RadPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("radius", 0), ("radsec", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadPro.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadPro.setDescription('Protocol')
setIeee8RadBac = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 30, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setIeee8RadBac.setStatus('current')
if mibBuilder.loadTexts: setIeee8RadBac.setDescription('Backup')
setEchos = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35))
setEchosOpe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosOpe.setStatus('current')
if mibBuilder.loadTexts: setEchosOpe.setDescription('Operating')
setEchosAccTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2), )
if mibBuilder.loadTexts: setEchosAccTable.setStatus('current')
if mibBuilder.loadTexts: setEchosAccTable.setDescription('Access-Table')
setEchosAccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setEchosAccIpa"), (0, "LANCOM-L54g-MIB", "setEchosAccNet"))
if mibBuilder.loadTexts: setEchosAccEntry.setStatus('current')
if mibBuilder.loadTexts: setEchosAccEntry.setDescription('entry in table')
setEchosAccIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccIpa.setStatus('current')
if mibBuilder.loadTexts: setEchosAccIpa.setDescription('IP-Address')
setEchosAccNet = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccNet.setStatus('current')
if mibBuilder.loadTexts: setEchosAccNet.setDescription('Netmask')
setEchosAccPro = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("tcp", 1), ("udp", 2), ("tcp-plus-udp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccPro.setStatus('current')
if mibBuilder.loadTexts: setEchosAccPro.setDescription('Protokoll')
setEchosAccAkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccAkt.setStatus('current')
if mibBuilder.loadTexts: setEchosAccAkt.setDescription('Aktive')
setEchosAccCom = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosAccCom.setStatus('current')
if mibBuilder.loadTexts: setEchosAccCom.setDescription('Comment')
setEchosTcp = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 35, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setEchosTcp.setStatus('current')
if mibBuilder.loadTexts: setEchosTcp.setDescription('TCP-Timeout')
setCerti = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39))
setCertiSce = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1))
setCertiSceSce = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceSce.setStatus('current')
if mibBuilder.loadTexts: setCertiSceSce.setDescription('SCEP-Operating')
setCertiSceRet = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceRet.setStatus('current')
if mibBuilder.loadTexts: setCertiSceRet.setDescription('Retry-After-Error-Interval')
setCertiSceChe = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceChe.setStatus('current')
if mibBuilder.loadTexts: setCertiSceChe.setDescription('Check-Pending-Requests-Interval')
setCertiSceDev = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceDev.setStatus('current')
if mibBuilder.loadTexts: setCertiSceDev.setDescription('Device-Certificate-Update-Before')
setCertiSceCac = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCac.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCac.setDescription('CA-Certificate-Update-Before')
setCertiSceCasTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6), )
if mibBuilder.loadTexts: setCertiSceCasTable.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasTable.setDescription('CAs')
setCertiSceCasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setCertiSceCasName"))
if mibBuilder.loadTexts: setCertiSceCasEntry.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasEntry.setDescription('entry in table')
setCertiSceCasName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasName.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasName.setDescription('Name')
setCertiSceCasUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasUrl.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasUrl.setDescription('URL')
setCertiSceCasDn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasDn.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasDn.setDescription('DN')
setCertiSceCasEncalg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("des", 0), ("e3des", 1), ("blowfish", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasEncalg.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasEncalg.setDescription('Enc-Alg')
setCertiSceCasIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasIdentifier.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasIdentifier.setDescription('Identifier')
setCertiSceCasRaautoapprove = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasRaautoapprove.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasRaautoapprove.setDescription('RA-Autoapprove')
setCertiSceCasCasignaturealg = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("md5", 0), ("sha1", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCasignaturealg.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasCasignaturealg.setDescription('CA-Signature-Algorithm')
setCertiSceCasCafingerprinta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("sha1", 1), ("md5", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCafingerprinta.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasCafingerprinta.setDescription('CA-Fingerprint-Algorithm')
setCertiSceCasCafingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasCafingerprint.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasCafingerprint.setDescription('CA-Fingerprint')
setCertiSceCasApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 3))).clone(namedValues=NamedValues(("general", 2), ("wlan-controller", 1), ("eap-tls", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasApplication.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasApplication.setDescription('Application')
setCertiSceCasLoopbackaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 6, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCasLoopbackaddr.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCasLoopbackaddr.setDescription('Loopback-Addr.')
setCertiSceCerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7), )
if mibBuilder.loadTexts: setCertiSceCerTable.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerTable.setDescription('Certificates')
setCertiSceCerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setCertiSceCerName"))
if mibBuilder.loadTexts: setCertiSceCerEntry.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerEntry.setDescription('entry in table')
setCertiSceCerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerName.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerName.setDescription('Name')
setCertiSceCerCadn = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerCadn.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerCadn.setDescription('CADN')
setCertiSceCerSubject = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerSubject.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerSubject.setDescription('Subject')
setCertiSceCerChalleng = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerChalleng.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerChalleng.setDescription('ChallengePwd')
setCertiSceCerSubjecta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerSubjecta.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerSubjecta.setDescription('SubjectAltName')
setCertiSceCerKeyusage = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerKeyusage.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerKeyusage.setDescription('KeyUsage')
setCertiSceCerExtended = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 251))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerExtended.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerExtended.setDescription('Extended-KeyUsage')
setCertiSceCerDevicece = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerDevicece.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerDevicece.setDescription('Device-Certificate-Keylength')
setCertiSceCerApplicat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("wlan-controller", 1), ("eap-tls", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCerApplicat.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCerApplicat.setDescription('Application')
setCertiSceRei = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceRei.setStatus('current')
if mibBuilder.loadTexts: setCertiSceRei.setDescription('Reinit')
setCertiSceUpd = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceUpd.setStatus('current')
if mibBuilder.loadTexts: setCertiSceUpd.setDescription('Update')
setCertiSceCle = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 39, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setCertiSceCle.setStatus('current')
if mibBuilder.loadTexts: setCertiSceCle.setDescription('Clear-SCEP-Filesystem')
setPerfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36))
setPerfoRttmonaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2), )
if mibBuilder.loadTexts: setPerfoRttmonaTable.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaTable.setDescription('RttMonAdmin')
setPerfoRttmonaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setPerfoRttmonaInd"))
if mibBuilder.loadTexts: setPerfoRttmonaEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaEntry.setDescription('entry in table')
setPerfoRttmonaInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaInd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaInd.setDescription('Index')
setPerfoRttmonaTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(9))).clone(namedValues=NamedValues(("jitter", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaTyp.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaTyp.setDescription('Type')
setPerfoRttmonaFre = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaFre.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaFre.setDescription('Frequency')
setPerfoRttmonaTim = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaTim.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaTim.setDescription('Timeout')
setPerfoRttmonaSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("not-in-service", 2), ("not-ready", 3), ("create", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonaSta.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonaSta.setDescription('Status')
setPerfoRttmoneTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3), )
if mibBuilder.loadTexts: setPerfoRttmoneTable.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneTable.setDescription('RttMonEchoAdmin')
setPerfoRttmoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setPerfoRttmoneIndex"))
if mibBuilder.loadTexts: setPerfoRttmoneEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneEntry.setDescription('entry in table')
setPerfoRttmoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmoneIndex.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneIndex.setDescription('Index')
setPerfoRttmoneProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("echo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneProtocol.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneProtocol.setDescription('Protocol')
setPerfoRttmoneDestinationa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneDestinationa.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneDestinationa.setDescription('Destination-Address')
setPerfoRttmonePacketsize = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonePacketsize.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonePacketsize.setDescription('Packet-Size')
setPerfoRttmoneDestinationp = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneDestinationp.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneDestinationp.setDescription('Destination-Port')
setPerfoRttmoneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmoneInterval.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmoneInterval.setDescription('Interval')
setPerfoRttmonePacketcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 3, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setPerfoRttmonePacketcount.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonePacketcount.setDescription('Packet-Count')
setPerfoRttmonsTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4), )
if mibBuilder.loadTexts: setPerfoRttmonsTable.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsTable.setDescription('RttMonStatistics')
setPerfoRttmonsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setPerfoRttmonsIndex"))
if mibBuilder.loadTexts: setPerfoRttmonsEntry.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsEntry.setDescription('entry in table')
setPerfoRttmonsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 255), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsIndex.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsIndex.setDescription('Index')
setPerfoRttmonsCompletions = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsCompletions.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsCompletions.setDescription('Completions')
setPerfoRttmonsRttcount = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttcount.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsRttcount.setDescription('RTT-Count')
setPerfoRttmonsRttsum = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttsum.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsRttsum.setDescription('RTT-Sum')
setPerfoRttmonsRttmin = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttmin.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsRttmin.setDescription('RTT-Min')
setPerfoRttmonsRttmax = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsRttmax.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsRttmax.setDescription('RTT-Max')
setPerfoRttmonsJitterminpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJitterminpossd.setDescription('Jitter-Min-Pos-SD')
setPerfoRttmonsJittermaxpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxpossd.setDescription('Jitter-Max-Pos-SD')
setPerfoRttmonsJittercountposs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposs.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposs.setDescription('Jitter-Count-Pos-SD')
setPerfoRttmonsJittersumpossd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumpossd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittersumpossd.setDescription('Jitter-Sum-Pos-SD')
setPerfoRttmonsJitterminposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminposds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJitterminposds.setDescription('Jitter-Min-Pos-DS')
setPerfoRttmonsJittermaxposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxposds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxposds.setDescription('Jitter-Max-Pos-DS')
setPerfoRttmonsJittercountposd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittercountposd.setDescription('Jitter-Count-Pos-DS')
setPerfoRttmonsJittersumposds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumposds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittersumposds.setDescription('Jitter-Sum-Pos-DS')
setPerfoRttmonsJitterminnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegsd.setDescription('Jitter-Min-Neg-SD')
setPerfoRttmonsJittermaxnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegsd.setDescription('Jitter-Max-Neg-SD')
setPerfoRttmonsJittercountnegs = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegs.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegs.setDescription('Jitter-Count-Neg-SD')
setPerfoRttmonsJittersumnegsd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegsd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegsd.setDescription('Jitter-Sum-Neg-SD')
setPerfoRttmonsJitterminnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJitterminnegds.setDescription('Jitter-Min-Neg-DS')
setPerfoRttmonsJittermaxnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittermaxnegds.setDescription('Jitter-Max-Neg-DS')
setPerfoRttmonsJittercountnegd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittercountnegd.setDescription('Jitter-Count-Neg-DS')
setPerfoRttmonsJittersumnegds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsJittersumnegds.setDescription('Jitter-Sum-Neg-DS')
setPerfoRttmonsPacketlosssd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsPacketlosssd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsPacketlosssd.setDescription('Packet-Loss-SD')
setPerfoRttmonsPacketlossds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsPacketlossds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsPacketlossds.setDescription('Packet-Loss-DS')
setPerfoRttmonsAveragejitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitter.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitter.setDescription('Average-Jitter')
setPerfoRttmonsAveragejittersd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejittersd.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsAveragejittersd.setDescription('Average-Jitter-SD')
setPerfoRttmonsAveragejitterds = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 36, 4, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitterds.setStatus('current')
if mibBuilder.loadTexts: setPerfoRttmonsAveragejitterds.setDescription('Average-Jitter-DS')
setWlanm = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37))
setWlanmStaTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 1), )
if mibBuilder.loadTexts: setWlanmStaTable.setStatus('current')
if mibBuilder.loadTexts: setWlanmStaTable.setDescription('Static-WLC-Configuration')
setWlanmStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "setWlanmStaIpa"))
if mibBuilder.loadTexts: setWlanmStaEntry.setStatus('current')
if mibBuilder.loadTexts: setWlanmStaEntry.setDescription('entry in table')
setWlanmStaIpa = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaIpa.setStatus('current')
if mibBuilder.loadTexts: setWlanmStaIpa.setDescription('IP-Address')
setWlanmStaPor = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaPor.setStatus('current')
if mibBuilder.loadTexts: setWlanmStaPor.setDescription('Port')
setWlanmStaLoo = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmStaLoo.setStatus('current')
if mibBuilder.loadTexts: setWlanmStaLoo.setDescription('Loopback-Addr.')
setWlanmLog = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 2, 37, 120), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: setWlanmLog.setStatus('current')
if mibBuilder.loadTexts: setWlanmLog.setDescription('Log-Entries')
firVerTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1), )
if mibBuilder.loadTexts: firVerTable.setStatus('current')
if mibBuilder.loadTexts: firVerTable.setDescription('Version-Table')
firVerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "firVerIfc"))
if mibBuilder.loadTexts: firVerEntry.setStatus('current')
if mibBuilder.loadTexts: firVerEntry.setDescription('entry in table')
firVerIfc = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ifc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerIfc.setStatus('current')
if mibBuilder.loadTexts: firVerIfc.setDescription('Ifc')
firVerMod = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerMod.setStatus('current')
if mibBuilder.loadTexts: firVerMod.setDescription('Module')
firVerVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 25))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerVer.setStatus('current')
if mibBuilder.loadTexts: firVerVer.setDescription('Version')
firVerSer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firVerSer.setStatus('current')
if mibBuilder.loadTexts: firVerSer.setDescription('Serial-number')
firTabTable = MibTable((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2), )
if mibBuilder.loadTexts: firTabTable.setStatus('current')
if mibBuilder.loadTexts: firTabTable.setDescription('Table-Firmsafe')
firTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1), ).setIndexNames((0, "LANCOM-L54g-MIB", "firTabPos"))
if mibBuilder.loadTexts: firTabEntry.setStatus('current')
if mibBuilder.loadTexts: firTabEntry.setDescription('entry in table')
firTabPos = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabPos.setStatus('current')
if mibBuilder.loadTexts: firTabPos.setDescription('Position')
firTabSta = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 1, 0, 5, 4))).clone(namedValues=NamedValues(("loader", 2), ("active", 1), ("inactive", 0), ("minimal-plus-active", 5), ("minimal-plus-inactive", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTabSta.setStatus('current')
if mibBuilder.loadTexts: firTabSta.setDescription('Status')
firTabVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabVer.setStatus('current')
if mibBuilder.loadTexts: firTabVer.setDescription('Version')
firTabDat = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabDat.setStatus('current')
if mibBuilder.loadTexts: firTabDat.setDescription('Date')
firTabSiz = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabSiz.setStatus('current')
if mibBuilder.loadTexts: firTabSiz.setDescription('Size')
firTabInd = MibTableColumn((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firTabInd.setStatus('current')
if mibBuilder.loadTexts: firTabInd.setDescription('Index')
firMod = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("immediate", 0), ("login", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firMod.setStatus('current')
if mibBuilder.loadTexts: firMod.setDescription('Mode-Firmsafe')
firTim = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firTim.setStatus('current')
if mibBuilder.loadTexts: firTim.setDescription('Timeout-Firmsafe')
firFea = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 3, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 34))).setMaxAccess("readonly")
if mibBuilder.loadTexts: firFea.setStatus('current')
if mibBuilder.loadTexts: firFea.setDescription('Feature-Word')
othMan = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4, 1))
othManCon = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManCon.setStatus('current')
if mibBuilder.loadTexts: othManCon.setDescription('Connect')
othManDis = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othManDis.setStatus('current')
if mibBuilder.loadTexts: othManDis.setDescription('Disconnect')
othBoo = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othBoo.setStatus('current')
if mibBuilder.loadTexts: othBoo.setDescription('Boot-System')
othCol = MibScalar((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: othCol.setStatus('current')
if mibBuilder.loadTexts: othCol.setDescription('Cold-Boot')
trapgrp = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0))
traps = MibIdentifier((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0))
trpStatChan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 1)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWanConnectio"), ("LANCOM-L54g-MIB", "staChannState"), ("LANCOM-L54g-MIB", "staChannApp"), ("LANCOM-L54g-MIB", "staChannMode"), ("LANCOM-L54g-MIB", "staChannCause"), ("LANCOM-L54g-MIB", "staChannNumbe"), ("LANCOM-L54g-MIB", "staChannSubad"), ("LANCOM-L54g-MIB", "staChannCharg"), ("LANCOM-L54g-MIB", "staChannExtra"), ("LANCOM-L54g-MIB", "staChannConnt"), ("LANCOM-L54g-MIB", "staChannConns"), ("LANCOM-L54g-MIB", "staChannIsdnd"), ("LANCOM-L54g-MIB", "staChannPhcha"), ("LANCOM-L54g-MIB", "staChannPptpc"))
if mibBuilder.loadTexts: trpStatChan.setStatus('current')
if mibBuilder.loadTexts: trpStatChan.setDescription('StatChan')
trpFwUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 4)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpFwUplStart.setStatus('current')
if mibBuilder.loadTexts: trpFwUplStart.setDescription('FwUplStart')
trpUplSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 5)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo1"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplSucc.setStatus('current')
if mibBuilder.loadTexts: trpUplSucc.setDescription('UplSucc')
trpUplFailTo = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 6)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo1"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailTo.setStatus('current')
if mibBuilder.loadTexts: trpUplFailTo.setDescription('UplFailTo')
trpUplFailIncl = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 7)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo1"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailIncl.setStatus('current')
if mibBuilder.loadTexts: trpUplFailIncl.setDescription('UplFailIncl')
trpUplFailBadDev = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 8)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo1"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpUplFailBadDev.setStatus('current')
if mibBuilder.loadTexts: trpUplFailBadDev.setDescription('UplFailBadDev')
trpLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 9)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpLogin.setStatus('current')
if mibBuilder.loadTexts: trpLogin.setDescription('Login')
trpLogout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 10)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpLogout.setStatus('current')
if mibBuilder.loadTexts: trpLogout.setDescription('Logout')
trpCnfUplStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 11)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfUplStart.setStatus('current')
if mibBuilder.loadTexts: trpCnfUplStart.setDescription('CnfUplStart')
trpCnfDnlStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 12)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpCnfDnlStart.setStatus('current')
if mibBuilder.loadTexts: trpCnfDnlStart.setDescription('CnfDnlStart')
trpCnfDnlSucc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 13)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo1"), ("LANCOM-L54g-MIB", "staConfiEventlogInfo2"))
if mibBuilder.loadTexts: trpCnfDnlSucc.setStatus('current')
if mibBuilder.loadTexts: trpCnfDnlSucc.setDescription('CnfDnlSucc')
trpBssScan = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 14)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: trpBssScan.setStatus('current')
if mibBuilder.loadTexts: trpBssScan.setDescription('BssScan')
trpBssStart = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 15)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanWlanpaIfc"), ("LANCOM-L54g-MIB", "staWlanNetworBss"))
if mibBuilder.loadTexts: trpBssStart.setStatus('current')
if mibBuilder.loadTexts: trpBssStart.setDescription('BssStart')
trpBssJoin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 16)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanWlanpaIfc"), ("LANCOM-L54g-MIB", "staWlanNetworBss"))
if mibBuilder.loadTexts: trpBssJoin.setStatus('current')
if mibBuilder.loadTexts: trpBssJoin.setDescription('BssJoin')
trpAuthStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 17)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAuthStation.setStatus('current')
if mibBuilder.loadTexts: trpAuthStation.setDescription('AuthStation')
trpDeAuthStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 18)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpDeAuthStation.setStatus('current')
if mibBuilder.loadTexts: trpDeAuthStation.setDescription('DeAuthStation')
trpAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 19)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAssStation.setStatus('current')
if mibBuilder.loadTexts: trpAssStation.setDescription('AssStation')
trpReAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 20)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpReAssStation.setStatus('current')
if mibBuilder.loadTexts: trpReAssStation.setDescription('ReAssStation')
trpDisAssStation = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 21)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpDisAssStation.setStatus('current')
if mibBuilder.loadTexts: trpDisAssStation.setDescription('DisAssStation')
trpAssRej = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 22)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanLogtabAdd"))
if mibBuilder.loadTexts: trpAssRej.setStatus('current')
if mibBuilder.loadTexts: trpAssRej.setDescription('AssRej')
trpCardHung = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 25)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanInterfIfc"))
if mibBuilder.loadTexts: trpCardHung.setStatus('current')
if mibBuilder.loadTexts: trpCardHung.setDescription('CardHung')
trpIpFwFlt = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 26)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staIprouLogtablSyst"), ("LANCOM-L54g-MIB", "staIprouLogtablSrca"), ("LANCOM-L54g-MIB", "staIprouLogtablDsta"), ("LANCOM-L54g-MIB", "staIprouLogtablProt"), ("LANCOM-L54g-MIB", "staIprouLogtablSrcp"), ("LANCOM-L54g-MIB", "staIprouLogtablDstp"), ("LANCOM-L54g-MIB", "staIprouLogtablFilt"), ("LANCOM-L54g-MIB", "staIprouLogtablLimi"), ("LANCOM-L54g-MIB", "staIprouLogtablThre"), ("LANCOM-L54g-MIB", "staIprouLogtablActi"))
if mibBuilder.loadTexts: trpIpFwFlt.setStatus('current')
if mibBuilder.loadTexts: trpIpFwFlt.setDescription('IpFwFlt')
trpPptpConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 28)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staPptpTun"), ("LANCOM-L54g-MIB", "staPptpConChann"), ("LANCOM-L54g-MIB", "staPptpConState"), ("LANCOM-L54g-MIB", "staPptpConMode"), ("LANCOM-L54g-MIB", "staPptpConShtim"), ("LANCOM-L54g-MIB", "staPptpConPhysc"), ("LANCOM-L54g-MIB", "staPptpConPeera"), ("LANCOM-L54g-MIB", "staPptpConIpadd"), ("LANCOM-L54g-MIB", "staPptpConDnsde"), ("LANCOM-L54g-MIB", "staPptpConNbnsd"), ("LANCOM-L54g-MIB", "staPptpConLaste"), ("LANCOM-L54g-MIB", "staPptpConDnsba"), ("LANCOM-L54g-MIB", "staPptpConNbnsb"))
if mibBuilder.loadTexts: trpPptpConn.setStatus('current')
if mibBuilder.loadTexts: trpPptpConn.setDescription('PptpConn')
trpErrLogin = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 29)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staConfiEventlogSyste"), ("LANCOM-L54g-MIB", "staConfiEventlogEvent"), ("LANCOM-L54g-MIB", "staConfiEventlogAcces"), ("LANCOM-L54g-MIB", "staConfiEventlogIpadd"))
if mibBuilder.loadTexts: trpErrLogin.setStatus('current')
if mibBuilder.loadTexts: trpErrLogin.setDescription('ErrLogin')
trpKeyhandshake_Timeout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 33)).setLabel("trpKeyhandshake-Timeout").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpKeyhandshake_Timeout.setStatus('current')
if mibBuilder.loadTexts: trpKeyhandshake_Timeout.setDescription('Keyhandshake-Timeout')
trpSupervision = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 35)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpSupervision.setStatus('current')
if mibBuilder.loadTexts: trpSupervision.setDescription('Supervision')
trpPPPoESConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 39)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staPppoeNum"), ("LANCOM-L54g-MIB", "staPppoeConCha"), ("LANCOM-L54g-MIB", "staPppoeConMac"), ("LANCOM-L54g-MIB", "staPppoeConSta"), ("LANCOM-L54g-MIB", "staPppoeConLas"), ("LANCOM-L54g-MIB", "staPppoeConSht"), ("LANCOM-L54g-MIB", "staPppoeConPee"))
if mibBuilder.loadTexts: trpPPPoESConn.setStatus('current')
if mibBuilder.loadTexts: trpPPPoESConn.setDescription('PPPoESConn')
trpVrrp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 41)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staIprouVrrpEveSys"), ("LANCOM-L54g-MIB", "staIprouVrrpEveSrc"), ("LANCOM-L54g-MIB", "staIprouVrrpEveVri"), ("LANCOM-L54g-MIB", "staIprouVrrpEveEve"), ("LANCOM-L54g-MIB", "staIprouVrrpEveInf"))
if mibBuilder.loadTexts: trpVrrp.setStatus('current')
if mibBuilder.loadTexts: trpVrrp.setDescription('Vrrp')
trpExcEirp = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 42)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanWlanpaIfc"), ("LANCOM-L54g-MIB", "staWlanWlanpaEirp"))
if mibBuilder.loadTexts: trpExcEirp.setStatus('current')
if mibBuilder.loadTexts: trpExcEirp.setDescription('ExcEirp')
trpIdle_Timeout = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 46)).setLabel("trpIdle-Timeout").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"))
if mibBuilder.loadTexts: trpIdle_Timeout.setStatus('current')
if mibBuilder.loadTexts: trpIdle_Timeout.setDescription('Idle-Timeout')
trpAdmin_Deassoc = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 47)).setLabel("trpAdmin-Deassoc").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpAdmin_Deassoc.setStatus('current')
if mibBuilder.loadTexts: trpAdmin_Deassoc.setDescription('Admin-Deassoc')
trpMacChkFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 52)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpMacChkFail.setStatus('current')
if mibBuilder.loadTexts: trpMacChkFail.setDescription('MacChkFail')
trpRoamed = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 53)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpRoamed.setStatus('current')
if mibBuilder.loadTexts: trpRoamed.setDescription('Roamed')
trpConnected = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 54)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanStatioMacadd"), ("LANCOM-L54g-MIB", "staWlanStatioIdenti"))
if mibBuilder.loadTexts: trpConnected.setStatus('current')
if mibBuilder.loadTexts: trpConnected.setDescription('Connected')
trpCl_LostConn = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 55)).setLabel("trpCl-LostConn").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanClientInterfIfc"), ("LANCOM-L54g-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_LostConn.setStatus('current')
if mibBuilder.loadTexts: trpCl_LostConn.setDescription('Cl.-LostConn')
trpCl_AuthFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 56)).setLabel("trpCl-AuthFail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanClientInterfIfc"), ("LANCOM-L54g-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_AuthFail.setStatus('current')
if mibBuilder.loadTexts: trpCl_AuthFail.setDescription('Cl.-AuthFail')
trpCl_AssocFail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 57)).setLabel("trpCl-AssocFail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanClientInterfIfc"), ("LANCOM-L54g-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_AssocFail.setStatus('current')
if mibBuilder.loadTexts: trpCl_AssocFail.setDescription('Cl.-AssocFail')
trpCl_Connected = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 58)).setLabel("trpCl-Connected").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanClientInterfIfc"), ("LANCOM-L54g-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_Connected.setStatus('current')
if mibBuilder.loadTexts: trpCl_Connected.setDescription('Cl.-Connected')
trpCl_802_1x_Fail = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 59)).setLabel("trpCl-802-1x-Fail").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staWlanClientInterfIfc"), ("LANCOM-L54g-MIB", "staWlanClientInterfState"))
if mibBuilder.loadTexts: trpCl_802_1x_Fail.setStatus('current')
if mibBuilder.loadTexts: trpCl_802_1x_Fail.setDescription('Cl.-802.1x-Fail')
trpSpGtReE_pOrTsTaTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 1000)).setLabel("trpSpGtReE-pOrTsTaTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staLanbrSpaPorttabDes"), ("LANCOM-L54g-MIB", "staLanbrSpaPorttabSta"), ("LANCOM-L54g-MIB", "staLanbrSpaPorttabPat"))
if mibBuilder.loadTexts: trpSpGtReE_pOrTsTaTcHg.setStatus('current')
if mibBuilder.loadTexts: trpSpGtReE_pOrTsTaTcHg.setDescription('SpGtReE-pOrTsTaTcHg')
trpSpGtReE_rStPsTaTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 1001)).setLabel("trpSpGtReE-rStPsTaTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporDes"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporRol"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporLea"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporFor"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporEdg"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporPro"), ("LANCOM-L54g-MIB", "staLanbrSpaRstpporPat"))
if mibBuilder.loadTexts: trpSpGtReE_rStPsTaTcHg.setStatus('current')
if mibBuilder.loadTexts: trpSpGtReE_rStPsTaTcHg.setDescription('SpGtReE-rStPsTaTcHg')
trpSpGtReE_rOoTpOrTcHg = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 1002)).setLabel("trpSpGtReE-rOoTpOrTcHg").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staLanbrSpaRootbri"), ("LANCOM-L54g-MIB", "staLanbrSpaRootpor"), ("LANCOM-L54g-MIB", "staLanbrSpaRootpat"))
if mibBuilder.loadTexts: trpSpGtReE_rOoTpOrTcHg.setStatus('current')
if mibBuilder.loadTexts: trpSpGtReE_rOoTpOrTcHg.setDescription('SpGtReE-rOoTpOrTcHg')
trpHTTP_Tunnel_Open = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 2000)).setLabel("trpHTTP-Tunnel-Open").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveIndex"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveRemotea"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveRemotep"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveLocalho"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveLocalpo"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveIdletim"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveLocalrt"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setStatus('current')
if mibBuilder.loadTexts: trpHTTP_Tunnel_Open.setDescription('HTTP-Tunnel-Open')
trpHTTP_Tunnel_Close = NotificationType((1, 3, 6, 1, 4, 1, 2356, 600, 2, 54, 0, 0, 2001)).setLabel("trpHTTP-Tunnel-Close").setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysName"), ("LANCOM-L54g-MIB", "staSnmpEveCou"), ("LANCOM-L54g-MIB", "staTcpipHttpActiveIndex"))
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setStatus('current')
if mibBuilder.loadTexts: trpHTTP_Tunnel_Close.setDescription('HTTP-Tunnel-Close')
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staIprouFilterlSend=staIprouFilterlSend, staTcpipTftpWantxo=staTcpipTftpWantxo, staPppTxo=staPppTxo, staTcpipRadiussAccoActiveaccountinCalledst=staTcpipRadiussAccoActiveaccountinCalledst, setIprou1nnIcmpaging=setIprou1nnIcmpaging, staTcpipRadiussAcceClientsDropped=staTcpipRadiussAcceClientsDropped, staConfiScanresuIpadd=staConfiScanresuIpadd, staConfiEventlogInfo1=staConfiEventlogInfo1, setInterWlaRoamingTable=setInterWlaRoamingTable, staTcpipTftpWanrxw=staTcpipTftpWanrxw, staIprouEstabliEntry=staIprouEstabliEntry, staIprouQosRxres=staIprouQosRxres, staIeee8StaPorts=staIeee8StaPorts, setCertiSceCasApplication=setCertiSceCasApplication, staWlanmNetworEncry=staWlanmNetworEncry, setChargTimetabBudgetmi=setChargTimetabBudgetmi, setInterWlaNetworkClb=setInterWlaNetworkClb, setPppoePorPor=setPppoePorPor, setMailLoopb=setMailLoopb, staChargTimetabIfc=staChargTimetabIfc, setVlanNetNam=setVlanNetNam, setSysloSerIpa=setSysloSerIpa, staWlanNetworMca=staWlanNetworMca, staChannPptpc=staChannPptpc, staDhcpcLanIpadd=staDhcpcLanIpadd, staLan=staLan, staTcpipTftpLanrxw=staTcpipTftpLanrxw, staIprouRipWansPois=staIprouRipWansPois, setPerfoRttmonsRttmin=setPerfoRttmonsRttmin, setConfiScreenh=setConfiScreenh, setNetbiSerFla=setNetbiSerFla, staWlanNetworVla=staWlanNetworVla, setInterWlaOperationalIfc=setInterWlaOperationalIfc, staLanLanq=staLanLanq, setChargTimetabMinutesp=setChargTimetabMinutesp, staWanWanqueuem=staWanWanqueuem, setAccouLasConne=setAccouLasConne, trpErrLogin=trpErrLogin, setNetbiBroSer=setNetbiBroSer, setSnmpMonitortVla=setSnmpMonitortVla, staLayerWanl=staLayerWanl, setConfiAdminsEntry=setConfiAdminsEntry, setEchosAccCom=setEchosAccCom, staLanbrConEntry=staLanbrConEntry, staTcpipTcpLantxr=staTcpipTcpLantxr, staTcpipRadiussAcceTotalaccessrej=staTcpipRadiussAcceTotalaccessrej, staIprouVrrpVirPee=staIprouVrrpVirPee, staIprouVrrpMacTable=staIprouVrrpMacTable, setWlanIdletimeou=setWlanIdletimeou, staTcpipRadiussAccoTotalaccountreq=staTcpipRadiussAccoTotalaccountreq, setInterLanMdi=setInterLanMdi, firVerIfc=firVerIfc, setAccouSor=setAccouSor, setPerfoRttmonsRttsum=setPerfoRttmonsRttsum, setLanMacadd=setLanMacadd, setIprouDefInd=setIprouDefInd, staIprouOpenporEntry=staIprouOpenporEntry, staTcpipDnsForw=staTcpipDnsForw, staIprouActiproRtg=staIprouActiproRtg, staTcpipDhcpNetwoNetworknam=staTcpipDhcpNetwoNetworknam, staTcpipRadiussAcceClientsAccessreq=staTcpipRadiussAcceClientsAccessreq, setSnmpMonitortTim=setSnmpMonitortTim, staIeee8StaAuthi=staIeee8StaAuthi, setWlanAccesslistEntry=setWlanAccesslistEntry, setInterWlaRoamingSoftroaming=setInterWlaRoamingSoftroaming, staQueueIpqueue=staQueueIpqueue, staWanMtuMtu=staWanMtuMtu, staPptpAck=staPptpAck, setInterWlaEncryptionTable=setInterWlaEncryptionTable, setCertiSceSce=setCertiSceSce, staPppPapTxfai=staPppPapTxfai, setLanbrProTable=setLanbrProTable, staWlanmApconnId=staWlanmApconnId, setAccouSav=setAccouSav, staChargRouterd=staChargRouterd, staDhcpcLanDnsba=staDhcpcLanDnsba, staIprouActiproPee=staIprouActiproPee, setConfiCrontabDayo=setConfiCrontabDayo, trpCl_Connected=trpCl_Connected, staTcpipRadiussAcceTotalaccesscha=staTcpipRadiussAcceTotalaccesscha, setWanIplistIpadd=setWanIplistIpadd, staWlanChanneNoisel=staWlanChanneNoisel, setLcrRou=setLcrRou, staChannIsdnd=staChannIsdnd, setWlanRadiusaccoInterimup=setWlanRadiusaccoInterimup, staWlanBytetrTable=staWlanBytetrTable, staIprouRipVrrpEntry=staIprouRipVrrpEntry, setTcpipAccesIpn=setTcpipAccesIpn, setWlanSignalaverFilCoeInd=setWlanSignalaverFilCoeInd, staTcpipRadiuscAuthenticTable=staTcpipRadiuscAuthenticTable, staCalliCou=staCalliCou, staFilesConNam=staFilesConNam, staTcpipArpTablMac=staTcpipArpTablMac, staCertiSceRasStatus=staCertiSceRasStatus, setWanPppTim=setWanPppTim, setLanbrProDhcpsr=setLanbrProDhcpsr, staPppDel=staPppDel, setIeee8RadIpa=setIeee8RadIpa, staWlanInterpAccTxbyte=staWlanInterpAccTxbyte, staPppPapTxreq=staPppPapTxreq, staWanWanheappa=staWanWanheappa, staLanErroNic=staLanErroNic, staTcpipNetbiosWant=staTcpipNetbiosWant, staIprouFilterlEntry=staIprouFilterlEntry, staChargTimetabTable=staChargTimetabTable, setInterWlaClientmodesCon=setInterWlaClientmodesCon, setWanDslbroaSht=setWanDslbroaSht, setWlanSignalaverSta=setWlanSignalaverSta, setIprouFirAdmin=setIprouFirAdmin, staTcpipTftpLanrxa=staTcpipTftpLanrxa, staWlanInterpAccRxlimi=staWlanInterpAccRxlimi, staTimeDstDay=staTimeDstDay, setPppoeNamEntry=setPppoeNamEntry, staAccouAccTxkby=staAccouAccTxkby, setIprouDefSta=setIprouDefSta, staWlanSeenclAge=staWlanSeenclAge, setPerfoRttmoneDestinationa=setPerfoRttmoneDestinationa, firTabVer=firTabVer, staWlanRadiosRadiochannel=staWlanRadiosRadiochannel, staIprouHoconnlNum=staIprouHoconnlNum, staAccouCurTxkby=staAccouCurTxkby, staAccouTimTable=staAccouTimTable, setInterWlaNetworkClo=setInterWlaNetworkClo, setCertiSceRet=setCertiSceRet, setTcpipNetwoTable=setTcpipNetwoTable, setWlanAccesslistRxl=setWlanAccesslistRxl, staLanLanh=staLanLanh, staCertiSceCertsIdx=staCertiSceCertsIdx, setTimeDstInd=setTimeDstInd, setInterWlaRadiosettinSubbands=setInterWlaRadiosettinSubbands, setIprou1nnIpsectablRemotea=setIprou1nnIpsectablRemotea, staIprouFilterlLink=staIprouFilterlLink, staIprouQosTxfav=staIprouQosTxfav, setIprouRipLanRtgt=setIprouRipLanRtgt, staWlanCompetShortp=staWlanCompetShortp, setWlanMailaddres=setWlanMailaddres, setIprouFirHostbTable=setIprouFirHostbTable, staWlanWlanpaSupportsshortp=staWlanWlanpaSupportsshortp, staUmtsmCon=staUmtsmCon, staConneIfc=staConneIfc, setTime=setTime, staTcpip=staTcpip, setCertiSceCasDn=setCertiSceCasDn, setCertiSceCerEntry=setCertiSceCerEntry, staTcpipRadiussAccoTotalaccountnor=staTcpipRadiussAccoTotalaccountnor, setInterWlaGroupencrypKey3=setInterWlaGroupencrypKey3, staPppLcpRxdiscarded=staPppLcpRxdiscarded, staIprouRipEntr=staIprouRipEntr, staPptpConDnsba=staPptpConDnsba, staPppoeDro=staPppoeDro, staLanInteIfc=staLanInteIfc, staChannCause=staChannCause, setLanbrProEntry=setLanbrProEntry, staWlanmLogtabTable=staWlanmLogtabTable, staTcpipArpTablPee=staTcpipArpTablPee, staWlanGroupeTsc=staWlanGroupeTsc, staWlanRadiosTransmitpower=staWlanRadiosTransmitpower, staCertiSceCasSha1fi=staCertiSceCasSha1fi, setHttpRolVariablesTable=setHttpRolVariablesTable, staIprouRipLansTable=staIprouRipLansTable, staAccouLasMacad=staAccouLasMacad, setWanIplistNbnsb=setWanIplistNbnsb, staTcpipRadiuscAuthenticAccessacc=staTcpipRadiuscAuthenticAccessacc, staRemotIfc=staRemotIfc, staChargTimetabEntry=staChargTimetabEntry, setWanLayerLay3=setWanLayerLay3, staWlanmRadiomIndex=staWlanmRadiomIndex, setWanMtulistPee=setWanMtulistPee, setIprou1nnIpsectablNl=setIprou1nnIpsectablNl, setIprouRipIprTable=setIprouRipIprTable, staFiles=staFiles, staIprouOpenporTime=staIprouOpenporTime, staTcpipRadiussAccoClientsLastreques=staTcpipRadiussAccoClientsLastreques, setRadiuServeClientsSecret=setRadiuServeClientsSecret, setDhcpDef=setDhcpDef, staIprouRipWansRfc2=staIprouRipWansRfc2, staTcpipIcmp=staTcpipIcmp, staWlanmRadiomChanne=staWlanmRadiomChanne, staCertiSceCasEntry=staCertiSceCasEntry, staAccouCurRxkby=staAccouCurRxkby, setAccouLasConnt=setAccouLasConnt, setWlanmStaEntry=setWlanmStaEntry, staAccouLasConnt=staAccouLasConnt, staTcpipArpTablIpa=staTcpipArpTablIpa, trpKeyhandshake_Timeout=trpKeyhandshake_Timeout, staWanActions=staWanActions, setConfiSshauthEntry=setConfiSshauthEntry, setIprouSen=setIprouSen, setTcpipAliveTestin=setTcpipAliveTestin, trpSpGtReE_rOoTpOrTcHg=trpSpGtReE_rOoTpOrTcHg, setInterWlaRadiosettinDfsrescanhours=setInterWlaRadiosettinDfsrescanhours, setNetbiSerOsv=setNetbiSerOsv, setInterWlaGroupencrypKeytype3=setInterWlaGroupencrypKeytype3, staDslPppoeRxdata=staDslPppoeRxdata, setInterWlaInterpointpRec=setInterWlaInterpointpRec, staIprouRipDynwRtgt=staIprouRipDynwRtgt, staWlanStatioClbrgs=staWlanStatioClbrgs, staTcpipRadiussAccoClientsTable=staTcpipRadiussAccoClientsTable, setIprouFirPingb=setIprouFirPingb, staWlanStatioTable=staWlanStatioTable, staTcpipRadiussAcceClientsDuplicate=staTcpipRadiussAcceClientsDuplicate, staTcpipArpTablTable=staTcpipArpTablTable, setCertiSceCerChalleng=setCertiSceCerChalleng, staHardwPcidClass=staHardwPcidClass, staVlanPorTag=staVlanPorTag, setIprouFirFilteSrcm=setIprouFirFilteSrcm, staIeee8StaTable=staIeee8StaTable, staWlanErrorsMichae=staWlanErrorsMichae, staInfocMod=staInfocMod, staWlanPacketRxm=staWlanPacketRxm, setWlan=setWlan, staPppLcpRxconfigrequ=staPppLcpRxconfigrequ, staWlanStatioRxrate=staWlanStatioRxrate, staPptpConChann=staPptpConChann, staWlanIapptaIpadd=staWlanIapptaIpadd, staPppTxoIpcTable=staPppTxoIpcTable, staTcpipRadiussAccoActiveaccountinIpaddres=staTcpipRadiussAccoActiveaccountinIpaddres, setIprouVrr=setIprouVrr, setNetbiBroFla=setNetbiBroFla, staTimeDstTable=staTimeDstTable, staIeee8StaEntry=staIeee8StaEntry, setWlanRadiusaccoBackuppro=setWlanRadiusaccoBackuppro, staChannEntry=staChannEntry, staTcpipDnsHitlIpa=staTcpipDnsHitlIpa, setAccouLasUsern=setAccouLasUsern, staTcpipRadiussAcceClientsIpaddress=staTcpipRadiussAcceClientsIpaddress, staConfiScanresuState=staConfiScanresuState, setIprou1nnIpsectablLclo=setIprou1nnIpsectablLclo, setPerfoRttmonsAveragejitterds=setPerfoRttmonsAveragejitterds, staLanbrPorTable=staLanbrPorTable, staWlanmNetworClbrg=staWlanmNetworClbrg, setWlanAccesslistMac=setWlanAccesslistMac, staIprouPortbloTable=staIprouPortbloTable, staConfiFeaturesEntry=staConfiFeaturesEntry, setConfiAdminsFun=setConfiAdminsFun, staCertiSceCertsIssued=staCertiSceCertsIssued, setWlanRadiusacceAuthport=setWlanRadiusacceAuthport, setPppoe=setPppoe, staWlanScanreDtimpe=staWlanScanreDtimpe, staHardw=staHardw, staPppIpcRxterminatea=staPppIpcRxterminatea, staWlanWlanpaAessupport=staWlanWlanpaAessupport, setWlanRadiusacceProvidese=setWlanRadiusacceProvidese, setWlanRadiusaccoBackupsec=setWlanRadiusaccoBackupsec, staPppoeRxe=staPppoeRxe, setDnsFiltIdx=setDnsFiltIdx, setConfiAccesstEntry=setConfiAccesstEntry, setRadiuServeForwardservIpa=setRadiuServeForwardservIpa, setIprouVrrVrrVir=setIprouVrrVrrVir, setNetbiBroRtg=setNetbiBroRtg, staIprouLogtablLimi=staIprouLogtablLimi, sta=sta, staWlanCompetNonerp=staWlanCompetNonerp, staIprouRipWansRipa=staIprouRipWansRipa)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staPppoeConLas=staPppoeConLas, staWlanmGserverlNetmask=staWlanmGserverlNetmask, staChargSpareds=staChargSpareds, staDslDslolGatewayi=staDslDslolGatewayi, staAccouCurMacad=staAccouCurMacad, staTcpipDhcpRxdec=staTcpipDhcpRxdec, staWlanmRadiopSubbands=staWlanmRadiopSubbands, setDhcpHosEntry=setDhcpHosEntry, setConfiAdminsTable=setConfiAdminsTable, staChannPhcha=staChannPhcha, staWlanScanreRadioc=staWlanScanreRadioc, setIprou1nnServicetaEntry=setIprou1nnServicetaEntry, setIprou1nnTable1nnaSou=setIprou1nnTable1nnaSou, staWlanInterpAccLinkph=staWlanInterpAccLinkph, lancom_l54g=lancom_l54g, setIprouFirPortbTime=setIprouFirPortbTime, staTcpipTcpWantx=staTcpipTcpWantx, staIprouActiproTyp=staIprouActiproTyp, staWlanmRadiopAntennaga=staWlanmRadiopAntennaga, setLanbr=setLanbr, staLanbrAddMac=staLanbrAddMac, staWlanRadiosTable=staWlanRadiosTable, staCertiSceCasIsssnm=staCertiSceCasIsssnm, staWlanWlanpaTemperatureran=staWlanWlanpaTemperatureran, staDslPppoe=staDslPppoe, setNetbiGroTim=setNetbiGroTim, staWlanmLogtabInd=staWlanmLogtabInd, trpCnfUplStart=trpCnfUplStart, setWanProtect=setWanProtect, setWanScriptsPee=setWanScriptsPee, staUmtsmSta=staUmtsmSta, setWanPptppeePee=setWanPptppeePee, staRemotTable=staRemotTable, setHttpErr=setHttpErr, staWlanErrorsMultip=staWlanErrorsMultip, staUmtsmRxt=staUmtsmRxt, staTcpipRadiussAccoTotalinvalidacc=staTcpipRadiussAccoTotalinvalidacc, staIprouRipDynwGate=staIprouRipDynwGate, staLanByteBytesm=staLanByteBytesm, staWlanStatioCompre=staWlanStatioCompre, staPppCcpRxterminatea=staPppCcpRxterminatea, staWlanmLastwlEntry=staWlanmLastwlEntry, setWanDialuppEntry=setWanDialuppEntry, setIprouFirAuthp=setIprouFirAuthp, staLanbrPorPoi=staLanbrPorPoi, staIprouVrrpVirBpr=staIprouVrrpVirBpr, staWlanChanneRadioc=staWlanChanneRadioc, staWlanChanneRemtim=staWlanChanneRemtim, staHardwPcidBus=staHardwPcidBus, setCertiSceRei=setCertiSceRei, staCertiSceRasIssued=staCertiSceRasIssued, trpSupervision=trpSupervision, staLanbrDhcSrc=staLanbrDhcSrc, setChargAdditio=setChargAdditio, lancom_systems=lancom_systems, staIprouRipFiltIdx=staIprouRipFiltIdx, setVlanOpe=setVlanOpe, setIeee8PorKeytran=setIeee8PorKeytran, staWlanCompetEncryp=staWlanCompetEncryp, staIprouRipIpriIpn=staIprouRipIpriIpn, setRadiuServeClientsIpnetw=setRadiuServeClientsIpnetw, staTcpipRadiuscAuthenticBadauthen=staTcpipRadiuscAuthenticBadauthen, staTcpipTftpLanrxo=staTcpipTftpLanrxo, staLanPackTable=staLanPackTable, setHttpPag=setHttpPag, setConfiCrontabEntry=setConfiCrontabEntry, setInterWlaRadiosettinBackgroundscanu=setInterWlaRadiosettinBackgroundscanu, staTcpipArpWant=staTcpipArpWant, staTcpipNetbiosNetwTable=staTcpipNetbiosNetwTable, staTcpipArpLanr=staTcpipArpLanr, setConfiAccesstSsh=setConfiAccesstSsh, setChargTimetabTable=setChargTimetabTable, staIprouVrrpVirEntry=staIprouVrrpVirEntry, staIprouVrrpVirSta=staIprouVrrpVirSta, staIprouRipIpriNet=staIprouRipIpriNet, staChannBus=staChannBus, setPerfoRttmonaTim=setPerfoRttmonaTim, setConfiUpdatecRespons=setConfiUpdatecRespons, staTcpipRadiussAccoClientsDuplicater=staTcpipRadiussAccoClientsDuplicater, setDhcpNetGatewayadd=setDhcpNetGatewayadd, setWlanRadiusaccoBackuploo=setWlanRadiusaccoBackuploo, staWanBytetransRxb=staWanBytetransRxb, setWlanRadiusaccoBackupser=setWlanRadiusaccoBackupser, staCertiSceNumra=staCertiSceNumra, staTcpipRadiuscAuthenticAccessreq=staTcpipRadiuscAuthenticAccessreq, staWlanGroupeInde=staWlanGroupeInde, staIprouQosRxblo=staIprouQosRxblo, staDslTxunic=staDslTxunic, staDhcpcLanDhcps=staDhcpcLanDhcps, staIprouLanloca=staIprouLanloca, staChargTimetabSparemin=staChargTimetabSparemin, staIprouServiceService=staIprouServiceService, staIprouRipVrrpRip=staIprouRipVrrpRip, staIprouRipLansRxfi=staIprouRipLansRxfi, setInterWlaInterpointsCha=setInterWlaInterpointsCha, staWlanCompetInterf=staWlanCompetInterf, staTcpipRadiuscAccountinPort=staTcpipRadiuscAccountinPort, staQueueIprripq=staQueueIprripq, staDslPppoeDelete=staDslPppoeDelete, setTimeDstTable=setTimeDstTable, setIprouIprAct=setIprouIprAct, setHttpMax=setHttpMax, staWlanLogtabEntry=staWlanLogtabEntry, setDhcpDhcTable=setDhcpDhcTable, staWlanErrorsTable=staWlanErrorsTable, staIprouQosFragm=staIprouQosFragm, staIprouVrrpEveIdx=staIprouVrrpEveIdx, staCertiSceCasIssued=staCertiSceCasIssued, setInterWlaRoamingForceroamin=setInterWlaRoamingForceroamin, setIprouRipLanPois=setIprouRipLanPois, setIprouRipWanGate=setIprouRipWanGate, staWlanClientPppoeuMacaddres=staWlanClientPppoeuMacaddres, staWlanWlanpaExceirp=staWlanWlanpaExceirp, staCertiSceCertsEntry=staCertiSceCertsEntry, staTcpipRadiussAcceTotalaccessunk=staTcpipRadiussAcceTotalaccessunk, setWlanCardreinit=setWlanCardreinit, setWanPptppeeEntry=setWanPptppeeEntry, setDnsDnslTable=setDnsDnslTable, setMailUsern=setMailUsern, staPppLcpTxechoreques=staPppLcpTxechoreques, staCertiSceRasIssuer=staCertiSceRasIssuer, setWanBackuppPee=setWanBackuppPee, staWlanmRadiopBackgroun=staWlanmRadiopBackgroun, staWanMtuEntry=staWanMtuEntry, setRadiuServeForwardservLoo=setRadiuServeForwardservLoo, staTcpipDhcpNetwoTable=staTcpipDhcpNetwoTable, staPppCcpRxconfigrequ=staPppCcpRxconfigrequ, oth=oth, staTcpipDhcpDhcptEntry=staTcpipDhcpDhcptEntry, setIprouRou=setIprouRou, setNetbiGroPee=setNetbiGroPee, setLcrHolEntry=setLcrHolEntry, setHttpRolVariablesInd=setHttpRolVariablesInd, staTcpipRadiusc=staTcpipRadiusc, staTcpipRadiussAccoActiveaccountinUpdatede=staTcpipRadiussAccoActiveaccountinUpdatede, staIprouActiproTable=staIprouActiproTable, staWlanmGserverlTable=staWlanmGserverlTable, staWlanRadiosModemload=staWlanRadiosModemload, setDnsDynaSer=setDnsDynaSer, staWlanBytetrMaxthr=staWlanBytetrMaxthr, staWlanClientPppoeuHostuniql=staWlanClientPppoeuHostuniql, setIprouRipWanDftr=setIprouRipWanDftr, setPppoeSer=setPppoeSer, staLanbrSpaRstpporFor=staLanbrSpaRstpporFor, staLanErroIfc=staLanErroIfc, setPerfoRttmonsJitterminnegds=setPerfoRttmonsJitterminnegds, setWlanRadiusacco=setWlanRadiusacco, staDslNicerr=staDslNicerr, staAccouCurEntry=staAccouCurEntry, staTcpipIpLanrx=staTcpipIpLanrx, staTcpipDnsLant=staTcpipDnsLant, setWanPppTable=setWanPppTable, setNetbiNetOpe=setNetbiNetOpe, setDhcpDhcEntry=setDhcpDhcEntry, staPppLcpRxprotocolre=staPppLcpRxprotocolre, setWlanNoiseimmunOfd=setWlanNoiseimmunOfd, setWanMtulistEntry=setWanMtulistEntry, setNetbiUpd=setNetbiUpd, setInterWlaOperationalOperatin=setInterWlaOperationalOperatin, staTcpipRadiussAccoCompletedaccounNasipadd=staTcpipRadiussAccoCompletedaccounNasipadd, setLanTracel=setLanTracel, staDslPppoeServic=staDslPppoeServic, staRemotCount=staRemotCount, staTcpipIpWanserviceerrors=staTcpipIpWanserviceerrors, trpCnfDnlSucc=trpCnfDnlSucc, staQueueTcpqueu=staQueueTcpqueu, staLanbrDhcEntry=staLanbrDhcEntry, staLcrTot=staLcrTot, setInterWlaTransmissioMint=setInterWlaTransmissioMint, staMailSen=staMailSen, staIprouVrrpEveSrc=staIprouVrrpEveSrc, setEchosTcp=setEchosTcp, staPppLcpRxechoreques=staPppLcpRxechoreques, setInterUmtTable=setInterUmtTable, staConfiEventlogIdx=staConfiEventlogIdx, setIprouRipIprIpn=setIprouRipIprIpn, staIprouRipDynlPort=staIprouRipDynlPort, staIprouHoconnlTim=staIprouHoconnlTim, staPppCcp=staPppCcp, othManCon=othManCon, staWlanCompetAge=staWlanCompetAge, staWlanInterpAccInterp=staWlanInterpAccInterp, staTcpipTftpWanrxb=staTcpipTftpWanrxb, staWanThroughpuEntry=staWanThroughpuEntry, staDhcpcLanIfc=staDhcpcLanIfc, setInterWlaInterpointpOpe=setInterWlaInterpointpOpe, staWlanStatioListen=staWlanStatioListen, staWlanScanre108mbp=staWlanScanre108mbp, staIprouVrrpMacEntry=staIprouVrrpMacEntry, setSnmpSendtrap=setSnmpSendtrap, staTcpipHttpHttpac=staTcpipHttpHttpac, setInterWlaEncryptionMeth=setInterWlaEncryptionMeth, setInterWlaRoamingEntry=setInterWlaRoamingEntry, wlan_systems=wlan_systems, staCertiSceCertsKeyusage=staCertiSceCertsKeyusage, setRadiuServeForwardservPor=setRadiuServeForwardservPor, staCerti=staCerti, staTcpipArp=staTcpipArp, setWanPppTer=setWanPppTer, setIprouFirRulesFir=setIprouFirRulesFir, setLanbrSpaHel=setLanbrSpaHel, setInterWlaTransmissioEntry=setInterWlaTransmissioEntry, setInterUmtTyp=setInterUmtTyp, setCertiSceCasCafingerprint=setCertiSceCasCafingerprint, staWlanClientPppoeiSes=staWlanClientPppoeiSes, setEchosAccNet=setEchosAccNet, staIprouWandisc=staIprouWandisc, staIprouRipFiltIpa=staIprouRipFiltIpa, setDnsDynaHos=setDnsDynaHos, setRadiuServeClientsProtoc=setRadiuServeClientsProtoc, staTcpipHttpActiveTable=staTcpipHttpActiveTable, staTcpipIpLanchecksumerrors=staTcpipIpLanchecksumerrors, staLanPackRxu=staLanPackRxu, trpBssJoin=trpBssJoin, setDnsSubdSub=setDnsSubdSub, staWanPackettraTxn=staWanPackettraTxn, setAccouAccMacad=setAccouAccMacad, setNetbiHosNet=setNetbiHosNet, setDnsDyndTable=setDnsDyndTable, setConfiTftpcliFirmwaref=setConfiTftpcliFirmwaref, setWlanBrokenlink=setWlanBrokenlink, staTcpipDhcpNetwoAdaption=staTcpipDhcpNetwoAdaption, staWlanClientInterfBytest=staWlanClientInterfBytest, setAccouTimTable=setAccouTimTable, setIprouFirFilteProt=setIprouFirFilteProt, staDslRxpack=staDslRxpack, staConfiLoginrej=staConfiLoginrej, staLanInteFlo=staLanInteFlo, staTcpipNetbiosPeerNam=staTcpipNetbiosPeerNam, staWlanSeenclEntry=staWlanSeenclEntry, setNetbiGroFla=setNetbiGroFla, setWanDslbroaWan=setWanDslbroaWan, setLanbrIso=setLanbrIso, staHardwSwve=staHardwSwve, staLanbrSpaPorttabTable=staLanbrSpaPorttabTable, staTime=staTime, setWlanRadiusacceRecheckcy=setWlanRadiusacceRecheckcy, setIeee8PorQuietpe=setIeee8PorQuietpe, staLanIeeeSupSta=staLanIeeeSupSta, staWlanForeigTable=staWlanForeigTable, setIprouVrrOpe=setIprouVrrOpe, staCertiSceCasIssuer=staCertiSceCasIssuer, setConfiResetbu=setConfiResetbu, setIprou1nnTable1nnaInt=setIprou1nnTable1nnaInt, staLanPackEntry=staLanPackEntry, setIprou1nnIpsectablDp=setIprou1nnIpsectablDp, setIeee8PorPort=setIeee8PorPort, setDhcpNetNetmask=setDhcpNetNetmask, staPppTxoLcpEntry=staPppTxoLcpEntry, staPptpConNbnsb=staPptpConNbnsb, staSnmpEveTable=staSnmpEveTable, staIprouFilterlSrcm=staIprouFilterlSrcm, staDhcpcLanGatew=staDhcpcLanGatew, staTcpipRadiussAccoActiveaccountinInputpac=staTcpipRadiussAccoActiveaccountinInputpac)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staWlanmNetworWpa2s=staWlanmNetworWpa2s, setIprouFirFiltePrio=setIprouFirFiltePrio, staConneChar=staConneChar, setIprouIprPee=setIprouIprPee, staPppoeDel=staPppoeDel, setAccouAccConnt=setAccouAccConnt, setConfiUpdatecRetryfa=setConfiUpdatecRetryfa, staIprouConnectDest=staIprouConnectDest, staWlanmRadiopDtimperio=staWlanmRadiopDtimperio, staPppoeConSht=staPppoeConSht, staLanbrAddInd=staLanbrAddInd, setIprouRipWanRxfi=setIprouRipWanRxfi, staTimeSou=staTimeSou, setAccouDel=setAccouDel, setIprouRipLanRipt=setIprouRipLanRipt, staTcpipDhcpNetwoCache=staTcpipDhcpNetwoCache, setWanDslbroaUse=setWanDslbroaUse, setLcrTimEntry=setLcrTimEntry, staCurre=staCurre, setRadiuServeClientsIpnetm=setRadiuServeClientsIpnetm, staConfiScanresuVersi=staConfiScanresuVersi, setIprouRipWanTxfi=setIprouRipWanTxfi, setPerfoRttmonsTable=setPerfoRttmonsTable, setNetbiNetTable=setNetbiNetTable, setInterWlaNetworkTable=setInterWlaNetworkTable, staTcpipRadiussAcce=staTcpipRadiussAcce, staVlanPorEntry=staVlanPorEntry, staTcpipRadiussAccoCompletedaccounInputoct=staTcpipRadiussAccoCompletedaccounInputoct, staTcpipTftpWantxr=staTcpipTftpWantxr, setLanbrProSubpro=setLanbrProSubpro, setIprouFirFilteDsta=setIprouFirFilteDsta, setIprouFirMaxha=setIprouFirMaxha, staTcpipTcpWanrx=staTcpipTcpWanrx, setIprou1nnFragments=setIprou1nnFragments, staWlanClientInterfWpaver=staWlanClientInterfWpaver, setCertiSceCerCadn=setCertiSceCerCadn, staWlanPairwiTable=staWlanPairwiTable, setConfiLan=setConfiLan, staIprouRipFiltEntry=staIprouRipFiltEntry, setPerfoRttmonsJitterminnegsd=setPerfoRttmonsJitterminnegsd, staWlanScanreRate=staWlanScanreRate, staConfiLantotal=staConfiLantotal, setHttpRolActionsAct=setHttpRolActionsAct, staIprouRipIpriDis=staIprouRipIpriDis, staTcpipIpWanfragmentations=staTcpipIpWanfragmentations, staConfiScanresuEntry=staConfiScanresuEntry, staWlanCompetShortg=staWlanCompetShortg, staCertiSceCasExpsnm=staCertiSceCasExpsnm, staIprouLanrout=staIprouLanrout, staWlanChanneNumbss=staWlanChanneNumbss, staWlanmRadiopCountry=staWlanmRadiopCountry, setTcpipNetwoVla=setTcpipNetwoVla, staIprouConnectDstp=staIprouConnectDstp, setDhcpPorPor=setDhcpPorPor, staTcpipRadiussAcceClientsEntry=staTcpipRadiussAcceClientsEntry, staTcpipTcpWanche=staTcpipTcpWanche, staIprouVrrpMacMac=staIprouVrrpMacMac, setLanbrPorTable=setLanbrPorTable, staCertiSceNumca=staCertiSceNumca, setWlanRadiusaccoServeradd=setWlanRadiusaccoServeradd, staIprouDeletev=staIprouDeletev, staTcpipDhcpNetwoNbnsbackup=staTcpipDhcpNetwoNbnsbackup, staTcpipDhcp=staTcpipDhcp, staPppRxoLcpMru=staPppRxoLcpMru, staPppPppPha=staPppPppPha, setCertiSceCasIdentifier=setCertiSceCasIdentifier, setDhcpNetTable=setDhcpNetTable, setConfiTftpcliConfigadd=setConfiTftpcliConfigadd, staTcpipNetbiosRefr=staTcpipNetbiosRefr, staPptpCal=staPptpCal, setTcpipAlive=setTcpipAlive, staTcpipRadiussAccoCompletedaccounNasportt=staTcpipRadiussAccoCompletedaccounNasportt, setInterWlaClientmodesTxl=setInterWlaClientmodesTxl, staWlanWlanpaRadiochannel=staWlanWlanpaRadiochannel, setDhcpAddOptionv=setDhcpAddOptionv, setWlanRadarpatteThr=setWlanRadarpatteThr, setSysloFacFac=setSysloFacFac, staWlanmNetworMaxtx=staWlanmNetworMaxtx, setLanbrEncEntry=setLanbrEncEntry, staPptpConLaste=staPptpConLaste, setWanMtulistMtu=setWanMtulistMtu, staTcpipDhcpWantx=staTcpipDhcpWantx, staConfiEventlogEntry=staConfiEventlogEntry, setWanDslbroaAcn=setWanDslbroaAcn, setLanbrSpaPorPat=setLanbrSpaPorPat, setIprou1nnIpsectablFlags=setIprou1nnIpsectablFlags, staIprouConnectDsta=staIprouConnectDsta, staTcpipHttpDelete=staTcpipHttpDelete, setWanActiontTable=setWanActiontTable, setIprouRipParMaxh=setIprouRipParMaxh, staWlanScanreShorts=staWlanScanreShorts, staTcpipRadiussAccoClientsBadauthent=staTcpipRadiussAccoClientsBadauthent, staConfiStartsca=staConfiStartsca, setInterWlaTransmissioHard=setInterWlaTransmissioHard, staWlanWlanpaTransmitpower=staWlanWlanpaTransmitpower, setIeee8RadNam=setIeee8RadNam, staTcpipNetbiosPeerEntry=staTcpipNetbiosPeerEntry, staTcpipHttpActiveNumconn=staTcpipHttpActiveNumconn, setInterWlaClientmodesNet=setInterWlaClientmodesNet, setIprouFirRulesPro=setIprouFirRulesPro, staWlanClientInterfState=staWlanClientInterfState, setInterWlaEncryptionKey=setInterWlaEncryptionKey, staIprouRipLansTxfi=staIprouRipLansTxfi, setAccouLasTxkby=setAccouLasTxkby, staWlanBytetrThroug=staWlanBytetrThroug, staLanInteQue=staLanInteQue, staTcpipRadiuscAuthenticUnknownty=staTcpipRadiuscAuthenticUnknownty, staLanbrConSubprot=staLanbrConSubprot, setTcpipNetwoIpa=setTcpipNetwoIpa, trpUplSucc=trpUplSucc, staLanErroCol=staLanErroCol, staTcpipRadiuscAuthenticIpaddress=staTcpipRadiuscAuthenticIpaddress, staConnePass=staConnePass, setWanPollingIpaddress4=setWanPollingIpaddress4, staWlanNetworIfc=staWlanNetworIfc, staWlanInterfFirmware=staWlanInterfFirmware, setInterWlaGroupencrypTable=setInterWlaGroupencrypTable, setHttpRolVariablesMax=setHttpRolVariablesMax, staWlanClientInterfRxrate=staWlanClientInterfRxrate, staIprouServicePacketrx=staIprouServicePacketrx, staWlanClientInterfQos=staWlanClientInterfQos, staTcpipRadiussAccoCompletedaccounInputpac=staTcpipRadiussAccoCompletedaccounInputpac, staPppTxoIpcNbnsb=staPppTxoIpcNbnsb, staLayerLay3=staLayerLay3, staIprouConnectSrca=staIprouConnectSrca, setWlanCountry=setWlanCountry, setIprouRipFilEntry=setIprouRipFilEntry, trpHTTP_Tunnel_Open=trpHTTP_Tunnel_Open, staWlanBytetrIfc=staWlanBytetrIfc, staWlanCompetIdenti=staWlanCompetIdenti, staIprouRipLansRipa=staIprouRipLansRipa, setDnsDnslHos=setDnsDnslHos, staTcpipNetbios=staTcpipNetbios, staDhcpc=staDhcpc, trpSpGtReE_pOrTsTaTcHg=trpSpGtReE_pOrTsTaTcHg, staPppChaRxdis=staPppChaRxdis, staIeee8StaMacad=staIeee8StaMacad, staTcpipNetworkEntry=staTcpipNetworkEntry, staWlanErrorsStacke=staWlanErrorsStacke, setVlanPorAllow=setVlanPorAllow, staIprou=staIprou, trpBssScan=trpBssScan, staAccouAccTable=staAccouAccTable, setPerfoRttmonsJitterminposds=setPerfoRttmonsJitterminposds, staPppIpcTxterminatea=staPppIpcTxterminatea, staWlanStatioUserna=staWlanStatioUserna, setLanTracem=setLanTracem, staWlanScanreCompre=staWlanScanreCompre, staTcpipIpLanfragmentations=staTcpipIpLanfragmentations, staWlanLogtabRea=staWlanLogtabRea, setWanPppCon=setWanPppCon, setDnsServSer=setDnsServSer, setNetbiGroIpa=setNetbiGroIpa, setIprouFirPortbProt=setIprouFirPortbProt, setInterWlaRoamingBeaconmisst=setInterWlaRoamingBeaconmisst, setWanPollingLoopbackad=setWanPollingLoopbackad, setPppoePorEntry=setPppoePorEntry, staWlanPacketTxc=staWlanPacketTxc, setInterLanCon=setInterLanCon, setWlanm=setWlanm, staInfocIfc=staInfocIfc, setIprou1nnTable1nnaHan=setIprou1nnTable1nnaHan, setIprouFirDenys=setIprouFirDenys, staIprouVrrpEveEntry=staIprouVrrpEveEntry, setDhcpMax=setDhcpMax, staIprouRipLansVlan=staIprouRipLansVlan, staPppRxoIpcDnsde=staPppRxoIpcDnsde, staIprouQosDowns=staIprouQosDowns, setWanIplistDnsde=setWanIplistDnsde, setInterDslExt=setInterDslExt, setWanDialuppB1d=setWanDialuppB1d, setSnmpPassword=setSnmpPassword, staTcpipNetbiosBnod=staTcpipNetbiosBnod, setRadiuServeForwardservTable=setRadiuServeForwardservTable, setDnsDnsdEntry=setDnsDnsdEntry, staAccouLasTotal=staAccouLasTotal, staIprouEstabliDpo=staIprouEstabliDpo, staTcpipSyslogLasSou=staTcpipSyslogLasSou, setMailSmtps=setMailSmtps, setPerfoRttmonsJittercountposd=setPerfoRttmonsJittercountposd, staWlanCompetPcffun=staWlanCompetPcffun, setPppoeNamPee=setPppoeNamPee, staPppoeRxp=staPppoeRxp, setWlanNoisecalib=setWlanNoisecalib, staLanbrSpaBridgei=staLanbrSpaBridgei, setIprouNnnDsts=setIprouNnnDsts, setPerfoRttmonePacketsize=setPerfoRttmonePacketsize, staTcpipRadiussAccoCompletedaccounCalledst=staTcpipRadiussAccoCompletedaccounCalledst, staIprouFilterlDstn=staIprouFilterlDstn, setWanScriptsScr=setWanScriptsScr, setWanRouteriEntry=setWanRouteriEntry, setLcrTimDay=setLcrTimDay, staWlanStatioTxrate=staWlanStatioTxrate, staTcpipDhcpNetwoLanifc=staTcpipDhcpNetwoLanifc, staTcpipNetbiosPnod=staTcpipNetbiosPnod, staPppPppCcp=staPppPppCcp, staQueueIcmpque=staQueueIcmpque, staTcpipTftpLanrxe=staTcpipTftpLanrxe, staWlanPairwiKeyt=staWlanPairwiKeyt, staTcpipDhcpNetwoMasterserv=staTcpipDhcpNetwoMasterserv, staIprouActiproGat=staIprouActiproGat, staTcpipHttpActiveLocalho=staTcpipHttpActiveLocalho, setDhcpNetNbnsdefaul=setDhcpNetNbnsdefaul, staIprouHostbloTable=staIprouHostbloTable, setIprouRipWanRipt=setIprouRipWanRipt, staPppLcpTxechoreply=staPppLcpTxechoreply, setConfiAdminsAct=setConfiAdminsAct, setIeee8RadBac=setIeee8RadBac, staTcpipRadiussAcceTotalaccessbad=staTcpipRadiussAcceTotalaccessbad, staLanbrSpaRstpporPat=staLanbrSpaRstpporPat, staPppRxo=staPppRxo, setIprouRipWanTable=setIprouRipWanTable, staTcpipDhcpDhcptTable=staTcpipDhcpDhcptTable, staPptpRxe=staPptpRxe, staPppCha=staPppCha, staLcrNot=staLcrNot, setDhcpAliImages=setDhcpAliImages, trpReAssStation=trpReAssStation, staLayerTable=staLayerTable, setTcpipArptaPee=setTcpipArptaPee, setIprouFirActioEntry=setIprouFirActioEntry, staIprouOpenporTable=staIprouOpenporTable, setIprou1nnIpsecagin=setIprou1nnIpsecagin, staLanbrDhcTable=staLanbrDhcTable, staTcpipNetworkIpn=staTcpipNetworkIpn, staIprouProtocoTable=staIprouProtocoTable, staIprouRipIpriVla=staIprouRipIpriVla, staIprouVrrpVirRou=staIprouVrrpVirRou, setIprouIprCom=setIprouIprCom, staWlanClientIptranIpa=staWlanClientIptranIpa, staWlanmNetworSsid=staWlanmNetworSsid, staWlanCompetBeacon=staWlanCompetBeacon, staTcpipIcmpLans=staTcpipIcmpLans, staPppPppLcp=staPppPppLcp, staPppChaTxfai=staPppChaTxfai, staChargSpservere=staChargSpservere, staIprouLogtablSrca=staIprouLogtablSrca, setDnsSubdEntry=setDnsSubdEntry, setIprouFirOpera=setIprouFirOpera, staIprouVrrpDel=staIprouVrrpDel, staWlanGroupeEntry=staWlanGroupeEntry, staWanMtuPee=staWanMtuPee, staIprouQosRxreq=staIprouQosRxreq, setLanbrPorPoi=setLanbrPorPoi, setNetbiBroBro=setNetbiBroBro, setCertiSceCerDevicece=setCertiSceCerDevicece, staOpera=staOpera, staPppLcpRxechoreply=staPppLcpRxechoreply, staWlanmRadiopEntry=staWlanmRadiopEntry, setWanDialuppCal=setWanDialuppCal, staTcpipRadiussAcceClientsLastreque=staTcpipRadiussAcceClientsLastreque, setPerfoRttmonsCompletions=setPerfoRttmonsCompletions, staWlanScanreSignal=staWlanScanreSignal, staWlanInterpAccEntry=staWlanInterpAccEntry)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staWlanInterpAccShortp=staWlanInterpAccShortp, staWlanGroupeKeyt=staWlanGroupeKeyt, staWlanClientInterfCompre=staWlanClientInterfCompre, staMailDis=staMailDis, staDhcpcWanNbnsb=staDhcpcWanNbnsb, setCertiSceCerSubjecta=setCertiSceCerSubjecta, setWanRadiusProto=setWanRadiusProto, setWanIplistNbnsd=setWanIplistNbnsd, setAccouLasTable=setAccouLasTable, trpCl_802_1x_Fail=trpCl_802_1x_Fail, staIprouRipWansEntry=staIprouRipWansEntry, staTcpipDhcpNetwoGatewayadd=staTcpipDhcpNetwoGatewayadd, setNetbiSerGro=setNetbiSerGro, staTcpipTcpWancon=staTcpipTcpWancon, staWlanmApconnTable=staWlanmApconnTable, setIprou1nnUdpagings=setIprou1nnUdpagings, staWlanBytetrBytesm=staWlanBytetrBytesm, staIprouVrrpInt=staIprouVrrpInt, staTcpipDnsHitlTim=staTcpipDnsHitlTim, setInterModEchooff=setInterModEchooff, setLanbrAgi=setLanbrAgi, staWlanClientInterfTable=staWlanClientInterfTable, staWanPackettraRx=staWanPackettraRx, staAccouLasTable=staAccouLasTable, setConfiTelnets=setConfiTelnets, setInterWlaOperationalLinkledf=setInterWlaOperationalLinkledf, setIeee8RadEntry=setIeee8RadEntry, staCertiSceCertsIssuer=staCertiSceCertsIssuer, setIprou1nnServicetaWanadd=setIprou1nnServicetaWanadd, setIprouIprIpn=setIprouIprIpn, setIprouFirRulesNam=setIprouFirRulesNam, staPppLcpRxterminater=staPppLcpRxterminater, staWlanStatioTxpack=staWlanStatioTxpack, staIprouPortbloEntry=staIprouPortbloEntry, staLanByteIfc=staLanByteIfc, setIprouRipWanPeer=setIprouRipWanPeer, setSnmpIptrapsTra=setSnmpIptrapsTra, setHttpRolVariablesEntry=setHttpRolVariablesEntry, trpSpGtReE_rStPsTaTcHg=trpSpGtReE_rStPsTaTcHg, staConfiWanactiv=staConfiWanactiv, firTim=firTim, staWlanClientInterfThroug=staWlanClientInterfThroug, staAccouCurConne=staAccouCurConne, setIprou1nnTable1nnaTable=setIprou1nnTable1nnaTable, setPppoeNamTable=setPppoeNamTable, staPppRxoIpcNbnsd=staPppRxoIpcNbnsd, staTcpipRadiussAcceTotalaccessacc=staTcpipRadiussAcceTotalaccessacc, staTcpipRadiuscAccountinEntry=staTcpipRadiuscAccountinEntry, staIprouRipLansPois=staIprouRipLansPois, setPerfoRttmoneInterval=setPerfoRttmoneInterval, staWlanScanreExtcha=staWlanScanreExtcha, setMailEmail=setMailEmail, setIprouFirRulesSta=setIprouFirRulesSta, staIprouHostbloSrc=staIprouHostbloSrc, setIprouFirFilteRtgt=setIprouFirFilteRtgt, staTcpipNetbiosRele=staTcpipNetbiosRele, staPppLcpTxconfigack=staPppLcpTxconfigack, setRadiuAuthr=setRadiuAuthr, setLanIeee80SupMet=setLanIeee80SupMet, setVlanNetVla=setVlanNetVla, staLanbrConAge=staLanbrConAge, staDhcpcWanTable=staDhcpcWanTable, staTcpipRadiussLogtTable=staTcpipRadiussLogtTable, staWlanWlanpaBeaconperiod=staWlanWlanpaBeaconperiod, staTcpipRadiuscAccountinAccountingreq=staTcpipRadiuscAccountinAccountingreq, setHttpTun=setHttpTun, staWanWanqueuep=staWanWanqueuep, staLanbrSpaOperati=staLanbrSpaOperati, setRadiuServeForwardservBac=setRadiuServeForwardservBac, staTcpipHttpHttppr=staTcpipHttpHttppr, staWanActionsActAct=staWanActionsActAct, staIprouLanrx=staIprouLanrx, staWlanInterpAccTxlimi=staWlanInterpAccTxlimi, setConfiAccesstTelnet=setConfiAccesstTelnet, staWlanScanreEntry=staWlanScanreEntry, staLanInteTable=staLanInteTable, staTcpipArpTablEntry=staTcpipArpTablEntry, staWlanErrorsUndeco=staWlanErrorsUndeco, setWanLayerLay2=setWanLayerLay2, staDslRxnoco=staDslRxnoco, staWlanInterfQueuepac=staWlanInterfQueuepac, staTcpipIpLanfragmentationer=staTcpipIpLanfragmentationer, setIprouNnnIdx=setIprouNnnIdx, setTimeDstEve=setTimeDstEve, staIprouRules=staIprouRules, staWlanWlanpaIfc=staWlanWlanpaIfc, trpMacChkFail=trpMacChkFail, staIprouRip=staIprouRip, setInterWlaOperationalOperatio=setInterWlaOperationalOperatio, setConfiPrompt=setConfiPrompt, staTcpipRadiuscAccountinUnknowntypes=staTcpipRadiuscAccountinUnknowntypes, setConfiTftpcliScriptadd=setConfiTftpcliScriptadd, setConfiAccesstIfc=setConfiAccesstIfc, setSnmpIptrapsLoo=setSnmpIptrapsLoo, setDns=setDns, staWlanmRadiopMgmtvlant=staWlanmRadiopMgmtvlant, setInterUmtEntry=setInterUmtEntry, staWlanIapptaBssid=staWlanIapptaBssid, setInterDslDow=setInterDslDow, staLanbrSpaBridgep=staLanbrSpaBridgep, staWlanClientInterfConnec=staWlanClientInterfConnec, staIprouRipWansPeer=staIprouRipWansPeer, setIprouFirPorts=setIprouFirPorts, staTcpipTftpWanrxr=staTcpipTftpWanrxr, staPppChaRxres=staPppChaRxres, setIprouRouRou=setIprouRouRou, setIprouVrrInt=setIprouVrrInt, setWlanSignalaverFilCoeVal=setWlanSignalaverFilCoeVal, setInterModRequest=setInterModRequest, setIprouFirFilteDstm=setIprouFirFilteDstm, staWanConnectio=staWanConnectio, staWlanErrorsRxcrce=staWlanErrorsRxcrce, setWanPppUse=setWanPppUse, setNetbiGroRtg=setNetbiGroRtg, trpLogout=trpLogout, staTcpipRadiuscAuthenticEntry=staTcpipRadiuscAuthenticEntry, staConfi=staConfi, staTcpipRadiussAccoCompletedaccounStarttim=staTcpipRadiussAccoCompletedaccounStarttim, staPppPapDelet=staPppPapDelet, setInterDslOpe=setInterDslOpe, staChargDeletev=staChargDeletev, setWlanRadarpatteTable=setWlanRadarpatteTable, staWlanSeenclMac=staWlanSeenclMac, staLanbrPorEntry=staLanbrPorEntry, staWlanmNetworMacfi=staWlanmNetworMacfi, setAccouTimDayo=setAccouTimDayo, staConneEntry=staConneEntry, staPppTxoIpcNbnsd=staPppTxoIpcNbnsd, staDslLinkac=staDslLinkac, setDhcpHosTable=setDhcpHosTable, setLanbrSpaPorPri=setLanbrSpaPorPri, setWanPollingEntry=setWanPollingEntry, setPerfoRttmonsEntry=setPerfoRttmonsEntry, staWlanmRadiopTable=staWlanmRadiopTable, staPppPppTable=staPppPppTable, setDhcpDhcNet=setDhcpDhcNet, staConfiOutbanda=staConfiOutbanda, staWlanmNetworMintx=staWlanmNetworMintx, staIprouRipWansTable=staIprouRipWansTable, setWanActiontLockt=setWanActiontLockt, setIprouUsa=setIprouUsa, setWlanRadarloadt=setWlanRadarloadt, staCertiSceCertsStatus=staCertiSceCertsStatus, setNtpRqaTable=setNtpRqaTable, setIprouRipIprIpa=setIprouRipIprIpa, staDslQueuep=staDslQueuep, setIprouIprMas=setIprouIprMas, setWlanSignalaverFilCoeEntry=setWlanSignalaverFilCoeEntry, setInterWlaOperationalTable=setInterWlaOperationalTable, setIprouRipLanRxfi=setIprouRipLanRxfi, setWlanIappprotoc=setWlanIappprotoc, staPptpConIpadd=staPptpConIpadd, setTcpipNbnsd=setTcpipNbnsd, staAccouAccTotal=staAccouAccTotal, staIprouVrrpVirTable=staIprouVrrpVirTable, staIprouLogtablIdx=staIprouLogtablIdx, setIprouFirOpenpSrcr=setIprouFirOpenpSrcr, setNetbiHosTim=setNetbiHosTim, staAccouAccEntry=staAccouAccEntry, setVlanPorTaggi=setVlanPorTaggi, staIprouRipIpriRtg=staIprouRipIpriRtg, setHttpRolVariablesTit=setHttpRolVariablesTit, staTcpipRadiussAccoClientsDropped=staTcpipRadiussAccoClientsDropped, staTcpipDhcpRxreq=staTcpipDhcpRxreq, staDhcpcLanEntry=staDhcpcLanEntry, setIprouRipLanRipa=setIprouRipLanRipa, staWlanInterfMacaddre=staWlanInterfMacaddre, setIprou1nnIpsectablTable=setIprou1nnIpsectablTable, staAccouCurTable=staAccouCurTable, staTcpipRadiussAcceClientsAccesscha=staTcpipRadiussAcceClientsAccesscha, setWanPptppeeTable=setWanPptppeeTable, staInfocPee=staInfocPee, staWlanStatioTxbyte=staWlanStatioTxbyte, setWanRouteriIfc=setWanRouteriIfc, setWlanSignalaver=setWlanSignalaver, setIprouVrrVrrPri=setIprouVrrVrrPri, staWlanNetworNet=staWlanNetworNet, setIprouFirOpenpTable=setIprouFirOpenpTable, staTcpipDhcpNetwoDnsbackup=staTcpipDhcpNetwoDnsbackup, setWanPptppeeRtg=setWanPptppeeRtg, staTcpipRadiussAccoCompletedaccounSessiont=staTcpipRadiussAccoCompletedaccounSessiont, setIprouRipWanPois=setIprouRipWanPois, staLanIeeeSupAut=staLanIeeeSupAut, staIprouRipDynwPois=staIprouRipDynwPois, staIprouL4error=staIprouL4error, staAccou=staAccou, setIprouFirHostbFil=setIprouFirHostbFil, setChargSpareds=setChargSpareds, staWlanRadiosExceirp=staWlanRadiosExceirp, staWlanClientInterfEntry=staWlanClientInterfEntry, staConneConn=staConneConn, staInfocDia=staInfocDia, staIprouFilter=staIprouFilter, staWlanmRadiopName=staWlanmRadiopName, staWlanClientPppoeiTable=staWlanClientPppoeiTable, setNtpRqi=setNtpRqi, setWanActiontPeer=setWanActiontPeer, setTcpipAccesEntry=setTcpipAccesEntry, staLanbrConIndex=staLanbrConIndex, staLanbr=staLanbr, setLanbrSpaPorEntry=setLanbrSpaPorEntry, staLanInteMdi=staLanInteMdi, staIprouVrrpEveTable=staIprouVrrpEveTable, staWlanErrorsRetrie=staWlanErrorsRetrie, staWlanStatioConnec=staWlanStatioConnec, setIeee8RadLoo=setIeee8RadLoo, staIprouRipWansRxfi=staIprouRipWansRxfi, staTcpipRadiussAccoCompletedaccounTerminat=staTcpipRadiussAccoCompletedaccounTerminat, staWlanChannePulsec=staWlanChannePulsec, setWlanRadiusacceSecret=setWlanRadiusacceSecret, staIprouVrrpEveEve=staIprouVrrpEveEve, setPerfoRttmonaTyp=setPerfoRttmonaTyp, staWlanSeenclRxp=staWlanSeenclRxp, staQueueWanheap=staQueueWanheap, setInterWlaBeaconingBeaconp=setInterWlaBeaconingBeaconp, setLcr=setLcr, staIprouEstabliPro=staIprouEstabliPro, setWanScriptsEntry=setWanScriptsEntry, setTimeCur=setTimeCur, staIprouFilterlSrcn=staIprouFilterlSrcn, staIeee8=staIeee8, setIprouFirHostbTim=setIprouFirHostbTim, setTimeDstMon=setTimeDstMon, staDhcpcWanNbnsd=staDhcpcWanNbnsd, staLanIeeeSupIfc=staLanIeeeSupIfc, staDslRxerro=staDslRxerro, staPppLcpRxconfignak=staPppLcpRxconfignak, setEchosAccTable=setEchosAccTable, staWlanScanreNetwor=staWlanScanreNetwor, staCalliBch=staCalliBch, setIprouVrrVrrCom=setIprouVrrVrrCom, staWlanRadiosRadioband=staWlanRadiosRadioband, setConfi=setConfi, firTabInd=firTabInd, setInterWlaNetworkRad=setInterWlaNetworkRad, staLanErroSta=staLanErroSta, staConneErro=staConneErro, setLanbrProAction=setLanbrProAction, staTcpipArpTablCon=staTcpipArpTablCon, setAccou=setAccou, staMailDel=staMailDel, setNetbiGroEntry=setNetbiGroEntry, trpFwUplStart=trpFwUplStart, setIprouFirOpenpDstp=setIprouFirOpenpDstp, staTcpipTftpWanrxo=staTcpipTftpWanrxo, setAccouAccRxkby=setAccouAccRxkby, setIprouFirRulesPri=setIprouFirRulesPri, staWlanErrorsNicerr=staWlanErrorsNicerr, staWlanClientIptranAge=staWlanClientIptranAge, staWlanWlanpaSupportscompre=staWlanWlanpaSupportscompre, setIprouFirOpenpFilt=setIprouFirOpenpFilt, setTcpipNetwoTyp=setTcpipNetwoTyp, setNetbiHosTyp=setNetbiHosTyp, staWlanCompetLoad=staWlanCompetLoad)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", setInterWlaEncryptionWpar=setInterWlaEncryptionWpar, staCertiSceRasEntry=staCertiSceRasEntry, staIprouRipDynwPeer=staIprouRipDynwPeer, setDnsDnslEntry=setDnsDnslEntry, setPerfoRttmonsJitterminpossd=setPerfoRttmonsJitterminpossd, staTcpipTcpLanrx=staTcpipTcpLanrx, setIprouFirFilteDend=setIprouFirFilteDend, staWlanStatioRxlimi=staWlanStatioRxlimi, staIprouLanfilt=staIprouLanfilt, staWlanErrorsUndecr=staWlanErrorsUndecr, setIprou1nn=setIprou1nn, staIprouActiproIpa=staIprouActiproIpa, setInterWlaInterpointsIfc=setInterWlaInterpointsIfc, staLanbrAddBri=staLanbrAddBri, staHardwCpul=staHardwCpul, setNetbiSerPee=setNetbiSerPee, staIprouRipVrrpTable=staIprouRipVrrpTable, staIprouHostbloFil=staIprouHostbloFil, setTcpipLoopbNam=setTcpipLoopbNam, staTcpipNetbiosPeerBac=staTcpipNetbiosPeerBac, staHardwSeri=staHardwSeri, staIprouRipDynlRipa=staIprouRipDynlRipa, staConfiOutbandt=staConfiOutbandt, setVlanTag=setVlanTag, staRemotCharg=staRemotCharg, setInterUmtOpe=setInterUmtOpe, staChannCharg=staChannCharg, setNetbiOpe=setNetbiOpe, setInterWlaClientmodesTable=setInterWlaClientmodesTable, staWlanStatioKeytyp=staWlanStatioKeytyp, setIprouNnnSrcm=setIprouNnnSrcm, staDhcpcLanDomai=staDhcpcLanDomai, setInterModInitcom=setInterModInitcom, staWlanmNetworConti=staWlanmNetworConti, trpUplFailBadDev=trpUplFailBadDev, staTcpipHttpAgentlAcc=staTcpipHttpAgentlAcc, setWanBackuppHea=setWanBackuppHea, staDslRxbyte=staDslRxbyte, setLanIeee80SupTable=setLanIeee80SupTable, setPppoeOpe=setPppoeOpe, staLanbrPorOpe=staLanbrPorOpe, setDnsDnsdDes=setDnsDnsdDes, staWlanScanrePhysig=staWlanScanrePhysig, setConfiAccesstTelnets=setConfiAccesstTelnets, setPerfoRttmonaEntry=setPerfoRttmonaEntry, setMailPassw=setMailPassw, staIprouRipLansRipt=staIprouRipLansRipt, setIprouFirIdsac=setIprouFirIdsac, staTcpipRadiuscAuthenticRoundtrip=staTcpipRadiuscAuthenticRoundtrip, staWlanStatioInterf=staWlanStatioInterf, staDslDslolIpnetmas=staDslDslolIpnetmas, setIprouRipFilFil=setIprouRipFilFil, setIprouFirActioNam=setIprouFirActioNam, setPerfoRttmonsIndex=setPerfoRttmonsIndex, staTcpipIp=staTcpipIp, setConfiOutband=setConfiOutband, setCertiSceCerExtended=setCertiSceCerExtended, setTcpipOpera=setTcpipOpera, firVerMod=firVerMod, staIprouProtocoWan=staIprouProtocoWan, staLanbrSpaPorttabRoo=staLanbrSpaPorttabRoo, staWlanGroupeSour=staWlanGroupeSour, setPerfoRttmoneEntry=setPerfoRttmoneEntry, staCertiSceRasIsssnm=staCertiSceRasIsssnm, setWlanRadiusacceServeradd=setWlanRadiusacceServeradd, setHttpRolOperating=setHttpRolOperating, setInterModInitdia=setInterModInitdia, staTcpipHttpHttpau=staTcpipHttpHttpau, setIprouIprTable=setIprouIprTable, staIprouWanfilt=staIprouWanfilt, staDelet=staDelet, staPppIpcRxconfigack=staPppIpcRxconfigack, staWlanInterpKeyTsc=staWlanInterpKeyTsc, staWlanCompetNetwor=staWlanCompetNetwor, trpRoamed=trpRoamed, setNtpRqaEntry=setNtpRqaEntry, setConfiAdminsAdm=setConfiAdminsAdm, setEchosOpe=setEchosOpe, setWanActiontActio=setWanActiontActio, staIprouFilterlProt=staIprouFilterlProt, staWlanCompet40mhzi=staWlanCompet40mhzi, staWlanCompetInterp=staWlanCompetInterp, staWlanInterpAccBytest=staWlanInterpAccBytest, staPppPppIfc=staPppPppIfc, staWlanClientInterfIfc=staWlanClientInterfIfc, staTcpipNetbiosWanr=staTcpipNetbiosWanr, staQueueArpquer=staQueueArpquer, staWlanWlanpaNoiselevel=staWlanWlanpaNoiselevel, setWanRouteriMsn=setWanRouteriMsn, trpUplFailIncl=trpUplFailIncl, staAccouAccPeer=staAccouAccPeer, staPppTxoLcpMru=staPppTxoLcpMru, staDslPppoeTxpadi=staDslPppoeTxpadi, staTcpipDhcpRxdis=staTcpipDhcpRxdis, setNetbiHosEntry=setNetbiHosEntry, staWlanm=staWlanm, setAccouLasRxkby=setAccouLasRxkby, staTcpipIcmpLanc=staTcpipIcmpLanc, fir=fir, setWanLayerLay1=setWanLayerLay1, staTcpipIcmpLant=staTcpipIcmpLant, setTcpipArptaCon=setTcpipArptaCon, setDnsServPor=setDnsServPor, setNetbiHosTable=setNetbiHosTable, staWlanRadiosEirp=staWlanRadiosEirp, staPptpConState=staPptpConState, staTcpipDhcpServe=staTcpipDhcpServe, staTcpipArpDele=staTcpipArpDele, staWlanCompetRate=staWlanCompetRate, staConfiEventlogTable=staConfiEventlogTable, staVlanNetPor=staVlanNetPor, setInterWlaEncryptionDefa=setInterWlaEncryptionDefa, setIprou1nnIdspoofin=setIprou1nnIdspoofin, setIprouRipIprRtg=setIprouRipIprRtg, setWanDialuppTable=setWanDialuppTable, setIprouFirRulesAct=setIprouFirRulesAct, setMailHoldt=setMailHoldt, staPppPapRxreq=staPppPapRxreq, staPppoeConCha=staPppoeConCha, staTcpipTftpLanrxb=staTcpipTftpLanrxb, staTcpipRadiussAcceDeletevalues=staTcpipRadiussAcceDeletevalues, staPptpConMode=staPptpConMode, setWlanRadiusacceLoopbacka=setWlanRadiusacceLoopbacka, setVlan=setVlan, staLayerLay2=staLayerLay2, setDnsNetb=setDnsNetb, staTcpipTftpWantxa=staTcpipTftpWantxa, staPppTxoIpcIfc=staPppTxoIpcIfc, setNetbiHosIpa=setNetbiHosIpa, staPppCcpRxconfignak=staPppCcpRxconfignak, setSnmpRegister=setSnmpRegister, staIprouLannetw=staIprouLannetw, setWanIplistGatew=setWanIplistGatew, staTcpipRadiussAccoActiveaccountinTable=staTcpipRadiussAccoActiveaccountinTable, staTcpipIpLooperror=staTcpipIpLooperror, staChannPlci=staChannPlci, setRadiuServeEapRet=setRadiuServeEapRet, setLanbrProName=setLanbrProName, setPppoeNamSht=setPppoeNamSht, staWlanScanreRadiob=staWlanScanreRadiob, setCertiSceChe=setCertiSceChe, staAccouCurUsern=staAccouCurUsern, staTcpipDhcpNetwoBroadcasta=staTcpipDhcpNetwoBroadcasta, staWanThroughpuRxsc=staWanThroughpuRxsc, setAccouLasEntry=setAccouLasEntry, setCertiSceDev=setCertiSceDev, setLanbrSpaPro=setLanbrSpaPro, setTcpip=setTcpip, setAccouTimHour=setAccouTimHour, setIprouFirRulesRtg=setIprouFirRulesRtg, staTcpipTftpLanrxd=staTcpipTftpLanrxd, setDhcpAddOptionn=setDhcpAddOptionn, staLcr=staLcr, staDslDslolIpconfig=staDslDslolIpconfig, staWlanmLastwlTyp=staWlanmLastwlTyp, setRadiuServeDefaultreal=setRadiuServeDefaultreal, setLcrTimPre=setLcrTimPre, setIprouFirAppli=setIprouFirAppli, trpCl_AuthFail=trpCl_AuthFail, staWlanClientIptranTable=staWlanClientIptranTable, setIprouFirOpenpSrca=setIprouFirOpenpSrca, staWlanClientInterfBytesm=staWlanClientInterfBytesm, staTcpipRadiussAccoCompletedaccounNasporti=staTcpipRadiussAccoCompletedaccounNasporti, staTcpipSyslogLasTable=staTcpipSyslogLasTable, staCertiSceCasName=staCertiSceCasName, setConfiUpdatec=setConfiUpdatec, staIprouServiceKbytesrx=staIprouServiceKbytesrx, staWlanInterpKeySour=staWlanInterpKeySour, staUmtsm=staUmtsm, setIprou1nnIpsectablCo=setIprou1nnIpsectablCo, staPptpRxp=staPptpRxp, setNetbiBroTim=setNetbiBroTim, staPppCcpTxterminater=staPppCcpTxterminater, setNetbiSerNet=setNetbiSerNet, staMailBuf=staMailBuf, setSysloFacTable=setSysloFacTable, staPppRxoLcpEntry=staPppRxoLcpEntry, staPppChaTxret=staPppChaTxret, firTabPos=firTabPos, staTcpipTftpLantxd=staTcpipTftpLantxd, staDslTxpack=staDslTxpack, staPppPapTxret=staPppPapTxret, staPppRxoIpcIfc=staPppRxoIpcIfc, staWlanRadiosNoiselevel=staWlanRadiosNoiselevel, staWlanForeigMac=staWlanForeigMac, staConfiFeaturesExp=staConfiFeaturesExp, staDslPppoeTxpadt=staDslPppoeTxpadt, setWanActiontEntry=setWanActiontEntry, staWlanClientPppoeuEntry=staWlanClientPppoeuEntry, staInfocB1d=staInfocB1d, setTcpipLoopbTable=setTcpipLoopbTable, setIprouRipIprNet=setIprouRipIprNet, staTcpipTftpLanrx=staTcpipTftpLanrx, setRadiuServeUsersEntry=setRadiuServeUsersEntry, setConfiLoginer=setConfiLoginer, setRadiuServeEmptyrealm=setRadiuServeEmptyrealm, setTcpipAliveRetryc=setTcpipAliveRetryc, setAccouCurMacad=setAccouCurMacad, setConfiAdminge=setConfiAdminge, setSysloSerLev=setSysloSerLev, trpCl_AssocFail=trpCl_AssocFail, staWlanPacketIfc=staWlanPacketIfc, setNetbiPeeEntry=setNetbiPeeEntry, staWlanPacketRxu=staWlanPacketRxu, setWanLayerWanl=setWanLayerWanl, staPppIpcTxconfigreje=staPppIpcTxconfigreje, setInterDslTable=setInterDslTable, staIeee8StaPortm=staIeee8StaPortm, staWlanmRadiop24ghzmode=staWlanmRadiop24ghzmode, staLanbrSpaPorttabSta=staLanbrSpaPorttabSta, setTcpipNetwoRtg=setTcpipNetwoRtg, setChargTimetabEntry=setChargTimetabEntry, staDslPppoeTxprot=staDslPppoeTxprot, setIprouRipParRout=setIprouRipParRout, setIprouFirConneRtgt=setIprouFirConneRtgt, staTcpipNetbiosMnod=staTcpipNetbiosMnod, staWlanClientIptranEntry=staWlanClientIptranEntry, staTcpipRadiussAccoClientsIpaddress=staTcpipRadiussAccoClientsIpaddress, staConfiEventlogAcces=staConfiEventlogAcces, staQueueDnstxqu=staQueueDnstxqu, staWlanmGserverlVersion=staWlanmGserverlVersion, setDhcpDhcTim=setDhcpDhcTim, setSnmp=setSnmp, setConfiUpdatecServerp=setConfiUpdatecServerp, setWanActiontCondi=setWanActiontCondi, staTcpipRadiuscAuthenticTimeouts=staTcpipRadiuscAuthenticTimeouts, staAccouTimSys=staAccouTimSys, setWanRadiusClipo=setWanRadiusClipo, staIprouFilterlSrca=staIprouFilterlSrca, setConfiCrontabMinu=setConfiCrontabMinu, setWlanSignalaverMet=setWlanSignalaverMet, setTcpipArpag=setTcpipArpag, setIeee8RadSec=setIeee8RadSec, setWanIplistPeer=setWanIplistPeer, staTcpipHttpActiveRemotea=staTcpipHttpActiveRemotea, setNetbiGroNet=setNetbiGroNet, setInterWlaNetworkEntry=setInterWlaNetworkEntry, setWlanmStaIpa=setWlanmStaIpa, staIprouConnectTime=staIprouConnectTime, staTcpipRadiuscAuthenticAccessrej=staTcpipRadiuscAuthenticAccessrej, staWlanInterp=staWlanInterp, setInterWlaInterpointpEntry=setInterWlaInterpointpEntry, staWlanErrorsTxerro=staWlanErrorsTxerro, staTcpipDhcpNetwoServerflag=staTcpipDhcpNetwoServerflag, staTcpipRadiussAccoCompletedaccounEntry=staTcpipRadiussAccoCompletedaccounEntry, staRemotConns=staRemotConns, staTcpipRadiussAccoActiveaccountinOutputpa=staTcpipRadiussAccoActiveaccountinOutputpa, staWlanmLastwlTable=staWlanmLastwlTable, setIprouRipIprDis=setIprouRipIprDis, setSysloSerIdx=setSysloSerIdx, staDhcpcLanDnsde=staDhcpcLanDnsde, setWlanRadiusaccoLoopbacka=setWlanRadiusaccoLoopbacka, staPptpConPeera=staPptpConPeera, staTcpipNetbiosNetwEntry=staTcpipNetbiosNetwEntry)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", setHttpRolRenumbera=setHttpRolRenumbera, staPppCcpTxterminatea=staPppCcpTxterminatea, staWlanmNetworMaxst=staWlanmNetworMaxst, setWlanNoiseoffseCha=setWlanNoiseoffseCha, setWlanSignalaverFil=setWlanSignalaverFil, staDslPppoeAcname=staDslPppoeAcname, staWlanErrorsIfc=staWlanErrorsIfc, staWlanWlanpaEntry=staWlanWlanpaEntry, setSysloSerSou=setSysloSerSou, staCertiSceRasName=staCertiSceRasName, setTcpipNetwoEntry=setTcpipNetwoEntry, staWlanClientInterfMaxthr=staWlanClientInterfMaxthr, staTcpipDnsDhcp=staTcpipDnsDhcp, staWlanPacketTxu=staWlanPacketTxu, setConfiCrontabDay=setConfiCrontabDay, staWlanScanreOperat=staWlanScanreOperat, setNetbiNetEntry=setNetbiNetEntry, staTcpipNetbiosPeerTable=staTcpipNetbiosPeerTable, setWlanNoiseimmun=setWlanNoiseimmun, setWlanNoiseoffseBan=setWlanNoiseoffseBan, staIprouRipLansRtgt=staIprouRipLansRtgt, staIprouLogtablActi=staIprouLogtablActi, staPppTxoIpcIpadd=staPppTxoIpcIpadd, staUmtsmDat=staUmtsmDat, othManDis=othManDis, staQueueLanheap=staQueueLanheap, setWanPollingTime=setWanPollingTime, staWanActionsActTable=staWanActionsActTable, staIprouConnectFlag=staIprouConnectFlag, setIprouFirHostbSrc=setIprouFirHostbSrc, setWanPppFai=setWanPppFai, staWlanScanre40mhzi=staWlanScanre40mhzi, staLanbrAddTable=staLanbrAddTable, setInterWlaClientmodesClb=setInterWlaClientmodesClb, staIprouVrrpEveSys=staIprouVrrpEveSys, trpAuthStation=trpAuthStation, staCertiSceRasIdx=staCertiSceRasIdx, setDhcpDhcTyp=setDhcpDhcTyp, setNetbiSerHos=setNetbiSerHos, staTcpipArpLant=staTcpipArpLant, staWanThroughpuIfc=staWanThroughpuIfc, setNetbiWat=setNetbiWat, setIprouRipWanEntry=setIprouRipWanEntry, setNetbi=setNetbi, setInterWlaEncryptionEncr=setInterWlaEncryptionEncr, staIprouPortbloDsta=staIprouPortbloDsta, staHardwPcidEntry=staHardwPcidEntry, staTcpipDhcpDhcptMac=staTcpipDhcpDhcptMac, staQueue=staQueue, setDnsDynaEntry=setDnsDynaEntry, staHardwPcidDevice=staHardwPcidDevice, staIprouFilterlTable=staIprouFilterlTable, setWanIplistEntry=setWanIplistEntry, setInterWlaGroupencrypEntry=setInterWlaGroupencrypEntry, staIprouRipDynwRipt=staIprouRipDynwRipt, staWanThroughpuTable=staWanThroughpuTable, staWlanInterpAccRxbyte=staWlanInterpAccRxbyte, setIprouFirConneDest=setIprouFirConneDest, setTcpipNbnsb=setTcpipNbnsb, setCertiSceCle=setCertiSceCle, staWlanChanneInterf=staWlanChanneInterf, staIprouRipDynlRtgt=staIprouRipDynlRtgt, staTcpipNetbiosLanr=staTcpipNetbiosLanr, setWanRoundroRou=setWanRoundroRou, staConneActi=staConneActi, staTcpipRadiussAccoTotalaccountunk=staTcpipRadiussAccoTotalaccountunk, setDnsReso=setDnsReso, staTcpipTftpLantxo=staTcpipTftpLantxo, staWlanStatioEntry=staWlanStatioEntry, setMailPop3p=setMailPop3p, trpHTTP_Tunnel_Close=trpHTTP_Tunnel_Close, staPppLcpRxconfigreje=staPppLcpRxconfigreje, setConfiMaximum=setConfiMaximum, staCalliCli=staCalliCli, staWlanWlanpaRadioband=staWlanWlanpaRadioband, staLanbrSpaRstpporEntry=staLanbrSpaRstpporEntry, staWlanmApconnPrio=staWlanmApconnPrio, setSnmpMonitortTable=setSnmpMonitortTable, staIprouHoconnlEntry=staIprouHoconnlEntry, staTcpipDhcpNetwoServerid=staTcpipDhcpNetwoServerid, staPppPapRxfai=staPppPapRxfai, staIprouServicePackettx=staIprouServicePackettx, staPptpEch=staPptpEch, setInterWlaGroupencrypIfc=setInterWlaGroupencrypIfc, staWlanNetworNum=staWlanNetworNum, staVlanPorPor=staVlanPorPor, staPppCcpTxconfignak=staPppCcpTxconfignak, staWlanScanreNonerp=staWlanScanreNonerp, staTcpipArpTablVla=staTcpipArpTablVla, staCertiSceCertsSubjecta=staCertiSceCertsSubjecta, staPppChaTxsuc=staPppChaTxsuc, setVlanNetPor=setVlanNetPor, setSnmpIptrapsTable=setSnmpIptrapsTable, staWlanBytetrTxbyte=staWlanBytetrTxbyte, staChargRouters=staChargRouters, setIprouFirFilteEntry=setIprouFirFilteEntry, setWlanAccesslistTxl=setWlanAccesslistTxl, setPerfoRttmonePacketcount=setPerfoRttmonePacketcount, staWanActionsActRes=staWanActionsActRes, setConfiUpdatecLastcon=setConfiUpdatecLastcon, setWanActiontCheck=setWanActiontCheck, setChargDslbroa=setChargDslbroa, staWlanmRadiomRadioc=staWlanmRadiomRadioc, setIeee8PorTxperio=setIeee8PorTxperio, setConfiSshauthMet=setConfiSshauthMet, staWlanRadiusEntry=staWlanRadiusEntry, staWlanInterpAccTxpack=staWlanInterpAccTxpack, setLanbrSpaPorPor=setLanbrSpaPorPor, staTcpipArpLane=staTcpipArpLane, firTabSta=firTabSta, setWanManualdDis=setWanManualdDis, setIprouFir=setIprouFir, staWlanmNetworKey=staWlanmNetworKey, setHttpRolVariablesDef=setHttpRolVariablesDef, setSyslo=setSyslo, setRadiuServeUsersPas=setRadiuServeUsersPas, staIprouRipFiltTyp=staIprouRipFiltTyp, setAccouOpe=setAccouOpe, setVlanNetEntry=setVlanNetEntry, firMod=firMod, staWlanScanrePcffun=staWlanScanrePcffun, staChargTimetabMinutesa=staChargTimetabMinutesa, setCertiSceCasEntry=setCertiSceCasEntry, staIprouRipRequ=staIprouRipRequ, staWanPackettraTxu=staWanPackettraTxu, staChannConns=staChannConns, staPptpConPhysc=staPptpConPhysc, staTcpipRadiussAcceTotalaccessdro=staTcpipRadiussAcceTotalaccessdro, setIprouFirOpenpTime=setIprouFirOpenpTime, staWlanmNetworBasic=staWlanmNetworBasic, setDnsDynaTable=setDnsDynaTable, setWanBackuppAlt=setWanBackuppAlt, setAccouLasMacad=setAccouLasMacad, staWanErrorsRxl2=staWanErrorsRxl2, setInterWlaRadiosettinRadiochannel=setInterWlaRadiosettinRadiochannel, setIprouDefPee=setIprouDefPee, setPerfoRttmonaSta=setPerfoRttmonaSta, staPppRxoIpcEntry=staPppRxoIpcEntry, staWlanmApconnPort=staWlanmApconnPort, staIprouPortbloDstp=staIprouPortbloDstp, staWanErrorsTxer=staWanErrorsTxer, setRadiuServeEapTun=setRadiuServeEapTun, setDnsDyndTim=setDnsDyndTim, staWlanmApconnStat=staWlanmApconnStat, setInterWlaPerformanceQos=setInterWlaPerformanceQos, staTcpipDhcpRxinf=staTcpipDhcpRxinf, staTcpipRadiussAcceTotalmalformed=staTcpipRadiussAcceTotalmalformed, staWlanBytetrRxbyte=staWlanBytetrRxbyte, setIprouFirAppliFtpMin=setIprouFirAppliFtpMin, setSnmpMonitortPor=setSnmpMonitortPor, setIeee8RadPro=setIeee8RadPro, staWlanInterpAccKeyhan=staWlanInterpAccKeyhan, setWlanRadiusacceBackupaut=setWlanRadiusacceBackupaut, setNtpSer=setNtpSer, staTcpipRadiussAccoClientsMalformeda=staTcpipRadiussAccoClientsMalformeda, staTcpipIpLanserviceerrors=staTcpipIpLanserviceerrors, staTcpipTftpLantxr=staTcpipTftpLantxr, staTcpipRadiuscAccountinMalformedacco=staTcpipRadiuscAccountinMalformedacco, setHttpRolActionsEntry=setHttpRolActionsEntry, setRadiuServeAccountingp=setRadiuServeAccountingp, staTcpipNetworkVla=staTcpipNetworkVla, staIprouRipTx=staIprouRipTx, staTcpipRadiussAccoActiveaccountinNasident=staTcpipRadiussAccoActiveaccountinNasident, setLanIeee80SupEntry=setLanIeee80SupEntry, setTcpipLoopbLoo=setTcpipLoopbLoo, setLanbrSpa=setLanbrSpa, setLanbrSpaMax=setLanbrSpaMax, staPppCcpTxresetack=staPppCcpTxresetack, staCalliDia=staCalliDia, setConfiCrontabHour=setConfiCrontabHour, staTcpipNetbiosTime=staTcpipNetbiosTime, staTcpipRadiussAccoActiveaccountinInputoct=staTcpipRadiussAccoActiveaccountinInputoct, staTcpipNetworkInt=staTcpipNetworkInt, staWlanClientInterfClbrgs=staWlanClientInterfClbrgs, setLanbrEncPro=setLanbrEncPro, staTcpipSyslog=staTcpipSyslog, setIprouRip=setIprouRip, setPppoeSes=setPppoeSes, setChargTimetabIfc=setChargTimetabIfc, staPppPap=staPppPap, setTcpipAccesIpa=setTcpipAccesIpa, staTcpipDnsLanr=staTcpipDnsLanr, staTcpipRadiussAccoCompletedaccounSessioni=staTcpipRadiussAccoCompletedaccounSessioni, staTcpipIcmpWans=staTcpipIcmpWans, staTcpipRadiussAccoClientsAccountnor=staTcpipRadiussAccoClientsAccountnor, staWlanCompetRadiob=staWlanCompetRadiob, staWlanInterpAccAntenn=staWlanInterpAccAntenn, staTcpipDhcpDisca=staTcpipDhcpDisca, setAccouAccTable=setAccouAccTable, staWlanPacketTable=staWlanPacketTable, staTcpipRadiussAccoClientsAccountres=staTcpipRadiussAccoClientsAccountres, setDhcpNetBroadcastb=setDhcpNetBroadcastb, setIprouFirHostbEntry=setIprouFirHostbEntry, staPppLcpDeletevalues=staPppLcpDeletevalues, staWlanCompet40mhzm=staWlanCompet40mhzm, setIprouFirPortbTable=setIprouFirPortbTable, setWlanRadarpatteEntry=setWlanRadarpatteEntry, staWlanClientPppoeiAge=staWlanClientPppoeiAge, staChannChan=staChannChan, staPptpDel=staPptpDel, staTcpipDhcpTxnak=staTcpipDhcpTxnak, staHardwPcidTable=staHardwPcidTable, setIeee8PorServert=setIeee8PorServert, staPppCcpRxcodereject=staPppCcpRxcodereject, setPerfoRttmonsJittersumpossd=setPerfoRttmonsJittersumpossd, staPppPapTxsuc=staPppPapTxsuc, setPerfoRttmonaTable=setPerfoRttmonaTable, staConfiFeaturesTable=staConfiFeaturesTable, setAccouAccTxkby=setAccouAccTxkby, staWlanInterpAccThroug=staWlanInterpAccThroug, staTcpipRadiuscAccountinPendingreques=staTcpipRadiuscAccountinPendingreques, staTcpipTftpLanrxr=staTcpipTftpLanrxr, setDhcpNetStartaddre=setDhcpNetStartaddre, staDhcpcLanNbnsd=staDhcpcLanNbnsd, setIprou1nnTcpagings=setIprou1nnTcpagings, setDnsFiltDom=setDnsFiltDom, staCertiSceRasSubjec=staCertiSceRasSubjec, trpBssStart=trpBssStart, staTcpipDhcpAssig=staTcpipDhcpAssig, setIprou1nnIpsectablLchi=setIprou1nnIpsectablLchi, setEchos=setEchos, staTcpipDnsDnsa=staTcpipDnsDnsa, staWlanClientInterfIdenti=staWlanClientInterfIdenti, setIprouRouL3l=setIprouRouL3l, setConfiUpdatecServern=setConfiUpdatecServern, staAccouLasTxkby=staAccouLasTxkby, staWlanmRadiopQos=staWlanmRadiopQos, staTcpipTcpLanche=staTcpipTcpLanche, setTcpipNetwoSrc=setTcpipNetwoSrc, setWlanRadiusaccoProtocol=setWlanRadiusaccoProtocol, staTcpipDnsWanr=staTcpipDnsWanr, staConfiEventlogIpadd=staConfiEventlogIpadd, setIprouRouSyn=setIprouRouSyn, setInterWlaClientmodesPre=setInterWlaClientmodesPre, staCalliEntry=staCalliEntry, staIprouRipRx=staIprouRipRx, setConfiCrontabOwne=setConfiCrontabOwne, setConfiCrontabVari=setConfiCrontabVari, setMailBuffe=setMailBuffe, setDhcpNetDnsbackup=setDhcpNetDnsbackup, setInterWlaRadiosettinIfc=setInterWlaRadiosettinIfc, staDsl=staDsl, staTcpipDhcpNetwoEndaddress=staTcpipDhcpNetwoEndaddress, setWanRoundroTable=setWanRoundroTable, setSnmpMonitortIpa=setSnmpMonitortIpa, staLanByteRxbyte=staLanByteRxbyte, staAccouTimEntry=staAccouTimEntry, setIprouVrrAdv=setIprouVrrAdv, setIprouFirConneDstp=setIprouFirConneDstp, staCertiSceCertsSubject=staCertiSceCertsSubject, setWanIplistIpnet=setWanIplistIpnet, setCertiSce=setCertiSce, setLanbrPorDhc=setLanbrPorDhc, setLanbrProRedire=setLanbrProRedire)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", setRadiuServeUsersUse=setRadiuServeUsersUse, firTabTable=firTabTable, setNetbiSco=setNetbiSco, staWlanmApconnEntry=staWlanmApconnEntry, setWlanRadiusaccoClientbrg=setWlanRadiusaccoClientbrg, setIprouRipIprGat=setIprouRipIprGat, setInterWlaInterpointpIfc=setInterWlaInterpointpIfc, staChargTimetabBudgetmi=staChargTimetabBudgetmi, staWlanmNetworTable=staWlanmNetworTable, staWlanClient=staWlanClient, setIprouIprEntry=setIprouIprEntry, firVerTable=firVerTable, staIprouRipIpriTim=staIprouRipIpriTim, setIprouVrrVrrPee=setIprouVrrVrrPee, staHardwBoar=staHardwBoar, staLanByteTable=staLanByteTable, staWlanErrorsQueuee=staWlanErrorsQueuee, staWlanClientPppoeuTable=staWlanClientPppoeuTable, staIprouRipLansEntry=staIprouRipLansEntry, setDhcpNetNetworknam=setDhcpNetNetworknam, setIprouDefTable=setIprouDefTable, staWlanStatioMaxthr=staWlanStatioMaxthr, setPerfoRttmonsAveragejittersd=setPerfoRttmonsAveragejittersd, staIprouLogtablEntry=staIprouLogtablEntry, setChargRouterd=setChargRouterd, setWlanRadiusacceProtocol=setWlanRadiusacceProtocol, setInterWlaTransmissioPack=setInterWlaTransmissioPack, staLanbrSpaRstpporTable=staLanbrSpaRstpporTable, staPptpConDnsde=staPptpConDnsde, setIprouRouIcm=setIprouRouIcm, staPppCcpRxterminater=staPppCcpRxterminater, staPppCcpTxconfigack=staPppCcpTxconfigack, staTcpipRadiussAcceTotalaccessreq=staTcpipRadiussAcceTotalaccessreq, staTcpipRadiuscAccountinBadauthentica=staTcpipRadiuscAccountinBadauthentica, staLanbrConTable=staLanbrConTable, setSnmpMonitortLan=setSnmpMonitortLan, staWlanClientInterfAid=staWlanClientInterfAid, staTcpipDhcpDhcptTyp=staTcpipDhcpDhcptTyp, setSnmpMonitortPee=setSnmpMonitortPee, staLanbrSpaPorttabPri=staLanbrSpaPorttabPri, staCertiSceCertsIsssnmp=staCertiSceCertsIsssnmp, setSysloOpe=setSysloOpe, setIprouFirRulesTable=setIprouFirRulesTable, staTcpipRadiussAcceTotalinvalidac=staTcpipRadiussAcceTotalinvalidac, staTcpipRadiussAccoActiveaccountinLastupda=staTcpipRadiussAccoActiveaccountinLastupda, staWlanInterpAccRxrate=staWlanInterpAccRxrate, setWlanmLog=setWlanmLog, staWlanPacketRxp=staWlanPacketRxp, staWlanClientIptranMac=staWlanClientIptranMac, setWanPollingIpaddress1=setWanPollingIpaddress1, setIprouFirFilteDst=setIprouFirFilteDst, staWlanInterfIfc=staWlanInterfIfc, setInterModEscapep=setInterModEscapep, staDslDslolIpnetwor=staDslDslolIpnetwor, setWlanIndooronly=setWlanIndooronly, setPerfoRttmonsJittercountnegs=setPerfoRttmonsJittercountnegs, setNetbiBroGro=setNetbiBroGro, setInterWlaInterpointsEntry=setInterWlaInterpointsEntry, staWlanInterfOperatin=staWlanInterfOperatin, setAccouTimActi=setAccouTimActi, trapgrp=trapgrp, staLanbrSpaRstpporDes=staLanbrSpaRstpporDes, setWanRadiusSecre=setWanRadiusSecre, setWanManuald=setWanManuald, staConneTable=staConneTable, staLanbrSpaRootpor=staLanbrSpaRootpor, setIprouFirRulesSou=setIprouFirRulesSou, setWlanAccessmode=setWlanAccessmode, staLanbrDhcPor=staLanbrDhcPor, setInterWlaEncryptionWpav=setInterWlaEncryptionWpav, staWlanmNetwor11bpr=staWlanmNetwor11bpr, staWlanGroupeKeyv=staWlanGroupeKeyv, staLanbrSpaPorttabPat=staLanbrSpaPorttabPat, setNetbiHosFla=setNetbiHosFla, setIprouRipParHold=setIprouRipParHold, setIeee8PorKeytxin=setIeee8PorKeytxin, setSnmpComment3=setSnmpComment3, staAccouCurTotal=staAccouCurTotal, setWanIncominTable=setWanIncominTable, setInterMod=setInterMod, staIprouRipDynlDftr=staIprouRipDynlDftr, setIprouRipLanNetw=setIprouRipLanNetw, staWlanClientInterfRxbyte=staWlanClientInterfRxbyte, staSnmpEveEntry=staSnmpEveEntry, staPppRxoLcpAut=staPppRxoLcpAut, setInterWlaTransmissioMaxt=setInterWlaTransmissioMaxt, staWlanmNetworRadio=staWlanmNetworRadio, staIeee8StaSessi=staIeee8StaSessi, setDnsOper=setDnsOper, setSnmpDeletemo=setSnmpDeletemo, setIprouRipLanTable=setIprouRipLanTable, staIprouConnectFilt=staIprouConnectFilt, staTcpipIcmpDele=staTcpipIcmpDele, staTimeDay=staTimeDay, setIprouFirAppliFtpFxp=setIprouFirAppliFtpFxp, setWanIncominDia=setWanIncominDia, staTcpipRadiussAccoActiveaccountinEntry=staTcpipRadiussAccoActiveaccountinEntry, setIprouRipFilNam=setIprouRipFilNam, setIprou1nnTable1nnaRem=setIprou1nnTable1nnaRem, staTcpipHttpActiveLocalpo=staTcpipHttpActiveLocalpo, staTcpipDnsHitlTable=staTcpipDnsHitlTable, staIprouLanttle=staIprouLanttle, staIprouRipDynwTable=staIprouRipDynwTable, setInterWlaNetworkMax=setInterWlaNetworkMax, staTcpipNetbiosNetwVla=staTcpipNetbiosNetwVla, setWanLayerEnca=setWanLayerEnca, staPppLcpTxconfigreje=staPppLcpTxconfigreje, setWanPppRig=setWanPppRig, staWlanInterpAccWpaver=staWlanInterpAccWpaver, staIprouRipDynlTable=staIprouRipDynlTable, staWlanmLastwlPor=staWlanmLastwlPor, staTcpipRadiussAccoClientsUnknowntyp=staTcpipRadiussAccoClientsUnknowntyp, setConfiWlancon=setConfiWlancon, staWlanmLastwlRou=staWlanmLastwlRou, setTimeFet=setTimeFet, staLanbrSpaProtoco=staLanbrSpaProtoco, staWlanScanreMaxams=staWlanScanreMaxams, staWlanCompetCompre=staWlanCompetCompre, setIprouFirFilteDstn=setIprouFirFilteDstn, setWlanRadiusaccoBackupacc=setWlanRadiusaccoBackupacc, staWlanInterfEntry=staWlanInterfEntry, staPppCcpTxcodereject=staPppCcpTxcodereject, staTcpipNetbiosLant=staTcpipNetbiosLant, staRemotRemot=staRemotRemot, firTabEntry=firTabEntry, staWanActionsLocInd=staWanActionsLocInd, staIprouVrrpErr=staIprouVrrpErr, setWlanIappannoun=setWlanIappannoun, staWlanBytetrBytest=staWlanBytetrBytest, staWlanWlanpa108mbpsmode=staWlanWlanpa108mbpsmode, setChargRouters=setChargRouters, setChargSerialm=setChargSerialm, staQueueDhcpcli=staQueueDhcpcli, setSnmpComment4=setSnmpComment4, staWlanIapptaCapab=staWlanIapptaCapab, staUmtsmOpe=staUmtsmOpe, setNtpC0=setNtpC0, setWlanRadiusacce=setWlanRadiusacce, staIprouRipWansTxfi=staIprouRipWansTxfi, setDnsDyndHos=setDnsDyndHos, setIprouFirConneTable=setIprouFirConneTable, staIprouRipDynlEntry=staIprouRipDynlEntry, setWanRadiusOpera=setWanRadiusOpera, setPerfoRttmonsPacketlosssd=setPerfoRttmonsPacketlosssd, setWlanRadiusacceBackuploo=setWlanRadiusacceBackuploo, setDhcpHosIma=setDhcpHosIma, staWlanStatioState=staWlanStatioState, staWanPackettraEntry=staWanPackettraEntry, setWlanRadiusacceBackupsec=setWlanRadiusacceBackupsec, setInterWlaTransmissioRtst=setInterWlaTransmissioRtst, staTcpipDnsDele=staTcpipDnsDele, setIprouFirObjecDes=setIprouFirObjecDes, staWlanScanreMaxamp=staWlanScanreMaxamp, staWlanWlanpaWepsupport=staWlanWlanpaWepsupport, staPppoeConSta=staPppoeConSta, staLcrProTable=staLcrProTable, staTcpipRadiussAcceClientsBadauthen=staTcpipRadiussAcceClientsBadauthen, setNetbiWan=setNetbiWan, setInterWlaInterpointsKey=setInterWlaInterpointsKey, setWlanAccesslistVla=setWlanAccesslistVla, staLanErroRxe=staLanErroRxe, setSysloSerTable=setSysloSerTable, staWlanmGserverlIpaddress=staWlanmGserverlIpaddress, staPppRxoIpcIpadd=staPppRxoIpcIpadd, staTcpipRadiussLogtEntry=staTcpipRadiussLogtEntry, setHttpFon=setHttpFon, setIprouFirFilteSst=setIprouFirFilteSst, staWlanRadiusAll=staWlanRadiusAll, setSnmpComment1=setSnmpComment1, setIeee8PorReauthi=setIeee8PorReauthi, firTabSiz=firTabSiz, staTcpipRadiussAccoActiveaccountinIndex=staTcpipRadiussAccoActiveaccountinIndex, staIprouVrrpVirNet=staIprouVrrpVirNet, setWanPollingTable=setWanPollingTable, setDhcp=setDhcp, setIprouDefDay=setIprouDefDay, staLanbrSpaPorttabEntry=staLanbrSpaPorttabEntry, setIprouNnnEntry=setIprouNnnEntry, setNetbiPeeTyp=setNetbiPeeTyp, staVlan=staVlan, setCharg=setCharg, setIprou1nnIpsectablRchi=setIprou1nnIpsectablRchi, trpStatChan=trpStatChan, setHttpUse=setHttpUse, staWlanPairwiRsc=staWlanPairwiRsc, staPppPapRxdis=staPppPapRxdis, staWlanmRadiopIndooronl=staWlanmRadiopIndooronl, setTimeGet=setTimeGet, setIprouFirAppliFtpAct=setIprouFirAppliFtpAct, staWanBytetransTxb=staWanBytetransTxb, staWlan=staWlan, staIprouRipWansDftr=staIprouRipWansDftr, setIprouRipLanDftr=setIprouRipLanDftr, staWlanScanreAge=staWlanScanreAge, staLanbrSpaPorttabDes=staLanbrSpaPorttabDes, setIprou1nnTable1nnaTim=setIprou1nnTable1nnaTim, setDhcpNetMasterserv=setDhcpNetMasterserv, staWlanStatioIndex=staWlanStatioIndex, setIprouEnd=setIprouEnd, staWlanmRadiomRadiom=staWlanmRadiomRadiom, staCertiSceCertsExpires=staCertiSceCertsExpires, setCertiSceCasLoopbackaddr=setCertiSceCasLoopbackaddr, trpAssRej=trpAssRej, setIprouFirAppliApp=setIprouFirAppliApp, staTcpipNetworkSrc=staTcpipNetworkSrc, setAccouCurTotal=setAccouCurTotal, staTcpipSyslogLasMes=staTcpipSyslogLasMes, setIprouRipIprTim=setIprouRipIprTim, setInterModAtpollc=setInterModAtpollc, setInterUmtDat=setInterUmtDat, setSysloFacEntry=setSysloFacEntry, staCertiSceCasKeyusa=staCertiSceCasKeyusa, setIeee8RadTable=setIeee8RadTable, setLanbrSpaBri=setLanbrSpaBri, staWlanWlanpaMaximumrate=staWlanWlanpaMaximumrate, setRadiuServeEapRea=setRadiuServeEapRea, staWlanClientPppoeiEntry=staWlanClientPppoeiEntry, staWlanCompetSignal=staWlanCompetSignal, setWanRouteriCli=setWanRouteriCli, setTcpipNetwoIpn=setTcpipNetwoIpn, setInterLanTable=setInterLanTable, staWlanWlanpaEirp=staWlanWlanpaEirp, staCertiSceCasMd5fin=staCertiSceCasMd5fin, staIprouVrrpVirBac=staIprouVrrpVirBac, staAccouAccConnt=staAccouAccConnt, setIprouFirAppliIrcDdc=setIprouFirAppliIrcDdc, staWlanSeenclInt=staWlanSeenclInt, firVerVer=firVerVer, staDhcpcWanDnsba=staDhcpcWanDnsba, staQueueDhcpser=staQueueDhcpser, setPerfoRttmonsJittermaxposds=setPerfoRttmonsJittermaxposds, setIprouSta=setIprouSta, staIprouRipIpriEntry=staIprouRipIpriEntry, staConfiScanresuHttps=staConfiScanresuHttps, staWlanCompetOperat=staWlanCompetOperat, staIprouFilterlActi=staIprouFilterlActi, setConfiMonitorTracemask1=setConfiMonitorTracemask1, staConfiOutbandb=staConfiOutbandb, staSnmpEveVen=staSnmpEveVen, staInfocB2d=staInfocB2d, staIprouServiceKbytesre=staIprouServiceKbytesre, setLanbrEncTable=setLanbrEncTable, setInterWlaBeaconingIfc=setInterWlaBeaconingIfc, staLanbrConDestpor=staLanbrConDestpor, setDhcpUse=setDhcpUse, staIprouVrrpMacRou=staIprouVrrpMacRou, setWanDslbroaSer=setWanDslbroaSer, setTcpipNetwoNet=setTcpipNetwoNet, setWanCallbac=setWanCallbac, setInterWlaRoamingIfc=setInterWlaRoamingIfc, setDnsDyndIpa=setDnsDyndIpa, staWlanStatioMacche=staWlanStatioMacche, setInterWlaTransmissioTable=setInterWlaTransmissioTable, traps=traps)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staWlanDelete=staWlanDelete, staTcpipIcmpWanr=staTcpipIcmpWanr, setInterModRingcou=setInterModRingcou, staIprouArperro=staIprouArperro, staIprouRipIpriGat=staIprouRipIpriGat, setConfiAdminsAcc=setConfiAdminsAcc, staLanbrAddBrg=staLanbrAddBrg, setAccouTimEntry=setAccouTimEntry, staWlanBytetrEntry=staWlanBytetrEntry, staIprouHoconnlTable=staIprouHoconnlTable, staWlanIapptaTimeo=staWlanIapptaTimeo, setRadiuServe=setRadiuServe, staIprouRipVrrpRou=staIprouRipVrrpRou, setInterWlaRoamingNoroamingth=setInterWlaRoamingNoroamingth, staPptpConEntry=staPptpConEntry, setPerfoRttmonsAveragejitter=setPerfoRttmonsAveragejitter, staTcpipDnsNetb=staTcpipDnsNetb, setIeee8PorMaxreq=setIeee8PorMaxreq, setInterWlaRadiosettinApdensity=setInterWlaRadiosettinApdensity, staTcpipDnsFilt=staTcpipDnsFilt, staWan=staWan, staIprouVrrpVirMas=staIprouVrrpVirMas, setNetbiSerRtg=setNetbiSerRtg, staPppIpcRxterminater=staPppIpcRxterminater, staConfiScanresuCapip=staConfiScanresuCapip, staPppIpcRxconfignak=staPppIpcRxconfignak, staRemotEntry=staRemotEntry, setWlanRadiusacceBackuppro=setWlanRadiusacceBackuppro, setWanPppPee=setWanPppPee, setLanbrSpaPorTable=setLanbrSpaPorTable, staIprouQosUpstr=staIprouQosUpstr, staDhcpcWanIpadd=staDhcpcWanIpadd, staTcpipTftpLantx=staTcpipTftpLantx, setLanbrSpaTra=setLanbrSpaTra, setInterWlaGroupencrypKey4=setInterWlaGroupencrypKey4, staWlanIapptaEntry=staWlanIapptaEntry, staIprouOpenporSrca=staIprouOpenporSrca, setEchosAccEntry=setEchosAccEntry, firVerEntry=firVerEntry, staTcpipDnsHitlReq=staTcpipDnsHitlReq, setLanbrSpaOpe=setLanbrSpaOpe, setInterModDisconn=setInterModDisconn, setPppoePorTable=setPppoePorTable, setIeee8=setIeee8, staTcpipRadiussAcceClientsAccessacc=staTcpipRadiussAcceClientsAccessacc, staHardwPcidIndex=staHardwPcidIndex, staWlanCompetMaxamp=staWlanCompetMaxamp, staTimeDstEve=staTimeDstEve, staWlanRadios108mbpsmode=staWlanRadios108mbpsmode, setWlanInterstati=setWlanInterstati, staWlanGroupeTable=staWlanGroupeTable, staDslPppoeRxpado=staDslPppoeRxpado, staDslPppoeTxdata=staDslPppoeTxdata, setNetbiBroOsv=setNetbiBroOsv, setInterWlaClientmodesRxl=setInterWlaClientmodesRxl, staWlanCompetBssid=staWlanCompetBssid, staPppoeNum=staPppoeNum, setTcpipArptaVla=setTcpipArptaVla, setWanLayerEntry=setWanLayerEntry, staWanActionsActTim=staWanActionsActTim, staTcpipRadiuscAuthenticDropped=staTcpipRadiuscAuthenticDropped, setWanDialuppB2d=setWanDialuppB2d, setWanIncominPee=setWanIncominPee, staWlanmGserverlEntry=staWlanmGserverlEntry, staPppTxoIpcDnsba=staPppTxoIpcDnsba, setIprou1nnIpsectablLocalsp=setIprou1nnIpsectablLocalsp, setPerfoRttmonsRttcount=setPerfoRttmonsRttcount, staLanbrConDestadd=staLanbrConDestadd, staTcpipTftpWanrxe=staTcpipTftpWanrxe, staIprouVrrpVirVir=staIprouVrrpVirVir, setInterWlaClientmodesAdd=setInterWlaClientmodesAdd, staWlanScanre40mhzm=staWlanScanre40mhzm, staLayerEnca=staLayerEnca, setTimeDstDay=setTimeDstDay, setRadiuServeForwardservSec=setRadiuServeForwardservSec, staCertiSceCertsExtended=staCertiSceCertsExtended, staIprouWannetw=staIprouWannetw, staTcpipRadiuscAccountinTimeouts=staTcpipRadiuscAccountinTimeouts, setDhcpHosMac=setDhcpHosMac, staLanbrAddVla=staLanbrAddVla, staIprouFilterlPrio=staIprouFilterlPrio, staQueueWlanman=staQueueWlanman, setWlanNoiseimmunSpu=setWlanNoiseimmunSpu, staWlanCompetEntry=staWlanCompetEntry, setInterModInitans=setInterModInitans, setIprouFirConneFlag=setIprouFirConneFlag, setTcpipIcmpo=setTcpipIcmpo, staWlanmNetworVlant=staWlanmNetworVlant, staTcpipIpWantx=staTcpipIpWantx, staIprouEstabliCou=staIprouEstabliCou, setIprouRouL2l=setIprouRouL2l, setTcpipNetwoCom=setTcpipNetwoCom, staWlanPairwiTsc=staWlanPairwiTsc, staIprouFilterlDst=staIprouFilterlDst, staLanPackTxu=staLanPackTxu, staInfocSta=staInfocSta, setInterWlaRadiosettinBackgroundscan=setInterWlaRadiosettinBackgroundscan, setIprouFirFilteLink=setIprouFirFilteLink, staTcpipDhcpNetwoNbnsdefaul=staTcpipDhcpNetwoNbnsdefaul, staIprouRipWansMasq=staIprouRipWansMasq, staTcpipRadiuscAuthenticLastreque=staTcpipRadiuscAuthenticLastreque, setInterWlaRadiosettinAntennagain=setInterWlaRadiosettinAntennagain, staIeee8StaCommi=staIeee8StaCommi, staTcpipIpWanfragmentationer=staTcpipIpWanfragmentationer, setInterWlaRadiosettinTxpowerreductio=setInterWlaRadiosettinTxpowerreductio, staTcpipHttpAgentlEntry=staTcpipHttpAgentlEntry, staTcpipRadiussAccoCompletedaccounOutputoc=staTcpipRadiussAccoCompletedaccounOutputoc, setDhcpAddNetwork=setDhcpAddNetwork, staWlanmNetworSsidb=staWlanmNetworSsidb, setIprouVrrVrrEntry=setIprouVrrVrrEntry, setNetbiBroIpa=setNetbiBroIpa, staIprouFilterlDsta=staIprouFilterlDsta, staConneCont=staConneCont, setWanIplistDnsba=setWanIplistDnsba, setWanPollingIpaddress3=setWanPollingIpaddress3, setCertiSceCerKeyusage=setCertiSceCerKeyusage, staLanPackTxp=staLanPackTxp, othMan=othMan, setDnsFiltTable=setDnsFiltTable, staIprouQosTable=staIprouQosTable, staTcpipRadiussDele=staTcpipRadiussDele, setLcrHolDat=setLcrHolDat, staWlanmRadiomTable=staWlanmRadiomTable, staTcpipRadiuscAuthenticAccesscha=staTcpipRadiuscAuthenticAccesscha, setInterWlaInterpointpMac=setInterWlaInterpointpMac, staTcpipTcpLantx=staTcpipTcpLantx, staIprouActiproMas=staIprouActiproMas, setTcpipAliveTarget=setTcpipAliveTarget, setConfiPredefaNam=setConfiPredefaNam, setMailPop3s=setMailPop3s, staLanbrSpaRstpporPro=staLanbrSpaRstpporPro, staTcpipTcpLancon=staTcpipTcpLancon, staAccouLasEntry=staAccouLasEntry, setIprouFirSteal=setIprouFirSteal, trpDeAuthStation=trpDeAuthStation, staLcrProEntry=staLcrProEntry, staWlanErrorsDupedi=staWlanErrorsDupedi, staTcpipRadiussAccoActiveaccountinSessioni=staTcpipRadiussAccoActiveaccountinSessioni, setIprouRipLanEntry=setIprouRipLanEntry, staDslPppoeRxbad=staDslPppoeRxbad, staTcpipNetworkTyp=staTcpipNetworkTyp, staAccouLasRxkby=staAccouLasRxkby, staDslTxbroa=staDslTxbroa, staWlanmNetworOpera=staWlanmNetworOpera, setDnsDyndEntry=setDnsDyndEntry, setInterModResetco=setInterModResetco, trpCnfDnlStart=trpCnfDnlStart, trpIpFwFlt=trpIpFwFlt, staVlanPorTable=staVlanPorTable, staWlanStatioVlanid=staWlanStatioVlanid, staTcpipRadiussAccoActiveaccountinCallings=staTcpipRadiussAccoActiveaccountinCallings, setIprouFirFilteTable=setIprouFirFilteTable, staWlanNetworEntry=staWlanNetworEntry, staPppChaTxcha=staPppChaTxcha, staTcpipRadiussAccoActiveaccountinUsername=staTcpipRadiussAccoActiveaccountinUsername, setWlanNoiseimmunNoi=setWlanNoiseimmunNoi, setRadiuBacku=setRadiuBacku, setIprou1nnServicetaDportf=setIprou1nnServicetaDportf, staIprouRipFiltNam=staIprouRipFiltNam, setDnsLeas=setDnsLeas, staWlanErrorsEntry=staWlanErrorsEntry, setInterDslIfc=setInterDslIfc, staTimeDstMon=staTimeDstMon, staTcpipRadiussAcco=staTcpipRadiussAcco, staWlanInterpAccTxrate=staWlanInterpAccTxrate, staUmtsmMod=staUmtsmMod, setWanIplistMasqi=setWanIplistMasqi, setSnmpAdminist=setSnmpAdminist, staCertiSceRasExpire=staCertiSceRasExpire, setHttpRolVariablesMin=setHttpRolVariablesMin, setPerfoRttmonsJittermaxpossd=setPerfoRttmonsJittermaxpossd, staWlanScanreNoisel=staWlanScanreNoisel, staWlanScanreTable=staWlanScanreTable, setInterWlaBeaconingTable=setInterWlaBeaconingTable, setIprou1nnIpsectablNr=setIprou1nnIpsectablNr, staWlanWlanpaSupportsshorts=staWlanWlanpaSupportsshorts, setEchosAccIpa=setEchosAccIpa, staTcpipRadiussAccoActiveaccountinNasipadd=staTcpipRadiussAccoActiveaccountinNasipadd, setConfiUpdatecRetryok=setConfiUpdatecRetryok, setDhcpAliTable=setDhcpAliTable, staTcpipRadiuscAccountinAccountingres=staTcpipRadiuscAccountinAccountingres, staDslPppoeRxprot=staDslPppoeRxprot, setIprou1nnServicetaProtoc=setIprou1nnServicetaProtoc, staTcpipDeletev=staTcpipDeletev, staWlanSeenclSig=staWlanSeenclSig, staChannMode=staChannMode, staLanPackTxm=staLanPackTxm, setIprouRipFilTable=setIprouRipFilTable, setConfiCrontabTable=setConfiCrontabTable, staPppChaRxcha=staPppChaRxcha, setDhcpPorEntry=setDhcpPorEntry, staQueueArpqueu=staQueueArpqueu, staWlanInterpKeyEntry=staWlanInterpKeyEntry, staWlanmLogtabEve=staWlanmLogtabEve, setSnmpIptrapsEntry=setSnmpIptrapsEntry, staLanByteBytest=staLanByteBytest, staWlanScanreBeacon=staWlanScanreBeacon, staDslTxerro=staDslTxerro, setIprouFirAppliFtp=setIprouFirAppliFtp, setWanActiontOwner=setWanActiontOwner, setIprou1nnTable1nnaEntry=setIprou1nnTable1nnaEntry, setNetbiBroEntry=setNetbiBroEntry, setPerfoRttmonaInd=setPerfoRttmonaInd, setLanbrProIfclis=setLanbrProIfclis, staIprouRipFiltIpn=staIprouRipFiltIpn, staWlanRadiosBackgroundscanu=staWlanRadiosBackgroundscanu, staWlanCompet108mbp=staWlanCompet108mbp, staIprouFilterlDend=staIprouFilterlDend, staTcpipRadiussAccoActiveaccountinSessiont=staTcpipRadiussAccoActiveaccountinSessiont, staLanIeeeSupMet=staLanIeeeSupMet, setConfiAsserta=setConfiAsserta, staWanErrorsRxl1=staWanErrorsRxl1, staLanDele=staLanDele, setDhcpHosIpa=setDhcpHosIpa, staTcpipNetbiosPeerTim=staTcpipNetbiosPeerTim, staRemotConnt=staRemotConnt, staIprouWantx=staIprouWantx, staIprouRipLansProp=staIprouRipLansProp, staIprouRipDynlPois=staIprouRipDynlPois, setWanPppAut=setWanPppAut, staTcpipTftpWantx=staTcpipTftpWantx, setRadiuServeEapPea=setRadiuServeEapPea, staIprouQosTxres=staIprouQosTxres, trpAdmin_Deassoc=trpAdmin_Deassoc, staWlanmApconnName=staWlanmApconnName, setLcrTimFal=setLcrTimFal, staWlanWlanpaTable=staWlanWlanpaTable, staTcpipNetbiosNetwNtd=staTcpipNetbiosNetwNtd, staIprouPortbloTime=staIprouPortbloTime, setIprouFirPortbFilt=setIprouFirPortbFilt, staWlanLogtabAdd=staWlanLogtabAdd, staTcpipRadiussAcceClientsNasident=staTcpipRadiussAcceClientsNasident, setTimeTim=setTimeTim, staTcpipTftpWanrxd=staTcpipTftpWanrxd, setTcpipArptaMac=setTcpipArptaMac, setInterLanIfc=setInterLanIfc, setWlanArphandlin=setWlanArphandlin, staIprouQosEntry=staIprouQosEntry, setInterWlaInterpointpPee=setInterWlaInterpointpPee, staWlanWlanpaRegulatorydoma=staWlanWlanpaRegulatorydoma, staIprouRipLansDftr=staIprouRipLansDftr, staTcpipDhcpDhcptIpa=staTcpipDhcpDhcptIpa, setCertiSceCerTable=setCertiSceCerTable, staTcpipRadiussAccoCompletedaccounIndex=staTcpipRadiussAccoCompletedaccounIndex, staCertiSceCasTable=staCertiSceCasTable, setWlanTracemac=setWlanTracemac, staQueueIpurgen=staQueueIpurgen, staIprouRipDynwRfc2=staIprouRipDynwRfc2, staIprouRipDynlVlan=staIprouRipDynlVlan, staWanErrorsTable=staWanErrorsTable, staTcpipTftpWanrxa=staTcpipTftpWanrxa, staWlanStatioShortp=staWlanStatioShortp, setInterWlaBeaconingBeacono=setInterWlaBeaconingBeacono, staPptpTcp=staPptpTcp)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staAccouLasPeer=staAccouLasPeer, setWanRadiusLoopb=setWanRadiusLoopb, staTcpipNetbiosNetwRtg=staTcpipNetbiosNetwRtg, staWlanScanreBssid=staWlanScanreBssid, staIprouRipDele=staIprouRipDele, staLanByteMaxthr=staLanByteMaxthr, staTcpipHttpAgentlAge=staTcpipHttpAgentlAge, setTcpipAccesTable=setTcpipAccesTable, staWanPackettraTxr=staWanPackettraTxr, setIprouRipIprPor=setIprouRipIprPor, setWanLayerTable=setWanLayerTable, staTcpipRadiuscAccountinDropped=staTcpipRadiuscAccountinDropped, setIeee8RadPor=setIeee8RadPor, setConfiPredefaTable=setConfiPredefaTable, setInterWlaInterpointpTable=setInterWlaInterpointpTable, staWlanNetworBss=staWlanNetworBss, setLanbrProProtoc=setLanbrProProtoc, staWanPackettraIfc=staWanPackettraIfc, setVlanPorTable=setVlanPorTable, setTcpipAliveFailli=setTcpipAliveFailli, staWlanNetworOpe=staWlanNetworOpe, setConfiMonitor=setConfiMonitor, staTcpipSyslogLasIdx=staTcpipSyslogLasIdx, staQueueDnsrxqu=staQueueDnsrxqu, staTcpipNetbiosNetwNet=staTcpipNetbiosNetwNet, setIprouFirConneSrcr=setIprouFirConneSrcr, staChannTable=staChannTable, setDnsDnsdTable=setDnsDnsdTable, staVlanOpe=staVlanOpe, setWanIncominEntry=setWanIncominEntry, staTcpipRadiussAcceTotalduplicate=staTcpipRadiussAcceTotalduplicate, setInterDslEntry=setInterDslEntry, staAccouAccConne=staAccouAccConne, staTcpipTcpWantxr=staTcpipTcpWantxr, staWlanRadiusMac=staWlanRadiusMac, staTcpipIcmpWanc=staTcpipIcmpWanc, setInterWlaRadiosettinDiversity=setInterWlaRadiosettinDiversity, staPppCcpCompressione=staPppCcpCompressione, setInterWlaInterpointsIso=setInterWlaInterpointsIso, staWlanRadiusAge=staWlanRadiusAge, staTcpipRadiussLogtTim=staTcpipRadiussLogtTim, staTcpipRadiuscAccountinAccountingret=staTcpipRadiuscAccountinAccountingret, staPppCcpRxresetack=staPppCcpRxresetack, setWanPollingPeer=setWanPollingPeer, staTcpipNetworkNet=staTcpipNetworkNet, setWanDslbroaTable=setWanDslbroaTable, staWlanSeenclNum=staWlanSeenclNum, setIprou1nnServicetaIntran=setIprou1nnServicetaIntran, setIprouRipParInva=setIprouRipParInva, staTcpipNetworkTable=staTcpipNetworkTable, setConfiSshauthTable=setConfiSshauthTable, setRadiuAutht=setRadiuAutht, setAccouDis=setAccouDis, staIprouVrrpVirPor=staIprouVrrpVirPor, setInterWlaTransmissioIfc=setInterWlaTransmissioIfc, setInterWlaEncryptionWpa1=setInterWlaEncryptionWpa1, setIprouFirAppliIrc=setIprouFirAppliIrc, staWlanmGserverlDns1=staWlanmGserverlDns1, setWanDialuppPee=setWanDialuppPee, setWlanRadiusacceBackupser=setWlanRadiusacceBackupser, setIeee8PorReauthe=setIeee8PorReauthe, staTcpipNetbiosHost=staTcpipNetbiosHost, setIprouFirAppliIrcChe=setIprouFirAppliIrcChe, staWanBytetransCrx=staWanBytetransCrx, staPptpTun=staPptpTun, staLanErroTxe=staLanErroTxe, setInterWlaRadiosettinTable=setInterWlaRadiosettinTable, setInterWlaBeaconingDtimper=setInterWlaBeaconingDtimper, setIprouFirFilteSrcn=setIprouFirFilteSrcn, setPerfo=setPerfo, staWlanWlanpaMinimumrate=staWlanWlanpaMinimumrate, staChannExtra=staChannExtra, staWlanErrorsAged=staWlanErrorsAged, setNetbiBroPee=setNetbiBroPee, setWanRouteriTyp=setWanRouteriTyp, staHardwTota=staHardwTota, setIprou1nnServicetaPeer=setIprou1nnServicetaPeer, setIprouVrrVrrRou=setIprouVrrVrrRou, setInterDslUps=setInterDslUps, staTcpipNetbiosPeerTyp=staTcpipNetbiosPeerTyp, staWlanLogtabInd=staWlanLogtabInd, setWanMtulistTable=setWanMtulistTable, setDhcpAddTable=setDhcpAddTable, staWlanChanneTable=staWlanChanneTable, staTcpipTftpDelete=staTcpipTftpDelete, staTcpipRadiussAccoCompletedaccounCallings=staTcpipRadiussAccoCompletedaccounCallings, setIprouFirAppliIrcMin=setIprouFirAppliIrcMin, setLcrTimInd=setLcrTimInd, setCertiSceCerName=setCertiSceCerName, setIprouOpe=setIprouOpe, staIprouPortbloProt=staIprouPortbloProt, staTcpipDnsWant=staTcpipDnsWant, setRadiuServeEapTtl=setRadiuServeEapTtl, staConfiFeaturesFea=staConfiFeaturesFea, staWlanScanreInterf=staWlanScanreInterf, staPppPapRxsuc=staPppPapRxsuc, staTcpipRadiussAcceClientsMalformed=staTcpipRadiussAcceClientsMalformed, staWlanmGserverlMgmtvlant=staWlanmGserverlMgmtvlant, staWlanWlanpaSupportedbands=staWlanWlanpaSupportedbands, staTcpipHttpActiveEntry=staTcpipHttpActiveEntry, setIprou1nnIpsectablTimeout=setIprou1nnIpsectablTimeout, trpVrrp=trpVrrp, setInterWlaNetworkNet=setInterWlaNetworkNet, setInterLanEntry=setInterLanEntry, staWlanStatioQos=staWlanStatioQos, setIprouFirConneSrcp=setIprouFirConneSrcp, staSnmp=staSnmp, staIprouRipDynwEntry=staIprouRipDynwEntry, staWanErrorsEntry=staWanErrorsEntry, setWanBackuppTable=setWanBackuppTable, setIprouFirAppliFtpFtp=setIprouFirAppliFtpFtp, staTcpipDhcpMacco=staTcpipDhcpMacco, setVlanNetTable=setVlanNetTable, setDhcpAddEntry=setDhcpAddEntry, setWanPppKey=setWanPppKey, staTcpipTftpWantxe=staTcpipTftpWantxe, staWlanStatioIpaddr=staWlanStatioIpaddr, setNetbiSerSer=setNetbiSerSer, setLanbrProIpnetw=setLanbrProIpnetw, staWlanmRadiomOperat=staWlanmRadiomOperat, staPppLcpRxconfigack=staPppLcpRxconfigack, staTcpipRadiuscAuthenticAccessret=staTcpipRadiuscAuthenticAccessret, setName=setName, staDslDslol=staDslDslol, staWlanmRadiomEntry=staWlanmRadiomEntry, setInterWlaRadiosettinEntry=setInterWlaRadiosettinEntry, staWlanStatioRxbyte=staWlanStatioRxbyte, staIprouConnectSrcr=staIprouConnectSrcr, staWlanInterpAccCompre=staWlanInterpAccCompre, staIprouRipLansNetw=staIprouRipLansNetw, staTcpipRadiussAccoTotalaccountdro=staTcpipRadiussAccoTotalaccountdro, staWlanRadiosBackgroundscan=staWlanRadiosBackgroundscan, staWlanmNetworEntry=staWlanmNetworEntry, staWlanInterfSerialnu=staWlanInterfSerialnu, setIprouFirConneProt=setIprouFirConneProt, staIprouRipIpriIpa=staIprouRipIpriIpa, setWanDslbroaMac=setWanDslbroaMac, setCertiSceCasRaautoapprove=setCertiSceCasRaautoapprove, staIprouRipFiltTable=staIprouRipFiltTable, staWlanStatioPhysig=staWlanStatioPhysig, staTcpipDhcpWanrx=staTcpipDhcpWanrx, staDslQueuee=staDslQueuee, staPptpDro=staPptpDro, staVlanNetVla=staVlanNetVla, setRadiuServeRadsecport=setRadiuServeRadsecport, setPerfoRttmonsJittersumnegds=setPerfoRttmonsJittersumnegds, staWlanLogtabEve=staWlanLogtabEve, staDslPppoeRxpadt=staDslPppoeRxpadt, setWlanNoiseimmunFir=setWlanNoiseimmunFir, setIprouFirConneFilt=setIprouFirConneFilt, staChannSubad=staChannSubad, setIprouFirOpenpProt=setIprouFirOpenpProt, setDhcpAliImagea=setDhcpAliImagea, staWlanInterpAccRxphys=staWlanInterpAccRxphys, staTcpipIpDeletevalues=staTcpipIpDeletevalues, setDhcpDhcVla=setDhcpDhcVla, setIprouIprRtg=setIprouIprRtg, staPppLcpTxterminatea=staPppLcpTxterminatea, staWlanStatioThroug=staWlanStatioThroug, staLanErroRxc=staLanErroRxc, staWlanmLastwlIpa=staWlanmLastwlIpa, setIprouFirPortbDstp=setIprouFirPortbDstp, staIprouActiproEntry=staIprouActiproEntry, setLanbrProIpnetm=setLanbrProIpnetm, staTcpipTftpWancon=staTcpipTftpWancon, setLanbrProPort=setLanbrProPort, setWlanNoiseimmunCck=setWlanNoiseimmunCck, setConfiCrontabActi=setConfiCrontabActi, staAccouAccRxkby=staAccouAccRxkby, staPptpConConnt=staPptpConConnt, staDslDslolCatchdhc=staDslDslolCatchdhc, staTcpipTftpLantxe=staTcpipTftpLantxe, staWlanIapptaNetwo=staWlanIapptaNetwo, setNetbiGroTable=setNetbiGroTable, setWanPollingTry=setWanPollingTry, setIprouPro=setIprouPro, staWlanRadiosEntry=staWlanRadiosEntry, staWlanInterpKeyInde=staWlanInterpKeyInde, staWlanStatioPowers=staWlanStatioPowers, staWlanDeasso=staWlanDeasso, staIprouRipWansGate=staIprouRipWansGate, setLcrHolTable=setLcrHolTable, staWanBytetransIfc=staWanBytetransIfc, staIprouOpenporDstp=staIprouOpenporDstp, setIprouFirConneEntry=setIprouFirConneEntry, staDhcpcWanDnsde=staDhcpcWanDnsde, setInterWlaRoamingMinconnecth=setInterWlaRoamingMinconnecth, staTcpipDhcpDhcptTim=staTcpipDhcpDhcptTim, setNetbiSerTim=setNetbiSerTim, setWlanSignalaverStaFac=setWlanSignalaverStaFac, staIprouRipDynlRxfi=staIprouRipDynlRxfi, setPerfoRttmonsJittermaxnegsd=setPerfoRttmonsJittermaxnegsd, staLanByteThroug=staLanByteThroug, staHardwCpuc=staHardwCpuc, setAccouCurConne=setAccouCurConne, staWlanClientInterfTxlimi=staWlanClientInterfTxlimi, setWanManualdCon=setWanManualdCon, setAccouTimMinu=setAccouTimMinu, setInterWlaClientmodesSca=setInterWlaClientmodesSca, staWanPackettraTxt=staWanPackettraTxt, staPppRxoLcpIfc=staPppRxoLcpIfc, staDhcpcWanDomai=staDhcpcWanDomai, staPppTxoLcpAut=staPppTxoLcpAut, setPppoePorEna=setPppoePorEna, staWlanClientInterfLinksi=staWlanClientInterfLinksi, staTcpipRadiussAcceClientsTable=staTcpipRadiussAcceClientsTable, staCertiSceRasExpsnm=staCertiSceRasExpsnm, staDhcpcLanTable=staDhcpcLanTable, staConfiScanresuHttpp=staConfiScanresuHttpp, staFilesConEntry=staFilesConEntry, staLanIeeeSupEntry=staLanIeeeSupEntry, setWanDialuppDia=setWanDialuppDia, setDhcpDhcLan=setDhcpDhcLan, staChannState=staChannState, staWlanInterfTable=staWlanInterfTable, staIprouLogtablFilt=staIprouLogtablFilt, staWlanInterpAccQos=staWlanInterpAccQos, staWlanScanreLoad=staWlanScanreLoad, staHardwMode=staHardwMode, staTcpipRadiussAccoCompletedaccounOutputpa=staTcpipRadiussAccoCompletedaccounOutputpa, staIprouVrrpDro=staIprouVrrpDro, staTcpipHttpAgentlTable=staTcpipHttpAgentlTable, staDslDslolGatewaym=staDslDslolGatewaym, staTcpipDhcpNetwoEntry=staTcpipDhcpNetwoEntry, staLanbrConDestmac=staLanbrConDestmac, setHttpRol=setHttpRol, staPppRxoIpcDnsba=staPppRxoIpcDnsba, setAccouAccTotal=setAccouAccTotal, setWanPptppeeSht=setWanPptppeeSht, setConfiUpdatecLastfir=setConfiUpdatecLastfir, setWanRoundroEntry=setWanRoundroEntry, setHttpRolVariablesIde=setHttpRolVariablesIde, staLanbrSpaPorttabBri=staLanbrSpaPorttabBri, setAccouTimType=setAccouTimType, staWlanErrorsIvsequ=staWlanErrorsIvsequ, staDhcpcLanNbnsb=staDhcpcLanNbnsb, staLanByteTxbyte=staLanByteTxbyte, staTcpipRadiussAcceClientsAccessrej=staTcpipRadiussAcceClientsAccessrej, staWlanChanneRadarp=staWlanChanneRadarp, setIprouFirFilteActi=setIprouFirFilteActi, staFilesConTable=staFilesConTable, setSysloSerLoo=setSysloSerLoo, setIprouFirDosac=setIprouFirDosac, staLayerL1pa=staLayerL1pa, setTcpipAliveBootty=setTcpipAliveBootty, setIprou1nnServicetaCommen=setIprou1nnServicetaCommen, staCertiSceCertsExpsnmp=staCertiSceCertsExpsnmp, staWlanInterpAccRxpack=staWlanInterpAccRxpack, setInterWlaInterpointsLoc=setInterWlaInterpointsLoc, staWlanCompetExtcha=staWlanCompetExtcha, staWlanChanneScanne=staWlanChanneScanne, setInterWlaInterpointsLin=setInterWlaInterpointsLin, staTcpipRadiuscAccountinIpaddress=staTcpipRadiuscAccountinIpaddress, staLanbrConSourcea=staLanbrConSourcea)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staConfiLanactiv=staConfiLanactiv, setSysloSerEntry=setSysloSerEntry, staLanInteNeg=staLanInteNeg, setTcpipAliveRetryi=setTcpipAliveRetryi, staAccouLasConne=staAccouLasConne, staPppLcpTxprotocolre=staPppLcpTxprotocolre, setSnmpMonitortMac=setSnmpMonitortMac, setInterUmtIfc=setInterUmtIfc, staWlanChanneRadiob=staWlanChanneRadiob, setConfiAccesstTable=setConfiAccesstTable, staWlanStatioNetwor=staWlanStatioNetwor, staTcpipDhcpLantx=staTcpipDhcpLantx, staIprouConnectSrcp=staIprouConnectSrcp, staPpp=staPpp, staHardwFree=staHardwFree, setVlanPorPortv=setVlanPorPortv, setInterDslMod=setInterDslMod, setNetbiSerIpa=setNetbiSerIpa, setWlanAccesslistNam=setWlanAccesslistNam, setHttpRolActionsInd=setHttpRolActionsInd, staPppIpcRxconfigrequ=staPppIpcRxconfigrequ, staLanbrSpaPathcos=staLanbrSpaPathcos, staPppIpcDeletevalues=staPppIpcDeletevalues, setLanbrSpaPorEdg=setLanbrSpaPorEdg, staWlanPacketTxp=staWlanPacketTxp, setIprouIprDis=setIprouIprDis, setWlanSpareheap=setWlanSpareheap, setChargTimetabMinutesa=setChargTimetabMinutesa, staWlanmLastwlNam=staWlanmLastwlNam, staPppCcpRxconfigreje=staPppCcpRxconfigreje, staTimeDstInd=staTimeDstInd, setLanbrPorBri=setLanbrPorBri, setCertiSceCerApplicat=setCertiSceCerApplicat, staTcpipDhcpDhcptHos=staTcpipDhcpDhcptHos, staTcpipIpWanrx=staTcpipIpWanrx, staWlanRadiosExtchannel=staWlanRadiosExtchannel, staIprouEstabliTim=staIprouEstabliTim, setTimeDstMin=setTimeDstMin, staPppIpcRxconfigreje=staPppIpcRxconfigreje, othCol=othCol, staIprouRipDisc=staIprouRipDisc, staTcpipDhcpDhcptNet=staTcpipDhcpDhcptNet, staIprouConnectProt=staIprouConnectProt, staLanbrAddEntry=staLanbrAddEntry, setNetbiSup=setNetbiSup, staPppoeSes=staPppoeSes, setDnsDynaPor=setDnsDynaPor, staIprouServicePacketre=staIprouServicePacketre, setLanbrSpaPat=setLanbrSpaPat, setSnmpComment2=setSnmpComment2, staTcpipTftpWanrx=staTcpipTftpWanrx, staIprouRipResp=staIprouRipResp, staIprouEstabliTable=staIprouEstabliTable, staWlanInterpAccBytesm=staWlanInterpAccBytesm, setConfiTftpcliScriptfil=setConfiTftpcliScriptfil, setDhcpNetOperating=setDhcpNetOperating, staWlanCompetTable=staWlanCompetTable, setWanRouteriAcc=setWanRouteriAcc, setWlanAllowilleg=setWlanAllowilleg, setWanRadiusPppop=setWanRadiusPppop, staIprouVrrpTx=staIprouVrrpTx, setConfiSshauthIfc=setConfiSshauthIfc, setChargTimetabSparemin=setChargTimetabSparemin, staIprouRipDynwRipa=staIprouRipDynwRipa, staTcpipTftpWantxd=staTcpipTftpWantxd, setNetbiSerEntry=setNetbiSerEntry, staChannConnt=staChannConnt, setIprouRipParUpda=setIprouRipParUpda, staLcrMis=staLcrMis, setWlanSignalaverFilCoeTable=setWlanSignalaverFilCoeTable, staWlanInterpAccIndex=staWlanInterpAccIndex, staTcpipRadiussAccoTotalduplicatea=staTcpipRadiussAccoTotalduplicatea, setHttpPor=setHttpPor, staWlanPacketTxb=staWlanPacketTxb, staIprouRipDynlGate=staIprouRipDynlGate, staWlanCompetRadioc=staWlanCompetRadioc, setIprouRipWanMasq=setIprouRipWanMasq, setWlanNoiseoffseInt=setWlanNoiseoffseInt, setIprouRipParUpdd=setIprouRipParUpdd, setIprouVrrVrrBpr=setIprouVrrVrrBpr, setIprouFirRulesDes=setIprouFirRulesDes, staIprouWanrx=staIprouWanrx, setLanbrPorEntry=setLanbrPorEntry, staPppPppIpc=staPppPppIpc, staLcrProFai=staLcrProFai, staPppTxoIpcEntry=staPppTxoIpcEntry, setTcpipArptaEntry=setTcpipArptaEntry, staWlanClientInterfAntenn=staWlanClientInterfAntenn, staIprouRipDynwTxfi=staIprouRipDynwTxfi, setAccouCurTable=setAccouCurTable, setWlanNoiseoffseTable=setWlanNoiseoffseTable, staTcpipRadiuss=staTcpipRadiuss, setWanRadius=setWanRadius, setWanBackuppEntry=setWanBackuppEntry, staLanbrConProtoco=staLanbrConProtoco, staIprouHoconnlDst=staIprouHoconnlDst, setNetbiNetNtd=setNetbiNetNtd, staPppIpcTxterminater=staPppIpcTxterminater, setWanDialpre=setWanDialpre, setNetbiPeeTable=setNetbiPeeTable, staIeee8StaUsern=staIeee8StaUsern, setHttpRolTitle=setHttpRolTitle, setIprou=setIprou, staIprouRipVrrpNet=staIprouRipVrrpNet, setWanActiontIndex=setWanActiontIndex, staWlanWlanpaTkipsupport=staWlanWlanpaTkipsupport, setTcpipLoopbEntry=setTcpipLoopbEntry, staDhcpcWanIfc=staDhcpcWanIfc, setIprouFirRulesEntry=setIprouFirRulesEntry, setNtp=setNtp, staWlanInterfNumstati=staWlanInterfNumstati, setDhcpDhcMac=setDhcpDhcMac, setInterWlaRadiosettin24ghzmode=setInterWlaRadiosettin24ghzmode, setIprou1nnServicetaMappor=setIprou1nnServicetaMappor, staWlanStatioRxpack=staWlanStatioRxpack, staAccouAccMacad=staAccouAccMacad, setIprouVrrRec=setIprouVrrRec, staIprouVrrpEveInf=staIprouVrrpEveInf, staTcpipRadiuscAccountinRoundtriptime=staTcpipRadiuscAccountinRoundtriptime, staWlanmNetworWpave=staWlanmNetworWpave, staTcpipRadiuscAuthenticPendingre=staTcpipRadiuscAuthenticPendingre, setDnsFiltNet=setDnsFiltNet, staWanWanqueuee=staWanWanqueuee, setTcpipArptaLas=setTcpipArptaLas, staInfocTable=staInfocTable, setRadiuServeUsersLim=setRadiuServeUsersLim, staIprouRipErro=staIprouRipErro, setWanDslbroaPee=setWanDslbroaPee, setPppoeNamMac=setPppoeNamMac, staWlanmLogtabEntry=staWlanmLogtabEntry, setIeee8PorTable=setIeee8PorTable, staWlanWlanpaModemload=staWlanWlanpaModemload, staWanPackettraTable=staWanPackettraTable, setConfiTftpcliConfigfil=setConfiTftpcliConfigfil, staIprouQosPmtus=staIprouQosPmtus, setRadiuServeAccountingi=setRadiuServeAccountingi, staPppChaRxfai=staPppChaRxfai, setInterWlaInterpointsEna=setInterWlaInterpointsEna, setInterWlaGroupencrypKey2=setInterWlaGroupencrypKey2, setPerfoRttmonsJittersumposds=setPerfoRttmonsJittersumposds, staWlanStatioAntenn=staWlanStatioAntenn, staPppLcpRxdiscardreq=staPppLcpRxdiscardreq, staSnmpEveTra=staSnmpEveTra, setDhcpNetDnsdefault=setDhcpNetDnsdefault, staConfiDeleteva=staConfiDeleteva, setIprouIprIpa=setIprouIprIpa, setIprou1nnIpsectablEntry=setIprou1nnIpsectablEntry, staWlanClientInterfTxpack=staWlanClientInterfTxpack, staConfiEventlogInfo2=staConfiEventlogInfo2, staIprouActiproDis=staIprouActiproDis, staWlanmNetworName=staWlanmNetworName, setInterWlaRoamingMinconnects=setInterWlaRoamingMinconnects, setSnmpMonitortEntry=setSnmpMonitortEntry, setIeee8PorEntry=setIeee8PorEntry, staPppIpcRxdiscarded=staPppIpcRxdiscarded, staTcpipIpLantx=staTcpipIpLantx, setChargSpservere=setChargSpservere, setInterWlaRadiosettinMaximumdistance=setInterWlaRadiosettinMaximumdistance, setIprouFirFilteSend=setIprouFirFilteSend, setDnsDhcp=setDnsDhcp, staTcpipNetbiosDele=staTcpipNetbiosDele, setPerfoRttmoneTable=setPerfoRttmoneTable, setPerfoRttmonsJittersumnegsd=setPerfoRttmonsJittersumnegsd, setNetbiBroNet=setNetbiBroNet, staTcpipDnsHitlDom=staTcpipDnsHitlDom, staCertiSceCasStatus=staCertiSceCasStatus, setWlanmStaPor=setWlanmStaPor, staWlanStatioWpaver=staWlanStatioWpaver, staTcpipRadiussAccoCompletedaccounStoptime=staTcpipRadiussAccoCompletedaccounStoptime, setWlanTracelevel=setWlanTracelevel, staIprouRipIpriPee=staIprouRipIpriPee, staWlanStatioLastev=staWlanStatioLastev, setLanbrPorPor=setLanbrPorPor, staLayerIfc=staLayerIfc, setIprouFirRulesCom=setIprouFirRulesCom, setConfiLanguag=setConfiLanguag, staTcpipRadiussAccoCompletedaccounTable=staTcpipRadiussAccoCompletedaccounTable, staMailCle=staMailCle, staLanbrSpaRstpporRol=staLanbrSpaRstpporRol, setAccouAccUsern=setAccouAccUsern, setDnsServHos=setDnsServHos, firVerSer=firVerSer, setInterWla=setInterWla, staIprouEstabliDes=staIprouEstabliDes, staTcpipNetbiosNetwInt=staTcpipNetbiosNetwInt, staLanInteCon=staLanInteCon, staLcrDel=staLcrDel, staHardwCput=staHardwCput, staWanActionsLocRem=staWanActionsLocRem, staLanbrSpa=staLanbrSpa, setIprou1nnTable1nnaPro=setIprou1nnTable1nnaPro, setEchosAccAkt=setEchosAccAkt, staPppRxoIpcNbnsb=staPppRxoIpcNbnsb, staIprouRipIpriPor=staIprouRipIpriPor, setTimeDay=setTimeDay, staWanThroughpuTxsa=staWanThroughpuTxsa, staIprouLogtablDstp=staIprouLogtablDstp, setConfiCrontabComm=setConfiCrontabComm, staIprouOpenporDsta=staIprouOpenporDsta, staVlanNetEntry=staVlanNetEntry, staChannNumbe=staChannNumbe, staWlanClientInterfRxlimi=staWlanClientInterfRxlimi, setInterModCycleti=setInterModCycleti, trpPPPoESConn=trpPPPoESConn, setConfiTftpcli=setConfiTftpcli, staTcpipTftpLancon=staTcpipTftpLancon, staWanWantxdisc=staWanWantxdisc, staTimeSet=staTimeSet, staDslPppoeRxpads=staDslPppoeRxpads, setConfiAccesstSnmp=setConfiAccesstSnmp, setPerfoRttmonaFre=setPerfoRttmonaFre, setInterDslLan=setInterDslLan, staConfiWantotal=staConfiWantotal, staChargSpareda=staChargSpareda, staTcpipHttp=staTcpipHttp, staAccouCurConnt=staAccouCurConnt, setWlanmStaTable=setWlanmStaTable, staTcpipRadiussAccoActiveaccountinNasporti=staTcpipRadiussAccoActiveaccountinNasporti, staWlanClientInterfPhysig=staWlanClientInterfPhysig, setInterWlaClientmodesIfc=setInterWlaClientmodesIfc, staTcpipArpTablLas=staTcpipArpTablLas, setInterWlaPerformanceEntry=setInterWlaPerformanceEntry, staWlanIapptaTable=staWlanIapptaTable, setWlanRadiusaccoAccntport=setWlanRadiusaccoAccntport, setPerfoRttmonsRttmax=setPerfoRttmonsRttmax, staTcpipRadiuscInvalidau=staTcpipRadiuscInvalidau, setInterWlaTransmissioMinf=setInterWlaTransmissioMinf, setLanbrPorAct=setLanbrPorAct, staWlanIapptaTimer=staWlanIapptaTimer, setRadiuServeClientsTable=setRadiuServeClientsTable, setIprou1nnFragmenta=setIprou1nnFragmenta, setIprouFirPortbDsta=setIprouFirPortbDsta, staWlanInterpAccMacadd=staWlanInterpAccMacadd, staTcpipRadiuscInvalidac=staTcpipRadiuscInvalidac, staLcrProPro=staLcrProPro, staWlanmApconnResp=staWlanmApconnResp, setInterWlaTransmissioBasi=setInterWlaTransmissioBasi, setConfiMonitorTracemask2=setConfiMonitorTracemask2, setRadiuServeClientsEntry=setRadiuServeClientsEntry, setWlanNoiseoffseEntry=setWlanNoiseoffseEntry, setMail=setMail, staWlanPacketEntry=staWlanPacketEntry, setWanPptppeePor=setWanPptppeePor, setNetbiGroTyp=setNetbiGroTyp, setPerfoRttmoneProtocol=setPerfoRttmoneProtocol, staWlanStatioIdenti=staWlanStatioIdenti, staTcpipTcpLanser=staTcpipTcpLanser, staWlanmNetworVlani=staWlanmNetworVlani, staUmtsmDro=staUmtsmDro, staLanbrConSourcep=staLanbrConSourcep, setNetbiHosRtg=setNetbiHosRtg, staIprouLogtablThre=staIprouLogtablThre, staIprouRipDynwDftr=staIprouRipDynwDftr, staWlanInterpKeyRsc=staWlanInterpKeyRsc)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staIprouConnectTable=staIprouConnectTable, staLcrProSuc=staLcrProSuc, setInterWlaTransmissio11bp=setInterWlaTransmissio11bp, setMailSmtpp=setMailSmtpp, staWlanLogtabInt=staWlanLogtabInt, staWanActionsLocEntry=staWanActionsLocEntry, staCertiSceCasExpire=staCertiSceCasExpire, staWlanScanreIdenti=staWlanScanreIdenti, staWlanClientPppoeuAge=staWlanClientPppoeuAge, staLanPackRxm=staLanPackRxm, staIprouProtocoPro=staIprouProtocoPro, staWlanmNetworWpa1s=staWlanmNetworWpa1s, setNetbiSerSmb=setNetbiSerSmb, staWlanStatioBytest=staWlanStatioBytest, staPppCcpRxresetreque=staPppCcpRxresetreque, staTcpipHttpActiveIdletim=staTcpipHttpActiveIdletim, staPppTxoLcpTable=staPppTxoLcpTable, staIprouFilterlIdx=staIprouFilterlIdx, staWlanInterpAccTable=staWlanInterpAccTable, setInterWlaRoamingConnecthold=setInterWlaRoamingConnecthold, staWanBytetransEntry=staWanBytetransEntry, setDhcpNetBroadcasta=setDhcpNetBroadcasta, staLanbrSpaRstpporLea=staLanbrSpaRstpporLea, setInterWlaRadiosettinRadioband=setInterWlaRadiosettinRadioband, setDnsFiltEntry=setDnsFiltEntry, staDslTxbyte=staDslTxbyte, staTcpipTftpLantxa=staTcpipTftpLantxa, setIprouRipPar=setIprouRipPar, staWlanErrorsSoftre=staWlanErrorsSoftre, setNetbiHosNam=setNetbiHosNam, setConfiAccesstHttps=setConfiAccesstHttps, staWlanPairwiEntry=staWlanPairwiEntry, trpAssStation=trpAssStation, staWlanScanreShortg=staWlanScanreShortg, setInterWlaEncryptionIfc=setInterWlaEncryptionIfc, setNtpBcm=setNtpBcm, setWanPptppeeIpa=setWanPptppeeIpa, setHttpDoc=setHttpDoc, setIeee8PorPortcon=setIeee8PorPortcon, staPppChaDelet=staPppChaDelet, setHttpRolActionsTable=setHttpRolActionsTable, staPppTxoLcpMag=staPppTxoLcpMag, setInterWlaBeaconingEntry=setInterWlaBeaconingEntry, staTimeTim=staTimeTim, staHardwPcidFunctio=staHardwPcidFunctio, setCertiSceCasName=setCertiSceCasName, staTcpipRadiussAccoClientsNasident=staTcpipRadiussAccoClientsNasident, staLcrFou=staLcrFou, setDnsDnslIpa=setDnsDnslIpa, staWlanmRadiopMgmtvlani=staWlanmRadiopMgmtvlani, staPppLcpRxerrors=staPppLcpRxerrors, setLan=setLan, setLcrTimNum=setLcrTimNum, setCertiSceCasEncalg=setCertiSceCasEncalg, staLanbrDhcIpa=staLanbrDhcIpa, setConfiTftpcliFirmwarea=setConfiTftpcliFirmwarea, setCertiSceCac=setCertiSceCac, setIprouFirObjecTable=setIprouFirObjecTable, setWanRadiusAuthp=setWanRadiusAuthp, setIprouDefEntry=setIprouDefEntry, staTcpipSyslogLasLev=staTcpipSyslogLasLev, staIprouServiceTable=staIprouServiceTable, staIprouOpenporSrcr=staIprouOpenporSrcr, setWlanThermrecal=setWlanThermrecal, setWanIplistTable=setWanIplistTable, setIprouRipLanProp=setIprouRipLanProp, staTcpipDhcpLanrx=staTcpipDhcpLanrx, setConfiSshport=setConfiSshport, staPppIpcTxconfignak=staPppIpcTxconfignak, staPppoeTxp=staPppoeTxp, setAccouCurConnt=setAccouCurConnt, staWlanCompetNoisel=staWlanCompetNoisel, staPppoeConMac=staPppoeConMac, staCharg=staCharg, setTcpipNetwoInt=setTcpipNetwoInt, staWlanClientPppoeuHostuniq=staWlanClientPppoeuHostuniq, staAccouAccUsern=staAccouAccUsern, staIprouRipDynlTxfi=staIprouRipDynlTxfi, staWlanInterpAccMaxthr=staWlanInterpAccMaxthr, setIprou1nnIpsectablRemotes=setIprou1nnIpsectablRemotes, staAccouLasUsern=staAccouLasUsern, staPppCcpTxconfigrequ=staPppCcpTxconfigrequ, staConfiLoginerr=staConfiLoginerr, staTcpipNetbiosGrou=staTcpipNetbiosGrou, setIprouFirConneDsta=setIprouFirConneDsta, staLayerL2op=staLayerL2op, staWanErrorsIfc=staWanErrorsIfc, setSnmpLocation=setSnmpLocation, setIprouRipWanRfc2=setIprouRipWanRfc2, trpExcEirp=trpExcEirp, staIprouRipWansRtgt=staIprouRipWansRtgt, setWanLayerL2op=setWanLayerL2op, staIprouQosTxreq=staIprouQosTxreq, staConfiEventlogSyste=staConfiEventlogSyste, staAccouDel=staAccouDel, setIprou1nnServicetaTable=setIprou1nnServicetaTable, setRadiuServeEapTls=setRadiuServeEapTls, setTcpipLoopbRtg=setTcpipLoopbRtg, staWlanWlanpaSupports108mbp=staWlanWlanpaSupports108mbp, setInterWlaInterpointsTable=setInterWlaInterpointsTable, setDhcpHosHos=setDhcpHosHos, setLanIeee80SupIfc=setLanIeee80SupIfc, setDhcpNetCache=setDhcpNetCache, setIprouFirFilteSrca=setIprouFirFilteSrca, setWlanSupervises=setWlanSupervises, staIprouOpenporFilt=staIprouOpenporFilt, setIprouFirFilteIdx=setIprouFirFilteIdx, staIprouRipIpriTable=staIprouRipIpriTable, setChargActivat=setChargActivat, setLanbrSpaFor=setLanbrSpaFor, staPptpConShtim=staPptpConShtim, setInterModEscapes=setInterModEscapes, staTcpipDhcpNetwoVlanid=staTcpipDhcpNetwoVlanid, staTcpipDhcpDhcptVla=staTcpipDhcpDhcptVla, staIprouFilterlSst=staIprouFilterlSst, staPppIpcTxcodereject=staPppIpcTxcodereject, staCertiSceNumce=staCertiSceNumce, setIeee8PorSupptim=setIeee8PorSupptim, firFea=firFea, staPppCcpTxresetreque=staPppCcpTxresetreque, staRemotMode=staRemotMode, setCertiSceCasCasignaturealg=setCertiSceCasCasignaturealg, setAccouAccEntry=setAccouAccEntry, staWlanRadiosIfc=staWlanRadiosIfc, staPppLcp=staPppLcp, setNtpBci=setNtpBci, staIprouRipWansRipt=staIprouRipWansRipt, staConfiScanresuName=staConfiScanresuName, staIprouHostbloEntry=staIprouHostbloEntry, staIprouQosTxblo=staIprouQosTxblo, staWlanPacketTxm=staWlanPacketTxm, staWanActionsLocTable=staWanActionsLocTable, staLanErroQue=staLanErroQue, staTcpipSyslogLasTim=staTcpipSyslogLasTim, setInterWlaNetworkOpe=setInterWlaNetworkOpe, staDhcpcWanDhcps=staDhcpcWanDhcps, setWlanRadiusaccoSecret=setWlanRadiusaccoSecret, staTcpipHttpActiveLocalrt=staTcpipHttpActiveLocalrt, setDhcpPorEna=setDhcpPorEna, staVlanNetTable=staVlanNetTable, staWlanPacketRxb=staWlanPacketRxb, setInterWlaPerformanceCom=setInterWlaPerformanceCom, staLanIeee=staLanIeee, staWlanInterpAccKeying=staWlanInterpAccKeying, setWanScriptsTable=setWanScriptsTable, setIprouFirAppliIrcIrc=setIprouFirAppliIrcIrc, staWlanmLogtabTim=staWlanmLogtabTim, staIprouPortbloFilt=staIprouPortbloFilt, setDnsServEntry=setDnsServEntry, setConfiCrontabMont=setConfiCrontabMont, staWlanForeigEntry=staWlanForeigEntry, staIprouHostbloTim=staIprouHostbloTim, staQueueTftpser=staQueueTftpser, setConfiLedtest=setConfiLedtest, staAccouCurPeer=staAccouCurPeer, setInterDslTyp=setInterDslTyp, staCalliIfc=staCalliIfc, staCertiSceDelet=staCertiSceDelet, setIprouFirActioTable=setIprouFirActioTable, staTcpipIpWanchecksumerrors=staTcpipIpWanchecksumerrors, staTcpipRadiussAccoCompletedaccounNasident=staTcpipRadiussAccoCompletedaccounNasident, setDhcpDhcIpa=setDhcpDhcIpa, setAccouTimInde=setAccouTimInde, staWanDeleteval=staWanDeleteval, staDhcpcWanEntry=staDhcpcWanEntry, setNetbiHosPee=setNetbiHosPee, staWlanLogtabTim=staWlanLogtabTim, setSysloPor=setSysloPor, staCertiSce=staCertiSce, setWanRadiusServe=setWanRadiusServe, staTcpipIpWanrxdisconnect=staTcpipIpWanrxdisconnect, setWanDialuppWan=setWanDialuppWan, staWanBytetransTable=staWanBytetransTable, setIprou1nnIpsectablRclo=setIprou1nnIpsectablRclo, setHttp=setHttp, staIprouRipDynwMasq=staIprouRipDynwMasq, staPppoeConEntry=staPppoeConEntry, staChannApp=staChannApp, staLanErroTable=staLanErroTable, setInterWlaEncryptionAuth=setInterWlaEncryptionAuth, staWanErrorsRxl3=staWanErrorsRxl3, setIprouRipIprPee=setIprouRipIprPee, staWlanCompetQos=staWlanCompetQos, setCertiSceCasTable=setCertiSceCasTable, setWlanAccesslistTable=setWlanAccesslistTable, staWanBytetransCtx=staWanBytetransCtx, staTcpipRadiussAccoActiveaccountinNasportt=staTcpipRadiussAccoActiveaccountinNasportt, setDhcpNetNbnsbackup=setDhcpNetNbnsbackup, staConfiScanresuRtgta=staConfiScanresuRtgta, setWanPppEntry=setWanPppEntry, setDnsSubdTable=setDnsSubdTable, setLcrTimTable=setLcrTimTable, staQueueProthea=staQueueProthea, staTcpipIpLanfragmentationsf=staTcpipIpLanfragmentationsf, setDhcpAliImagef=setDhcpAliImagef, staWlanmApconnResu=staWlanmApconnResu, setWanRadiusClipp=setWanRadiusClipp, setInterWlaEncryptionWpa2=setInterWlaEncryptionWpa2, staIprouVrrpMacVir=staIprouVrrpMacVir, staTcpipRadiussAccoActiveaccountinOutputoc=staTcpipRadiussAccoActiveaccountinOutputoc, setAccouCurUsern=setAccouCurUsern, setWanActiontHostn=setWanActiontHostn, staLanbrSpaRstpporEdg=staLanbrSpaRstpporEdg, staPptpTxp=staPptpTxp, staWlanCompetShorts=staWlanCompetShorts, staTcpipDnsHitlEntry=staTcpipDnsHitlEntry, setIprouDefSto=setIprouDefSto, setIprouFirRulesLin=setIprouFirRulesLin, staPppChaRxsuc=staPppChaRxsuc, setLcrTimSta=setLcrTimSta, setIprouRipIprEntry=setIprouRipIprEntry, setPerfoRttmonsJittercountnegd=setPerfoRttmonsJittercountnegd, setSysloFacSou=setSysloFacSou, setWlanmStaLoo=setWlanmStaLoo, setIprouNnnSrca=setIprouNnnSrca, staWlanScanreShortp=staWlanScanreShortp, staIprouOpenporProt=staIprouOpenporProt, staTcpipDhcpNetwoStartaddre=staTcpipDhcpNetwoStartaddre, setConfiTelnetp=setConfiTelnetp, setWlanAccesslistWpa=setWlanAccesslistWpa, setAccouCurRxkby=setAccouCurRxkby, staPptp=staPptp, staWlanmRadiopTxpowerre=staWlanmRadiopTxpowerre, staWlanInterpAccIdenti=staWlanInterpAccIdenti, staIprouEstabliSrc=staIprouEstabliSrc, setWanActiontActiv=setWanActiontActiv, staWlanErrorsTxdisc=staWlanErrorsTxdisc, setSnmpMonitortLoo=setSnmpMonitortLoo, setConfiTftpcliBytesperh=setConfiTftpcliBytesperh, staLanbrAddPor=staLanbrAddPor, staWlanLogtabTable=staWlanLogtabTable, setInterWlaGroupencrypKeytype2=setInterWlaGroupencrypKeytype2, staChargTimetabMinutesp=staChargTimetabMinutesp, staWlanChanneEntry=staWlanChanneEntry, staWanThroughpuRxsa=staWanThroughpuRxsa, staTcpipRadiussAccoCompletedaccounIpaddres=staTcpipRadiussAccoCompletedaccounIpaddres, staPptpFlo=staPptpFlo, setTcpipArptaTable=setTcpipArptaTable, staTimeDstTim=staTimeDstTim, staTimeDstMin=staTimeDstMin, staTcpipTcp=staTcpipTcp, setInterWlaPerformanceTxb=setInterWlaPerformanceTxb, setIeee8PorReauthm=setIeee8PorReauthm, setIprouNnnTable=setIprouNnnTable, setDhcpNetEntry=setDhcpNetEntry, setWlanRadiusaccePasswords=setWlanRadiusaccePasswords, staPptpConNbnsd=staPptpConNbnsd, staCertiSceRasKeyusa=staCertiSceRasKeyusa, staTcpipArpWane=staTcpipArpWane, setTcpipDnsba=setTcpipDnsba, staWlanCompetPhysig=staWlanCompetPhysig, staWlanWlanpaPhytype=staWlanWlanpaPhytype, staPppTxoLcpIfc=staPppTxoLcpIfc, setInterWlaPerformanceTable=setInterWlaPerformanceTable)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", setInterWlaNetworkIfc=setInterWlaNetworkIfc, trpCl_LostConn=trpCl_LostConn, staConfiScanresuDevic=staConfiScanresuDevic, set=set, staWlanScanreQos=staWlanScanreQos, staTcpipNetbiosRegi=staTcpipNetbiosRegi, staQueueWanqueu=staQueueWanqueu, setWanDslbroaEntry=setWanDslbroaEntry, setIprouFirAppliFtpChe=setIprouFirAppliFtpChe, staTcpipTcpDelete=staTcpipTcpDelete, setCertiSceCerSubject=setCertiSceCerSubject, staWlanRadiusTable=staWlanRadiusTable, staCertiSceCasSubjec=staCertiSceCasSubjec, setPerfoRttmonsPacketlossds=setPerfoRttmonsPacketlossds, staIprouProtocoEntry=staIprouProtocoEntry, staWlanPairwiInde=staWlanPairwiInde, setIprou1nnServicetaDportt=setIprou1nnServicetaDportt, setInterModAnswerc=setInterModAnswerc, staIprouConnectRtgt=staIprouConnectRtgt, staWlanCompetMaxams=staWlanCompetMaxams, setHttpRolVariablesTyp=setHttpRolVariablesTyp, staTcpipNetworkIpa=staTcpipNetworkIpa, staPppRxoLcpMag=staPppRxoLcpMag, staWlanPairwiKeyv=staWlanPairwiKeyv, staIprouServiceKbytestx=staIprouServiceKbytestx, staInfocEntry=staInfocEntry, setIprouRipIprVla=setIprouRipIprVla, setCerti=setCerti, setDnsServTable=setDnsServTable, setRadiuServeEap=setRadiuServeEap, staWlanErrorsRxerro=staWlanErrorsRxerro, setVlanPorEntry=setVlanPorEntry, staWlanInterfOperatio=staWlanInterfOperatio, staWlanInterpKeyKeyv=staWlanInterpKeyKeyv, setLanbrProDestma=setLanbrProDestma, setInterWlaRoamingConnectthre=setInterWlaRoamingConnectthre, staTcpipDnsErro=staTcpipDnsErro, staIprouLogtablProt=staIprouLogtablProt, setWlanRadiusacceResponsel=setWlanRadiusacceResponsel, setIprouFirOpenpDsta=setIprouFirOpenpDsta, staIprouActiproIpn=staIprouActiproIpn, staWlanNetworTable=staWlanNetworTable, staPppoe=staPppoe, staTcpipRadiussLogtEve=staTcpipRadiussLogtEve, staWanErrorsStac=staWanErrorsStac, setNetbiBroTable=setNetbiBroTable, setPerfoRttmoneDestinationp=setPerfoRttmoneDestinationp, setNetbiLea=setNetbiLea, staLanbrAddAge=staLanbrAddAge, setInter=setInter, setConfiAdminsPas=setConfiAdminsPas, setWlanIapphandov=setWlanIapphandov, staPppPppEntry=staPppPppEntry, staTcpipRadiussAccoClientsEntry=staTcpipRadiussAccoClientsEntry, setNtpRqaLoo=setNtpRqaLoo, staTcpipIpWanfragmentationsf=staTcpipIpWanfragmentationsf, staCertiSceRasTable=staCertiSceRasTable, setAccouLasTotal=setAccouLasTotal, setWlanSignalaverFilCt=setWlanSignalaverFilCt, staPppLcpRxcodereject=staPppLcpRxcodereject, staTcpipDhcpRxrel=staTcpipDhcpRxrel, setDnsDnsdDom=setDnsDnsdDom, staDslDslolExclusiv=staDslDslolExclusiv, staPppLcpTxterminater=staPppLcpTxterminater, staIprouWanttle=staIprouWanttle, setTcpipDnsde=setTcpipDnsde, staTcpipRadiuscAccountinLastrequest=staTcpipRadiuscAccountinLastrequest, staWlanClientInterfTxrate=staWlanClientInterfTxrate, staConfiEventlogEvent=staConfiEventlogEvent, staWlanCompetDtimpe=staWlanCompetDtimpe, setVlanPorPort=setVlanPorPort, setIprouRipLanTxfi=setIprouRipLanTxfi, staLanbrSpaRootbri=staLanbrSpaRootbri, setConfiUpdatecOperati=setConfiUpdatecOperati, staLanIeeeSupTable=staLanIeeeSupTable, setConfiCrashme=setConfiCrashme, staPppoeConTable=staPppoeConTable, setAccouAccConne=setAccouAccConne, setTcpipArptaIpa=setTcpipArptaIpa, setNetbiPeeNam=setNetbiPeeNam, setWlanNoiseoffseVal=setWlanNoiseoffseVal, staTcpipRadiussAccoClientsAccountreq=staTcpipRadiussAccoClientsAccountreq, staPppLcpTxconfignak=staPppLcpTxconfignak, staWlanWlanpaPhyvariant=staWlanWlanpaPhyvariant, setWanPppTry=setWanPppTry, setConfiCrontabBase=setConfiCrontabBase, staTcpipDhcpNetwoBroadcastb=staTcpipDhcpNetwoBroadcastb, setAccouCurPeer=setAccouCurPeer, setDhcpDhcHos=setDhcpDhcHos, staTcpipDhcpTxack=staTcpipDhcpTxack, trpUplFailTo=trpUplFailTo, setLanIeee80SupCre=setLanIeee80SupCre, staWlanChanneDfssta=staWlanChanneDfssta, trpConnected=trpConnected, setWanPollingIpaddress2=setWanPollingIpaddress2, setCertiSceUpd=setCertiSceUpd, staLanbrSpaRootpat=staLanbrSpaRootpat, staTimeCur=staTimeCur, staIprouVrrpRx=staIprouVrrpRx, staTcpipNetworkRtg=staTcpipNetworkRtg, staWlanmGserverlDns2=staWlanmGserverlDns2, setAccouCurTxkby=setAccouCurTxkby, setIprouRipR1m=setIprouRipR1m, staPppoeConCon=staPppoeConCon, staPppChaTxres=staPppChaTxres, staMail=staMail, staIeee8StaReply=staIeee8StaReply, staPppIpcRxcodereject=staPppIpcRxcodereject, staLanErroEntry=staLanErroEntry, firTabDat=firTabDat, staTcpipIcmpLanr=staTcpipIcmpLanr, setLanIeee80=setLanIeee80, staIprouFilterlDstm=staIprouFilterlDstm, staCertiSceCertsName=staCertiSceCertsName, setNtpRqt=setNtpRqt, staIprouFilterlRtgt=staIprouFilterlRtgt, setDhcpAliEntry=setDhcpAliEntry, setDnsSubdNet=setDnsSubdNet, staWlanStatioAid=staWlanStatioAid, staLanbrPorPor=staLanbrPorPor, staWlanClientInterfTxbyte=staWlanClientInterfTxbyte, staWlanInterpKeyKeyt=staWlanInterpKeyKeyt, staPppCcpDeletevalues=staPppCcpDeletevalues, staTcpipRadiussAccoTotalaccountres=staTcpipRadiussAccoTotalaccountres, staTcpipRadiussAccoTotalmalformeda=staTcpipRadiussAccoTotalmalformeda, staPppCcpRxconfigack=staPppCcpRxconfigack, staTimeDstHou=staTimeDstHou, staIprouEstabliSou=staIprouEstabliSou, staPppLcpTxdiscardreq=staPppLcpTxdiscardreq, staIprouConnectEntry=staIprouConnectEntry, setAccouCurEntry=setAccouCurEntry, setInterWlaPerformanceIfc=setInterWlaPerformanceIfc, staTcpipSyslogLasEntry=staTcpipSyslogLasEntry, lan_router=lan_router, staTcpipRadiussAcceClientsUnknownty=staTcpipRadiussAcceClientsUnknownty, setIprouVrrVrrTable=setIprouVrrVrrTable, staTcpipRadiussAccoActiveaccountinStarttim=staTcpipRadiussAccoActiveaccountinStarttim, setCertiSceCasUrl=setCertiSceCasUrl, staWlanStatioShorts=staWlanStatioShorts, staSnmpEveCou=staSnmpEveCou, setWanRouteriTable=setWanRouteriTable, staTcpipTftp=staTcpipTftp, staHardwPcidSubsyst=staHardwPcidSubsyst, staWlanStatioBytesm=staWlanStatioBytesm, staCertiSceCasIdx=staCertiSceCasIdx, staIprouWantype=staIprouWantype, staIprouVrrpVirVla=staIprouVrrpVirVla, staPppLcpTxcodereject=staPppLcpTxcodereject, staIprouRipLansPort=staIprouRipLansPort, staWanActionsActEntry=staWanActionsActEntry, staLanbrConInterfa=staLanbrConInterfa, staWlanClientInterfLinkph=staWlanClientInterfLinkph, trpLogin=trpLogin, setTcpipNonlo=setTcpipNonlo, setWanDslbroaVla=setWanDslbroaVla, setInterModDialcom=setInterModDialcom, staTcpipDhcpTxoff=staTcpipDhcpTxoff, setConfiCrontabInde=setConfiCrontabInde, staIprouRipDynlRipt=staIprouRipDynlRipt, staPppIpcTxconfigack=staPppIpcTxconfigack, setInterWlaRoamingRoamingthre=setInterWlaRoamingRoamingthre, staTcpipTcpWanser=staTcpipTcpWanser, staTcpipDhcpDhcptLan=staTcpipDhcpDhcptLan, staIprouRipDynwRxfi=staIprouRipDynwRxfi, setIprouFirActioDes=setIprouFirActioDes, setIprouFirOpenpEntry=setIprouFirOpenpEntry, setDnsDoma=setDnsDoma, staWlanPacketRxc=staWlanPacketRxc, staPppoeConPee=staPppoeConPee, staPppTxoIpcDnsde=staPppTxoIpcDnsde, staCertiSceCertsTable=staCertiSceCertsTable, staWlanSeenclNet=staWlanSeenclNet, setWlanRadarpattePat=setWlanRadarpattePat, staLanbrDhcMac=staLanbrDhcMac, staWlanSeenclTable=staWlanSeenclTable, setInterWlaGroupencrypKeytype4=setInterWlaGroupencrypKeytype4, trpIdle_Timeout=trpIdle_Timeout, setRadiuServeUsersTable=setRadiuServeUsersTable, staTcpipRadiussAccoTotalaccountbad=staTcpipRadiussAccoTotalaccountbad, staLanInteEntry=staLanInteEntry, setDhcpNetEndaddress=setDhcpNetEndaddress, staIprouProtocoLan=staIprouProtocoLan, setIprouNnnMapp=setIprouNnnMapp, staLanPackIfc=staLanPackIfc, staWlanGroupeRsc=staWlanGroupeRsc, staIprouQosPeer=staIprouQosPeer, staWlanmGserverlMgmtvlani=staWlanmGserverlMgmtvlani, staWlanClientInterfStatio=staWlanClientInterfStatio, setIprouFirObjecNam=setIprouFirObjecNam, setConfiPredefaEntry=setConfiPredefaEntry, staLanPackRxp=staLanPackRxp, othBoo=othBoo, setInterWlaRadiosettinChannellist=setInterWlaRadiosettinChannellist, staPppIpcTxconfigrequ=staPppIpcTxconfigrequ, staWlanClientPppoeiMac=staWlanClientPppoeiMac, staIprouServiceEntry=staIprouServiceEntry, setInterWlaEncryptionEntry=setInterWlaEncryptionEntry, staConfiScanresuTable=staConfiScanresuTable, setTimeDstEntry=setTimeDstEntry, staTimeDstEntry=staTimeDstEntry, setMailSenda=setMailSenda, staIprouVrrpEveVri=staIprouVrrpEveVri, setWanRoundroHea=setWanRoundroHea, staDhcpcLanIpnet=staDhcpcLanIpnet, setRadiuServeForwardservEntry=setRadiuServeForwardservEntry, staIprouVrrpVirPri=staIprouVrrpVirPri, setLanbrEncEnc=setLanbrEncEnc, setInterWlaNetworkMac=setInterWlaNetworkMac, staWlanChanneRadard=staWlanChanneRadard, staLanInteLin=staLanInteLin, staTcpipDns=staTcpipDns, staTcpipHttpActiveIndex=staTcpipHttpActiveIndex, staTcpipRadiuscAccountinTable=staTcpipRadiuscAccountinTable, setAccouAccPeer=setAccouAccPeer, setIprouFirObjecEntry=setIprouFirObjecEntry, staWlanStatioMacadd=staWlanStatioMacadd, setCertiSceCasCafingerprinta=setCertiSceCasCafingerprinta, staIprouVrrpOpe=staIprouVrrpOpe, staDslPppoeTxpadr=staDslPppoeTxpadr, setIprouFirConneTime=setIprouFirConneTime, setIprouFirConneSrca=setIprouFirConneSrca, staWlanInterpKeyTable=staWlanInterpKeyTable, staCalliSys=staCalliSys, setLanbrProPorten=setLanbrProPorten, setNetbiGroGro=setNetbiGroGro, setIprou1nnServicetaActive=setIprou1nnServicetaActive, staTcpipRadiuscAuthenticMalformed=staTcpipRadiuscAuthenticMalformed, setConfiWan=setConfiWan, staHardwPcidDevicei=staHardwPcidDevicei, trpPptpConn=trpPptpConn, setIprouRipParFlus=setIprouRipParFlus, staPppLcpRxterminatea=staPppLcpRxterminatea, setHttpRolRenumberv=setHttpRolRenumberv, staFilesConSiz=staFilesConSiz, setPerfoRttmoneIndex=setPerfoRttmoneIndex, setTimeUtc=setTimeUtc, setInterWlaTransmissioSoft=setInterWlaTransmissioSoft, trpCardHung=trpCardHung, staQueueSnmpque=staQueueSnmpque, staTcpipRadiussAccoDeletevalues=staTcpipRadiussAccoDeletevalues, staWlanmApconnIpad=staWlanmApconnIpad, setEchosAccPro=setEchosAccPro, setConfiAccesstTftp=setConfiAccesstTftp, staWlanInterfCardid=staWlanInterfCardid, staWlanStatioLaster=staWlanStatioLaster, staTcpipNetbiosWnod=staTcpipNetbiosWnod, setRadiuServeForwardservRea=setRadiuServeForwardservRea, staIprouQosIfc=staIprouQosIfc, staTcpipDhcpDelet=staTcpipDhcpDelet, setConfiAccesstHttp=setConfiAccesstHttp, staTcpipRadiussAccoCompletedaccounUsername=staTcpipRadiussAccoCompletedaccounUsername, staIprouLogtablSyst=staIprouLogtablSyst, setWlanAccesslistCom=setWlanAccesslistCom, setNetbiSerTable=setNetbiSerTable)
mibBuilder.exportSymbols("LANCOM-L54g-MIB", staPppLcpTxconfigrequ=staPppLcpTxconfigrequ, setConfiConfiga=setConfiConfiga, setRadiuServeForwardservPro=setRadiuServeForwardservPro, setPerfoRttmonsJittermaxnegds=setPerfoRttmonsJittermaxnegds, setWanRouteriYc=setWanRouteriYc, staLanPackRxb=staLanPackRxb, staIprouLogtablTable=staIprouLogtablTable, setChargResetbu=setChargResetbu, setLcrHolInd=setLcrHolInd, setTimeDstHou=setTimeDstHou, staTcpipDhcpNetwoDnsdefault=staTcpipDhcpNetwoDnsdefault, staPppIpc=staPppIpc, staTcpipHttpHttpsa=staTcpipHttpHttpsa, staLayerEntry=staLayerEntry, staTcpipRadiussLogtInd=staTcpipRadiussLogtInd, staWlanScanreInterp=staWlanScanreInterp, staTcpipHttpActiveRemotep=staTcpipHttpActiveRemotep, staLanByteEntry=staLanByteEntry, staLayerLay1=staLayerLay1, staDhcpcWanIpnet=staDhcpcWanIpnet, setIprou1nnIpsectablLocalad=setIprou1nnIpsectablLocalad, setWanBackupd=setWanBackupd, setDhcpNetAdaption=setDhcpNetAdaption, staTcpipHttpHttpno=staTcpipHttpHttpno, staWlanmApconnUtil=staWlanmApconnUtil, staTcpipDhcpNetwoNetmask=staTcpipDhcpNetwoNetmask, setDhcpPorTable=setDhcpPorTable, setLcrTimSto=setLcrTimSto, setDnsFiltIpa=setDnsFiltIpa, staWlanmLastwlMgm=staWlanmLastwlMgm, staPppCcpRxdiscarded=staPppCcpRxdiscarded, setRadiuServeAuthentific=setRadiuServeAuthentific, setTimeDstTim=setTimeDstTim, staWlanStatioTxlimi=staWlanStatioTxlimi, staWlanScanreEncryp=staWlanScanreEncryp, staWlanClientInterfRxpack=staWlanClientInterfRxpack, staDhcpcWanGatew=staDhcpcWanGatew, setAccouLasPeer=setAccouLasPeer, setRadiu=setRadiu, staDslRxunic=staDslRxunic, staCalliTable=staCalliTable, setWlanRadiusaccoExcludedv=setWlanRadiusaccoExcludedv, setNtpRqaRqa=setNtpRqaRqa, setNetbiNetNet=setNetbiNetNet, staPppCcpTxconfigreje=staPppCcpTxconfigreje, setConfiPasswor=setConfiPasswor, staWanMtuTable=staWanMtuTable, staWanThroughpuTxsc=staWanThroughpuTxsc, setInterWlaClientmodesEntry=setInterWlaClientmodesEntry, setHttpSsl=setHttpSsl, setIprouFirPortbEntry=setIprouFirPortbEntry, staWlanChanne108mbp=staWlanChanne108mbp, setLanSpareh=setLanSpareh, staIprouLandisc=staIprouLandisc, staIprouLantx=staIprouLantx, staWlanmRadiop5ghzmode=staWlanmRadiop5ghzmode, staTcpipRadiuscAuthenticPort=staTcpipRadiuscAuthenticPort, setAccouTimDay=setAccouTimDay, setIprouRipWanRtgt=setIprouRipWanRtgt, setInterWlaEncryptionClie=setInterWlaEncryptionClie, setChargDaysper=setChargDaysper, staPptpConTable=staPptpConTable, staWlanmGserverlGateway=staWlanmGserverlGateway, staTcpipNetbiosConf=staTcpipNetbiosConf, staCalliCap=staCalliCap, staPppRxoLcpTable=staPppRxoLcpTable, staTcpipArpWanr=staTcpipArpWanr, staIprouLogtablDsta=staIprouLogtablDsta, staPppRxoIpcTable=staPppRxoIpcTable, staLanPackTxb=staLanPackTxb, setWanRoundroPee=setWanRoundroPee, setPerfoRttmonsJittercountposs=setPerfoRttmonsJittercountposs, staTcpipIcmpWant=staTcpipIcmpWant, setConfiLockmin=setConfiLockmin, staIprouLogtablSrcp=staIprouLogtablSrcp, setIprouRipWanRipa=setIprouRipWanRipa, staDslDelete=staDslDelete, staConfiLoginloc=staConfiLoginloc, staWlanStatioIdleti=staWlanStatioIdleti, setInterWlaOperationalEntry=setInterWlaOperationalEntry, setWan=setWan, trpDisAssStation=trpDisAssStation, staIprouVrrp=staIprouVrrp)
