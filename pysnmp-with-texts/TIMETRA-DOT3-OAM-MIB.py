#
# PySNMP MIB module TIMETRA-DOT3-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-DOT3-OAM-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:17:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
dot3OamPeerMacAddress, dot3OamLoopbackEntry, dot3OamEntry = mibBuilder.importSymbols("DOT3-OAM-MIB", "dot3OamPeerMacAddress", "dot3OamLoopbackEntry", "dot3OamEntry")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, NotificationType, Gauge32, Counter64, Integer32, MibIdentifier, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, Unsigned32, iso, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "Gauge32", "Counter64", "Integer32", "MibIdentifier", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "iso", "Bits", "Counter32")
TextualConvention, RowStatus, DisplayString, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TimeStamp", "TruthValue")
tmnxSRObjs, tmnxSRNotifyPrefix, tmnxSRConfs, timetraSRMIBModules = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRObjs", "tmnxSRNotifyPrefix", "tmnxSRConfs", "timetraSRMIBModules")
timetraDOT3OAMMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 42))
timetraDOT3OAMMIBModule.setRevisions(('1908-07-01 00:00', '1908-01-01 00:00', '2006-08-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: timetraDOT3OAMMIBModule.setRevisionsDescriptions(('Rev 6.1 01 Jul 2008 00:00 6.1 release of the TIMETRA-DOT3-OAM-MIB.', 'Rev 6.0 01 Jan 2008 00:00 6.0 release of the TIMETRA-DOT3-OAM-MIB.', 'Rev 0.1 01 Aug 2006 00:00 Initial version of the TIMETRA-DOT3-OAM-MIB.',))
if mibBuilder.loadTexts: timetraDOT3OAMMIBModule.setLastUpdated('0807010000Z')
if mibBuilder.loadTexts: timetraDOT3OAMMIBModule.setOrganization('Alcatel-Lucent')
if mibBuilder.loadTexts: timetraDOT3OAMMIBModule.setContactInfo('Alcatel-Lucent SROS Support Web: http://support.alcatel-lucent.com')
if mibBuilder.loadTexts: timetraDOT3OAMMIBModule.setDescription("This document is the SNMP MIB module to manage and provision Ethernet OAM (802.3ah) functionality for the Alcatel-Lucent SROS device. This includes extensions to the DOT3-OAM-MIB defined in IEEE 802.3ah to allow transmit interval configuration and other locally configured modifications. Copyright 2006-2011 Alcatel-Lucent. All rights reserved. Reproduction of this document is authorized on the condition that the foregoing copyright notice is included. This SNMP MIB module (Specification) embodies Alcatel-Lucent's proprietary intellectual property. Alcatel-Lucent retains all title and ownership in the Specification, including any revisions. Alcatel-Lucent grants all interested parties a non-exclusive license to use and distribute an unmodified copy of this Specification in connection with management of Alcatel-Lucent products, and without fee, provided this copyright notice and license appear on all copies. This Specification is supplied 'as is', and Alcatel-Lucent makes no warranty, either express or implied, as to the use, operation, condition, or performance of the Specification.")
tmnxDot3OamObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42))
tmnxDot3OamMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42))
tmnxDot3OamEntryObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1))
tmnxDot3OamLoopbackObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 2))
tmnxDot3OamNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42))
tmnxDot3OamNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42, 42))
tmnxDot3OamNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42, 42, 0))
tmnxDot3OamTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1), )
if mibBuilder.loadTexts: tmnxDot3OamTable.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamTable.setDescription('The tmnxDot3OamTable is used to store proprietary configuration information on a particular Ethernet like interface (OAM entity) in the system that supports the OAM functions defined in [802.3ah].')
tmnxDot3OamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1), )
dot3OamEntry.registerAugmentions(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamEntry"))
tmnxDot3OamEntry.setIndexNames(*dot3OamEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxDot3OamEntry.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamEntry.setDescription('An entry in the tmnxDot3OamTable containing configuration information applicable to an OAM entity.')
tmnxDot3OamLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxDot3OamLastChanged.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLastChanged.setDescription('The value of tmnxDot3OamLastChanged indicates the sysUpTime value when this row was last modified.')
tmnxDot3OamInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setUnits('100s of milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDot3OamInterval.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamInterval.setDescription('The value of tmnxDot3OamInterval specifies the number of 100ms time intervals between each periodic OAMPDU transmit and receive. A lower value implies that OAMPDUs will be transmitted more frequently to the peer, and OAMPDUs must be received more frequently from the peer. The default is set to 10, meaning 1 second between transmits and receives.')
tmnxDot3OamMultiplier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 5)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDot3OamMultiplier.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamMultiplier.setDescription('The value of tmnxDot3OamMultiplier specifies how many receive intervals may expire with no OAMPDU receive. After the configured number of intervals with OAMPDU receive have passed, the OAM negotiation process will restart.')
tmnxDot3OamTunneling = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDot3OamTunneling.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamTunneling.setDescription("The value of tmnxDot3OamTunneling specifies if OAMPDUs should be passed transparently through the OAM entity for processing by another OAM entity across the network, or if OAMPDUs should be terminated and processed at the local OAM entity. This object can only be set to 'true' if dot3OamAdminState is set to 'disabled'. Likewise, dot3OamAdminState can only be set to 'enabled' if this object is set to 'false'. It is not valid to try and enable both OAMPDU processing and OAMPDU tunneling on the same OAM entity.")
tmnxDot3OamLooped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxDot3OamLooped.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLooped.setDescription("The value of tmnxDot3OamLooped indicates if the OAM entity is receiving OAMPDUs that it transmitted. A value of 'true' indicates that the OAM entity is receiving it's own OAMPDUs while a value of 'false' indicates it is not.")
tmnxDot3OamHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDot3OamHoldTime.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamHoldTime.setDescription("The value of tmnxDot3OamHoldTime specifies the number of seconds the efm-oam protocol should wait after dot3OamOperStatus transitions from 'operational (9)' to a non-operational state before going back to the 'operational (9)' state again. Note that a transition to the 'linkFault (2)' state does not cause tmnxDot3OamHoldTime to be used if dot3OamOperStatus was previously in the 'operational (9)' state.")
tmnxDot3OamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 2, 1), )
if mibBuilder.loadTexts: tmnxDot3OamLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopbackTable.setDescription('The tmnxDot3OamLoopbackTable is used to store proprietary loopback configuration information on a particular Ethernet like interface (OAM entity) in the system that supports the OAM functions defined in [802.3ah].')
tmnxDot3OamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 2, 1, 1), )
dot3OamLoopbackEntry.registerAugmentions(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackEntry"))
tmnxDot3OamLoopbackEntry.setIndexNames(*dot3OamLoopbackEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxDot3OamLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopbackEntry.setDescription('An entry in the tmnxDot3OamLoopbackTable containing configuration information applicable to an OAM entity.')
tmnxDot3OamLoopbackLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 2, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxDot3OamLoopbackLastChanged.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopbackLastChanged.setDescription('The value of tmnxDot3OamLoopbackLastChanged indicates the sysUpTime value when this row was last modified.')
tmnxDot3OamLoopbackLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 42, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noLoopback", 1), ("localLoopback", 2))).clone('noLoopback')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxDot3OamLoopbackLocalStatus.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopbackLocalStatus.setDescription("The value of tmnxDot3OamLoopbackLocalStatus indicates the local loopback status of the OAM entity. This attribute allows the user to manually set the local OAM entity loopback mode overriding the 802.3ah protocol for loopback. Setting the value to 'localLoopback' can only be done if dot3OamLoopbackStatus is set to 'noLoopback'. If dot3OamLoopbackStatus is any value other than 'noLoopback', the changes to tmnxDot3OamLoopbackLocalStatus will have no effect. If dot3OamLoopbackStatus is set to 'localLoopback', the OAM entity will act as if its peer put the OAM entity into local loopback. This entry allows the user to put an OAM entity into local loopback mode, even if dot3OamLoopbackIgnoreRx is set to 'ignore'.")
tmnxDot3OamPeerChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42, 42, 0, 1)).setObjects(("DOT3-OAM-MIB", "dot3OamPeerMacAddress"))
if mibBuilder.loadTexts: tmnxDot3OamPeerChanged.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamPeerChanged.setDescription('The tmnxDot3OamPeerChanged notification is generated when the peer information (specifically the Peer MAC address) changes. Note that this notification will only be sent out if the peer information was previously available and the information changed, and not when the peer information is first learned or becomes unavailable.')
tmnxDot3OamLoopDetected = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42, 42, 0, 2)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tmnxDot3OamLoopDetected.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopDetected.setDescription('The tmnxDot3OamLoopDetected notification is generated when a port receives an 802.3ah PDU with a source MAC address that matches the MAC address of that port.')
tmnxDot3OamLoopCleared = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 42, 42, 0, 3)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tmnxDot3OamLoopCleared.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopCleared.setDescription('The tmnxDot3OamLoopCleared notification is generated when a port is no longer receiving 802.3ah PDUs with a source MAC address that matches the MAC address of that port.')
tmnxDot3OamMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 1))
tmnxDot3OamMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2))
tmnxDot3OamMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 1, 1)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamGroup"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackGroup"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamMIBCompliance = tmnxDot3OamMIBCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: tmnxDot3OamMIBCompliance.setDescription('The compliance statement for revision 5.0 of TIMETRA-DOT3-OAM-MIB.')
tmnxDot3OamMIBV6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 1, 2)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamV6v0Group"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackGroup"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamNotificationV6v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamMIBV6v0Compliance = tmnxDot3OamMIBV6v0Compliance.setStatus('obsolete')
if mibBuilder.loadTexts: tmnxDot3OamMIBV6v0Compliance.setDescription('The compliance statement for revision 6.0 of TIMETRA-DOT3-OAM-MIB.')
tmnxDot3OamMIBV6v1Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 1, 3)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamV6v0Group"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamV6v1Group"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackGroup"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamNotificationV6v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamMIBV6v1Compliance = tmnxDot3OamMIBV6v1Compliance.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamMIBV6v1Compliance.setDescription('The compliance statement for revision 6.0 of TIMETRA-DOT3-OAM-MIB.')
tmnxDot3OamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 1)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLastChanged"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamInterval"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamMultiplier"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamTunneling"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamGroup = tmnxDot3OamGroup.setStatus('obsolete')
if mibBuilder.loadTexts: tmnxDot3OamGroup.setDescription('The group of objects providing for management an Ethernet OAM entity on Alcatel 7750 SR series systems.')
tmnxDot3OamLoopbackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 2)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackLastChanged"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopbackLocalStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamLoopbackGroup = tmnxDot3OamLoopbackGroup.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamLoopbackGroup.setDescription('The group of objects providing for loopback management an Ethernet OAM entity on Alcatel 7750 SR series systems.')
tmnxDot3OamNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 3)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamPeerChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamNotificationGroup = tmnxDot3OamNotificationGroup.setStatus('obsolete')
if mibBuilder.loadTexts: tmnxDot3OamNotificationGroup.setDescription('The group of notifications supporting Ethernet OAM in on Alcatel 7x50 SR series systems.')
tmnxDot3OamNotificationV6v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 4)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamPeerChanged"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopDetected"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLoopCleared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamNotificationV6v0Group = tmnxDot3OamNotificationV6v0Group.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamNotificationV6v0Group.setDescription('The group of notifications supporting Ethernet OAM in on Alcatel 7x50 SR series systems release 6.0.')
tmnxDot3OamV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 5)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLastChanged"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamInterval"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamMultiplier"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamTunneling"), ("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamLooped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamV6v0Group = tmnxDot3OamV6v0Group.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamV6v0Group.setDescription('The group of objects providing management for an Ethernet OAM entity on Alcatel 7750 SR series systems release 6.0.')
tmnxDot3OamV6v1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 42, 2, 6)).setObjects(("TIMETRA-DOT3-OAM-MIB", "tmnxDot3OamHoldTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxDot3OamV6v1Group = tmnxDot3OamV6v1Group.setStatus('current')
if mibBuilder.loadTexts: tmnxDot3OamV6v1Group.setDescription('The group of objects providing management for an Ethernet OAM entity on Alcatel 7750 SR series systems release 6.1.')
mibBuilder.exportSymbols("TIMETRA-DOT3-OAM-MIB", tmnxDot3OamMIBV6v1Compliance=tmnxDot3OamMIBV6v1Compliance, tmnxDot3OamLoopCleared=tmnxDot3OamLoopCleared, tmnxDot3OamLoopbackLastChanged=tmnxDot3OamLoopbackLastChanged, tmnxDot3OamNotificationsPrefix=tmnxDot3OamNotificationsPrefix, tmnxDot3OamLoopDetected=tmnxDot3OamLoopDetected, tmnxDot3OamV6v0Group=tmnxDot3OamV6v0Group, tmnxDot3OamNotifyPrefix=tmnxDot3OamNotifyPrefix, tmnxDot3OamTable=tmnxDot3OamTable, tmnxDot3OamV6v1Group=tmnxDot3OamV6v1Group, tmnxDot3OamInterval=tmnxDot3OamInterval, tmnxDot3OamLoopbackObjs=tmnxDot3OamLoopbackObjs, tmnxDot3OamMIBConformance=tmnxDot3OamMIBConformance, tmnxDot3OamLoopbackEntry=tmnxDot3OamLoopbackEntry, tmnxDot3OamEntry=tmnxDot3OamEntry, tmnxDot3OamLastChanged=tmnxDot3OamLastChanged, PYSNMP_MODULE_ID=timetraDOT3OAMMIBModule, tmnxDot3OamMIBCompliances=tmnxDot3OamMIBCompliances, tmnxDot3OamMIBGroups=tmnxDot3OamMIBGroups, tmnxDot3OamMIBV6v0Compliance=tmnxDot3OamMIBV6v0Compliance, tmnxDot3OamMIBCompliance=tmnxDot3OamMIBCompliance, tmnxDot3OamMultiplier=tmnxDot3OamMultiplier, tmnxDot3OamNotifications=tmnxDot3OamNotifications, tmnxDot3OamLoopbackLocalStatus=tmnxDot3OamLoopbackLocalStatus, tmnxDot3OamPeerChanged=tmnxDot3OamPeerChanged, tmnxDot3OamLoopbackTable=tmnxDot3OamLoopbackTable, tmnxDot3OamObjs=tmnxDot3OamObjs, tmnxDot3OamLooped=tmnxDot3OamLooped, tmnxDot3OamGroup=tmnxDot3OamGroup, tmnxDot3OamNotificationGroup=tmnxDot3OamNotificationGroup, timetraDOT3OAMMIBModule=timetraDOT3OAMMIBModule, tmnxDot3OamTunneling=tmnxDot3OamTunneling, tmnxDot3OamLoopbackGroup=tmnxDot3OamLoopbackGroup, tmnxDot3OamEntryObjs=tmnxDot3OamEntryObjs, tmnxDot3OamHoldTime=tmnxDot3OamHoldTime, tmnxDot3OamNotificationV6v0Group=tmnxDot3OamNotificationV6v0Group)
