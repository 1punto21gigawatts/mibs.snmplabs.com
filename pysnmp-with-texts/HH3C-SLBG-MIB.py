#
# PySNMP MIB module HH3C-SLBG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-SLBG-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:29:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, iso, TimeTicks, ObjectIdentity, Counter64, Integer32, IpAddress, MibIdentifier, ModuleIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "TimeTicks", "ObjectIdentity", "Counter64", "Integer32", "IpAddress", "MibIdentifier", "ModuleIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hh3cSlbg = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 130))
hh3cSlbg.setRevisions(('2012-10-16 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: hh3cSlbg.setRevisionsDescriptions(('The initial revision of this MIB module.',))
if mibBuilder.loadTexts: hh3cSlbg.setLastUpdated('201210160000Z')
if mibBuilder.loadTexts: hh3cSlbg.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
if mibBuilder.loadTexts: hh3cSlbg.setContactInfo('Platform Team Hangzhou H3C Tech. Co., Ltd. Hai-Dian District Beijing P.R. China http://www.h3c.com Zip: 100085')
if mibBuilder.loadTexts: hh3cSlbg.setDescription('H3C service loopback group MIB.')
hh3cSlbgMibTable = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1))
hh3cSlbgGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 1), )
if mibBuilder.loadTexts: hh3cSlbgGroupTable.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgGroupTable.setDescription('A table of service loopback group objects.')
hh3cSlbgGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 1, 1), ).setIndexNames((0, "HH3C-SLBG-MIB", "hh3cSlbgGroupNumber"))
if mibBuilder.loadTexts: hh3cSlbgGroupEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgGroupEntry.setDescription('The service loopback group entry.')
hh3cSlbgGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cSlbgGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgGroupNumber.setDescription('Serial number of the service loopback group.')
hh3cSlbgGroupSrvType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 1, 1, 2), Bits().clone(namedValues=NamedValues(("ipv6", 0), ("ipv6mc", 1), ("tunnel", 2), ("multicastTunnel", 3), ("mpls", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSlbgGroupSrvType.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgGroupSrvType.setDescription('Service type of the service loopback group. ipv6: IPv6 unicast service type. ipv6mc: IPv6 multicast service type. tunnel: Unicast tunnel service type. multicastTunnel: Multicast tunnel service type. mpls: MPLS service type.')
hh3cSlbgGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cSlbgGroupRowStatus.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgGroupRowStatus.setDescription('This object is used to create, modify, or delete rows. hh3cSlbgGroupNumber and hh3cSlbgGroupSrvType must have a valid value before a row can be activated.')
hh3cSlbgPortTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 2), )
if mibBuilder.loadTexts: hh3cSlbgPortTable.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgPortTable.setDescription('A table of port objects.')
hh3cSlbgPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 2, 1), ).setIndexNames((0, "HH3C-SLBG-MIB", "hh3cSlbgPortIndex"))
if mibBuilder.loadTexts: hh3cSlbgPortEntry.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgPortEntry.setDescription('The service loopback group port entry.')
hh3cSlbgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hh3cSlbgPortIndex.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgPortIndex.setDescription('Interface index of the port, which is defined in RFC1213 (MIB-II).')
hh3cSlbgPortAttachedGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSlbgPortAttachedGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgPortAttachedGroupNumber.setDescription('The value of the service group number to which this port is assigned. The value is zero if the port is not assigned to any service loopback group.')
hh3cSlbgPortSelectedGroupNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 130, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cSlbgPortSelectedGroupNumber.setStatus('current')
if mibBuilder.loadTexts: hh3cSlbgPortSelectedGroupNumber.setDescription('The value of the service group number to which this selected port is assigned. The value is zero if the port is not selected or not assigned to any service loopback group.')
mibBuilder.exportSymbols("HH3C-SLBG-MIB", hh3cSlbgGroupEntry=hh3cSlbgGroupEntry, hh3cSlbgMibTable=hh3cSlbgMibTable, hh3cSlbgGroupNumber=hh3cSlbgGroupNumber, hh3cSlbgPortAttachedGroupNumber=hh3cSlbgPortAttachedGroupNumber, hh3cSlbgPortIndex=hh3cSlbgPortIndex, hh3cSlbgPortEntry=hh3cSlbgPortEntry, hh3cSlbgGroupRowStatus=hh3cSlbgGroupRowStatus, hh3cSlbgPortSelectedGroupNumber=hh3cSlbgPortSelectedGroupNumber, PYSNMP_MODULE_ID=hh3cSlbg, hh3cSlbgPortTable=hh3cSlbgPortTable, hh3cSlbgGroupTable=hh3cSlbgGroupTable, hh3cSlbg=hh3cSlbg, hh3cSlbgGroupSrvType=hh3cSlbgGroupSrvType)
