#
# PySNMP MIB module Juniper-CLI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-CLI-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:02:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniLogSeverity, = mibBuilder.importSymbols("Juniper-TC", "JuniLogSeverity")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Bits, Unsigned32, Counter32, MibIdentifier, TimeTicks, ModuleIdentity, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Bits", "Unsigned32", "Counter32", "MibIdentifier", "TimeTicks", "ModuleIdentity", "NotificationType", "ObjectIdentity")
TruthValue, TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "DateAndTime")
juniCliMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30))
juniCliMIB.setRevisions(('2007-12-10 13:25', '2002-09-16 21:44', '2000-09-26 13:50', '1999-12-01 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: juniCliMIB.setRevisionsDescriptions(('Added the juniCliConfigurationTable. A script file transferred using JUNIPER-FILE-XFER-MIB can be applied using this table.', 'Replaced Unisphere names with Juniper names.', 'Make it SMIv2 conformant.', 'Initial version of this MIB module.',))
if mibBuilder.loadTexts: juniCliMIB.setLastUpdated('200712101325Z')
if mibBuilder.loadTexts: juniCliMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniCliMIB.setContactInfo(' Juniper Networks, Inc. Postal: 10 Technology Park Drive Westford MA 01886-3146 USA Tel: +1 978 589 5800 Email: mib@Juniper.net')
if mibBuilder.loadTexts: juniCliMIB.setDescription('The Command Line Interface (CLI) MIB for the Juniper Networks enterprise.')
juniCliTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 0))
juniCliObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1))
juniCliConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2))
juniCliGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 1))
juniCliSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 2))
juniCliSecurityTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniCliSecurityTrapEnable.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityTrapEnable.setDescription('An indication of whether the juniCliSecurityAlert notifications are enabled.')
juniCliConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3), )
if mibBuilder.loadTexts: juniCliConfigurationTable.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationTable.setDescription('A table which has entries for the configuration files which are transferred using juniFileXferMIB.')
juniCliConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3, 1), ).setIndexNames((0, "Juniper-CLI-MIB", "juniCliConfigurationIndex"))
if mibBuilder.loadTexts: juniCliConfigurationEntry.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationEntry.setDescription('An entry in juniCliConfigurationTable represents a CLI configuration file which can be applied using juniConfigurationApply object.')
juniCliConfigurationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: juniCliConfigurationIndex.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationIndex.setDescription('A unique index used to identify this entry. The value of the index is same as the index in juniFileXferTable from juniFileXferMIB. The entries in this table correspond only to those entries in the juniFileXferTable which has the juniFileXferFileType specified as juniFileXferScript.')
juniCliConfigurationFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniCliConfigurationFileName.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationFileName.setDescription('The full path name of the CLI configuration files on the router which are copied using juniFileXferMIB. The configuration specified in these file can be applied to the router.')
juniCliConfigurationApply = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("juniCliConfigurationReadyToApply", 0), ("juniCliConfigurationApplyNow", 1))).clone('juniCliConfigurationReadyToApply')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniCliConfigurationApply.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationApply.setDescription('As soon as a CLI configuration file is transferred using juniFileXferMIB, this value is set to juniCliConfigurationReadyToApply. If the user wants to apply the configuration specified in this file, the value of this object needs to be set to juniCliConfigurationApplyNow. Once the operation is completed, the status of the operation is updated in juniCliConfigurationOpStatus object and the value of juniCliConfigurationApply is reset to juniCliConfigurationReadyToApply.')
juniCliConfigurationOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("juniCliConfigurationOpNoOp", 0), ("juniCliConfigurationOpSuccessful", 1), ("juniCliConfigurationOpInProgress", 2), ("juniCliConfigurationFileNotFound", 3), ("juniCliConfigurationFileIncompatible", 4), ("juniCliConfigurationOperationFailed", 5))).clone('juniCliConfigurationOpNoOp')).setMaxAccess("readonly")
if mibBuilder.loadTexts: juniCliConfigurationOpStatus.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationOpStatus.setDescription('The status of the operation. Once the CLI configuration file is copied, the value of this object is set to juniCliConfigurationOp. Once the administrator sets the vlaue of juniCliConfigurationApply object to be juniCliConfigurationApplyNow,the status is changed to juniCliConfigurationOpInProgress until the operation is completed. After completion of the operation, the status is set to one of the specified values.')
juniCliSecurityAlertPriority = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 2, 1), JuniLogSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniCliSecurityAlertPriority.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityAlertPriority.setDescription('The priority level of the cli security alert.')
juniCliSecurityAlertMessage = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 2, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniCliSecurityAlertMessage.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityAlertMessage.setDescription('The cli security alert message.')
juniCliSecurityAlertTime = MibScalar((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 1, 2, 3), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: juniCliSecurityAlertTime.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityAlertTime.setDescription('The date and time of this cliSecurityAlert.')
juniCliSecurityAlert = NotificationType((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 0, 1)).setObjects(("Juniper-CLI-MIB", "juniCliSecurityAlertPriority"), ("Juniper-CLI-MIB", "juniCliSecurityAlertMessage"), ("Juniper-CLI-MIB", "juniCliSecurityAlertTime"))
if mibBuilder.loadTexts: juniCliSecurityAlert.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityAlert.setDescription('Reports a cli security alert. Events such as the following generate this notification when it is enabled: - Logins/logouts from telnet or console access - Logins/logout from SSH - Access from unknown IP addreses - Access list accept or failures - Successful and unsuccessful authentications ')
juniCliCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 1))
juniCliGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 2))
juniCliCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 1, 1)).setObjects(("Juniper-CLI-MIB", "juniCliGroup"), ("Juniper-CLI-MIB", "juniCliSecurityAlertGroup"), ("Juniper-CLI-MIB", "juniCliSecurityTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliCompliance = juniCliCompliance.setStatus('obsolete')
if mibBuilder.loadTexts: juniCliCompliance.setDescription('Obsolete compliance statement for entities that implement the Juniper CLI MIB. This statement became obsolete when new groups were added.')
juniCliCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 1, 2)).setObjects(("Juniper-CLI-MIB", "juniCliGroup"), ("Juniper-CLI-MIB", "juniCliSecurityAlertGroup"), ("Juniper-CLI-MIB", "juniCliSecurityTrapGroup"), ("Juniper-CLI-MIB", "juniCliConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliCompliance2 = juniCliCompliance2.setStatus('current')
if mibBuilder.loadTexts: juniCliCompliance2.setDescription('The compliance statement for entities that implement the Juniper CLI MIB.')
juniCliGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 2, 1)).setObjects(("Juniper-CLI-MIB", "juniCliSecurityTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliGroup = juniCliGroup.setStatus('current')
if mibBuilder.loadTexts: juniCliGroup.setDescription('A management object pertaining to CLI security configuration.')
juniCliSecurityAlertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 2, 2)).setObjects(("Juniper-CLI-MIB", "juniCliSecurityAlertPriority"), ("Juniper-CLI-MIB", "juniCliSecurityAlertMessage"), ("Juniper-CLI-MIB", "juniCliSecurityAlertTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliSecurityAlertGroup = juniCliSecurityAlertGroup.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityAlertGroup.setDescription('A collection of management objects pertaining to CLI security alert notification.')
juniCliSecurityTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 2, 3)).setObjects(("Juniper-CLI-MIB", "juniCliSecurityAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliSecurityTrapGroup = juniCliSecurityTrapGroup.setStatus('current')
if mibBuilder.loadTexts: juniCliSecurityTrapGroup.setDescription('A management notification pertaining to CLI security operations.')
juniCliConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 30, 2, 2, 4)).setObjects(("Juniper-CLI-MIB", "juniCliConfigurationFileName"), ("Juniper-CLI-MIB", "juniCliConfigurationApply"), ("Juniper-CLI-MIB", "juniCliConfigurationOpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniCliConfigurationGroup = juniCliConfigurationGroup.setStatus('current')
if mibBuilder.loadTexts: juniCliConfigurationGroup.setDescription('A collection of objects providing information to implementers for applying configuration on a Juniper router.')
mibBuilder.exportSymbols("Juniper-CLI-MIB", juniCliConfigurationIndex=juniCliConfigurationIndex, juniCliConfigurationGroup=juniCliConfigurationGroup, juniCliCompliance=juniCliCompliance, juniCliSecurity=juniCliSecurity, PYSNMP_MODULE_ID=juniCliMIB, juniCliConfigurationEntry=juniCliConfigurationEntry, juniCliConfigurationApply=juniCliConfigurationApply, juniCliMIB=juniCliMIB, juniCliSecurityAlertMessage=juniCliSecurityAlertMessage, juniCliConfigurationOpStatus=juniCliConfigurationOpStatus, juniCliGroups=juniCliGroups, juniCliGeneral=juniCliGeneral, juniCliSecurityAlertGroup=juniCliSecurityAlertGroup, juniCliConfigurationTable=juniCliConfigurationTable, juniCliSecurityTrapGroup=juniCliSecurityTrapGroup, juniCliSecurityTrapEnable=juniCliSecurityTrapEnable, juniCliTrap=juniCliTrap, juniCliObjects=juniCliObjects, juniCliSecurityAlertTime=juniCliSecurityAlertTime, juniCliSecurityAlert=juniCliSecurityAlert, juniCliGroup=juniCliGroup, juniCliConfigurationFileName=juniCliConfigurationFileName, juniCliSecurityAlertPriority=juniCliSecurityAlertPriority, juniCliConformance=juniCliConformance, juniCliCompliance2=juniCliCompliance2, juniCliCompliances=juniCliCompliances)
