#
# PySNMP MIB module SONUS-ACCOUNTING-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONUS-ACCOUNTING-SERVICES-MIB
# Produced by pysmi-0.3.4 at Wed May  1 15:09:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, TimeTicks, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32, ModuleIdentity, NotificationType, IpAddress, Gauge32, Counter64, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "TimeTicks", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32", "ModuleIdentity", "NotificationType", "IpAddress", "Gauge32", "Counter64", "Unsigned32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonusEventClass, sonusEventLevel, sonusEventDescription = mibBuilder.importSymbols("SONUS-COMMON-MIB", "sonusEventClass", "sonusEventLevel", "sonusEventDescription")
sonusServicesMIBs, = mibBuilder.importSymbols("SONUS-SMI", "sonusServicesMIBs")
SonusAdminState, = mibBuilder.importSymbols("SONUS-TC", "SonusAdminState")
sonusAccountingServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5))
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setLastUpdated('200102030000Z')
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setOrganization('Sonus Networks, Inc.')
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setContactInfo(' Customer Support Sonus Networks, Inc, 5 carlisle Road Westford, MA 01886 USA Tel: 978-692-8999 Fax: 978-392-9118 E-mail: cs.snmp@sonusnet.com')
if mibBuilder.loadTexts: sonusAccountingServicesMIB.setDescription('The MIB Module for Accounting Services Management.')
sonusAccountingServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1))
sonusCallAccountingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1))
sonusCallAccountingConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1))
sonusAcctGenerationMode = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("origination", 1), ("destination", 2), ("allcalls", 3), ("none", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctGenerationMode.setStatus('current')
if mibBuilder.loadTexts: sonusAcctGenerationMode.setDescription('This configures the accounting generation mode for the node')
sonusAcctLogDestination = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("eventlog", 1))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctLogDestination.setStatus('current')
if mibBuilder.loadTexts: sonusAcctLogDestination.setDescription('This configures the destination of the accounting files for the node')
sonusAcctIntAcctState = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 3), SonusAdminState().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctIntAcctState.setStatus('current')
if mibBuilder.loadTexts: sonusAcctIntAcctState.setDescription('This configures whether Intermediate Accounting is Enabled or Disabled for the Node')
sonusAcctIntAcctInterval = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 86400)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonusAcctIntAcctInterval.setStatus('current')
if mibBuilder.loadTexts: sonusAcctIntAcctInterval.setDescription('This configures the Intermediate Accounting Interval in seconds')
sonusCallAccountingStatusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2))
sonusAcctNumCallAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusAcctNumCallAttempts.setDescription('The total Number of Call Attempts since last reboot')
sonusAcctNumCallCompletions = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallCompletions.setStatus('current')
if mibBuilder.loadTexts: sonusAcctNumCallCompletions.setDescription('The total Number of Succesful Call Completions since last reboot')
sonusAcctNumCallAttemptFailures = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttemptFailures.setStatus('current')
if mibBuilder.loadTexts: sonusAcctNumCallAttemptFailures.setDescription('The total Number of Unsuccesful Call Attempts since last reboot')
sonusAcctBusyHourAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctBusyHourAttempts.setStatus('current')
if mibBuilder.loadTexts: sonusAcctBusyHourAttempts.setDescription('The Average BHCA rate in the last one hour')
sonusAcctCallAttemptRate = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctCallAttemptRate.setStatus('current')
if mibBuilder.loadTexts: sonusAcctCallAttemptRate.setDescription('The Call arrival rate in calls/sec in the last one minute')
sonusAcctAvgCallDuration = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctAvgCallDuration.setStatus('current')
if mibBuilder.loadTexts: sonusAcctAvgCallDuration.setDescription('The Average Call Duration in seconds')
sonusAcctNumCallAttemptBlocked = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 1, 1, 2, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctNumCallAttemptBlocked.setStatus('current')
if mibBuilder.loadTexts: sonusAcctNumCallAttemptBlocked.setDescription('The total Number of Calls which were blocked/screened since last reboot')
sonusAccountingMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2))
sonusAccountingMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0))
sonusAccountingMIBNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 1))
sonusAcctOutOfServiceReason = MibScalar((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("configChange", 1), ("eventLoggingError", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonusAcctOutOfServiceReason.setStatus('current')
if mibBuilder.loadTexts: sonusAcctOutOfServiceReason.setDescription('The Reason for Call Accounting for the Node being Out-of-Service.')
sonusCallAccountingInServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0, 1)).setObjects(("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctGenerationMode"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctLogDestination"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctIntAcctState"), ("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctIntAcctInterval"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCallAccountingInServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCallAccountingInServiceNotification.setDescription('This Trap is Generated when a change is made to the Accounting Configuration for the Node, and the resultant configuration state of accounting for the node is that it is enabled/in-service')
sonusCallAccountingOutOfServiceNotification = NotificationType((1, 3, 6, 1, 4, 1, 2879, 2, 5, 5, 2, 0, 2)).setObjects(("SONUS-ACCOUNTING-SERVICES-MIB", "sonusAcctOutOfServiceReason"), ("SONUS-COMMON-MIB", "sonusEventDescription"), ("SONUS-COMMON-MIB", "sonusEventClass"), ("SONUS-COMMON-MIB", "sonusEventLevel"))
if mibBuilder.loadTexts: sonusCallAccountingOutOfServiceNotification.setStatus('current')
if mibBuilder.loadTexts: sonusCallAccountingOutOfServiceNotification.setDescription('This Trap is Generated when Accounting Records are no longer being generated on the Node. It could be either because of a change to the Accounting Configuration or because of errors in the logging mechanism such as file logging errors. When the reason specified for accounting outofservice is event logging error, then the SYS event logs on the Node should be examined to obtain further information about the event logging failure')
mibBuilder.exportSymbols("SONUS-ACCOUNTING-SERVICES-MIB", sonusAccountingMIBNotificationsPrefix=sonusAccountingMIBNotificationsPrefix, sonusAcctIntAcctState=sonusAcctIntAcctState, sonusAcctBusyHourAttempts=sonusAcctBusyHourAttempts, sonusAccountingServicesMIBObjects=sonusAccountingServicesMIBObjects, sonusAcctNumCallCompletions=sonusAcctNumCallCompletions, sonusAcctLogDestination=sonusAcctLogDestination, sonusAcctCallAttemptRate=sonusAcctCallAttemptRate, sonusCallAccountingOutOfServiceNotification=sonusCallAccountingOutOfServiceNotification, sonusAcctGenerationMode=sonusAcctGenerationMode, sonusAcctNumCallAttemptFailures=sonusAcctNumCallAttemptFailures, sonusAcctIntAcctInterval=sonusAcctIntAcctInterval, sonusCallAccountingInServiceNotification=sonusCallAccountingInServiceNotification, sonusAcctNumCallAttempts=sonusAcctNumCallAttempts, sonusAcctOutOfServiceReason=sonusAcctOutOfServiceReason, sonusAccountingMIBNotifications=sonusAccountingMIBNotifications, PYSNMP_MODULE_ID=sonusAccountingServicesMIB, sonusCallAccountingObjects=sonusCallAccountingObjects, sonusCallAccountingStatusObjects=sonusCallAccountingStatusObjects, sonusAcctNumCallAttemptBlocked=sonusAcctNumCallAttemptBlocked, sonusAccountingServicesMIB=sonusAccountingServicesMIB, sonusAccountingMIBNotificationsObjects=sonusAccountingMIBNotificationsObjects, sonusAcctAvgCallDuration=sonusAcctAvgCallDuration, sonusCallAccountingConfigObjects=sonusCallAccountingConfigObjects)
