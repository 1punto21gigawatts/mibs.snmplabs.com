#
# PySNMP MIB module PERF-STAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PERF-STAT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 14:40:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
alarmIndex, alarmRisingThreshold, alarmValue, alarmFallingThreshold, alarmInterval, alarmVariable = mibBuilder.importSymbols("RMON-MIB", "alarmIndex", "alarmRisingThreshold", "alarmValue", "alarmFallingThreshold", "alarmInterval", "alarmVariable")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
enterprises, TimeTicks, NotificationType, iso, ObjectIdentity, Integer32, MibIdentifier, ModuleIdentity, Gauge32, Unsigned32, Counter64, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "TimeTicks", "NotificationType", "iso", "ObjectIdentity", "Integer32", "MibIdentifier", "ModuleIdentity", "Gauge32", "Unsigned32", "Counter64", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TimeStamp, RowStatus, DisplayString, DateAndTime, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "DisplayString", "DateAndTime", "TextualConvention", "TruthValue")
sitara = MibIdentifier((1, 3, 6, 1, 4, 1, 2302))
sitaraCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1))
sitaraCfgPlcy = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 1))
sitaraCfgSysGenlObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 2, 2))
sitaraCfgSys = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 2))
sitaraCfgSysMon = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6))
sitaraPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2))
sitaraPerfSys = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2, 2))
sitaraPerfTraf = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2, 3))
sitaraPerfPlcy = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2, 4))
sitaraPerfCach = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2, 5))
sitaraPerfNotifns = MibIdentifier((1, 3, 6, 1, 4, 1, 2302, 2, 6))
sitaraPerfMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2302, 2, 2, 1))
sitaraPerfMonMIB.setRevisions(('2001-06-15 14:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: sitaraPerfMonMIB.setRevisionsDescriptions(('This Version of MIB consists of the Objects supported in QosDirector 1.5/QosWorks 1.10/QosArray 1.3. Status of the Objects/Notification, supported only in the QosWorks 1.7/1.8/1.9, are not supported any more is changed to obsolete',))
if mibBuilder.loadTexts: sitaraPerfMonMIB.setLastUpdated('200106151400Z')
if mibBuilder.loadTexts: sitaraPerfMonMIB.setOrganization('Sitara, Incorporated')
if mibBuilder.loadTexts: sitaraPerfMonMIB.setContactInfo(' Postal Address: Sitara Networks 52 Second Avenue Suite 200 Waltham MA. 02451 USA Tel: +1 781 487 5900 E-mail: info@sitaranetworks.com WWW: http://www.sitaranetworks.com')
if mibBuilder.loadTexts: sitaraPerfMonMIB.setDescription('This MIB module provides Sitara QOSWorks performance monitoring capabilities.')
class FilterType(TextualConvention, Integer32):
    description = 'This TC defines a traffic filter type. It describes how TCP/IP addresses and port numbers in a particular instance of a traffic monitor are used to filter traffic.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 1), ("sourceAddr", 2), ("sourcePort", 3), ("destinationAddr", 4), ("destinationPort", 5), ("bothPorts", 6))

class FilterDirection(TextualConvention, Integer32):
    description = 'This TC defines the directions of traffic flows.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class PolicyName(TextualConvention, OctetString):
    description = " [A-Za-z0-9_ + && not 'default' (UTF-8 ever?))] 'default' A policy pathname."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

class CbqName(TextualConvention, OctetString):
    description = '[Cc]_[0-9]{1,8} This Tc represents an internal name used by CBQ to identify a policy being monitored.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 10)

class PolicyType(TextualConvention, Integer32):
    description = 'Describes the type of a policy for which statistics are being collected.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("class", 0), ("group", 1), ("link", 2))

class PolicyPathName(TextualConvention, OctetString):
    description = "[A-Za-z0-9 _ / ] 'default' Name is reserved for internal use. Path is the full expression of the part of the policy when an object with this textual convention is used. A path must be unique, within a schedule and is to be read and understood very much like a directory structure such as /usr/var where var is contained in usr. The format for path is l_LinkAlias/g_GroupAlias/c_ClassAlias/f_FilterAlias. At any point in this hierarchy, there is one and only one unique path within a schedule."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 512)

class PolicyCustomerId(TextualConvention, OctetString):
    description = "[A-Za-z0-9 _ not 'default' or any reserved Policy name like LINK, END , VERSION etc]. The 'default' alias is reserved for internal use. For example, a Customer ID can be combination of Alpha numeric value GoldUser4527"
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 30)

class PolicyDirection(TextualConvention, Integer32):
    description = 'This TC defines the directions of traffic flows.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class SitaraOwnerString(TextualConvention, OctetString):
    description = "This data type is used to model an administratively assigned name of the owner of a resource. Implementations must accept values composed of well-formed NVT ASCII sequences. In addition, implementations should accept values composed of well-formed UTF-8 sequences. It is suggested that this name contain one or more of the following: IP address, management station name, network manager's name, location, or phone number. In some cases the agent itself will be the owner of an entry. In these cases, this string shall be set to a string starting with 'monitor'. SNMP access control is articulated entirely in terms of the contents of MIB views; access to a particular SNMP object instance depends only upon its presence or absence in a particular MIB view and never upon its value or the value of related object instances. Thus, objects of this type afford resolution of resource contention only among cooperating managers; they realize no access control function with respect to uncooperative parties."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

sitaraCfgSysWanSpeed = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 2, 2, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraCfgSysWanSpeed.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysWanSpeed.setDescription('The speed of the WAN link. Maximum allowable speed is governed by the QosWorks model. ')
sitaraCfgSysMonNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraCfgSysMonNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonNextIndex.setDescription('Next available index in the sitaraCfgSysMonTable.')
sitaraCfgSysMonTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2), )
if mibBuilder.loadTexts: sitaraCfgSysMonTable.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonTable.setDescription('The sitaraCfgSysMonTable contains an entry for each configured traffic monitor instance.')
sitaraCfgSysMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1), ).setIndexNames((0, "PERF-STAT-MIB", "sitaraCfgSysMonIndex"))
if mibBuilder.loadTexts: sitaraCfgSysMonEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonEntry.setDescription('Locally held information about a particular traffic monitor instance.')
sitaraCfgSysMonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: sitaraCfgSysMonIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonIndex.setDescription('A unique value for each conceptual row.')
sitaraCfgSysMonName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonName.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonName.setDescription('The user-assigned name of the traffic monitor instance.')
sitaraCfgSysMonDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 3), FilterDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonDirection.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonDirection.setDescription('The direction in which the traffic needs to be monitored.')
sitaraCfgSysMonProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonProtocol.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonProtocol.setDescription('Transport protocol to be monitored. This could be IP, TCP UDP, IPX, etc...')
sitaraCfgSysMonType = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 5), FilterType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonType.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonType.setDescription('The filter type used by this traffic monitor. The filter type defines how some of the other columnar objects in this row are used: sitaraCfgSysMonType == none No filtering is done. sitaraCfgSysMonType == sourceAddr sitaraCfgSysMonIPAddr is the source address to filter. sitaraCfgSysMonPort is not used. sitaraCfgSysMonType == sourcePort sitaraCfgSysMonPort is the source port to filter. sitaraCfgSysMonIPAddr is not used. sitaraCfgSysMonType == destinationAddr sitaraCfgSysMonIPAddr is the destination address to filter. sitaraCfgSysMonPort is not used. sitaraCfgSysMonType == destinationPort sitaraCfgSysMonPort is the destination port to filter. sitaraCfgSysMonIPAddr is not used. sitaraCfgSysMonType == bothPorts sitaraCfgSysMonPort is the source and destination port to filter. sitaraCfgSysMonIPAddr is not used. ')
sitaraCfgSysMonIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonIPAddr.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonIPAddr.setDescription('The IP address used by this traffic monitor.')
sitaraCfgSysMonIPMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonIPMask.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonIPMask.setDescription('An IP address mask that may be associated with the instance of sitaraCfgSysMonIPAddr. This object is used to indicate a range of IP addresses for the traffic monitor.')
sitaraCfgSysMonPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonPort.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonPort.setDescription('The TCP/IP port number for this traffic monitor.')
sitaraCfgSysMonOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 9), SitaraOwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonOwner.setDescription('This object is used to identify the owner of the conceptual row.')
sitaraCfgSysMonRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraCfgSysMonRowStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonRowStatus.setDescription('The status of this conceptual row.')
sitaraCfgSysMonTableStatus = MibScalar((1, 3, 6, 1, 4, 1, 2302, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("save", 1), ("clear", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraCfgSysMonTableStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraCfgSysMonTableStatus.setDescription('When this object value is set to save : mon-user.conf is updated clear : All the entries in the table are cleared. none : default state')
sitaraPerfSysCPUUsage = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfSysCPUUsage.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysCPUUsage.setDescription('Current System CPU Utilization Percent')
sitaraPerfSysMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfSysMemoryUsage.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysMemoryUsage.setDescription('Current System Memory Utilization Percent')
sitaraPerfSysDiskRootUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfSysDiskRootUtilization.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysDiskRootUtilization.setDescription('Current Root Filesystem Utilization Percent')
sitaraPerfSysDiskSyslogUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfSysDiskSyslogUtilization.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysDiskSyslogUtilization.setDescription('Current Syslog Disk Directory Utilization Percent')
sitaraPerfSysDiskCacheUtilization = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfSysDiskCacheUtilization.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysDiskCacheUtilization.setDescription('Current Cache Filesystem Utilization Percent')
sitaraPerfAlarmStatus = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("save", 1), ("clear", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfAlarmStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfAlarmStatus.setDescription('When this object value is set to save : perf-alarms.conf is updated from Alarm MIB Table clear : All the entries in the Alarm MIB Table are cleared. none : default state')
sitaraPerfSysQosDirectorIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfSysQosDirectorIpAddr.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysQosDirectorIpAddr.setDescription('Destination IP Address of the QOS Director ')
sitaraPerfSysQosDirectorPort = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfSysQosDirectorPort.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfSysQosDirectorPort.setDescription('Receiving Port number on the QOS Director ')
sitaraPerfAlarmMasks = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfAlarmMasks.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfAlarmMasks.setDescription('sitaraPerfAlarmMasks is a hexadecimal bit defined field. Each bit position in the hexadecimal value of the instance enable/disable the corresponding notification number. Notification BIT Definitions ------------ -- ----------- sitaraPerfNotifnsMemoryUtil 0x00000001 sitaraPerfNotifnsCPU 0x00000002 sitaraPerfNotifnsDiskCache 0x00000004 sitaraPerfNotifnsDiskSyslog 0x00000008 sitaraPerfNotifnsDiskRoot 0x00000010 sitaraPerfNotifnsUpdate 0x00000020 sitaraPerfNotifnsPlcyBandWidth 0x00000800 sitaraPerfNotifnsPacketDrops 0x00001000 sitaraPerfNotifnsPlcyAveQueueLength 0x00008000. ')
sitaraPerfPlcyStatsCollection = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfPlcyStatsCollection.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyStatsCollection.setDescription('The object controls the Policy Statistics collection.')
sitaraPerfTrafStatsCollection = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sitaraPerfTrafStatsCollection.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafStatsCollection.setDescription('The object controls the Traffic monitor Statistics collection.')
sitaraPerfTrafTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1), )
if mibBuilder.loadTexts: sitaraPerfTrafTable.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafTable.setDescription('The sitaraPerfTrafTable contains statistics for each traffic monitor instance.')
sitaraPerfTrafEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1), ).setIndexNames((0, "PERF-STAT-MIB", "sitaraCfgSysMonIndex"))
if mibBuilder.loadTexts: sitaraPerfTrafEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafEntry.setDescription('Statistics about a particular traffic monitor instance for the most recently completed interval.')
sitaraPerfTrafIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: sitaraPerfTrafIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafIndex.setDescription('A unique value for each sitaraPerfTraf instance. This table is indexed by sitaraCfgSysMonIndex.')
sitaraPerfTrafName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sitaraPerfTrafName.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafName.setDescription('Indicates the name of the sitaraPerfTraf instance.')
sitaraPerfTrafTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfTrafTime.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafTime.setDescription('Value of sysUptime when traffic monitoring for this instance began.')
sitaraPerfTrafInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfTrafInterval.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafInterval.setDescription('Polling interval, in seconds, for this monitoring instance.')
sitaraPerfTrafPktCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfTrafPktCnt.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafPktCnt.setDescription('The number of packets sent during this interval. This is the delta value of packets sent since the last sampling interval.')
sitaraPerfTrafByteCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 3, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfTrafByteCnt.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfTrafByteCnt.setDescription('The number of bytes sent during this interval. This is the delta value of bytes sent since the last sampling interval.')
sitaraPerfPlcyNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2302, 2, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyNextIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyNextIndex.setDescription('Next available index in the sitaraPerfPlcyTable.')
sitaraPerfPlcyTable = MibTable((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2), )
if mibBuilder.loadTexts: sitaraPerfPlcyTable.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyTable.setDescription('The sitaraPerfPlcyTable contains an entry for each policy instance.')
sitaraPerfPlcyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1), ).setIndexNames((0, "PERF-STAT-MIB", "sitaraPerfPlcyIndex"))
if mibBuilder.loadTexts: sitaraPerfPlcyEntry.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyEntry.setDescription('Statistics about a particular policy instance for the most recently completed interval.')
sitaraPerfPlcyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyIndex.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyIndex.setDescription('A unique value for each sitaraPerfTraf instance.')
sitaraPerfPlcyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyTime.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyTime.setDescription('Value of sysUptime when policy statistics monitoring for this instance began')
sitaraPerfPlcyInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyInterval.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyInterval.setDescription('Polling interval, in seconds, for this monitoring instance.')
sitaraPerfPlcyAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 4), PolicyName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyAlias.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyAlias.setDescription('Alias (Nick Name) is the unique description for this Class that identifies the class to the user and displayed in the GUI.')
sitaraPerfPlcyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 5), PolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyType.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyType.setDescription("Type of statistics being collected, currently 'class' is supported as policy type.")
sitaraPerfPlcyLanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyLanBandWidth.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyLanBandWidth.setDescription('Link BandWidth Utilization in the Lan direction. It is currently unused.')
sitaraPerfPlcyLanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyLanBurst.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyLanBurst.setDescription('Link Burst BandWidth in the Lan direction. It is currently unused.')
sitaraPerfPlcyWanBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyWanBandWidth.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyWanBandWidth.setDescription('Link BandWidth Utilization in the Wan direction. It is currently unused.')
sitaraPerfPlcyWanBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyWanBurst.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyWanBurst.setDescription('Link Burst BandWidth in the Wan direction. It is currently unused.')
sitaraPerfPlcyPktCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyPktCnt.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyPktCnt.setDescription('The number of packets sent during this interval.')
sitaraPerfPlcyPktCntDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyPktCntDrop.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyPktCntDrop.setDescription('The number of packets for a class dropped during this interval as a percentage of the total number of packets sent during this interval.')
sitaraPerfPlcyPktCntBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyPktCntBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyPktCntBurst.setDescription('The number of packets for this class exceeding class bandwidth as a percentage of total packets sent during this interval. It is currently unused.')
sitaraPerfPlcyByteCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyByteCnt.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyByteCnt.setDescription('The number of bytes sent during the current period for this class.')
sitaraPerfPlcyByteCntDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyByteCntDrop.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyByteCntDrop.setDescription('The number of bytes dropped during the current period for this class.')
sitaraPerfPlcyQueuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyQueuePkts.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyQueuePkts.setDescription('The number of packets queued during this period for this class, as a percent of the max queue size for this class.')
sitaraPerfPlcyHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyHandle.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyHandle.setDescription('The handle of the policy class returned by a cbqd ioctl() call. Used to key in the stats info. into this table. ')
sitaraPerfPlcyCbqName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 17), CbqName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyCbqName.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyCbqName.setDescription('Cbq Name')
sitaraPerfPlcyAvgIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyAvgIdleTime.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfPlcyAvgIdleTime.setDescription('Average Idle Time for a class as a percentage of the difference between the Max Idle Time and the Min Idle Time.')
sitaraPerfPlcyCustomerId = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 19), PolicyCustomerId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyCustomerId.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyCustomerId.setDescription('ID of customer uses this class')
sitaraPerfPlcyOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 20), SitaraOwnerString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyOwner.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyOwner.setDescription('The owner name of this class.')
sitaraPerfPlcyPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 21), PolicyPathName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyPathName.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyPathName.setDescription('Path Name gives the full specification of this link/Group/Class information. See the PolicyPathName textual convention.')
sitaraPerfPlcyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 22), PolicyDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyDirection.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyDirection.setDescription('The policy group traffic direction object indicates the directionality of this flow. Based on the value of this object, the LAN and WAN bandwidth paramerts will be filled in. If this is a bi-directional flow, values for both the LAN and WAN objects should be supplied.')
sitaraPerfPlcyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inActive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyStatus.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyStatus.setDescription(' This specifies whether this Policy is active in the Current Schedule')
sitaraPerfPlcyTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyTimeStamp.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyTimeStamp.setDescription('TimeStamp is the SysupTime in number of ticks at the time of reporting.')
sitaraPerfPlcyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyBandWidth.setDescription('Link BandWidth Utilization in the Wan direction. It is currently unused.')
sitaraPerfPlcyBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyBurst.setDescription('Link BandWidth Utilization in the Wan direction. It is currently unused.')
sitaraPerfPlcyByteCntBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyByteCntBurst.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyByteCntBurst.setDescription('The number of bytes sent as burst during this period for this class.')
sitaraPerfPlcyAvgQueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2302, 2, 4, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sitaraPerfPlcyAvgQueSize.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfPlcyAvgQueSize.setDescription('The average of the number of packets queued so far for this class.')
sitaraPerfNotifnsMemoryUtil = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 1)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfSysMemoryUsage"))
if mibBuilder.loadTexts: sitaraPerfNotifnsMemoryUtil.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsMemoryUtil.setDescription('sitaraPerfNotifnsMemoryUtil notification is generated when the system memory utilization exceeds the configured threshold for system memory utilization as a percentage. sitaraPerfNotifnsMemoryUtil notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsCPU = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 2)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfSysCPUUsage"))
if mibBuilder.loadTexts: sitaraPerfNotifnsCPU.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsCPU.setDescription('sitaraPerfNotifnsCPU notification is generated when the system CPU utilization exceeds the configured threshold for CPU utilization as a percentage. sitaraPerfNotifnsCPU notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsDiskCache = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 3)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfSysDiskCacheUtilization"))
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskCache.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskCache.setDescription('sitaraPerfNotifnsDiskCache notification is generated when the disk space for the cache partition exceeds the configured threshold as a percentage. sitaraPerfNotifnsDiskCache notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsDiskSyslog = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 4)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfSysDiskSyslogUtilization"))
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskSyslog.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskSyslog.setDescription('sitaraPerfNotifnsDiskSyslog notification is generated when the disk space for the syslog files partition exceeds the configured threshold as a percentage. sitaraPerfNotifnsDiskSyslog notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsDiskRoot = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 5)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfSysDiskRootUtilization"))
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskRoot.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsDiskRoot.setDescription('sitaraPerfNotifnsDiskRoot notification is generated when the utilized disk space for the root partition exceeds the configured threshold of the root partition as a percentage. sitaraPerfNotifnsDiskRoot notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsUpdate = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 6))
if mibBuilder.loadTexts: sitaraPerfNotifnsUpdate.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsUpdate.setDescription('sitaraPerfNotifnsUpdate notification is generated when the Traffic Filter Table is updated')
sitaraPerfNotifnsMonitorReStart = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 7))
if mibBuilder.loadTexts: sitaraPerfNotifnsMonitorReStart.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsMonitorReStart.setDescription('sitaraPerfNotifnsMonitorReStart notification is generated when the Monitor Table is updated after a Monitor restart. It is currently unused.')
sitaraPerfNotifnsMonitorFailToReStart = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 8))
if mibBuilder.loadTexts: sitaraPerfNotifnsMonitorFailToReStart.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsMonitorFailToReStart.setDescription('This failure notification is generated when the monitor process cannot be restarted. It is currently unused.')
sitaraPerfNotifnsPlcyPktCnt = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 9)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyPktCnt.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyPktCnt.setDescription('This notification is generated when the packet count since the last interval for a policy class as a percentage of the total bandwidth exceeds the configured packet count threshold percent, specified in the Alarm Table. It is currently unused.')
sitaraPerfNotifnsPlcyPktCnt2 = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 10)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyPktCnt2.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyPktCnt2.setDescription('This notification is generated when the packet count as a percentage of wan speed for a policy exceeds a configured threshold, specified in the Alarm Table. It is currently unused.')
sitaraPerfNotifnsPlcyBurst = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 11)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyBurst.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyBurst.setDescription('This notification is generated when the burst rate for a policy exceeds a configured threshold, specified in the Alarm Table. It is currently unused.')
sitaraPerfNotifnsPlcyBandWidth = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 12)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyIndex"), ("PERF-STAT-MIB", "sitaraPerfPlcyCustomerId"), ("PERF-STAT-MIB", "sitaraPerfPlcyOwner"), ("PERF-STAT-MIB", "sitaraPerfPlcyPathName"), ("PERF-STAT-MIB", "sitaraPerfPlcyDirection"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyAvgQueSize"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyBandWidth.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyBandWidth.setDescription('sitaraPerfNotifnsPlcyBandWidth notification is generated for a policy when the policy bandwidth (sitaraPerfPlcyByteCnt) utilized exceeds the configured rising threshold for the bandwidth of the same policy. sitaraPerfNotifnsPlcyBandWidt notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsPacketDrops = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 13)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyIndex"), ("PERF-STAT-MIB", "sitaraPerfPlcyCustomerId"), ("PERF-STAT-MIB", "sitaraPerfPlcyOwner"), ("PERF-STAT-MIB", "sitaraPerfPlcyPathName"), ("PERF-STAT-MIB", "sitaraPerfPlcyDirection"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyAvgQueSize"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPacketDrops.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsPacketDrops.setDescription('sitaraPerfNotifnsPacketDrops notification is generated for a policy when the policy dropped packet count (sitaraPerfPlcyPktCntDrop) exceeds the configured rising threshold for dropped packet count of the same policy. sitaraPerfNotifnsPacketDrops notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
sitaraPerfNotifnsCachHitsRatio = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 14)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"))
if mibBuilder.loadTexts: sitaraPerfNotifnsCachHitsRatio.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsCachHitsRatio.setDescription('This notification is generated when the cache miss/hit ratio is lower than a configured threshold, specified in the Alarm Table. It is currently unused.')
sitaraPerfNotifnsPlcyMaxBandwidth = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 15)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBandWidth"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMaxBandwidth.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMaxBandwidth.setDescription('This notification is generated when the maximum bandwidth for a policy, as a percentage of total wan speed, exceeds a configured threshold, specified in the Alarm Table. It is currently unused.')
sitaraPerfNotifnsPlcyQueuePkts = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 16)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyCbqName"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyQueuePkts"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyQueuePkts.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyQueuePkts.setDescription('This notification is generated when the allowed maximum que size for a policy, exceeds a configured allowed maximum que size, specified in the Alarm Table.')
sitaraPerfNotifnsPlcyMaxIdleTime = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 17)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyCbqName"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyAvgIdleTime"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMaxIdleTime.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMaxIdleTime.setDescription('This notification is generated when the Average Idle Time for a class as a percentage of the difference between the Max Idle Time and the Min Idle Time exceeds the configured (rising) threshold specified in the Alarm Table.')
sitaraPerfNotifnsPlcyMinIdleTime = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 18)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyAlias"), ("PERF-STAT-MIB", "sitaraPerfPlcyCbqName"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyLanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyWanBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyAvgIdleTime"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMinIdleTime.setStatus('obsolete')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyMinIdleTime.setDescription('This notification is generated when the Average Idle Time for a class as a percentage of the difference between the Max Idle Time and the Min Idle Time falls below the configured (falling) threshold specified in the Alarm Table.')
sitaraPerfNotifnsPlcyAveQueueLength = NotificationType((1, 3, 6, 1, 4, 1, 2302, 2, 6, 19)).setObjects(("RMON-MIB", "alarmIndex"), ("RMON-MIB", "alarmInterval"), ("RMON-MIB", "alarmVariable"), ("RMON-MIB", "alarmValue"), ("RMON-MIB", "alarmRisingThreshold"), ("RMON-MIB", "alarmFallingThreshold"), ("PERF-STAT-MIB", "sitaraPerfPlcyIndex"), ("PERF-STAT-MIB", "sitaraPerfPlcyCustomerId"), ("PERF-STAT-MIB", "sitaraPerfPlcyOwner"), ("PERF-STAT-MIB", "sitaraPerfPlcyPathName"), ("PERF-STAT-MIB", "sitaraPerfPlcyDirection"), ("PERF-STAT-MIB", "sitaraPerfPlcyType"), ("PERF-STAT-MIB", "sitaraPerfPlcyBandWidth"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyPktCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCnt"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntDrop"), ("PERF-STAT-MIB", "sitaraPerfPlcyByteCntBurst"), ("PERF-STAT-MIB", "sitaraPerfPlcyAvgQueSize"))
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyAveQueueLength.setStatus('current')
if mibBuilder.loadTexts: sitaraPerfNotifnsPlcyAveQueueLength.setDescription('sitaraPerfNotifnsPlcyAveQueueLength notification is generated for a policy when the average que size of the policy exceeds the configured rising threshold for the average que size of the same policy. sitaraPerfNotifnsPlcyAveQueueLength notification is maskable by setting the corresponding bit in the sitaraPerfAlarmMasks.')
mibBuilder.exportSymbols("PERF-STAT-MIB", sitaraPerfPlcyTime=sitaraPerfPlcyTime, sitaraPerfPlcyPktCntDrop=sitaraPerfPlcyPktCntDrop, sitaraCfgSysWanSpeed=sitaraCfgSysWanSpeed, sitaraPerfPlcyByteCnt=sitaraPerfPlcyByteCnt, sitaraPerfNotifnsPlcyMaxBandwidth=sitaraPerfNotifnsPlcyMaxBandwidth, sitaraPerfTrafEntry=sitaraPerfTrafEntry, sitaraPerfNotifnsPlcyBandWidth=sitaraPerfNotifnsPlcyBandWidth, sitaraPerfAlarmMasks=sitaraPerfAlarmMasks, sitaraPerfSysDiskCacheUtilization=sitaraPerfSysDiskCacheUtilization, sitaraCfgSys=sitaraCfgSys, sitaraPerfSysDiskSyslogUtilization=sitaraPerfSysDiskSyslogUtilization, sitaraPerfNotifns=sitaraPerfNotifns, sitaraCfgSysMonNextIndex=sitaraCfgSysMonNextIndex, sitaraPerfTraf=sitaraPerfTraf, sitaraPerfTrafPktCnt=sitaraPerfTrafPktCnt, sitaraCfgSysMonName=sitaraCfgSysMonName, sitaraPerfSysQosDirectorIpAddr=sitaraPerfSysQosDirectorIpAddr, sitaraPerfNotifnsCachHitsRatio=sitaraPerfNotifnsCachHitsRatio, FilterDirection=FilterDirection, sitaraCfgSysMonTableStatus=sitaraCfgSysMonTableStatus, CbqName=CbqName, sitaraPerfPlcyCustomerId=sitaraPerfPlcyCustomerId, sitaraCfgSysMonType=sitaraCfgSysMonType, sitaraPerfNotifnsUpdate=sitaraPerfNotifnsUpdate, sitaraPerfPlcyByteCntDrop=sitaraPerfPlcyByteCntDrop, sitaraPerfTrafTable=sitaraPerfTrafTable, PolicyName=PolicyName, sitaraPerfNotifnsPacketDrops=sitaraPerfNotifnsPacketDrops, sitaraPerfPlcyAlias=sitaraPerfPlcyAlias, PolicyPathName=PolicyPathName, sitaraPerfPlcyDirection=sitaraPerfPlcyDirection, sitaraPerfPlcyByteCntBurst=sitaraPerfPlcyByteCntBurst, PYSNMP_MODULE_ID=sitaraPerfMonMIB, sitara=sitara, sitaraPerfPlcyCbqName=sitaraPerfPlcyCbqName, sitaraPerfPlcyTimeStamp=sitaraPerfPlcyTimeStamp, sitaraCfgSysMonTable=sitaraCfgSysMonTable, sitaraPerfSys=sitaraPerfSys, sitaraPerfNotifnsPlcyBurst=sitaraPerfNotifnsPlcyBurst, sitaraPerfTrafTime=sitaraPerfTrafTime, sitaraPerfSysQosDirectorPort=sitaraPerfSysQosDirectorPort, sitaraPerfNotifnsPlcyAveQueueLength=sitaraPerfNotifnsPlcyAveQueueLength, sitaraPerfPlcyAvgIdleTime=sitaraPerfPlcyAvgIdleTime, sitaraPerfPlcyHandle=sitaraPerfPlcyHandle, sitaraPerfNotifnsCPU=sitaraPerfNotifnsCPU, sitaraCfgPlcy=sitaraCfgPlcy, sitaraPerfNotifnsPlcyMaxIdleTime=sitaraPerfNotifnsPlcyMaxIdleTime, sitaraPerfPlcyTable=sitaraPerfPlcyTable, sitaraPerfNotifnsMonitorReStart=sitaraPerfNotifnsMonitorReStart, sitaraPerfNotifnsPlcyPktCnt2=sitaraPerfNotifnsPlcyPktCnt2, sitaraPerfPlcyType=sitaraPerfPlcyType, sitaraPerfPlcyWanBandWidth=sitaraPerfPlcyWanBandWidth, PolicyDirection=PolicyDirection, sitaraCfgSysGenlObjs=sitaraCfgSysGenlObjs, sitaraPerfPlcyPktCntBurst=sitaraPerfPlcyPktCntBurst, sitaraCfgSysMonProtocol=sitaraCfgSysMonProtocol, sitaraPerfPlcyOwner=sitaraPerfPlcyOwner, sitaraCfg=sitaraCfg, sitaraPerfPlcyBandWidth=sitaraPerfPlcyBandWidth, sitaraPerfSysMemoryUsage=sitaraPerfSysMemoryUsage, sitaraPerfPlcyInterval=sitaraPerfPlcyInterval, sitaraPerfPlcyPktCnt=sitaraPerfPlcyPktCnt, sitaraPerfNotifnsDiskCache=sitaraPerfNotifnsDiskCache, sitaraPerfNotifnsDiskSyslog=sitaraPerfNotifnsDiskSyslog, sitaraPerfPlcyIndex=sitaraPerfPlcyIndex, sitaraCfgSysMonIndex=sitaraCfgSysMonIndex, sitaraPerfNotifnsMonitorFailToReStart=sitaraPerfNotifnsMonitorFailToReStart, sitaraPerfTrafIndex=sitaraPerfTrafIndex, PolicyCustomerId=PolicyCustomerId, sitaraPerfTrafName=sitaraPerfTrafName, sitaraPerfTrafInterval=sitaraPerfTrafInterval, sitaraPerfMonMIB=sitaraPerfMonMIB, sitaraPerfSysCPUUsage=sitaraPerfSysCPUUsage, sitaraPerfNotifnsPlcyPktCnt=sitaraPerfNotifnsPlcyPktCnt, sitaraPerfPlcyWanBurst=sitaraPerfPlcyWanBurst, sitaraPerfPlcyQueuePkts=sitaraPerfPlcyQueuePkts, sitaraPerf=sitaraPerf, sitaraPerfPlcyPathName=sitaraPerfPlcyPathName, sitaraCfgSysMonOwner=sitaraCfgSysMonOwner, sitaraPerfCach=sitaraPerfCach, FilterType=FilterType, sitaraCfgSysMonPort=sitaraCfgSysMonPort, sitaraCfgSysMonDirection=sitaraCfgSysMonDirection, sitaraPerfPlcyLanBandWidth=sitaraPerfPlcyLanBandWidth, sitaraPerfPlcyLanBurst=sitaraPerfPlcyLanBurst, sitaraPerfNotifnsMemoryUtil=sitaraPerfNotifnsMemoryUtil, SitaraOwnerString=SitaraOwnerString, sitaraCfgSysMonRowStatus=sitaraCfgSysMonRowStatus, sitaraPerfTrafByteCnt=sitaraPerfTrafByteCnt, sitaraCfgSysMon=sitaraCfgSysMon, sitaraPerfPlcy=sitaraPerfPlcy, sitaraPerfSysDiskRootUtilization=sitaraPerfSysDiskRootUtilization, sitaraPerfNotifnsDiskRoot=sitaraPerfNotifnsDiskRoot, sitaraPerfPlcyAvgQueSize=sitaraPerfPlcyAvgQueSize, sitaraPerfPlcyEntry=sitaraPerfPlcyEntry, sitaraCfgSysMonEntry=sitaraCfgSysMonEntry, PolicyType=PolicyType, sitaraPerfAlarmStatus=sitaraPerfAlarmStatus, sitaraPerfPlcyStatsCollection=sitaraPerfPlcyStatsCollection, sitaraPerfTrafStatsCollection=sitaraPerfTrafStatsCollection, sitaraCfgSysMonIPMask=sitaraCfgSysMonIPMask, sitaraCfgSysMonIPAddr=sitaraCfgSysMonIPAddr, sitaraPerfPlcyStatus=sitaraPerfPlcyStatus, sitaraPerfPlcyBurst=sitaraPerfPlcyBurst, sitaraPerfPlcyNextIndex=sitaraPerfPlcyNextIndex, sitaraPerfNotifnsPlcyMinIdleTime=sitaraPerfNotifnsPlcyMinIdleTime, sitaraPerfNotifnsPlcyQueuePkts=sitaraPerfNotifnsPlcyQueuePkts)
