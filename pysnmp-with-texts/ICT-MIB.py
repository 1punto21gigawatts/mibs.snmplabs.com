#
# PySNMP MIB module ICT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ICT-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:51:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, Integer32, TimeTicks, NotificationType, IpAddress, MibIdentifier, ObjectIdentity, Counter32, Gauge32, Bits, Unsigned32, NotificationType, enterprises, Counter64, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "TimeTicks", "NotificationType", "IpAddress", "MibIdentifier", "ObjectIdentity", "Counter32", "Gauge32", "Bits", "Unsigned32", "NotificationType", "enterprises", "Counter64", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ictPower = MibIdentifier((1, 3, 6, 1, 4, 1, 39145))
digitalSeries = MibIdentifier((1, 3, 6, 1, 4, 1, 39145, 11))
deviceModel = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceModel.setStatus('mandatory')
if mibBuilder.loadTexts: deviceModel.setDescription('Model Number')
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('mandatory')
if mibBuilder.loadTexts: deviceName.setDescription('Device Name')
deviceHardware = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceHardware.setStatus('mandatory')
if mibBuilder.loadTexts: deviceHardware.setDescription('Hardware Version')
deviceFirmware = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceFirmware.setStatus('mandatory')
if mibBuilder.loadTexts: deviceFirmware.setDescription('Firmware Version')
deviceMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceMacAddress.setStatus('mandatory')
if mibBuilder.loadTexts: deviceMacAddress.setDescription('MAC Address')
inputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: inputVoltage.setStatus('mandatory')
if mibBuilder.loadTexts: inputVoltage.setDescription('Input Voltage (VAC)')
outputVoltage = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputVoltage.setStatus('mandatory')
if mibBuilder.loadTexts: outputVoltage.setDescription('Output Voltage (VDC)')
outputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputCurrent.setStatus('mandatory')
if mibBuilder.loadTexts: outputCurrent.setDescription('System Current (Amps)')
outputEnable = MibScalar((1, 3, 6, 1, 4, 1, 39145, 11, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ENABLED", 1), ("DISABLED", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outputEnable.setStatus('mandatory')
if mibBuilder.loadTexts: outputEnable.setDescription('Output Enable Status (a value of 1 indicates Output is Enabled, and a value of 2 indicates Output is Disabled)')
mibBuilder.exportSymbols("ICT-MIB", outputVoltage=outputVoltage, deviceFirmware=deviceFirmware, deviceHardware=deviceHardware, outputCurrent=outputCurrent, digitalSeries=digitalSeries, ictPower=ictPower, deviceModel=deviceModel, inputVoltage=inputVoltage, deviceMacAddress=deviceMacAddress, deviceName=deviceName, outputEnable=outputEnable)
