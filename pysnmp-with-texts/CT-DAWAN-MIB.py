#
# PySNMP MIB module CT-DAWAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CT-DAWAN-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:28:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
cabletron, = mibBuilder.importSymbols("CTRON-OIDS", "cabletron")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, NotificationType, TimeTicks, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, ObjectIdentity, MibIdentifier, iso, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "NotificationType", "TimeTicks", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "ObjectIdentity", "MibIdentifier", "iso", "ModuleIdentity", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ctSSA = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4497))
ctDAWanDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4497, 16))
class DisplayString(OctetString):
    pass

class TimeStamp(TimeTicks):
    pass

ctDAWanDeviceNumDevices = MibScalar((1, 3, 6, 1, 4, 1, 52, 4497, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceNumDevices.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceNumDevices.setDescription('This is the total number of devices currently in the local system cache.')
ctDAWanDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2), )
if mibBuilder.loadTexts: ctDAWanDevicesTable.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDevicesTable.setDescription('A list of Demand Access remote WAN devices. This list reflects the contents of the local system cache. The local cache maintains an account for each device. Each entry in the local cache is a conceptual row in the SNMP table.')
ctDAWanDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1), ).setIndexNames((0, "CT-DAWAN-MIB", "ctDAWanDeviceIndex"))
if mibBuilder.loadTexts: ctDAWanDeviceEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceEntry.setDescription('An entry containing wan device information and statistics.')
ctDAWanDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceIndex.setDescription('This is the index into this table. This index uniquely identifies the device.')
ctDAWanDeviceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceIfIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceIfIndex.setDescription('This is the ifIndex value of the wan connection group. If the ifIndex value is unknown, the value of this object will be zero.')
ctDAWanDeviceSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceSessionID.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceSessionID.setDescription('This is the unique identifier of the last session when a wan device was in the active state.')
ctDAWanDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("connecting", 2), ("active", 3), ("disconnecting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceState.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceState.setDescription('This is the state of the device.')
ctDAWanDeviceDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceDescr.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceDescr.setDescription('A textual string that identifies the peer device.')
ctDAWanDeviceConnectControl = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("connect", 1), ("disconnect", 2), ("unknown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctDAWanDeviceConnectControl.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceConnectControl.setDescription('This object controls the desired state of the wan device. Setting this object to connect(1) will initiate the set of actions to bring the wan device to the active state. Only set the object to connect(1) when the current value of ctDAWanDeviceState is inactive. Setting this object to disconnect(2) will initiate the set of actions to bring the wan device to the inactive state. Only set this object to disconnect(2) when the ctDAWanDeviceState is active. After setting the device to connect(1) or disconnect(2), refer to ctDAWanDeviceState to determine the state of the wan device. Queries to ctDAWanDeviceConnectControl return unknown results.')
ctDAWanDeviceConnectType = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("digitalCircuit", 1), ("analogCircuit", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceConnectType.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceConnectType.setDescription('This specifies the type of the wan connection.')
ctDAWanDeviceL2Encapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unknown", 1), ("ppp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceL2Encapsulation.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceL2Encapsulation.setDescription('This is the type of layer 2 encapsulation used when connecting to this device.')
ctDAWanDeviceNumConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceNumConnections.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceNumConnections.setDescription('This is the current number of wan connections to this device.')
ctDAWanDeviceCurrentBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceCurrentBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceCurrentBandwidth.setDescription('This is the aggregate bandwidth of all current connections.')
ctDAWanDeviceInitialBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceInitialBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceInitialBandwidth.setDescription('This is the desired initial bandwidth in bits per second used when calling this peer object. The system will bring up enough connections to meet the bandwidth requirement. The value only represents dial type connections. It does not include leased circuits.')
ctDAWanDeviceMaxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceMaxBandwidth.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceMaxBandwidth.setDescription('This is the maximum amount of bandwidth in bits per seconde used when calling this peer wan device object. This value only represents dial type connections. It does not include leased line circuits.')
ctDAWanDeviceH0Support = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceH0Support.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceH0Support.setDescription('Indicates whether an H0 connection can be used when calling this peer wan device object.')
ctDAWanDeviceChargedUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceChargedUnits.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceChargedUnits.setDescription("The total number of charging units applying to this peer device since this row was created. Only the charging units applying to the local interface,i.e. for originated calls or for calls with 'Reverse charging' being active, will be counted here.")
ctDAWanDeviceSuccessCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceSuccessCalls.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceSuccessCalls.setDescription('Number of completed calls to this peer device.')
ctDAWanDeviceFailCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceFailCalls.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceFailCalls.setDescription('Number of failed call attempts to this peer device since the row was created.')
ctDAWanDeviceAcceptCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceAcceptCalls.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceAcceptCalls.setDescription('Number of calls from this peer device accepted since the row was created.')
ctDAWanDeviceRefuseCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceRefuseCalls.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceRefuseCalls.setDescription('Number of calls from this peer device refused since the row was created.')
ctDAWanDeviceConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceConnectTime.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceConnectTime.setDescription('The value of sysUpTime at the time when the device entered its current active state. This object will be 0 if the device is currently inactive. This object will be upctDAted whenever there is a state transition to the active state.')
ctDAWanDeviceConnectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceConnectDirection.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceConnectDirection.setDescription('The direction from which the last connect occurred.')
ctDAWanDeviceLastDisconnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectTime.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectTime.setDescription('The value of sysUpTime when the last call to this peer device was disconnected. This object will be upctDAted whenever a call is disconnected.')
ctDAWanDeviceLastDisconnectDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectDirection.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectDirection.setDescription('The direction from which the last disconnect occurred.')
ctDAWanDeviceLastDisconnectCause = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectCause.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectCause.setDescription('The encoded network cause value associated with the last call. This object will be upctDAted whenever a call is started or cleared. The value of this object will depend on the interface type as well as on the protocol and protocol version being used on this interface.')
ctDAWanDeviceLastDisconnectText = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectText.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanDeviceLastDisconnectText.setDescription('ASCII text describing the reason for the last call termination. This object exists because it would be impossible for a management station to store all possible cause values for all types of interfaces. It should be used only if a management station is unable to decode the value of ctDAWanDeviceLastDisconnectCause. This object will be upctDAted whenever a call is started or cleared.')
ctDAWanTNListTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4497, 16, 3), )
if mibBuilder.loadTexts: ctDAWanTNListTable.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanTNListTable.setDescription('A list of telephone numbers accessible to the wan device.')
ctDAWanTNListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4497, 16, 3, 1), ).setIndexNames((0, "CT-DAWAN-MIB", "ctDAWanDeviceIndex"), (0, "CT-DAWAN-MIB", "ctDAWanTNListIndex"))
if mibBuilder.loadTexts: ctDAWanTNListEntry.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanTNListEntry.setDescription('An entry containing a telephone number.')
ctDAWanTNListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanTNListIndex.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanTNListIndex.setDescription('This is the index into this table. This index uniquely identifies the telephone number.')
ctDAWanTN = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4497, 16, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctDAWanTN.setStatus('mandatory')
if mibBuilder.loadTexts: ctDAWanTN.setDescription('This is a telephone number for this wan device.')
mibBuilder.exportSymbols("CT-DAWAN-MIB", ctDAWanDeviceIfIndex=ctDAWanDeviceIfIndex, ctDAWanDeviceDescr=ctDAWanDeviceDescr, ctDAWanDeviceL2Encapsulation=ctDAWanDeviceL2Encapsulation, ctDAWanDeviceLastDisconnectCause=ctDAWanDeviceLastDisconnectCause, ctDAWanDeviceState=ctDAWanDeviceState, ctDAWanDevices=ctDAWanDevices, TimeStamp=TimeStamp, ctDAWanDeviceChargedUnits=ctDAWanDeviceChargedUnits, ctDAWanDeviceSuccessCalls=ctDAWanDeviceSuccessCalls, ctDAWanDeviceRefuseCalls=ctDAWanDeviceRefuseCalls, ctDAWanTNListIndex=ctDAWanTNListIndex, ctDAWanDeviceMaxBandwidth=ctDAWanDeviceMaxBandwidth, DisplayString=DisplayString, ctDAWanDeviceConnectControl=ctDAWanDeviceConnectControl, ctDAWanDeviceConnectTime=ctDAWanDeviceConnectTime, ctDAWanDeviceAcceptCalls=ctDAWanDeviceAcceptCalls, ctDAWanDevicesTable=ctDAWanDevicesTable, ctDAWanDeviceInitialBandwidth=ctDAWanDeviceInitialBandwidth, ctDAWanDeviceLastDisconnectDirection=ctDAWanDeviceLastDisconnectDirection, ctDAWanDeviceEntry=ctDAWanDeviceEntry, ctDAWanDeviceCurrentBandwidth=ctDAWanDeviceCurrentBandwidth, ctDAWanDeviceLastDisconnectTime=ctDAWanDeviceLastDisconnectTime, ctDAWanDeviceConnectDirection=ctDAWanDeviceConnectDirection, ctDAWanDeviceConnectType=ctDAWanDeviceConnectType, ctDAWanDeviceFailCalls=ctDAWanDeviceFailCalls, ctDAWanDeviceNumConnections=ctDAWanDeviceNumConnections, ctDAWanTNListEntry=ctDAWanTNListEntry, ctDAWanTN=ctDAWanTN, ctDAWanTNListTable=ctDAWanTNListTable, ctSSA=ctSSA, ctDAWanDeviceSessionID=ctDAWanDeviceSessionID, ctDAWanDeviceH0Support=ctDAWanDeviceH0Support, ctDAWanDeviceIndex=ctDAWanDeviceIndex, ctDAWanDeviceNumDevices=ctDAWanDeviceNumDevices, ctDAWanDeviceLastDisconnectText=ctDAWanDeviceLastDisconnectText)
