#
# PySNMP MIB module CUMULUS-COUNTERS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CUMULUS-COUNTERS-MIB
# Produced by pysmi-0.3.4 at Wed May  1 12:31:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
cumulusMib, DateAndTime, DisplayString = mibBuilder.importSymbols("CUMULUS-SNMP-MIB", "cumulusMib", "DateAndTime", "DisplayString")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, IpAddress, Counter64, enterprises, ModuleIdentity, Unsigned32, Bits, Counter32, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Counter64", "enterprises", "ModuleIdentity", "Unsigned32", "Bits", "Counter32", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "MibIdentifier", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sysSpecificCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 40310, 2))
discardCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 40310, 2, 1))
discardCountersTable = MibTable((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1), )
if mibBuilder.loadTexts: discardCountersTable.setStatus('current')
if mibBuilder.loadTexts: discardCountersTable.setDescription('This table breaks out ingress packet discards into more reason-specific discard counters.')
discardCountersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: discardCountersEntry.setStatus('current')
if mibBuilder.loadTexts: discardCountersEntry.setDescription('Reason-specific ingress discard counters indexed by ifIndex')
portName = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portName.setStatus('current')
if mibBuilder.loadTexts: portName.setDescription('Port name')
l3v4InDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3v4InDiscards.setStatus('current')
if mibBuilder.loadTexts: l3v4InDiscards.setDescription('Number of inbound IPv4 packets discarded by the routing engine.')
bufferOverflowDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bufferOverflowDiscards.setStatus('current')
if mibBuilder.loadTexts: bufferOverflowDiscards.setDescription('Number of inbound packets discarded due to ingress buffer overflow.')
l3AclDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: l3AclDiscards.setStatus('current')
if mibBuilder.loadTexts: l3AclDiscards.setDescription('Number of inbound IPv4 packets discarded due to ingress ACL table.')
egressQOverflowDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: egressQOverflowDiscards.setStatus('current')
if mibBuilder.loadTexts: egressQOverflowDiscards.setDescription('Number of packets discarded due to egress queue overflow.')
egressNonQDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 40310, 2, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: egressNonQDiscards.setStatus('current')
if mibBuilder.loadTexts: egressNonQDiscards.setDescription("Total number of packets discarded on egress due to reasons reasons other than queue overflow. With IF MIB's ifOutDiscards not accounting for certain specific drops, this one accounts for drops seen in the egress pipeline of the system that were not because of egress queue overflow drops.")
mibBuilder.exportSymbols("CUMULUS-COUNTERS-MIB", sysSpecificCounters=sysSpecificCounters, portName=portName, discardCountersEntry=discardCountersEntry, l3AclDiscards=l3AclDiscards, egressQOverflowDiscards=egressQOverflowDiscards, egressNonQDiscards=egressNonQDiscards, discardCounters=discardCounters, l3v4InDiscards=l3v4InDiscards, discardCountersTable=discardCountersTable, bufferOverflowDiscards=bufferOverflowDiscards)
