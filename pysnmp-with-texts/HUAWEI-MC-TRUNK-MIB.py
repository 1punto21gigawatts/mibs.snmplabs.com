#
# PySNMP MIB module HUAWEI-MC-TRUNK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MC-TRUNK-MIB
# Produced by pysmi-0.3.4 at Wed May  1 13:46:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
huaweiMgmt, = mibBuilder.importSymbols("HUAWEI-MIB", "huaweiMgmt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, TimeTicks, Counter64, Counter32, NotificationType, ObjectIdentity, Unsigned32, Gauge32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "TimeTicks", "Counter64", "Counter32", "NotificationType", "ObjectIdentity", "Unsigned32", "Gauge32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Integer32", "MibIdentifier")
TimeStamp, RowStatus, DisplayString, TextualConvention, PhysAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "DisplayString", "TextualConvention", "PhysAddress", "TruthValue")
hwMcTrunkMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178))
if mibBuilder.loadTexts: hwMcTrunkMIB.setLastUpdated('200810211010Z')
if mibBuilder.loadTexts: hwMcTrunkMIB.setOrganization('Organization.')
if mibBuilder.loadTexts: hwMcTrunkMIB.setContactInfo('Contact-info.')
if mibBuilder.loadTexts: hwMcTrunkMIB.setDescription('Description.')
hwDatacomm = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25))
hwMcTrunkObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1))
hwMcTrunkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1), )
if mibBuilder.loadTexts: hwMcTrunkTable.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkTable.setDescription('The MC-Trunk table.')
hwMcTrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1), ).setIndexNames((0, "HUAWEI-MC-TRUNK-MIB", "hwMcTrunkId"))
if mibBuilder.loadTexts: hwMcTrunkEntry.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkEntry.setDescription('MC-Trunk entry.')
hwMcTrunkId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwMcTrunkId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkId.setDescription('The index of the MC-Trunk.')
hwMcTrunkSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkSystemId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkSystemId.setDescription('The system ID of the MC-Trunk. It is a physical address.')
hwMcTrunkPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkPri.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPri.setDescription('The priority of the MC-Trunk. The default value is 100.')
hwMcTrunkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkStatus.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkStatus.setDescription('The status of the MC-Trunk. 1:initialize. 2:backup. 3:master. ')
hwMcTrunkStatusReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("pri", 1), ("timeout", 2), ("bfdDown", 3), ("peerTimeout", 4), ("peerBfdDown", 5), ("allMemberDown", 6), ("init", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkStatusReason.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkStatusReason.setDescription('The reason for the MC-Trunk being in the current status. pri(1):Priority calculation. timeout(2):The receiving timer timed out. bfdDown(3):BFD detected the control link between the PE and peer down. peerTimeout(4):The receiving timer of the peer timed out. peerBfdDown(5):BFD of the peer detected the control link between the PE and peer down. allMemberDown(6):All members of the MC-Trunk were down. init(7):Initiated the MC-Trunk. ')
hwMcTrunkPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkPeerIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPeerIpAddr.setDescription('The peer IP address of the MC-Trunk.')
hwMcTrunkSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkSourceIpAddr.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkSourceIpAddr.setDescription('The source IP address of the MC-Trunk.')
hwMcTrunkReceiveFailTimeMultiple = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkReceiveFailTimeMultiple.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkReceiveFailTimeMultiple.setDescription('The detection time multiplier for failure detection. It is the multiple of the sending period.')
hwMcTrunkSendPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkSendPeriod.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkSendPeriod.setDescription('The period for sending packets of the MC-Trunk. The unit is 100ms. ')
hwMcTrunkPacketReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPacketReceive.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPacketReceive.setDescription('The number of received packets.')
hwMcTrunkPacketSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPacketSend.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPacketSend.setDescription('The number of sent packets.')
hwMcTrunkPacketRecDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPacketRecDrop.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPacketRecDrop.setDescription('The number of the dropped packets when the packets are received.')
hwMcTrunkPacketSndDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPacketSndDrop.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPacketSndDrop.setDescription('The number of the dropped packets when the packets are sent.')
hwMcTrunkPeerSystemId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 14), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPeerSystemId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPeerSystemId.setDescription('The system ID of the peer MC-Trunk. It is a physical address.')
hwMcTrunkPeerPri = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPeerPri.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPeerPri.setDescription('The priority of the peer MC-Trunk.')
hwMcTrunkPeerReceiveFailTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkPeerReceiveFailTime.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkPeerReceiveFailTime.setDescription('The failure time for the peer MC-Trunk to receive packets. The unit is 100ms. ')
hwMcTrunkSecurityKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("simple", 1), ("cipher", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkSecurityKeyType.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkSecurityKeyType.setDescription('The type of the security key. 1:The simple encrypt type. 2:The cipher encrypt type. ')
hwMcTrunkSecurityKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkSecurityKey.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkSecurityKey.setDescription('This is the security key. It can be set to a string of 1 to 16 bytes. If hwMcTrunkSecurityKeyType is simple, you can get the key. If hwMcTrunkSecurityKeyType is cipher, the system returns a random string of 24 bytes.')
hwMcTrunkBfdSessId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkBfdSessId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkBfdSessId.setDescription('The ID of a BFD session which is bound to the MC-Trunk. When the status of the BFD session is changed, BFD will notify the MC-Trunk.')
hwMcTrunkResetCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 0))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkResetCounter.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkResetCounter.setDescription('Reset hwMcTrunkPacketReceive,hwMcTrunkPacketSend,hwMcTrunkPacketRecDrop,hwMcTrunkPacketSndDrop.')
hwMcTrunkRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkRevertTime.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkRevertTime.setDescription('The delay time to revert. The unit is second. The default is 120. ')
hwMcTrunkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 1, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkRowStatus.setDescription('Current operation status of the row. It is used to manage the creation and deletion of conceptual rows.')
hwMcTrunkMemberTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2), )
if mibBuilder.loadTexts: hwMcTrunkMemberTable.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberTable.setDescription('The member table of the MC-Trunk.')
hwMcTrunkMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1), ).setIndexNames((0, "HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberParentId"), (0, "HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberType"), (0, "HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberId"))
if mibBuilder.loadTexts: hwMcTrunkMemberEntry.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberEntry.setDescription('Member Entry.')
hwMcTrunkMemberParentId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: hwMcTrunkMemberParentId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberParentId.setDescription('The ID of the MC-Trunk to which the member belongs.')
hwMcTrunkMemberType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: hwMcTrunkMemberType.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberType.setDescription('The type of the member. Now it is Eth-Trunk only. 1:EthTrunk')
hwMcTrunkMemberId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwMcTrunkMemberId.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberId.setDescription('The ID of the member.')
hwMcTrunkMemberStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backup", 1), ("master", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkMemberStatus.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberStatus.setDescription('The member status. 1:backup. 2:master. ')
hwMcTrunkMemberStatusReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("forceBackup", 1), ("forceMaster", 2), ("mctrunkInit", 3), ("mctrunkBackup", 4), ("mctrunkMaster", 5), ("peerMemberDown", 6), ("peerMemberUp", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkMemberStatusReason.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberStatusReason.setDescription('The reason for the member being in the current status. forceBackup(1):The work mode of the member is force-backup. forceMaster(2):The work mode of the member is force-master. mctrunkInit(3):The work mode of the member is auto. The status of MC-Trunk is initialize. mctrunkBackup(4):The work mode of the member is auto. The status of MC-Trunk is backup. mctrunkMaster(5):The work mode of the member is auto. The status of MC-Trunk is master. peerMemberDown(6):The status of the member belonging to the peer MC-Trunk is down. peerMemberUp(7):The status of the member belonging to the peer MC-Trunk is up. ')
hwMcTrunkMemberWorkMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("forceBackup", 2), ("forceMaster", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkMemberWorkMode.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberWorkMode.setDescription('The work mode of the member. 1:auto. 2:forceBackup. 3:forceMaster. ')
hwMcTrunkMemberPhyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMcTrunkMemberPhyStatus.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberPhyStatus.setDescription('The physical status of the member. 1:up. 2:down. ')
hwMcTrunkMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 1, 2, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMcTrunkMemberRowStatus.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberRowStatus.setDescription('Current operation status of the row. It is used to manage the creation and deletion of conceptual rows.')
hwMcTrunkTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 2))
hwMcTrunkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 2, 1)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkStatus"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkStatusReason"))
if mibBuilder.loadTexts: hwMcTrunkStatusChange.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkStatusChange.setDescription('The trap is generated when the status of the MC-Trunk is changed or the status reason of the MC-Trunk is changed.')
hwMcTrunkMemberStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 2, 2)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberStatus"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberStatusReason"))
if mibBuilder.loadTexts: hwMcTrunkMemberStatusChange.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberStatusChange.setDescription('The trap is generated when the status of the memeber is changed or the status reason of the memeber is changed.')
hwMcTrunkConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3))
hwMcTrunkCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 1))
hwMcTrunkFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 1, 1)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkGroup"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberGroup"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMcTrunkFullCompliance = hwMcTrunkFullCompliance.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkFullCompliance.setDescription('Description.')
hwMcTrunkGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 2))
hwMcTrunkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 2, 1)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkSystemId"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPri"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkStatus"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkStatusReason"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPeerIpAddr"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkSourceIpAddr"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkReceiveFailTimeMultiple"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkSendPeriod"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPacketReceive"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPacketSend"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPacketRecDrop"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPacketSndDrop"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPeerSystemId"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPeerPri"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkPeerReceiveFailTime"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkSecurityKeyType"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkSecurityKey"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkBfdSessId"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkResetCounter"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkRevertTime"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMcTrunkGroup = hwMcTrunkGroup.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkGroup.setDescription('Description.')
hwMcTrunkMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 2, 2)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberStatus"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberStatusReason"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberWorkMode"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberPhyStatus"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMcTrunkMemberGroup = hwMcTrunkMemberGroup.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkMemberGroup.setDescription('Description.')
hwMcTrunkNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 178, 3, 2, 3)).setObjects(("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkStatusChange"), ("HUAWEI-MC-TRUNK-MIB", "hwMcTrunkMemberStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMcTrunkNotificationGroup = hwMcTrunkNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: hwMcTrunkNotificationGroup.setDescription('Description.')
mibBuilder.exportSymbols("HUAWEI-MC-TRUNK-MIB", hwMcTrunkPri=hwMcTrunkPri, hwMcTrunkPeerIpAddr=hwMcTrunkPeerIpAddr, hwMcTrunkNotificationGroup=hwMcTrunkNotificationGroup, hwMcTrunkSendPeriod=hwMcTrunkSendPeriod, hwMcTrunkMemberGroup=hwMcTrunkMemberGroup, hwMcTrunkId=hwMcTrunkId, hwMcTrunkObjects=hwMcTrunkObjects, hwMcTrunkPeerReceiveFailTime=hwMcTrunkPeerReceiveFailTime, hwMcTrunkStatus=hwMcTrunkStatus, hwMcTrunkSecurityKey=hwMcTrunkSecurityKey, hwMcTrunkFullCompliance=hwMcTrunkFullCompliance, hwMcTrunkStatusReason=hwMcTrunkStatusReason, hwMcTrunkPeerSystemId=hwMcTrunkPeerSystemId, hwMcTrunkMemberStatus=hwMcTrunkMemberStatus, hwMcTrunkMemberType=hwMcTrunkMemberType, hwMcTrunkTraps=hwMcTrunkTraps, hwMcTrunkStatusChange=hwMcTrunkStatusChange, hwMcTrunkPacketSend=hwMcTrunkPacketSend, hwMcTrunkRowStatus=hwMcTrunkRowStatus, hwMcTrunkRevertTime=hwMcTrunkRevertTime, hwMcTrunkMemberStatusReason=hwMcTrunkMemberStatusReason, hwMcTrunkMemberPhyStatus=hwMcTrunkMemberPhyStatus, hwDatacomm=hwDatacomm, hwMcTrunkTable=hwMcTrunkTable, hwMcTrunkPeerPri=hwMcTrunkPeerPri, hwMcTrunkBfdSessId=hwMcTrunkBfdSessId, hwMcTrunkEntry=hwMcTrunkEntry, hwMcTrunkSecurityKeyType=hwMcTrunkSecurityKeyType, hwMcTrunkGroup=hwMcTrunkGroup, hwMcTrunkMIB=hwMcTrunkMIB, hwMcTrunkMemberRowStatus=hwMcTrunkMemberRowStatus, hwMcTrunkMemberEntry=hwMcTrunkMemberEntry, PYSNMP_MODULE_ID=hwMcTrunkMIB, hwMcTrunkPacketReceive=hwMcTrunkPacketReceive, hwMcTrunkMemberId=hwMcTrunkMemberId, hwMcTrunkConformance=hwMcTrunkConformance, hwMcTrunkSourceIpAddr=hwMcTrunkSourceIpAddr, hwMcTrunkMemberTable=hwMcTrunkMemberTable, hwMcTrunkMemberWorkMode=hwMcTrunkMemberWorkMode, hwMcTrunkResetCounter=hwMcTrunkResetCounter, hwMcTrunkPacketRecDrop=hwMcTrunkPacketRecDrop, hwMcTrunkGroups=hwMcTrunkGroups, hwMcTrunkReceiveFailTimeMultiple=hwMcTrunkReceiveFailTimeMultiple, hwMcTrunkSystemId=hwMcTrunkSystemId, hwMcTrunkCompliances=hwMcTrunkCompliances, hwMcTrunkMemberStatusChange=hwMcTrunkMemberStatusChange, hwMcTrunkMemberParentId=hwMcTrunkMemberParentId, hwMcTrunkPacketSndDrop=hwMcTrunkPacketSndDrop)
